<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_mesh_topology" kind="class" language="C++" prot="public">
    <compoundname>HdMeshTopology</compoundname>
    <basecompoundref prot="public" virt="non-virtual">HdTopology</basecompoundref>
    <includes refid="hd_2mesh_topology_8h" local="no">meshTopology.h</includes>
      <sectiondef kind="user-defined">
      <header>Hole</header>
      <memberdef kind="function" id="class_hd_mesh_topology_1a383554446a5f352f401c45ec092238a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetHoleIndices</definition>
        <argsstring>(VtIntArray const &amp;holeIndices)</argsstring>
        <name>SetHoleIndices</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>holeIndices</declname>
        </param>
        <briefdescription>
<para>Sets hole face indices. </para>
        </briefdescription>
        <detaileddescription>
<para>faceIndices needs to be sorted in ascending order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="145" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a00fa8d8710fdd5ddd7d5d500fbf61df4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetHoleIndices</definition>
        <argsstring>() const</argsstring>
        <name>GetHoleIndices</name>
        <briefdescription>
<para>Returns the hole face indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="150" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="150" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Subdivision</header>
      <memberdef kind="function" id="class_hd_mesh_topology_1ab1b25d1ae9933a6b18e8a6d205215789" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetSubdivTags</definition>
        <argsstring>(PxOsdSubdivTags const &amp;subdivTags)</argsstring>
        <name>SetSubdivTags</name>
        <param>
          <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const &amp;</type>
          <declname>subdivTags</declname>
        </param>
        <briefdescription>
<para>Sets subdivision tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="161" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1ab53f6acc23b47eaafda40d80ecd2a102" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const  &amp;</type>
        <definition>PxOsdSubdivTags const&amp; GetSubdivTags</definition>
        <argsstring>() const</argsstring>
        <name>GetSubdivTags</name>
        <briefdescription>
<para>Returns subdivision tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="166" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="166" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Geometry subsets</header>
      <memberdef kind="function" id="class_hd_mesh_topology_1a95970e1470d806ce25de25c3982d2613" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetGeomSubsets</definition>
        <argsstring>(HdGeomSubsets const &amp;geomSubsets)</argsstring>
        <name>SetGeomSubsets</name>
        <param>
          <type>HdGeomSubsets const &amp;</type>
          <declname>geomSubsets</declname>
        </param>
        <briefdescription>
<para>Sets geometry subsets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="178" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1ad49261ed7f8049a6e492832fe24ba246" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API HdGeomSubsets const  &amp;</type>
        <definition>HD_API HdGeomSubsets const&amp; GetGeomSubsets</definition>
        <argsstring>() const</argsstring>
        <name>GetGeomSubsets</name>
        <briefdescription>
<para>Returns geometry subsets. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="184" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="184" bodyend="186"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Topological invisibility</header>
      <memberdef kind="function" id="class_hd_mesh_topology_1ac73b19bf11eabd0748dcfaf6ab143d14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetInvisiblePoints</definition>
        <argsstring>(VtIntArray const &amp;invisiblePoints)</argsstring>
        <name>SetInvisiblePoints</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>invisiblePoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="195" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a6d6ff23f09e69c7ac4358756f7f3bb14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API VtIntArray const  &amp;</type>
        <definition>HD_API VtIntArray const&amp; GetInvisiblePoints</definition>
        <argsstring>() const</argsstring>
        <name>GetInvisiblePoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="200" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a15ca6155e2f307159eaaab8c3701513c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetInvisibleFaces</definition>
        <argsstring>(VtIntArray const &amp;invisibleFaces)</argsstring>
        <name>SetInvisibleFaces</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>invisibleFaces</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="205" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a1439eb8a3521c48c121f0a021e81294e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API VtIntArray const  &amp;</type>
        <definition>HD_API VtIntArray const&amp; GetInvisibleFaces</definition>
        <argsstring>() const</argsstring>
        <name>GetInvisibleFaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="210" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="210" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hd_mesh_topology_1aebcae3405a3201b765f51252ac7294de" prot="protected" static="no" mutable="no">
        <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref></type>
        <definition>PxOsdMeshTopology _topology</definition>
        <argsstring></argsstring>
        <name>_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="216" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_mesh_topology_1afdeb5565727bc9699e537d1ae0a22464" prot="protected" static="no" mutable="no">
        <type>HdGeomSubsets</type>
        <definition>HdGeomSubsets _geomSubsets</definition>
        <argsstring></argsstring>
        <name>_geomSubsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="217" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_mesh_topology_1a90891c89315a939555acaf3e6dc59108" prot="protected" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _invisiblePoints</definition>
        <argsstring></argsstring>
        <name>_invisiblePoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="218" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_mesh_topology_1a29117719a7c41fe005cc898fbdf1e68d" prot="protected" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _invisibleFaces</definition>
        <argsstring></argsstring>
        <name>_invisibleFaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="219" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_mesh_topology_1a53e70e5086b3c7786118fb7fbff88e8a" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _refineLevel</definition>
        <argsstring></argsstring>
        <name>_refineLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="220" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_mesh_topology_1afb872c7e66a92ebf6de3ee3521995b54" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _numPoints</definition>
        <argsstring></argsstring>
        <name>_numPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="221" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_mesh_topology_1a4798448076d31006e55b13bc6a7c6e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdMeshTopology</definition>
        <argsstring>()</argsstring>
        <name>HdMeshTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a805234bd48c87d7365aa6b836f6e46a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdMeshTopology</definition>
        <argsstring>(const HdMeshTopology &amp;, int refineLevel=0)</argsstring>
        <name>HdMeshTopology</name>
        <param>
          <type>const <ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref> &amp;</type>
        </param>
        <param>
          <type>int</type>
          <declname>refineLevel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a691fd5845dbb88dc11607a002a973c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdMeshTopology</definition>
        <argsstring>(const PxOsdMeshTopology &amp;, int refineLevel=0)</argsstring>
        <name>HdMeshTopology</name>
        <param>
          <type>const <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;</type>
        </param>
        <param>
          <type>int</type>
          <declname>refineLevel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a8c1ebca84eb270fef08e6ad009fc43a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdMeshTopology</definition>
        <argsstring>(const TfToken &amp;scheme, const TfToken &amp;orientation, const VtIntArray &amp;faceVertexCounts, const VtIntArray &amp;faceVertexIndices, int refineLevel=0)</argsstring>
        <name>HdMeshTopology</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>scheme</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>faceVertexCounts</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>refineLevel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1aec7eded1ba3bd0d362882254ce86738c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdMeshTopology</definition>
        <argsstring>(const TfToken &amp;scheme, const TfToken &amp;orientation, const VtIntArray &amp;faceVertexCounts, const VtIntArray &amp;faceVertexIndices, const VtIntArray &amp;holeIndices, int refineLevel=0)</argsstring>
        <name>HdMeshTopology</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>scheme</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>faceVertexCounts</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>holeIndices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>refineLevel</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a4b072a5bc7dacdb11db693050d0613b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API</type>
        <definition>virtual HD_API ~HdMeshTopology</definition>
        <argsstring>()</argsstring>
        <name>~HdMeshTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a9a810213c0d1b76c1ceff2624163ea2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref> &amp;</type>
        <definition>HD_API HdMeshTopology&amp; operator=</definition>
        <argsstring>(const HdMeshTopology &amp;copy)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref> &amp;</type>
          <declname>copy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a7b098133f7710eec168be539d1869934" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const  &amp;</type>
        <definition>PxOsdMeshTopology const&amp; GetPxOsdMeshTopology</definition>
        <argsstring>() const</argsstring>
        <name>GetPxOsdMeshTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="86" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a21f3be81f0b971f6c50c4bd510821a27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API int</type>
        <definition>HD_API int GetNumFaces</definition>
        <argsstring>() const</argsstring>
        <name>GetNumFaces</name>
        <briefdescription>
<para>Returns the num faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a890b029f3b4002bc12710512764db6b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API int</type>
        <definition>HD_API int GetNumFaceVaryings</definition>
        <argsstring>() const</argsstring>
        <name>GetNumFaceVaryings</name>
        <briefdescription>
<para>Returns the num facevarying primvars. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1af9fdfebd63b0916ae0ca34d23cf9f22c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API int</type>
        <definition>HD_API int GetNumPoints</definition>
        <argsstring>() const</argsstring>
        <name>GetNumPoints</name>
        <briefdescription>
<para>Returns the num points of the topology vert indices array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1ad474311b2ffe576f67c10dd26e323d6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const</type>
        <definition>TfToken const GetScheme</definition>
        <argsstring>() const</argsstring>
        <name>GetScheme</name>
        <briefdescription>
<para>Returns the subdivision scheme. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="107" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1ac5122273453a96b045feb6bfe7c69947" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetRefineLevel</definition>
        <argsstring>() const</argsstring>
        <name>GetRefineLevel</name>
        <briefdescription>
<para>Returns the refinement level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="112" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a088848ad7316c9375087d1acf65a8b0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetFaceVertexCounts</definition>
        <argsstring>() const</argsstring>
        <name>GetFaceVertexCounts</name>
        <briefdescription>
<para>Returns face vertex counts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="117" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a249c22a2cdd63ef7ac43d34f0c4da57d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetFaceVertexIndices</definition>
        <argsstring>() const</argsstring>
        <name>GetFaceVertexIndices</name>
        <briefdescription>
<para>Returns face vertex indics. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="122" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a030223af99c7ace7492954787327c4ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>TfToken const&amp; GetOrientation</definition>
        <argsstring>() const</argsstring>
        <name>GetOrientation</name>
        <briefdescription>
<para>Returns orientation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="127" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1ad3b79308092e0867c3851247a01cd55b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API ID</type>
        <definition>virtual HD_API ID ComputeHash</definition>
        <argsstring>() const</argsstring>
        <name>ComputeHash</name>
        <briefdescription>
<para>Returns the hash value of this topology to be used for instancing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a8af0857bb866af9550f0a6c261744ec7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(HdMeshTopology const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality check between two mesh topologies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="137" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_mesh_topology_1ae3fc4a607766854f75e9f6ca9a296645" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>static HD_API bool IsEnabledAdaptive</definition>
        <argsstring>()</argsstring>
        <name>IsEnabledAdaptive</name>
        <briefdescription>
<para>Returns whether adaptive subdivision is enabled or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_topology_1a5bf6544f8aa2d3f19b944620e58cea1a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API int</type>
        <definition>static HD_API int ComputeNumPoints</definition>
        <argsstring>(VtIntArray const &amp;verts)</argsstring>
        <name>ComputeNumPoints</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>verts</declname>
        </param>
        <briefdescription>
<para>Returns the num points by looking vert indices array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshTopology.h" line="104" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Topology data for meshes. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref> holds the raw input topology data for a mesh and is capable of computing derivative topological data (such as indices or subdivision stencil tables and patch tables). </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2276">
        <label>PxOsdMeshTopology</label>
        <link refid="class_px_osd_mesh_topology"/>
      </node>
      <node id="2275">
        <label>HdMeshTopology</label>
        <link refid="class_hd_mesh_topology"/>
        <childnode refid="2276" relation="usage">
          <edgelabel>_topology</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/meshTopology.h" line="55" column="1" bodyfile="pxr/imaging/hd/meshTopology.h" bodystart="55" bodyend="222"/>
    <listofallmembers>
      <member refid="class_hd_mesh_topology_1afdeb5565727bc9699e537d1ae0a22464" prot="protected" virt="non-virtual"><scope>HdMeshTopology</scope><name>_geomSubsets</name></member>
      <member refid="class_hd_mesh_topology_1a29117719a7c41fe005cc898fbdf1e68d" prot="protected" virt="non-virtual"><scope>HdMeshTopology</scope><name>_invisibleFaces</name></member>
      <member refid="class_hd_mesh_topology_1a90891c89315a939555acaf3e6dc59108" prot="protected" virt="non-virtual"><scope>HdMeshTopology</scope><name>_invisiblePoints</name></member>
      <member refid="class_hd_mesh_topology_1afb872c7e66a92ebf6de3ee3521995b54" prot="protected" virt="non-virtual"><scope>HdMeshTopology</scope><name>_numPoints</name></member>
      <member refid="class_hd_mesh_topology_1a53e70e5086b3c7786118fb7fbff88e8a" prot="protected" virt="non-virtual"><scope>HdMeshTopology</scope><name>_refineLevel</name></member>
      <member refid="class_hd_mesh_topology_1aebcae3405a3201b765f51252ac7294de" prot="protected" virt="non-virtual"><scope>HdMeshTopology</scope><name>_topology</name></member>
      <member refid="class_hd_mesh_topology_1ad3b79308092e0867c3851247a01cd55b" prot="public" virt="virtual"><scope>HdMeshTopology</scope><name>ComputeHash</name></member>
      <member refid="class_hd_mesh_topology_1a5bf6544f8aa2d3f19b944620e58cea1a" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>ComputeNumPoints</name></member>
      <member refid="class_hd_mesh_topology_1a088848ad7316c9375087d1acf65a8b0d" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetFaceVertexCounts</name></member>
      <member refid="class_hd_mesh_topology_1a249c22a2cdd63ef7ac43d34f0c4da57d" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetFaceVertexIndices</name></member>
      <member refid="class_hd_mesh_topology_1ad49261ed7f8049a6e492832fe24ba246" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetGeomSubsets</name></member>
      <member refid="class_hd_mesh_topology_1a00fa8d8710fdd5ddd7d5d500fbf61df4" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetHoleIndices</name></member>
      <member refid="class_hd_mesh_topology_1a1439eb8a3521c48c121f0a021e81294e" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetInvisibleFaces</name></member>
      <member refid="class_hd_mesh_topology_1a6d6ff23f09e69c7ac4358756f7f3bb14" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetInvisiblePoints</name></member>
      <member refid="class_hd_mesh_topology_1a21f3be81f0b971f6c50c4bd510821a27" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetNumFaces</name></member>
      <member refid="class_hd_mesh_topology_1a890b029f3b4002bc12710512764db6b6" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetNumFaceVaryings</name></member>
      <member refid="class_hd_mesh_topology_1af9fdfebd63b0916ae0ca34d23cf9f22c" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetNumPoints</name></member>
      <member refid="class_hd_mesh_topology_1a030223af99c7ace7492954787327c4ab" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetOrientation</name></member>
      <member refid="class_hd_mesh_topology_1a7b098133f7710eec168be539d1869934" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetPxOsdMeshTopology</name></member>
      <member refid="class_hd_mesh_topology_1ac5122273453a96b045feb6bfe7c69947" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetRefineLevel</name></member>
      <member refid="class_hd_mesh_topology_1ad474311b2ffe576f67c10dd26e323d6f" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetScheme</name></member>
      <member refid="class_hd_mesh_topology_1ab53f6acc23b47eaafda40d80ecd2a102" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>GetSubdivTags</name></member>
      <member refid="class_hd_mesh_topology_1a4798448076d31006e55b13bc6a7c6e2d" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>HdMeshTopology</name></member>
      <member refid="class_hd_mesh_topology_1a805234bd48c87d7365aa6b836f6e46a0" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>HdMeshTopology</name></member>
      <member refid="class_hd_mesh_topology_1a691fd5845dbb88dc11607a002a973c04" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>HdMeshTopology</name></member>
      <member refid="class_hd_mesh_topology_1a8c1ebca84eb270fef08e6ad009fc43a5" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>HdMeshTopology</name></member>
      <member refid="class_hd_mesh_topology_1aec7eded1ba3bd0d362882254ce86738c" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>HdMeshTopology</name></member>
      <member refid="class_hd_topology_1a5b36bbe37d031405ef40a69f86da4e4d" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>HdTopology</name></member>
      <member refid="class_hd_topology_1affd566ae50348dcbfb42805843a2d59e" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>ID</name></member>
      <member refid="class_hd_mesh_topology_1ae3fc4a607766854f75e9f6ca9a296645" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>IsEnabledAdaptive</name></member>
      <member refid="class_hd_mesh_topology_1a9a810213c0d1b76c1ceff2624163ea2c" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>operator=</name></member>
      <member refid="class_hd_mesh_topology_1a8af0857bb866af9550f0a6c261744ec7" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>operator==</name></member>
      <member refid="class_hd_mesh_topology_1a95970e1470d806ce25de25c3982d2613" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>SetGeomSubsets</name></member>
      <member refid="class_hd_mesh_topology_1a383554446a5f352f401c45ec092238a6" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>SetHoleIndices</name></member>
      <member refid="class_hd_mesh_topology_1a15ca6155e2f307159eaaab8c3701513c" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>SetInvisibleFaces</name></member>
      <member refid="class_hd_mesh_topology_1ac73b19bf11eabd0748dcfaf6ab143d14" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>SetInvisiblePoints</name></member>
      <member refid="class_hd_mesh_topology_1ab1b25d1ae9933a6b18e8a6d205215789" prot="public" virt="non-virtual"><scope>HdMeshTopology</scope><name>SetSubdivTags</name></member>
      <member refid="class_hd_mesh_topology_1a4b072a5bc7dacdb11db693050d0613b5" prot="public" virt="virtual"><scope>HdMeshTopology</scope><name>~HdMeshTopology</name></member>
      <member refid="class_hd_topology_1a4ab93b79c07b99a7f72ac61fb5558329" prot="public" virt="virtual"><scope>HdMeshTopology</scope><name>~HdTopology</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
