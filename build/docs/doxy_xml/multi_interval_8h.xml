<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="multi_interval_8h" kind="file" language="C++">
    <compoundname>multiInterval.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="interval_8h" local="yes">pxr/base/gf/interval.h</includes>
    <includes refid="base_2gf_2api_8h" local="yes">pxr/base/gf/api.h</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includedby refid="type_headers_8h" local="yes">pxr/base/vt/typeHeaders.h</includedby>
    <incdepgraph>
      <node id="32242">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="32243" relation="include">
        </childnode>
        <childnode refid="32244" relation="include">
        </childnode>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32241" relation="include">
        </childnode>
        <childnode refid="32245" relation="include">
        </childnode>
      </node>
      <node id="32248">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="32241" relation="include">
        </childnode>
      </node>
      <node id="32266">
        <label>limits</label>
      </node>
      <node id="32264">
        <label>float.h</label>
      </node>
      <node id="32244">
        <label>cstdint</label>
      </node>
      <node id="32239">
        <label>pxr/base/gf/math.h</label>
        <link refid="gf_2math_8h"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32240" relation="include">
        </childnode>
        <childnode refid="32247" relation="include">
        </childnode>
        <childnode refid="32249" relation="include">
        </childnode>
        <childnode refid="32250" relation="include">
        </childnode>
      </node>
      <node id="32246">
        <label>cmath</label>
      </node>
      <node id="32252">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32253" relation="include">
        </childnode>
        <childnode refid="32240" relation="include">
        </childnode>
        <childnode refid="32242" relation="include">
        </childnode>
        <childnode refid="32254" relation="include">
        </childnode>
        <childnode refid="32255" relation="include">
        </childnode>
      </node>
      <node id="32238">
        <label>pxr/base/gf/interval.h</label>
        <link refid="interval_8h"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32239" relation="include">
        </childnode>
        <childnode refid="32247" relation="include">
        </childnode>
        <childnode refid="32251" relation="include">
        </childnode>
        <childnode refid="32264" relation="include">
        </childnode>
        <childnode refid="32265" relation="include">
        </childnode>
        <childnode refid="32266" relation="include">
        </childnode>
      </node>
      <node id="32258">
        <label>string</label>
      </node>
      <node id="32259">
        <label>map</label>
      </node>
      <node id="32243">
        <label>cinttypes</label>
      </node>
      <node id="32237">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="32253">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32241" relation="include">
        </childnode>
      </node>
      <node id="32247">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="32248" relation="include">
        </childnode>
      </node>
      <node id="32236">
        <label>pxr/base/gf/multiInterval.h</label>
        <link refid="multi_interval_8h"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32238" relation="include">
        </childnode>
        <childnode refid="32247" relation="include">
        </childnode>
        <childnode refid="32265" relation="include">
        </childnode>
        <childnode refid="32261" relation="include">
        </childnode>
        <childnode refid="32263" relation="include">
        </childnode>
      </node>
      <node id="32245">
        <label>sys/types.h</label>
      </node>
      <node id="32240">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32241" relation="include">
        </childnode>
        <childnode refid="32242" relation="include">
        </childnode>
        <childnode refid="32246" relation="include">
        </childnode>
      </node>
      <node id="32263">
        <label>vector</label>
      </node>
      <node id="32256">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="32248" relation="include">
        </childnode>
      </node>
      <node id="32255">
        <label>utility</label>
      </node>
      <node id="32241">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="32251">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32252" relation="include">
        </childnode>
        <childnode refid="32256" relation="include">
        </childnode>
        <childnode refid="32257" relation="include">
        </childnode>
        <childnode refid="32258" relation="include">
        </childnode>
        <childnode refid="32259" relation="include">
        </childnode>
        <childnode refid="32260" relation="include">
        </childnode>
        <childnode refid="32261" relation="include">
        </childnode>
        <childnode refid="32262" relation="include">
        </childnode>
        <childnode refid="32250" relation="include">
        </childnode>
        <childnode refid="32255" relation="include">
        </childnode>
        <childnode refid="32263" relation="include">
        </childnode>
      </node>
      <node id="32254">
        <label>math.h</label>
      </node>
      <node id="32265">
        <label>iosfwd</label>
      </node>
      <node id="32250">
        <label>type_traits</label>
      </node>
      <node id="32261">
        <label>set</label>
      </node>
      <node id="32257">
        <label>cstring</label>
      </node>
      <node id="32249">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="32237" relation="include">
        </childnode>
        <childnode refid="32250" relation="include">
        </childnode>
      </node>
      <node id="32260">
        <label>memory</label>
      </node>
      <node id="32262">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="32267">
        <label>pxr/base/gf/multiInterval.h</label>
        <link refid="multi_interval_8h"/>
        <childnode refid="32268" relation="include">
        </childnode>
      </node>
      <node id="32268">
        <label>pxr/base/vt/typeHeaders.h</label>
        <link refid="type_headers_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_gf_multi_interval" prot="public">GfMultiInterval</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__gf___debugging_output_1gaf7a0a6bf404ecddccf291418d4cf48ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API std::ostream &amp;</type>
        <definition>GF_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const GfMultiInterval &amp;s)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Output a <ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/multiInterval.h" line="179" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_GF_MULTI_INTERVAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_GF_MULTI_INTERVAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interval_8h" kindref="compound">pxr/base/gf/interval.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/gf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_gf_multi_interval" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::set&lt;GfInterval&gt;<sp/>Set;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Set::const_iterator<sp/>const_iterator;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Set::const_iterator<sp/>iterator;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/>&amp;i);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;GfInterval&gt;<sp/>&amp;intervals);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set<sp/>==<sp/>that._set;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>that);<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set<sp/>&lt;<sp/>that._set;<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;<sp/>that);<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(that<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;that)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(that<sp/>&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1aefc52762a2881f051473c2b98b021a5b" kindref="member">Hash</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;mi)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mi.<ref refid="class_gf_multi_interval_1aefc52762a2881f051473c2b98b021a5b" kindref="member">Hash</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"></codeline>
<codeline lineno="83" refid="class_gf_multi_interval_1a9a424dffa6a783b1e27e49e080337e2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a9a424dffa6a783b1e27e49e080337e2e" kindref="member">IsEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set.empty();<sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="class_gf_multi_interval_1ac60c64f5ad6d219d35070b997174ecd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1ac60c64f5ad6d219d35070b997174ecd2" kindref="member">GetSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set.size();<sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/><ref refid="class_gf_multi_interval_1ab74936ec3fc5e4d3c50c69c1eba94de7" kindref="member">GetBounds</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a4f36a6dda4aace0f7d4c4937b0184bcd" kindref="member">Contains</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a4f36a6dda4aace0f7d4c4937b0184bcd" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/>&amp;<sp/>i)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a4f36a6dda4aace0f7d4c4937b0184bcd" kindref="member">Contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;<sp/>s)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"></codeline>
<codeline lineno="106"></codeline>
<codeline lineno="108" refid="class_gf_multi_interval_1a2a21f9a8636d2d803425ed459753fbc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a2a21f9a8636d2d803425ed459753fbc0" kindref="member">Clear</ref>()<sp/>{<sp/>_set.clear();<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a108e4daeb1112dedf6e9d6bc2af56afb" kindref="member">Add</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/>&amp;<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a108e4daeb1112dedf6e9d6bc2af56afb" kindref="member">Add</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;s<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a6a69352605f2b350ca121ed77516d971" kindref="member">ArithmeticAdd</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/>&amp;i<sp/>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1ab7e3759002e792ca2802ca5596e980fc" kindref="member">Remove</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/>&amp;<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1ab7e3759002e792ca2802ca5596e980fc" kindref="member">Remove</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;s<sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Intersect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_interval" kindref="compound">GfInterval</ref><sp/>&amp;<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Intersect(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;s<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/><ref refid="class_gf_multi_interval_1a24f2bbc915a290e511c38177f2d5263f" kindref="member">GetComplement</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set.begin();<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_set.end();<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/><ref refid="class_gf_multi_interval_1a2cb107f221d48925017b6ed74f20f2a2" kindref="member">lower_bound</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/><ref refid="class_gf_multi_interval_1a5199069065f76579f3637b5233d68d9a" kindref="member">upper_bound</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/><ref refid="class_gf_multi_interval_1a0bba7680d899bfc031d733814e9ce70c" kindref="member">GetNextNonContainingInterval</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/><ref refid="class_gf_multi_interval_1a08bf878d0f1c338d18f25d2a2a869185" kindref="member">GetPriorNonContainingInterval</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>GF_API<sp/>const_iterator<sp/><ref refid="class_gf_multi_interval_1a92df1cdfcd2c60343c517db87a415261" kindref="member">GetContainingInterval</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"></codeline>
<codeline lineno="164" refid="class_gf_multi_interval_1ae0a5922ac36cf66d8209a8ee754a2de9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/><ref refid="class_gf_multi_interval_1ae0a5922ac36cf66d8209a8ee754a2de9" kindref="member">GetFullInterval</ref>()<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref>(<ref refid="class_gf_interval_1a139c5f097295af11a0b00961a32ea618" kindref="member">GfInterval::GetFullInterval</ref>());</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_gf_multi_interval_1a1bbf5ecd573a294ca4824bbcb9d89665" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval_1a1bbf5ecd573a294ca4824bbcb9d89665" kindref="member">swap</ref>(<ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;other)<sp/>{<sp/>_set.swap(other._set);<sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_AssertInvariants()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>Set<sp/>_set;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">GF_API<sp/>std::ostream<sp/>&amp;<sp/><ref refid="group__group__gf___debugging_output_1gaf7a0a6bf404ecddccf291418d4cf48ee" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_multi_interval" kindref="compound">GfMultiInterval</ref><sp/>&amp;s);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_GF_MULTI_INTERVAL_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/gf/multiInterval.h"/>
  </compounddef>
</doxygen>
