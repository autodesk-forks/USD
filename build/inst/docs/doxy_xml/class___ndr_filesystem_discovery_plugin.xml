<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class___ndr_filesystem_discovery_plugin" kind="class" language="C++" prot="public" final="yes">
    <compoundname>_NdrFilesystemDiscoveryPlugin</compoundname>
    <basecompoundref refid="class_ndr_discovery_plugin" prot="public" virt="non-virtual">NdrDiscoveryPlugin</basecompoundref>
    <includes refid="filesystem_discovery_8h" local="no">filesystemDiscovery.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class___ndr_filesystem_discovery_plugin_1a362ac8a8d9262770de50d96b6f940ce5" prot="public" static="no">
        <type>std::function&lt; bool(<ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref> &amp;)&gt;</type>
        <definition>using Filter =  std::function&lt;bool(NdrNodeDiscoveryResult&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>Filter</name>
        <briefdescription>
<para>A filter for discovered nodes. </para>
        </briefdescription>
        <detaileddescription>
<para>If the function returns false then the discovered node is discarded. Otherwise the function can modify the discovery result. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="67" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class___ndr_filesystem_discovery_plugin_1a35386d6ed3fa70efbd04b3edfd4b959a" prot="private" static="no" mutable="no">
        <type>NdrStringVec</type>
        <definition>NdrStringVec _searchPaths</definition>
        <argsstring></argsstring>
        <name>_searchPaths</name>
        <briefdescription>
<para>The paths (abs) indicating where the plugin should search for nodes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="94" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class___ndr_filesystem_discovery_plugin_1a0b0ff36613078ab346c93d3af961daa2" prot="private" static="no" mutable="no">
        <type>NdrStringVec</type>
        <definition>NdrStringVec _allowedExtensions</definition>
        <argsstring></argsstring>
        <name>_allowedExtensions</name>
        <briefdescription>
<para>The extensions (excluding leading &apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>&apos;) that signify a valid node file. The extension will be used as the <computeroutput>type</computeroutput> member in the resulting <computeroutput><ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref></computeroutput> instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="99" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class___ndr_filesystem_discovery_plugin_1a7cfdf729ece8b4d45ddfa9161a392a11" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _followSymlinks</definition>
        <argsstring></argsstring>
        <name>_followSymlinks</name>
        <briefdescription>
<para>Whether or not to follow symlinks while scanning directories for files. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="102" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class___ndr_filesystem_discovery_plugin_1ae1824a1a8aec045c66fb9f2ecaf0915f" prot="private" static="no" mutable="no">
        <type><ref refid="class___ndr_filesystem_discovery_plugin_1a362ac8a8d9262770de50d96b6f940ce5" kindref="member">Filter</ref></type>
        <definition>Filter _filter</definition>
        <argsstring></argsstring>
        <name>_filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="105" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class___ndr_filesystem_discovery_plugin_1a0a759451006798122f590bb481d97a97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API _NdrFilesystemDiscoveryPlugin</definition>
        <argsstring>()</argsstring>
        <name>_NdrFilesystemDiscoveryPlugin</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class___ndr_filesystem_discovery_plugin_1a18ea66be1d4162e294caae573fe9f7e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API _NdrFilesystemDiscoveryPlugin</definition>
        <argsstring>(Filter filter)</argsstring>
        <name>_NdrFilesystemDiscoveryPlugin</name>
        <param>
          <type><ref refid="class___ndr_filesystem_discovery_plugin_1a362ac8a8d9262770de50d96b6f940ce5" kindref="member">Filter</ref></type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para><ref refid="class___ndr_filesystem_discovery_plugin_1aae964c361ac5778200b944aa949fa1f8" kindref="member">DiscoverNodes()</ref> will pass each result to the given function for modification. </para>
        </briefdescription>
        <detaileddescription>
<para>If the function returns false then the result is discarded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class___ndr_filesystem_discovery_plugin_1ae7c893f4007f788f6275163769691259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API ~_NdrFilesystemDiscoveryPlugin</definition>
        <argsstring>()</argsstring>
        <name>~_NdrFilesystemDiscoveryPlugin</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="81" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class___ndr_filesystem_discovery_plugin_1aae964c361ac5778200b944aa949fa1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NDR_API NdrNodeDiscoveryResultVec</type>
        <definition>NDR_API NdrNodeDiscoveryResultVec DiscoverNodes</definition>
        <argsstring>(const Context &amp;) override</argsstring>
        <name>DiscoverNodes</name>
        <reimplements refid="class_ndr_discovery_plugin_1a221bced0dd2bddf368977672bd86e8ae">DiscoverNodes</reimplements>
        <param>
          <type>const <ref refid="class_ndr_discovery_plugin_context" kindref="compound">Context</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Discover all of the nodes that appear within the the search paths provided and match the extensions provided. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class___ndr_filesystem_discovery_plugin_1a9ede5657d6aa930d8e2457471436f1bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>NDR_API const NdrStringVec &amp;</type>
        <definition>NDR_API const NdrStringVec&amp; GetSearchURIs</definition>
        <argsstring>() const override</argsstring>
        <name>GetSearchURIs</name>
        <reimplements refid="class_ndr_discovery_plugin_1ade58587e7e3b410e661f257ce5fc8e1e">GetSearchURIs</reimplements>
        <briefdescription>
<para>Gets the paths that this plugin is searching for nodes in. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscovery.h" line="90" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="90" bodyend="90"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Discovers nodes on the filesystem. </para>
    </briefdescription>
    <detaileddescription>
<para>The provided search paths are walked to find files that have certain extensions. If a file with a matching extension is found, it is turned into a <computeroutput><ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref></computeroutput> and will be parsed into a node when its information is accessed.</para>
<para>Parameters for this plugin are specified via environment variables (which must be set before the library is loaded):</para>
<para>PXR_NDR_FS_PLUGIN_SEARCH_PATHS - The paths that should be searched, recursively, for files that represent nodes. Paths should be separated by either a &apos;:&apos; or a &apos;;&apos; depending on your platform (it should mimic the PATH env var on your platform). See ARCH_PATH_LIST_SEP.</para>
<para>PXR_NDR_FS_PLUGIN_ALLOWED_EXTS - The extensions on files that define nodes. Do not include the leading &quot;.&quot;. Extensions should be separated by a colon.</para>
<para>PXR_NDR_FS_PLUGIN_FOLLOW_SYMLINKS - Whether symlinks should be followed while walking the search paths. Set to &quot;true&quot; (case sensitive) if they should be followed. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="317">
        <label>NdrDiscoveryPlugin</label>
        <link refid="class_ndr_discovery_plugin"/>
        <childnode refid="318" relation="public-inheritance">
        </childnode>
        <childnode refid="319" relation="public-inheritance">
        </childnode>
      </node>
      <node id="319">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="316">
        <label>_NdrFilesystemDiscoveryPlugin</label>
        <link refid="class___ndr_filesystem_discovery_plugin"/>
        <childnode refid="317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="318">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="321">
        <label>NdrDiscoveryPlugin</label>
        <link refid="class_ndr_discovery_plugin"/>
        <childnode refid="322" relation="public-inheritance">
        </childnode>
        <childnode refid="323" relation="public-inheritance">
        </childnode>
      </node>
      <node id="323">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="320">
        <label>_NdrFilesystemDiscoveryPlugin</label>
        <link refid="class___ndr_filesystem_discovery_plugin"/>
        <childnode refid="321" relation="public-inheritance">
        </childnode>
      </node>
      <node id="322">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/ndr/filesystemDiscovery.h" line="62" column="1" bodyfile="pxr/usd/ndr/filesystemDiscovery.h" bodystart="61" bodyend="106"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a0b0ff36613078ab346c93d3af961daa2" prot="private" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_allowedExtensions</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1ae1824a1a8aec045c66fb9f2ecaf0915f" prot="private" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_filter</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a7cfdf729ece8b4d45ddfa9161a392a11" prot="private" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_followSymlinks</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_HasRemnant</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a0a759451006798122f590bb481d97a97" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_NdrFilesystemDiscoveryPlugin</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a18ea66be1d4162e294caae573fe9f7e0" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_NdrFilesystemDiscoveryPlugin</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_Register</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a35386d6ed3fa70efbd04b3edfd4b959a" prot="private" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>_searchPaths</name></member>
      <member refid="class_ndr_discovery_plugin_1a0a83616fbb4b50e88f5e5efe91e8855f" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>Context</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1aae964c361ac5778200b944aa949fa1f8" prot="public" virt="virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>DiscoverNodes</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>EnableNotification2</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a362ac8a8d9262770de50d96b6f940ce5" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>Filter</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>GetCurrentCount</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>GetRefCount</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1a9ede5657d6aa930d8e2457471436f1bd" prot="public" virt="virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>GetSearchURIs</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>IsUnique</name></member>
      <member refid="class_ndr_discovery_plugin_1a9ec4274c900f2104436055af1d3592cc" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>NdrDiscoveryPlugin</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>operator=</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class___ndr_filesystem_discovery_plugin_1ae7c893f4007f788f6275163769691259" prot="public" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>~_NdrFilesystemDiscoveryPlugin</name></member>
      <member refid="class_ndr_discovery_plugin_1abab8119a311293cba8d457244b94bc5f" prot="public" virt="virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>~NdrDiscoveryPlugin</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>_NdrFilesystemDiscoveryPlugin</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
