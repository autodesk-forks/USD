<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec2f" kind="class" language="C++" prot="public">
    <compoundname>GfVec2f</compoundname>
    <includes refid="vec2f_8h" local="no">vec2f.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec2f_1ad5c19ca4f47d3f8ec21232a5af2624e5" prot="public" static="no">
        <type>float</type>
        <definition>typedef float ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="66" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec2f_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="67" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec2f_1af5aee0060fc4dc8341c63a31ebb22db9" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float _data[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="274" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec2f_1a0a39dce1e95b99ac041cf5c2a501331d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec2f</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec2f</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1ab0553744fc3fa30d401bb2cbf92a2649" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec2f</definition>
        <argsstring>(float value)</argsstring>
        <name>GfVec2f</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="73" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a0c7ae6aaa631d67bb2599c62fa3b9b9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec2f</definition>
        <argsstring>(float s0, float s1)</argsstring>
        <name>GfVec2f</name>
        <param>
          <type>float</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="79" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a66a0bec2d7c3e5c8e0bc03d82efaafe9" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec2f</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec2f</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="86" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a602133408a9b0b1166c8a5891ae9d4c3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec2f</definition>
        <argsstring>(class GfVec2d const &amp;other)</argsstring>
        <name>GfVec2f</name>
        <param>
          <type>class <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="92" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a0b9192bc281f77d4c604ddb31816456c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec2f</definition>
        <argsstring>(class GfVec2h const &amp;other)</argsstring>
        <name>GfVec2f</name>
        <param>
          <type>class <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="95" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="297" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a870dbc7973ddb2250281e788b15dd696" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec2f</definition>
        <argsstring>(class GfVec2i const &amp;other)</argsstring>
        <name>GfVec2f</name>
        <param>
          <type>class <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="98" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="303" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a84c791f999f2340a9bb2071d264f6fa3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>GfVec2f&amp; Set</definition>
        <argsstring>(float s0, float s1)</argsstring>
        <name>Set</name>
        <param>
          <type>float</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="123" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1af7741955e662541b00ee549faabc0840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>GfVec2f&amp; Set</definition>
        <argsstring>(float const *a)</argsstring>
        <name>Set</name>
        <param>
          <type>float const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="130" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a092a81cbd7a32351745f0572dc8fbf36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float const  *</type>
        <definition>float const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="135" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a0983a49fcb2351e470bd415722cc4682" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float *</type>
        <definition>float* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="136" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1ab6c4d1521e2c51f3e4ceeeb251442d76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float const  *</type>
        <definition>float const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="137" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a23ff646cd6dda6de7c2b8d2386b34867" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float const  &amp;</type>
        <definition>float const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="140" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a7ee7f9f981c98bb13ef2e2b72d6a6229" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="141" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a99ff42203803d20b70ba44f44296dc65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec2f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="149" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1ad19155a307a1973f1d34da132a3fd9d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec2f const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="153" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1abe23630d3b474e98bea0560d19f88768" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a3a8e084cab21fe1eafa8a07947e7410e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1af5390cbf370d0dade5648577a48b3c44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a8d451fd0fac4523613de17098be8d72a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="169" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a49d79b88010b638c33ec7bf93631ada7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>GfVec2f&amp; operator+=</definition>
        <argsstring>(GfVec2f const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="174" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a82eb0bc86d55f3f9e51954176929cd90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>GfVec2f&amp; operator-=</definition>
        <argsstring>(GfVec2f const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="184" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1aa25b214ab4d22b204a29ed88218037fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>GfVec2f&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="194" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="194" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a20ae7bbda986ddc6934d69898e199f28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="199" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a7e649c0dd3e3e8534614f5efaf85a386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>GfVec2f&amp; operator/=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="208" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a84faca84ee4d3c432c7edd1c6bc2dc34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f operator/</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="214" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1ae1fee3e5ecb5be34a6b53926f7611cc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float operator *</definition>
        <argsstring>(GfVec2f const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="219" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1aaa60a09b8e3704c4fe9cf568abfd49b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f GetProjection</definition>
        <argsstring>(GfVec2f const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="227" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a280d51e313b99a13b88bbe7f75d88b3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f GetComplement</definition>
        <argsstring>(GfVec2f const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="236" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a9433f15996434a4b1310db27d1837a40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="241" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a71b1c47012e0b48dcddfc2bd1bb3915f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLength</definition>
        <argsstring>() const</argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="246" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a8922235fecf39bf106a1353975dc038e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Normalize</definition>
        <argsstring>(float eps=GF_MIN_VECTOR_LENGTH)</argsstring>
        <name>Normalize</name>
        <param>
          <type>float</type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___basic_math_1gae311f33eddd983e9559c10758908de5b" kindref="member">GF_MIN_VECTOR_LENGTH</ref></defval>
        </param>
        <briefdescription>
<para>Normalizes the vector in place to unit length, returning the length before normalization. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length of the vector is smaller than <computeroutput>eps</computeroutput>, then the vector is set to vector/<computeroutput>eps</computeroutput>. The original length of the vector is returned. See also <ref refid="vec2d_8h_1aba4a21e52a2e2d5a01caaa5021d46e17" kindref="member">GfNormalize()</ref>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="258" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="258" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a105b428d6657d48e8b6490c2c9b9a930" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f GetNormalized</definition>
        <argsstring>(float eps=GF_MIN_VECTOR_LENGTH) const</argsstring>
        <name>GetNormalized</name>
        <param>
          <type>float</type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___basic_math_1gae311f33eddd983e9559c10758908de5b" kindref="member">GF_MIN_VECTOR_LENGTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="266" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="266" bodyend="270"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec2f_1a5d7ad402d9b39de229946674ed87c8c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>static GfVec2f XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="101" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a772621ce5318f0156dd2f15618fe1131" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>static GfVec2f YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="107" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2f_1a51ec4c9c7628de1a4b6707e4713543e3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>static GfVec2f Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="115" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="115" bodyend="120"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec2f_1a222c7dcd36f17e4f5b7090b3592f11b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec2f const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="144" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2f_1a2f96fb1e991596b9a0c03302843175a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f operator+</definition>
        <argsstring>(GfVec2f const &amp;l, GfVec2f const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="179" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2f_1a9c25ac36cf0c5ae86a4b7d9ba5657d59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f operator-</definition>
        <argsstring>(GfVec2f const &amp;l, GfVec2f const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="189" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2f_1ad001b5a358dc19c12fa3c7b5141afb28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f operator *</definition>
        <argsstring>(double s, GfVec2f const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2f.h" line="202" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="202" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 2 float components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 2 components of type <computeroutput>float</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec2f.h" line="63" column="1" bodyfile="pxr/base/gf/vec2f.h" bodystart="62" bodyend="275"/>
    <listofallmembers>
      <member refid="class_gf_vec2f_1af5aee0060fc4dc8341c63a31ebb22db9" prot="private" virt="non-virtual"><scope>GfVec2f</scope><name>_data</name></member>
      <member refid="class_gf_vec2f_1a51ec4c9c7628de1a4b6707e4713543e3" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>Axis</name></member>
      <member refid="class_gf_vec2f_1a092a81cbd7a32351745f0572dc8fbf36" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>data</name></member>
      <member refid="class_gf_vec2f_1a0983a49fcb2351e470bd415722cc4682" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>data</name></member>
      <member refid="class_gf_vec2f_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>dimension</name></member>
      <member refid="class_gf_vec2f_1ab6c4d1521e2c51f3e4ceeeb251442d76" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GetArray</name></member>
      <member refid="class_gf_vec2f_1a280d51e313b99a13b88bbe7f75d88b3d" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec2f_1a71b1c47012e0b48dcddfc2bd1bb3915f" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GetLength</name></member>
      <member refid="class_gf_vec2f_1a9433f15996434a4b1310db27d1837a40" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec2f_1a105b428d6657d48e8b6490c2c9b9a930" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GetNormalized</name></member>
      <member refid="class_gf_vec2f_1aaa60a09b8e3704c4fe9cf568abfd49b1" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec2f_1a0a39dce1e95b99ac041cf5c2a501331d" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1ab0553744fc3fa30d401bb2cbf92a2649" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1a0c7ae6aaa631d67bb2599c62fa3b9b9c" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1a66a0bec2d7c3e5c8e0bc03d82efaafe9" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1a602133408a9b0b1166c8a5891ae9d4c3" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1a0b9192bc281f77d4c604ddb31816456c" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1a870dbc7973ddb2250281e788b15dd696" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>GfVec2f</name></member>
      <member refid="class_gf_vec2f_1a222c7dcd36f17e4f5b7090b3592f11b0" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>hash_value</name></member>
      <member refid="class_gf_vec2f_1a8922235fecf39bf106a1353975dc038e" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>Normalize</name></member>
      <member refid="class_gf_vec2f_1a20ae7bbda986ddc6934d69898e199f28" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator *</name></member>
      <member refid="class_gf_vec2f_1ad001b5a358dc19c12fa3c7b5141afb28" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator *</name></member>
      <member refid="class_gf_vec2f_1ae1fee3e5ecb5be34a6b53926f7611cc4" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator *</name></member>
      <member refid="class_gf_vec2f_1aa25b214ab4d22b204a29ed88218037fe" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator *=</name></member>
      <member refid="class_gf_vec2f_1ad19155a307a1973f1d34da132a3fd9d8" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator!=</name></member>
      <member refid="class_gf_vec2f_1a2f96fb1e991596b9a0c03302843175a3" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator+</name></member>
      <member refid="class_gf_vec2f_1a49d79b88010b638c33ec7bf93631ada7" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator+=</name></member>
      <member refid="class_gf_vec2f_1a8d451fd0fac4523613de17098be8d72a" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator-</name></member>
      <member refid="class_gf_vec2f_1a9c25ac36cf0c5ae86a4b7d9ba5657d59" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator-</name></member>
      <member refid="class_gf_vec2f_1a82eb0bc86d55f3f9e51954176929cd90" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator-=</name></member>
      <member refid="class_gf_vec2f_1a84faca84ee4d3c432c7edd1c6bc2dc34" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator/</name></member>
      <member refid="class_gf_vec2f_1a7e649c0dd3e3e8534614f5efaf85a386" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator/=</name></member>
      <member refid="class_gf_vec2f_1a99ff42203803d20b70ba44f44296dc65" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator==</name></member>
      <member refid="class_gf_vec2f_1abe23630d3b474e98bea0560d19f88768" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator==</name></member>
      <member refid="class_gf_vec2f_1a3a8e084cab21fe1eafa8a07947e7410e" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator==</name></member>
      <member refid="class_gf_vec2f_1af5390cbf370d0dade5648577a48b3c44" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator==</name></member>
      <member refid="class_gf_vec2f_1a23ff646cd6dda6de7c2b8d2386b34867" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator[]</name></member>
      <member refid="class_gf_vec2f_1a7ee7f9f981c98bb13ef2e2b72d6a6229" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>operator[]</name></member>
      <member refid="class_gf_vec2f_1ad5c19ca4f47d3f8ec21232a5af2624e5" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec2f_1a84c791f999f2340a9bb2071d264f6fa3" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>Set</name></member>
      <member refid="class_gf_vec2f_1af7741955e662541b00ee549faabc0840" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>Set</name></member>
      <member refid="class_gf_vec2f_1a5d7ad402d9b39de229946674ed87c8c7" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>XAxis</name></member>
      <member refid="class_gf_vec2f_1a772621ce5318f0156dd2f15618fe1131" prot="public" virt="non-virtual"><scope>GfVec2f</scope><name>YAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
