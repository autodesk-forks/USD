<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_handle" kind="class" language="C++" prot="public">
    <compoundname>HgiHandle</compoundname>
    <includes refid="handle_8h" local="no">handle.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hgi_handle_1a67324c6ce723a91e83a1bf425a192493" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* _ptr</definition>
        <argsstring></argsstring>
        <name>_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="75" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hgi_handle_1a89ec3c1bbfb1e1524b4c2df15f826bc8" prot="private" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t _id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="76" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_handle_1ab67ac643008aa2e01553e53b65fc9a4e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HgiHandle</definition>
        <argsstring>()</argsstring>
        <name>HgiHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="52" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_handle_1aa9e715d327c6545c02ef9f32155a5a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HgiHandle</definition>
        <argsstring>(T *obj, uint64_t id)</argsstring>
        <name>HgiHandle</name>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="53" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_handle_1a3bf5f6ad4bfe2a7e44e584b723c1718e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="56" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_handle_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="61" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_handle_1a0ea5391cb16d8d4224565f353a654467" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* operator -&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator -&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="64" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_handle_1a94aed4569b4421e72ddff43ce77cb6ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const HgiHandle &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiHandle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="66" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_handle_1a2c21904138acc3caf4aa57261a12a44b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const HgiHandle &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiHandle</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/handle.h" line="70" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="70" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handle that contains a hgi object and unique id. </para>
    </briefdescription>
    <detaileddescription>
<para>The unique id is used to compare two handles to guard against pointer aliasing, where the same memory address is used to create a similar object, but it is not actually the same object.</para>
<para>Handle is not a shared or weak_ptr and destruction of the contained object should be explicitely managed by the client via the HgiDestroy*** functions.</para>
<para>If shared/weak ptr functionality is desired, the client creating <ref refid="class_hgi" kindref="compound">Hgi</ref> objects can wrap the returned handle in a shared_ptr. </para>
    </detaileddescription>
    <location file="pxr/imaging/hgi/handle.h" line="50" column="1" bodyfile="pxr/imaging/hgi/handle.h" bodystart="49" bodyend="77"/>
    <listofallmembers>
      <member refid="class_hgi_handle_1a89ec3c1bbfb1e1524b4c2df15f826bc8" prot="private" virt="non-virtual"><scope>HgiHandle</scope><name>_id</name></member>
      <member refid="class_hgi_handle_1a67324c6ce723a91e83a1bf425a192493" prot="private" virt="non-virtual"><scope>HgiHandle</scope><name>_ptr</name></member>
      <member refid="class_hgi_handle_1a3bf5f6ad4bfe2a7e44e584b723c1718e" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>Get</name></member>
      <member refid="class_hgi_handle_1ab67ac643008aa2e01553e53b65fc9a4e" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>HgiHandle</name></member>
      <member refid="class_hgi_handle_1aa9e715d327c6545c02ef9f32155a5a7d" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>HgiHandle</name></member>
      <member refid="class_hgi_handle_1a0ea5391cb16d8d4224565f353a654467" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>operator -&gt;</name></member>
      <member refid="class_hgi_handle_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>operator bool</name></member>
      <member refid="class_hgi_handle_1a2c21904138acc3caf4aa57261a12a44b" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>operator!=</name></member>
      <member refid="class_hgi_handle_1a94aed4569b4421e72ddff43ce77cb6ee" prot="public" virt="non-virtual"><scope>HgiHandle</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
