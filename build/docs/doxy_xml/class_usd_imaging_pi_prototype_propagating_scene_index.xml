<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_imaging_pi_prototype_propagating_scene_index" kind="class" language="C++" prot="public" final="yes">
    <compoundname>UsdImagingPiPrototypePropagatingSceneIndex</compoundname>
    <basecompoundref refid="class_hd_filtering_scene_index_base" prot="public" virt="non-virtual">HdFilteringSceneIndexBase</basecompoundref>
    <includes refid="pi_prototype_propagating_scene_index_8h" local="no">piPrototypePropagatingSceneIndex.h</includes>
    <innerclass refid="class_usd_imaging_pi_prototype_propagating_scene_index_1_1___merging_scene_index_observer" prot="private">UsdImagingPiPrototypePropagatingSceneIndex::_MergingSceneIndexObserver</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_imaging_pi_prototype_propagating_scene_index_1acad24ac14983e911a13d4655882b221a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class _MergingSceneIndexObserver</definition>
        <argsstring></argsstring>
        <name>_MergingSceneIndexObserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="387" column="1" bodyfile="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" bodystart="387" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_imaging_pi_prototype_propagating_scene_index_1a4cebae69026589d2445795442d3b861c" prot="private" static="no" mutable="no">
        <type>UsdImagingPiPrototypePropagatingSceneIndex_Impl::_ContextSharedPtr const</type>
        <definition>UsdImagingPiPrototypePropagatingSceneIndex_Impl:: _ContextSharedPtr const _context</definition>
        <argsstring></argsstring>
        <name>_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="412" column="1" bodyfile="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_pi_prototype_propagating_scene_index_1a86121e7b4f794cccc2c01135754eac9e" prot="private" static="no" mutable="no">
        <type>_MergingSceneIndexObserver</type>
        <definition>_MergingSceneIndexObserver _mergingSceneIndexObserver</definition>
        <argsstring></argsstring>
        <name>_mergingSceneIndexObserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="414" column="1" bodyfile="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_pi_prototype_propagating_scene_index_1a48c24b31b3ebcbb76350ec0feedc33b5" prot="private" static="no" mutable="no">
        <type>UsdImagingPiPrototypePropagatingSceneIndex_Impl::_InstancerObserverUniquePtr const</type>
        <definition>UsdImagingPiPrototypePropagatingSceneIndex_Impl:: _InstancerObserverUniquePtr const _instancerObserver</definition>
        <argsstring></argsstring>
        <name>_instancerObserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="417" column="1" bodyfile="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_imaging_pi_prototype_propagating_scene_index_1aa4db268d391b424ff316571ec9a5bc8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API UsdImagingPiPrototypePropagatingSceneIndexRefPtr</type>
        <definition>static USDIMAGING_API UsdImagingPiPrototypePropagatingSceneIndexRefPtr New</definition>
        <argsstring>(HdSceneIndexBaseRefPtr const &amp;inputSceneIndex)</argsstring>
        <name>New</name>
        <param>
          <type>HdSceneIndexBaseRefPtr const &amp;</type>
          <declname>inputSceneIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="371" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_imaging_pi_prototype_propagating_scene_index_1a4838527885ff92539845ba52882d2a56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="struct_hd_scene_index_prim" kindref="compound">HdSceneIndexPrim</ref></type>
        <definition>USDIMAGING_API HdSceneIndexPrim GetPrim</definition>
        <argsstring>(const SdfPath &amp;primPath) const override</argsstring>
        <name>GetPrim</name>
        <reimplements refid="class_hd_scene_index_base_1abd7fb68e635586e7cabb74b1dd0ddc0e">GetPrim</reimplements>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <briefdescription>
<para>Returns a pair of (prim type, datasource) for the object at <computeroutput>primPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no such object exists, the type will be the empty token and the datasource will be null. This function is expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_pi_prototype_propagating_scene_index_1a33d8098e368b10320813798c8beda58e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API SdfPathVector</type>
        <definition>USDIMAGING_API SdfPathVector GetChildPrimPaths</definition>
        <argsstring>(const SdfPath &amp;primPath) const override</argsstring>
        <name>GetChildPrimPaths</name>
        <reimplements refid="class_hd_scene_index_base_1a15f110d26e84bc60a48a201f8c8315c2">GetChildPrimPaths</reimplements>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <briefdescription>
<para>Returns the paths of all scene index prims located immediately below <computeroutput>primPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to traverse the scene by recursing from <computeroutput><ref refid="class_sdf_path_1a9e77b565c10268c2b55f92559f621606" kindref="member">SdfPath::AbsoluteRootPath()</ref></computeroutput>; such a traversal is expected to give the same set of prims as the flattening of the scene index&apos;s <computeroutput>PrimsAdded</computeroutput> and <computeroutput>PrimsRemoved</computeroutput> messages. This function is expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_pi_prototype_propagating_scene_index_1aba7328b684374d1d8ab01cab79873630" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API std::vector&lt; HdSceneIndexBaseRefPtr &gt;</type>
        <definition>USDIMAGING_API std::vector&lt;HdSceneIndexBaseRefPtr&gt; GetInputScenes</definition>
        <argsstring>() const override</argsstring>
        <name>GetInputScenes</name>
        <reimplements refid="class_hd_filtering_scene_index_base_1a047d22d3b4fb695ff1973a7c045349f7">GetInputScenes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="381" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_imaging_pi_prototype_propagating_scene_index_1acf783aaf3fa326e5cfd55d0f12515e60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdImagingPiPrototypePropagatingSceneIndex</definition>
        <argsstring>(const HdSceneIndexBaseRefPtr &amp;inputSceneIndex)</argsstring>
        <name>UsdImagingPiPrototypePropagatingSceneIndex</name>
        <param>
          <type>const HdSceneIndexBaseRefPtr &amp;</type>
          <declname>inputSceneIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="384" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A scene index translating USD point instancers into Hydra instancers. </para>
    </briefdescription>
    <detaileddescription>
<para>It applies various USD semantics and populates the &quot;instancedBy&quot; schema, including the prototypeRoot data source which is needed by the USD native instancing scene index.</para>
<para>To achieve various USD behaviors, it has a (recursive) instancer observer that inserts copies of prototypes processed through the prototype scene index into appropriate places in namespace.</para>
<para><hruler/>
</para>
<para>Example 1:</para>
<para>USD:</para>
<para>def PointInstancer &quot;MyInstancer&quot; { rel prototypes = [ &lt;/MyInstancer/MyPrototypes/MyPrototype&gt; ] def Scope &quot;MyPrototypes&quot; { def Xform &quot;MyPrototype&quot; { def Sphere &quot;MySphere&quot; { } } } }</para>
<para>Note that USD says that no geometry under a PointInstancer is drawn unless it is targeted by a point instancer&apos;s prototype relationship.</para>
<para>Inputs of the PointPropagatingSceneIndex: <verbatim>* _Context::mergingSceneIndex
  (HdMergingSceneIndex)
    * _Context::instancerSceneIndex
      (HdRetainedSceneIndex, will rewrite prototypes of /MyInstancer to
                             [ /MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55 ] )
    * UsdImaging_PiPrototypeSceneIndex
      (inserted by PointPropagatingSceneIndex::_instancerOberver
            which was constructed with
                        instancer = &quot;&quot;
                        prototypeRoot = /
                        rerootedPrototypeRoot = /)
      instancer = &quot;&quot;
      prototypeRoot = /
          * _Context::inputSceneIndex
            (argument to PointPropagatingSceneIndex,
             typically UsdImagingStageSceneIndex, maybe followed by
             other filtering scene indices)
    * UsdImagingRerootingSceneIndex
      (inserted recursively by PointPropagatingSceneIndex::_instancerObserver::_subinstancerObservers
            which was constructed with
                        instancer = /MyInstancer
                        prototypeRoot = /MyInstancer/MyPrototypes/MyPrototype
                        rerootedPrototypeRoot = /MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55)
      srcPrefix = /MyInstancer/MyPrototypes/MyPrototype
      dstPrefix = /MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55
          * UsdImaging_PiPrototypeSceneIndex
            instancer = /MyInstancer
            prototypeRoot = /MyInstancer/MyPrototypes/MyPrototype
                * UsdImagingRerootingSCeneIndex
                  srcPrefix = dstPrefix = /MyInstancer/MyPrototypes/MyPrototype
                      * _Context::inputSceneIndex
</verbatim></para>
<para>PointPropagatingSceneIndex:</para>
<para>/MyInstancer primType: instancer dataSource: setting # [1] prototypes = [/MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55]</para>
<para>/MyInstancer/MyPrototypes /MyInstancer/MyPrototypes/MyPrototype /MyInstancer/MyPrototypes/MyPrototype/MySphere primType: &quot;&quot; # [2] dataSource: unchanged</para>
<para>/MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55 # [3] primType: unchanged (from /MyInstancer/MyPrototypes/MyPrototype) dataSource: (from /MyInstancer/MyPrototypes/MyPrototype) setting # [4] xform:resetXformStack = true instancedBy:PrototypeRoot = /MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55 instancedBy:paths = /MyInstancer</para>
<para>/MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55/MySphere dataSource: (from /MyInstancer/MyPrototypes/MyPrototype/MySphere) setting # [5] instancedBy:PrototypeRoot = /MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55 instancedBy:paths = /MyInstancer</para>
<para>[1] Set through the retained scene index _Context::instancerSceneIndex to point to the re-rooted copy of the prototype. The prim entry was inserted by the (recursive) instancer observer (instantiated with instancer = empty, prototypeRoot = rerootedPrototypeRoot = /).</para>
<para>[2] Forced by the prototype scene index (instantiated with instancer = empty and prototypeRoot = /). In general, the prototype scene index forces the prim type to empty for all descendants of instancers within the prototypeRoot.</para>
<para>[3] The re-rooted copy of /MyInstancer/MyPrototypes/MyPrototype inserted by the instancer observer (instantiated with instancer = /MyInstancer, prototypeRoot = /MyInstancer/MyPrototypes/MyPrototypes and rerootedPrototypeRoot = /MyInstancer/MyPrototypes/MyPrototype/ForInstancer84e...f55</para>
<para>[4] Set by the prototype scene index (instantiated with instancer = /MyInstancer, prototypeRoot = /MyInstancer/MyPrototypes/MyPrototypes).</para>
<para>For the prototype root itself, it resets the xform stack so that the xform of geometry within a prototype is relative to the root of the prototype. Also see [5].</para>
<para>[5] Set by the same prototype scene index.</para>
<para>Sets instancedBy:prototypeRoot and instancedBy:paths on all prims that are not descendants of an instancer within the prototype root.</para>
<para><hruler/>
</para>
<para>Example 2:</para>
<para>USD:</para>
<para>def PointInstancer &quot;MyInstancer&quot; { rel prototypes = [ &lt;/MyPrototypes/MyPrototype&gt; ] } over &quot;MyPrototypes&quot; { def Xform &quot;MyPrototype&quot; { def Sphere &quot;MySphere&quot; { } } }</para>
<para>Note that the USD specification says that even though /MyPrototype/MyPrototype is under an &quot;over&quot;, it will be drawn (through an instancer) since it is targeted by a PointInstancers&apos; prototypes relationship. Furthermore, if &quot;MyPrototypes&quot; is changed from an &quot;over&quot; to a &quot;def&quot;, MySphere would be drawn twice: once in its own right and once being instanced by /MyInstancers.</para>
<para>PointPropagatingSceneIndex::</para>
<para>/MyInstancer primType: instancer dataSource: setting # [1] prototypes = [/MyPrototypes/MyPrototype/ForInstancer4e6...f36]</para>
<para>/MyPrototypes /MyPrototypes/MyPrototype /MyPrototypes/MyPrototype/MySphere primType: &quot;&quot; # [2] dataSource: unchanged</para>
<para>/MyPrototypes/MyPrototype/ForInstancer4e6...f36 # [3] primType: unchanged (from /MyPrototypes/MyPrototype) dataSource: (from /MyPrototypes/MyPrototype) settings # [4] xform:resetXformStack = true instancedBy:PrototypeRoot = /MyPrototypes/MyPrototype/ForInstancer4e6...f36 instancedBy:paths = /MyInstancer</para>
<para>/MyPrototypes/MyPrototype/ForInstancer4e6...f36/MySphere dataSource: (from /MyInstancer/MyPrototypes/MyPrototype/MySphere) setting # [5] instancedBy:PrototypeRoot = /MyPrototypes/MyPrototype/ForInstancer4e6...f36 instancedBy:paths = /MyInstancer</para>
<para>[1] As [1] in Example 1.</para>
<para>[2] Forced by the prototype scene index. In general, the prototype scene index forces the prim type to empty for all descendants of an over. Note that we changed MyPrototypes from an &quot;over&quot; to a &quot;def&quot;, there will be prim&apos;s of type sphere in the scene index corresponding to the one USD prim: one instanced through /MyInstancer and one not instanced.</para>
<para>[3] The re-rooted copy of /MyPrototypes/MyPrototype inserted by the instancer observer (instantiated with instancer = /MyInstancer, prototypeRoot = /MyPrototypes/MyPrototypes and rerootedPrototypeRoot = /MyPrototypes/MyPrototype/ForInstancer4e6...f36</para>
<para>[4] Similar to [4] in Example 1.</para>
<para>[5] Similar to [5] in Example 1.</para>
<para><hruler/>
</para>
<para>Example 3:</para>
<para>USD:</para>
<para>def PointInstancer &quot;MyInstancer&quot; { rel prototypes = [ &lt;/MyInstancer/MyPrototype&gt; ] def Xform &quot;MyPrototype&quot; { def PointInstancer &quot;MyNestedInstancer&quot; { rel prototypes = [ &lt;/MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype&gt; ] def Xform &quot;MyNestedPrototype&quot; { def Sphere &quot;MySphere&quot; { } } } } }</para>
<para>Note that &quot;MySphere&quot; is instanced by two nested point instancers. This will be realized by the PointPropagatingSceneIndex as follows: PointPropagatingSceneIndex as follows:</para>
<para>/MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f/MySphere is instanced by /MyInstancer/MyPrototype/ForInstancer6a3...234/MyNestedInstancer is instanced by /MyInstancer</para>
<para>PointPropagatingSceneIndex:</para>
<para>/MyInstancer primType: instancer dataSource: setting # [1] prototypes = [/MyInstancer/MyPrototype/ForInstancer6a3...234]</para>
<para>/MyInstancer/MyPrototype /MyInstancer/MyPrototype/MyNestedInstancer /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/MySphere primType: &quot;&quot; # [2] dataSource: unchanged</para>
<para>/MyInstancer/MyPrototype/ForInstancer6a3...234 # [3] primType: unchanged (from /MyInstancer/MyPrototype) dataSource: (from /MyInstancer/MyPrototype) settings # [4] xform:resetXformStack = true instancedBy:PrototypeRoot = /MyInstancer/MyPrototype/ForInstancer6a3...234 instancedBy:paths = /MyInstancer</para>
<para>/MyInstancer/MyPrototype/ForInstancer6a3...234/MyNestedInstancer primType: instancer dataSource: setting # [5] prototypes = [/MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f] instancedBy:PrototypeRoot = /MyInstancer/MyPrototype/ForInstancer6a3...234 instancedBy:paths = /MyInstancer</para>
<para>/MyInstancer/MyPrototype/ForInstancer6a3...234/MyNestedInstancer/MyNestedPrototype /MyInstancer/MyPrototype/ForInstancer6a3...234/MyNestedInstancer/MyNestedPrototype/MySphere primType: &quot;&quot; # [6] dataSource: unchanged</para>
<para>/MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f #[7] primType: unchanged (from /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype) dataSource: (from /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype) settings # [8] xform:resetXformStack = true instancedBy:PrototypeRoot = /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f instancedBy:paths = /MyInstancer/MyPrototype/ForInstancer6a3...234/MyNestedInstancer</para>
<para>/MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f/MySphere primType: sphere dataSource: settings # [9] instancedBy:PrototypeRoot = /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f instancedBy:paths = /MyInstancer/MyPrototype/ForInstancer6a3...234/MyNestedInstancer</para>
<para>[1] As [1] in Example 1.</para>
<para>[2] As [2] in Example 1.</para>
<para>[3] The re-rooted copy of /MyInstancer/MyPrototype inserted by the instancer observer (instantiated with instancer = /MyInstancer, prototypeRoot = /MyInstancer/MyPrototypes and rerootedPrototypeRoot = /MyInstancer/MyPrototype/ForInstancer6a3...234).</para>
<para>[4] Similar to [4] in Example 1.</para>
<para>[5] Similar to [5] in Example 1.</para>
<para>[6] The prototype scene index forced the empty prim types on all descendants of an instancer within the prototype root.</para>
<para>[7] The re-rooted copy of /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype inserted by the instancer observer (instantiated with instancer = /MyInstancer/MyPrototype/MyNestedInstancer, prototypeRoot = /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype, rerootedPrototypeRoot = /MyInstancer/MyPrototype/MyNestedInstancer/MyNestedPrototype/ForInstancer8a2...51f)</para>
<para>Note that this copy is inserted by the instancer observer for /MyInstancer/MyPrototype.</para>
<para>The instancer path is the path in the USD scene and will be changed by a latter re-rooting scene index in the instancer observer.</para>
<para>Note the hash at the end of the rerootedPrototypeRoot was computed from the calling the instancer observer by combining its rerootedPrototypeRoot with the path of the instancer within its prototypeRoot.</para>
<para>[8] Similar to [4].</para>
<para>[9] Similar to [5]. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7220">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="7217">
        <label>HdFilteringSceneIndexBase</label>
        <link refid="class_hd_filtering_scene_index_base"/>
        <childnode refid="7218" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7219">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
      <node id="7216">
        <label>UsdImagingPiPrototypePropagatingSceneIndex</label>
        <link refid="class_usd_imaging_pi_prototype_propagating_scene_index"/>
        <childnode refid="7217" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7218">
        <label>HdSceneIndexBase</label>
        <link refid="class_hd_scene_index_base"/>
        <childnode refid="7219" relation="public-inheritance">
        </childnode>
        <childnode refid="7220" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7225">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="7222">
        <label>HdFilteringSceneIndexBase</label>
        <link refid="class_hd_filtering_scene_index_base"/>
        <childnode refid="7223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7224">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
      <node id="7221">
        <label>UsdImagingPiPrototypePropagatingSceneIndex</label>
        <link refid="class_usd_imaging_pi_prototype_propagating_scene_index"/>
        <childnode refid="7222" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7223">
        <label>HdSceneIndexBase</label>
        <link refid="class_hd_scene_index_base"/>
        <childnode refid="7224" relation="public-inheritance">
        </childnode>
        <childnode refid="7225" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" line="368" column="1" bodyfile="pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h" bodystart="366" bodyend="418"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1a4cebae69026589d2445795442d3b861c" prot="private" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_context</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_HasRemnant</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1a48c24b31b3ebcbb76350ec0feedc33b5" prot="private" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_instancerObserver</name></member>
      <member refid="class_hd_scene_index_base_1a4c16c67e47002938f665bbef4897e777" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_IsObserved</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1acad24ac14983e911a13d4655882b221a" prot="private" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_MergingSceneIndexObserver</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1a86121e7b4f794cccc2c01135754eac9e" prot="private" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_mergingSceneIndexObserver</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_Register</name></member>
      <member refid="class_hd_scene_index_base_1a566958f83fe2054d86628e4c4e2f841e" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_SendPrimsAdded</name></member>
      <member refid="class_hd_scene_index_base_1a9c1dac2d67ffd966dfbcd412a22c1179" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_SendPrimsDirtied</name></member>
      <member refid="class_hd_scene_index_base_1a16e280a551530aaba14f7ce5df20389a" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_SendPrimsRemoved</name></member>
      <member refid="class_hd_scene_index_base_1a3375e09c9ad141da11cebb7d3d7f23e3" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>_SendPrimsRenamed</name></member>
      <member refid="class_hd_scene_index_base_1a3e9408d451e386dae6530ebb7f171fa6" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>AddObserver</name></member>
      <member refid="class_hd_scene_index_base_1a8646777300af4dabb1646cc413ba74c0" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>AddTag</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>EnableNotification2</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1a33d8098e368b10320813798c8beda58e" prot="public" virt="virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetChildPrimPaths</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetCurrentCount</name></member>
      <member refid="class_hd_scene_index_base_1a00f5bb082b3df6056ae34e990c90b915" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetDataSource</name></member>
      <member refid="class_hd_scene_index_base_1a6427ae8edac920bdba22e03b2bd26b76" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetDisplayName</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1aba7328b684374d1d8ab01cab79873630" prot="public" virt="virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetInputScenes</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1a4838527885ff92539845ba52882d2a56" prot="public" virt="virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetPrim</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetRefCount</name></member>
      <member refid="class_hd_scene_index_base_1a901e14a5ed6b0b161c9ba7ca823900b2" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetTags</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_hd_scene_index_base_1aca3881af587f5e1f09fb0549b48c7ed3" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>HasTag</name></member>
      <member refid="class_hd_scene_index_base_1a2450ffd6e3314b82b50c8b5090dfdf4c" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>HdSceneIndexBase</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>IsUnique</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1aa4db268d391b424ff316571ec9a5bc8f" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>New</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>operator=</name></member>
      <member refid="class_hd_scene_index_base_1a3483e1a165f156162974f44c4375e833" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>RemoveObserver</name></member>
      <member refid="class_hd_scene_index_base_1af5404412acb326a31b22ce693129e4f2" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>RemoveTag</name></member>
      <member refid="class_hd_scene_index_base_1ae0b32e5db6a18d55dcbb753e2159d472" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>SetDisplayName</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_usd_imaging_pi_prototype_propagating_scene_index_1acf783aaf3fa326e5cfd55d0f12515e60" prot="private" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>UsdImagingPiPrototypePropagatingSceneIndex</name></member>
      <member refid="class_hd_scene_index_base_1a28d69ae317c87d23851c198c0ccbf0d1" prot="public" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>~HdSceneIndexBase</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>UsdImagingPiPrototypePropagatingSceneIndex</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
