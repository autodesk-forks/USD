<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_retained_scene_index" kind="class" language="C++" prot="public">
    <compoundname>HdRetainedSceneIndex</compoundname>
    <basecompoundref refid="class_hd_scene_index_base" prot="public" virt="non-virtual">HdSceneIndexBase</basecompoundref>
    <derivedcompoundref refid="class_hd_legacy_prim_scene_index" prot="public" virt="non-virtual">HdLegacyPrimSceneIndex</derivedcompoundref>
    <includes refid="retained_scene_index_8h" local="no">retainedSceneIndex.h</includes>
    <innerclass refid="struct_hd_retained_scene_index_1_1___prim_entry" prot="private">HdRetainedSceneIndex::_PrimEntry</innerclass>
    <innerclass refid="struct_hd_retained_scene_index_1_1_added_prim_entry" prot="public">HdRetainedSceneIndex::AddedPrimEntry</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_retained_scene_index_1a9290f2b65d65158bffd305cce66bba80" prot="public" static="no">
        <type>std::vector&lt; AddedPrimEntry &gt;</type>
        <definition>using AddedPrimEntries =  std::vector&lt;AddedPrimEntry&gt;</definition>
        <argsstring></argsstring>
        <name>AddedPrimEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="62" column="1" bodyfile="pxr/imaging/hd/retainedSceneIndex.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_retained_scene_index_1a30eb6b6d76f57429abf1d4c033aabfcf" prot="private" static="no">
        <type><ref refid="class_sdf_path_table" kindref="compound">SdfPathTable</ref>&lt; _PrimEntry &gt;</type>
        <definition>using _PrimEntryTable =  SdfPathTable&lt;_PrimEntry&gt;</definition>
        <argsstring></argsstring>
        <name>_PrimEntryTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="106" column="1" bodyfile="pxr/imaging/hd/retainedSceneIndex.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_retained_scene_index_1a510c9a307dfe75d2bd25ad350024d071" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path_table" kindref="compound">_PrimEntryTable</ref></type>
        <definition>_PrimEntryTable _entries</definition>
        <argsstring></argsstring>
        <name>_entries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="107" column="1" bodyfile="pxr/imaging/hd/retainedSceneIndex.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_retained_scene_index_1a0c6f3d8d76e9a2808db10fdea4232cc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API HdRetainedSceneIndexRefPtr</type>
        <definition>static HD_API HdRetainedSceneIndexRefPtr New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
<para>Creates a new retained scene index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="49" column="1" bodyfile="pxr/imaging/hd/retainedSceneIndex.h" bodystart="49" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_retained_scene_index_1a63e286328a546a021358d7868a9820bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void AddPrims</definition>
        <argsstring>(const AddedPrimEntries &amp;entries)</argsstring>
        <name>AddPrims</name>
        <param>
          <type>const AddedPrimEntries &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>Add a prim to the retained scene index. </para>
        </briefdescription>
        <detaileddescription>
<para>Each added entry has a path, type, and datasource; the retained scene index assumes ownership of these and uses them to answer scene queries. This will also generate a PrimsAdded notification, if applicable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_scene_index_1a81f21cb460ab9aea8dd69c3ee3f00b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void RemovePrims</definition>
        <argsstring>(const HdSceneIndexObserver::RemovedPrimEntries &amp;entries)</argsstring>
        <name>RemovePrims</name>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">HdSceneIndexObserver::RemovedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>Removes a prim subtree from the retained scene index. </para>
        </briefdescription>
        <detaileddescription>
<para>This will also generate a PrimsRemoved notification, if applicable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_scene_index_1ad07bba591004c43fb27ee34da46d85db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void DirtyPrims</definition>
        <argsstring>(const HdSceneIndexObserver::DirtiedPrimEntries &amp;entries)</argsstring>
        <name>DirtyPrims</name>
        <reimplementedby refid="class_hd_legacy_prim_scene_index_1a6f40d822879355a71c977cf2019444d8">DirtyPrims</reimplementedby>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">HdSceneIndexObserver::DirtiedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>Invalidates prim data in the retained scene index. </para>
        </briefdescription>
        <detaileddescription>
<para>This scene index doesn&apos;t have any internal invalidation mechanisms, but it generates a PrimsDirtied notification, if applicable. Subclasses can use it for invalidation of caches or retained data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_scene_index_1a39f98bdd08c514ee46bcd09e0b54867c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="struct_hd_scene_index_prim" kindref="compound">HdSceneIndexPrim</ref></type>
        <definition>HD_API HdSceneIndexPrim GetPrim</definition>
        <argsstring>(const SdfPath &amp;primPath) const override</argsstring>
        <name>GetPrim</name>
        <reimplements refid="class_hd_scene_index_base_1abd7fb68e635586e7cabb74b1dd0ddc0e">GetPrim</reimplements>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <briefdescription>
<para>Returns a pair of (prim type, datasource) for the object at <computeroutput>primPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no such object exists, the type will be the empty token and the datasource will be null. This function is expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_scene_index_1ad80be717b3adf427003b98df701df4c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API SdfPathVector</type>
        <definition>HD_API SdfPathVector GetChildPrimPaths</definition>
        <argsstring>(const SdfPath &amp;primPath) const override</argsstring>
        <name>GetChildPrimPaths</name>
        <reimplements refid="class_hd_scene_index_base_1a15f110d26e84bc60a48a201f8c8315c2">GetChildPrimPaths</reimplements>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <briefdescription>
<para>Returns the paths of all scene index prims located immediately below <computeroutput>primPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function can be used to traverse the scene by recursing from <computeroutput><ref refid="class_sdf_path_1a9e77b565c10268c2b55f92559f621606" kindref="member">SdfPath::AbsoluteRootPath()</ref></computeroutput>; such a traversal is expected to give the same set of prims as the flattening of the scene index&apos;s <computeroutput>PrimsAdded</computeroutput> and <computeroutput>PrimsRemoved</computeroutput> messages. This function is expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_retained_scene_index_1a0f32c90391e1e9f068e577903c9b0f7b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdRetainedSceneIndex</definition>
        <argsstring>()</argsstring>
        <name>HdRetainedSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedSceneIndex.h" line="97" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Concrete scene container which can be externally populated and dirtied. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2659">
        <label>HdLegacyPrimSceneIndex</label>
        <link refid="class_hd_legacy_prim_scene_index"/>
        <childnode refid="2655" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2658">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="2655">
        <label>HdRetainedSceneIndex</label>
        <link refid="class_hd_retained_scene_index"/>
        <childnode refid="2656" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2657">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
      <node id="2656">
        <label>HdSceneIndexBase</label>
        <link refid="class_hd_scene_index_base"/>
        <childnode refid="2657" relation="public-inheritance">
        </childnode>
        <childnode refid="2658" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2663">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="2660">
        <label>HdRetainedSceneIndex</label>
        <link refid="class_hd_retained_scene_index"/>
        <childnode refid="2661" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2662">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
      <node id="2661">
        <label>HdSceneIndexBase</label>
        <link refid="class_hd_scene_index_base"/>
        <childnode refid="2662" relation="public-inheritance">
        </childnode>
        <childnode refid="2663" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/retainedSceneIndex.h" line="44" column="1" bodyfile="pxr/imaging/hd/retainedSceneIndex.h" bodystart="43" bodyend="109"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_hd_retained_scene_index_1a510c9a307dfe75d2bd25ad350024d071" prot="private" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_entries</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_HasRemnant</name></member>
      <member refid="class_hd_scene_index_base_1a4c16c67e47002938f665bbef4897e777" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_IsObserved</name></member>
      <member refid="class_hd_retained_scene_index_1a30eb6b6d76f57429abf1d4c033aabfcf" prot="private" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_PrimEntryTable</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_Register</name></member>
      <member refid="class_hd_scene_index_base_1a566958f83fe2054d86628e4c4e2f841e" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_SendPrimsAdded</name></member>
      <member refid="class_hd_scene_index_base_1a9c1dac2d67ffd966dfbcd412a22c1179" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_SendPrimsDirtied</name></member>
      <member refid="class_hd_scene_index_base_1a16e280a551530aaba14f7ce5df20389a" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_SendPrimsRemoved</name></member>
      <member refid="class_hd_scene_index_base_1a3375e09c9ad141da11cebb7d3d7f23e3" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>_SendPrimsRenamed</name></member>
      <member refid="class_hd_retained_scene_index_1a9290f2b65d65158bffd305cce66bba80" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>AddedPrimEntries</name></member>
      <member refid="class_hd_scene_index_base_1a3e9408d451e386dae6530ebb7f171fa6" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>AddObserver</name></member>
      <member refid="class_hd_retained_scene_index_1a63e286328a546a021358d7868a9820bc" prot="public" virt="virtual"><scope>HdRetainedSceneIndex</scope><name>AddPrims</name></member>
      <member refid="class_hd_scene_index_base_1a8646777300af4dabb1646cc413ba74c0" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>AddTag</name></member>
      <member refid="class_hd_retained_scene_index_1ad07bba591004c43fb27ee34da46d85db" prot="public" virt="virtual"><scope>HdRetainedSceneIndex</scope><name>DirtyPrims</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>EnableNotification2</name></member>
      <member refid="class_hd_retained_scene_index_1ad80be717b3adf427003b98df701df4c4" prot="public" virt="virtual"><scope>HdRetainedSceneIndex</scope><name>GetChildPrimPaths</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>GetCurrentCount</name></member>
      <member refid="class_hd_scene_index_base_1a00f5bb082b3df6056ae34e990c90b915" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>GetDataSource</name></member>
      <member refid="class_hd_scene_index_base_1a6427ae8edac920bdba22e03b2bd26b76" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>GetDisplayName</name></member>
      <member refid="class_hd_retained_scene_index_1a39f98bdd08c514ee46bcd09e0b54867c" prot="public" virt="virtual"><scope>HdRetainedSceneIndex</scope><name>GetPrim</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>GetRefCount</name></member>
      <member refid="class_hd_scene_index_base_1a901e14a5ed6b0b161c9ba7ca823900b2" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>GetTags</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_hd_scene_index_base_1aca3881af587f5e1f09fb0549b48c7ed3" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>HasTag</name></member>
      <member refid="class_hd_retained_scene_index_1a0f32c90391e1e9f068e577903c9b0f7b" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>HdRetainedSceneIndex</name></member>
      <member refid="class_hd_scene_index_base_1a2450ffd6e3314b82b50c8b5090dfdf4c" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>HdSceneIndexBase</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>IsUnique</name></member>
      <member refid="class_hd_retained_scene_index_1a0c6f3d8d76e9a2808db10fdea4232cc8" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>New</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>operator=</name></member>
      <member refid="class_hd_scene_index_base_1a3483e1a165f156162974f44c4375e833" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>RemoveObserver</name></member>
      <member refid="class_hd_retained_scene_index_1a81f21cb460ab9aea8dd69c3ee3f00b02" prot="public" virt="virtual"><scope>HdRetainedSceneIndex</scope><name>RemovePrims</name></member>
      <member refid="class_hd_scene_index_base_1af5404412acb326a31b22ce693129e4f2" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>RemoveTag</name></member>
      <member refid="class_hd_scene_index_base_1ae0b32e5db6a18d55dcbb753e2159d472" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>SetDisplayName</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_hd_scene_index_base_1a28d69ae317c87d23851c198c0ccbf0d1" prot="public" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>~HdSceneIndexBase</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>HdRetainedSceneIndex</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>HdRetainedSceneIndex</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
