<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="pipeline_8h" kind="file" language="C++">
    <compoundname>pipeline.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2usd_utils_2api_8h" local="yes">pxr/usd/usdUtils/api.h</includes>
    <includes refid="registered_variant_set_8h" local="yes">pxr/usd/usdUtils/registeredVariantSet.h</includes>
    <includes refid="env_setting_8h" local="yes">pxr/base/tf/envSetting.h</includes>
    <includes refid="token_8h" local="yes">pxr/base/tf/token.h</includes>
    <includes refid="declare_handles_8h" local="yes">pxr/usd/sdf/declareHandles.h</includes>
    <includes refid="path_8h" local="yes">pxr/usd/sdf/path.h</includes>
    <includes refid="common_8h" local="yes">pxr/usd/usd/common.h</includes>
    <incdepgraph>
      <node id="250946">
        <label>list</label>
      </node>
      <node id="250901">
        <label>locale</label>
      </node>
      <node id="250865">
        <label>atomic</label>
      </node>
      <node id="250919">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250861" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
      </node>
      <node id="250903">
        <label>stdarg.h</label>
      </node>
      <node id="250875">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="250876" relation="include">
        </childnode>
        <childnode refid="250877" relation="include">
        </childnode>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250878" relation="include">
        </childnode>
      </node>
      <node id="250863">
        <label>functional</label>
      </node>
      <node id="250930">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250931" relation="include">
        </childnode>
      </node>
      <node id="250853">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="250854" relation="include">
        </childnode>
      </node>
      <node id="250952">
        <label>limits</label>
      </node>
      <node id="250932">
        <label>pxr/base/tf/iterator.h</label>
        <link refid="base_2tf_2iterator_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250867" relation="include">
        </childnode>
        <childnode refid="250933" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
      </node>
      <node id="250918">
        <label>pxr/usd/sdf/pool.h</label>
        <link refid="pool_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250896" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250892" relation="include">
        </childnode>
        <childnode refid="250898" relation="include">
        </childnode>
        <childnode refid="250919" relation="include">
        </childnode>
        <childnode refid="250920" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
        <childnode refid="250921" relation="include">
        </childnode>
      </node>
      <node id="250916">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="250933">
        <label>iterator</label>
      </node>
      <node id="250877">
        <label>cstdint</label>
      </node>
      <node id="250905">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250867" relation="include">
        </childnode>
        <childnode refid="250872" relation="include">
        </childnode>
        <childnode refid="250906" relation="include">
        </childnode>
        <childnode refid="250907" relation="include">
        </childnode>
        <childnode refid="250909" relation="include">
        </childnode>
        <childnode refid="250910" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250864" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250911" relation="include">
        </childnode>
      </node>
      <node id="250914">
        <label>pxr/base/tf/declarePtrs.h</label>
        <link refid="declare_ptrs_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250915" relation="include">
        </childnode>
        <childnode refid="250905" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
      </node>
      <node id="250900">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250860" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250901" relation="include">
        </childnode>
        <childnode refid="250902" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
      </node>
      <node id="250892">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="250854" relation="include">
        </childnode>
      </node>
      <node id="250879">
        <label>cmath</label>
      </node>
      <node id="250873">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250868" relation="include">
        </childnode>
        <childnode refid="250874" relation="include">
        </childnode>
        <childnode refid="250875" relation="include">
        </childnode>
        <childnode refid="250880" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
      </node>
      <node id="250937">
        <label>pxr/usd/sdf/pathNode.h</label>
        <link refid="path_node_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250938" relation="include">
        </childnode>
        <childnode refid="250866" relation="include">
        </childnode>
        <childnode refid="250939" relation="include">
        </childnode>
        <childnode refid="250916" relation="include">
        </childnode>
      </node>
      <node id="250920">
        <label>tbb/concurrent_queue.h</label>
      </node>
      <node id="250907">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250908" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
      </node>
      <node id="250891">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250892" relation="include">
        </childnode>
        <childnode refid="250877" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
      </node>
      <node id="250945">
        <label>cstdarg</label>
      </node>
      <node id="250856">
        <label>string</label>
      </node>
      <node id="250942">
        <label>pxr/usd/usd/api.h</label>
        <link refid="usd_2usd_2api_8h_source"/>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250948">
        <label>pxr/usd/sdf/layerOffset.h</label>
        <link refid="layer_offset_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250893" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
      </node>
      <node id="250938">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250884" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
      </node>
      <node id="250860">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250883">
        <label>map</label>
      </node>
      <node id="250876">
        <label>cinttypes</label>
      </node>
      <node id="250922">
        <label>pxr/usd/sdf/tokens.h</label>
        <link refid="usd_2sdf_2tokens_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250923" relation="include">
        </childnode>
      </node>
      <node id="250851">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="250890">
        <label>unordered_set</label>
      </node>
      <node id="250896">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250897" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250864" relation="include">
        </childnode>
        <childnode refid="250886" relation="include">
        </childnode>
      </node>
      <node id="250936">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250895">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250871">
        <label>stddef.h</label>
      </node>
      <node id="250868">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
      </node>
      <node id="250861">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="250854" relation="include">
        </childnode>
      </node>
      <node id="250908">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250875" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
      </node>
      <node id="250909">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250864" relation="include">
        </childnode>
      </node>
      <node id="250913">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
      </node>
      <node id="250894">
        <label>pxr/usd/sdf/declareHandles.h</label>
        <link refid="declare_handles_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250896" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250898" relation="include">
        </childnode>
        <childnode refid="250904" relation="include">
        </childnode>
        <childnode refid="250914" relation="include">
        </childnode>
        <childnode refid="250885" relation="include">
        </childnode>
        <childnode refid="250864" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
        <childnode refid="250916" relation="include">
        </childnode>
      </node>
      <node id="250928">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="250917">
        <label>pxr/usd/sdf/path.h</label>
        <link refid="path_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250918" relation="include">
        </childnode>
        <childnode refid="250922" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250929" relation="include">
        </childnode>
        <childnode refid="250866" relation="include">
        </childnode>
        <childnode refid="250935" relation="include">
        </childnode>
        <childnode refid="250916" relation="include">
        </childnode>
        <childnode refid="250934" relation="include">
        </childnode>
        <childnode refid="250933" relation="include">
        </childnode>
        <childnode refid="250885" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
        <childnode refid="250937" relation="include">
        </childnode>
      </node>
      <node id="250902">
        <label>any</label>
      </node>
      <node id="250850">
        <label>pxr/usd/usdUtils/pipeline.h</label>
        <link refid="pipeline_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250852" relation="include">
        </childnode>
        <childnode refid="250855" relation="include">
        </childnode>
        <childnode refid="250857" relation="include">
        </childnode>
        <childnode refid="250866" relation="include">
        </childnode>
        <childnode refid="250894" relation="include">
        </childnode>
        <childnode refid="250917" relation="include">
        </childnode>
        <childnode refid="250941" relation="include">
        </childnode>
      </node>
      <node id="250878">
        <label>sys/types.h</label>
      </node>
      <node id="250855">
        <label>pxr/usd/usdUtils/registeredVariantSet.h</label>
        <link refid="registered_variant_set_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250852" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
      </node>
      <node id="250904">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250898" relation="include">
        </childnode>
        <childnode refid="250872" relation="include">
        </childnode>
        <childnode refid="250905" relation="include">
        </childnode>
        <childnode refid="250912" relation="include">
        </childnode>
        <childnode refid="250896" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
      </node>
      <node id="250944">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250896" relation="include">
        </childnode>
        <childnode refid="250872" relation="include">
        </childnode>
        <childnode refid="250861" relation="include">
        </childnode>
        <childnode refid="250909" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250893" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250864" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
      </node>
      <node id="250864">
        <label>typeinfo</label>
      </node>
      <node id="250915">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250906" relation="include">
        </childnode>
        <childnode refid="250905" relation="include">
        </childnode>
        <childnode refid="250873" relation="include">
        </childnode>
        <childnode refid="250912" relation="include">
        </childnode>
        <childnode refid="250904" relation="include">
        </childnode>
        <childnode refid="250911" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
      </node>
      <node id="250866">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250867" relation="include">
        </childnode>
        <childnode refid="250872" relation="include">
        </childnode>
        <childnode refid="250889" relation="include">
        </childnode>
        <childnode refid="250891" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
        <childnode refid="250893" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
        <childnode refid="250885" relation="include">
        </childnode>
      </node>
      <node id="250951">
        <label>pxr/usd/sdf/timeCode.h</label>
        <link refid="sdf_2time_code_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250895" relation="include">
        </childnode>
        <childnode refid="250934" relation="include">
        </childnode>
        <childnode refid="250863" relation="include">
        </childnode>
        <childnode refid="250893" relation="include">
        </childnode>
      </node>
      <node id="250939">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
        <childnode refid="250940" relation="include">
        </childnode>
        <childnode refid="250877" relation="include">
        </childnode>
        <childnode refid="250893" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
      </node>
      <node id="250874">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250875" relation="include">
        </childnode>
        <childnode refid="250879" relation="include">
        </childnode>
      </node>
      <node id="250888">
        <label>vector</label>
      </node>
      <node id="250862">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250881">
        <label>utility</label>
      </node>
      <node id="250947">
        <label>sstream</label>
      </node>
      <node id="250899">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250897" relation="include">
        </childnode>
        <childnode refid="250870" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
      </node>
      <node id="250950">
        <label>pxr/usd/usd/timeCode.h</label>
        <link refid="usd_2time_code_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250942" relation="include">
        </childnode>
        <childnode refid="250951" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250923" relation="include">
        </childnode>
        <childnode refid="250872" relation="include">
        </childnode>
        <childnode refid="250952" relation="include">
        </childnode>
        <childnode refid="250893" relation="include">
        </childnode>
        <childnode refid="250879" relation="include">
        </childnode>
      </node>
      <node id="250906">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
      </node>
      <node id="250924">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="250854">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="250935">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250936" relation="include">
        </childnode>
        <childnode refid="250861" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
      </node>
      <node id="250923">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250861" relation="include">
        </childnode>
        <childnode refid="250919" relation="include">
        </childnode>
        <childnode refid="250866" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
        <childnode refid="250924" relation="include">
        </childnode>
        <childnode refid="250925" relation="include">
        </childnode>
        <childnode refid="250926" relation="include">
        </childnode>
        <childnode refid="250927" relation="include">
        </childnode>
        <childnode refid="250928" relation="include">
        </childnode>
      </node>
      <node id="250858">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="250854" relation="include">
        </childnode>
      </node>
      <node id="250872">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250873" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250882" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250883" relation="include">
        </childnode>
        <childnode refid="250884" relation="include">
        </childnode>
        <childnode refid="250885" relation="include">
        </childnode>
        <childnode refid="250886" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
      </node>
      <node id="250880">
        <label>math.h</label>
      </node>
      <node id="250943">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250860" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250875" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250944" relation="include">
        </childnode>
        <childnode refid="250945" relation="include">
        </childnode>
        <childnode refid="250882" relation="include">
        </childnode>
        <childnode refid="250946" relation="include">
        </childnode>
        <childnode refid="250885" relation="include">
        </childnode>
        <childnode refid="250947" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250887" relation="include">
        </childnode>
        <childnode refid="250888" relation="include">
        </childnode>
      </node>
      <node id="250893">
        <label>iosfwd</label>
      </node>
      <node id="250940">
        <label>cstdlib</label>
      </node>
      <node id="250869">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250870" relation="include">
        </childnode>
        <childnode refid="250871" relation="include">
        </childnode>
      </node>
      <node id="250941">
        <label>pxr/usd/usd/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250942" relation="include">
        </childnode>
        <childnode refid="250914" relation="include">
        </childnode>
        <childnode refid="250943" relation="include">
        </childnode>
        <childnode refid="250948" relation="include">
        </childnode>
        <childnode refid="250949" relation="include">
        </childnode>
        <childnode refid="250950" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
        <childnode refid="250883" relation="include">
        </childnode>
      </node>
      <node id="250911">
        <label>cstddef</label>
      </node>
      <node id="250910">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250884" relation="include">
        </childnode>
      </node>
      <node id="250931">
        <label>unordered_map</label>
      </node>
      <node id="250852">
        <label>pxr/usd/usdUtils/api.h</label>
        <link refid="usd_2usd_utils_2api_8h_source"/>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250949">
        <label>pxr/usd/usd/primDataHandle.h</label>
        <link refid="prim_data_handle_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250942" relation="include">
        </childnode>
        <childnode refid="250872" relation="include">
        </childnode>
        <childnode refid="250916" relation="include">
        </childnode>
      </node>
      <node id="250867">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250860" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250868" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250869" relation="include">
        </childnode>
        <childnode refid="250871" relation="include">
        </childnode>
      </node>
      <node id="250925">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="250921">
        <label>thread</label>
      </node>
      <node id="250929">
        <label>pxr/base/tf/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250873" relation="include">
        </childnode>
        <childnode refid="250930" relation="include">
        </childnode>
        <childnode refid="250889" relation="include">
        </childnode>
        <childnode refid="250932" relation="include">
        </childnode>
        <childnode refid="250934" relation="include">
        </childnode>
        <childnode refid="250933" relation="include">
        </childnode>
        <childnode refid="250883" relation="include">
        </childnode>
        <childnode refid="250885" relation="include">
        </childnode>
        <childnode refid="250881" relation="include">
        </childnode>
      </node>
      <node id="250927">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="250887">
        <label>type_traits</label>
      </node>
      <node id="250885">
        <label>set</label>
      </node>
      <node id="250897">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="250853" relation="include">
        </childnode>
      </node>
      <node id="250870">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="250854" relation="include">
        </childnode>
      </node>
      <node id="250934">
        <label>algorithm</label>
      </node>
      <node id="250857">
        <label>pxr/base/tf/envSetting.h</label>
        <link refid="env_setting_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250859" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
      </node>
      <node id="250882">
        <label>cstring</label>
      </node>
      <node id="250912">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250913" relation="include">
        </childnode>
        <childnode refid="250905" relation="include">
        </childnode>
        <childnode refid="250865" relation="include">
        </childnode>
      </node>
      <node id="250884">
        <label>memory</label>
      </node>
      <node id="250859">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250860" relation="include">
        </childnode>
        <childnode refid="250861" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250863" relation="include">
        </childnode>
        <childnode refid="250864" relation="include">
        </childnode>
      </node>
      <node id="250898">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250899" relation="include">
        </childnode>
        <childnode refid="250867" relation="include">
        </childnode>
        <childnode refid="250862" relation="include">
        </childnode>
        <childnode refid="250858" relation="include">
        </childnode>
        <childnode refid="250900" relation="include">
        </childnode>
        <childnode refid="250871" relation="include">
        </childnode>
        <childnode refid="250903" relation="include">
        </childnode>
        <childnode refid="250856" relation="include">
        </childnode>
      </node>
      <node id="250889">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="250851" relation="include">
        </childnode>
        <childnode refid="250854" relation="include">
        </childnode>
        <childnode refid="250890" relation="include">
        </childnode>
      </node>
      <node id="250886">
        <label>typeindex</label>
      </node>
      <node id="250926">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pipeline_8h_1ae45889af51ae5ba597d8ac0b6a9b081f" prot="public" static="no" mutable="no">
        <type>USDUTILS_API TfEnvSetting&lt; bool &gt;</type>
        <definition>USDUTILS_API TfEnvSetting&lt;bool&gt; USD_FORCE_DEFAULT_MATERIALS_SCOPE_NAME</definition>
        <argsstring></argsstring>
        <name>USD_FORCE_DEFAULT_MATERIALS_SCOPE_NAME</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pipeline_8h_1af85d90d608f035b06d09aa53ccca19f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SDF_DECLARE_HANDLES</definition>
        <argsstring>(SdfLayer)</argsstring>
        <name>SDF_DECLARE_HANDLES</name>
        <param>
          <type><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1aaf871d52004424534887af0f3b2cd5a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDUTILS_API TfToken UsdUtilsGetAlphaAttributeNameForColor</definition>
        <argsstring>(TfToken const &amp;colorAttrName)</argsstring>
        <name>UsdUtilsGetAlphaAttributeNameForColor</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>colorAttrName</declname>
        </param>
        <briefdescription>
<para>Define the shading pipeline&apos;s convention for naming a companion alpha/opacity attribute and primvarnames given the full name of a color-valued attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1aaa414ee2f3bf14bb9092d46c3752ebb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDUTILS_API TfToken UsdUtilsGetModelNameFromRootLayer</definition>
        <argsstring>(const SdfLayerHandle &amp;rootLayer)</argsstring>
        <name>UsdUtilsGetModelNameFromRootLayer</name>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>rootLayer</declname>
        </param>
        <briefdescription>
<para>Returns the model name associated with a given root layer. </para>
        </briefdescription>
        <detaileddescription>
<para>In order, it looks for defaultPrim metadata, a prim matching the filename, and then the first concrete root prim. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1af8c5904ce00b476edc137bb4ae0e114d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API const std::set&lt; <ref refid="struct_usd_utils_registered_variant_set" kindref="compound">UsdUtilsRegisteredVariantSet</ref> &gt; &amp;</type>
        <definition>USDUTILS_API const std::set&lt;UsdUtilsRegisteredVariantSet&gt;&amp; UsdUtilsGetRegisteredVariantSets</definition>
        <argsstring>()</argsstring>
        <name>UsdUtilsGetRegisteredVariantSets</name>
        <briefdescription>
<para>Certain variant sets can be registered with the system. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the set of <ref refid="struct_usd_utils_registered_variant_set" kindref="compound">UsdUtilsRegisteredVariantSet</ref> objects that are registered with the pipeline.</para>
<para>Variant sets can be registered through direct enumeration inside a <computeroutput>plugInfo.json</computeroutput>, or via a plugin for situations that require dynamic configuration at runtime.</para>
<para>This list will be empty until one or more <computeroutput>plugInfo.json</computeroutput> files discoverable by your USD installation contain an entry in the UsdUtilsPipeline group like the following: <programlisting filename=".json"><codeline><highlight class="normal">&quot;UsdUtilsPipeline&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;RegisteredVariantSets&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;modelingVariant&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;selectionExportPolicy&quot;:<sp/>&quot;always&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;standin&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;selectionExportPolicy&quot;:<sp/>&quot;never&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
</programlisting></para>
<para>After the above variantSets are registered, this will then load any plugin that has a <computeroutput>plugInfo.json</computeroutput> with:</para>
<para><programlisting filename=".json"><codeline><highlight class="normal">&quot;UsdUtilsPipeline&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;RegistersVariantSets&quot;:<sp/>true</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>This plugin should then have code that registers code to run for <computeroutput><ref refid="struct_usd_utils_registered_variant_set" kindref="compound">UsdUtilsRegisteredVariantSet</ref></computeroutput>: <programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="registry_manager_8h_1ab1604c7efa4277ed6ee17fddaf70075f" kindref="member">TF_REGISTRY_FUNCTION</ref>(<ref refid="struct_usd_utils_registered_variant_set" kindref="compound">UsdUtilsRegisteredVariantSet</ref>)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::string<sp/>variantSetName<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" kindref="member">UsdUtilsRegisteredVariantSet::SelectionExportPolicy</ref><sp/>exportPolicy<sp/>=<sp/>...;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><ref refid="pipeline_8h_1a6feaaea06adf7b1ed5e92676456b8865" kindref="member">UsdUtilsRegisterVariantSet</ref>(variantSetName,<sp/>exportPolicy);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><simplesect kind="see"><para><ref refid="pipeline_8h_1a6feaaea06adf7b1ed5e92676456b8865" kindref="member">UsdUtilsRegisterVariantSet</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1a6feaaea06adf7b1ed5e92676456b8865" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API void</type>
        <definition>USDUTILS_API void UsdUtilsRegisterVariantSet</definition>
        <argsstring>(const std::string &amp;variantSetName, const UsdUtilsRegisteredVariantSet::SelectionExportPolicy &amp;selectionExportPolicy)</argsstring>
        <name>UsdUtilsRegisterVariantSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variantSetName</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" kindref="member">UsdUtilsRegisteredVariantSet::SelectionExportPolicy</ref> &amp;</type>
          <declname>selectionExportPolicy</declname>
        </param>
        <briefdescription>
<para>Registers <computeroutput>variantSetName</computeroutput> with <computeroutput>selectionExportPolicy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="pipeline_8h_1af8c5904ce00b476edc137bb4ae0e114d" kindref="member">UsdUtilsGetRegisteredVariantSets</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1ac915964b94e8c470d4e71b274a759762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>USDUTILS_API UsdPrim UsdUtilsGetPrimAtPathWithForwarding</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>UsdUtilsGetPrimAtPathWithForwarding</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>If a valid <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> already exists at <computeroutput>path</computeroutput> on the USD stage <computeroutput>stage</computeroutput>, returns it. </para>
        </briefdescription>
        <detaileddescription>
<para>It not, it checks to see if the path belongs to a prim underneath an instance and returns the corresponding prototype prim.</para>
<para>This returns an invalid <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> if no corresponding prototype prim can be found and if no prim exists at the path.</para>
<para>This method is similar to <ref refid="class_usd_stage_1a6ceb556070804b712c01a7968f925735" kindref="member">UsdStage::GetPrimAtPath()</ref>, in that it will never author scene description, and therefore is safe to use as a &quot;reader&quot; in the Usd multi-threading model. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1ae64ea38aa8caa621d2462cfe7aaa7254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>USDUTILS_API UsdPrim UsdUtilsUninstancePrimAtPath</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>UsdUtilsUninstancePrimAtPath</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Given a path, uninstances all the instanced prims in the namespace chain and returns the resulting prim at the requested path. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a NULL prim if the given path doesn&apos;t exist and does not correspond to a valid prim inside a prototype. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1aaba37cce54b9db62e0813003dc61cd07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>USDUTILS_API const TfToken&amp; UsdUtilsGetPrimaryUVSetName</definition>
        <argsstring>()</argsstring>
        <name>UsdUtilsGetPrimaryUVSetName</name>
        <briefdescription>
<para>Returns the name of the primary UV set used on meshes and nurbs. </para>
        </briefdescription>
        <detaileddescription>
<para>By default the name is &quot;st&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1a288415ad1723d9faee574a51bd411f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>USDUTILS_API const TfToken&amp; UsdUtilsGetPrefName</definition>
        <argsstring>()</argsstring>
        <name>UsdUtilsGetPrefName</name>
        <briefdescription>
<para>Returns the name of the reference position used on meshes and nurbs. </para>
        </briefdescription>
        <detaileddescription>
<para>By default the name is &quot;pref&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1a589b8a95736d7cd9b0ce9f6ac9fc147c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDUTILS_API TfToken UsdUtilsGetMaterialsScopeName</definition>
        <argsstring>(const bool forceDefault=false)</argsstring>
        <name>UsdUtilsGetMaterialsScopeName</name>
        <param>
          <type>const bool</type>
          <declname>forceDefault</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the name of the USD prim under which materials are expected to be authored. </para>
        </briefdescription>
        <detaileddescription>
<para>The scope name can be configured in the metadata of a plugInfo.json file like so: <programlisting filename=".json"><codeline><highlight class="normal">&quot;UsdUtilsPipeline&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;MaterialsScopeName&quot;:<sp/>&quot;SomeScopeName&quot;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If <computeroutput>forceDefault</computeroutput> is true, any value specified in a plugInfo.json will be ignored and the built-in default will be returned. This is primarily used for unit testing purposes as a way to ignore any site-based configuration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="pipeline_8h_1a7b291555b813b2fa2665531dd98995a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDUTILS_API TfToken UsdUtilsGetPrimaryCameraName</definition>
        <argsstring>(const bool forceDefault=false)</argsstring>
        <name>UsdUtilsGetPrimaryCameraName</name>
        <param>
          <type>const bool</type>
          <declname>forceDefault</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Get the name of the USD prim representing the primary camera. </para>
        </briefdescription>
        <detaileddescription>
<para>By default the name is &quot;main_cam&quot;.</para>
<para>The camera name can be configured in the metadata of a plugInfo.json file like so: <programlisting filename=".json"><codeline><highlight class="normal">&quot;UsdUtilsPipeline&quot;:<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;PrimaryCameraName&quot;:<sp/>&quot;SomeCameraName&quot;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If <computeroutput>forceDefault</computeroutput> is true, any value specified in a plugInfo.json will be ignored and the built-in default will be returned. This is primarily used for unit testing purposes as a way to ignore any site-based configuration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/pipeline.h" line="183" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Collection of module-scoped utilities for establishing pipeline conventions for things not currently suitable or possible to canonize in USD&apos;s schema modules. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_USD_UTILS_PIPELINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_USD_UTILS_PIPELINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/usdUtils/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="registered_variant_set_8h" kindref="compound">pxr/usd/usdUtils/registeredVariantSet.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="env_setting_8h" kindref="compound">pxr/base/tf/envSetting.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="token_8h" kindref="compound">pxr/base/tf/token.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="declare_handles_8h" kindref="compound">pxr/usd/sdf/declareHandles.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/path.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">pxr/usd/usd/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">SDF_DECLARE_HANDLES(<ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>TfEnvSetting&lt;bool&gt;<sp/>USD_FORCE_DEFAULT_MATERIALS_SCOPE_NAME;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/><ref refid="pipeline_8h_1aaf871d52004424534887af0f3b2cd5a4" kindref="member">UsdUtilsGetAlphaAttributeNameForColor</ref>(<ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;colorAttrName);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/><ref refid="pipeline_8h_1aaa414ee2f3bf14bb9092d46c3752ebb8" kindref="member">UsdUtilsGetModelNameFromRootLayer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SdfLayerHandle&amp;<sp/>rootLayer);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;UsdUtilsRegisteredVariantSet&gt;&amp;<sp/><ref refid="pipeline_8h_1af8c5904ce00b476edc137bb4ae0e114d" kindref="member">UsdUtilsGetRegisteredVariantSets</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pipeline_8h_1a6feaaea06adf7b1ed5e92676456b8865" kindref="member">UsdUtilsRegisterVariantSet</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>variantSetName,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" kindref="member">UsdUtilsRegisteredVariantSet::SelectionExportPolicy</ref>&amp;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectionExportPolicy);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref><sp/><ref refid="pipeline_8h_1ac915964b94e8c470d4e71b274a759762" kindref="member">UsdUtilsGetPrimAtPathWithForwarding</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UsdStagePtr<sp/>&amp;stage,<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>&amp;path);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref><sp/><ref refid="pipeline_8h_1ae64ea38aa8caa621d2462cfe7aaa7254" kindref="member">UsdUtilsUninstancePrimAtPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>UsdStagePtr<sp/>&amp;stage,<sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>&amp;path);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/><ref refid="pipeline_8h_1aaba37cce54b9db62e0813003dc61cd07" kindref="member">UsdUtilsGetPrimaryUVSetName</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/><ref refid="pipeline_8h_1a288415ad1723d9faee574a51bd411f9f" kindref="member">UsdUtilsGetPrefName</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/><ref refid="pipeline_8h_1a589b8a95736d7cd9b0ce9f6ac9fc147c" kindref="member">UsdUtilsGetMaterialsScopeName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceDefault<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">USDUTILS_API</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/><ref refid="pipeline_8h_1a7b291555b813b2fa2665531dd98995a2" kindref="member">UsdUtilsGetPrimaryCameraName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>forceDefault<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/usdUtils/pipeline.h"/>
  </compounddef>
</doxygen>
