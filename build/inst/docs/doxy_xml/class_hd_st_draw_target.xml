<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_draw_target" kind="class" language="C++" prot="public">
    <compoundname>HdStDrawTarget</compoundname>
    <basecompoundref refid="class_hd_sprim" prot="public" virt="non-virtual">HdSprim</basecompoundref>
    <includes refid="hd_st_2draw_target_8h" local="no">drawTarget.h</includes>
      <sectiondef kind="user-defined">
      <header>Draw Target API</header>
      <memberdef kind="variable" id="class_hd_st_draw_target_1a096e979db21287ad2b56b0ad270ac681" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _enabled</definition>
        <argsstring></argsstring>
        <name>_enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="133" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_draw_target_1aa8007a02e22fc15e44eb349d742235c1" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i _resolution</definition>
        <argsstring></argsstring>
        <name>_resolution</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="134" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_draw_target_1adb7dbed5a1083ed130e273dba23b16c6" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_rprim_collection" kindref="compound">HdRprimCollection</ref></type>
        <definition>HdRprimCollection _collection</definition>
        <argsstring></argsstring>
        <name>_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="135" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_draw_target_1a44a77f55d678c0bd99b7091156eee553" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_draw_target_render_pass_state" kindref="compound">HdStDrawTargetRenderPassState</ref></type>
        <definition>HdStDrawTargetRenderPassState _drawTargetRenderPassState</definition>
        <argsstring></argsstring>
        <name>_drawTargetRenderPassState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="137" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a8caf5b29137a23d1acab0ee593ffe3f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsEnabled</definition>
        <argsstring>() const</argsstring>
        <name>IsEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="109" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1aed40866ef7db8dfeba340975c78ee78c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_hd_st_draw_target_render_pass_state" kindref="compound">HdStDrawTargetRenderPassState</ref> *</type>
        <definition>const HdStDrawTargetRenderPassState* GetDrawTargetRenderPassState</definition>
        <argsstring>() const</argsstring>
        <name>GetDrawTargetRenderPassState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="110" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a84b692b0c605406f48ed2783882d283d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API <ref refid="class_hd_rprim_collection" kindref="compound">HdRprimCollection</ref> const  &amp;</type>
        <definition>HDST_API HdRprimCollection const&amp; GetCollection</definition>
        <argsstring>() const</argsstring>
        <name>GetCollection</name>
        <briefdescription>
<para>Returns collection of rprims the draw target draws. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="117" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1aaf26e47a6e6ef9cd2a054c72d51d5ef4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>const GfVec2i&amp; GetResolution</definition>
        <argsstring>() const</argsstring>
        <name>GetResolution</name>
        <briefdescription>
<para>Resolution. </para>
        </briefdescription>
        <detaileddescription>
<para>Set during sync. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="128" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a7c7f4af321f8a7db8ee2cfa58e38a35f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>static HDST_API void GetDrawTargets</definition>
        <argsstring>(HdRenderIndex *renderIndex, HdStDrawTargetPtrVector *drawTargets)</argsstring>
        <name>GetDrawTargets</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <param>
          <type>HdStDrawTargetPtrVector *</type>
          <declname>drawTargets</declname>
        </param>
        <briefdescription>
<para>returns all HdStDrawTargets in the render index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a223cfd79cca1d4e3ae44f600331a40e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStDrawTarget</definition>
        <argsstring>()=delete</argsstring>
        <name>HdStDrawTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a316c4ea535a239653aa25868f2a9d2aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStDrawTarget</definition>
        <argsstring>(const HdStDrawTarget &amp;)=delete</argsstring>
        <name>HdStDrawTarget</name>
        <param>
          <type>const <ref refid="class_hd_st_draw_target" kindref="compound">HdStDrawTarget</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1af9ccc0146425a31093835e8f9fd554a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_st_draw_target" kindref="compound">HdStDrawTarget</ref> &amp;</type>
        <definition>HdStDrawTarget&amp; operator=</definition>
        <argsstring>(const HdStDrawTarget &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_st_draw_target" kindref="compound">HdStDrawTarget</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" static="no" strong="no">
        <type>HdDirtyBits</type>
        <name>DirtyBits</name>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public">
          <name>Clean</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa67918d8b2a770c7879d481fe980c626e" prot="public">
          <name>DirtyDTEnable</name>
          <initializer>= 1 &lt;&lt;  0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fae73640d71068f3a18ae65f0c91f05a25" prot="public">
          <name>DirtyDTCamera</name>
          <initializer>= 1 &lt;&lt;  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fae006caaab4e23b6248b196297d452e03" prot="public">
          <name>DirtyDTResolution</name>
          <initializer>= 1 &lt;&lt;  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa2ae31622f6a4b129453feac62b7e7018" prot="public">
          <name>DirtyDTAovBindings</name>
          <initializer>= 1 &lt;&lt;  4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8facc54e8f4d47383d7bfff8fc338bfa345" prot="public">
          <name>DirtyDTDepthPriority</name>
          <initializer>= 1 &lt;&lt;  6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa10f4de2e01dac8d2af6124e40b8b5cdb" prot="public">
          <name>DirtyDTCollection</name>
          <initializer>= 1 &lt;&lt;  7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public">
          <name>AllDirty</name>
          <initializer>= (DirtyDTEnable
                                   |DirtyDTCamera
                                   |DirtyDTResolution
                                   |DirtyDTAovBindings
                                   |DirtyDTDepthPriority
                                   |DirtyDTCollection)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Dirty bits for the <ref refid="class_hd_st_draw_target" kindref="compound">HdStDrawTarget</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>When GetUseStormTextureSystem() is true, &quot;Legacy&quot; dirty bits are ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="77" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="77" bodyend="91"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_draw_target_1a6f976ce688873411c6b549a04363f745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStDrawTarget</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>HdStDrawTarget</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a65ae8a5b7000cb7808071b6645fcc418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStDrawTarget</definition>
        <argsstring>() override</argsstring>
        <name>~HdStDrawTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <reimplements refid="class_hd_sprim_1ac100b9064606ab088306512425439cf7">Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Synchronizes state from the delegate to this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_target_1a59b589b9042f2173054e853d4d58036f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API HdDirtyBits</type>
        <definition>HDST_API HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <reimplements refid="class_hd_sprim_1ac05e81662ee475cfe52ce97e84e7205d">GetInitialDirtyBitsMask</reimplements>
        <briefdescription>
<para>Returns the minimal set of dirty bits to place in the change tracker for use in the first sync of this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically this would be all dirty bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawTarget.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an render to texture render pass. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This is a temporary API to aid transition to Storm, and is subject to major changes. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3107">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="3106">
        <label>HdStDrawTarget</label>
        <link refid="class_hd_st_draw_target"/>
        <childnode refid="3107" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3109">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="3108">
        <label>HdStDrawTarget</label>
        <link refid="class_hd_st_draw_target"/>
        <childnode refid="3109" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/drawTarget.h" line="65" column="1" bodyfile="pxr/imaging/hdSt/drawTarget.h" bodystart="64" bodyend="143"/>
    <listofallmembers>
      <member refid="class_hd_st_draw_target_1adb7dbed5a1083ed130e273dba23b16c6" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>_collection</name></member>
      <member refid="class_hd_st_draw_target_1a44a77f55d678c0bd99b7091156eee553" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>_drawTargetRenderPassState</name></member>
      <member refid="class_hd_st_draw_target_1a096e979db21287ad2b56b0ad270ac681" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>_enabled</name></member>
      <member refid="class_hd_st_draw_target_1aa8007a02e22fc15e44eb349d742235c1" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>_resolution</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>AllDirty</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>Clean</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyBits</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa2ae31622f6a4b129453feac62b7e7018" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyDTAovBindings</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fae73640d71068f3a18ae65f0c91f05a25" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyDTCamera</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa10f4de2e01dac8d2af6124e40b8b5cdb" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyDTCollection</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8facc54e8f4d47383d7bfff8fc338bfa345" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyDTDepthPriority</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fa67918d8b2a770c7879d481fe980c626e" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyDTEnable</name></member>
      <member refid="class_hd_st_draw_target_1a2f2dbbbe47e871395a781c8105398c8fae006caaab4e23b6248b196297d452e03" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>DirtyDTResolution</name></member>
      <member refid="class_hd_sprim_1a385eed04c15e636796b187bfdf0fcbf0" prot="public" virt="virtual"><scope>HdStDrawTarget</scope><name>Finalize</name></member>
      <member refid="class_hd_st_draw_target_1a84b692b0c605406f48ed2783882d283d" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>GetCollection</name></member>
      <member refid="class_hd_st_draw_target_1aed40866ef7db8dfeba340975c78ee78c" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>GetDrawTargetRenderPassState</name></member>
      <member refid="class_hd_st_draw_target_1a7c7f4af321f8a7db8ee2cfa58e38a35f" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>GetDrawTargets</name></member>
      <member refid="class_hd_sprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>GetId</name></member>
      <member refid="class_hd_st_draw_target_1a59b589b9042f2173054e853d4d58036f" prot="public" virt="virtual"><scope>HdStDrawTarget</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_st_draw_target_1aaf26e47a6e6ef9cd2a054c72d51d5ef4" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>GetResolution</name></member>
      <member refid="class_hd_sprim_1a15a586d4a5f4e5c4f4e0ae664914dd26" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>HdSprim</name></member>
      <member refid="class_hd_st_draw_target_1a6f976ce688873411c6b549a04363f745" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>HdStDrawTarget</name></member>
      <member refid="class_hd_st_draw_target_1a223cfd79cca1d4e3ae44f600331a40e4" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>HdStDrawTarget</name></member>
      <member refid="class_hd_st_draw_target_1a316c4ea535a239653aa25868f2a9d2aa" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>HdStDrawTarget</name></member>
      <member refid="class_hd_st_draw_target_1a8caf5b29137a23d1acab0ee593ffe3f2" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>IsEnabled</name></member>
      <member refid="class_hd_st_draw_target_1af9ccc0146425a31093835e8f9fd554a7" prot="private" virt="non-virtual"><scope>HdStDrawTarget</scope><name>operator=</name></member>
      <member refid="class_hd_st_draw_target_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" virt="virtual"><scope>HdStDrawTarget</scope><name>Sync</name></member>
      <member refid="class_hd_sprim_1a35830c433fc9268fc4fe5ed23d8cc86b" prot="public" virt="virtual"><scope>HdStDrawTarget</scope><name>~HdSprim</name></member>
      <member refid="class_hd_st_draw_target_1a65ae8a5b7000cb7808071b6645fcc418" prot="public" virt="non-virtual"><scope>HdStDrawTarget</scope><name>~HdStDrawTarget</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
