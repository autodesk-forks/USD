<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hd_command_descriptor" kind="class" language="C++" prot="public">
    <compoundname>HdCommandDescriptor</compoundname>
    <includes refid="command_8h" local="no">command.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hd_command_descriptor_1a84fc602d87f733cb56d45a061b959764" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken commandName</definition>
        <argsstring></argsstring>
        <name>commandName</name>
        <briefdescription>
<para>A token representing a command that can be invoked. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/command.h" line="94" column="1" bodyfile="pxr/imaging/hd/command.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_command_descriptor_1a66956f8aa344477b4c373560707e4f79" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string commandDescription</definition>
        <argsstring></argsstring>
        <name>commandDescription</name>
        <briefdescription>
<para>A description of the command suitable for display in a UI for example. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/command.h" line="99" column="1" bodyfile="pxr/imaging/hd/command.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_command_descriptor_1aadfb6bab4744a1550844211102dadf21" prot="public" static="no" mutable="no">
        <type>const HdCommandArgDescriptors</type>
        <definition>const HdCommandArgDescriptors commandArgs</definition>
        <argsstring></argsstring>
        <name>commandArgs</name>
        <briefdescription>
<para>List of arguments this command supports, may be empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/command.h" line="104" column="1" bodyfile="pxr/imaging/hd/command.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_hd_command_descriptor_1ad1afac4549b06b216d3a139ba9db9bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdCommandDescriptor</definition>
        <argsstring>()</argsstring>
        <name>HdCommandDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/command.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_command_descriptor_1a3c5fe0c431e72f67998022ccf2db7f09" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdCommandDescriptor</definition>
        <argsstring>(const TfToken &amp;name_, const std::string &amp;description_=&quot;&quot;, const HdCommandArgDescriptors &amp;args_=HdCommandArgDescriptors())</argsstring>
        <name>HdCommandDescriptor</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name_</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>description_</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const HdCommandArgDescriptors &amp;</type>
          <declname>args_</declname>
          <defval>HdCommandArgDescriptors()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/command.h" line="82" column="1" bodyfile="pxr/imaging/hd/command.h" bodystart="82" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A bundle of state describing a &quot;command&quot;. </para>
    </briefdescription>
    <detaileddescription>
<para>A command is simply a token that can be invoked and delivered to the render delegate. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1654">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="1653">
        <label>HdCommandDescriptor</label>
        <link refid="struct_hd_command_descriptor"/>
        <childnode refid="1654" relation="usage">
          <edgelabel>commandName</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/command.h" line="79" column="1" bodyfile="pxr/imaging/hd/command.h" bodystart="78" bodyend="106"/>
    <listofallmembers>
      <member refid="struct_hd_command_descriptor_1aadfb6bab4744a1550844211102dadf21" prot="public" virt="non-virtual"><scope>HdCommandDescriptor</scope><name>commandArgs</name></member>
      <member refid="struct_hd_command_descriptor_1a66956f8aa344477b4c373560707e4f79" prot="public" virt="non-virtual"><scope>HdCommandDescriptor</scope><name>commandDescription</name></member>
      <member refid="struct_hd_command_descriptor_1a84fc602d87f733cb56d45a061b959764" prot="public" virt="non-virtual"><scope>HdCommandDescriptor</scope><name>commandName</name></member>
      <member refid="struct_hd_command_descriptor_1ad1afac4549b06b216d3a139ba9db9bb5" prot="public" virt="non-virtual"><scope>HdCommandDescriptor</scope><name>HdCommandDescriptor</name></member>
      <member refid="struct_hd_command_descriptor_1a3c5fe0c431e72f67998022ccf2db7f09" prot="public" virt="non-virtual"><scope>HdCommandDescriptor</scope><name>HdCommandDescriptor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
