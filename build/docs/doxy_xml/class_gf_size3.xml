<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_size3" kind="class" language="C++" prot="public">
    <compoundname>GfSize3</compoundname>
    <includes refid="size3_8h" local="no">size3.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_size3_1a8242f10ad1fc8cdc218ed4840b8a45ac" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _vec[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="205" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_size3_1a15f73afb82ec07f0399d05bd99eac21e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize3</definition>
        <argsstring>()</argsstring>
        <name>GfSize3</name>
        <briefdescription>
<para>Default constructor initializes components to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="54" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a1c17b8a1eb9be54ccda5ab24bd78bb34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize3</definition>
        <argsstring>(const GfSize3 &amp;o)</argsstring>
        <name>GfSize3</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="59" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a45f260c55546c450ab6100571a34dbaa" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize3</definition>
        <argsstring>(const GfVec3i &amp;o)</argsstring>
        <name>GfSize3</name>
        <param>
          <type>const <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Conversion from <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="64" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1aac6af77742bc3dbfd18874d712bd2543" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize3</definition>
        <argsstring>(const size_t v[3])</argsstring>
        <name>GfSize3</name>
        <param>
          <type>const size_t</type>
          <declname>v</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Construct from an array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="69" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a679276d15b2980acb60bc8aa66114a99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize3</definition>
        <argsstring>(size_t v0, size_t v1, size_t v2)</argsstring>
        <name>GfSize3</name>
        <param>
          <type>size_t</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Construct from three values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="74" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a96d4b4ac9c334c6d7a7823012f6ab38a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; Set</definition>
        <argsstring>(const size_t v[3])</argsstring>
        <name>Set</name>
        <param>
          <type>const size_t</type>
          <declname>v</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Set to the values in <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="79" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a72f27ac82c804c94c4a53316185a15a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; Set</definition>
        <argsstring>(size_t v0, size_t v1, size_t v2)</argsstring>
        <name>Set</name>
        <param>
          <type>size_t</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Set to values passed directly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="87" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a965b1808d7f6a9faec040b358ab38369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; operator []</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator []</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Array operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="95" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1afe3be8164d5574ee62fd5b033337a50e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const size_t &amp;</type>
        <definition>const size_t&amp; operator []</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator []</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Const array operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="100" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a63665a9ca46fa5d0d6ca6c932fa47917" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const GfSize3 &amp;v) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise equality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="105" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1aa6bb74a51d51893b6ed770d3674f6a23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator !=</definition>
        <argsstring>(const GfSize3 &amp;v) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise inequality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="111" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a1c0e1274beee8a58953892c27230b7ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; operator+=</definition>
        <argsstring>(const GfSize3 &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="116" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="116" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a2422e37bfbf7863d56c92a8593b3cae3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; operator -=</definition>
        <argsstring>(const GfSize3 &amp;v)</argsstring>
        <name>operator -=</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="124" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a14578664b4bf7b0c794873a272644ea0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; operator *=</definition>
        <argsstring>(GfSize3 const &amp;v)</argsstring>
        <name>operator *=</name>
        <param>
          <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place multiplication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="132" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="132" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a90d2db0441dc402ef326ece9eacc0788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; operator *=</definition>
        <argsstring>(size_t d)</argsstring>
        <name>operator *=</name>
        <param>
          <type>size_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place multiplication by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="140" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="140" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1a226426f7087a21ebc77a05082c391e67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
        <definition>GfSize3&amp; operator/=</definition>
        <argsstring>(size_t d)</argsstring>
        <name>operator/=</name>
        <param>
          <type>size_t</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place division by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="148" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="148" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size3_1afb3c769b51fecf735ea942ea8f9c80a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator GfVec3i</definition>
        <argsstring>() const</argsstring>
        <name>operator GfVec3i</name>
        <briefdescription>
<para>Conversion to <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="201" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="201" bodyend="203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_size3_1a7fc92f1e27456dd5c1fd21c16690cda1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size3" kindref="compound">GfSize3</ref></type>
        <definition>GfSize3 operator+</definition>
        <argsstring>(const GfSize3 &amp;v1, const GfSize3 &amp;v3)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
<para>Component-wise addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="156" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="156" bodyend="160"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size3_1a107fa7dc23c69cee12901b286ac08803" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size3" kindref="compound">GfSize3</ref></type>
        <definition>GfSize3 operator -</definition>
        <argsstring>(const GfSize3 &amp;v1, const GfSize3 &amp;v3)</argsstring>
        <name>operator -</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
<para>Component-wise subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="163" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size3_1adf03c3e0c5a7c60c4d77c470027dfb88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size3" kindref="compound">GfSize3</ref></type>
        <definition>GfSize3 operator *</definition>
        <argsstring>(const GfSize3 &amp;v1, const GfSize3 &amp;v3)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v3</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="170" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="170" bodyend="174"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size3_1a0f3637e46417572032ca857a86d31e15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size3" kindref="compound">GfSize3</ref></type>
        <definition>GfSize3 operator *</definition>
        <argsstring>(const GfSize3 &amp;v1, size_t s)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="177" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="177" bodyend="181"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size3_1abad8aa4c749ad6a86032b1f295c3dfd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size3" kindref="compound">GfSize3</ref></type>
        <definition>GfSize3 operator *</definition>
        <argsstring>(size_t s, const GfSize3 &amp;v1)</argsstring>
        <name>operator *</name>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="184" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size3_1a40ea1d8d0ebd497216847dd50fca3831" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size3" kindref="compound">GfSize3</ref></type>
        <definition>GfSize3 operator/</definition>
        <argsstring>(const GfSize3 &amp;v1, size_t s)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Component-wise division by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="191" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size3_1a7ae17a4c7dbf571a87a1e875bcd3c2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend GF_API std::ostream &amp;</type>
        <definition>GF_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, GfSize3 const &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Output operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size3.h" line="198" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Three-dimensional array of sizes. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_gf_size3" kindref="compound">GfSize3</ref> is used to represent triples of counts. It is based on the datatype size_t, and thus can only represent non-negative values in each dimension. If you need to represent negative numbers as well, use GfVeci.</para>
<para>Usage of <ref refid="class_gf_size3" kindref="compound">GfSize3</ref> is similar to that of <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref>, except that all mathematical operations are componentwise (including multiplication). </para>
    </detaileddescription>
    <location file="pxr/base/gf/size3.h" line="51" column="1" bodyfile="pxr/base/gf/size3.h" bodystart="51" bodyend="206"/>
    <listofallmembers>
      <member refid="class_gf_size3_1a8242f10ad1fc8cdc218ed4840b8a45ac" prot="private" virt="non-virtual"><scope>GfSize3</scope><name>_vec</name></member>
      <member refid="class_gf_size3_1a15f73afb82ec07f0399d05bd99eac21e" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>GfSize3</name></member>
      <member refid="class_gf_size3_1a1c17b8a1eb9be54ccda5ab24bd78bb34" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>GfSize3</name></member>
      <member refid="class_gf_size3_1a45f260c55546c450ab6100571a34dbaa" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>GfSize3</name></member>
      <member refid="class_gf_size3_1aac6af77742bc3dbfd18874d712bd2543" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>GfSize3</name></member>
      <member refid="class_gf_size3_1a679276d15b2980acb60bc8aa66114a99" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>GfSize3</name></member>
      <member refid="class_gf_size3_1aa6bb74a51d51893b6ed770d3674f6a23" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator !=</name></member>
      <member refid="class_gf_size3_1adf03c3e0c5a7c60c4d77c470027dfb88" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator *</name></member>
      <member refid="class_gf_size3_1a0f3637e46417572032ca857a86d31e15" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator *</name></member>
      <member refid="class_gf_size3_1abad8aa4c749ad6a86032b1f295c3dfd4" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator *</name></member>
      <member refid="class_gf_size3_1a14578664b4bf7b0c794873a272644ea0" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator *=</name></member>
      <member refid="class_gf_size3_1a90d2db0441dc402ef326ece9eacc0788" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator *=</name></member>
      <member refid="class_gf_size3_1a107fa7dc23c69cee12901b286ac08803" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator -</name></member>
      <member refid="class_gf_size3_1a2422e37bfbf7863d56c92a8593b3cae3" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator -=</name></member>
      <member refid="class_gf_size3_1a965b1808d7f6a9faec040b358ab38369" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator []</name></member>
      <member refid="class_gf_size3_1afe3be8164d5574ee62fd5b033337a50e" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator []</name></member>
      <member refid="class_gf_size3_1afb3c769b51fecf735ea942ea8f9c80a3" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator GfVec3i</name></member>
      <member refid="class_gf_size3_1a7fc92f1e27456dd5c1fd21c16690cda1" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator+</name></member>
      <member refid="class_gf_size3_1a1c0e1274beee8a58953892c27230b7ea" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator+=</name></member>
      <member refid="class_gf_size3_1a40ea1d8d0ebd497216847dd50fca3831" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator/</name></member>
      <member refid="class_gf_size3_1a226426f7087a21ebc77a05082c391e67" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator/=</name></member>
      <member refid="class_gf_size3_1a7ae17a4c7dbf571a87a1e875bcd3c2ba" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_gf_size3_1a63665a9ca46fa5d0d6ca6c932fa47917" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>operator==</name></member>
      <member refid="class_gf_size3_1a96d4b4ac9c334c6d7a7823012f6ab38a" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>Set</name></member>
      <member refid="class_gf_size3_1a72f27ac82c804c94c4a53316185a15a3" prot="public" virt="non-virtual"><scope>GfSize3</scope><name>Set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
