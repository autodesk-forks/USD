<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_render_task" kind="class" language="C++" prot="public">
    <compoundname>HdxRenderTask</compoundname>
    <basecompoundref refid="class_hdx_task" prot="public" virt="non-virtual">HdxTask</basecompoundref>
    <derivedcompoundref refid="class_hdx_oit_render_task" prot="public" virt="non-virtual">HdxOitRenderTask</derivedcompoundref>
    <derivedcompoundref refid="class_hdx_oit_volume_render_task" prot="public" virt="non-virtual">HdxOitVolumeRenderTask</derivedcompoundref>
    <includes refid="render_task_8h" local="no">renderTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_render_task_1a30e7c6a5badb62b233ad66962a9d0a19" prot="private" static="no" mutable="no">
        <type>HdRenderPassSharedPtr</type>
        <definition>HdRenderPassSharedPtr _pass</definition>
        <argsstring></argsstring>
        <name>_pass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="113" column="1" bodyfile="pxr/imaging/hdx/renderTask.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_task_1ab4240dbb25786ef0d69778ecf3ed6ca1" prot="private" static="no" mutable="no">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _renderTags</definition>
        <argsstring></argsstring>
        <name>_renderTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="114" column="1" bodyfile="pxr/imaging/hdx/renderTask.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_task_1a0dff71b61f488d0f8880de4f3d0b4ba5" prot="private" static="no" mutable="no">
        <type>HdxRenderSetupTaskSharedPtr</type>
        <definition>HdxRenderSetupTaskSharedPtr _setupTask</definition>
        <argsstring></argsstring>
        <name>_setupTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="117" column="1" bodyfile="pxr/imaging/hdx/renderTask.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_render_task_1a5d7bf61dbc93dbd233040d377a5e32bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxRenderTask</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdxRenderTask</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a8d5b4e007911b44be45a912d1cb22ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API ~HdxRenderTask</definition>
        <argsstring>() override</argsstring>
        <name>~HdxRenderTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1aee8214de4b92be78038104b382d39292" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDX_API bool</type>
        <definition>HDX_API bool IsConverged</definition>
        <argsstring>() const override</argsstring>
        <name>IsConverged</name>
        <reimplements refid="class_hdx_task_1a72510b2c9b23e856a57a1d5f48e034b8">IsConverged</reimplements>
        <briefdescription>
<para>Hooks for progressive rendering (delegated to renderpasses). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Prepare</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex) override</argsstring>
        <name>Prepare</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
<para>Prepare the tasks resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Execute</definition>
        <argsstring>(HdTaskContext *ctx) override</argsstring>
        <name>Execute</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Execute render pass task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a4866840907139a2339b5eeb0d5fd8bce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>HDX_API const TfTokenVector&amp; GetRenderTags</definition>
        <argsstring>() const override</argsstring>
        <name>GetRenderTags</name>
        <briefdescription>
<para>Collect Render Tags used by the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="88" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hdx_render_task_1a9d69055700f007fb68f02377ec5d7f19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _Sync</definition>
        <argsstring>(HdSceneDelegate *delegate, HdTaskContext *ctx, HdDirtyBits *dirtyBits) override</argsstring>
        <name>_Sync</name>
        <reimplements refid="class_hdx_task_1adbceef9d029794eba7b97e6edd47d8fe">_Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Sync the render pass resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a1b6247e6af246ca86ed88425695bd455" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API HdRenderPassStateSharedPtr</type>
        <definition>HDX_API HdRenderPassStateSharedPtr _GetRenderPassState</definition>
        <argsstring>(HdTaskContext *ctx) const</argsstring>
        <name>_GetRenderPassState</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a35d8dd776b3c805b2aabf08f897b37c1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API bool</type>
        <definition>HDX_API bool _HasDrawItems</definition>
        <argsstring>() const</argsstring>
        <name>_HasDrawItems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_render_task_1a4d731f56c831b81b505b0edbcb66bb00" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SetHdStRenderPassState</definition>
        <argsstring>(HdTaskContext *ctx, HdStRenderPassState *renderPassState)</argsstring>
        <name>_SetHdStRenderPassState</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_render_pass_state" kindref="compound">HdStRenderPassState</ref> *</type>
          <declname>renderPassState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a5f66b6a4bdf8748aa5399e0c7e410982" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _NeedToClearAovs</definition>
        <argsstring>(HdRenderPassStateSharedPtr const &amp;renderPassState) const</argsstring>
        <name>_NeedToClearAovs</name>
        <param>
          <type>HdRenderPassStateSharedPtr const &amp;</type>
          <declname>renderPassState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a38f842f6146f12713bbadbe7720e68fe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxRenderTask</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxRenderTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a3898b4e39bd51dcb5325c69a84782fcb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxRenderTask</definition>
        <argsstring>(const HdxRenderTask &amp;)=delete</argsstring>
        <name>HdxRenderTask</name>
        <param>
          <type>const <ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_task_1a046d7d6af93f44b9da8d3beaaf77cc8a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> &amp;</type>
        <definition>HdxRenderTask&amp; operator=</definition>
        <argsstring>(const HdxRenderTask &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderTask.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A task for rendering geometry to pixels. </para>
    </briefdescription>
    <detaileddescription>
<para>Rendering state management can be handled two ways: 1.) An application can create an <ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> and pass it the <ref refid="struct_hdx_render_task_params" kindref="compound">HdxRenderTaskParams</ref> struct as &quot;params&quot;. 2.) An application can create an <ref refid="class_hdx_render_setup_task" kindref="compound">HdxRenderSetupTask</ref> and an <ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref>, and pass params to the setup task. In this case the setup task must run first.</para>
<para>Parameter unpacking is handled by <ref refid="class_hdx_render_setup_task" kindref="compound">HdxRenderSetupTask</ref>; in case #1, <ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> creates a dummy setup task internally to manage the sync process.</para>
<para>Case #2 introduces complexity; the benefit is that by changing which setup task you run before the render task, you can change the render parameters without incurring a hydra sync or rebuilding any resources. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3621">
        <label>HdxOitRenderTask</label>
        <link refid="class_hdx_oit_render_task"/>
        <childnode refid="3619" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3622">
        <label>HdxOitVolumeRenderTask</label>
        <link refid="class_hdx_oit_volume_render_task"/>
        <childnode refid="3619" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3620">
        <label>HdxTask</label>
        <link refid="class_hdx_task"/>
      </node>
      <node id="3619">
        <label>HdxRenderTask</label>
        <link refid="class_hdx_render_task"/>
        <childnode refid="3620" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3624">
        <label>HdxTask</label>
        <link refid="class_hdx_task"/>
      </node>
      <node id="3623">
        <label>HdxRenderTask</label>
        <link refid="class_hdx_render_task"/>
        <childnode refid="3624" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdx/renderTask.h" line="65" column="1" bodyfile="pxr/imaging/hdx/renderTask.h" bodystart="64" bodyend="131"/>
    <listofallmembers>
      <member refid="class_hd_task_1ab4beed642380f0353cf158cef16c4f32" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_GetDriver</name></member>
      <member refid="class_hdx_task_1a16f5049f3fc01c4beaff232f96bb3b89" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_GetHgi</name></member>
      <member refid="class_hdx_render_task_1a1b6247e6af246ca86ed88425695bd455" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_GetRenderPassState</name></member>
      <member refid="class_hd_task_1a2ceca911620546c6b245d903f9ec5f78" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_GetTaskContextData</name></member>
      <member refid="class_hd_task_1a50bb64fcb3404805df436ad9e12ddd3c" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_GetTaskParams</name></member>
      <member refid="class_hd_task_1a7db1af254e4af3fbffc974c19968a6e7" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_GetTaskRenderTags</name></member>
      <member refid="class_hdx_render_task_1a35d8dd776b3c805b2aabf08f897b37c1" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_HasDrawItems</name></member>
      <member refid="class_hd_task_1a6f03b9a9e34350db200b0a7f252eaf8e" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_HasTaskContextData</name></member>
      <member refid="class_hdx_render_task_1a5f66b6a4bdf8748aa5399e0c7e410982" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>_NeedToClearAovs</name></member>
      <member refid="class_hdx_render_task_1a30e7c6a5badb62b233ad66962a9d0a19" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>_pass</name></member>
      <member refid="class_hdx_render_task_1ab4240dbb25786ef0d69778ecf3ed6ca1" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>_renderTags</name></member>
      <member refid="class_hdx_render_task_1a4d731f56c831b81b505b0edbcb66bb00" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>_SetHdStRenderPassState</name></member>
      <member refid="class_hdx_render_task_1a0dff71b61f488d0f8880de4f3d0b4ba5" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>_setupTask</name></member>
      <member refid="class_hdx_task_1a7d7d28eeab4c68ce5d538ac9a7913abe" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_SwapTextures</name></member>
      <member refid="class_hdx_render_task_1a9d69055700f007fb68f02377ec5d7f19" prot="protected" virt="virtual"><scope>HdxRenderTask</scope><name>_Sync</name></member>
      <member refid="class_hdx_task_1a6ad7b2b98cc34e2b1783e4c6f4237438" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_ToggleDepthTarget</name></member>
      <member refid="class_hdx_task_1a49a40985ee2c769442da27b5603ebf55" prot="protected" virt="non-virtual"><scope>HdxRenderTask</scope><name>_ToggleRenderTarget</name></member>
      <member refid="class_hdx_render_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>Execute</name></member>
      <member refid="class_hd_task_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>GetId</name></member>
      <member refid="class_hd_task_1ade051cd8ff53a108b7e6c27be99a5e3a" prot="public" virt="virtual"><scope>HdxRenderTask</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hdx_render_task_1a4866840907139a2339b5eeb0d5fd8bce" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>GetRenderTags</name></member>
      <member refid="class_hd_task_1a3df864dcce7538c1b130b105af7c2406" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>HdTask</name></member>
      <member refid="class_hdx_render_task_1a5d7bf61dbc93dbd233040d377a5e32bb" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>HdxRenderTask</name></member>
      <member refid="class_hdx_render_task_1a38f842f6146f12713bbadbe7720e68fe" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>HdxRenderTask</name></member>
      <member refid="class_hdx_render_task_1a3898b4e39bd51dcb5325c69a84782fcb" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>HdxRenderTask</name></member>
      <member refid="class_hdx_task_1a3043804871bb4471cb1042612674973e" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>HdxTask</name></member>
      <member refid="class_hdx_render_task_1aee8214de4b92be78038104b382d39292" prot="public" virt="virtual"><scope>HdxRenderTask</scope><name>IsConverged</name></member>
      <member refid="class_hdx_render_task_1a046d7d6af93f44b9da8d3beaaf77cc8a" prot="private" virt="non-virtual"><scope>HdxRenderTask</scope><name>operator=</name></member>
      <member refid="class_hdx_render_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>Prepare</name></member>
      <member refid="class_hdx_task_1ae8a3dcff7f362ad7356b852d5c970e7e" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>Sync</name></member>
      <member refid="class_hd_task_1a08a2f7cc6d3767c8081f5098bd113d66" prot="public" virt="virtual"><scope>HdxRenderTask</scope><name>~HdTask</name></member>
      <member refid="class_hdx_render_task_1a8d5b4e007911b44be45a912d1cb22ff3" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>~HdxRenderTask</name></member>
      <member refid="class_hdx_task_1a0dbe76889f321b9f14b5e7aed6d23aa5" prot="public" virt="non-virtual"><scope>HdxRenderTask</scope><name>~HdxTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
