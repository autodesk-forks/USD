<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_proc_tokens_type" kind="class" language="C++" prot="public">
    <compoundname>UsdProcTokensType</compoundname>
    <includes refid="usd_2usd_proc_2tokens_8h" local="no">tokens.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_usd_proc_tokens_type_1a9cf46225f954900be4986240d9a8147a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken proceduralSystem</definition>
        <argsstring></argsstring>
        <name>proceduralSystem</name>
        <briefdescription>
<para>&quot;proceduralSystem&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_proc_generative_procedural" kindref="compound">UsdProcGenerativeProcedural</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdProc/tokens.h" line="68" column="1" bodyfile="pxr/usd/usdProc/tokens.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_proc_tokens_type_1a15b9645b38c3735f148f46ebc9eb14ac" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken GenerativeProcedural</definition>
        <argsstring></argsstring>
        <name>GenerativeProcedural</name>
        <briefdescription>
<para>&quot;GenerativeProcedural&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_proc_generative_procedural" kindref="compound">UsdProcGenerativeProcedural</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdProc/tokens.h" line="72" column="1" bodyfile="pxr/usd/usdProc/tokens.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_proc_tokens_type_1a06ed732eeddfeba03daedd49167195fa" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;</type>
        <definition>const std::vector&lt;TfToken&gt; allTokens</definition>
        <argsstring></argsstring>
        <name>allTokens</name>
        <briefdescription>
<para>A vector of all of the tokens listed above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdProc/tokens.h" line="74" column="1" bodyfile="pxr/usd/usdProc/tokens.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_proc_tokens_type_1afd4d17109dddd5bb16e86eae3adb66f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPROC_API</type>
        <definition>USDPROC_API UsdProcTokensType</definition>
        <argsstring>()</argsstring>
        <name>UsdProcTokensType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdProc/tokens.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="usd_2usd_proc_2tokens_8h_1a24ff1b213ff0c2fec1ad903d07f81513" kindref="member">UsdProcTokens</ref> provides static, efficient <ref refid="class_tf_token" kindref="compound">TfTokens</ref> for use in all public USD API. </para>
    </briefdescription>
    <detaileddescription>
<para>These tokens are auto-generated from the module&apos;s schema, representing property names, for when you need to fetch an attribute or relationship directly by name, e.g. <ref refid="class_usd_prim_1a31225ac7165f58726f000ab1d67e9e61" kindref="member">UsdPrim::GetAttribute()</ref>, in the most efficient manner, and allow the compiler to verify that you spelled the name correctly.</para>
<para>UsdProcTokens also contains all of the <emphasis>allowedTokens</emphasis> values declared for schema builtin attributes of &apos;token&apos; scene description type. Use UsdProcTokens like so:</para>
<para><programlisting><codeline><highlight class="normal">gprim.GetMyTokenValuedAttr().Set(UsdProcTokens-&gt;proceduralSystem);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7899">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="7898">
        <label>UsdProcTokensType</label>
        <link refid="struct_usd_proc_tokens_type"/>
        <childnode refid="7899" relation="usage">
          <edgelabel>GenerativeProcedural</edgelabel>
          <edgelabel>proceduralSystem</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdProc/tokens.h" line="63" column="1" bodyfile="pxr/usd/usdProc/tokens.h" bodystart="63" bodyend="75"/>
    <listofallmembers>
      <member refid="struct_usd_proc_tokens_type_1a06ed732eeddfeba03daedd49167195fa" prot="public" virt="non-virtual"><scope>UsdProcTokensType</scope><name>allTokens</name></member>
      <member refid="struct_usd_proc_tokens_type_1a15b9645b38c3735f148f46ebc9eb14ac" prot="public" virt="non-virtual"><scope>UsdProcTokensType</scope><name>GenerativeProcedural</name></member>
      <member refid="struct_usd_proc_tokens_type_1a9cf46225f954900be4986240d9a8147a" prot="public" virt="non-virtual"><scope>UsdProcTokensType</scope><name>proceduralSystem</name></member>
      <member refid="struct_usd_proc_tokens_type_1afd4d17109dddd5bb16e86eae3adb66f4" prot="public" virt="non-virtual"><scope>UsdProcTokensType</scope><name>UsdProcTokensType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
