<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_stage_load_rules" kind="class" language="C++" prot="public">
    <compoundname>UsdStageLoadRules</compoundname>
    <includes refid="stage_load_rules_8h" local="no">stageLoadRules.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" prot="public" static="no" strong="no">
        <type></type>
        <name>Rule</name>
        <enumvalue id="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78a044335c287e0b8be177923ffb058051f" prot="public">
          <name>AllRule</name>
          <briefdescription>
<para>Include payloads on the specified prim and all descendants. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78af14fb42164526579c3a04ef6da842df7" prot="public">
          <name>OnlyRule</name>
          <briefdescription>
<para>Include payloads on the specified prim but no descendants. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78ab35d1b24964bda5e8eab011402b498f7" prot="public">
          <name>NoneRule</name>
          <briefdescription>
<para>Exclude payloads on the specified prim and all descendants. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>These values are paired with paths to govern payload inclusion on UsdStages. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="63" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="63" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_stage_load_rules_1a2ff21c8c838848773ad9b3fff05a6d4b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;SdfPath, Rule&gt; &gt; _rules</definition>
        <argsstring></argsstring>
        <name>_rules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="219" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_stage_load_rules_1ae80513736473df4cb5de84ab8049a0f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdStageLoadRules</definition>
        <argsstring>()=default</argsstring>
        <name>UsdStageLoadRules</name>
        <briefdescription>
<para>Construct rules that load all payloads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a0587f5e03d581320cec839c452ee42c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdStageLoadRules</definition>
        <argsstring>(UsdStageLoadRules const &amp;)=default</argsstring>
        <name>UsdStageLoadRules</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1aacc64afbd594d26d6c0688ea5e7ca9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdStageLoadRules</definition>
        <argsstring>(UsdStageLoadRules &amp;&amp;)=default</argsstring>
        <name>UsdStageLoadRules</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a2773310abbd1112b21638063f3a70b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> &amp;</type>
        <definition>UsdStageLoadRules&amp; operator=</definition>
        <argsstring>(UsdStageLoadRules const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ae6b055275bd0d76057e4a9092c0a8f29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> &amp;</type>
        <definition>UsdStageLoadRules&amp; operator=</definition>
        <argsstring>(UsdStageLoadRules &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ab4391ecf5a7a395dee7f97a530b5f553" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void LoadWithDescendants</definition>
        <argsstring>(SdfPath const &amp;path)</argsstring>
        <name>LoadWithDescendants</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Add a rule indicating that <computeroutput>path</computeroutput>, all its ancestors, and all its descendants shall be loaded. </para>
        </briefdescription>
        <detaileddescription>
<para>Any previous rules created by calling <ref refid="class_usd_stage_load_rules_1a612c20fb472a2f3a45873ef925d40fd1" kindref="member">LoadWithoutDescendants()</ref> or <ref refid="class_usd_stage_load_rules_1ab497121b3c8baa5def82d2296909220d" kindref="member">Unload()</ref> on this path or descendant paths are replaced by this rule. For example, calling LoadWithoutDescendants(&apos;/World/sets/kitchen&apos;) followed by LoadWithDescendants(&apos;/World/sets&apos;) will effectively remove the rule created in the first call. See <ref refid="class_usd_stage_load_rules_1a5b354b9e294348c7c7939d4ad2994721" kindref="member">AddRule()</ref> for more direct manipulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a612c20fb472a2f3a45873ef925d40fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void LoadWithoutDescendants</definition>
        <argsstring>(SdfPath const &amp;path)</argsstring>
        <name>LoadWithoutDescendants</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Add a rule indicating that <computeroutput>path</computeroutput> and all its ancestors but none of its descendants shall be loaded. </para>
        </briefdescription>
        <detaileddescription>
<para>Any previous rules created by calling <ref refid="class_usd_stage_load_rules_1ab4391ecf5a7a395dee7f97a530b5f553" kindref="member">LoadWithDescendants()</ref> or <ref refid="class_usd_stage_load_rules_1ab497121b3c8baa5def82d2296909220d" kindref="member">Unload()</ref> on this path or descendant paths are replaced or restricted by this rule. For example, calling LoadWithDescendants(&apos;/World/sets&apos;) followed by LoadWithoutDescendants(&apos;/World/sets/kitchen&apos;) will cause everything under &apos;/World/sets&apos; to load except for those things under &apos;/World/sets/kitchen&apos;. See <ref refid="class_usd_stage_load_rules_1a5b354b9e294348c7c7939d4ad2994721" kindref="member">AddRule()</ref> for more direct manipulation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ab497121b3c8baa5def82d2296909220d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void Unload</definition>
        <argsstring>(SdfPath const &amp;path)</argsstring>
        <name>Unload</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Add a rule indicating that <computeroutput>path</computeroutput> and all its descendants shall be unloaded. </para>
        </briefdescription>
        <detaileddescription>
<para>Any previous rules created by calling <ref refid="class_usd_stage_load_rules_1ab4391ecf5a7a395dee7f97a530b5f553" kindref="member">LoadWithDescendants()</ref> or <ref refid="class_usd_stage_load_rules_1a612c20fb472a2f3a45873ef925d40fd1" kindref="member">LoadWithoutDescendants()</ref> on this path or descendant paths are replaced or restricted by this rule. For example, calling LoadWithDescendants(&apos;/World/sets&apos;) followed by Unload(&apos;/World/sets/kitchen&apos;) will cause everything under &apos;/World/sets&apos; to load, except for &apos;/World/sets/kitchen&apos; and everything under it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1aede7eb7d5ad8aeee38ed858a3a3d1e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void LoadAndUnload</definition>
        <argsstring>(const SdfPathSet &amp;loadSet, const SdfPathSet &amp;unloadSet, UsdLoadPolicy policy)</argsstring>
        <name>LoadAndUnload</name>
        <param>
          <type>const SdfPathSet &amp;</type>
          <declname>loadSet</declname>
        </param>
        <param>
          <type>const SdfPathSet &amp;</type>
          <declname>unloadSet</declname>
        </param>
        <param>
          <type><ref refid="common_8h_1aeeb09bb9e2bd68b2622a29dc649c8d5a" kindref="member">UsdLoadPolicy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Add rules as if <ref refid="class_usd_stage_load_rules_1ab497121b3c8baa5def82d2296909220d" kindref="member">Unload()</ref> was called for each element of <computeroutput>unloadSet</computeroutput> followed by calls to either <ref refid="class_usd_stage_load_rules_1ab4391ecf5a7a395dee7f97a530b5f553" kindref="member">LoadWithDescendants()</ref> (if <computeroutput>policy</computeroutput> is UsdLoadPolicy::LoadWithDescendants) or <ref refid="class_usd_stage_load_rules_1a612c20fb472a2f3a45873ef925d40fd1" kindref="member">LoadWithoutDescendants()</ref> (if <computeroutput>policy</computeroutput> is UsdLoadPolicy::LoadWithoutDescendants) for each element of <computeroutput>loadSet</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a5b354b9e294348c7c7939d4ad2994721" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void AddRule</definition>
        <argsstring>(SdfPath const &amp;path, Rule rule)</argsstring>
        <name>AddRule</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref></type>
          <declname>rule</declname>
        </param>
        <briefdescription>
<para>Add a literal rule. If there&apos;s already a rule for <computeroutput>path</computeroutput>, replace it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ac2d60aa1655efefc9b1b3cd6e0406a3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void SetRules</definition>
        <argsstring>(std::vector&lt; std::pair&lt; SdfPath, Rule &gt;&gt; const &amp;rules)</argsstring>
        <name>SetRules</name>
        <param>
          <type>std::vector&lt; std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt;&gt; const &amp;</type>
          <declname>rules</declname>
        </param>
        <briefdescription>
<para>Set literal rules, must be sorted by <ref refid="class_sdf_path_1aad310c9d17d03812d810bf4e4edf3fb9" kindref="member">SdfPath::operator&lt;</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a1179f7ab03f6586ea8a9ac5006dd2b4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetRules</definition>
        <argsstring>(std::vector&lt; std::pair&lt; SdfPath, Rule &gt;&gt; &amp;&amp;rules)</argsstring>
        <name>SetRules</name>
        <param>
          <type>std::vector&lt; std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt;&gt; &amp;&amp;</type>
          <declname>rules</declname>
        </param>
        <briefdescription>
<para>Set literal rules, must be sorted by <ref refid="class_sdf_path_1aad310c9d17d03812d810bf4e4edf3fb9" kindref="member">SdfPath::operator&lt;</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="144" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a8829a35d4c1419ca97085f8d6695e635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void Minimize</definition>
        <argsstring>()</argsstring>
        <name>Minimize</name>
        <briefdescription>
<para>Remove any redundant rules to make the set of rules as small as possible without changing behavior. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a06e5588a493c9449a05f66c5cf4a91db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool IsLoaded</definition>
        <argsstring>(SdfPath const &amp;path) const</argsstring>
        <name>IsLoaded</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return true if the given <computeroutput>path</computeroutput> is considered loaded by these rules, or false if it is considered unloaded. </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to GetEffectiveRuleForPath(path) != NoneRule. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1aa005aad275b9cd96c105c742930ebf02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool IsLoadedWithAllDescendants</definition>
        <argsstring>(SdfPath const &amp;path) const</argsstring>
        <name>IsLoadedWithAllDescendants</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return true if the given <computeroutput>path</computeroutput> and all descendants are considered loaded by these rules; false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a7f63f35bccfb23b2d97654e8310be151" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool IsLoadedWithNoDescendants</definition>
        <argsstring>(SdfPath const &amp;path) const</argsstring>
        <name>IsLoadedWithNoDescendants</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return true if the given <computeroutput>path</computeroutput> and is considered loaded, but none of its descendants are considered loaded by these rules; false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a9d51012097d6ec72561b610267e080e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref></type>
        <definition>USD_API Rule GetEffectiveRuleForPath</definition>
        <argsstring>(SdfPath const &amp;path) const</argsstring>
        <name>GetEffectiveRuleForPath</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return the &quot;effective&quot; rule for the given <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, if the closest ancestral rule of <computeroutput>path</computeroutput> is an <computeroutput>AllRule</computeroutput>, return <computeroutput>AllRule</computeroutput>. If the closest ancestral rule of <computeroutput>path</computeroutput> is for <computeroutput>path</computeroutput> itself and it is an <computeroutput>OnlyRule</computeroutput>, return <computeroutput>OnlyRule</computeroutput>. Otherwise if there is a closest descendant rule to <computeroutput>path</computeroutput> this is an <computeroutput>OnlyRule</computeroutput> or an <computeroutput>AllRule</computeroutput>, return <computeroutput>OnlyRule</computeroutput>. Otherwise return <computeroutput>NoneRule</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a2dbc7f9a3839c1fb0283dc781aafb70f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt; &gt; const  &amp;</type>
        <definition>std::vector&lt;std::pair&lt;SdfPath, Rule&gt; &gt; const&amp; GetRules</definition>
        <argsstring>() const</argsstring>
        <name>GetRules</name>
        <briefdescription>
<para>Return all the rules as a vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="179" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ad028f0ab82cbe7f81d355910ecd8f26b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool operator==</definition>
        <argsstring>(UsdStageLoadRules const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>other</computeroutput> has exactly the same set of rules as this. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this means rules that are functionally equivalent may compare inequal. If this is not desired, ensure both sets of rules are reduced by <ref refid="class_usd_stage_load_rules_1a8829a35d4c1419ca97085f8d6695e635" kindref="member">Minimize()</ref> first. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1a40ef776940e40272b0f534c6d57e40fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(UsdStageLoadRules const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return false if <computeroutput>other</computeroutput> has exactly the same set of rules as this. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_usd_stage_load_rules_1ad028f0ab82cbe7f81d355910ecd8f26b" kindref="member">operator==()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="192" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ab8cb2c6746f4680c0c862aededa90bce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(UsdStageLoadRules &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swap the contents of these rules with <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="197" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="197" bodyend="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_stage_load_rules_1af5672f3ad2c9b16edf765b50104d7127" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref></type>
        <definition>static UsdStageLoadRules LoadAll</definition>
        <argsstring>()</argsstring>
        <name>LoadAll</name>
        <briefdescription>
<para>Return rules that load all payloads. </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to default-constructed <ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="77" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1ac3699e04c23147fe2d7ecac2f79d43b6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref></type>
        <definition>static USD_API UsdStageLoadRules LoadNone</definition>
        <argsstring>()</argsstring>
        <name>LoadNone</name>
        <briefdescription>
<para>Return rules that load no payloads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_stage_load_rules_1a18bb15cc95932df4dd0c79adfeab2a9a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend USD_API std::ostream &amp;</type>
        <definition>USD_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, std::pair&lt; SdfPath, Rule &gt; const &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt; const &amp;</type>
        </param>
        <briefdescription>
<para>Stream a text representation of a pair of <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> and <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">UsdStageLoadRules::Rule</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_stage_load_rules_1a711f031ac901e6f79e74a4d1b1c9d567" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend USD_API std::ostream &amp;</type>
        <definition>USD_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, UsdStageLoadRules const &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Stream a text representation of a <ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_stage_load_rules_1a05e1c3f96e5da7ccfcfbf8fdabde1be3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend USD_API size_t</type>
        <definition>USD_API size_t hash_value</definition>
        <argsstring>(UsdStageLoadRules const &amp;)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Return the hash code for a <ref refid="class_usd_stage_load_rules" kindref="compound">UsdStageLoadRules</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="209" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_stage_load_rules_1aa8b077cb3d81bbf5732ae3811ee9c1b2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::vector&lt; std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt; &gt;::const_iterator</type>
        <definition>USD_API std::vector&lt;std::pair&lt;SdfPath, Rule&gt; &gt;::const_iterator _LowerBound</definition>
        <argsstring>(SdfPath const &amp;path) const</argsstring>
        <name>_LowerBound</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_stage_load_rules_1aa46d6269fe761543338bfc33a3746b94" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::vector&lt; std::pair&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" kindref="member">Rule</ref> &gt; &gt;::iterator</type>
        <definition>USD_API std::vector&lt;std::pair&lt;SdfPath, Rule&gt; &gt;::iterator _LowerBound</definition>
        <argsstring>(SdfPath const &amp;path)</argsstring>
        <name>_LowerBound</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageLoadRules.h" line="217" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents rules that govern payload inclusion on UsdStages. </para>
    </briefdescription>
    <detaileddescription>
<para>Rules are represented as pairs of <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> and a Rule enum value, one of AllRule, OnlyRule, and NoneRule. To understand how rules apply to particular paths, see <ref refid="class_usd_stage_load_rules_1a9d51012097d6ec72561b610267e080e4" kindref="member">UsdStageLoadRules::GetEffectiveRuleForPath()</ref>.</para>
<para>Convenience methods for manipulating rules by typical &apos;Load&apos; and &apos;Unload&apos; operations are provided in <ref refid="class_usd_stage_load_rules_1a612c20fb472a2f3a45873ef925d40fd1" kindref="member">UsdStageLoadRules::LoadWithoutDescendants()</ref>, <ref refid="class_usd_stage_load_rules_1ab4391ecf5a7a395dee7f97a530b5f553" kindref="member">UsdStageLoadRules::LoadWithDescendants()</ref>, <ref refid="class_usd_stage_load_rules_1ab497121b3c8baa5def82d2296909220d" kindref="member">UsdStageLoadRules::Unload()</ref>.</para>
<para>For finer-grained rule crafting, see <ref refid="class_usd_stage_load_rules_1a5b354b9e294348c7c7939d4ad2994721" kindref="member">AddRule()</ref>.</para>
<para>Remove redundant rules that do not change the effective load state with <ref refid="class_usd_stage_load_rules_1a8829a35d4c1419ca97085f8d6695e635" kindref="member">UsdStageLoadRules::Minimize()</ref>. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/stageLoadRules.h" line="57" column="1" bodyfile="pxr/usd/usd/stageLoadRules.h" bodystart="56" bodyend="221"/>
    <listofallmembers>
      <member refid="class_usd_stage_load_rules_1aa8b077cb3d81bbf5732ae3811ee9c1b2" prot="private" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>_LowerBound</name></member>
      <member refid="class_usd_stage_load_rules_1aa46d6269fe761543338bfc33a3746b94" prot="private" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>_LowerBound</name></member>
      <member refid="class_usd_stage_load_rules_1a2ff21c8c838848773ad9b3fff05a6d4b" prot="private" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>_rules</name></member>
      <member refid="class_usd_stage_load_rules_1a5b354b9e294348c7c7939d4ad2994721" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>AddRule</name></member>
      <member refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78a044335c287e0b8be177923ffb058051f" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>AllRule</name></member>
      <member refid="class_usd_stage_load_rules_1a9d51012097d6ec72561b610267e080e4" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>GetEffectiveRuleForPath</name></member>
      <member refid="class_usd_stage_load_rules_1a2dbc7f9a3839c1fb0283dc781aafb70f" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>GetRules</name></member>
      <member refid="class_usd_stage_load_rules_1a05e1c3f96e5da7ccfcfbf8fdabde1be3" prot="private" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>hash_value</name></member>
      <member refid="class_usd_stage_load_rules_1a06e5588a493c9449a05f66c5cf4a91db" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>IsLoaded</name></member>
      <member refid="class_usd_stage_load_rules_1aa005aad275b9cd96c105c742930ebf02" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>IsLoadedWithAllDescendants</name></member>
      <member refid="class_usd_stage_load_rules_1a7f63f35bccfb23b2d97654e8310be151" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>IsLoadedWithNoDescendants</name></member>
      <member refid="class_usd_stage_load_rules_1af5672f3ad2c9b16edf765b50104d7127" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>LoadAll</name></member>
      <member refid="class_usd_stage_load_rules_1aede7eb7d5ad8aeee38ed858a3a3d1e1b" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>LoadAndUnload</name></member>
      <member refid="class_usd_stage_load_rules_1ac3699e04c23147fe2d7ecac2f79d43b6" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>LoadNone</name></member>
      <member refid="class_usd_stage_load_rules_1ab4391ecf5a7a395dee7f97a530b5f553" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>LoadWithDescendants</name></member>
      <member refid="class_usd_stage_load_rules_1a612c20fb472a2f3a45873ef925d40fd1" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>LoadWithoutDescendants</name></member>
      <member refid="class_usd_stage_load_rules_1a8829a35d4c1419ca97085f8d6695e635" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>Minimize</name></member>
      <member refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78ab35d1b24964bda5e8eab011402b498f7" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>NoneRule</name></member>
      <member refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78af14fb42164526579c3a04ef6da842df7" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>OnlyRule</name></member>
      <member refid="class_usd_stage_load_rules_1a40ef776940e40272b0f534c6d57e40fe" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>operator!=</name></member>
      <member refid="class_usd_stage_load_rules_1a18bb15cc95932df4dd0c79adfeab2a9a" prot="private" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_usd_stage_load_rules_1a711f031ac901e6f79e74a4d1b1c9d567" prot="private" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_usd_stage_load_rules_1a2773310abbd1112b21638063f3a70b0e" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>operator=</name></member>
      <member refid="class_usd_stage_load_rules_1ae6b055275bd0d76057e4a9092c0a8f29" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>operator=</name></member>
      <member refid="class_usd_stage_load_rules_1ad028f0ab82cbe7f81d355910ecd8f26b" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>operator==</name></member>
      <member refid="class_usd_stage_load_rules_1a11fcd51ef86118f65e603c1474377a78" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>Rule</name></member>
      <member refid="class_usd_stage_load_rules_1ac2d60aa1655efefc9b1b3cd6e0406a3a" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>SetRules</name></member>
      <member refid="class_usd_stage_load_rules_1a1179f7ab03f6586ea8a9ac5006dd2b4a" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>SetRules</name></member>
      <member refid="class_usd_stage_load_rules_1ab8cb2c6746f4680c0c862aededa90bce" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>swap</name></member>
      <member refid="class_usd_stage_load_rules_1ab497121b3c8baa5def82d2296909220d" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>Unload</name></member>
      <member refid="class_usd_stage_load_rules_1ae80513736473df4cb5de84ab8049a0f9" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>UsdStageLoadRules</name></member>
      <member refid="class_usd_stage_load_rules_1a0587f5e03d581320cec839c452ee42c9" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>UsdStageLoadRules</name></member>
      <member refid="class_usd_stage_load_rules_1aacc64afbd594d26d6c0688ea5e7ca9d8" prot="public" virt="non-virtual"><scope>UsdStageLoadRules</scope><name>UsdStageLoadRules</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
