<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_present_task" kind="class" language="C++" prot="public">
    <compoundname>HdxPresentTask</compoundname>
    <basecompoundref refid="class_hdx_task" prot="public" virt="non-virtual">HdxTask</basecompoundref>
    <includes refid="present_task_8h" local="no">presentTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_present_task_1a9722e11f8adfdf299a2e27843d43e9ec" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hdx_present_task_params" kindref="compound">HdxPresentTaskParams</ref></type>
        <definition>HdxPresentTaskParams _params</definition>
        <argsstring></argsstring>
        <name>_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="107" column="1" bodyfile="pxr/imaging/hdx/presentTask.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_present_task_1a75bf2a6b42d46d218f9841b1ea14d76e" prot="private" static="no" mutable="no">
        <type><ref refid="class_hgi_interop" kindref="compound">HgiInterop</ref></type>
        <definition>HgiInterop _interop</definition>
        <argsstring></argsstring>
        <name>_interop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="108" column="1" bodyfile="pxr/imaging/hdx/presentTask.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hdx_present_task_1ad70343cdd7f09667e17d2cb6be2dc929" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API bool</type>
        <definition>static HDX_API bool IsFormatSupported</definition>
        <argsstring>(HgiFormat aovFormat)</argsstring>
        <name>IsFormatSupported</name>
        <param>
          <type>HgiFormat</type>
          <declname>aovFormat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_present_task_1aec16aba1160ea3cf46ea9a1ba2f5d5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxPresentTask</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdxPresentTask</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_present_task_1a53e977af0f85435c08974bb6cb51f44c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API ~HdxPresentTask</definition>
        <argsstring>() override</argsstring>
        <name>~HdxPresentTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_present_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Prepare</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex) override</argsstring>
        <name>Prepare</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_present_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Execute</definition>
        <argsstring>(HdTaskContext *ctx) override</argsstring>
        <name>Execute</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="98" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hdx_present_task_1a9d69055700f007fb68f02377ec5d7f19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _Sync</definition>
        <argsstring>(HdSceneDelegate *delegate, HdTaskContext *ctx, HdDirtyBits *dirtyBits) override</argsstring>
        <name>_Sync</name>
        <reimplements refid="class_hdx_task_1adbceef9d029794eba7b97e6edd47d8fe">_Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_present_task_1a6f7a0090f7e72d6c4c605b79786edc90" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxPresentTask</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxPresentTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_present_task_1a07fd5541f6b56baa291f72248d0501e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxPresentTask</definition>
        <argsstring>(const HdxPresentTask &amp;)=delete</argsstring>
        <name>HdxPresentTask</name>
        <param>
          <type>const <ref refid="class_hdx_present_task" kindref="compound">HdxPresentTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_present_task_1ae7c4f58acdbc2cee4f52288b54f91a4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hdx_present_task" kindref="compound">HdxPresentTask</ref> &amp;</type>
        <definition>HdxPresentTask&amp; operator=</definition>
        <argsstring>(const HdxPresentTask &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hdx_present_task" kindref="compound">HdxPresentTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/presentTask.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A task for taking the final result of the aovs and compositing it over the currently bound framebuffer. </para>
    </briefdescription>
    <detaileddescription>
<para>This task uses the &apos;color&apos; and optionally &apos;depth&apos; aov&apos;s in the task context. The &apos;color&apos; aov is expected to use non-integer (i.e., float or norm) types to keep the interop step simple. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3606">
        <label>HdxPresentTask</label>
        <link refid="class_hdx_present_task"/>
        <childnode refid="3607" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3607">
        <label>HdxTask</label>
        <link refid="class_hdx_task"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3608">
        <label>HdxPresentTask</label>
        <link refid="class_hdx_present_task"/>
        <childnode refid="3609" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3609">
        <label>HdxTask</label>
        <link refid="class_hdx_task"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdx/presentTask.h" line="79" column="1" bodyfile="pxr/imaging/hdx/presentTask.h" bodystart="78" bodyend="113"/>
    <listofallmembers>
      <member refid="class_hd_task_1ab4beed642380f0353cf158cef16c4f32" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_GetDriver</name></member>
      <member refid="class_hdx_task_1a16f5049f3fc01c4beaff232f96bb3b89" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_GetHgi</name></member>
      <member refid="class_hd_task_1a2ceca911620546c6b245d903f9ec5f78" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_GetTaskContextData</name></member>
      <member refid="class_hd_task_1a50bb64fcb3404805df436ad9e12ddd3c" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_GetTaskParams</name></member>
      <member refid="class_hd_task_1a7db1af254e4af3fbffc974c19968a6e7" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_GetTaskRenderTags</name></member>
      <member refid="class_hd_task_1a6f03b9a9e34350db200b0a7f252eaf8e" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_HasTaskContextData</name></member>
      <member refid="class_hdx_present_task_1a75bf2a6b42d46d218f9841b1ea14d76e" prot="private" virt="non-virtual"><scope>HdxPresentTask</scope><name>_interop</name></member>
      <member refid="class_hdx_present_task_1a9722e11f8adfdf299a2e27843d43e9ec" prot="private" virt="non-virtual"><scope>HdxPresentTask</scope><name>_params</name></member>
      <member refid="class_hdx_task_1a7d7d28eeab4c68ce5d538ac9a7913abe" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_SwapTextures</name></member>
      <member refid="class_hdx_present_task_1a9d69055700f007fb68f02377ec5d7f19" prot="protected" virt="virtual"><scope>HdxPresentTask</scope><name>_Sync</name></member>
      <member refid="class_hdx_task_1a6ad7b2b98cc34e2b1783e4c6f4237438" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_ToggleDepthTarget</name></member>
      <member refid="class_hdx_task_1a49a40985ee2c769442da27b5603ebf55" prot="protected" virt="non-virtual"><scope>HdxPresentTask</scope><name>_ToggleRenderTarget</name></member>
      <member refid="class_hdx_present_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>Execute</name></member>
      <member refid="class_hd_task_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>GetId</name></member>
      <member refid="class_hd_task_1ade051cd8ff53a108b7e6c27be99a5e3a" prot="public" virt="virtual"><scope>HdxPresentTask</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_task_1a5660db150d0d46d62319100c3f6138fd" prot="public" virt="virtual"><scope>HdxPresentTask</scope><name>GetRenderTags</name></member>
      <member refid="class_hd_task_1a3df864dcce7538c1b130b105af7c2406" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>HdTask</name></member>
      <member refid="class_hdx_present_task_1aec16aba1160ea3cf46ea9a1ba2f5d5b1" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>HdxPresentTask</name></member>
      <member refid="class_hdx_present_task_1a6f7a0090f7e72d6c4c605b79786edc90" prot="private" virt="non-virtual"><scope>HdxPresentTask</scope><name>HdxPresentTask</name></member>
      <member refid="class_hdx_present_task_1a07fd5541f6b56baa291f72248d0501e0" prot="private" virt="non-virtual"><scope>HdxPresentTask</scope><name>HdxPresentTask</name></member>
      <member refid="class_hdx_task_1a3043804871bb4471cb1042612674973e" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>HdxTask</name></member>
      <member refid="class_hdx_task_1a72510b2c9b23e856a57a1d5f48e034b8" prot="public" virt="virtual"><scope>HdxPresentTask</scope><name>IsConverged</name></member>
      <member refid="class_hdx_present_task_1ad70343cdd7f09667e17d2cb6be2dc929" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>IsFormatSupported</name></member>
      <member refid="class_hdx_present_task_1ae7c4f58acdbc2cee4f52288b54f91a4b" prot="private" virt="non-virtual"><scope>HdxPresentTask</scope><name>operator=</name></member>
      <member refid="class_hdx_present_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>Prepare</name></member>
      <member refid="class_hdx_task_1ae8a3dcff7f362ad7356b852d5c970e7e" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>Sync</name></member>
      <member refid="class_hd_task_1a08a2f7cc6d3767c8081f5098bd113d66" prot="public" virt="virtual"><scope>HdxPresentTask</scope><name>~HdTask</name></member>
      <member refid="class_hdx_present_task_1a53e977af0f85435c08974bb6cb51f44c" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>~HdxPresentTask</name></member>
      <member refid="class_hdx_task_1a0dbe76889f321b9f14b5e7aed6d23aa5" prot="public" virt="non-virtual"><scope>HdxPresentTask</scope><name>~HdxTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
