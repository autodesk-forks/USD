<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_reporter_data_source_collector" kind="class" language="C++" prot="public">
    <compoundname>TraceReporterDataSourceCollector</compoundname>
    <basecompoundref refid="class_trace_reporter_data_source_base" prot="public" virt="non-virtual">TraceReporterDataSourceBase</basecompoundref>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <includes refid="reporter_data_source_collector_8h" local="no">reporterDataSourceCollector.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_trace_reporter_data_source_collector_1a7c1db94d3e6621d3df056753202afa1c" prot="public" static="no">
        <type><ref refid="class_trace_reporter_data_source_collector" kindref="compound">TraceReporterDataSourceCollector</ref></type>
        <definition>using This =  TraceReporterDataSourceCollector</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="54" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_reporter_data_source_collector_1a8fff6cdbc2ea6466dfaf1e9455f288bb" prot="public" static="no">
        <type>TraceReporterDataSourceCollectorPtr</type>
        <definition>using ThisPtr =  TraceReporterDataSourceCollectorPtr</definition>
        <argsstring></argsstring>
        <name>ThisPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="55" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_reporter_data_source_collector_1a838413a2d9732f3102dca8459ca559a6" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="class_trace_reporter_data_source_collector" kindref="compound">This</ref> &gt;</type>
        <definition>using ThisRefPtr =  std::unique_ptr&lt;This&gt;</definition>
        <argsstring></argsstring>
        <name>ThisRefPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="56" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_reporter_data_source_collector_1a01c515e16c979d2fca2d3a27c5d5b2b1" prot="private" static="no" mutable="no">
        <type>std::function&lt; bool()&gt;</type>
        <definition>std::function&lt;bool()&gt; _accept</definition>
        <argsstring></argsstring>
        <name>_accept</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="83" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_reporter_data_source_collector_1a4b963d52a26f40d56066662a03daa1e6" prot="private" static="no" mutable="no">
        <type>tbb::concurrent_queue&lt; CollectionPtr &gt;</type>
        <definition>tbb::concurrent_queue&lt;CollectionPtr&gt; _pendingCollections</definition>
        <argsstring></argsstring>
        <name>_pendingCollections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="84" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1a52a2a333a89f3e1e5314ef7052815b08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ThisRefPtr</type>
        <definition>static ThisRefPtr New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
<para>Creates a new <ref refid="class_trace_reporter_data_source_collector" kindref="compound">TraceReporterDataSourceCollector</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="59" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1aec6ab01e1df118c037490d9072d9eb1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ThisRefPtr</type>
        <definition>static ThisRefPtr New</definition>
        <argsstring>(std::function&lt; bool()&gt; accept)</argsstring>
        <name>New</name>
        <param>
          <type>std::function&lt; bool()&gt;</type>
          <declname>accept</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="class_trace_reporter_data_source_collector" kindref="compound">TraceReporterDataSourceCollector</ref> which will only listen to the <ref refid="class_trace_collection_available" kindref="compound">TraceCollectionAvailable</ref> notice when <computeroutput>accept</computeroutput> returns true. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>accept</computeroutput> must be thread-safe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="66" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="66" bodyend="68"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1a60f94cd5376a690839e8bcb529b9fcbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void Clear</definition>
        <argsstring>() override</argsstring>
        <name>Clear</name>
        <reimplements refid="class_trace_reporter_data_source_base_1aa5b31c976cc6734003d9950e731dfed3">Clear</reimplements>
        <briefdescription>
<para>Removes all references to TraceCollections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1aae3c481c866da8bc52a11cc9070e9803" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TRACE_API std::vector&lt; CollectionPtr &gt;</type>
        <definition>TRACE_API std::vector&lt;CollectionPtr&gt; ConsumeData</definition>
        <argsstring>() override</argsstring>
        <name>ConsumeData</name>
        <reimplements refid="class_trace_reporter_data_source_base_1a25363d9c38827c523249b50d90676271">ConsumeData</reimplements>
        <briefdescription>
<para>Returns the next TraceCollections which need to be processed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1aaecf6b6484186005d9ed9ccaccc04161" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API TraceReporterDataSourceCollector</definition>
        <argsstring>()</argsstring>
        <name>TraceReporterDataSourceCollector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1ab973d8fbac6e6305e67950b135d8b3ce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API TraceReporterDataSourceCollector</definition>
        <argsstring>(std::function&lt; bool()&gt; accept)</argsstring>
        <name>TraceReporterDataSourceCollector</name>
        <param>
          <type>std::function&lt; bool()&gt;</type>
          <declname>accept</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_data_source_collector_1a3f1432c6c75f58d064f5c758e9bcd9f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _OnTraceCollection</definition>
        <argsstring>(const TraceCollectionAvailable &amp;)</argsstring>
        <name>_OnTraceCollection</name>
        <param>
          <type>const <ref refid="class_trace_collection_available" kindref="compound">TraceCollectionAvailable</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterDataSourceCollector.h" line="81" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is an implementation of <ref refid="class_trace_reporter_data_source_base" kindref="compound">TraceReporterDataSourceBase</ref> which retrieves TraceCollections from the <ref refid="class_trace_collector" kindref="compound">TraceCollector</ref> singleton. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5915">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5914">
        <label>TraceReporterDataSourceBase</label>
        <link refid="class_trace_reporter_data_source_base"/>
      </node>
      <node id="5913">
        <label>TraceReporterDataSourceCollector</label>
        <link refid="class_trace_reporter_data_source_collector"/>
        <childnode refid="5914" relation="public-inheritance">
        </childnode>
        <childnode refid="5915" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5918">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5917">
        <label>TraceReporterDataSourceBase</label>
        <link refid="class_trace_reporter_data_source_base"/>
      </node>
      <node id="5916">
        <label>TraceReporterDataSourceCollector</label>
        <link refid="class_trace_reporter_data_source_collector"/>
        <childnode refid="5917" relation="public-inheritance">
        </childnode>
        <childnode refid="5918" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/base/trace/reporterDataSourceCollector.h" line="52" column="1" bodyfile="pxr/base/trace/reporterDataSourceCollector.h" bodystart="51" bodyend="85"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a01c515e16c979d2fca2d3a27c5d5b2b1" prot="private" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>_accept</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>_HasRemnant</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a3f1432c6c75f58d064f5c758e9bcd9f5" prot="private" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>_OnTraceCollection</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a4b963d52a26f40d56066662a03daa1e6" prot="private" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>_pendingCollections</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>_Register</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a60f94cd5376a690839e8bcb529b9fcbf" prot="public" virt="virtual"><scope>TraceReporterDataSourceCollector</scope><name>Clear</name></member>
      <member refid="class_trace_reporter_data_source_base_1a91d1c7baf77d118819bd09551e8ccdd5" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>CollectionPtr</name></member>
      <member refid="class_trace_reporter_data_source_collector_1aae3c481c866da8bc52a11cc9070e9803" prot="public" virt="virtual"><scope>TraceReporterDataSourceCollector</scope><name>ConsumeData</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>EnableNotification2</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a52a2a333a89f3e1e5314ef7052815b08" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>New</name></member>
      <member refid="class_trace_reporter_data_source_collector_1aec6ab01e1df118c037490d9072d9eb1c" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>New</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>operator=</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>TfWeakBase</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a7c1db94d3e6621d3df056753202afa1c" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>This</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a8fff6cdbc2ea6466dfaf1e9455f288bb" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>ThisPtr</name></member>
      <member refid="class_trace_reporter_data_source_collector_1a838413a2d9732f3102dca8459ca559a6" prot="public" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>ThisRefPtr</name></member>
      <member refid="class_trace_reporter_data_source_collector_1aaecf6b6484186005d9ed9ccaccc04161" prot="private" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>TraceReporterDataSourceCollector</name></member>
      <member refid="class_trace_reporter_data_source_collector_1ab973d8fbac6e6305e67950b135d8b3ce" prot="private" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>TraceReporterDataSourceCollector</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>TraceReporterDataSourceCollector</scope><name>~TfWeakBase</name></member>
      <member refid="class_trace_reporter_data_source_base_1ae69a2a0fa30658d324c4607b378fd3c8" prot="public" virt="virtual"><scope>TraceReporterDataSourceCollector</scope><name>~TraceReporterDataSourceBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
