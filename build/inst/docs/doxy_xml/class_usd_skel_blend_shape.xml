<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_blend_shape" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelBlendShape</compoundname>
    <basecompoundref refid="class_usd_typed" prot="public" virt="non-virtual">UsdTyped</basecompoundref>
    <includes refid="blend_shape_8h" local="no">blendShape.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_skel_blend_shape_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa6650141c3d230f8e4e51461e1d9e645" kindref="member">UsdSchemaKind::ConcreteTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="71" column="1" bodyfile="pxr/usd/usdSkel/blendShape.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_skel_blend_shape_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="149" column="1" bodyfile="pxr/usd/usdSkel/blendShape.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a24fff48149948239c9c949a6262af928" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdSkelBlendShape</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdSkelBlendShape</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_skel_blend_shape_1a19dd3412d39c2fa5ecee1784662e1480" kindref="member">UsdSkelBlendShape::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="77" column="1" bodyfile="pxr/usd/usdSkel/blendShape.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1af816b185f8ef37dfd283d3511203e9f3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdSkelBlendShape</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdSkelBlendShape</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="85" column="1" bodyfile="pxr/usd/usdSkel/blendShape.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1aa66757c5d0af48df89e0bacf702fbdc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDSKEL_API</type>
        <definition>virtual USDSKEL_API ~UsdSkelBlendShape</definition>
        <argsstring>()</argsstring>
        <name>~UsdSkelBlendShape</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a00cab077e5d9e260494c0a89d25a95a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetOffsetsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetOffsetsAttr</name>
        <briefdescription>
<para><bold>Required property</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Position offsets which, when added to the base pose, provides the target shape.</para>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform vector3f[] offsets</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;GfVec3f&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Vector3fArray   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a819d966737b5e302a65cdff31b4affc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateOffsetsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateOffsetsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_blend_shape_1a00cab077e5d9e260494c0a89d25a95a8" kindref="member">GetOffsetsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a0c2949794ef2956e83f628e8b2274aed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetNormalOffsetsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetNormalOffsetsAttr</name>
        <briefdescription>
<para><bold>Required property</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Normal offsets which, when added to the base pose, provides the normals of the target shape.</para>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform vector3f[] normalOffsets</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;GfVec3f&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Vector3fArray   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1afc5caceef1b24287f919d15f823c1127" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateNormalOffsetsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateNormalOffsetsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_blend_shape_1a0c2949794ef2956e83f628e8b2274aed" kindref="member">GetNormalOffsetsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1aab015f3e61f651ba417a8deff470ecd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetPointIndicesAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetPointIndicesAttr</name>
        <briefdescription>
<para><bold>Optional property</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>Indices into the original mesh that correspond to the values in <emphasis>offsets</emphasis> and of any inbetween shapes. If authored, the number of elements must be equal to the number of elements in the <emphasis>offsets</emphasis> array.</para>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform int[] pointIndices</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;int&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;IntArray   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a3ca69418eee8e56d0d4f01aefd18c19f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreatePointIndicesAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreatePointIndicesAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_blend_shape_1aab015f3e61f651ba417a8deff470ecd7" kindref="member">GetPointIndicesAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1aabcae2b42b6c45d0f33e758f54cd0ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref></type>
        <definition>USDSKEL_API UsdSkelInbetweenShape CreateInbetween</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>CreateInbetween</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Author scene description to create an attribute on this prim that will be recognized as an Inbetween (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>will present as a valid <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref>).</para>
<para>The name of the created attribute or may or may not be the specified <computeroutput>attrName</computeroutput>, due to the possible need to apply property namespacing. Creation may fail and return an invalid Inbetwen if <computeroutput>attrName</computeroutput> contains a reserved keyword.</para>
<para><simplesect kind="return"><para>an invalid <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> if we failed to create a valid attribute, a valid <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> otherwise. It is not an error to create over an existing, compatible attribute.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_skel_inbetween_shape_1a7ee91c86b0fb5e8943480abcb10a0ea7" kindref="member">UsdSkelInbetweenShape::IsInbetween()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a1156fbc95497a5694c95c8bf5d46246e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref></type>
        <definition>USDSKEL_API UsdSkelInbetweenShape GetInbetween</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>GetInbetween</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return the Inbetween corresponding to the attribute named <computeroutput>name</computeroutput>, which will be valid if an Inbetween attribute definition already exists. </para>
        </briefdescription>
        <detaileddescription>
<para>Name lookup will account for Inbetween namespacing, which means that this method will succeed in some cases where <computeroutput><ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref>(prim-&gt;GetAttribute(name))</computeroutput> will not, unless <computeroutput>name</computeroutput> has the proper namespace prefix.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_skel_blend_shape_1afd216465d277721c0ea5e3f45ce433f9" kindref="member">HasInbetween()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1afd216465d277721c0ea5e3f45ce433f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool HasInbetween</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>HasInbetween</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return true if there is a defined Inbetween named <computeroutput>name</computeroutput> on this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Name lookup will account for Inbetween namespacing.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_skel_blend_shape_1a1156fbc95497a5694c95c8bf5d46246e" kindref="member">GetInbetween()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1ad08235d4e3a38672a4df6c9ca70750d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API std::vector&lt; <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> &gt;</type>
        <definition>USDSKEL_API std::vector&lt;UsdSkelInbetweenShape&gt; GetInbetweens</definition>
        <argsstring>() const</argsstring>
        <name>GetInbetweens</name>
        <briefdescription>
<para>Return valid <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> objects for all defined Inbetweens on this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a14148ad19cf327eb31f7de6495a65a0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API std::vector&lt; <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> &gt;</type>
        <definition>USDSKEL_API std::vector&lt;UsdSkelInbetweenShape&gt; GetAuthoredInbetweens</definition>
        <argsstring>() const</argsstring>
        <name>GetAuthoredInbetweens</name>
        <briefdescription>
<para>Like <ref refid="class_usd_skel_blend_shape_1ad08235d4e3a38672a4df6c9ca70750d6" kindref="member">GetInbetweens()</ref>, but exclude inbetwens that have no authored scene / description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="290" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a83e60aafcd3454c8cd1b5bb86a585296" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDSKEL_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a19dd3412d39c2fa5ecee1784662e1480" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref></type>
        <definition>static USDSKEL_API UsdSkelBlendShape Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdSkelBlendShape(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1aea6316c42ee4c97d39f3202d789536c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref></type>
        <definition>static USDSKEL_API UsdSkelBlendShape Define</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Define</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Attempt to ensure a <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis> adhering to this schema at <computeroutput>path</computeroutput> is defined (according to <ref refid="class_usd_prim_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">UsdPrim::IsDefined()</ref>) on this stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If a prim adhering to this schema at <computeroutput>path</computeroutput> is already defined on this stage, return that prim. Otherwise author an <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> with <emphasis>specifier</emphasis> == <emphasis>SdfSpecifierDef</emphasis> and this schema&apos;s prim type name for the prim at <computeroutput>path</computeroutput> at the current EditTarget. Author <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> s with <computeroutput>specifier</computeroutput> == <emphasis>SdfSpecifierDef</emphasis> and empty typeName at the current EditTarget for any nonexistent, or existing but not <emphasis>Defined</emphasis> ancestors.</para>
<para>The given <emphasis>path</emphasis> must be an absolute prim path that does not contain any variant selections.</para>
<para>If it is impossible to author any of the necessary PrimSpecs, (for example, in case <emphasis>path</emphasis> cannot map to the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>&apos;s namespace) issue an error and return an invalid <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis>.</para>
<para>Note that this method may return a defined prim whose typeName does not specify this schema class, in case a stronger typeName opinion overrides the opinion at the current EditTarget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1af2c6da6343aa54b291d0546ddfc50e0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>static USDSKEL_API bool ValidatePointIndices</definition>
        <argsstring>(TfSpan&lt; const int &gt; indices, size_t numPoints, std::string *reason=nullptr)</argsstring>
        <name>ValidatePointIndices</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Validates a set of point indices for a given point count. </para>
        </briefdescription>
        <detaileddescription>
<para>This ensures that all point indices are in the range [0, numPoints). Returns true if the indices are valid, or false otherwise. If invalid and <computeroutput>reason</computeroutput> is non-null, an error message describing the first validation error will be set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="298" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a79df5075439172ba191c1de8af616879" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDSKEL_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDSKEL_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_typed_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a258038030b384afda931797f88484054" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDSKEL_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_skel_blend_shape_1a55221575e16049b1dbd6147c54af4f43" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDSKEL_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDSKEL_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_typed_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_blend_shape_1aca18dca82e98cd2499095aea697a545b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> &gt;</type>
        <definition>std::vector&lt;UsdSkelInbetweenShape&gt; _MakeInbetweens</definition>
        <argsstring>(const std::vector&lt; UsdProperty &gt; &amp;props) const</argsstring>
        <name>_MakeInbetweens</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_usd_property" kindref="compound">UsdProperty</ref> &gt; &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/blendShape.h" line="304" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a target blend shape, possibly containing inbetween shapes. </para>
    </briefdescription>
    <detaileddescription>
<para>See the extended <ref refid="_usd_skel__schemas_1UsdSkel_BlendShape" kindref="member">Blend Shape Schema</ref>documentation for information. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8235">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8236" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8234">
        <label>UsdSkelBlendShape</label>
        <link refid="class_usd_skel_blend_shape"/>
        <childnode refid="8235" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8236">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8238">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8237">
        <label>UsdSkelBlendShape</label>
        <link refid="class_usd_skel_blend_shape"/>
        <childnode refid="8238" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8239">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdSkel/blendShape.h" line="66" column="1" bodyfile="pxr/usd/usdSkel/blendShape.h" bodystart="65" bodyend="305"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_skel_blend_shape_1a79df5075439172ba191c1de8af616879" prot="protected" virt="virtual"><scope>UsdSkelBlendShape</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdSkelBlendShape</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_skel_blend_shape_1a258038030b384afda931797f88484054" prot="private" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_skel_blend_shape_1a55221575e16049b1dbd6147c54af4f43" prot="private" virt="virtual"><scope>UsdSkelBlendShape</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdSkelBlendShape</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_skel_blend_shape_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_skel_blend_shape_1aca18dca82e98cd2499095aea697a545b" prot="private" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>_MakeInbetweens</name></member>
      <member refid="class_usd_skel_blend_shape_1aabcae2b42b6c45d0f33e758f54cd0ac8" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>CreateInbetween</name></member>
      <member refid="class_usd_skel_blend_shape_1afc5caceef1b24287f919d15f823c1127" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>CreateNormalOffsetsAttr</name></member>
      <member refid="class_usd_skel_blend_shape_1a819d966737b5e302a65cdff31b4affc7" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>CreateOffsetsAttr</name></member>
      <member refid="class_usd_skel_blend_shape_1a3ca69418eee8e56d0d4f01aefd18c19f" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>CreatePointIndicesAttr</name></member>
      <member refid="class_usd_skel_blend_shape_1aea6316c42ee4c97d39f3202d789536c5" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>Define</name></member>
      <member refid="class_usd_skel_blend_shape_1a19dd3412d39c2fa5ecee1784662e1480" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>Get</name></member>
      <member refid="class_usd_skel_blend_shape_1a14148ad19cf327eb31f7de6495a65a0c" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetAuthoredInbetweens</name></member>
      <member refid="class_usd_skel_blend_shape_1a1156fbc95497a5694c95c8bf5d46246e" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetInbetween</name></member>
      <member refid="class_usd_skel_blend_shape_1ad08235d4e3a38672a4df6c9ca70750d6" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetInbetweens</name></member>
      <member refid="class_usd_skel_blend_shape_1a0c2949794ef2956e83f628e8b2274aed" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetNormalOffsetsAttr</name></member>
      <member refid="class_usd_skel_blend_shape_1a00cab077e5d9e260494c0a89d25a95a8" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetOffsetsAttr</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetPath</name></member>
      <member refid="class_usd_skel_blend_shape_1aab015f3e61f651ba417a8deff470ecd7" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetPointIndicesAttr</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetPrim</name></member>
      <member refid="class_usd_skel_blend_shape_1a83e60aafcd3454c8cd1b5bb86a585296" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_skel_blend_shape_1afd216465d277721c0ea5e3f45ce433f9" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>HasInbetween</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>operator bool</name></member>
      <member refid="class_usd_skel_blend_shape_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>schemaKind</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_skel_blend_shape_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_skel_blend_shape_1a24fff48149948239c9c949a6262af928" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdSkelBlendShape</name></member>
      <member refid="class_usd_skel_blend_shape_1af816b185f8ef37dfd283d3511203e9f3" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdSkelBlendShape</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>UsdTyped</name></member>
      <member refid="class_usd_skel_blend_shape_1af2c6da6343aa54b291d0546ddfc50e0a" prot="public" virt="non-virtual"><scope>UsdSkelBlendShape</scope><name>ValidatePointIndices</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdSkelBlendShape</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_skel_blend_shape_1aa66757c5d0af48df89e0bacf702fbdc6" prot="public" virt="virtual"><scope>UsdSkelBlendShape</scope><name>~UsdSkelBlendShape</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdSkelBlendShape</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
