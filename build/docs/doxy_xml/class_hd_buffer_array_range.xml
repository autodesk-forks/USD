<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_buffer_array_range" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HdBufferArrayRange</compoundname>
    <derivedcompoundref refid="class_hd_st_buffer_array_range" prot="public" virt="non-virtual">HdStBufferArrayRange</derivedcompoundref>
    <includes refid="buffer_array_range_8h" local="no">bufferArrayRange.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_buffer_array_range_1ad56c09321fcb089bf1219ef1a845573d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdBufferArrayRange</definition>
        <argsstring>()</argsstring>
        <name>HdBufferArrayRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a50aebfa661c9ccd9c6cce599a9bd8c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API</type>
        <definition>virtual HD_API ~HdBufferArrayRange</definition>
        <argsstring>()</argsstring>
        <name>~HdBufferArrayRange</name>
        <briefdescription>
<para>Destructor (do nothing). </para>
        </briefdescription>
        <detaileddescription>
<para>The specialized range class may want to do something for garbage collection in its destructor. However, be careful not do any substantial work here (obviously including any kind of GL calls), since the destructor gets called frequently on various contexts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1aedec2959336b77211e97d8d072b33f88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool IsValid</definition>
        <argsstring>() const =0</argsstring>
        <name>IsValid</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a4ff611a58fbc46f11ced2351e079f447">IsValid</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a4ff611a58fbc46f11ced2351e079f447">IsValid</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a4ff611a58fbc46f11ced2351e079f447">IsValid</reimplementedby>
        <briefdescription>
<para>Returns true if this range is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a195c89d999c0e0b38b241591a68d4761" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool IsAssigned</definition>
        <argsstring>() const =0</argsstring>
        <name>IsAssigned</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a537cad35e503ed1a5de61818634fd9a5">IsAssigned</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a537cad35e503ed1a5de61818634fd9a5">IsAssigned</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a537cad35e503ed1a5de61818634fd9a5">IsAssigned</reimplementedby>
        <briefdescription>
<para>Returns true is the range has been assigned to a buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1ab8ba45ad1d22640037d7485f3b2ec607" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool IsImmutable</definition>
        <argsstring>() const =0</argsstring>
        <name>IsImmutable</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a6ba65b0cbc686fefb131d985147f920d">IsImmutable</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a6ba65b0cbc686fefb131d985147f920d">IsImmutable</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a6ba65b0cbc686fefb131d985147f920d">IsImmutable</reimplementedby>
        <briefdescription>
<para>Returns true if this range is marked as immutable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a8372288abda1eda17689e8175a38b52f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool RequiresStaging</definition>
        <argsstring>() const =0</argsstring>
        <name>RequiresStaging</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1ab9b666522b2d5111345f2375284eaeda">RequiresStaging</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1ab9b666522b2d5111345f2375284eaeda">RequiresStaging</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1ab9b666522b2d5111345f2375284eaeda">RequiresStaging</reimplementedby>
        <briefdescription>
<para>Returns true if this needs a staging buffer for CPU to GPU copies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1acd69c245d195c95607fe783526dfc695" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Resize</definition>
        <argsstring>(int numElements)=0</argsstring>
        <name>Resize</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1afd244ae168c98213ea236b462b33b102">Resize</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1aa798db1b0a898da00dd49ec8c660f7d2">Resize</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1afd244ae168c98213ea236b462b33b102">Resize</reimplementedby>
        <param>
          <type>int</type>
          <declname>numElements</declname>
        </param>
        <briefdescription>
<para>Resize memory area for this range. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if it causes container buffer reallocation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1ae121baf1d61086ff180eaf7b0860f6f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void CopyData</definition>
        <argsstring>(HdBufferSourceSharedPtr const &amp;bufferSource)=0</argsstring>
        <name>CopyData</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a1070b4a5d373bb2b78ab5dffe992ce0c">CopyData</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a1070b4a5d373bb2b78ab5dffe992ce0c">CopyData</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a1070b4a5d373bb2b78ab5dffe992ce0c">CopyData</reimplementedby>
        <param>
          <type>HdBufferSourceSharedPtr const &amp;</type>
          <declname>bufferSource</declname>
        </param>
        <briefdescription>
<para>Copy source data into buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a50a148e1027715d18cde211ca6252c17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual VtValue ReadData</definition>
        <argsstring>(TfToken const &amp;name) const =0</argsstring>
        <name>ReadData</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1ad90a12f40dfe3209383ab968b1b8f81d">ReadData</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1ad90a12f40dfe3209383ab968b1b8f81d">ReadData</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1ad90a12f40dfe3209383ab968b1b8f81d">ReadData</reimplementedby>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Read back the buffer content. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a1a973fddbd1e1c1d528b090b62e961ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int GetElementOffset</definition>
        <argsstring>() const =0</argsstring>
        <name>GetElementOffset</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a645217fc3d7acf6c4bed16cea151acd1">GetElementOffset</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a645217fc3d7acf6c4bed16cea151acd1">GetElementOffset</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a645217fc3d7acf6c4bed16cea151acd1">GetElementOffset</reimplementedby>
        <briefdescription>
<para>Returns the offset at which this range begins in the underlying buffer array in terms of elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a338e85bcd164436462b6bc9a683c4239" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int GetByteOffset</definition>
        <argsstring>(TfToken const &amp;resourceName) const =0</argsstring>
        <name>GetByteOffset</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1afe2cfc43bed91b99867d6056bfdddc15">GetByteOffset</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1afe2cfc43bed91b99867d6056bfdddc15">GetByteOffset</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1afe2cfc43bed91b99867d6056bfdddc15">GetByteOffset</reimplementedby>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>resourceName</declname>
        </param>
        <briefdescription>
<para>Returns the byte offset at which this range begins in the underlying buffer array for the given resource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a23d40ffcfd073db47f9fb878fb3f67aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t GetNumElements</definition>
        <argsstring>() const =0</argsstring>
        <name>GetNumElements</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a17d7adaa195cac7664a9525f64e0d9a9">GetNumElements</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a17d7adaa195cac7664a9525f64e0d9a9">GetNumElements</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a17d7adaa195cac7664a9525f64e0d9a9">GetNumElements</reimplementedby>
        <briefdescription>
<para>Returns the number of elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1af86253de966fb044dc2efe0c345129c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t GetVersion</definition>
        <argsstring>() const =0</argsstring>
        <name>GetVersion</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1aa81bad584191b3c3947a1923479b0433">GetVersion</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1aa81bad584191b3c3947a1923479b0433">GetVersion</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1aa81bad584191b3c3947a1923479b0433">GetVersion</reimplementedby>
        <briefdescription>
<para>Returns the version of the buffer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1acdaaa0a74d7785c636e30e8c42a86546" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void IncrementVersion</definition>
        <argsstring>()=0</argsstring>
        <name>IncrementVersion</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a4597ece113de841e9e6da997a5ba87c2">IncrementVersion</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a4597ece113de841e9e6da997a5ba87c2">IncrementVersion</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a4597ece113de841e9e6da997a5ba87c2">IncrementVersion</reimplementedby>
        <briefdescription>
<para>Increment the version of the buffer array. </para>
        </briefdescription>
        <detaileddescription>
<para>mostly used for notifying drawbatches to be rebuilt to remove expired BufferArrayRange. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a94a85d3bdf352ae0f2f860db10b35e22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t GetMaxNumElements</definition>
        <argsstring>() const =0</argsstring>
        <name>GetMaxNumElements</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a7501c7a8f278b11095f2e614590ac874">GetMaxNumElements</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a7501c7a8f278b11095f2e614590ac874">GetMaxNumElements</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a7501c7a8f278b11095f2e614590ac874">GetMaxNumElements</reimplementedby>
        <briefdescription>
<para>Returns the max number of elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a90bd5a838480a9dc23ad8a31e821a263" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="union_hd_buffer_array_usage_hint" kindref="compound">HdBufferArrayUsageHint</ref></type>
        <definition>virtual HdBufferArrayUsageHint GetUsageHint</definition>
        <argsstring>() const =0</argsstring>
        <name>GetUsageHint</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a1f985e5563a090b2a83079556d5b2471">GetUsageHint</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a1f985e5563a090b2a83079556d5b2471">GetUsageHint</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a1f985e5563a090b2a83079556d5b2471">GetUsageHint</reimplementedby>
        <briefdescription>
<para>Gets the usage hint on the underlying buffer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1adfc6daf2c825beb6f9224d726973ef03" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SetBufferArray</definition>
        <argsstring>(HdBufferArray *bufferArray)=0</argsstring>
        <name>SetBufferArray</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a3f647bdbbba0839a566fe994d48d6d2f">SetBufferArray</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a3f647bdbbba0839a566fe994d48d6d2f">SetBufferArray</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a3f647bdbbba0839a566fe994d48d6d2f">SetBufferArray</reimplementedby>
        <param>
          <type><ref refid="class_hd_buffer_array" kindref="compound">HdBufferArray</ref> *</type>
          <declname>bufferArray</declname>
        </param>
        <briefdescription>
<para>Sets the buffer array associated with this buffer;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a1d73c3578ae8bc963a88e8ec7eacda20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void DebugDump</definition>
        <argsstring>(std::ostream &amp;out) const =0</argsstring>
        <name>DebugDump</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a6a48d7fbd02ba4c98eda7e7fa1a716ed">DebugDump</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a6a48d7fbd02ba4c98eda7e7fa1a716ed">DebugDump</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a6a48d7fbd02ba4c98eda7e7fa1a716ed">DebugDump</reimplementedby>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Debug output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a8450c199971173ff43ef897e7fb045ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsAggregatedWith</definition>
        <argsstring>(HdBufferArrayRangeSharedPtr const &amp;other) const</argsstring>
        <name>IsAggregatedWith</name>
        <param>
          <type>HdBufferArrayRangeSharedPtr const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if the underlying buffer array is aggregated to other&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="119" column="1" bodyfile="pxr/imaging/hd/bufferArrayRange.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1aba65989354a231b10c98ab140af9890d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void GetBufferSpecs</definition>
        <argsstring>(HdBufferSpecVector *bufferSpecs) const =0</argsstring>
        <name>GetBufferSpecs</name>
        <reimplementedby refid="class_hd_st_buffer_array_range_1a5459082dfd20f0e70199cab1264432bf">GetBufferSpecs</reimplementedby>
        <param>
          <type>HdBufferSpecVector *</type>
          <declname>bufferSpecs</declname>
        </param>
        <briefdescription>
<para>Gets the bufferSpecs for all resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_buffer_array_range_1aa85657a6316cec3a9b88adbeca824c9c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const void *</type>
        <definition>virtual const void* _GetAggregation</definition>
        <argsstring>() const =0</argsstring>
        <name>_GetAggregation</name>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range_1a77cc52a035f67ce8a87913704c6b1128">_GetAggregation</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range_1a77cc52a035f67ce8a87913704c6b1128">_GetAggregation</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range_1a77cc52a035f67ce8a87913704c6b1128">_GetAggregation</reimplementedby>
        <briefdescription>
<para>Returns the aggregation container to be used in <ref refid="class_hd_buffer_array_range_1a8450c199971173ff43ef897e7fb045ef" kindref="member">IsAggregatedWith()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1a0a58932b17eab81edf05f9c5de64816a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdBufferArrayRange</definition>
        <argsstring>(const HdBufferArrayRange &amp;)=delete</argsstring>
        <name>HdBufferArrayRange</name>
        <param>
          <type>const <ref refid="class_hd_buffer_array_range" kindref="compound">HdBufferArrayRange</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_buffer_array_range_1ae2d8af6607d2666eb70c622376541f11" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_buffer_array_range" kindref="compound">HdBufferArrayRange</ref> &amp;</type>
        <definition>HdBufferArrayRange&amp; operator=</definition>
        <argsstring>(const HdBufferArrayRange &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_buffer_array_range" kindref="compound">HdBufferArrayRange</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferArrayRange.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface class for representing range (subset) locator of <ref refid="class_hd_buffer_array" kindref="compound">HdBufferArray</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Each memory management strategy defines a specialized range class which is inherited of this interface so that client (drawItem) can be agnostic about the implementation detail of aggregation. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1603">
        <label>HdBufferArrayRange</label>
        <link refid="class_hd_buffer_array_range"/>
      </node>
      <node id="1607">
        <label>_SimpleBufferArrayRange</label>
        <link refid="class_hd_st_v_b_o_simple_memory_manager_1_1___simple_buffer_array_range"/>
        <childnode refid="1604" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1606">
        <label>_StripedBufferArrayRange</label>
        <link refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_range"/>
        <childnode refid="1604" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1605">
        <label>_StripedInterleavedBufferRange</label>
        <link refid="class_hd_st_interleaved_memory_manager_1_1___striped_interleaved_buffer_range"/>
        <childnode refid="1604" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1604">
        <label>HdStBufferArrayRange</label>
        <link refid="class_hd_st_buffer_array_range"/>
        <childnode refid="1603" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/imaging/hd/bufferArrayRange.h" line="52" column="1" bodyfile="pxr/imaging/hd/bufferArrayRange.h" bodystart="51" bodyend="134"/>
    <listofallmembers>
      <member refid="class_hd_buffer_array_range_1aa85657a6316cec3a9b88adbeca824c9c" prot="protected" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>_GetAggregation</name></member>
      <member refid="class_hd_buffer_array_range_1ae121baf1d61086ff180eaf7b0860f6f7" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>CopyData</name></member>
      <member refid="class_hd_buffer_array_range_1a1d73c3578ae8bc963a88e8ec7eacda20" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>DebugDump</name></member>
      <member refid="class_hd_buffer_array_range_1aba65989354a231b10c98ab140af9890d" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_buffer_array_range_1a338e85bcd164436462b6bc9a683c4239" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetByteOffset</name></member>
      <member refid="class_hd_buffer_array_range_1a1a973fddbd1e1c1d528b090b62e961ec" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetElementOffset</name></member>
      <member refid="class_hd_buffer_array_range_1a94a85d3bdf352ae0f2f860db10b35e22" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetMaxNumElements</name></member>
      <member refid="class_hd_buffer_array_range_1a23d40ffcfd073db47f9fb878fb3f67aa" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetNumElements</name></member>
      <member refid="class_hd_buffer_array_range_1a90bd5a838480a9dc23ad8a31e821a263" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetUsageHint</name></member>
      <member refid="class_hd_buffer_array_range_1af86253de966fb044dc2efe0c345129c1" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>GetVersion</name></member>
      <member refid="class_hd_buffer_array_range_1ad56c09321fcb089bf1219ef1a845573d" prot="public" virt="non-virtual"><scope>HdBufferArrayRange</scope><name>HdBufferArrayRange</name></member>
      <member refid="class_hd_buffer_array_range_1a0a58932b17eab81edf05f9c5de64816a" prot="protected" virt="non-virtual"><scope>HdBufferArrayRange</scope><name>HdBufferArrayRange</name></member>
      <member refid="class_hd_buffer_array_range_1acdaaa0a74d7785c636e30e8c42a86546" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>IncrementVersion</name></member>
      <member refid="class_hd_buffer_array_range_1a8450c199971173ff43ef897e7fb045ef" prot="public" virt="non-virtual"><scope>HdBufferArrayRange</scope><name>IsAggregatedWith</name></member>
      <member refid="class_hd_buffer_array_range_1a195c89d999c0e0b38b241591a68d4761" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>IsAssigned</name></member>
      <member refid="class_hd_buffer_array_range_1ab8ba45ad1d22640037d7485f3b2ec607" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>IsImmutable</name></member>
      <member refid="class_hd_buffer_array_range_1aedec2959336b77211e97d8d072b33f88" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>IsValid</name></member>
      <member refid="class_hd_buffer_array_range_1ae2d8af6607d2666eb70c622376541f11" prot="protected" virt="non-virtual"><scope>HdBufferArrayRange</scope><name>operator=</name></member>
      <member refid="class_hd_buffer_array_range_1a50a148e1027715d18cde211ca6252c17" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>ReadData</name></member>
      <member refid="class_hd_buffer_array_range_1a8372288abda1eda17689e8175a38b52f" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>RequiresStaging</name></member>
      <member refid="class_hd_buffer_array_range_1acd69c245d195c95607fe783526dfc695" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>Resize</name></member>
      <member refid="class_hd_buffer_array_range_1adfc6daf2c825beb6f9224d726973ef03" prot="public" virt="pure-virtual"><scope>HdBufferArrayRange</scope><name>SetBufferArray</name></member>
      <member refid="class_hd_buffer_array_range_1a50aebfa661c9ccd9c6cce599a9bd8c70" prot="public" virt="virtual"><scope>HdBufferArrayRange</scope><name>~HdBufferArrayRange</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
