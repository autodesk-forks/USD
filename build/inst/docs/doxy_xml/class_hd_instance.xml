<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_instance" kind="class" language="C++" prot="public">
    <compoundname>HdInstance</compoundname>
    <includes refid="instance_registry_8h" local="no">instanceRegistry.h</includes>
    <innerclass refid="struct_hd_instance_1_1_value_holder" prot="public">HdInstance::ValueHolder</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>VALUE</declname>
        <defname>VALUE</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_instance_1a3254c750eee2c172b6aad0c11c4e20d6" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t KeyType</definition>
        <argsstring></argsstring>
        <name>KeyType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="62" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_instance_1adecd504acd2c4988e38bbd048ec0bae0" prot="public" static="no">
        <type>VALUE</type>
        <definition>typedef VALUE ValueType</definition>
        <argsstring></argsstring>
        <name>ValueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="63" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_instance_1adf80e271c630e904bb1e8ed0aa19ae0f" prot="public" static="no">
        <type>KeyType</type>
        <definition>typedef KeyType ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="65" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_instance_1a7d570913d11153fff03c7199643749ed" prot="public" static="no">
        <type>tbb::concurrent_unordered_map&lt; KeyType, ValueHolder &gt;</type>
        <definition>typedef tbb::concurrent_unordered_map&lt;KeyType, ValueHolder&gt; Dictionary</definition>
        <argsstring></argsstring>
        <name>Dictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="79" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_instance_1a40fa7c56d553b2e9cc63b14a6da92a5c" prot="public" static="no">
        <type>std::mutex</type>
        <definition>typedef std::mutex RegistryMutex</definition>
        <argsstring></argsstring>
        <name>RegistryMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="81" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_instance_1a5869c974631e2d92b1b92551eb95b044" prot="public" static="no">
        <type>std::unique_lock&lt; RegistryMutex &gt;</type>
        <definition>typedef std::unique_lock&lt;RegistryMutex&gt; RegistryLock</definition>
        <argsstring></argsstring>
        <name>RegistryLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="82" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_instance_1acc45fba6939693ba927001c8d94efd16" prot="private" static="no" mutable="no">
        <type>KeyType</type>
        <definition>KeyType _key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="128" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_instance_1af35d8985614ee852c2b135a89ec64d38" prot="private" static="no" mutable="no">
        <type>ValueType</type>
        <definition>ValueType _value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="129" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_instance_1a9b47fcc00834bb108d7e36838229f9c7" prot="private" static="no" mutable="no">
        <type>RegistryLock</type>
        <definition>RegistryLock _registryLock</definition>
        <argsstring></argsstring>
        <name>_registryLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="130" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_instance_1a4fc8d08e5834583031c6761738ecd1bc" prot="private" static="no" mutable="no">
        <type>Dictionary *</type>
        <definition>Dictionary* _container</definition>
        <argsstring></argsstring>
        <name>_container</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="131" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_instance_1a82e508e245e82a31e50e5a996bf12b9c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isFirstInstance</definition>
        <argsstring></argsstring>
        <name>_isFirstInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="132" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_instance_1a6fcb75c08bed824b30ff85d2b90751e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdInstance</definition>
        <argsstring>()=delete</argsstring>
        <name>HdInstance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_instance_1abdd79fb33b2db8a4ea0e960b0fbd1469" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdInstance</definition>
        <argsstring>(KeyType const &amp;key, ValueType const &amp;value, RegistryLock &amp;&amp;registryLock, Dictionary *container)</argsstring>
        <name>HdInstance</name>
        <param>
          <type>KeyType const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>ValueType const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>RegistryLock &amp;&amp;</type>
          <declname>registryLock</declname>
        </param>
        <param>
          <type>Dictionary *</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Construct an instance holding a registry lock, representing a value held in a registry container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="88" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="88" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_instance_1ac2cbfdbb8f67789ac460941896193bb2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdInstance</definition>
        <argsstring>(KeyType const &amp;key)</argsstring>
        <name>HdInstance</name>
        <param>
          <type>KeyType const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Construct an instance with no lock or registry container. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to present a consistent interface to clients in cases where shared resource registration is disabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="102" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="102" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_instance_1a272ba01155d8304f311a28fe34f12e56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KeyType const  &amp;</type>
        <definition>KeyType const&amp; GetKey</definition>
        <argsstring>() const</argsstring>
        <name>GetKey</name>
        <briefdescription>
<para>Returns the key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="111" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_instance_1a803eb9fec153cd392c653022fa2a3088" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ValueType const  &amp;</type>
        <definition>ValueType const&amp; GetValue</definition>
        <argsstring>() const</argsstring>
        <name>GetValue</name>
        <briefdescription>
<para>Returns the value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="114" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_instance_1a817eb01175253cd971b84943d02c80b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetValue</definition>
        <argsstring>(ValueType const &amp;value)</argsstring>
        <name>SetValue</name>
        <param>
          <type>ValueType const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Update the value in dictionary indexed by the key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="117" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_instance_1a06a7ab7d1eb167139d8f93072da5a4f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsFirstInstance</definition>
        <argsstring>() const</argsstring>
        <name>IsFirstInstance</name>
        <briefdescription>
<para>Returns true if the value has not been initialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/instanceRegistry.h" line="123" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="123" bodyend="125"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is used as an interface to a shared instance in <ref refid="class_hd_instance_registry" kindref="compound">HdInstanceRegistry</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>KeyType is a hashable index type and VALUE is shared_ptr. In most use cases, the client computes a hash key which represents large bulky data (like topology, primvars) and registers it into <ref refid="class_hd_instance_registry" kindref="compound">HdInstanceRegistry</ref>. If the key has already been registered, the registry returns <ref refid="class_hd_instance" kindref="compound">HdInstance</ref> and the client can use <ref refid="class_hd_instance_1a803eb9fec153cd392c653022fa2a3088" kindref="member">GetValue()</ref> without setting/computing actual bulky data. If it doesn&apos;t exist, <ref refid="class_hd_instance_1a06a7ab7d1eb167139d8f93072da5a4f1" kindref="member">IsFirstInstance()</ref> returns true for the first instance and the client needs to populate an appropriate data VALUE into the instance by <ref refid="class_hd_instance_1a817eb01175253cd971b84943d02c80b2" kindref="member">SetValue()</ref>.</para>
<para>In order to support concurrent access to <ref refid="class_hd_instance_registry" kindref="compound">HdInstanceRegistry</ref>, this class holds a lock to a mutex in <ref refid="class_hd_instance_registry" kindref="compound">HdInstanceRegistry</ref>. This lock will be held until the instance of this interface class is destroyed. </para>
    </detaileddescription>
    <location file="pxr/imaging/hd/instanceRegistry.h" line="60" column="1" bodyfile="pxr/imaging/hd/instanceRegistry.h" bodystart="60" bodyend="133"/>
    <listofallmembers>
      <member refid="class_hd_instance_1a4fc8d08e5834583031c6761738ecd1bc" prot="private" virt="non-virtual"><scope>HdInstance</scope><name>_container</name></member>
      <member refid="class_hd_instance_1a82e508e245e82a31e50e5a996bf12b9c" prot="private" virt="non-virtual"><scope>HdInstance</scope><name>_isFirstInstance</name></member>
      <member refid="class_hd_instance_1acc45fba6939693ba927001c8d94efd16" prot="private" virt="non-virtual"><scope>HdInstance</scope><name>_key</name></member>
      <member refid="class_hd_instance_1a9b47fcc00834bb108d7e36838229f9c7" prot="private" virt="non-virtual"><scope>HdInstance</scope><name>_registryLock</name></member>
      <member refid="class_hd_instance_1af35d8985614ee852c2b135a89ec64d38" prot="private" virt="non-virtual"><scope>HdInstance</scope><name>_value</name></member>
      <member refid="class_hd_instance_1a7d570913d11153fff03c7199643749ed" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>Dictionary</name></member>
      <member refid="class_hd_instance_1a272ba01155d8304f311a28fe34f12e56" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>GetKey</name></member>
      <member refid="class_hd_instance_1a803eb9fec153cd392c653022fa2a3088" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>GetValue</name></member>
      <member refid="class_hd_instance_1a6fcb75c08bed824b30ff85d2b90751e1" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>HdInstance</name></member>
      <member refid="class_hd_instance_1abdd79fb33b2db8a4ea0e960b0fbd1469" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>HdInstance</name></member>
      <member refid="class_hd_instance_1ac2cbfdbb8f67789ac460941896193bb2" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>HdInstance</name></member>
      <member refid="class_hd_instance_1adf80e271c630e904bb1e8ed0aa19ae0f" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>ID</name></member>
      <member refid="class_hd_instance_1a06a7ab7d1eb167139d8f93072da5a4f1" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>IsFirstInstance</name></member>
      <member refid="class_hd_instance_1a3254c750eee2c172b6aad0c11c4e20d6" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>KeyType</name></member>
      <member refid="class_hd_instance_1a5869c974631e2d92b1b92551eb95b044" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>RegistryLock</name></member>
      <member refid="class_hd_instance_1a40fa7c56d553b2e9cc63b14a6da92a5c" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>RegistryMutex</name></member>
      <member refid="class_hd_instance_1a817eb01175253cd971b84943d02c80b2" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>SetValue</name></member>
      <member refid="class_hd_instance_1adecd504acd2c4988e38bbd048ec0bae0" prot="public" virt="non-virtual"><scope>HdInstance</scope><name>ValueType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
