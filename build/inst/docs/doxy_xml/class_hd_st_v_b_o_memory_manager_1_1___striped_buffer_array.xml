<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array" kind="class" language="C++" prot="protected">
    <compoundname>HdStVBOMemoryManager::_StripedBufferArray</compoundname>
    <basecompoundref refid="class_hd_buffer_array" prot="public" virt="non-virtual">HdBufferArray</basecompoundref>
    <includes refid="vbo_memory_manager_8h" local="no">vboMemoryManager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a33c5de4dfb2c30c6b2539a97affea45d" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
        <definition>HdStResourceRegistry* _resourceRegistry</definition>
        <argsstring></argsstring>
        <name>_resourceRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="316" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a840d78d60005bc3a7800a9c07142d3c3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _needsCompaction</definition>
        <argsstring></argsstring>
        <name>_needsCompaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="317" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a1750fc109e3ac49ac512e797e8d60709" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _totalCapacity</definition>
        <argsstring></argsstring>
        <name>_totalCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="318" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a6bdfa93e6415cae150d222f3c8539467" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _maxBytesPerElement</definition>
        <argsstring></argsstring>
        <name>_maxBytesPerElement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="319" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1aee41a79a9661a18a810e9371d37e9b30" prot="private" static="no" mutable="no">
        <type>HdStBufferResourceNamedList</type>
        <definition>HdStBufferResourceNamedList _resourceList</definition>
        <argsstring></argsstring>
        <name>_resourceList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="321" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a74acd6271266bee8916b1e5b44743434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API _StripedBufferArray</definition>
        <argsstring>(HdStResourceRegistry *resourceRegistry, TfToken const &amp;role, HdBufferSpecVector const &amp;bufferSpecs, HdBufferArrayUsageHint usageHint)</argsstring>
        <name>_StripedBufferArray</name>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>role</declname>
        </param>
        <param>
          <type>HdBufferSpecVector const &amp;</type>
          <declname>bufferSpecs</declname>
        </param>
        <param>
          <type><ref refid="union_hd_buffer_array_usage_hint" kindref="compound">HdBufferArrayUsageHint</ref></type>
          <declname>usageHint</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a023ecdaece35f6accbf9fb13fca020a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~_StripedBufferArray</definition>
        <argsstring>() override</argsstring>
        <name>~_StripedBufferArray</name>
        <briefdescription>
<para>Destructor. It invalidates _rangeList. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a5f9010b31b42a68ebc2a665049a416f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool GarbageCollect</definition>
        <argsstring>() override</argsstring>
        <name>GarbageCollect</name>
        <reimplements refid="class_hd_buffer_array_1a0cb377d7abe60cfcc5b697ff6ef76e1f">GarbageCollect</reimplements>
        <briefdescription>
<para>perform compaction if necessary. </para>
        </briefdescription>
        <detaileddescription>
<para>If it becomes empty, release all resources and returns true </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a6a48d7fbd02ba4c98eda7e7fa1a716ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void DebugDump</definition>
        <argsstring>(std::ostream &amp;out) const override</argsstring>
        <name>DebugDump</name>
        <reimplements refid="class_hd_buffer_array_1a1d73c3578ae8bc963a88e8ec7eacda20">DebugDump</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Debug output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a50df360eb5efa1c708b3de7ccdc28e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Reallocate</definition>
        <argsstring>(std::vector&lt; HdBufferArrayRangeSharedPtr &gt; const &amp;ranges, HdBufferArraySharedPtr const &amp;curRangeOwner) override</argsstring>
        <name>Reallocate</name>
        <reimplements refid="class_hd_buffer_array_1a29d764a790a44bd5874a6193f1e8df78">Reallocate</reimplements>
        <param>
          <type>std::vector&lt; HdBufferArrayRangeSharedPtr &gt; const &amp;</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>HdBufferArraySharedPtr const &amp;</type>
          <declname>curRangeOwner</declname>
        </param>
        <briefdescription>
<para>Performs reallocation. </para>
        </briefdescription>
        <detaileddescription>
<para>GLX context has to be set when calling this function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a7501c7a8f278b11095f2e614590ac874" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API size_t</type>
        <definition>HDST_API size_t GetMaxNumElements</definition>
        <argsstring>() const override</argsstring>
        <name>GetMaxNumElements</name>
        <reimplements refid="class_hd_buffer_array_1a397a08148e24f14f877445e6156c3fa2">GetMaxNumElements</reimplements>
        <briefdescription>
<para>Returns the maximum number of elements capacity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a11a51faf8eba4a36e5b74db059f26b32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetNeedsReallocation</definition>
        <argsstring>()</argsstring>
        <name>SetNeedsReallocation</name>
        <briefdescription>
<para>Mark to perform reallocation on <ref refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a50df360eb5efa1c708b3de7ccdc28e2d" kindref="member">Reallocate()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="274" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="274" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a01d7d3f817c4ea50b2cb56973e11594d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetNeedsCompaction</definition>
        <argsstring>()</argsstring>
        <name>SetNeedsCompaction</name>
        <briefdescription>
<para>Mark to perform compaction on <ref refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a5f9010b31b42a68ebc2a665049a416f2" kindref="member">GarbageCollect()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="279" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a1b7cdfe73a61d84ffc3ae6aee4b02b43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStBufferResourceSharedPtr</type>
        <definition>HDST_API HdStBufferResourceSharedPtr GetResource</definition>
        <argsstring>() const</argsstring>
        <name>GetResource</name>
        <briefdescription>
<para>Returns the GPU resource. </para>
        </briefdescription>
        <detaileddescription>
<para>If the buffer array contains more than one resource, this method raises a coding error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a0f2cf5809b72fb98c9cbcadfe55d881f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStBufferResourceSharedPtr</type>
        <definition>HDST_API HdStBufferResourceSharedPtr GetResource</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>GetResource</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named GPU resource. </para>
        </briefdescription>
        <detaileddescription>
<para>This method returns the first found resource. In HD_SAFE_MODE it checks all underlying GL buffers in _resourceMap and raises a coding error if there are more than one GL buffers exist. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a6d80d7e988d465733c7cb35ee7bc3d62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStBufferResourceNamedList const  &amp;</type>
        <definition>HdStBufferResourceNamedList const&amp; GetResources</definition>
        <argsstring>() const</argsstring>
        <name>GetResources</name>
        <briefdescription>
<para>Returns the list of all named GPU resources for this bufferArray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="296" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="296" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1aeed3984eeebfe1501ee05ddbc6cef8ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdBufferSpecVector</type>
        <definition>HDST_API HdBufferSpecVector GetBufferSpecs</definition>
        <argsstring>() const</argsstring>
        <name>GetBufferSpecs</name>
        <briefdescription>
<para>Reconstructs the bufferspecs and returns it (for buffer splitting) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="301" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a4e91b99721575f011cb9e09e30ee0d7b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _DeallocateResources</definition>
        <argsstring>()</argsstring>
        <name>_DeallocateResources</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a058421d2ac66a88c81a5d2858de6d97e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStBufferResourceSharedPtr</type>
        <definition>HDST_API HdStBufferResourceSharedPtr _AddResource</definition>
        <argsstring>(TfToken const &amp;name, HdTupleType tupleType, int offset, int stride)</argsstring>
        <name>_AddResource</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref></type>
          <declname>tupleType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
<para>Adds a new, named GPU resource and returns it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="309" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a452827f0934aa87f0f0966311b994ff7" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_StripedBufferArrayRangeSharedPtr</type>
        <definition>_StripedBufferArrayRangeSharedPtr _GetRangeSharedPtr</definition>
        <argsstring>(size_t idx) const</argsstring>
        <name>_GetRangeSharedPtr</name>
        <param>
          <type>size_t</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="324" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="324" bodyend="326"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>striped buffer array </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="568">
        <label>HdBufferArray</label>
        <link refid="class_hd_buffer_array"/>
      </node>
      <node id="567">
        <label>HdStVBOMemoryManager::_StripedBufferArray</label>
        <link refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array"/>
        <childnode refid="568" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="570">
        <label>HdBufferArray</label>
        <link refid="class_hd_buffer_array"/>
      </node>
      <node id="569">
        <label>HdStVBOMemoryManager::_StripedBufferArray</label>
        <link refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array"/>
        <childnode refid="570" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/vboMemoryManager.h" line="240" column="1" bodyfile="pxr/imaging/hdSt/vboMemoryManager.h" bodystart="239" bodyend="327"/>
    <listofallmembers>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a058421d2ac66a88c81a5d2858de6d97e" prot="protected" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_AddResource</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a4e91b99721575f011cb9e09e30ee0d7b" prot="protected" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_DeallocateResources</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a452827f0934aa87f0f0966311b994ff7" prot="private" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_GetRangeSharedPtr</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a6bdfa93e6415cae150d222f3c8539467" prot="private" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_maxBytesPerElement</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a840d78d60005bc3a7800a9c07142d3c3" prot="private" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_needsCompaction</name></member>
      <member refid="class_hd_buffer_array_1a93c02d15df4b0808858bcddff0fdde69" prot="protected" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_needsReallocation</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1aee41a79a9661a18a810e9371d37e9b30" prot="private" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_resourceList</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a33c5de4dfb2c30c6b2539a97affea45d" prot="private" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_resourceRegistry</name></member>
      <member refid="class_hd_buffer_array_1a7317a6d3d67ebefe2abf4c8d965f7ce7" prot="protected" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_SetMaxNumRanges</name></member>
      <member refid="class_hd_buffer_array_1ad5fadff5878adff3580c953edf55c102" prot="protected" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_SetRangeList</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a74acd6271266bee8916b1e5b44743434" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_StripedBufferArray</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a1750fc109e3ac49ac512e797e8d60709" prot="private" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>_totalCapacity</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a6a48d7fbd02ba4c98eda7e7fa1a716ed" prot="public" virt="virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>DebugDump</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a5f9010b31b42a68ebc2a665049a416f2" prot="public" virt="virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GarbageCollect</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1aeed3984eeebfe1501ee05ddbc6cef8ce" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a7501c7a8f278b11095f2e614590ac874" prot="public" virt="virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetMaxNumElements</name></member>
      <member refid="class_hd_buffer_array_1abe22f4d5dc3fe18c11c7574230ad9f65" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetRange</name></member>
      <member refid="class_hd_buffer_array_1add00eb5e4d61e76656a7e34a1cc1fae5" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetRangeCount</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a1b7cdfe73a61d84ffc3ae6aee4b02b43" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetResource</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a0f2cf5809b72fb98c9cbcadfe55d881f" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetResource</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a6d80d7e988d465733c7cb35ee7bc3d62" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetResources</name></member>
      <member refid="class_hd_buffer_array_1aafbf8ee2945b8aea41e3627e502d6ec2" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetRole</name></member>
      <member refid="class_hd_buffer_array_1ab41a2692243892966815fba28c1f65bb" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetUsageHint</name></member>
      <member refid="class_hd_buffer_array_1ac13a730dc150777d7cb405148add123a" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>GetVersion</name></member>
      <member refid="class_hd_buffer_array_1af8b5995437a5e708eeda464350543f16" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>HdBufferArray</name></member>
      <member refid="class_hd_buffer_array_1a9566dc2cfe7a59933ec5b0157b9e680e" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>IncrementVersion</name></member>
      <member refid="class_hd_buffer_array_1a5eef7725fbdaff5123abd7ba4bb4aa86" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>IsImmutable</name></member>
      <member refid="class_hd_buffer_array_1a8774936bd0385297a3f1b113ffe761e2" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>NeedsReallocation</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a50df360eb5efa1c708b3de7ccdc28e2d" prot="public" virt="virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>Reallocate</name></member>
      <member refid="class_hd_buffer_array_1aa54b967fa38e565cff9275b60807b47b" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>RemoveUnusedRanges</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a01d7d3f817c4ea50b2cb56973e11594d" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>SetNeedsCompaction</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a11a51faf8eba4a36e5b74db059f26b32" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>SetNeedsReallocation</name></member>
      <member refid="class_hd_buffer_array_1ac742e2a16bddc249a1a795ec9d04fa1a" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>TryAssignRange</name></member>
      <member refid="class_hd_st_v_b_o_memory_manager_1_1___striped_buffer_array_1a023ecdaece35f6accbf9fb13fca020a7" prot="public" virt="non-virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>~_StripedBufferArray</name></member>
      <member refid="class_hd_buffer_array_1a20450a4e20aacd9ee223e6a47eadfe92" prot="public" virt="virtual"><scope>HdStVBOMemoryManager::_StripedBufferArray</scope><name>~HdBufferArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
