<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_size2" kind="class" language="C++" prot="public">
    <compoundname>GfSize2</compoundname>
    <includes refid="size2_8h" local="no">size2.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_size2_1afe5aa5a65f69cb587f4d46e5f200bb16" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _vec[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="192" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_size2_1a0d03b7256058e0187c61787b77a32283" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize2</definition>
        <argsstring>()</argsstring>
        <name>GfSize2</name>
        <briefdescription>
<para>Default constructor initializes components to zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="54" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1af0db18c6be2b93e84f709271678381ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize2</definition>
        <argsstring>(const GfSize2 &amp;o)</argsstring>
        <name>GfSize2</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="59" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a7592fd7059831d68d3c3c8754b0bb550" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize2</definition>
        <argsstring>(const GfVec2i &amp;o)</argsstring>
        <name>GfSize2</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Conversion from <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="64" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a109ba07ef9376424ee57853973fbb728" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize2</definition>
        <argsstring>(const size_t v[2])</argsstring>
        <name>GfSize2</name>
        <param>
          <type>const size_t</type>
          <declname>v</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
<para>Construct from an array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="69" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a81dbe8ef42794d53f1ed2d750e287678" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfSize2</definition>
        <argsstring>(size_t v0, size_t v1)</argsstring>
        <name>GfSize2</name>
        <param>
          <type>size_t</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>v1</declname>
        </param>
        <briefdescription>
<para>Construct from two values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="74" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1ab1491cac1791ddee4a48754d17a8c0a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; Set</definition>
        <argsstring>(const size_t v[2])</argsstring>
        <name>Set</name>
        <param>
          <type>const size_t</type>
          <declname>v</declname>
          <array>[2]</array>
        </param>
        <briefdescription>
<para>Set to the values in a given array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="79" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a1bab429f30a7bcbb48e6e2bfdf9debd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; Set</definition>
        <argsstring>(size_t v0, size_t v1)</argsstring>
        <name>Set</name>
        <param>
          <type>size_t</type>
          <declname>v0</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>v1</declname>
        </param>
        <briefdescription>
<para>Set to values passed directly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="86" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a965b1808d7f6a9faec040b358ab38369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t &amp;</type>
        <definition>size_t&amp; operator []</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator []</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Array operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="93" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1afe3be8164d5574ee62fd5b033337a50e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const size_t &amp;</type>
        <definition>const size_t&amp; operator []</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator []</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Const array operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="98" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a9acc81d68a41a08767cc83271aeed2f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const GfSize2 &amp;v) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise equality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="103" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a4ca06e573da0f7de9c488d5367058065" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator !=</definition>
        <argsstring>(const GfSize2 &amp;v) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise inequality. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="108" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a073e0496594afe66468905d301fdff3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; operator+=</definition>
        <argsstring>(const GfSize2 &amp;v)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="113" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1acbc10c2946c548395fdfba85f01546f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; operator -=</definition>
        <argsstring>(const GfSize2 &amp;v)</argsstring>
        <name>operator -=</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="120" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1af338ab2a724a582b9978a747bf0eb5c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; operator *=</definition>
        <argsstring>(GfSize2 const &amp;v)</argsstring>
        <name>operator *=</name>
        <param>
          <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place multiplication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="127" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a6edff28180a84845876430eb3aea6b65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; operator *=</definition>
        <argsstring>(int d)</argsstring>
        <name>operator *=</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place multiplication by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="134" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="134" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1a8eeaa8a724fa04a6e97293c1574ebd07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
        <definition>GfSize2&amp; operator/=</definition>
        <argsstring>(int d)</argsstring>
        <name>operator/=</name>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Component-wise in-place division by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="141" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_size2_1ac0812a54e5c7f9e2812ba7fcc77444ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator GfVec2i</definition>
        <argsstring>() const</argsstring>
        <name>operator GfVec2i</name>
        <briefdescription>
<para>Conversion to <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="188" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="188" bodyend="190"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_size2_1ab6879cd2a0c73abf08e69641ff1c56e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size2" kindref="compound">GfSize2</ref></type>
        <definition>GfSize2 operator+</definition>
        <argsstring>(const GfSize2 &amp;v1, const GfSize2 &amp;v2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Component-wise addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="148" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size2_1ab3d7a4bd6f63deda4b2f998cbce44e57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size2" kindref="compound">GfSize2</ref></type>
        <definition>GfSize2 operator -</definition>
        <argsstring>(const GfSize2 &amp;v1, const GfSize2 &amp;v2)</argsstring>
        <name>operator -</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Component-wise subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="154" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size2_1ac6c2e9f0ccf1f251846b26d9663b4774" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size2" kindref="compound">GfSize2</ref></type>
        <definition>GfSize2 operator *</definition>
        <argsstring>(const GfSize2 &amp;v1, const GfSize2 &amp;v2)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v2</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="160" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size2_1afcf0909efcff9a220526e179aad7fc55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size2" kindref="compound">GfSize2</ref></type>
        <definition>GfSize2 operator *</definition>
        <argsstring>(const GfSize2 &amp;v1, int s)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="166" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size2_1a8e74daff2937b04e6527345306e2ccf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size2" kindref="compound">GfSize2</ref></type>
        <definition>GfSize2 operator *</definition>
        <argsstring>(int s, const GfSize2 &amp;v1)</argsstring>
        <name>operator *</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <briefdescription>
<para>Component-wise multiplication by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="172" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size2_1a33e9441781e93bf195cbb359926ae6d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_size2" kindref="compound">GfSize2</ref></type>
        <definition>GfSize2 operator/</definition>
        <argsstring>(const GfSize2 &amp;v1, int s)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> &amp;</type>
          <declname>v1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Component-wise division by a scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="178" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_size2_1a7b2b20502be0c57e906ae3729429b95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API friend std::ostream &amp;</type>
        <definition>GF_API friend std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, GfSize2 const &amp;v)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Output operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/size2.h" line="185" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Two-dimensional array of sizes. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_gf_size2" kindref="compound">GfSize2</ref> is used to represent pairs of counts. It is based on the datatype size_t, and thus can only represent non-negative values in each dimension. If you need to represent negative numbers as well, use <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref>.</para>
<para>Usage of <ref refid="class_gf_size2" kindref="compound">GfSize2</ref> is similar to that of <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref>, except that all mathematical operations are componentwise (including multiplication). </para>
    </detaileddescription>
    <location file="pxr/base/gf/size2.h" line="51" column="1" bodyfile="pxr/base/gf/size2.h" bodystart="51" bodyend="193"/>
    <listofallmembers>
      <member refid="class_gf_size2_1afe5aa5a65f69cb587f4d46e5f200bb16" prot="private" virt="non-virtual"><scope>GfSize2</scope><name>_vec</name></member>
      <member refid="class_gf_size2_1a0d03b7256058e0187c61787b77a32283" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>GfSize2</name></member>
      <member refid="class_gf_size2_1af0db18c6be2b93e84f709271678381ee" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>GfSize2</name></member>
      <member refid="class_gf_size2_1a7592fd7059831d68d3c3c8754b0bb550" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>GfSize2</name></member>
      <member refid="class_gf_size2_1a109ba07ef9376424ee57853973fbb728" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>GfSize2</name></member>
      <member refid="class_gf_size2_1a81dbe8ef42794d53f1ed2d750e287678" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>GfSize2</name></member>
      <member refid="class_gf_size2_1a4ca06e573da0f7de9c488d5367058065" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator !=</name></member>
      <member refid="class_gf_size2_1ac6c2e9f0ccf1f251846b26d9663b4774" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator *</name></member>
      <member refid="class_gf_size2_1afcf0909efcff9a220526e179aad7fc55" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator *</name></member>
      <member refid="class_gf_size2_1a8e74daff2937b04e6527345306e2ccf2" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator *</name></member>
      <member refid="class_gf_size2_1af338ab2a724a582b9978a747bf0eb5c7" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator *=</name></member>
      <member refid="class_gf_size2_1a6edff28180a84845876430eb3aea6b65" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator *=</name></member>
      <member refid="class_gf_size2_1ab3d7a4bd6f63deda4b2f998cbce44e57" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator -</name></member>
      <member refid="class_gf_size2_1acbc10c2946c548395fdfba85f01546f3" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator -=</name></member>
      <member refid="class_gf_size2_1a965b1808d7f6a9faec040b358ab38369" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator []</name></member>
      <member refid="class_gf_size2_1afe3be8164d5574ee62fd5b033337a50e" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator []</name></member>
      <member refid="class_gf_size2_1ac0812a54e5c7f9e2812ba7fcc77444ff" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator GfVec2i</name></member>
      <member refid="class_gf_size2_1ab6879cd2a0c73abf08e69641ff1c56e7" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator+</name></member>
      <member refid="class_gf_size2_1a073e0496594afe66468905d301fdff3f" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator+=</name></member>
      <member refid="class_gf_size2_1a33e9441781e93bf195cbb359926ae6d6" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator/</name></member>
      <member refid="class_gf_size2_1a8eeaa8a724fa04a6e97293c1574ebd07" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator/=</name></member>
      <member refid="class_gf_size2_1a7b2b20502be0c57e906ae3729429b95a" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_gf_size2_1a9acc81d68a41a08767cc83271aeed2f5" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>operator==</name></member>
      <member refid="class_gf_size2_1ab1491cac1791ddee4a48754d17a8c0a7" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>Set</name></member>
      <member refid="class_gf_size2_1a1bab429f30a7bcbb48e6e2bfdf9debd6" prot="public" virt="non-virtual"><scope>GfSize2</scope><name>Set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
