<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="path_expression_eval_8h" kind="file" language="C++">
    <compoundname>pathExpressionEval.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2sdf_2api_8h" local="yes">pxr/usd/sdf/api.h</includes>
    <includes refid="path_8h" local="yes">pxr/usd/sdf/path.h</includes>
    <includes refid="path_expression_8h" local="yes">pxr/usd/sdf/pathExpression.h</includes>
    <includes refid="predicate_expression_8h" local="yes">pxr/usd/sdf/predicateExpression.h</includes>
    <includes refid="predicate_library_8h" local="yes">pxr/usd/sdf/predicateLibrary.h</includes>
    <includes refid="predicate_program_8h" local="yes">pxr/usd/sdf/predicateProgram.h</includes>
    <includes refid="regex_8h" local="yes">pxr/base/arch/regex.h</includes>
    <includes refid="function_ref_8h" local="yes">pxr/base/tf/functionRef.h</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">vector</includes>
    <includedby refid="collection_membership_query_8h" local="yes">pxr/usd/usd/collectionMembershipQuery.h</includedby>
    <incdepgraph>
      <node id="179940">
        <label>list</label>
      </node>
      <node id="179876">
        <label>locale</label>
      </node>
      <node id="179881">
        <label>atomic</label>
      </node>
      <node id="179879">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179880" relation="include">
        </childnode>
        <childnode refid="179881" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179878">
        <label>stdarg.h</label>
      </node>
      <node id="179891">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="179892" relation="include">
        </childnode>
        <childnode refid="179893" relation="include">
        </childnode>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179894" relation="include">
        </childnode>
      </node>
      <node id="179944">
        <label>functional</label>
      </node>
      <node id="179913">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179914" relation="include">
        </childnode>
      </node>
      <node id="179855">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="179856" relation="include">
        </childnode>
      </node>
      <node id="179959">
        <label>pxr/usd/sdf/predicateLibrary.h</label>
        <link refid="predicate_library_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179866" relation="include">
        </childnode>
        <childnode refid="179960" relation="include">
        </childnode>
        <childnode refid="179962" relation="include">
        </childnode>
        <childnode refid="179927" relation="include">
        </childnode>
        <childnode refid="179926" relation="include">
        </childnode>
        <childnode refid="179973" relation="include">
        </childnode>
        <childnode refid="179963" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179955">
        <label>limits</label>
      </node>
      <node id="179931">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="179915">
        <label>pxr/base/tf/iterator.h</label>
        <link refid="base_2tf_2iterator_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179869" relation="include">
        </childnode>
        <childnode refid="179916" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
      </node>
      <node id="179920">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="179858">
        <label>pxr/usd/sdf/pool.h</label>
        <link refid="pool_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179859" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179865" relation="include">
        </childnode>
        <childnode refid="179866" relation="include">
        </childnode>
        <childnode refid="179879" relation="include">
        </childnode>
        <childnode refid="179883" relation="include">
        </childnode>
        <childnode refid="179881" relation="include">
        </childnode>
        <childnode refid="179884" relation="include">
        </childnode>
      </node>
      <node id="179916">
        <label>iterator</label>
      </node>
      <node id="179893">
        <label>cstdint</label>
      </node>
      <node id="179925">
        <label>pxr/usd/sdf/pathExpression.h</label>
        <link refid="path_expression_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179857" relation="include">
        </childnode>
        <childnode refid="179926" relation="include">
        </childnode>
        <childnode refid="179888" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179958" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179964">
        <label>robin_hash.h</label>
        <link refid="robin__hash_8h_source"/>
        <childnode refid="179917" relation="include">
        </childnode>
        <childnode refid="179965" relation="include">
        </childnode>
        <childnode refid="179895" relation="include">
        </childnode>
        <childnode refid="179957" relation="include">
        </childnode>
        <childnode refid="179893" relation="include">
        </childnode>
        <childnode refid="179966" relation="include">
        </childnode>
        <childnode refid="179916" relation="include">
        </childnode>
        <childnode refid="179955" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179967" relation="include">
        </childnode>
        <childnode refid="179958" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
        <childnode refid="179968" relation="include">
        </childnode>
        <childnode refid="179853" relation="include">
        </childnode>
      </node>
      <node id="179875">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179870" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179876" relation="include">
        </childnode>
        <childnode refid="179877" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
      </node>
      <node id="179865">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="179856" relation="include">
        </childnode>
      </node>
      <node id="179895">
        <label>cmath</label>
      </node>
      <node id="179965">
        <label>cassert</label>
      </node>
      <node id="179889">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179872" relation="include">
        </childnode>
        <childnode refid="179890" relation="include">
        </childnode>
        <childnode refid="179891" relation="include">
        </childnode>
        <childnode refid="179896" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
      </node>
      <node id="179967">
        <label>stdexcept</label>
      </node>
      <node id="179921">
        <label>pxr/usd/sdf/pathNode.h</label>
        <link refid="path_node_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179922" relation="include">
        </childnode>
        <childnode refid="179887" relation="include">
        </childnode>
        <childnode refid="179923" relation="include">
        </childnode>
        <childnode refid="179920" relation="include">
        </childnode>
      </node>
      <node id="179883">
        <label>tbb/concurrent_queue.h</label>
      </node>
      <node id="179905">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179865" relation="include">
        </childnode>
        <childnode refid="179893" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
      </node>
      <node id="179939">
        <label>cstdarg</label>
      </node>
      <node id="179861">
        <label>string</label>
      </node>
      <node id="179922">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
      </node>
      <node id="179870">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179855" relation="include">
        </childnode>
      </node>
      <node id="179899">
        <label>map</label>
      </node>
      <node id="179892">
        <label>cinttypes</label>
      </node>
      <node id="179885">
        <label>pxr/usd/sdf/tokens.h</label>
        <link refid="usd_2sdf_2tokens_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179886" relation="include">
        </childnode>
      </node>
      <node id="179853">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="179904">
        <label>unordered_set</label>
      </node>
      <node id="179946">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="179923" relation="include">
        </childnode>
      </node>
      <node id="179859">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179860" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
        <childnode refid="179863" relation="include">
        </childnode>
      </node>
      <node id="179919">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="179855" relation="include">
        </childnode>
      </node>
      <node id="179961">
        <label>pxr/base/tf/meta.h</label>
        <link refid="meta_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179957" relation="include">
        </childnode>
        <childnode refid="179958" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179966">
        <label>exception</label>
      </node>
      <node id="179854">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="179855" relation="include">
        </childnode>
      </node>
      <node id="179874">
        <label>stddef.h</label>
      </node>
      <node id="179872">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
      </node>
      <node id="179973">
        <label>pxr/usd/sdf/invoke.hpp</label>
      </node>
      <node id="179880">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="179856" relation="include">
        </childnode>
      </node>
      <node id="179936">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
      </node>
      <node id="179952">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179953" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
      </node>
      <node id="179951">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179952" relation="include">
        </childnode>
        <childnode refid="179954" relation="include">
        </childnode>
        <childnode refid="179956" relation="include">
        </childnode>
      </node>
      <node id="179953">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="179855" relation="include">
        </childnode>
      </node>
      <node id="179929">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="179865" relation="include">
        </childnode>
        <childnode refid="179876" relation="include">
        </childnode>
        <childnode refid="179930" relation="include">
        </childnode>
      </node>
      <node id="179971">
        <label>ratio</label>
      </node>
      <node id="179852">
        <label>pxr/usd/sdf/pathExpressionEval.h</label>
        <link refid="path_expression_eval_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179857" relation="include">
        </childnode>
        <childnode refid="179925" relation="include">
        </childnode>
        <childnode refid="179926" relation="include">
        </childnode>
        <childnode refid="179959" relation="include">
        </childnode>
        <childnode refid="179974" relation="include">
        </childnode>
        <childnode refid="179975" relation="include">
        </childnode>
        <childnode refid="179922" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179960">
        <label>pxr/base/tf/functionTraits.h</label>
        <link refid="function_traits_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179961" relation="include">
        </childnode>
        <childnode refid="179957" relation="include">
        </childnode>
        <childnode refid="179958" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179911">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="179857">
        <label>pxr/usd/sdf/path.h</label>
        <link refid="path_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179858" relation="include">
        </childnode>
        <childnode refid="179885" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179912" relation="include">
        </childnode>
        <childnode refid="179887" relation="include">
        </childnode>
        <childnode refid="179918" relation="include">
        </childnode>
        <childnode refid="179920" relation="include">
        </childnode>
        <childnode refid="179917" relation="include">
        </childnode>
        <childnode refid="179916" relation="include">
        </childnode>
        <childnode refid="179901" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
        <childnode refid="179921" relation="include">
        </childnode>
      </node>
      <node id="179877">
        <label>any</label>
      </node>
      <node id="179975">
        <label>pxr/base/arch/regex.h</label>
        <link refid="regex_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179860" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
      </node>
      <node id="179894">
        <label>sys/types.h</label>
      </node>
      <node id="179962">
        <label>pxr/base/tf/pxrTslRobinMap/robin_map.h</label>
        <link refid="robin__map_8h_source"/>
        <childnode refid="179957" relation="include">
        </childnode>
        <childnode refid="179944" relation="include">
        </childnode>
        <childnode refid="179963" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
        <childnode refid="179964" relation="include">
        </childnode>
        <childnode refid="179853" relation="include">
        </childnode>
      </node>
      <node id="179938">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179859" relation="include">
        </childnode>
        <childnode refid="179888" relation="include">
        </childnode>
        <childnode refid="179880" relation="include">
        </childnode>
        <childnode refid="179936" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179862">
        <label>typeinfo</label>
      </node>
      <node id="179933">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="179932">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="179958">
        <label>tuple</label>
      </node>
      <node id="179887">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179869" relation="include">
        </childnode>
        <childnode refid="179888" relation="include">
        </childnode>
        <childnode refid="179903" relation="include">
        </childnode>
        <childnode refid="179905" relation="include">
        </childnode>
        <childnode refid="179881" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
        <childnode refid="179901" relation="include">
        </childnode>
      </node>
      <node id="179923">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179881" relation="include">
        </childnode>
        <childnode refid="179924" relation="include">
        </childnode>
        <childnode refid="179893" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179890">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179891" relation="include">
        </childnode>
        <childnode refid="179895" relation="include">
        </childnode>
      </node>
      <node id="179902">
        <label>vector</label>
      </node>
      <node id="179947">
        <label>pxr/base/vt/hash.h</label>
        <link refid="vt_2hash_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179919" relation="include">
        </childnode>
        <childnode refid="179888" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
      </node>
      <node id="179871">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="179855" relation="include">
        </childnode>
      </node>
      <node id="179934">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179929" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
      </node>
      <node id="179954">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="179955" relation="include">
        </childnode>
        <childnode refid="179952" relation="include">
        </childnode>
      </node>
      <node id="179897">
        <label>utility</label>
      </node>
      <node id="179969">
        <label>array</label>
      </node>
      <node id="179941">
        <label>sstream</label>
      </node>
      <node id="179867">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179860" relation="include">
        </childnode>
        <childnode refid="179868" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
      </node>
      <node id="179907">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="179856">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="179918">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179919" relation="include">
        </childnode>
        <childnode refid="179880" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179886">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179880" relation="include">
        </childnode>
        <childnode refid="179879" relation="include">
        </childnode>
        <childnode refid="179887" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
        <childnode refid="179907" relation="include">
        </childnode>
        <childnode refid="179908" relation="include">
        </childnode>
        <childnode refid="179909" relation="include">
        </childnode>
        <childnode refid="179910" relation="include">
        </childnode>
        <childnode refid="179911" relation="include">
        </childnode>
      </node>
      <node id="179968">
        <label>robin_growth_policy.h</label>
        <link refid="robin__growth__policy_8h_source"/>
        <childnode refid="179917" relation="include">
        </childnode>
        <childnode refid="179969" relation="include">
        </childnode>
        <childnode refid="179970" relation="include">
        </childnode>
        <childnode refid="179895" relation="include">
        </childnode>
        <childnode refid="179957" relation="include">
        </childnode>
        <childnode refid="179893" relation="include">
        </childnode>
        <childnode refid="179916" relation="include">
        </childnode>
        <childnode refid="179955" relation="include">
        </childnode>
        <childnode refid="179971" relation="include">
        </childnode>
        <childnode refid="179967" relation="include">
        </childnode>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179972" relation="include">
        </childnode>
      </node>
      <node id="179864">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="179856" relation="include">
        </childnode>
      </node>
      <node id="179888">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179889" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179898" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179899" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179901" relation="include">
        </childnode>
        <childnode refid="179863" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179896">
        <label>math.h</label>
      </node>
      <node id="179937">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179870" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179891" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179938" relation="include">
        </childnode>
        <childnode refid="179939" relation="include">
        </childnode>
        <childnode refid="179898" relation="include">
        </childnode>
        <childnode refid="179940" relation="include">
        </childnode>
        <childnode refid="179901" relation="include">
        </childnode>
        <childnode refid="179941" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179906">
        <label>iosfwd</label>
      </node>
      <node id="179924">
        <label>cstdlib</label>
      </node>
      <node id="179873">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179868" relation="include">
        </childnode>
        <childnode refid="179874" relation="include">
        </childnode>
      </node>
      <node id="179942">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179943" relation="include">
        </childnode>
        <childnode refid="179945" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179901" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
        <childnode refid="179946" relation="include">
        </childnode>
      </node>
      <node id="179930">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="179972">
        <label>iostream</label>
      </node>
      <node id="179974">
        <label>pxr/usd/sdf/predicateProgram.h</label>
        <link refid="predicate_program_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179866" relation="include">
        </childnode>
        <childnode refid="179960" relation="include">
        </childnode>
        <childnode refid="179927" relation="include">
        </childnode>
        <childnode refid="179926" relation="include">
        </childnode>
        <childnode refid="179959" relation="include">
        </childnode>
        <childnode refid="179973" relation="include">
        </childnode>
        <childnode refid="179963" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179949">
        <label>pxr/base/vt/types.h</label>
        <link refid="base_2vt_2types_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179919" relation="include">
        </childnode>
        <childnode refid="179918" relation="include">
        </childnode>
        <childnode refid="179891" relation="include">
        </childnode>
        <childnode refid="179950" relation="include">
        </childnode>
        <childnode refid="179951" relation="include">
        </childnode>
        <childnode refid="179880" relation="include">
        </childnode>
        <childnode refid="179887" relation="include">
        </childnode>
        <childnode refid="179909" relation="include">
        </childnode>
        <childnode refid="179910" relation="include">
        </childnode>
        <childnode refid="179957" relation="include">
        </childnode>
        <childnode refid="179898" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
      </node>
      <node id="179957">
        <label>cstddef</label>
      </node>
      <node id="179950">
        <label>pxr/base/gf/declare.h</label>
        <link refid="base_2gf_2declare_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
      </node>
      <node id="179945">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
      </node>
      <node id="179914">
        <label>unordered_map</label>
      </node>
      <node id="179970">
        <label>climits</label>
      </node>
      <node id="179926">
        <label>pxr/usd/sdf/predicateExpression.h</label>
        <link refid="predicate_expression_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179854" relation="include">
        </childnode>
        <childnode refid="179888" relation="include">
        </childnode>
        <childnode refid="179927" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
        <childnode refid="179958" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
        <childnode refid="179902" relation="include">
        </childnode>
      </node>
      <node id="179869">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179870" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179872" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179873" relation="include">
        </childnode>
        <childnode refid="179874" relation="include">
        </childnode>
      </node>
      <node id="179908">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="179884">
        <label>thread</label>
      </node>
      <node id="179928">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179865" relation="include">
        </childnode>
        <childnode refid="179929" relation="include">
        </childnode>
        <childnode refid="179931" relation="include">
        </childnode>
        <childnode refid="179932" relation="include">
        </childnode>
        <childnode refid="179933" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179900" relation="include">
        </childnode>
      </node>
      <node id="179912">
        <label>pxr/base/tf/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179889" relation="include">
        </childnode>
        <childnode refid="179913" relation="include">
        </childnode>
        <childnode refid="179903" relation="include">
        </childnode>
        <childnode refid="179915" relation="include">
        </childnode>
        <childnode refid="179917" relation="include">
        </childnode>
        <childnode refid="179916" relation="include">
        </childnode>
        <childnode refid="179899" relation="include">
        </childnode>
        <childnode refid="179901" relation="include">
        </childnode>
        <childnode refid="179897" relation="include">
        </childnode>
      </node>
      <node id="179910">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="179882">
        <label>type_traits</label>
      </node>
      <node id="179901">
        <label>set</label>
      </node>
      <node id="179935">
        <label>pxr/base/tf/anyUniquePtr.h</label>
        <link refid="any_unique_ptr_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179860">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="179855" relation="include">
        </childnode>
      </node>
      <node id="179868">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="179856" relation="include">
        </childnode>
      </node>
      <node id="179917">
        <label>algorithm</label>
      </node>
      <node id="179898">
        <label>cstring</label>
      </node>
      <node id="179956">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179900">
        <label>memory</label>
      </node>
      <node id="179943">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179870" relation="include">
        </childnode>
        <childnode refid="179880" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179944" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
      </node>
      <node id="179963">
        <label>initializer_list</label>
      </node>
      <node id="179866">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179867" relation="include">
        </childnode>
        <childnode refid="179869" relation="include">
        </childnode>
        <childnode refid="179871" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179875" relation="include">
        </childnode>
        <childnode refid="179874" relation="include">
        </childnode>
        <childnode refid="179878" relation="include">
        </childnode>
        <childnode refid="179861" relation="include">
        </childnode>
      </node>
      <node id="179903">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179856" relation="include">
        </childnode>
        <childnode refid="179904" relation="include">
        </childnode>
      </node>
      <node id="179863">
        <label>typeindex</label>
      </node>
      <node id="179927">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179928" relation="include">
        </childnode>
        <childnode refid="179934" relation="include">
        </childnode>
        <childnode refid="179859" relation="include">
        </childnode>
        <childnode refid="179864" relation="include">
        </childnode>
        <childnode refid="179865" relation="include">
        </childnode>
        <childnode refid="179935" relation="include">
        </childnode>
        <childnode refid="179905" relation="include">
        </childnode>
        <childnode refid="179936" relation="include">
        </childnode>
        <childnode refid="179937" relation="include">
        </childnode>
        <childnode refid="179889" relation="include">
        </childnode>
        <childnode refid="179942" relation="include">
        </childnode>
        <childnode refid="179919" relation="include">
        </childnode>
        <childnode refid="179947" relation="include">
        </childnode>
        <childnode refid="179948" relation="include">
        </childnode>
        <childnode refid="179918" relation="include">
        </childnode>
        <childnode refid="179949" relation="include">
        </childnode>
        <childnode refid="179920" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
      <node id="179909">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="179948">
        <label>pxr/base/vt/streamOut.h</label>
        <link refid="stream_out_8h_source"/>
        <childnode refid="179853" relation="include">
        </childnode>
        <childnode refid="179919" relation="include">
        </childnode>
        <childnode refid="179938" relation="include">
        </childnode>
        <childnode refid="179922" relation="include">
        </childnode>
        <childnode refid="179906" relation="include">
        </childnode>
        <childnode refid="179862" relation="include">
        </childnode>
        <childnode refid="179882" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="179982">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="180014">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="179993">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="179987">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="180035">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="180036" relation="include">
        </childnode>
        <childnode refid="180037" relation="include">
        </childnode>
        <childnode refid="180038" relation="include">
        </childnode>
        <childnode refid="180039" relation="include">
        </childnode>
      </node>
      <node id="180033">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="180024">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="180025" relation="include">
        </childnode>
        <childnode refid="180026" relation="include">
        </childnode>
        <childnode refid="180027" relation="include">
        </childnode>
        <childnode refid="180028" relation="include">
        </childnode>
        <childnode refid="180029" relation="include">
        </childnode>
        <childnode refid="180030" relation="include">
        </childnode>
        <childnode refid="180031" relation="include">
        </childnode>
        <childnode refid="180032" relation="include">
        </childnode>
        <childnode refid="180033" relation="include">
        </childnode>
        <childnode refid="180034" relation="include">
        </childnode>
      </node>
      <node id="179995">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="180019">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="179978">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="179979" relation="include">
        </childnode>
        <childnode refid="179991" relation="include">
        </childnode>
        <childnode refid="179993" relation="include">
        </childnode>
        <childnode refid="179994" relation="include">
        </childnode>
        <childnode refid="179995" relation="include">
        </childnode>
        <childnode refid="179996" relation="include">
        </childnode>
        <childnode refid="180051" relation="include">
        </childnode>
        <childnode refid="180052" relation="include">
        </childnode>
      </node>
      <node id="180036">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="180031">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="180025">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="180047">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="179990">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="180051">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="180009">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="179979">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="179980" relation="include">
        </childnode>
        <childnode refid="179986" relation="include">
        </childnode>
      </node>
      <node id="180018">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="179984">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="180027">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="180042">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="180030">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="179977">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="179978" relation="include">
        </childnode>
      </node>
      <node id="179980">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="179981" relation="include">
        </childnode>
        <childnode refid="179982" relation="include">
        </childnode>
        <childnode refid="179983" relation="include">
        </childnode>
        <childnode refid="179984" relation="include">
        </childnode>
        <childnode refid="179985" relation="include">
        </childnode>
      </node>
      <node id="179988">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="179992">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="180052">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="179998" relation="include">
        </childnode>
        <childnode refid="180001" relation="include">
        </childnode>
      </node>
      <node id="180046">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="180003">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="180034">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="180002">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="179985">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="180015">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="180005">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="180040">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="179981">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="180012">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="180023">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="179976">
        <label>pxr/usd/sdf/pathExpressionEval.h</label>
        <link refid="path_expression_eval_8h"/>
        <childnode refid="179977" relation="include">
        </childnode>
      </node>
      <node id="179989">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="180032">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="180026">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="179999">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="179991">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="179992" relation="include">
        </childnode>
      </node>
      <node id="180022">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="180007">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="180008" relation="include">
        </childnode>
        <childnode refid="180009" relation="include">
        </childnode>
      </node>
      <node id="180020">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="180001">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="180002" relation="include">
        </childnode>
        <childnode refid="180003" relation="include">
        </childnode>
        <childnode refid="180004" relation="include">
        </childnode>
        <childnode refid="180005" relation="include">
        </childnode>
        <childnode refid="180006" relation="include">
        </childnode>
        <childnode refid="180007" relation="include">
        </childnode>
        <childnode refid="180010" relation="include">
        </childnode>
        <childnode refid="180014" relation="include">
        </childnode>
        <childnode refid="180023" relation="include">
        </childnode>
        <childnode refid="180024" relation="include">
        </childnode>
        <childnode refid="180035" relation="include">
        </childnode>
        <childnode refid="180040" relation="include">
        </childnode>
        <childnode refid="180015" relation="include">
        </childnode>
        <childnode refid="180016" relation="include">
        </childnode>
        <childnode refid="180017" relation="include">
        </childnode>
        <childnode refid="180019" relation="include">
        </childnode>
        <childnode refid="180020" relation="include">
        </childnode>
        <childnode refid="180041" relation="include">
        </childnode>
        <childnode refid="180042" relation="include">
        </childnode>
        <childnode refid="180043" relation="include">
        </childnode>
        <childnode refid="180044" relation="include">
        </childnode>
        <childnode refid="180021" relation="include">
        </childnode>
        <childnode refid="180022" relation="include">
        </childnode>
        <childnode refid="180045" relation="include">
        </childnode>
        <childnode refid="180046" relation="include">
        </childnode>
        <childnode refid="180047" relation="include">
        </childnode>
        <childnode refid="180048" relation="include">
        </childnode>
        <childnode refid="180049" relation="include">
        </childnode>
        <childnode refid="180050" relation="include">
        </childnode>
      </node>
      <node id="180045">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="180008">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="180000">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="180037">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="180043">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="180050">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="180038">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="180021">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="180011">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="180004">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="180044">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="180040" relation="include">
        </childnode>
      </node>
      <node id="180039">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="179983">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="180029">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="179998">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="179999" relation="include">
        </childnode>
        <childnode refid="180000" relation="include">
        </childnode>
      </node>
      <node id="180017">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="179996">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="179997" relation="include">
        </childnode>
      </node>
      <node id="180016">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="180041">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="180028">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="179997">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="179998" relation="include">
        </childnode>
        <childnode refid="180001" relation="include">
        </childnode>
      </node>
      <node id="180010">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="180002" relation="include">
        </childnode>
        <childnode refid="180011" relation="include">
        </childnode>
        <childnode refid="180012" relation="include">
        </childnode>
        <childnode refid="180005" relation="include">
        </childnode>
        <childnode refid="180013" relation="include">
        </childnode>
        <childnode refid="180014" relation="include">
        </childnode>
        <childnode refid="180015" relation="include">
        </childnode>
        <childnode refid="180016" relation="include">
        </childnode>
        <childnode refid="180017" relation="include">
        </childnode>
        <childnode refid="180018" relation="include">
        </childnode>
        <childnode refid="180019" relation="include">
        </childnode>
        <childnode refid="180020" relation="include">
        </childnode>
        <childnode refid="180021" relation="include">
        </childnode>
        <childnode refid="180022" relation="include">
        </childnode>
      </node>
      <node id="179986">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="179987" relation="include">
        </childnode>
        <childnode refid="179988" relation="include">
        </childnode>
        <childnode refid="179989" relation="include">
        </childnode>
        <childnode refid="179990" relation="include">
        </childnode>
      </node>
      <node id="180013">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="180049">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="180006">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="179994">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="180048">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sdf_path_expression_eval" prot="public">SdfPathExpressionEval</innerclass>
    <innerclass refid="class_sdf_path_expression_eval" prot="public">SdfPathExpressionEval</innerclass>
    <innerclass refid="class_sdf_path_expression_eval_1_1___pattern_impl" prot="private">SdfPathExpressionEval::_PatternImpl</innerclass>
    <innerclass refid="class_sdf_path_expression_eval_1_1_incremental_searcher" prot="public">SdfPathExpressionEval::IncrementalSearcher</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="path_expression_eval_8h_1a336cf3c780a0e5f384006e158290cf43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DomainType</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref>&lt; DomainType &gt;</type>
        <definition>SdfPathExpressionEval&lt; DomainType &gt; SdfMakePathExpressionEval</definition>
        <argsstring>(SdfPathExpression const &amp;expr, SdfPredicateLibrary&lt; DomainType &gt; const &amp;lib)</argsstring>
        <name>SdfMakePathExpressionEval</name>
        <param>
          <type><ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary</ref>&lt; DomainType &gt; const &amp;</type>
          <declname>lib</declname>
        </param>
        <briefdescription>
<para>Create an <ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref> object that can evaluate the complete <ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref> <computeroutput>expr</computeroutput> on DomainType instances, using <computeroutput>lib</computeroutput>, an SdfPredicateLibrary&lt;DomainType&gt; to evaluate any embedded predicates. </para>
        </briefdescription>
        <detaileddescription>
<para>Make an <ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref> object to evaluate <computeroutput>expr</computeroutput> using <computeroutput>lib</computeroutput> to link any embedded predicate expressions.</para>
<para>Note that <computeroutput>expr</computeroutput> must be &quot;complete&quot;, meaning that SdfPathExpression::IsComplete() must return true. If an evaluator cannot succesfully be made, possibly because the passed \expr is not complete, or if any embedded <ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref> s cannot be successfully linked with <computeroutput>lib</computeroutput>, or another reason, issue an error and return the empty <ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref> object. See SdfPathExpressionEval::IsEmpty(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/pathExpressionEval.h" line="51" column="1" bodyfile="pxr/usd/sdf/pathExpressionEval.h" bodystart="366" bodyend="386"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_SDF_PATH_EXPRESSION_EVAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_SDF_PATH_EXPRESSION_EVAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/path.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/pathExpression.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/predicateExpression.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/predicateLibrary.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/predicateProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/arch/regex.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/functionRef.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fwd<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="46" refid="class_sdf_path_expression_eval" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fwd<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval&lt;DomainType&gt;</ref></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="class_sdf_path_expression_eval_1a62495aa2f8fa92d82badfbf65816fb33" kindref="member">SdfMakePathExpressionEval</ref>(<ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lib);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fwd<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Sdf_PathExpressionEvalBase;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>base<sp/>class<sp/>for<sp/>SdfPathExpressionEval.<sp/><sp/>This<sp/>factors<sp/>out<sp/>as<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>template-parameter<sp/>independent<sp/>code<sp/>as<sp/>possible<sp/>to<sp/>reduce<sp/>bloat<sp/>&amp;<sp/>compile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>times.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Sdf_PathExpressionEvalBase</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>Sdf_MakePathExpressionEvalImpl(</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sdf_PathExpressionEvalBase<sp/>&amp;eval,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_function_ref" kindref="compound">TfFunctionRef</ref>&lt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(SdfPathExpression::PathPattern<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)&gt;<sp/>translatePattern);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ops.empty();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!IsEmpty();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_PatternImplBase;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_PatternIncrSearchState<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_PatternImplBase;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Pop(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDepth)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!_segmentMatchDepths.empty()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_segmentMatchDepths.back()<sp/>&gt;=<sp/>newDepth)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_segmentMatchDepths.pop_back();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newDepth<sp/>&lt;=<sp/>_constantDepth)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_constantDepth<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>_segmentMatchDepths;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_constantDepth<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>0<sp/>means<sp/>constant<sp/>at<sp/>the<sp/>_prefix<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_constantValue<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_PatternImplBase<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>not<sp/>a<sp/>constructor<sp/>because<sp/>the<sp/>subclass<sp/>wants<sp/>to<sp/>invoke<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>its<sp/>ctor,<sp/>TfFunctionRef<sp/>currently<sp/>requires<sp/>an<sp/>lvalue,<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hard<sp/>to<sp/>conjure<sp/>in<sp/>a<sp/>ctor<sp/>initializer<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Init(SdfPathExpression::PathPattern<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pattern,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_function_ref" kindref="compound">TfFunctionRef</ref>&lt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(<ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)&gt;<sp/>linkPredicate);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Match(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;path,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_function_ref" kindref="compound">TfFunctionRef</ref>&lt;<ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runNthPredicate)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Next(_PatternIncrSearchState<sp/>&amp;searchState,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;path,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_function_ref" kindref="compound">TfFunctionRef</ref>&lt;<ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)&gt;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runNthPredicate)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_ComponentType<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExplicitName,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>explicit<sp/>name<sp/>(not<sp/>a<sp/>glob<sp/>pattern).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Regex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>glob<sp/>pattern<sp/>(handled<sp/>via<sp/>regex).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_Component<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ComponentType<sp/>type;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>patternIndex;<sp/></highlight><highlight class="comment">//<sp/>into<sp/>either<sp/>_explicitNames<sp/>or<sp/>_regexes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>predicateIndex;<sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>_predicates<sp/>or<sp/>-1<sp/>if<sp/>no<sp/>predicate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_Segment<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>_Segment<sp/>is<sp/>a<sp/>half-open<sp/>interval<sp/>[begin,<sp/>end)<sp/>in<sp/>_components.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin<sp/>==<sp/>end;<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StartsAt(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin<sp/>==<sp/>idx;<sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EndsAt(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end<sp/>==<sp/>idx;<sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetSize()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end<sp/>-<sp/>begin;<sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>begin,<sp/>end;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>_prefix;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;_Component&gt;<sp/>_components;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;_Segment&gt;<sp/>_segments;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>_explicitNames;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;ArchRegex&gt;<sp/>_regexes;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_stretchBegin;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_stretchEnd;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isProperty;<sp/></highlight><highlight class="comment">//<sp/>true<sp/>if<sp/>this<sp/>pattern<sp/>matches<sp/>only<sp/>properties.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>passed<sp/>\p<sp/>invokePattern<sp/>function<sp/>must<sp/>do<sp/>two<sp/>things:<sp/>1,<sp/>if<sp/>\p<sp/>skip<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>false,<sp/>test<sp/>the<sp/>current<sp/>pattern<sp/>for<sp/>a<sp/>match<sp/>(otherwise<sp/>skip<sp/>it)<sp/>and<sp/>2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>to<sp/>be<sp/>ready<sp/>to<sp/>test<sp/>the<sp/>next<sp/>pattern<sp/>for<sp/>a<sp/>match<sp/>on<sp/>the<sp/>next<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>\p<sp/>invokePattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>_EvalExpr(<ref refid="class_tf_function_ref" kindref="compound">TfFunctionRef</ref>&lt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref><sp/>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*skip*/</highlight><highlight class="normal">)&gt;<sp/>invokePattern)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_Op<sp/>{<sp/>EvalPattern,<sp/>Not,<sp/>Open,<sp/>Close,<sp/>Or,<sp/>And<sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;_Op&gt;<sp/>_ops;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Sdf_PathExpressionEvalBase</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>object<sp/>implements<sp/>matching<sp/>against<sp/>a<sp/>single<sp/>path<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_PatternImpl<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>_PatternImplBase<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PatternImpl()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PatternImpl(SdfPathExpression::PathPattern<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pattern,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;predLib)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>linkPredicate<sp/>=</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;predLib](<ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;predExpr)<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_predicates.push_back(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SdfLinkPredicateExpression(predExpr,<sp/>predLib));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_predicates.size()-1;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Init(pattern,<sp/>linkPredicate);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>obj<sp/>for<sp/>a<sp/>match<sp/>against<sp/>this<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ObjectToPath,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PathToObject&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1a7257990e81abaef35027af55a727c9e4" kindref="member">Match</ref>(DomainType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectToPath<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;objToPath,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pathToObj)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>runNthPredicate<sp/>=</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;pathToObj](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;path)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_predicates[i](pathToObj(path));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Match(objToPath(obj),<sp/>runNthPredicate);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>next<sp/>incremental<sp/>search<sp/>step<sp/>against<sp/>this<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ObjectToPath,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PathToObject&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Next(DomainType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_PatternIncrSearchState<sp/>&amp;search,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectToPath<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;objToPath,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pathToObj)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>runNthPredicate<sp/>=</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;pathToObj](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;path)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_predicates[i](pathToObj(path));</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Next(search,<sp/>objToPath(obj),<sp/>runNthPredicate);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;SdfPredicateProgram&lt;DomainType&gt;&gt;<sp/>_predicates;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>SdfMakePathExpressionEval&lt;DomainType&gt;(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lib);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsEmpty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_patternImpls.empty();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ObjectToPath,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PathToObject&gt;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="245" refid="class_sdf_path_expression_eval_1a7257990e81abaef35027af55a727c9e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1a7257990e81abaef35027af55a727c9e4" kindref="member">Match</ref>(DomainType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectToPath<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;objToPath,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pathToObj)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_sdf_predicate_function_result_1a2f9104a0ccdfa0eea9b93f7d9f03192c" kindref="member">SdfPredicateFunctionResult::MakeConstant</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>patternImplIter<sp/>=<sp/>_patternImpls.cbegin();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>evalPattern<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>skip<sp/>?<sp/>(++patternImplIter,<sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref>())<sp/>:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*patternImplIter++).Match(obj,<sp/>objToPath,<sp/>pathToObj);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_EvalExpr(evalPattern);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ObjectToPath,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PathToObject&gt;</highlight></codeline>
<codeline lineno="267" refid="class_sdf_path_expression_eval_1_1_incremental_searcher" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher" kindref="compound">IncrementalSearcher</ref><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher" kindref="compound">IncrementalSearcher</ref>()<sp/>:<sp/>_eval(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">),<sp/>_lastPathDepth(0)<sp/>{}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher" kindref="compound">IncrementalSearcher</ref>(<ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*eval,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectToPath<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;o2p,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;p2o)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_eval(eval)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_incrSearchStates(_eval-&gt;_patternImpls.size())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_objToPath(o2p)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_pathToObj(p2o)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_lastPathDepth(0)<sp/>{}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher" kindref="compound">IncrementalSearcher</ref>(<ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*eval,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectToPath<sp/>&amp;&amp;o2p,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/>&amp;&amp;p2o)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_eval(eval)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_incrSearchStates(_eval-&gt;_patternImpls.size())</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_objToPath(std::move(o2p))</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_pathToObj(std::move(p2o))</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_lastPathDepth(0)<sp/>{}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="300" refid="class_sdf_path_expression_eval_1_1_incremental_searcher_1a8315c2b22a456b5842e595ff22a358e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher_1a8315c2b22a456b5842e595ff22a358e9" kindref="member">Next</ref>(DomainType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>patternImplIter<sp/>=<sp/>_eval-&gt;_patternImpls.begin();</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>stateIter<sp/>=<sp/>_incrSearchStates.begin();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newDepth<sp/>=<sp/>_objToPath(obj).GetPathElementCount();</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popLevel<sp/>=<sp/>(newDepth<sp/>&lt;=<sp/>_lastPathDepth)<sp/>?<sp/>newDepth<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>patternStateNext<sp/>=<sp/>[&amp;](</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skip)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(popLevel)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stateIter-&gt;Pop(popLevel);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>skip<sp/>?<sp/>(++patternImplIter,<sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref>())</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(*patternImplIter++).Next(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj,<sp/>*stateIter++,<sp/>_objToPath,<sp/>_pathToObj);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_lastPathDepth<sp/>=<sp/>newDepth;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_eval-&gt;_EvalExpr(patternStateNext);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="class_sdf_path_expression_eval_1_1_incremental_searcher_1a372de693ad40b3f42839c8ec6ac845f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher_1a372de693ad40b3f42839c8ec6ac845f4" kindref="member">Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_sdf_path_expression_eval_1_1_incremental_searcher" kindref="compound">IncrementalSearcher</ref><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_eval,<sp/>std::move(_objToPath),<sp/>std::move(_pathToObj)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*_eval;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;_PatternIncrSearchState&gt;<sp/>_incrSearchStates;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ObjectToPath<sp/>_objToPath;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/>_pathToObj;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_lastPathDepth;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ObjectToPath,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>PathToObject&gt;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>IncrementalSearcher&lt;std::decay_t&lt;ObjectToPath&gt;,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::decay_t&lt;PathToObject&gt;&gt;</highlight></codeline>
<codeline lineno="340" refid="class_sdf_path_expression_eval_1a1d2d318bcf6f55653f62eb7f98f11015" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path_expression_eval_1a1d2d318bcf6f55653f62eb7f98f11015" kindref="member">MakeIncrementalSearcher</ref>(ObjectToPath<sp/>&amp;&amp;objToPath,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PathToObject<sp/>&amp;&amp;pathToObj)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IncrementalSearcher&lt;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::decay_t&lt;ObjectToPath&gt;,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::decay_t&lt;PathToObject&gt;&gt;(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::forward&lt;ObjectToPath&gt;(objToPath),</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;PathToObject&gt;(pathToObj));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;_PatternImpl&gt;<sp/>_patternImpls;</highlight></codeline>
<codeline lineno="351"><highlight class="normal">};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval&lt;DomainType&gt;</ref></highlight></codeline>
<codeline lineno="366" refid="class_sdf_path_expression_eval_1a62495aa2f8fa92d82badfbf65816fb33" refkind="member"><highlight class="normal">SdfMakePathExpressionEval(<ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lib)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Expr<sp/>=<sp/><ref refid="class_sdf_path_expression" kindref="compound">SdfPathExpression</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Eval<sp/>=<sp/><ref refid="class_sdf_path_expression_eval" kindref="compound">SdfPathExpressionEval&lt;DomainType&gt;</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>Eval<sp/>eval;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>translatePattern<sp/>=<sp/>[&amp;](Expr::PathPattern<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;pattern)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>_PatternImpl<sp/>object<sp/>that<sp/>tests<sp/>a<sp/>DomainType<sp/>object<sp/>against</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pattern.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval._patternImpls.emplace_back(pattern,<sp/>lib);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval._ops.push_back(Eval::EvalPattern);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Sdf_MakePathExpressionEvalImpl(eval,<sp/>expr,<sp/>translatePattern))<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eval;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_USD_SDF_PATH_EXPRESSION_EVAL_H</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/sdf/pathExpressionEval.h"/>
  </compounddef>
</doxygen>
