<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_annotated_bool_result_8h" kind="file" language="C++">
    <compoundname>pyAnnotatedBoolResult.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="py_lock_8h" local="yes">pxr/base/tf/pyLock.h</includes>
    <includes refid="base_2tf_2py_utils_8h" local="yes">pxr/base/tf/pyUtils.h</includes>
    <includes local="no">boost/python/class.hpp</includes>
    <includes local="no">boost/python/operators.hpp</includes>
    <includes local="no">boost/python/return_by_value.hpp</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="68590">
        <label>locale</label>
      </node>
      <node id="68624">
        <label>atomic</label>
      </node>
      <node id="68638">
        <label>stdarg.h</label>
      </node>
      <node id="68606">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="68607" relation="include">
        </childnode>
        <childnode refid="68608" relation="include">
        </childnode>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68589" relation="include">
        </childnode>
        <childnode refid="68609" relation="include">
        </childnode>
      </node>
      <node id="68644">
        <label>functional</label>
      </node>
      <node id="68593">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="68589" relation="include">
        </childnode>
      </node>
      <node id="68608">
        <label>cstdint</label>
      </node>
      <node id="68595">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68596" relation="include">
        </childnode>
        <childnode refid="68603" relation="include">
        </childnode>
        <childnode refid="68621" relation="include">
        </childnode>
        <childnode refid="68622" relation="include">
        </childnode>
        <childnode refid="68625" relation="include">
        </childnode>
        <childnode refid="68627" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68599" relation="include">
        </childnode>
        <childnode refid="68626" relation="include">
        </childnode>
        <childnode refid="68619" relation="include">
        </childnode>
        <childnode refid="68628" relation="include">
        </childnode>
      </node>
      <node id="68636">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68597" relation="include">
        </childnode>
        <childnode refid="68589" relation="include">
        </childnode>
        <childnode refid="68590" relation="include">
        </childnode>
        <childnode refid="68637" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
      </node>
      <node id="68588">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="68589" relation="include">
        </childnode>
      </node>
      <node id="68610">
        <label>cmath</label>
      </node>
      <node id="68604">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68598" relation="include">
        </childnode>
        <childnode refid="68605" relation="include">
        </childnode>
        <childnode refid="68606" relation="include">
        </childnode>
        <childnode refid="68611" relation="include">
        </childnode>
        <childnode refid="68612" relation="include">
        </childnode>
      </node>
      <node id="68642">
        <label>boost/python/handle.hpp</label>
      </node>
      <node id="68622">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68623" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
      </node>
      <node id="68614">
        <label>string</label>
      </node>
      <node id="68597">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68593" relation="include">
        </childnode>
      </node>
      <node id="68643">
        <label>boost/python/object.hpp</label>
      </node>
      <node id="68615">
        <label>map</label>
      </node>
      <node id="68607">
        <label>cinttypes</label>
      </node>
      <node id="68585">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="68639">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68635" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
        <childnode refid="68626" relation="include">
        </childnode>
        <childnode refid="68618" relation="include">
        </childnode>
      </node>
      <node id="68602">
        <label>stddef.h</label>
      </node>
      <node id="68598">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68589" relation="include">
        </childnode>
      </node>
      <node id="68640">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="68589" relation="include">
        </childnode>
      </node>
      <node id="68641">
        <label>pxr/base/tf/pyInterpreter.h</label>
        <link refid="py_interpreter_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68642" relation="include">
        </childnode>
        <childnode refid="68643" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
      </node>
      <node id="68623">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68606" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68624" relation="include">
        </childnode>
      </node>
      <node id="68625">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68626" relation="include">
        </childnode>
      </node>
      <node id="68631">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68599" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
      </node>
      <node id="68587">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="68588" relation="include">
        </childnode>
        <childnode refid="68590" relation="include">
        </childnode>
        <childnode refid="68591" relation="include">
        </childnode>
      </node>
      <node id="68637">
        <label>any</label>
      </node>
      <node id="68645">
        <label>boost/python/dict.hpp</label>
      </node>
      <node id="68609">
        <label>sys/types.h</label>
      </node>
      <node id="68632">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68633" relation="include">
        </childnode>
        <childnode refid="68603" relation="include">
        </childnode>
        <childnode refid="68595" relation="include">
        </childnode>
        <childnode refid="68630" relation="include">
        </childnode>
        <childnode refid="68639" relation="include">
        </childnode>
        <childnode refid="68619" relation="include">
        </childnode>
      </node>
      <node id="68626">
        <label>typeinfo</label>
      </node>
      <node id="68584">
        <label>pxr/base/tf/pyAnnotatedBoolResult.h</label>
        <link refid="py_annotated_bool_result_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68586" relation="include">
        </childnode>
        <childnode refid="68594" relation="include">
        </childnode>
        <childnode refid="68648" relation="include">
        </childnode>
        <childnode refid="68649" relation="include">
        </childnode>
        <childnode refid="68650" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
      </node>
      <node id="68629">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68621" relation="include">
        </childnode>
        <childnode refid="68595" relation="include">
        </childnode>
        <childnode refid="68604" relation="include">
        </childnode>
        <childnode refid="68630" relation="include">
        </childnode>
        <childnode refid="68632" relation="include">
        </childnode>
        <childnode refid="68628" relation="include">
        </childnode>
        <childnode refid="68619" relation="include">
        </childnode>
      </node>
      <node id="68605">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68589" relation="include">
        </childnode>
        <childnode refid="68606" relation="include">
        </childnode>
        <childnode refid="68610" relation="include">
        </childnode>
      </node>
      <node id="68620">
        <label>vector</label>
      </node>
      <node id="68592">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="68593" relation="include">
        </childnode>
      </node>
      <node id="68586">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68587" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
      </node>
      <node id="68646">
        <label>boost/python/extract.hpp</label>
      </node>
      <node id="68612">
        <label>utility</label>
      </node>
      <node id="68634">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68635" relation="include">
        </childnode>
        <childnode refid="68601" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
      </node>
      <node id="68621">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
      </node>
      <node id="68589">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="68599">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="68589" relation="include">
        </childnode>
      </node>
      <node id="68603">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68604" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68613" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
        <childnode refid="68615" relation="include">
        </childnode>
        <childnode refid="68616" relation="include">
        </childnode>
        <childnode refid="68617" relation="include">
        </childnode>
        <childnode refid="68618" relation="include">
        </childnode>
        <childnode refid="68619" relation="include">
        </childnode>
        <childnode refid="68612" relation="include">
        </childnode>
        <childnode refid="68620" relation="include">
        </childnode>
      </node>
      <node id="68611">
        <label>math.h</label>
      </node>
      <node id="68594">
        <label>pxr/base/tf/pyUtils.h</label>
        <link refid="base_2tf_2py_utils_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68595" relation="include">
        </childnode>
        <childnode refid="68629" relation="include">
        </childnode>
        <childnode refid="68596" relation="include">
        </childnode>
        <childnode refid="68640" relation="include">
        </childnode>
        <childnode refid="68587" relation="include">
        </childnode>
        <childnode refid="68641" relation="include">
        </childnode>
        <childnode refid="68586" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68644" relation="include">
        </childnode>
        <childnode refid="68626" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
        <childnode refid="68620" relation="include">
        </childnode>
        <childnode refid="68645" relation="include">
        </childnode>
        <childnode refid="68646" relation="include">
        </childnode>
        <childnode refid="68642" relation="include">
        </childnode>
        <childnode refid="68643" relation="include">
        </childnode>
        <childnode refid="68647" relation="include">
        </childnode>
      </node>
      <node id="68600">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68601" relation="include">
        </childnode>
        <childnode refid="68602" relation="include">
        </childnode>
      </node>
      <node id="68591">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="68628">
        <label>cstddef</label>
      </node>
      <node id="68627">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68616" relation="include">
        </childnode>
      </node>
      <node id="68596">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68597" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68598" relation="include">
        </childnode>
        <childnode refid="68599" relation="include">
        </childnode>
        <childnode refid="68600" relation="include">
        </childnode>
        <childnode refid="68602" relation="include">
        </childnode>
      </node>
      <node id="68650">
        <label>boost/python/return_by_value.hpp</label>
      </node>
      <node id="68619">
        <label>type_traits</label>
      </node>
      <node id="68617">
        <label>set</label>
      </node>
      <node id="68647">
        <label>boost/python/type_id.hpp</label>
      </node>
      <node id="68635">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="68593" relation="include">
        </childnode>
      </node>
      <node id="68601">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="68589" relation="include">
        </childnode>
      </node>
      <node id="68649">
        <label>boost/python/operators.hpp</label>
      </node>
      <node id="68613">
        <label>cstring</label>
      </node>
      <node id="68630">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68631" relation="include">
        </childnode>
        <childnode refid="68595" relation="include">
        </childnode>
        <childnode refid="68624" relation="include">
        </childnode>
      </node>
      <node id="68616">
        <label>memory</label>
      </node>
      <node id="68633">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="68585" relation="include">
        </childnode>
        <childnode refid="68634" relation="include">
        </childnode>
        <childnode refid="68596" relation="include">
        </childnode>
        <childnode refid="68592" relation="include">
        </childnode>
        <childnode refid="68599" relation="include">
        </childnode>
        <childnode refid="68636" relation="include">
        </childnode>
        <childnode refid="68602" relation="include">
        </childnode>
        <childnode refid="68638" relation="include">
        </childnode>
        <childnode refid="68614" relation="include">
        </childnode>
      </node>
      <node id="68618">
        <label>typeindex</label>
      </node>
      <node id="68648">
        <label>boost/python/class.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_tf_py_annotated_bool_result" prot="public">TfPyAnnotatedBoolResult</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="py_annotated_bool_result_8h_1a3e63bb0a1fa60f00de3c514a2ba40ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Annotation</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(bool lhs, TfPyAnnotatedBoolResult&lt; Annotation &gt; &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>bool</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TfPyAnnotatedBoolResult&lt; Annotation &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the result of <computeroutput>lhs</computeroutput> is the same as <computeroutput>rhs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyAnnotatedBoolResult.h" line="145" column="1" bodyfile="pxr/base/tf/pyAnnotatedBoolResult.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="py_annotated_bool_result_8h_1af07e9aec7645d6d0424cde8071bcc63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Annotation</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(bool lhs, TfPyAnnotatedBoolResult&lt; Annotation &gt; &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>bool</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>TfPyAnnotatedBoolResult&lt; Annotation &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>false</computeroutput> if the result of <computeroutput>lhs</computeroutput> is the same as <computeroutput>rhs</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyAnnotatedBoolResult.h" line="152" column="1" bodyfile="pxr/base/tf/pyAnnotatedBoolResult.h" bodystart="152" bodyend="155"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_PY_ANNOTATED_BOOL_RESULT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_PY_ANNOTATED_BOOL_RESULT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyLock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2py_utils_8h" kindref="compound">pxr/base/tf/pyUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/class.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/operators.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/return_by_value.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Annotation&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TfPyAnnotatedBoolResult</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>TfPyAnnotatedBoolResult()<sp/>{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>TfPyAnnotatedBoolResult(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val,<sp/>Annotation<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;annotation)<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_val(val),<sp/>_annotation(annotation)<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>GetValue()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_val;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>Annotation<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;GetAnnotation()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_annotation;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetRepr()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetValue()<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;True&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;(False,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="base_2tf_2py_utils_8h_1adf73f4221c9b96206ee651ccb9901360" kindref="member">TfPyRepr</ref>(GetAnnotation())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dictionary_8h_1af7cc7d48287d0ccfc216ed68b60c0b78" kindref="member">operator==</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_val<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dictionary_8h_1af7cc7d48287d0ccfc216ed68b60c0b78" kindref="member">operator==</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TfPyAnnotatedBoolResult&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>==<sp/>lhs;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TfPyAnnotatedBoolResult&amp;<sp/>lhs,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TfPyAnnotatedBoolResult&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::class_&lt;Derived&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Wrap(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*annotationName)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfPyAnnotatedBoolResult&lt;Annotation&gt;<sp/>This;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>class_&lt;Derived&gt;(name,<sp/>init&lt;bool,<sp/>Annotation&gt;())</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__bool__&quot;</highlight><highlight class="normal">,<sp/>&amp;Derived::GetValue)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__repr__&quot;</highlight><highlight class="normal">,<sp/>&amp;Derived::GetRepr)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">()<sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">()<sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>a<sp/>helper<sp/>function.<sp/><sp/>We&apos;d<sp/>like<sp/>to<sp/>def_readonly<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_annotation<sp/>member<sp/>but<sp/>there<sp/>are<sp/>two<sp/>problems<sp/>with<sp/>that.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>we<sp/>can&apos;t<sp/>control<sp/>the<sp/>return_value_policy<sp/>and<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Annotation<sp/>type<sp/>has<sp/>a<sp/>custom<sp/>to-Python<sp/>converter<sp/>then<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>def_readonly<sp/>return_value_policy<sp/>of<sp/>return_internal_reference</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>won&apos;t<sp/>work<sp/>since<sp/>the<sp/>object<sp/>needs<sp/>conversion.<sp/><sp/>Second,<sp/>if<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>use<sp/>GetAnnotation()<sp/>with<sp/>add_property<sp/>then<sp/>we&apos;ll<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>failure<sp/>at<sp/>runtime<sp/>because<sp/>Python<sp/>has<sp/>a<sp/>Derived<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GetAnnotation<sp/>takes<sp/>a<sp/>TfPyAnnotatedBoolResult&lt;Annotation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>boost<sp/>python<sp/>doesn&apos;t<sp/>know<sp/>the<sp/>former<sp/>is-a<sp/>latter<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TfPyAnnotatedBoolResult&lt;Annotation&gt;<sp/>is<sp/>not<sp/>wrapped.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>provide<sp/>a<sp/>templated<sp/>static<sp/>method<sp/>that<sp/>takes<sp/>a<sp/>Derived</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>returns<sp/>Annotation<sp/>by<sp/>value.<sp/><sp/>We<sp/>can<sp/>add_property<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>with<sp/>no<sp/>problem.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add_property(annotationName,<sp/>&amp;This::_GetAnnotation&lt;Derived&gt;)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetItem&lt;Derived&gt;)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>AnnotationType<sp/>=<sp/>Annotation;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>function<sp/>for<sp/>wrapper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Annotation<sp/>_GetAnnotation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived&amp;<sp/>x)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.GetAnnotation();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>_GetItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Derived&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object(x._val);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object(x._annotation);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_IndexError,<sp/></highlight><highlight class="stringliteral">&quot;Index<sp/>must<sp/>be<sp/>0<sp/>or<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::throw_error_already_set();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_val;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>Annotation<sp/>_annotation;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Annotation&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dictionary_8h_1af7cc7d48287d0ccfc216ed68b60c0b78" kindref="member">operator==</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lhs,<sp/>TfPyAnnotatedBoolResult&lt;Annotation&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>==<sp/>lhs;</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Annotation&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lhs,<sp/>TfPyAnnotatedBoolResult&lt;Annotation&gt;&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>!=<sp/>lhs;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_PY_ANNOTATED_BOOL_RESULT_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pyAnnotatedBoolResult.h"/>
  </compounddef>
</doxygen>
