<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr___c_l_i_1_1_c_l_i_1_1_config" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>pxr_CLI::CLI::Config</compoundname>
    <derivedcompoundref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" prot="public" virt="non-virtual">ConfigBase</derivedcompoundref>
    <includes refid="_c_l_i11_8h" local="no">CLI11.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ab2ec0ff0df22066b4d745774730ae23c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structpxr___c_l_i_1_1_c_l_i_1_1_config_item" kindref="compound">ConfigItem</ref> &gt;</type>
        <definition>std::vector&lt;ConfigItem&gt; items</definition>
        <argsstring></argsstring>
        <name>items</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2678" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2678" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_1a674e4c2422004c18b774b2f86118dad1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string to_config</definition>
        <argsstring>(const App *, bool, bool, std::string) const =0</argsstring>
        <name>to_config</name>
        <reimplementedby refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a68e8309bd884ec5c3f5d6b3aef9f45d0">to_config</reimplementedby>
        <param>
          <type>const <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_app" kindref="compound">App</ref> *</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>std::string</type>
        </param>
        <briefdescription>
<para>Convert an app into a configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2682" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ac7e260f45c15a40b134f6661e5949111" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="structpxr___c_l_i_1_1_c_l_i_1_1_config_item" kindref="compound">ConfigItem</ref> &gt;</type>
        <definition>virtual std::vector&lt;ConfigItem&gt; from_config</definition>
        <argsstring>(std::istream &amp;) const =0</argsstring>
        <name>from_config</name>
        <reimplementedby refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1acf1889b875cdb9fad67171a49d9f2b7c">from_config</reimplementedby>
        <param>
          <type>std::istream &amp;</type>
        </param>
        <briefdescription>
<para>Convert a configuration into an app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_1a349cdd2c788d04b2622aa92684fc7f6b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>CLI11_NODISCARD std::string</type>
        <definition>virtual CLI11_NODISCARD std::string to_flag</definition>
        <argsstring>(const ConfigItem &amp;item) const</argsstring>
        <name>to_flag</name>
        <param>
          <type>const <ref refid="structpxr___c_l_i_1_1_c_l_i_1_1_config_item" kindref="compound">ConfigItem</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Get a flag value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2688" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2688" bodyend="2696"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_1acb65d998c2d9f242c2ac9f721a0ea404" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CLI11_NODISCARD std::vector&lt; <ref refid="structpxr___c_l_i_1_1_c_l_i_1_1_config_item" kindref="compound">ConfigItem</ref> &gt;</type>
        <definition>CLI11_NODISCARD std::vector&lt;ConfigItem&gt; from_file</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>from_file</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Parse a config file, throw an error (<ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_parse_error" kindref="compound">ParseError</ref>:ConfigParseError or <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_file_error" kindref="compound">FileError</ref>) on failure. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2699" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2699" bodyend="2705"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ad01a581f2bafd1a64c82c9cd177bf871" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~Config</definition>
        <argsstring>()=default</argsstring>
        <name>~Config</name>
        <briefdescription>
<para>Virtual destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2708" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides a converter for configuration files. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1026">
        <label>ConfigINI</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_i_n_i"/>
        <childnode refid="1025" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1025">
        <label>ConfigBase</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base"/>
        <childnode refid="1024" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1024">
        <label>Config</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config"/>
      </node>
    </inheritancegraph>
    <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2676" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2676" bodyend="2709"/>
    <listofallmembers>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ac7e260f45c15a40b134f6661e5949111" prot="public" virt="pure-virtual"><scope>pxr_CLI::CLI::Config</scope><name>from_config</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1acb65d998c2d9f242c2ac9f721a0ea404" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::Config</scope><name>from_file</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ab2ec0ff0df22066b4d745774730ae23c" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::Config</scope><name>items</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1a674e4c2422004c18b774b2f86118dad1" prot="public" virt="pure-virtual"><scope>pxr_CLI::CLI::Config</scope><name>to_config</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1a349cdd2c788d04b2622aa92684fc7f6b" prot="public" virt="virtual"><scope>pxr_CLI::CLI::Config</scope><name>to_flag</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ad01a581f2bafd1a64c82c9cd177bf871" prot="public" virt="virtual"><scope>pxr_CLI::CLI::Config</scope><name>~Config</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
