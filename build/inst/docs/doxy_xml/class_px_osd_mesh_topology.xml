<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_px_osd_mesh_topology" kind="class" language="C++" prot="public">
    <compoundname>PxOsdMeshTopology</compoundname>
    <includes refid="px_osd_2mesh_topology_8h" local="no">meshTopology.h</includes>
    <innerclass refid="struct_px_osd_mesh_topology_1_1___validated" prot="private">PxOsdMeshTopology::_Validated</innerclass>
      <sectiondef kind="user-defined">
      <header>Holes</header>
      <description><para>Returns the hole face indices.</para>
</description>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a00fa8d8710fdd5ddd7d5d500fbf61df4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetHoleIndices</definition>
        <argsstring>() const</argsstring>
        <name>GetHoleIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="147" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="147" bodyend="149"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Tags</header>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1ab53f6acc23b47eaafda40d80ecd2a102" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const  &amp;</type>
        <definition>PxOsdSubdivTags const&amp; GetSubdivTags</definition>
        <argsstring>() const</argsstring>
        <name>GetSubdivTags</name>
        <briefdescription>
<para>Returns subdivision tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="158" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="158" bodyend="160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_px_osd_mesh_topology_1affd566ae50348dcbfb42805843a2d59e" prot="public" static="no">
        <type>uint64_t</type>
        <definition>typedef uint64_t ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="73" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1a8755c8b65e6161dd75caa2c52a1faa40" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _scheme</definition>
        <argsstring></argsstring>
        <name>_scheme</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="226" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1aee611708fc96ec5c571257703da184d7" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _orientation</definition>
        <argsstring></argsstring>
        <name>_orientation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="227" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1ac08ad7cf5df7670c5a294daf7b0540d3" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _faceVertexCounts</definition>
        <argsstring></argsstring>
        <name>_faceVertexCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="229" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1aff5ec152f5c761df3fe366b7f4ce4c01" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _faceVertexIndices</definition>
        <argsstring></argsstring>
        <name>_faceVertexIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="230" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1a4895a2c458beae279368e16e4b25fb41" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _holeIndices</definition>
        <argsstring></argsstring>
        <name>_holeIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="231" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1a585039332a8d140359da9f2e2acaaf66" prot="private" static="no" mutable="no">
        <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref></type>
        <definition>PxOsdSubdivTags _subdivTags</definition>
        <argsstring></argsstring>
        <name>_subdivTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="233" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_px_osd_mesh_topology_1a65db191937c03a8311b0bc7d37c3a9a7" prot="private" static="no" mutable="yes">
        <type>_Validated</type>
        <definition>_Validated _validated</definition>
        <argsstring></argsstring>
        <name>_validated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="258" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_px_osd_mesh_topology_1ac1f4098467ba690206ab91a726badaf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API</type>
        <definition>PXOSD_API PxOsdMeshTopology</definition>
        <argsstring>()</argsstring>
        <name>PxOsdMeshTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a690d522b2a7d20a98023804903d006f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;</type>
        <definition>PxOsdMeshTopology&amp; operator=</definition>
        <argsstring>(const PxOsdMeshTopology &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a2b3d736266d4a5a30e67970b15851020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PxOsdMeshTopology</definition>
        <argsstring>(const PxOsdMeshTopology &amp;)=default</argsstring>
        <name>PxOsdMeshTopology</name>
        <param>
          <type>const <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a5ce1b15cb6c61c4e9ccede9c727f6b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PxOsdMeshTopology</definition>
        <argsstring>(PxOsdMeshTopology &amp;&amp;)=default</argsstring>
        <name>PxOsdMeshTopology</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a05db3fa988226a54b7017ef1640b9928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;</type>
        <definition>PxOsdMeshTopology&amp; operator=</definition>
        <argsstring>(PxOsdMeshTopology &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a80289ad135d327d589fb64489b164132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~PxOsdMeshTopology</definition>
        <argsstring>()=default</argsstring>
        <name>~PxOsdMeshTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a5b74a3abfe07158ff8b9ac44b57e3909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API</type>
        <definition>PXOSD_API PxOsdMeshTopology</definition>
        <argsstring>(TfToken const &amp;scheme, TfToken const &amp;orientation, VtIntArray const &amp;faceVertexCounts, VtIntArray const &amp;faceVertexIndices)</argsstring>
        <name>PxOsdMeshTopology</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexCounts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <briefdescription>
<para>Construct a topology without holes or subdiv tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a20bab842a4bb1cf6a14eadef2109335a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API</type>
        <definition>PXOSD_API PxOsdMeshTopology</definition>
        <argsstring>(TfToken const &amp;scheme, TfToken const &amp;orientation, VtIntArray const &amp;faceVertexCounts, VtIntArray const &amp;faceVertexIndices, VtIntArray const &amp;holeIndices)</argsstring>
        <name>PxOsdMeshTopology</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexCounts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>holeIndices</declname>
        </param>
        <briefdescription>
<para>Construct a topology with holes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a79fae71c515bb9718f867037137de3ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API</type>
        <definition>PXOSD_API PxOsdMeshTopology</definition>
        <argsstring>(TfToken const &amp;scheme, TfToken const &amp;orientation, VtIntArray const &amp;faceVertexCounts, VtIntArray const &amp;faceVertexIndices, VtIntArray const &amp;holeIndices, PxOsdSubdivTags const &amp;subdivTags)</argsstring>
        <name>PxOsdMeshTopology</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexCounts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>holeIndices</declname>
        </param>
        <param>
          <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const &amp;</type>
          <declname>subdivTags</declname>
        </param>
        <briefdescription>
<para>Construct a topology with holes and subdiv tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a004be961e2f27edc9e9be1402c70c6dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API</type>
        <definition>PXOSD_API PxOsdMeshTopology</definition>
        <argsstring>(TfToken const &amp;scheme, TfToken const &amp;orientation, VtIntArray const &amp;faceVertexCounts, VtIntArray const &amp;faceVertexIndices, PxOsdSubdivTags const &amp;subdivTags)</argsstring>
        <name>PxOsdMeshTopology</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexCounts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const &amp;</type>
          <declname>subdivTags</declname>
        </param>
        <briefdescription>
<para>Construct a topology with subdiv tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1ad474311b2ffe576f67c10dd26e323d6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const</type>
        <definition>TfToken const GetScheme</definition>
        <argsstring>() const</argsstring>
        <name>GetScheme</name>
        <briefdescription>
<para>Returns the subdivision scheme. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="123" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a088848ad7316c9375087d1acf65a8b0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetFaceVertexCounts</definition>
        <argsstring>() const</argsstring>
        <name>GetFaceVertexCounts</name>
        <briefdescription>
<para>Returns face vertex counts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="128" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a249c22a2cdd63ef7ac43d34f0c4da57d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetFaceVertexIndices</definition>
        <argsstring>() const</argsstring>
        <name>GetFaceVertexIndices</name>
        <briefdescription>
<para>Returns face vertex indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="133" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a030223af99c7ace7492954787327c4ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>TfToken const&amp; GetOrientation</definition>
        <argsstring>() const</argsstring>
        <name>GetOrientation</name>
        <briefdescription>
<para>Returns orientation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="138" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a42b2d04362d1b87c648b7f563db0e7bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PXOSD_API <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref></type>
        <definition>PXOSD_API PxOsdMeshTopology WithScheme</definition>
        <argsstring>(TfToken const &amp;scheme) const</argsstring>
        <name>WithScheme</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
        </param>
        <briefdescription>
<para>Return a copy of the topology, changing only the scheme. </para>
        </briefdescription>
        <detaileddescription>
<para>Valid values include: catmullClark, loop, bilinear.</para>
<para>Note that the token &quot;catmark&quot; is also supported for backward compatibility, but has been deprecated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="169" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a89e77fb77e34d505f9c416424d813060" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PXOSD_API <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref></type>
        <definition>PXOSD_API PxOsdMeshTopology WithSubdivTags</definition>
        <argsstring>(PxOsdSubdivTags const &amp;tags) const</argsstring>
        <name>WithSubdivTags</name>
        <param>
          <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const &amp;</type>
          <declname>tags</declname>
        </param>
        <briefdescription>
<para>Return a copy of the topology, changing only the subdiv tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="176" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a2081014ed0264af3e5bff366feeab694" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PXOSD_API <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref></type>
        <definition>PXOSD_API PxOsdMeshTopology WithHoleIndices</definition>
        <argsstring>(VtIntArray const &amp;holeIndices) const</argsstring>
        <name>WithHoleIndices</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>holeIndices</declname>
        </param>
        <briefdescription>
<para>Return a copy of the topology, changing only the hole indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="183" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="183" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1abcd295649c84d2c7ec26dae48e9cbc5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API ID</type>
        <definition>PXOSD_API ID ComputeHash</definition>
        <argsstring>() const</argsstring>
        <name>ComputeHash</name>
        <briefdescription>
<para>Returns the hash value of this topology to be used for instancing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a750081b50046c09fdc721ff948cd97fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API bool</type>
        <definition>PXOSD_API bool operator==</definition>
        <argsstring>(PxOsdMeshTopology const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality check between two mesh topologies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_1a3906f1f2d2455af2456df3233771a480" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PXOSD_API <ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref></type>
        <definition>PXOSD_API PxOsdMeshTopologyValidation Validate</definition>
        <argsstring>() const</argsstring>
        <name>Validate</name>
        <briefdescription>
<para>Returns a validation object which is empty if the topology is valid. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Validation<sp/>with<sp/>minimal<sp/>reporting</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!topology.Validate())<sp/><ref refid="group__group__tf___diagnostic_1ga8265ac46fd87777ee25efaf4a3290bbe" kindref="member">TF_CODING_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>topology.&quot;</highlight><highlight class="normal">);</highlight></codeline>
</programlisting></para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref><sp/>validation<sp/>=<sp/>topology.Validate();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!validation){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>elem:<sp/>validation){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1gaba2e638edaae9e9c6e5180e020f12ccf" kindref="member">TF_WARN</ref>(elem.message);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><simplesect kind="note"><para>Internally caches the result of the validation if the topology is valid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopology.h" line="219" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Topology data for meshes. </para>
    </briefdescription>
    <detaileddescription>
<para>Once constructed, this class is immutable (except when assigned or moved).</para>
<para>To make changing certain properties easier, several methods are provided. WithScheme, WithHoleIndices, and WithSubdivTags will return copies of the object with certain specific properites changed.</para>
<para><programlisting filename=".cpp"><codeline><highlight class="normal"><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref><sp/>otherTopology<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>originalTopology.<ref refid="class_px_osd_mesh_topology_1a42b2d04362d1b87c648b7f563db0e7bd" kindref="member">WithScheme</ref>(PxOsdOpenSubdivTokens-&gt;catmullClark);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__group__tf___diagnostic_1gaf621af3398d45d5d1108db257abc0ebd" kindref="member">TF_VERIFY</ref>(otherTopology.<ref refid="class_px_osd_mesh_topology_1ad474311b2ffe576f67c10dd26e323d6f" kindref="member">GetScheme</ref>()<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PxOsdOpenSubdivTokens-&gt;catmullClark);</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__group__tf___diagnostic_1gaf621af3398d45d5d1108db257abc0ebd" kindref="member">TF_VERIFY</ref>(otherTopology.<ref refid="class_px_osd_mesh_topology_1a030223af99c7ace7492954787327c4ab" kindref="member">GetOrientation</ref>()<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>originalTopology.GetOrientation());</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__group__tf___diagnostic_1gaf621af3398d45d5d1108db257abc0ebd" kindref="member">TF_VERIFY</ref>(otherTopology.<ref refid="class_px_osd_mesh_topology_1ab53f6acc23b47eaafda40d80ecd2a102" kindref="member">GetSubdivTags</ref>()<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>originalTopology.GetSubdivTags());</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__group__tf___diagnostic_1gaf621af3398d45d5d1108db257abc0ebd" kindref="member">TF_VERIFY</ref>(otherTopology.<ref refid="class_px_osd_mesh_topology_1a088848ad7316c9375087d1acf65a8b0d" kindref="member">GetFaceVertexCounts</ref>()<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>originalTopology.GetFaceVertexCounts());</highlight></codeline>
<codeline><highlight class="normal"><ref refid="group__group__tf___diagnostic_1gaf621af3398d45d5d1108db257abc0ebd" kindref="member">TF_VERIFY</ref>(otherTopology.<ref refid="class_px_osd_mesh_topology_1a249c22a2cdd63ef7ac43d34f0c4da57d" kindref="member">GetFaceVertexIndices</ref>()<sp/>==</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>originalTopology.GetFaceVertexIndices());</highlight></codeline>
</programlisting></para>
<para>The cost of copying should be mitigated by the copy semantics of <ref refid="class_vt_array" kindref="compound">VtArray</ref> and <ref refid="class_tf_token" kindref="compound">TfToken</ref>. </para>
    </detaileddescription>
    <location file="pxr/imaging/pxOsd/meshTopology.h" line="69" column="1" bodyfile="pxr/imaging/pxOsd/meshTopology.h" bodystart="69" bodyend="259"/>
    <listofallmembers>
      <member refid="class_px_osd_mesh_topology_1ac08ad7cf5df7670c5a294daf7b0540d3" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_faceVertexCounts</name></member>
      <member refid="class_px_osd_mesh_topology_1aff5ec152f5c761df3fe366b7f4ce4c01" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_faceVertexIndices</name></member>
      <member refid="class_px_osd_mesh_topology_1a4895a2c458beae279368e16e4b25fb41" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_holeIndices</name></member>
      <member refid="class_px_osd_mesh_topology_1aee611708fc96ec5c571257703da184d7" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_orientation</name></member>
      <member refid="class_px_osd_mesh_topology_1a8755c8b65e6161dd75caa2c52a1faa40" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_scheme</name></member>
      <member refid="class_px_osd_mesh_topology_1a585039332a8d140359da9f2e2acaaf66" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_subdivTags</name></member>
      <member refid="class_px_osd_mesh_topology_1a65db191937c03a8311b0bc7d37c3a9a7" prot="private" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>_validated</name></member>
      <member refid="class_px_osd_mesh_topology_1abcd295649c84d2c7ec26dae48e9cbc5f" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>ComputeHash</name></member>
      <member refid="class_px_osd_mesh_topology_1a088848ad7316c9375087d1acf65a8b0d" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>GetFaceVertexCounts</name></member>
      <member refid="class_px_osd_mesh_topology_1a249c22a2cdd63ef7ac43d34f0c4da57d" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>GetFaceVertexIndices</name></member>
      <member refid="class_px_osd_mesh_topology_1a00fa8d8710fdd5ddd7d5d500fbf61df4" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>GetHoleIndices</name></member>
      <member refid="class_px_osd_mesh_topology_1a030223af99c7ace7492954787327c4ab" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>GetOrientation</name></member>
      <member refid="class_px_osd_mesh_topology_1ad474311b2ffe576f67c10dd26e323d6f" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>GetScheme</name></member>
      <member refid="class_px_osd_mesh_topology_1ab53f6acc23b47eaafda40d80ecd2a102" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>GetSubdivTags</name></member>
      <member refid="class_px_osd_mesh_topology_1affd566ae50348dcbfb42805843a2d59e" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>ID</name></member>
      <member refid="class_px_osd_mesh_topology_1a690d522b2a7d20a98023804903d006f9" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>operator=</name></member>
      <member refid="class_px_osd_mesh_topology_1a05db3fa988226a54b7017ef1640b9928" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>operator=</name></member>
      <member refid="class_px_osd_mesh_topology_1a750081b50046c09fdc721ff948cd97fd" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>operator==</name></member>
      <member refid="class_px_osd_mesh_topology_1ac1f4098467ba690206ab91a726badaf5" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a2b3d736266d4a5a30e67970b15851020" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a5ce1b15cb6c61c4e9ccede9c727f6b75" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a5b74a3abfe07158ff8b9ac44b57e3909" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a20bab842a4bb1cf6a14eadef2109335a" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a79fae71c515bb9718f867037137de3ab" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a004be961e2f27edc9e9be1402c70c6dc" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_1a3906f1f2d2455af2456df3233771a480" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>Validate</name></member>
      <member refid="class_px_osd_mesh_topology_1a2081014ed0264af3e5bff366feeab694" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>WithHoleIndices</name></member>
      <member refid="class_px_osd_mesh_topology_1a42b2d04362d1b87c648b7f563db0e7bd" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>WithScheme</name></member>
      <member refid="class_px_osd_mesh_topology_1a89e77fb77e34d505f9c416424d813060" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>WithSubdivTags</name></member>
      <member refid="class_px_osd_mesh_topology_1a80289ad135d327d589fb64489b164132" prot="public" virt="non-virtual"><scope>PxOsdMeshTopology</scope><name>~PxOsdMeshTopology</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
