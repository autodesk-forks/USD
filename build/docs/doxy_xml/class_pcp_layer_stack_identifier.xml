<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_layer_stack_identifier" kind="class" language="C++" prot="public">
    <compoundname>PcpLayerStackIdentifier</compoundname>
    <includes refid="layer_stack_identifier_8h" local="no">layerStackIdentifier.h</includes>
    <innerclass refid="struct_pcp_layer_stack_identifier_1_1_hash" prot="public">PcpLayerStackIdentifier::Hash</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_pcp_layer_stack_identifier_1a535f87e5996079b820d7dcd00d4e865a" prot="public" static="no">
        <type><ref refid="class_pcp_layer_stack_identifier" kindref="compound">PcpLayerStackIdentifier</ref></type>
        <definition>typedef PcpLayerStackIdentifier This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="50" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pcp_layer_stack_identifier_1a8fd6ae410572b36e8ef9961b789c7eb9" prot="public" static="no" mutable="no">
        <type>const SdfLayerHandle</type>
        <definition>const SdfLayerHandle rootLayer</definition>
        <argsstring></argsstring>
        <name>rootLayer</name>
        <briefdescription>
<para>The root layer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="112" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_layer_stack_identifier_1a9f2bec7c4f6b6e265fb09f221d5090fc" prot="public" static="no" mutable="no">
        <type>const SdfLayerHandle</type>
        <definition>const SdfLayerHandle sessionLayer</definition>
        <argsstring></argsstring>
        <name>sessionLayer</name>
        <briefdescription>
<para>The session layer (optional). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="115" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_layer_stack_identifier_1a3a1ad034336754bcae506bdec0a72880" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref></type>
        <definition>const ArResolverContext pathResolverContext</definition>
        <argsstring></argsstring>
        <name>pathResolverContext</name>
        <briefdescription>
<para>The path resolver context used for resolving asset paths. (optional) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="118" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_layer_stack_identifier_1a4010d8deb18279176b69955378eaea12" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_pcp_expression_variables_source" kindref="compound">PcpExpressionVariablesSource</ref></type>
        <definition>const PcpExpressionVariablesSource expressionVariablesOverrideSource</definition>
        <argsstring></argsstring>
        <name>expressionVariablesOverrideSource</name>
        <briefdescription>
<para>The source for expression variables that compose over the expression variables in this layer stack. </para>
        </briefdescription>
        <detaileddescription>
<para>(optional) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="122" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pcp_layer_stack_identifier_1ad345cb6203d359655d53ebd0aead034f" prot="private" static="no" mutable="no">
        <type>const size_t</type>
        <definition>const size_t _hash</definition>
        <argsstring></argsstring>
        <name>_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="128" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a62fff477791d50e475ce1acd0019b150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpLayerStackIdentifier</definition>
        <argsstring>()</argsstring>
        <name>PcpLayerStackIdentifier</name>
        <briefdescription>
<para>Construct with all empty pointers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a1a0c2b98c358b9a3fbf916cbe0c379ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpLayerStackIdentifier</definition>
        <argsstring>(const SdfLayerHandle &amp;rootLayer, const SdfLayerHandle &amp;sessionLayer=TfNullPtr, const ArResolverContext &amp;pathResolverContext=ArResolverContext(), const PcpExpressionVariablesSource &amp;expressionVariablesOverrideSource=PcpExpressionVariablesSource())</argsstring>
        <name>PcpLayerStackIdentifier</name>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>rootLayer</declname>
        </param>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>sessionLayer</declname>
          <defval>TfNullPtr</defval>
        </param>
        <param>
          <type>const <ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref> &amp;</type>
          <declname>pathResolverContext</declname>
          <defval><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_pcp_expression_variables_source" kindref="compound">PcpExpressionVariablesSource</ref> &amp;</type>
          <declname>expressionVariablesOverrideSource</declname>
          <defval><ref refid="class_pcp_expression_variables_source" kindref="compound">PcpExpressionVariablesSource</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct with given pointers. </para>
        </briefdescription>
        <detaileddescription>
<para>If all arguments are <computeroutput>TfNullPtr</computeroutput> then the result is identical to the default constructed object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a1aa6cbd7ce28312c2444f407c49ff368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API <ref refid="class_pcp_layer_stack_identifier" kindref="compound">PcpLayerStackIdentifier</ref> &amp;</type>
        <definition>PCP_API PcpLayerStackIdentifier&amp; operator=</definition>
        <argsstring>(const PcpLayerStackIdentifier &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">PcpLayerStackIdentifier</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a9a15c8e8a91318524f2b56ecc1c680ec" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a74f0cc2da95279703d75f8c8e459db44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool operator==</definition>
        <argsstring>(const This &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">This</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1ad094448e637b18e998318c8ad1903342" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const This &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">This</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="78" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a8bb7c02f5da48493028231408e9358dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool operator&lt;</definition>
        <argsstring>(const This &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">This</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a11f453ce0f233d625fd193922c8aac4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const This &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">This</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="85" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1aa095856661ac9fddfaa4e132600461ba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const This &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">This</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="89" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a802ed11289eacf7a5c2e8042770f5b28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const This &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">This</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="93" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1aa99b522cc14f7d4a22d78368b476e12a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetHash</definition>
        <argsstring>() const</argsstring>
        <name>GetHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="105" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="105" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_layer_stack_identifier_1a581e575ea0094798a8cf330909440575" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t _ComputeHash</definition>
        <argsstring>() const</argsstring>
        <name>_ComputeHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/layerStackIdentifier.h" line="125" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Arguments used to identify a layer stack. </para>
    </briefdescription>
    <detaileddescription>
<para>Objects of this type are immutable. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4742">
        <label>ArResolverContext</label>
        <link refid="class_ar_resolver_context"/>
      </node>
      <node id="4740">
        <label>PcpLayerStackIdentifier</label>
        <link refid="class_pcp_layer_stack_identifier"/>
        <childnode refid="4741" relation="usage">
          <edgelabel>expressionVariablesOverrideSource</edgelabel>
        </childnode>
        <childnode refid="4742" relation="usage">
          <edgelabel>pathResolverContext</edgelabel>
        </childnode>
      </node>
      <node id="4741">
        <label>PcpExpressionVariablesSource</label>
        <link refid="class_pcp_expression_variables_source"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/pcp/layerStackIdentifier.h" line="48" column="1" bodyfile="pxr/usd/pcp/layerStackIdentifier.h" bodystart="48" bodyend="129"/>
    <listofallmembers>
      <member refid="class_pcp_layer_stack_identifier_1a581e575ea0094798a8cf330909440575" prot="private" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>_ComputeHash</name></member>
      <member refid="class_pcp_layer_stack_identifier_1ad345cb6203d359655d53ebd0aead034f" prot="private" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>_hash</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a4010d8deb18279176b69955378eaea12" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>expressionVariablesOverrideSource</name></member>
      <member refid="class_pcp_layer_stack_identifier_1aa99b522cc14f7d4a22d78368b476e12a" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>GetHash</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a9a15c8e8a91318524f2b56ecc1c680ec" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator bool</name></member>
      <member refid="class_pcp_layer_stack_identifier_1ad094448e637b18e998318c8ad1903342" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator!=</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a8bb7c02f5da48493028231408e9358dc" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator&lt;</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a11f453ce0f233d625fd193922c8aac4a" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator&lt;=</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a1aa6cbd7ce28312c2444f407c49ff368" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator=</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a74f0cc2da95279703d75f8c8e459db44" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator==</name></member>
      <member refid="class_pcp_layer_stack_identifier_1aa095856661ac9fddfaa4e132600461ba" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator&gt;</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a802ed11289eacf7a5c2e8042770f5b28" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>operator&gt;=</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a3a1ad034336754bcae506bdec0a72880" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>pathResolverContext</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a62fff477791d50e475ce1acd0019b150" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>PcpLayerStackIdentifier</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a1a0c2b98c358b9a3fbf916cbe0c379ad" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>PcpLayerStackIdentifier</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a8fd6ae410572b36e8ef9961b789c7eb9" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>rootLayer</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a9f2bec7c4f6b6e265fb09f221d5090fc" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>sessionLayer</name></member>
      <member refid="class_pcp_layer_stack_identifier_1a535f87e5996079b820d7dcd00d4e865a" prot="public" virt="non-virtual"><scope>PcpLayerStackIdentifier</scope><name>This</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
