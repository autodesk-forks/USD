<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_function_8h" kind="file" language="C++">
    <compoundname>pyFunction.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="py_call_8h" local="yes">pxr/base/tf/pyCall.h</includes>
    <includes refid="py_lock_8h" local="yes">pxr/base/tf/pyLock.h</includes>
    <includes refid="py_obj_wrapper_8h" local="yes">pxr/base/tf/pyObjWrapper.h</includes>
    <includes refid="base_2tf_2py_utils_8h" local="yes">pxr/base/tf/pyUtils.h</includes>
    <includes local="no">boost/python/converter/from_python.hpp</includes>
    <includes local="no">boost/python/converter/registered.hpp</includes>
    <includes local="no">boost/python/converter/rvalue_from_python_data.hpp</includes>
    <includes local="no">boost/python/extract.hpp</includes>
    <includes local="no">boost/python/handle.hpp</includes>
    <includes local="no">boost/python/object.hpp</includes>
    <includes local="no">boost/function.hpp</includes>
    <includes local="no">functional</includes>
    <includedby refid="wrap_array_8h" local="yes">pxr/base/vt/wrapArray.h</includedby>
    <incdepgraph>
      <node id="69092">
        <label>list</label>
      </node>
      <node id="69105">
        <label>locale</label>
      </node>
      <node id="69080">
        <label>atomic</label>
      </node>
      <node id="69107">
        <label>stdarg.h</label>
      </node>
      <node id="69051">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="69052" relation="include">
        </childnode>
        <childnode refid="69053" relation="include">
        </childnode>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69041" relation="include">
        </childnode>
        <childnode refid="69054" relation="include">
        </childnode>
      </node>
      <node id="69076">
        <label>functional</label>
      </node>
      <node id="69040">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="69041" relation="include">
        </childnode>
      </node>
      <node id="69120">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="69081">
        <label>iterator</label>
      </node>
      <node id="69132">
        <label>boost/python/converter/registered.hpp</label>
      </node>
      <node id="69053">
        <label>cstdint</label>
      </node>
      <node id="69042">
        <label>pxr/base/tf/errorMark.h</label>
        <link refid="error_mark_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69043" relation="include">
        </childnode>
        <childnode refid="69114" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
      </node>
      <node id="69096">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69085" relation="include">
        </childnode>
        <childnode refid="69064" relation="include">
        </childnode>
        <childnode refid="69095" relation="include">
        </childnode>
        <childnode refid="69088" relation="include">
        </childnode>
        <childnode refid="69072" relation="include">
        </childnode>
        <childnode refid="69097" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69062" relation="include">
        </childnode>
        <childnode refid="69069" relation="include">
        </childnode>
        <childnode refid="69098" relation="include">
        </childnode>
      </node>
      <node id="69104">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69041" relation="include">
        </childnode>
        <childnode refid="69105" relation="include">
        </childnode>
        <childnode refid="69106" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
      </node>
      <node id="69109">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="69041" relation="include">
        </childnode>
      </node>
      <node id="69055">
        <label>cmath</label>
      </node>
      <node id="69048">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69049" relation="include">
        </childnode>
        <childnode refid="69050" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69056" relation="include">
        </childnode>
        <childnode refid="69057" relation="include">
        </childnode>
      </node>
      <node id="69126">
        <label>boost/python/handle.hpp</label>
      </node>
      <node id="69082">
        <label>numeric</label>
      </node>
      <node id="69088">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69089" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
      </node>
      <node id="69091">
        <label>cstdarg</label>
      </node>
      <node id="69061">
        <label>string</label>
      </node>
      <node id="69075">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69040" relation="include">
        </childnode>
      </node>
      <node id="69127">
        <label>boost/python/object.hpp</label>
      </node>
      <node id="69111">
        <label>pxr/base/tf/warning.h</label>
        <link refid="warning_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69087" relation="include">
        </childnode>
      </node>
      <node id="69066">
        <label>map</label>
      </node>
      <node id="69052">
        <label>cinttypes</label>
      </node>
      <node id="69036">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="69035">
        <label>pxr/base/tf/pyFunction.h</label>
        <link refid="py_function_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69037" relation="include">
        </childnode>
        <childnode refid="69116" relation="include">
        </childnode>
        <childnode refid="69119" relation="include">
        </childnode>
        <childnode refid="69124" relation="include">
        </childnode>
        <childnode refid="69131" relation="include">
        </childnode>
        <childnode refid="69132" relation="include">
        </childnode>
        <childnode refid="69133" relation="include">
        </childnode>
        <childnode refid="69129" relation="include">
        </childnode>
        <childnode refid="69126" relation="include">
        </childnode>
        <childnode refid="69127" relation="include">
        </childnode>
        <childnode refid="69134" relation="include">
        </childnode>
        <childnode refid="69076" relation="include">
        </childnode>
      </node>
      <node id="69059">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69060" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69062" relation="include">
        </childnode>
        <childnode refid="69063" relation="include">
        </childnode>
      </node>
      <node id="69112">
        <label>tbb/enumerable_thread_specific.h</label>
      </node>
      <node id="69046">
        <label>stddef.h</label>
      </node>
      <node id="69049">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69041" relation="include">
        </childnode>
      </node>
      <node id="69043">
        <label>pxr/base/tf/diagnosticMgr.h</label>
        <link refid="diagnostic_mgr_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69044" relation="include">
        </childnode>
        <childnode refid="69047" relation="include">
        </childnode>
        <childnode refid="69085" relation="include">
        </childnode>
        <childnode refid="69086" relation="include">
        </childnode>
        <childnode refid="69108" relation="include">
        </childnode>
        <childnode refid="69110" relation="include">
        </childnode>
        <childnode refid="69090" relation="include">
        </childnode>
        <childnode refid="69111" relation="include">
        </childnode>
        <childnode refid="69094" relation="include">
        </childnode>
        <childnode refid="69058" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69045" relation="include">
        </childnode>
        <childnode refid="69112" relation="include">
        </childnode>
        <childnode refid="69113" relation="include">
        </childnode>
        <childnode refid="69080" relation="include">
        </childnode>
        <childnode refid="69091" relation="include">
        </childnode>
        <childnode refid="69092" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69070" relation="include">
        </childnode>
      </node>
      <node id="69123">
        <label>boost/python/call.hpp</label>
      </node>
      <node id="69071">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="69041" relation="include">
        </childnode>
      </node>
      <node id="69125">
        <label>pxr/base/tf/pyInterpreter.h</label>
        <link refid="py_interpreter_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69126" relation="include">
        </childnode>
        <childnode refid="69127" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
      </node>
      <node id="69089">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69080" relation="include">
        </childnode>
      </node>
      <node id="69072">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69062" relation="include">
        </childnode>
      </node>
      <node id="69100">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
      </node>
      <node id="69134">
        <label>boost/function.hpp</label>
      </node>
      <node id="69117">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="69109" relation="include">
        </childnode>
        <childnode refid="69105" relation="include">
        </childnode>
        <childnode refid="69118" relation="include">
        </childnode>
      </node>
      <node id="69113">
        <label>tbb/spin_rw_mutex.h</label>
      </node>
      <node id="69106">
        <label>any</label>
      </node>
      <node id="69086">
        <label>pxr/base/tf/error.h</label>
        <link refid="tf_2error_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69087" relation="include">
        </childnode>
      </node>
      <node id="69128">
        <label>boost/python/dict.hpp</label>
      </node>
      <node id="69054">
        <label>sys/types.h</label>
      </node>
      <node id="69077">
        <label>pxr/base/tf/stopwatch.h</label>
        <link refid="stopwatch_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69078" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69073" relation="include">
        </childnode>
      </node>
      <node id="69101">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69102" relation="include">
        </childnode>
        <childnode refid="69064" relation="include">
        </childnode>
        <childnode refid="69096" relation="include">
        </childnode>
        <childnode refid="69099" relation="include">
        </childnode>
        <childnode refid="69059" relation="include">
        </childnode>
        <childnode refid="69069" relation="include">
        </childnode>
      </node>
      <node id="69058">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69041" relation="include">
        </childnode>
        <childnode refid="69059" relation="include">
        </childnode>
        <childnode refid="69064" relation="include">
        </childnode>
        <childnode refid="69071" relation="include">
        </childnode>
        <childnode refid="69072" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69073" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69062" relation="include">
        </childnode>
        <childnode refid="69069" relation="include">
        </childnode>
        <childnode refid="69070" relation="include">
        </childnode>
      </node>
      <node id="69062">
        <label>typeinfo</label>
      </node>
      <node id="69084">
        <label>cstdio</label>
      </node>
      <node id="69122">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="69121">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="69094">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69095" relation="include">
        </childnode>
        <childnode refid="69096" relation="include">
        </childnode>
        <childnode refid="69048" relation="include">
        </childnode>
        <childnode refid="69099" relation="include">
        </childnode>
        <childnode refid="69101" relation="include">
        </childnode>
        <childnode refid="69098" relation="include">
        </childnode>
        <childnode refid="69069" relation="include">
        </childnode>
      </node>
      <node id="69050">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69041" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69055" relation="include">
        </childnode>
      </node>
      <node id="69070">
        <label>vector</label>
      </node>
      <node id="69039">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="69040" relation="include">
        </childnode>
      </node>
      <node id="69116">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69117" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
      </node>
      <node id="69078">
        <label>pxr/base/arch/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69060" relation="include">
        </childnode>
        <childnode refid="69041" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69079" relation="include">
        </childnode>
        <childnode refid="69080" relation="include">
        </childnode>
        <childnode refid="69081" relation="include">
        </childnode>
        <childnode refid="69082" relation="include">
        </childnode>
      </node>
      <node id="69115">
        <label>boost/python/default_call_policies.hpp</label>
      </node>
      <node id="69129">
        <label>boost/python/extract.hpp</label>
      </node>
      <node id="69057">
        <label>utility</label>
      </node>
      <node id="69037">
        <label>pxr/base/tf/pyCall.h</label>
        <link refid="py_call_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69038" relation="include">
        </childnode>
        <childnode refid="69116" relation="include">
        </childnode>
        <childnode refid="69119" relation="include">
        </childnode>
        <childnode refid="69123" relation="include">
        </childnode>
      </node>
      <node id="69103">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69060" relation="include">
        </childnode>
        <childnode refid="69045" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
      </node>
      <node id="69093">
        <label>sstream</label>
      </node>
      <node id="69095">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
      </node>
      <node id="69041">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="69047">
        <label>pxr/base/tf/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69048" relation="include">
        </childnode>
        <childnode refid="69058" relation="include">
        </childnode>
        <childnode refid="69071" relation="include">
        </childnode>
        <childnode refid="69074" relation="include">
        </childnode>
        <childnode refid="69077" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69080" relation="include">
        </childnode>
        <childnode refid="69084" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69070" relation="include">
        </childnode>
      </node>
      <node id="69083">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="69041" relation="include">
        </childnode>
      </node>
      <node id="69064">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69048" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69065" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69066" relation="include">
        </childnode>
        <childnode refid="69067" relation="include">
        </childnode>
        <childnode refid="69068" relation="include">
        </childnode>
        <childnode refid="69063" relation="include">
        </childnode>
        <childnode refid="69069" relation="include">
        </childnode>
        <childnode refid="69057" relation="include">
        </childnode>
        <childnode refid="69070" relation="include">
        </childnode>
      </node>
      <node id="69056">
        <label>math.h</label>
      </node>
      <node id="69090">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69058" relation="include">
        </childnode>
        <childnode refid="69091" relation="include">
        </childnode>
        <childnode refid="69065" relation="include">
        </childnode>
        <childnode refid="69092" relation="include">
        </childnode>
        <childnode refid="69068" relation="include">
        </childnode>
        <childnode refid="69093" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69069" relation="include">
        </childnode>
        <childnode refid="69070" relation="include">
        </childnode>
      </node>
      <node id="69124">
        <label>pxr/base/tf/pyUtils.h</label>
        <link refid="base_2tf_2py_utils_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69096" relation="include">
        </childnode>
        <childnode refid="69094" relation="include">
        </childnode>
        <childnode refid="69085" relation="include">
        </childnode>
        <childnode refid="69071" relation="include">
        </childnode>
        <childnode refid="69117" relation="include">
        </childnode>
        <childnode refid="69125" relation="include">
        </childnode>
        <childnode refid="69116" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69076" relation="include">
        </childnode>
        <childnode refid="69062" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
        <childnode refid="69070" relation="include">
        </childnode>
        <childnode refid="69128" relation="include">
        </childnode>
        <childnode refid="69129" relation="include">
        </childnode>
        <childnode refid="69126" relation="include">
        </childnode>
        <childnode refid="69127" relation="include">
        </childnode>
        <childnode refid="69130" relation="include">
        </childnode>
      </node>
      <node id="69073">
        <label>iosfwd</label>
      </node>
      <node id="69044">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69045" relation="include">
        </childnode>
        <childnode refid="69046" relation="include">
        </childnode>
      </node>
      <node id="69118">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="69098">
        <label>cstddef</label>
      </node>
      <node id="69108">
        <label>pxr/base/tf/singleton.h</label>
        <link refid="singleton_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69109" relation="include">
        </childnode>
        <childnode refid="69080" relation="include">
        </childnode>
      </node>
      <node id="69097">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69067" relation="include">
        </childnode>
      </node>
      <node id="69085">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69049" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69044" relation="include">
        </childnode>
        <childnode refid="69046" relation="include">
        </childnode>
      </node>
      <node id="69119">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69109" relation="include">
        </childnode>
        <childnode refid="69117" relation="include">
        </childnode>
        <childnode refid="69120" relation="include">
        </childnode>
        <childnode refid="69121" relation="include">
        </childnode>
        <childnode refid="69122" relation="include">
        </childnode>
        <childnode refid="69073" relation="include">
        </childnode>
        <childnode refid="69067" relation="include">
        </childnode>
      </node>
      <node id="69114">
        <label>pxr/base/tf/errorTransport.h</label>
        <link refid="error_transport_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69043" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
      </node>
      <node id="69038">
        <label>pxr/base/tf/pyError.h</label>
        <link refid="py_error_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69042" relation="include">
        </childnode>
        <childnode refid="69115" relation="include">
        </childnode>
      </node>
      <node id="69069">
        <label>type_traits</label>
      </node>
      <node id="69068">
        <label>set</label>
      </node>
      <node id="69130">
        <label>boost/python/type_id.hpp</label>
      </node>
      <node id="69060">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="69040" relation="include">
        </childnode>
      </node>
      <node id="69045">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="69041" relation="include">
        </childnode>
      </node>
      <node id="69079">
        <label>algorithm</label>
      </node>
      <node id="69065">
        <label>cstring</label>
      </node>
      <node id="69087">
        <label>pxr/base/tf/diagnosticBase.h</label>
        <link refid="diagnostic_base_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69044" relation="include">
        </childnode>
        <childnode refid="69058" relation="include">
        </childnode>
        <childnode refid="69088" relation="include">
        </childnode>
        <childnode refid="69090" relation="include">
        </childnode>
        <childnode refid="69094" relation="include">
        </childnode>
        <childnode refid="69051" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69103" relation="include">
        </childnode>
        <childnode refid="69106" relation="include">
        </childnode>
        <childnode refid="69091" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
      </node>
      <node id="69110">
        <label>pxr/base/tf/status.h</label>
        <link refid="status_8h_source"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69087" relation="include">
        </childnode>
      </node>
      <node id="69131">
        <label>boost/python/converter/from_python.hpp</label>
      </node>
      <node id="69099">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69100" relation="include">
        </childnode>
        <childnode refid="69096" relation="include">
        </childnode>
        <childnode refid="69080" relation="include">
        </childnode>
      </node>
      <node id="69067">
        <label>memory</label>
      </node>
      <node id="69074">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69075" relation="include">
        </childnode>
        <childnode refid="69071" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69076" relation="include">
        </childnode>
        <childnode refid="69062" relation="include">
        </childnode>
      </node>
      <node id="69102">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="69036" relation="include">
        </childnode>
        <childnode refid="69103" relation="include">
        </childnode>
        <childnode refid="69085" relation="include">
        </childnode>
        <childnode refid="69039" relation="include">
        </childnode>
        <childnode refid="69083" relation="include">
        </childnode>
        <childnode refid="69104" relation="include">
        </childnode>
        <childnode refid="69046" relation="include">
        </childnode>
        <childnode refid="69107" relation="include">
        </childnode>
        <childnode refid="69061" relation="include">
        </childnode>
      </node>
      <node id="69133">
        <label>boost/python/converter/rvalue_from_python_data.hpp</label>
      </node>
      <node id="69063">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="69135">
        <label>pxr/base/tf/pyFunction.h</label>
        <link refid="py_function_8h"/>
        <childnode refid="69136" relation="include">
        </childnode>
      </node>
      <node id="69136">
        <label>pxr/base/vt/wrapArray.h</label>
        <link refid="wrap_array_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_tf_py_function_from_python" prot="public">TfPyFunctionFromPython</innerclass>
    <innerclass refid="struct_tf_py_function_from_python_3_01_ret_07_args_8_8_8_08_4" prot="public">TfPyFunctionFromPython&lt; Ret(Args...)&gt;</innerclass>
    <innerclass refid="struct_tf_py_function_from_python_3_01_ret_07_args_8_8_8_08_4_1_1_call" prot="public">TfPyFunctionFromPython&lt; Ret(Args...)&gt;::Call</innerclass>
    <innerclass refid="struct_tf_py_function_from_python_3_01_ret_07_args_8_8_8_08_4_1_1_call_weak" prot="public">TfPyFunctionFromPython&lt; Ret(Args...)&gt;::CallWeak</innerclass>
    <innerclass refid="struct_tf_py_function_from_python_3_01_ret_07_args_8_8_8_08_4_1_1_call_method" prot="public">TfPyFunctionFromPython&lt; Ret(Args...)&gt;::CallMethod</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_PY_FUNCTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_PY_FUNCTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="py_call_8h" kindref="compound">pxr/base/tf/pyCall.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyLock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyObjWrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2py_utils_8h" kindref="compound">pxr/base/tf/pyUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/converter/from_python.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/converter/registered.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/converter/rvalue_from_python_data.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/extract.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/handle.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/object.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/function.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TfPyFunctionFromPython;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ret,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TfPyFunctionFromPython&lt;Ret<sp/>(Args...)&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Call</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>callable;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret<sp/>operator()(Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref>(callable)(args...);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CallWeak</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>weak;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret<sp/>operator()(Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>get<sp/>the<sp/>referenced<sp/>callable<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>callable(handle&lt;&gt;(borrowed(PyWeakref_GetObject(weak.<ref refid="class_tf_py_obj_wrapper_1aeddca8ee3f8a757ae8fdf114260df477" kindref="member">ptr</ref>()))));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="base_2tf_2py_utils_8h_1a4b4188c0e93926173249aea201501853" kindref="member">TfPyIsNone</ref>(callable))<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1gaba2e638edaae9e9c6e5180e020f12ccf" kindref="member">TF_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>call<sp/>an<sp/>expired<sp/>python<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Ret();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref>(callable)(args...);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CallMethod</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>func;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>weakSelf;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret<sp/>operator()(Args...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>get<sp/>the<sp/>referenced<sp/>self<sp/>parameter,<sp/>then<sp/>build<sp/>a<sp/>new</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instance<sp/>method<sp/>and<sp/>call<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>PyWeakref_GetObject(weakSelf.<ref refid="class_tf_py_obj_wrapper_1aeddca8ee3f8a757ae8fdf114260df477" kindref="member">ptr</ref>());</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1gaba2e638edaae9e9c6e5180e020f12ccf" kindref="member">TF_WARN</ref>(</highlight><highlight class="stringliteral">&quot;Tried<sp/>to<sp/>call<sp/>a<sp/>method<sp/>on<sp/>an<sp/>expired<sp/>python<sp/>instance&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Ret();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>method(handle&lt;&gt;(PyMethod_New(func.<ref refid="class_tf_py_obj_wrapper_1aeddca8ee3f8a757ae8fdf114260df477" kindref="member">ptr</ref>(),<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref>(method)(args...);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>TfPyFunctionFromPython()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterFunctionType&lt;boost::function&lt;Ret<sp/>(Args...)&gt;&gt;();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterFunctionType&lt;std::function&lt;Ret<sp/>(Args...)&gt;&gt;();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FuncType&gt;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>RegisterFunctionType()<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>converter::registry::</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert(&amp;convertible,<sp/>&amp;construct&lt;FuncType&gt;,<sp/>type_id&lt;FuncType&gt;());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*convertible(PyObject<sp/>*obj)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((obj<sp/>==<sp/>Py_None)<sp/>||<sp/>PyCallable_Check(obj))<sp/>?<sp/>obj<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FuncType&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>construct(PyObject<sp/>*src,<sp/>boost::python::converter::</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rvalue_from_python_stage1_data<sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*storage<sp/>=<sp/>((converter::rvalue_from_python_storage&lt;FuncType&gt;<sp/>*)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data)-&gt;storage.bytes;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src<sp/>==<sp/>Py_None)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(storage)<sp/>FuncType();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>case<sp/>of<sp/>instance<sp/>methods,<sp/>holding<sp/>a<sp/>strong<sp/>reference<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keep<sp/>the<sp/>bound<sp/>&apos;self&apos;<sp/>argument<sp/>alive<sp/>indefinitely,<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>undesirable.<sp/>Unfortunately,<sp/>we<sp/>can&apos;t<sp/>just<sp/>keep<sp/>a<sp/>weak<sp/>reference<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>instance<sp/>method,<sp/>because<sp/>python<sp/>synthesizes<sp/>these<sp/>on-the-fly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instead<sp/>we<sp/>do<sp/>something<sp/>like<sp/>what<sp/>PyQt&apos;s<sp/>SIP<sp/>does,<sp/>and<sp/>break<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>method<sp/>into<sp/>three<sp/>parts:<sp/>the<sp/>class,<sp/>the<sp/>function,<sp/>and<sp/>the<sp/>self</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter.<sp/><sp/>We<sp/>keep<sp/>strong<sp/>references<sp/>to<sp/>the<sp/>class<sp/>and<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function,<sp/>but<sp/>a<sp/>weak<sp/>reference<sp/>to<sp/>&apos;self&apos;.<sp/><sp/>Then<sp/>at<sp/>call-time,<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>self<sp/>has<sp/>not<sp/>expired,<sp/>we<sp/>build<sp/>a<sp/>new<sp/>instancemethod<sp/>and<sp/>call<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>if<sp/>the<sp/>callable<sp/>is<sp/>a<sp/>lambda<sp/>(checked<sp/>in<sp/>a<sp/>hacky<sp/>way,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mirroring<sp/>SIP),<sp/>we<sp/>take<sp/>a<sp/>strong<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>all<sp/>other<sp/>callables,<sp/>we<sp/>attempt<sp/>to<sp/>take<sp/>weak<sp/>references<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>them.<sp/>If<sp/>that<sp/>fails,<sp/>we<sp/>take<sp/>a<sp/>strong<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>all<sp/>sort<sp/>of<sp/>contrived,<sp/>but<sp/>seems<sp/>to<sp/>have<sp/>the<sp/>right<sp/>behavior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>most<sp/>usage<sp/>patterns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>callable(handle&lt;&gt;(borrowed(src)));</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*pyCallable<sp/>=<sp/>callable.ptr();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMethod_Check(pyCallable)<sp/>?</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMethod_GET_SELF(pyCallable)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deconstruct<sp/>the<sp/>method<sp/>and<sp/>attempt<sp/>to<sp/>get<sp/>a<sp/>weak<sp/>reference<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>self<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>func(handle&lt;&gt;(borrowed(PyMethod_GET_FUNCTION(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyCallable))));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal"><sp/>weakSelf(handle&lt;&gt;(PyWeakref_NewRef(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>NULL)));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(storage)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FuncType(CallMethod{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref>(func),</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref>(weakSelf)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject_HasAttrString(pyCallable,<sp/></highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extract&lt;string&gt;(callable.attr(</highlight><highlight class="stringliteral">&quot;__name__&quot;</highlight><highlight class="normal">))()</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&lt;lambda&gt;&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Explicitly<sp/>hold<sp/>on<sp/>to<sp/>strong<sp/>references<sp/>to<sp/>lambdas.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(storage)<sp/>FuncType(Call{<ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref>(callable)});</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>get<sp/>a<sp/>weak<sp/>reference<sp/>to<sp/>the<sp/>callable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(PyObject<sp/>*weakCallable<sp/>=</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyWeakref_NewRef(pyCallable,<sp/>NULL))<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(storage)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FuncType(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CallWeak{<ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref>(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">(handle&lt;&gt;(weakCallable)))});</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back<sp/>to<sp/>taking<sp/>a<sp/>strong<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(storage)<sp/>FuncType(Call{<ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref>(callable)});</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;convertible<sp/>=<sp/>storage;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_PY_FUNCTION_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pyFunction.h"/>
  </compounddef>
</doxygen>
