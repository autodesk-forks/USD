<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_collection_1_1_visitor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>TraceCollection::Visitor</compoundname>
    <derivedcompoundref refid="class_trace_counter_accumulator" prot="private" virt="non-virtual">TraceCounterAccumulator</derivedcompoundref>
    <includes refid="collection_8h" local="no">collection.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1accf43c18dce1e0321c6dc3e8bb2a4bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TRACE_API</type>
        <definition>virtual TRACE_API ~Visitor</definition>
        <argsstring>()</argsstring>
        <name>~Visitor</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1a3c80c02c9ef4c21cc42fc923138704a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OnBeginCollection</definition>
        <argsstring>()=0</argsstring>
        <name>OnBeginCollection</name>
        <reimplementedby refid="class_trace_counter_accumulator_1a9cf0d30c92e295f9f5bf586938149dbd">OnBeginCollection</reimplementedby>
        <briefdescription>
<para>Called at the beginning of an iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1a6dfb37e0b38497f0e93dd9f3c5dc4bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OnEndCollection</definition>
        <argsstring>()=0</argsstring>
        <name>OnEndCollection</name>
        <reimplementedby refid="class_trace_counter_accumulator_1a2cd98ab17b9877c8f793ff320b27fbd0">OnEndCollection</reimplementedby>
        <briefdescription>
<para>Called at the end of an iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1a40662d18c54cefe17fce74f0d5e5b17d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OnBeginThread</definition>
        <argsstring>(const TraceThreadId &amp;threadId)=0</argsstring>
        <name>OnBeginThread</name>
        <reimplementedby refid="class_trace_counter_accumulator_1a1acbcbe48bbfc00e4389e562747d3cfa">OnBeginThread</reimplementedby>
        <param>
          <type>const <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &amp;</type>
          <declname>threadId</declname>
        </param>
        <briefdescription>
<para>Called before the first event of from the thread with <computeroutput>threadId</computeroutput> is encountered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1a699411304ea70999cea0158fa076b613" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OnEndThread</definition>
        <argsstring>(const TraceThreadId &amp;threadId)=0</argsstring>
        <name>OnEndThread</name>
        <reimplementedby refid="class_trace_counter_accumulator_1a499b435f34afb8aa7778f37b9d1b6c5a">OnEndThread</reimplementedby>
        <param>
          <type>const <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &amp;</type>
          <declname>threadId</declname>
        </param>
        <briefdescription>
<para>Called after the last event of from the thread with <computeroutput>threadId</computeroutput> is encountered. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1a2250f04e7b002aa6c36a168a6e947a01" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool AcceptsCategory</definition>
        <argsstring>(TraceCategoryId categoryId)=0</argsstring>
        <name>AcceptsCategory</name>
        <reimplementedby refid="class_trace_counter_accumulator_1aba944a55185e9bfd21f13769cd92b35e">AcceptsCategory</reimplementedby>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>categoryId</declname>
        </param>
        <briefdescription>
<para>Called before an event with <computeroutput>categoryId</computeroutput> is visited. </para>
        </briefdescription>
        <detaileddescription>
<para>If the return value is false, the event will be visited. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_1_1_visitor_1ae291c275f770fb50cd9e3d369ebca9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void OnEvent</definition>
        <argsstring>(const TraceThreadId &amp;threadId, const TfToken &amp;key, const TraceEvent &amp;event)=0</argsstring>
        <name>OnEvent</name>
        <reimplementedby refid="class_trace_counter_accumulator_1ab3e5f1683f820aba43f5fb47fc9a0082">OnEvent</reimplementedby>
        <param>
          <type>const <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &amp;</type>
          <declname>threadId</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Called for every event <computeroutput>event</computeroutput> with <computeroutput>key</computeroutput> on thread <computeroutput>threadId</computeroutput> if AcceptsCategory returns true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collection.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This interface provides a way to access data a <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="8581">
        <label>TraceCollection::Visitor</label>
        <link refid="class_trace_collection_1_1_visitor"/>
      </node>
      <node id="8582">
        <label>TraceCounterAccumulator</label>
        <link refid="class_trace_counter_accumulator"/>
        <childnode refid="8581" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/base/trace/collection.h" line="83" column="1" bodyfile="pxr/base/trace/collection.h" bodystart="83" bodyend="112"/>
    <listofallmembers>
      <member refid="class_trace_collection_1_1_visitor_1a2250f04e7b002aa6c36a168a6e947a01" prot="public" virt="pure-virtual"><scope>TraceCollection::Visitor</scope><name>AcceptsCategory</name></member>
      <member refid="class_trace_collection_1_1_visitor_1a3c80c02c9ef4c21cc42fc923138704a8" prot="public" virt="pure-virtual"><scope>TraceCollection::Visitor</scope><name>OnBeginCollection</name></member>
      <member refid="class_trace_collection_1_1_visitor_1a40662d18c54cefe17fce74f0d5e5b17d" prot="public" virt="pure-virtual"><scope>TraceCollection::Visitor</scope><name>OnBeginThread</name></member>
      <member refid="class_trace_collection_1_1_visitor_1a6dfb37e0b38497f0e93dd9f3c5dc4bb3" prot="public" virt="pure-virtual"><scope>TraceCollection::Visitor</scope><name>OnEndCollection</name></member>
      <member refid="class_trace_collection_1_1_visitor_1a699411304ea70999cea0158fa076b613" prot="public" virt="pure-virtual"><scope>TraceCollection::Visitor</scope><name>OnEndThread</name></member>
      <member refid="class_trace_collection_1_1_visitor_1ae291c275f770fb50cd9e3d369ebca9e0" prot="public" virt="pure-virtual"><scope>TraceCollection::Visitor</scope><name>OnEvent</name></member>
      <member refid="class_trace_collection_1_1_visitor_1accf43c18dce1e0321c6dc3e8bb2a4bac" prot="public" virt="virtual"><scope>TraceCollection::Visitor</scope><name>~Visitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
