<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_vol_volume" kind="class" language="C++" prot="public">
    <compoundname>UsdVolVolume</compoundname>
    <basecompoundref refid="class_usd_geom_gprim" prot="public" virt="non-virtual">UsdGeomGprim</basecompoundref>
    <includes refid="usd_2usd_vol_2volume_8h" local="no">volume.h</includes>
      <sectiondef kind="user-defined">
      <header>Field Attachment and Inspection</header>
      <memberdef kind="typedef" id="class_usd_vol_volume_1a5630312d364dc907ba4d8716b5d5b0cd" prot="public" static="no">
        <type>std::map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &gt;</type>
        <definition>typedef std::map&lt;TfToken, SdfPath&gt; FieldMap</definition>
        <argsstring></argsstring>
        <name>FieldMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="184" column="1" bodyfile="pxr/usd/usdVol/volume.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1ad5a504d3de43ec4238ce782659db1905" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API FieldMap</type>
        <definition>USDVOL_API FieldMap GetFieldPaths</definition>
        <argsstring>() const</argsstring>
        <name>GetFieldPaths</name>
        <briefdescription>
<para>Return a map of field relationship names to the fields themselves, represented as prim paths. </para>
        </briefdescription>
        <detaileddescription>
<para>This map provides all the information that should be needed to tie fields to shader parameters and render this volume.</para>
<para>The field relationship names that server as the map keys will have the field namespace stripped from them. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1a657eb8a6a6729c9a5a1c73038211b197" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API bool</type>
        <definition>USDVOL_API bool HasFieldRelationship</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>HasFieldRelationship</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks if there is an existing field relationship with a given name. </para>
        </briefdescription>
        <detaileddescription>
<para>This query will return <computeroutput>true</computeroutput> even for a field relationship that has been blocked and therefore will not contribute to the map returned by GetFieldRelationships()</para>
<para>The name lookup automatically applies the field relationship namespacing, if it isn&apos;t specified in the name token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1ad3ed5f2538958ec090643a3e5a5fb66b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>USDVOL_API SdfPath GetFieldPath</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>GetFieldPath</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks if there is an existing field relationship with a given name, and if so, returns the path to the Field prim it targets, or else the empty path. </para>
        </briefdescription>
        <detaileddescription>
<para>The name lookup automatically applies the field relationship namespacing, if it isn&apos;t specified in the name token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1afd1fbbcfa5e57c715b4a75f4073f6522" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API bool</type>
        <definition>USDVOL_API bool CreateFieldRelationship</definition>
        <argsstring>(const TfToken &amp;name, const SdfPath &amp;fieldPath) const</argsstring>
        <name>CreateFieldRelationship</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>fieldPath</declname>
        </param>
        <briefdescription>
<para>Creates a relationship on this volume that targets the specified field. </para>
        </briefdescription>
        <detaileddescription>
<para>If an existing relationship exists with the same name, it is replaced (since only one target is allowed for each named relationship).</para>
<para>Returns <computeroutput>true</computeroutput> if the relationship was successfully created and set - it is legal to call this method for a field relationship that already &quot;exists&quot;, i.e. already posesses scene description, as this is the only method we provide for setting a field relatioonship&apos;s value, to help enforce that field relationships can have only a single (or no) target.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fieldPath</parametername>
</parameternamelist>
<parameterdescription>
<para>- can be a prim path, or the path of another relationship, to effect <ref refid="class_usd_relationship_1usd_relationship_forwarding" kindref="member">Relationship Forwarding</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
The name lookup automatically applies the field relationship namespacing, if it isn&apos;t specified in the name token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1ad6b43813d6fca87818527d1b30700673" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API bool</type>
        <definition>USDVOL_API bool BlockFieldRelationship</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>BlockFieldRelationship</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Blocks an existing field relationship on this volume, ensuring it will not be enumerated by <ref refid="class_usd_vol_volume_1ad5a504d3de43ec4238ce782659db1905" kindref="member">GetFieldPaths()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the relationship existed, false if it did not. In other words the return value indicates whether the volume prim was changed.</para>
<para>The name lookup automatically applies the field relationship namespacing, if it isn&apos;t specified in the name token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1a3fc020aced9315041d990950f72273d2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>static TfToken _MakeNamespaced</definition>
        <argsstring>(const TfToken &amp;name)</argsstring>
        <name>_MakeNamespaced</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return <computeroutput>name</computeroutput> prepended with the field namespace, if it isn&apos;t already prefixed. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not validate name as a legal relationship identifier. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="250" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_vol_volume_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa6650141c3d230f8e4e51461e1d9e645" kindref="member">UsdSchemaKind::ConcreteTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="79" column="1" bodyfile="pxr/usd/usdVol/volume.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_vol_volume_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="157" column="1" bodyfile="pxr/usd/usdVol/volume.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_vol_volume_1a97315e0750934c52821f7bce1d74b572" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdVolVolume</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdVolVolume</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_vol_volume" kindref="compound">UsdVolVolume</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_vol_volume_1ac4390c480176ecac63f98a04756a862f" kindref="member">UsdVolVolume::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="85" column="1" bodyfile="pxr/usd/usdVol/volume.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1abfdbc7deb66d4f9aa77b0b735e9e86a7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdVolVolume</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdVolVolume</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_vol_volume" kindref="compound">UsdVolVolume</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_vol_volume" kindref="compound">UsdVolVolume</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="93" column="1" bodyfile="pxr/usd/usdVol/volume.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1a85bdddfbdf6de99b0cc91e6b5c2d41e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDVOL_API</type>
        <definition>virtual USDVOL_API ~UsdVolVolume</definition>
        <argsstring>()</argsstring>
        <name>~UsdVolVolume</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_vol_volume_1a9638bd1a0cbcb211a80f3d1dbc6d9da5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDVOL_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1ac4390c480176ecac63f98a04756a862f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API <ref refid="class_usd_vol_volume" kindref="compound">UsdVolVolume</ref></type>
        <definition>static USDVOL_API UsdVolVolume Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_vol_volume" kindref="compound">UsdVolVolume</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdVolVolume(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1a19f91e66077e17c65870997019aba484" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API <ref refid="class_usd_vol_volume" kindref="compound">UsdVolVolume</ref></type>
        <definition>static USDVOL_API UsdVolVolume Define</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Define</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Attempt to ensure a <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis> adhering to this schema at <computeroutput>path</computeroutput> is defined (according to <ref refid="class_usd_prim_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">UsdPrim::IsDefined()</ref>) on this stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If a prim adhering to this schema at <computeroutput>path</computeroutput> is already defined on this stage, return that prim. Otherwise author an <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> with <emphasis>specifier</emphasis> == <emphasis>SdfSpecifierDef</emphasis> and this schema&apos;s prim type name for the prim at <computeroutput>path</computeroutput> at the current EditTarget. Author <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> s with <computeroutput>specifier</computeroutput> == <emphasis>SdfSpecifierDef</emphasis> and empty typeName at the current EditTarget for any nonexistent, or existing but not <emphasis>Defined</emphasis> ancestors.</para>
<para>The given <emphasis>path</emphasis> must be an absolute prim path that does not contain any variant selections.</para>
<para>If it is impossible to author any of the necessary PrimSpecs, (for example, in case <emphasis>path</emphasis> cannot map to the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>&apos;s namespace) issue an error and return an invalid <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis>.</para>
<para>Note that this method may return a defined prim whose typeName does not specify this schema class, in case a stronger typeName opinion overrides the opinion at the current EditTarget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="146" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_vol_volume_1a34ce525a51f595a6b87f70afbafc2e96" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDVOL_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDVOL_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_geom_gprim_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_vol_volume_1a04873e1eb69b60bd040d2c06d535f259" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDVOL_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDVOL_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_vol_volume_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="161" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_vol_volume_1a356aa28f8af508383319bbd3645b6026" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDVOL_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDVOL_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_geom_gprim_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdVol/volume.h" line="165" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A renderable volume primitive. </para>
    </briefdescription>
    <detaileddescription>
<para>A volume is made up of any number of FieldBase primitives bound together in this volume. Each FieldBase primitive is specified as a relationship with a namespace prefix of &quot;field&quot;.</para>
<para>The relationship name is used by the renderer to associate individual fields with the named input parameters on the volume shader. Using this indirect approach to connecting fields to shader parameters (rather than using the field prim&apos;s name) allows a single field to be reused for different shader inputs, or to be used as different shader parameters when rendering different Volumes. This means that the name of the field prim is not relevant to its contribution to the volume prims which refer to it. Nor does the field prim&apos;s location in the scene graph have any relevance, and Volumes may refer to fields anywhere in the scene graph. <bold>However</bold>, unless Field prims need to be shared by multiple Volumes, a Volume&apos;s Field prims should be located under the Volume in namespace, for enhanced organization. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8534">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="8535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8530">
        <label>UsdVolVolume</label>
        <link refid="class_usd_vol_volume"/>
        <childnode refid="8531" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8531">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="8532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8535">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8536" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8536">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="8532">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="8533" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8533">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="8534" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8541">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="8542" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8537">
        <label>UsdVolVolume</label>
        <link refid="class_usd_vol_volume"/>
        <childnode refid="8538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8538">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="8539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8542">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8543" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8543">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="8539">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="8540" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8540">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="8541" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdVol/volume.h" line="74" column="1" bodyfile="pxr/usd/usdVol/volume.h" bodystart="73" bodyend="251"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdVolVolume</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_vol_volume_1a34ce525a51f595a6b87f70afbafc2e96" prot="protected" virt="virtual"><scope>UsdVolVolume</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdVolVolume</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_vol_volume_1a04873e1eb69b60bd040d2c06d535f259" prot="private" virt="non-virtual"><scope>UsdVolVolume</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_vol_volume_1a356aa28f8af508383319bbd3645b6026" prot="private" virt="virtual"><scope>UsdVolVolume</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdVolVolume</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdVolVolume</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_vol_volume_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdVolVolume</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_vol_volume_1a3fc020aced9315041d990950f72273d2" prot="private" virt="non-virtual"><scope>UsdVolVolume</scope><name>_MakeNamespaced</name></member>
      <member refid="class_usd_geom_xformable_1a8b0d6e551f3705724405ddf6795756a7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddOrientOp</name></member>
      <member refid="class_usd_geom_xformable_1ac01badf7416ca43636d9e479bc47da33" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1aba511327f305e9a8b3f8941e244c8992" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1a63ffbff66e60a314adac3380d533469f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4af9af5dc523e80fce81a88014edef19" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1ac7235be9524c6eb1a906f3247f9833f0" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1a353b43cb6f6d04b2db5b68c057d0494f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a9c089e1932ce91477becbc1f01bdfb02" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a6dd6174a48238d6a9564128f43362ce2" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a5938bf453b0f07bfaf80d121b916d720" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a4f84556fa9b1fab0432b8c4342e98045" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddScaleOp</name></member>
      <member refid="class_usd_geom_xformable_1a0fd59cb1cdd089e0d93fa755fb0da268" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1a782fe5d36ac6657235b80741d47a8b1f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddTranslateOp</name></member>
      <member refid="class_usd_geom_xformable_1ad6dfc740dcec052482489647af9ed36b" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>AddXformOp</name></member>
      <member refid="class_usd_vol_volume_1ad6b43813d6fca87818527d1b30700673" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>BlockFieldRelationship</name></member>
      <member refid="class_usd_geom_xformable_1a10a241711290631508cfc349ad4ab64d" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ClearXformOpOrder</name></member>
      <member refid="class_usd_geom_imageable_1a1174d9985088dd364f6a56925073fe76" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeEffectiveVisibility</name></member>
      <member refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_boundable_1a413c9eb5b4e1d8fddd627cf33ed4a106" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_boundable_1a7fa34cebf9339958ad25099dd635c9c7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_imageable_1a503f6d39abbd1b62c3c55f227461334d" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeLocalBound</name></member>
      <member refid="class_usd_geom_imageable_1a8e3fb09253ba63d63921f665d63cd270" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeLocalToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1a4313664fa692f724da56cc254bce70fc" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeParentToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1ad5a114f3776eb75edc651e8c2d67f8ff" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a1aa2ea4240e7e12f11122d7ff8ad7f90" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputePurpose</name></member>
      <member refid="class_usd_geom_imageable_1a2a7d61f7af1a02e095e6a8abcf8e641f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a00c5620a09313aa39cb0d79f492b340f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a54086b2386d22b1de4aaeb5b3005533d" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeUntransformedBound</name></member>
      <member refid="class_usd_geom_imageable_1ac0bfa1554d9b57303c14f71d084c578d" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeVisibility</name></member>
      <member refid="class_usd_geom_imageable_1ae616043b0f7fbc631ef9e5c784132a6c" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>ComputeWorldBound</name></member>
      <member refid="class_usd_geom_gprim_1a7fd86a311b27d9b4fdd82736bb423056" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateDisplayColorAttr</name></member>
      <member refid="class_usd_geom_gprim_1a0915951c95ea904181354ac2d27c5ec6" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateDisplayColorPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1ad5be639be4c7963ef213b15594a1dbb6" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateDisplayOpacityAttr</name></member>
      <member refid="class_usd_geom_gprim_1af90ae547097a320fad7d3f7bd9e681f9" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateDisplayOpacityPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1a4cd597e15452c6b3f3fa8b0429023b65" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateDoubleSidedAttr</name></member>
      <member refid="class_usd_geom_boundable_1a20dfcd57796694016d7d852e798458d8" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateExtentAttr</name></member>
      <member refid="class_usd_vol_volume_1afd1fbbcfa5e57c715b4a75f4073f6522" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateFieldRelationship</name></member>
      <member refid="class_usd_geom_gprim_1a40d10614ef3494576ded1ef08fb75f6a" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateOrientationAttr</name></member>
      <member refid="class_usd_geom_imageable_1aafc2e3aa91cf892f7937cc46a2351472" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1a3f4f6685ac7cef1d8ef94c44586b84bc" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreatePurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a96d4959f4d99367dfa3a79a3371e278a" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a03e49a63dc0bed6c97cee6bbc10aa182" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>CreateXformOpOrderAttr</name></member>
      <member refid="class_usd_vol_volume_1a19f91e66077e17c65870997019aba484" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>Define</name></member>
      <member refid="class_usd_vol_volume_1a5630312d364dc907ba4d8716b5d5b0cd" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>FieldMap</name></member>
      <member refid="class_usd_vol_volume_1ac4390c480176ecac63f98a04756a862f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>Get</name></member>
      <member refid="class_usd_geom_gprim_1a0f8310a9dbe0bfc4be2bf4aa32e4a3e4" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetDisplayColorAttr</name></member>
      <member refid="class_usd_geom_gprim_1ab36f805d674846aeeb296c8dbe661533" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetDisplayColorPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1af3b5a808697655fb58eddafb01003527" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetDisplayOpacityAttr</name></member>
      <member refid="class_usd_geom_gprim_1a4d68d7e0959dfef2db82a7a1f1a6eea8" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetDisplayOpacityPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1a63367a54086e014dda98cc79ad5f8602" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetDoubleSidedAttr</name></member>
      <member refid="class_usd_geom_boundable_1abecc87b5433fec139295a78b439b0531" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetExtentAttr</name></member>
      <member refid="class_usd_vol_volume_1ad3ed5f2538958ec090643a3e5a5fb66b" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetFieldPath</name></member>
      <member refid="class_usd_vol_volume_1ad5a504d3de43ec4238ce782659db1905" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetFieldPaths</name></member>
      <member refid="class_usd_geom_xformable_1a9a04ccb1ba8aa16e8cc1e878c2c92969" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1a3bdae958563500cfdf2b4f3bcf34c465" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1ad0838e193af826f5bbde3c274e9839ce" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_imageable_1ac7d41ddd5b5d274785f4a109a7cebad5" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetOrderedPurposeTokens</name></member>
      <member refid="class_usd_geom_xformable_1a5e7cd1ac98925aa41af4f83d1efe6375" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetOrderedXformOps</name></member>
      <member refid="class_usd_geom_gprim_1a6d7f451cf0aa27125cc118b030ebb735" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetOrientationAttr</name></member>
      <member refid="class_usd_geom_xformable_1a618c9b0ad5f39a8ebfc7f8e1b9319e5f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetOrientOp</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_imageable_1a5be4a4143e2b9f89f9bea44d27639a92" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetPurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a2dfc306cddf0c522d39ba477e91ec161" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetPurposeVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a6d16bc5455344e131683d91e14ab62db" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1adbc1cc0684aad279a9f7954cce0ad083" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1a8b871424ffaff814ec4595b406198e12" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1aeabbd1a4b1e09254ddf700bfc1d83790" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a9846b234308946bb9f91e1520f97de05" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1a803cfbc1fe2750bf9c5aadd83bd50a4c" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1aa244d99dd6e7f5abecc57f8ece422c93" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a478e11c424f265543b333a00fb4268d0" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a12311efeb62f64b39a02a1c001169ec6" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4ac8cec6efb64e0cbdd4b7a72f71c7f3" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a2029e0b90a0684a9a8c31e62aa98d317" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetScaleOp</name></member>
      <member refid="class_usd_vol_volume_1a9638bd1a0cbcb211a80f3d1dbc6d9da5" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_geom_xformable_1a0384cb87a595fa56c29463ff4fe73015" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1ab855f0ea37793df1f22d2bce3d68caff" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1a64d8dabfbe974503daf5e8f2057424f7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a582133c4e08813d891690f58497d4add" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a0b425fbfdfe0f254add07f904ab231aa" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1ab81f8a9eb062d2c726dbb8303188408c" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetTranslateOp</name></member>
      <member refid="class_usd_geom_imageable_1a943eddc325190bd67789407400f122b7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1ab153aead880eebecaf2138706c4bdbf2" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetXformOp</name></member>
      <member refid="class_usd_geom_xformable_1af8533621f9f141dfd016711171433caf" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>GetXformOpOrderAttr</name></member>
      <member refid="class_usd_vol_volume_1a657eb8a6a6729c9a5a1c73038211b197" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>HasFieldRelationship</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_geom_xformable_1adb444654a8443f3413213cc526ee6c1a" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>IsTransformationAffectedByAttrNamed</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>IsTyped</name></member>
      <member refid="class_usd_geom_imageable_1a91eda805326fd94cc9910cfaeb4ac4a0" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>MakeInvisible</name></member>
      <member refid="class_usd_geom_xformable_1a97e5c56a739490600e4e7e37b3953a08" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>MakeMatrixXform</name></member>
      <member refid="class_usd_geom_imageable_1a3fd30c76b787e7e32180c1b454b971c7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>MakeVisible</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>operator bool</name></member>
      <member refid="class_usd_vol_volume_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_imageable_1a6b808012a6a5bc9df34e794ff82bb6f0" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a8c0c8b7faa4056a7267c586b2ffc0bd8" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_xformable_1a99c4c768f58d6375edad8c9c7cb4bee2" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>SetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1a4b6dd6e51eb84725c763d064c4f9f3ba" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>SetXformOpOrder</name></member>
      <member refid="class_usd_geom_xformable_1aca0c1f0eb2639bd9e126f5e6a16e856f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_xformable_1a43e63cb240ddb36f550b3c86a22252c6" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_boundable_1a93364dd184714cc86a93a4e6c943f54f" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_boundable_1acddb485259d4c8d3c0fdb9445b85a19e" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_gprim_1a10c1cc1805ae388635bba63c3653adb8" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomGprim</name></member>
      <member refid="class_usd_geom_gprim_1a2bb55640543c9629ee6f9b05d7dcd0cc" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomGprim</name></member>
      <member refid="class_usd_geom_imageable_1a00ea23bdac8d751c2b97dc8fe5cd7f73" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_imageable_1a912f3e5572536e0492914fe251446bc9" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1adf53f566e1d4a6ff2c4e6e90590b0510" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_geom_xformable_1a4f5550d15c8a43ef4ac30a063f96d0cd" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_vol_volume_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdTyped</name></member>
      <member refid="class_usd_vol_volume_1a97315e0750934c52821f7bce1d74b572" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdVolVolume</name></member>
      <member refid="class_usd_vol_volume_1abfdbc7deb66d4f9aa77b0b735e9e86a7" prot="public" virt="non-virtual"><scope>UsdVolVolume</scope><name>UsdVolVolume</name></member>
      <member refid="class_usd_geom_boundable_1af5dfc6e58452966f10c6f8d0a771c346" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_gprim_1a0a03ad7c400946736b8d97a26cbf7211" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdGeomGprim</name></member>
      <member refid="class_usd_geom_imageable_1acbd981c2779c70ec4c3fd5d8cc610925" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1a8c8f037aa67ff544aea009f0881ed530" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdTyped</name></member>
      <member refid="class_usd_vol_volume_1a85bdddfbdf6de99b0cc91e6b5c2d41e7" prot="public" virt="virtual"><scope>UsdVolVolume</scope><name>~UsdVolVolume</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
