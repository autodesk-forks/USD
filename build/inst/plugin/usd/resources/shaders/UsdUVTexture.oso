OpenShadingLanguage 1.00
# Compiled by oslc 1.11.0@OPROJECT_VERSION_RELEASE_TYPE@
# options: -o /home/clachanski/trees/OpenUSD_Vulkan/build/third_party/renderman-25/shaders/UsdUVTexture.oso
shader UsdUVTexture	%meta{string,category,"generator"} %meta{string,role,"texture"} 
param	string	file	""		%meta{string,widget,"assetIdInput"}  %read{31,35} %write{2147483647,-1}
param	float[2]	st	0 0		%read{29,33} %write{2147483647,-1} %derivs
param	string	wrapS	"useMetadata"		%meta{string,options,"useMetadata|black|clamp|repeat|mirror"}  %read{15,15} %write{2147483647,-1}
param	string	wrapT	"useMetadata"		%meta{string,options,"useMetadata|black|clamp|repeat|mirror"}  %read{16,16} %write{2147483647,-1}
param	float[4]	fallback	0 0 0 1		%meta{string,__SDR__defaultinput,"1"}  %read{0,4} %write{2147483647,-1}
param	float[4]	scale	1 1 1 1		%read{5,9} %write{2147483647,-1}
param	float[4]	bias	0 0 0 0		%read{10,14} %write{2147483647,-1}
oparam	color	rgb	0 0 0		%meta{string,widget,"null"} %meta{string,role,"none"}  %read{2147483647,-1} %write{40,40}
oparam	float	r	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{41,41}
oparam	float	g	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{42,42}
oparam	float	b	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{43,43}
oparam	float	a	0		%meta{string,widget,"null"}  %read{2147483647,-1} %write{44,44}
local	color	fallbackColor	%read{31,31} %write{3,3}
local	float	fallbackAlpha	%read{34,35} %write{4,4}
local	color	scaleColor	%read{36,36} %write{8,8}
local	float	scaleAlpha	%read{38,38} %write{9,9}
local	color	biasColor	%read{37,37} %write{13,13}
local	float	biasAlpha	%read{39,39} %write{14,14}
local	string	swrap	%read{17,35} %write{15,25}
local	string	twrap	%read{20,35} %write{16,28}
local	color	resultColor	%read{36,43} %write{31,37}
local	float	resultAlpha	%read{38,44} %write{35,39}
const	int	$const1	0		%read{0,41} %write{2147483647,-1}
temp	float	$tmp1	%read{3,3} %write{0,0}
const	int	$const2	1		%read{1,42} %write{2147483647,-1}
temp	float	$tmp2	%read{3,3} %write{1,1}
const	int	$const3	2		%read{2,43} %write{2147483647,-1}
temp	float	$tmp3	%read{3,3} %write{2,2}
const	int	$const4	3		%read{4,35} %write{2147483647,-1}
temp	float	$tmp4	%read{8,8} %write{5,5}
temp	float	$tmp5	%read{8,8} %write{6,6}
temp	float	$tmp6	%read{8,8} %write{7,7}
temp	float	$tmp7	%read{13,13} %write{10,10}
temp	float	$tmp8	%read{13,13} %write{11,11}
temp	float	$tmp9	%read{13,13} %write{12,12}
const	string	$const5	"repeat"		%read{17,20} %write{2147483647,-1}
temp	int	$tmp10	%read{18,18} %write{17,17}
const	string	$const6	"periodic"		%read{19,22} %write{2147483647,-1}
temp	int	$tmp11	%read{21,21} %write{20,20}
const	string	$const7	"useMetadata"		%read{23,26} %write{2147483647,-1}
temp	int	$tmp12	%read{24,24} %write{23,23}
const	string	$const8	"default"		%read{25,28} %write{2147483647,-1}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	float	$tmp14	%read{31,31} %write{29,29} %derivs
temp	float	$tmp15	%read{31,31} %write{30,30} %derivs
const	string	$const9	"swrap"		%read{31,35} %write{2147483647,-1}
const	string	$const10	"twrap"		%read{31,35} %write{2147483647,-1}
const	string	$const11	"missingcolor"		%read{31,35} %write{2147483647,-1}
temp	float	$tmp16	%read{35,35} %write{32,32} %derivs
temp	float	$tmp17	%read{35,35} %write{33,33} %derivs
const	string	$const12	"firstchannel"		%read{35,35} %write{2147483647,-1}
temp	color	$tmp18	%read{35,35} %write{34,34}
const	string	$const13	"fill"		%read{35,35} %write{2147483647,-1}
temp	color	$tmp19	%read{37,37} %write{36,36}
temp	float	$tmp20	%read{39,39} %write{38,38}
code ___main___
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:92
#     color fallbackColor = color(fallback[0], fallback[1], fallback[2]);
	aref		$tmp1 fallback $const1 	%filename{"/home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl"} %line{92} %argrw{"wrr"}
	aref		$tmp2 fallback $const2 	%argrw{"wrr"}
	aref		$tmp3 fallback $const3 	%argrw{"wrr"}
	color		fallbackColor $tmp1 $tmp2 $tmp3 	%argrw{"wrrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:93
#     float fallbackAlpha = fallback[3];
	aref		fallbackAlpha fallback $const4 	%line{93} %argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:94
#     color scaleColor = color(scale[0], scale[1], scale[2]);
	aref		$tmp4 scale $const1 	%line{94} %argrw{"wrr"}
	aref		$tmp5 scale $const2 	%argrw{"wrr"}
	aref		$tmp6 scale $const3 	%argrw{"wrr"}
	color		scaleColor $tmp4 $tmp5 $tmp6 	%argrw{"wrrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:95
#     float scaleAlpha = scale[3];
	aref		scaleAlpha scale $const4 	%line{95} %argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:96
#     color biasColor = color(bias[0], bias[1], bias[2]);
	aref		$tmp7 bias $const1 	%line{96} %argrw{"wrr"}
	aref		$tmp8 bias $const2 	%argrw{"wrr"}
	aref		$tmp9 bias $const3 	%argrw{"wrr"}
	color		biasColor $tmp7 $tmp8 $tmp9 	%argrw{"wrrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:97
#     float biasAlpha = bias[3];
	aref		biasAlpha bias $const4 	%line{97} %argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:100
#     string swrap = wrapS;
	assign		swrap wrapS 	%line{100} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:101
#     string twrap = wrapT;
	assign		twrap wrapT 	%line{101} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:103
#     if (swrap == "repeat") {
	eq		$tmp10 swrap $const5 	%line{103} %argrw{"wrr"}
	if		$tmp10 20 20 	%argrw{"r"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:104
#         swrap = "periodic";
	assign		swrap $const6 	%line{104} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:107
#     if (twrap == "repeat") {
	eq		$tmp11 twrap $const5 	%line{107} %argrw{"wrr"}
	if		$tmp11 23 23 	%argrw{"r"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:108
#         twrap = "periodic";
	assign		twrap $const6 	%line{108} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:111
#     if (swrap == "useMetadata") {
	eq		$tmp12 swrap $const7 	%line{111} %argrw{"wrr"}
	if		$tmp12 26 26 	%argrw{"r"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:112
#         swrap = "default";
	assign		swrap $const8 	%line{112} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:115
#     if (twrap == "useMetadata") {
	eq		$tmp13 twrap $const7 	%line{115} %argrw{"wrr"}
	if		$tmp13 29 29 	%argrw{"r"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:116
#         twrap = "default";
	assign		twrap $const8 	%line{116} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:123
#             st[0], st[1],
	aref		$tmp14 st $const1 	%line{123} %argrw{"wrr"}
	aref		$tmp15 st $const2 	%argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:121
#     color resultColor = texture(
	texture		resultColor file $tmp14 $tmp15 $const9 swrap $const10 twrap $const11 fallbackColor 	%line{121} %argrw{"wrrrrrrrrr"} %argderivs{2,3}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:130
#             st[0], st[1],
	aref		$tmp16 st $const1 	%line{130} %argrw{"wrr"}
	aref		$tmp17 st $const2 	%argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:134
#             "missingcolor", color(fallbackAlpha), 
	assign		$tmp18 fallbackAlpha 	%line{134} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:128
#     float resultAlpha = texture(
	texture		resultAlpha file $tmp16 $tmp17 $const9 swrap $const10 twrap $const12 $const4 $const11 $tmp18 $const13 fallbackAlpha 	%line{128} %argrw{"wrrrrrrrrrrrrr"} %argderivs{2,3}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:139
#     resultColor = resultColor * scaleColor + biasColor;
	mul		$tmp19 resultColor scaleColor 	%line{139} %argrw{"wrr"}
	add		resultColor $tmp19 biasColor 	%argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:140
#     resultAlpha = resultAlpha * scaleAlpha + biasAlpha;
	mul		$tmp20 resultAlpha scaleAlpha 	%line{140} %argrw{"wrr"}
	add		resultAlpha $tmp20 biasAlpha 	%argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:143
#     rgb = resultColor;
	assign		rgb resultColor 	%line{143} %argrw{"wr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:144
#     r   = resultColor[0];
	compref		r resultColor $const1 	%line{144} %argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:145
#     g   = resultColor[1];
	compref		g resultColor $const2 	%line{145} %argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:146
#     b   = resultColor[2];
	compref		b resultColor $const3 	%line{146} %argrw{"wrr"}
# /home/clachanski/trees/OpenUSD_Vulkan/pxr/usdImaging/plugin/usdShaders/shaders/UsdUVTexture.osl:147
#     a   = resultAlpha;
	assign		a resultAlpha 	%line{147} %argrw{"wr"}
	end
