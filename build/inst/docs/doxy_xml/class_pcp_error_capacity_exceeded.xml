<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_error_capacity_exceeded" kind="class" language="C++" prot="public">
    <compoundname>PcpErrorCapacityExceeded</compoundname>
    <basecompoundref refid="class_pcp_error_base" prot="public" virt="non-virtual">PcpErrorBase</basecompoundref>
    <includes refid="pcp_2errors_8h" local="no">errors.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_pcp_error_capacity_exceeded_1a564cbf14425f53eae8712e1e59cf3803" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PcpErrorCapacityExceededPtr</type>
        <definition>static PcpErrorCapacityExceededPtr New</definition>
        <argsstring>(PcpErrorType errorType)</argsstring>
        <name>New</name>
        <param>
          <type>PcpErrorType</type>
          <declname>errorType</declname>
        </param>
        <briefdescription>
<para>Returns a new error object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="177" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_error_capacity_exceeded_1ac7b66a7b99509bfa1599820c92b5ae55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API ~PcpErrorCapacityExceeded</definition>
        <argsstring>() override</argsstring>
        <name>~PcpErrorCapacityExceeded</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_error_capacity_exceeded_1aa5ddec63c216bb23704d33a73efae798" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>PCP_API std::string</type>
        <definition>PCP_API std::string ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="class_pcp_error_base_1a7797ce7c715f383c3538fc93bab9ddf1">ToString</reimplements>
        <briefdescription>
<para>Converts error to string message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="181" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_error_capacity_exceeded_1a4f7d621499d6889adfe3b8a0a130c892" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PcpErrorCapacityExceeded</definition>
        <argsstring>(PcpErrorType errorType)</argsstring>
        <name>PcpErrorCapacityExceeded</name>
        <param>
          <type>PcpErrorType</type>
          <declname>errorType</declname>
        </param>
        <briefdescription>
<para>Constructor is private. Use <ref refid="class_pcp_error_capacity_exceeded_1a564cbf14425f53eae8712e1e59cf3803" kindref="member">New()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="185" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Exceeded the capacity for composition arcs at a single site. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4512">
        <label>PcpErrorBase</label>
        <link refid="class_pcp_error_base"/>
      </node>
      <node id="4511">
        <label>PcpErrorCapacityExceeded</label>
        <link refid="class_pcp_error_capacity_exceeded"/>
        <childnode refid="4512" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4514">
        <label>PcpErrorBase</label>
        <link refid="class_pcp_error_base"/>
        <childnode refid="4515" relation="usage">
          <edgelabel>rootSite</edgelabel>
        </childnode>
      </node>
      <node id="4515">
        <label>PcpSite</label>
        <link refid="class_pcp_site"/>
        <childnode refid="4516" relation="usage">
          <edgelabel>layerStackIdentifier</edgelabel>
        </childnode>
        <childnode refid="4519" relation="usage">
          <edgelabel>path</edgelabel>
        </childnode>
      </node>
      <node id="4519">
        <label>SdfPath</label>
        <link refid="class_sdf_path"/>
      </node>
      <node id="4518">
        <label>ArResolverContext</label>
        <link refid="class_ar_resolver_context"/>
      </node>
      <node id="4516">
        <label>PcpLayerStackIdentifier</label>
        <link refid="class_pcp_layer_stack_identifier"/>
        <childnode refid="4517" relation="usage">
          <edgelabel>expressionVariablesOverrideSource</edgelabel>
        </childnode>
        <childnode refid="4518" relation="usage">
          <edgelabel>pathResolverContext</edgelabel>
        </childnode>
      </node>
      <node id="4517">
        <label>PcpExpressionVariablesSource</label>
        <link refid="class_pcp_expression_variables_source"/>
      </node>
      <node id="4513">
        <label>PcpErrorCapacityExceeded</label>
        <link refid="class_pcp_error_capacity_exceeded"/>
        <childnode refid="4514" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/pcp/errors.h" line="174" column="1" bodyfile="pxr/usd/pcp/errors.h" bodystart="174" bodyend="186"/>
    <listofallmembers>
      <member refid="class_pcp_error_base_1af0c36d3b2b60f40635b5ace0f81b4bd9" prot="public" virt="non-virtual"><scope>PcpErrorCapacityExceeded</scope><name>errorType</name></member>
      <member refid="class_pcp_error_capacity_exceeded_1a564cbf14425f53eae8712e1e59cf3803" prot="public" virt="non-virtual"><scope>PcpErrorCapacityExceeded</scope><name>New</name></member>
      <member refid="class_pcp_error_base_1ace9c7e042b8d107893820423077007bb" prot="protected" virt="non-virtual"><scope>PcpErrorCapacityExceeded</scope><name>PcpErrorBase</name></member>
      <member refid="class_pcp_error_capacity_exceeded_1a4f7d621499d6889adfe3b8a0a130c892" prot="private" virt="non-virtual"><scope>PcpErrorCapacityExceeded</scope><name>PcpErrorCapacityExceeded</name></member>
      <member refid="class_pcp_error_base_1ab16f7fd8acbb01e5e25606feeae63e43" prot="public" virt="non-virtual"><scope>PcpErrorCapacityExceeded</scope><name>rootSite</name></member>
      <member refid="class_pcp_error_capacity_exceeded_1aa5ddec63c216bb23704d33a73efae798" prot="public" virt="virtual"><scope>PcpErrorCapacityExceeded</scope><name>ToString</name></member>
      <member refid="class_pcp_error_base_1a2a6a9d97af335d20059cf598da17200e" prot="public" virt="virtual"><scope>PcpErrorCapacityExceeded</scope><name>~PcpErrorBase</name></member>
      <member refid="class_pcp_error_capacity_exceeded_1ac7b66a7b99509bfa1599820c92b5ae55" prot="public" virt="non-virtual"><scope>PcpErrorCapacityExceeded</scope><name>~PcpErrorCapacityExceeded</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
