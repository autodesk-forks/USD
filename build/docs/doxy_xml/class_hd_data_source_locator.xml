<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_data_source_locator" kind="class" language="C++" prot="public">
    <compoundname>HdDataSourceLocator</compoundname>
    <includes refid="data_source_locator_8h" local="no">dataSourceLocator.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_data_source_locator_1a4940173dbf67c286e932b8825b3c2e72" prot="private" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, 6 &gt;</type>
        <definition>using _TokenVector =  TfSmallVector&lt;TfToken, 6&gt;</definition>
        <argsstring></argsstring>
        <name>_TokenVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="207" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_data_source_locator_1ac4920150822472aef45dbe5ea49b6b45" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">_TokenVector</ref></type>
        <definition>_TokenVector _tokens</definition>
        <argsstring></argsstring>
        <name>_tokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="208" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_data_source_locator_1a380a6435d590bbc3b0cd13bda390580e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; EmptyLocator</definition>
        <argsstring>()</argsstring>
        <name>EmptyLocator</name>
        <briefdescription>
<para>Returns a common empty locator. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an often needed locator and is quicker to get this way rather than creating your own empty one. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_data_source_locator_1a3310c716183f31714a4b1d98e78ee9b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>()</argsstring>
        <name>HdDataSourceLocator</name>
        <briefdescription>
<para>Creates an empty locator. </para>
        </briefdescription>
        <detaileddescription>
<para>If all you need is an empty locator, see <ref refid="class_hd_data_source_locator_1a380a6435d590bbc3b0cd13bda390580e" kindref="member">EmptyLocator()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a0d35ff55ead2b55b9c9582c7cd5c8c1a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(const TfToken &amp;t1)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
<para>The following constructors take a number of tokens and build a locator with the apporpriate number of tokens in the given order. </para>
        </briefdescription>
        <detaileddescription>
<para>These are convenience constructors for commonly used patterns. Note that we generally expect a very small number of entities in a locator, which is why we haven&apos;t gone with a more general N-way solution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a8f53050aebc96ea52af6b61e39369c1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(const TfToken &amp;t1, const TfToken &amp;t2)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a5d4ab7f2cf4b450eddd3dbdde3d3290b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(const TfToken &amp;t1, const TfToken &amp;t2, const TfToken &amp;t3)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1aeb2cb56038dca813efe452006b2ded9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(const TfToken &amp;t1, const TfToken &amp;t2, const TfToken &amp;t3, const TfToken &amp;t4)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t3</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a57250f32a60b58e1907f3d8da5a4dde4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(const TfToken &amp;t1, const TfToken &amp;t2, const TfToken &amp;t3, const TfToken &amp;t4, const TfToken &amp;t5)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t3</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t4</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a15e09d2f9e0c4fc56c902d1e56a0ad2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(const TfToken &amp;t1, const TfToken &amp;t2, const TfToken &amp;t3, const TfToken &amp;t4, const TfToken &amp;t5, const TfToken &amp;t6)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t3</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t4</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t5</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>t6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1ab66a73d3b9a7f7661e2bd8fd9a2312b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocator</definition>
        <argsstring>(size_t count, const TfToken *tokens)</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> *</type>
          <declname>tokens</declname>
        </param>
        <briefdescription>
<para>Builds a data source locator from the <computeroutput>tokens</computeroutput> array of the given <computeroutput>count</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a9cb8405f5d085f0c534ae7a297de8d23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdDataSourceLocator</definition>
        <argsstring>(const HdDataSourceLocator &amp;rhs)=default</argsstring>
        <name>HdDataSourceLocator</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a334f76dec300aa5c49583cfa4e6fc065" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API size_t</type>
        <definition>HD_API size_t GetElementCount</definition>
        <argsstring>() const</argsstring>
        <name>GetElementCount</name>
        <briefdescription>
<para>Returns the number of elements (tokens) in this data source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a2dc185e3150f40ac82f8dba53946c182" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>HD_API const TfToken&amp; GetElement</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>GetElement</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the element (token) at index <computeroutput>i</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>i</computeroutput> is out of bounds, the behavior is undefined. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a4ee5b0aa4217e0ba6d4fc45cf8e34406" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>HD_API const TfToken&amp; GetFirstElement</definition>
        <argsstring>() const</argsstring>
        <name>GetFirstElement</name>
        <briefdescription>
<para>Returns the first element, or empty token if none. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a4bbe27bd31a69e711323ed84c7969cb4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>HD_API const TfToken&amp; GetLastElement</definition>
        <argsstring>() const</argsstring>
        <name>GetLastElement</name>
        <briefdescription>
<para>Returns the last element, or empty token if none. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1ab0e40583456a53369025d8841b887ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator ReplaceLastElement</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>ReplaceLastElement</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns a copy of this data source locator with the last element replaced by the one given by <computeroutput>name</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If this data source locator is empty an identical copy is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a6350907d676fed53dae012a06ec0090a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator RemoveLastElement</definition>
        <argsstring>() const</argsstring>
        <name>RemoveLastElement</name>
        <briefdescription>
<para>Returns a copy of this data source locator with the last element removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1aabd95ecf22058c029c33455529861a42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator RemoveFirstElement</definition>
        <argsstring>() const</argsstring>
        <name>RemoveFirstElement</name>
        <briefdescription>
<para>Returns a copy of this data source locator with the first element removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a1575c64d6616772cbd3a52cd3e8dcaad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator Append</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>Append</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Appends <computeroutput>name</computeroutput> to this data source locator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a338cb424b776952ea4372ccb796b4c35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator Append</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator) const</argsstring>
        <name>Append</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
<para>Appends all of the elements in <computeroutput>locator</computeroutput> to this data source locator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a227b45002af0bd206dbc5a31b73c291d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator Prepend</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>Prepend</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Prepends <computeroutput>name</computeroutput> to this data source locator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1ad652a293a61937d9b1fe6819de2bf5f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator Prepend</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator) const</argsstring>
        <name>Prepend</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
<para>Prepends all of the elements in <computeroutput>locator</computeroutput> to this data source locator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a592f3c9581d65d9b8eb823e76a3ebf69" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool HasPrefix</definition>
        <argsstring>(const HdDataSourceLocator &amp;prefix) const</argsstring>
        <name>HasPrefix</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if and only if this data source locator has <computeroutput>prefix</computeroutput> as a prefix. </para>
        </briefdescription>
        <detaileddescription>
<para>In particular, returns <computeroutput>true</computeroutput> if this locator is equal to <computeroutput>prefix</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a9481de3dbb1134851033de8db84e9747" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator GetCommonPrefix</definition>
        <argsstring>(const HdDataSourceLocator &amp;other) const</argsstring>
        <name>GetCommonPrefix</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns a data source locator that represents the common prefix between this data source and <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a74d8330484b8820c61fca41b5fa66a7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref></type>
        <definition>HD_API HdDataSourceLocator ReplacePrefix</definition>
        <argsstring>(const HdDataSourceLocator &amp;oldPrefix, const HdDataSourceLocator &amp;newPrefix) const</argsstring>
        <name>ReplacePrefix</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>oldPrefix</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>newPrefix</declname>
        </param>
        <briefdescription>
<para>Returns a copy of this data source locator with <computeroutput>oldPrefix</computeroutput> replaced by <computeroutput>newPrefix</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a328f3d3c60ae666a58f1be91cddbfc73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool Intersects</definition>
        <argsstring>(const HdDataSourceLocator &amp;other) const</argsstring>
        <name>Intersects</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if and only if either of the two locators is a prefix of the other one - in the sense of HasPrefix. </para>
        </briefdescription>
        <detaileddescription>
<para>In particular, it is true if the two locators are equal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a20e5699116fda4ea9cf4637b088cbb4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const HdDataSourceLocator &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="177" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1acd05219c78f2260b8338d6236ec0f6e1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const HdDataSourceLocator &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="181" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1ae8be11fee0f503b15a8199ecabcc4aa8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator&lt;</definition>
        <argsstring>(const HdDataSourceLocator &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Lexicographic order. If y has x as prefix, x &lt; y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1a8e12342fc420701fbffd97025421575a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="189" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1aae5410b786a43182361c14bd0174ead7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API std::string</type>
        <definition>HD_API std::string GetString</definition>
        <argsstring>(const char *delimiter=&quot;/&quot;) const</argsstring>
        <name>GetString</name>
        <param>
          <type>const char *</type>
          <declname>delimiter</declname>
          <defval>&quot;/&quot;</defval>
        </param>
        <briefdescription>
<para>Returns a string representation of this data source locator with the given <computeroutput>delimiter</computeroutput> inserted between each element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_1ac43e0b9c3df70959ccafb5932818843b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Hash</definition>
        <argsstring>() const</argsstring>
        <name>Hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="204" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="212" bodyend="215"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_hd_data_source_locator_1a8c049712200434889956ebb055ab862b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HashState</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void TfHashAppend</definition>
        <argsstring>(HashState &amp;h, HdDataSourceLocator const &amp;myObj)</argsstring>
        <name>TfHashAppend</name>
        <param>
          <type>HashState &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> const &amp;</type>
          <declname>myObj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="200" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="200" bodyend="202"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an object that can identify the location of a data source. </para>
    </briefdescription>
    <detaileddescription>
<para>Data Source Locators are meant to be short lists of tokens that, taken together, can represent the location of a given data source. </para>
    </detaileddescription>
    <location file="pxr/imaging/hd/dataSourceLocator.h" line="45" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="44" bodyend="209"/>
    <listofallmembers>
      <member refid="class_hd_data_source_locator_1ac4920150822472aef45dbe5ea49b6b45" prot="private" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>_tokens</name></member>
      <member refid="class_hd_data_source_locator_1a4940173dbf67c286e932b8825b3c2e72" prot="private" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>_TokenVector</name></member>
      <member refid="class_hd_data_source_locator_1a1575c64d6616772cbd3a52cd3e8dcaad" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>Append</name></member>
      <member refid="class_hd_data_source_locator_1a338cb424b776952ea4372ccb796b4c35" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>Append</name></member>
      <member refid="class_hd_data_source_locator_1a380a6435d590bbc3b0cd13bda390580e" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>EmptyLocator</name></member>
      <member refid="class_hd_data_source_locator_1a9481de3dbb1134851033de8db84e9747" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>GetCommonPrefix</name></member>
      <member refid="class_hd_data_source_locator_1a2dc185e3150f40ac82f8dba53946c182" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>GetElement</name></member>
      <member refid="class_hd_data_source_locator_1a334f76dec300aa5c49583cfa4e6fc065" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>GetElementCount</name></member>
      <member refid="class_hd_data_source_locator_1a4ee5b0aa4217e0ba6d4fc45cf8e34406" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>GetFirstElement</name></member>
      <member refid="class_hd_data_source_locator_1a4bbe27bd31a69e711323ed84c7969cb4" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>GetLastElement</name></member>
      <member refid="class_hd_data_source_locator_1aae5410b786a43182361c14bd0174ead7" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>GetString</name></member>
      <member refid="class_hd_data_source_locator_1ac43e0b9c3df70959ccafb5932818843b" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>Hash</name></member>
      <member refid="class_hd_data_source_locator_1a592f3c9581d65d9b8eb823e76a3ebf69" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HasPrefix</name></member>
      <member refid="class_hd_data_source_locator_1a3310c716183f31714a4b1d98e78ee9b0" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a0d35ff55ead2b55b9c9582c7cd5c8c1a" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a8f53050aebc96ea52af6b61e39369c1c" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a5d4ab7f2cf4b450eddd3dbdde3d3290b" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1aeb2cb56038dca813efe452006b2ded9d" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a57250f32a60b58e1907f3d8da5a4dde4" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a15e09d2f9e0c4fc56c902d1e56a0ad2b" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1ab66a73d3b9a7f7661e2bd8fd9a2312b1" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a9cb8405f5d085f0c534ae7a297de8d23" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>HdDataSourceLocator</name></member>
      <member refid="class_hd_data_source_locator_1a328f3d3c60ae666a58f1be91cddbfc73" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>Intersects</name></member>
      <member refid="class_hd_data_source_locator_1a8e12342fc420701fbffd97025421575a" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>IsEmpty</name></member>
      <member refid="class_hd_data_source_locator_1acd05219c78f2260b8338d6236ec0f6e1" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>operator!=</name></member>
      <member refid="class_hd_data_source_locator_1ae8be11fee0f503b15a8199ecabcc4aa8" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>operator&lt;</name></member>
      <member refid="class_hd_data_source_locator_1a20e5699116fda4ea9cf4637b088cbb4e" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>operator==</name></member>
      <member refid="class_hd_data_source_locator_1a227b45002af0bd206dbc5a31b73c291d" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>Prepend</name></member>
      <member refid="class_hd_data_source_locator_1ad652a293a61937d9b1fe6819de2bf5f5" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>Prepend</name></member>
      <member refid="class_hd_data_source_locator_1aabd95ecf22058c029c33455529861a42" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>RemoveFirstElement</name></member>
      <member refid="class_hd_data_source_locator_1a6350907d676fed53dae012a06ec0090a" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>RemoveLastElement</name></member>
      <member refid="class_hd_data_source_locator_1ab0e40583456a53369025d8841b887ac9" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>ReplaceLastElement</name></member>
      <member refid="class_hd_data_source_locator_1a74d8330484b8820c61fca41b5fa66a7f" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>ReplacePrefix</name></member>
      <member refid="class_hd_data_source_locator_1a8c049712200434889956ebb055ab862b" prot="public" virt="non-virtual"><scope>HdDataSourceLocator</scope><name>TfHashAppend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
