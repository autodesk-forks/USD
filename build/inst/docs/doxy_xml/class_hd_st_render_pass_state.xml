<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_render_pass_state" kind="class" language="C++" prot="public">
    <compoundname>HdStRenderPassState</compoundname>
    <basecompoundref refid="class_hd_render_pass_state" prot="public" virt="non-virtual">HdRenderPassState</basecompoundref>
    <includes refid="t_2render_pass_state_8h" local="no">renderPassState.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_st_render_pass_state_1ad5bb3ab988d5bcb3567034d9b4a5ea3c" prot="public" static="no">
        <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>using AxisAlignedAffineTransform =  GfVec4f</definition>
        <argsstring></argsstring>
        <name>AxisAlignedAffineTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="206" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1ae33a9653911635d3772988f64ca4032b" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _worldToViewMatrix</definition>
        <argsstring></argsstring>
        <name>_worldToViewMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="248" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a52a85566cc858af240e9191128307840" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _projectionMatrix</definition>
        <argsstring></argsstring>
        <name>_projectionMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="249" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1aa586da74f3cd1799106fad0f6f37419b" prot="private" static="no" mutable="no">
        <type>ClipPlanesVector</type>
        <definition>ClipPlanesVector _clipPlanes</definition>
        <argsstring></argsstring>
        <name>_clipPlanes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="250" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a82f16ef691bb4d154190bfd1af1dc68a" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _cullMatrix</definition>
        <argsstring></argsstring>
        <name>_cullMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="252" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a6680920dbcf3857ce499fa6a91aeb5de" prot="private" static="no" mutable="no">
        <type>HdStRenderPassShaderSharedPtr</type>
        <definition>HdStRenderPassShaderSharedPtr _renderPassShader</definition>
        <argsstring></argsstring>
        <name>_renderPassShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="257" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a9a7591f5db701025c27ea8b6be9a423a" prot="private" static="no" mutable="no">
        <type>HdSt_FallbackLightingShaderSharedPtr</type>
        <definition>HdSt_FallbackLightingShaderSharedPtr _fallbackLightingShader</definition>
        <argsstring></argsstring>
        <name>_fallbackLightingShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="258" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1aad2b0b3d276fdb662ce4158f90f21d02" prot="private" static="no" mutable="no">
        <type>HdStLightingShaderSharedPtr</type>
        <definition>HdStLightingShaderSharedPtr _lightingShader</definition>
        <argsstring></argsstring>
        <name>_lightingShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="259" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a155e0f7bd44e120eb70903052af5c7da" prot="private" static="no" mutable="no">
        <type>HdBufferArrayRangeSharedPtr</type>
        <definition>HdBufferArrayRangeSharedPtr _renderPassStateBar</definition>
        <argsstring></argsstring>
        <name>_renderPassStateBar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="261" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a3f634e9bc591cdbf8b475c8d3e3a0ecb" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _clipPlanesBufferSize</definition>
        <argsstring></argsstring>
        <name>_clipPlanesBufferSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="262" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1a5b26d4103fe09a0713230a898606e5ea" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float _alphaThresholdCurrent</definition>
        <argsstring></argsstring>
        <name>_alphaThresholdCurrent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="263" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1ac2b01c3ec279bc7e49cbbebe3b79dc4d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _resolveMultiSampleAov</definition>
        <argsstring></argsstring>
        <name>_resolveMultiSampleAov</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="264" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_state_1abdbdc8c564ae8c689c7e9eedead88e56" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _useSceneMaterials</definition>
        <argsstring></argsstring>
        <name>_useSceneMaterials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="265" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_render_pass_state_1ad9eb5711eec92544191c8bd341f29341" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStRenderPassState</definition>
        <argsstring>()</argsstring>
        <name>HdStRenderPassState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a9ad6fd79578fc946a5c021e927aeec4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStRenderPassState</definition>
        <argsstring>(HdStRenderPassShaderSharedPtr const &amp;shader)</argsstring>
        <name>HdStRenderPassState</name>
        <param>
          <type>HdStRenderPassShaderSharedPtr const &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a297bcae4be6234eb16533dbe5f212e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStRenderPassState</definition>
        <argsstring>() override</argsstring>
        <name>~HdStRenderPassState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a880afdd1f2b726bd60c5d8cf1b34cdaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Prepare</definition>
        <argsstring>(HdResourceRegistrySharedPtr const &amp;resourceRegistry) override</argsstring>
        <name>Prepare</name>
        <reimplements refid="class_hd_render_pass_state_1a41dc34261da51055856f7a6a3da393c8">Prepare</reimplements>
        <param>
          <type>HdResourceRegistrySharedPtr const &amp;</type>
          <declname>resourceRegistry</declname>
        </param>
        <briefdescription>
<para>Schedule to update renderPassState parameters. </para>
        </briefdescription>
        <detaileddescription>
<para>e.g. camera matrix, override color, id blend factor. Prepare, called once per frame after the sync phase, but prior to the commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1adb187599f5dcc1d137c5b1560b4d2b8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Bind</definition>
        <argsstring>(HgiCapabilities const &amp;hgiCapabilities)</argsstring>
        <name>Bind</name>
        <param>
          <type><ref refid="class_hgi_capabilities" kindref="compound">HgiCapabilities</ref> const &amp;</type>
          <declname>hgiCapabilities</declname>
        </param>
        <briefdescription>
<para>XXX: Bind and Unbind set. </para>
        </briefdescription>
        <detaileddescription>
<para>/restore the following GL state. This will be reworked to use <ref refid="class_hgi" kindref="compound">Hgi</ref> in the near future. Following states may be changed and restored to the GL default at Unbind(). glEnable(GL_BLEND); glEnable(GL_CULL_FACE); glEnable(GL_POLYGON_OFFSET_FILL) glEnable(GL_PROGRAM_POINT_SIZE); glEnable(GL_SAMPLE_ALPHA_TO_COVERAGE) glEnable(GL_DEPTH_TEST); glEnable(GL_STENCIL_TEST); glPolygonOffset() glBlend*() glColorMask() glCullFace() glDepthFunc() glDepthMask() glLineWidth() glStencilFunc() glStencilOp() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a3f570efabb29724a309e350c4578562c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Unbind</definition>
        <argsstring>(HgiCapabilities const &amp;hgiCapabilities)</argsstring>
        <name>Unbind</name>
        <param>
          <type><ref refid="class_hgi_capabilities" kindref="compound">HgiCapabilities</ref> const &amp;</type>
          <declname>hgiCapabilities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a437b2b4ad98d63ac01186f9553f5f67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetResolveAovMultiSample</definition>
        <argsstring>(bool state)</argsstring>
        <name>SetResolveAovMultiSample</name>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>If set to true (default) and the render pass is rendering into a multi-sampled aovs, the aovs will be resolved at the end of the render pass. </para>
        </briefdescription>
        <detaileddescription>
<para>If false or the aov is not multi-sampled or the render pass is not rendering into the multi-sampled aov, no resolution takes place. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a300f1f63293463995fcd8f29aa9e3b6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool GetResolveAovMultiSample</definition>
        <argsstring>() const</argsstring>
        <name>GetResolveAovMultiSample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a7c7d10701af4dd6e610fe3079de9b751" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetLightingShader</definition>
        <argsstring>(HdStLightingShaderSharedPtr const &amp;lightingShader)</argsstring>
        <name>SetLightingShader</name>
        <param>
          <type>HdStLightingShaderSharedPtr const &amp;</type>
          <declname>lightingShader</declname>
        </param>
        <briefdescription>
<para>Set lighting shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a12908c9f37b76690ec90336bf8cc6ce8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStLightingShaderSharedPtr const  &amp;</type>
        <definition>HdStLightingShaderSharedPtr const&amp; GetLightingShader</definition>
        <argsstring>() const</argsstring>
        <name>GetLightingShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="116" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a0096f5ff163ed55ddbd89200cb36cf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetRenderPassShader</definition>
        <argsstring>(HdStRenderPassShaderSharedPtr const &amp;renderPassShader)</argsstring>
        <name>SetRenderPassShader</name>
        <param>
          <type>HdStRenderPassShaderSharedPtr const &amp;</type>
          <declname>renderPassShader</declname>
        </param>
        <briefdescription>
<para>renderpass shader </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a56694e15e1d33f64f023934255ac61a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStRenderPassShaderSharedPtr const  &amp;</type>
        <definition>HdStRenderPassShaderSharedPtr const&amp; GetRenderPassShader</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderPassShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="123" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a6358147461ee8181b4a823fd0810dfa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void ApplyStateFromGeometricShader</definition>
        <argsstring>(HdSt_ResourceBinder const &amp;binder, HdSt_GeometricShaderSharedPtr const &amp;geometricShader)</argsstring>
        <name>ApplyStateFromGeometricShader</name>
        <param>
          <type>HdSt_ResourceBinder const &amp;</type>
          <declname>binder</declname>
        </param>
        <param>
          <type>HdSt_GeometricShaderSharedPtr const &amp;</type>
          <declname>geometricShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1af3078065b4ca4667729d15c54b66976e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void ApplyStateFromCamera</definition>
        <argsstring>()</argsstring>
        <name>ApplyStateFromCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1ab2ba860d578c12c1d5f9defd154f1965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetUseSceneMaterials</definition>
        <argsstring>(bool state)</argsstring>
        <name>SetUseSceneMaterials</name>
        <param>
          <type>bool</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>scene materials </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1abdd9eca20dc64b01ef90719fcfc2d150" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetUseSceneMaterials</definition>
        <argsstring>() const</argsstring>
        <name>GetUseSceneMaterials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="138" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a80da2c286f2f673cafefe9e9cb8b787c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStShaderCodeSharedPtrVector</type>
        <definition>HDST_API HdStShaderCodeSharedPtrVector GetShaders</definition>
        <argsstring>() const</argsstring>
        <name>GetShaders</name>
        <briefdescription>
<para>returns shaders (lighting/renderpass) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a45161007af73f20c3740825eacca4e83" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API size_t</type>
        <definition>HDST_API size_t GetShaderHash</definition>
        <argsstring>() const</argsstring>
        <name>GetShaderHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a8721c22d8b54f10d26b833815882f4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetCameraFramingState</definition>
        <argsstring>(GfMatrix4d const &amp;worldToViewMatrix, GfMatrix4d const &amp;projectionMatrix, GfVec4d const &amp;viewport, ClipPlanesVector const &amp;clipPlanes)</argsstring>
        <name>SetCameraFramingState</name>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>worldToViewMatrix</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>projectionMatrix</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>viewport</declname>
        </param>
        <param>
          <type>ClipPlanesVector const &amp;</type>
          <declname>clipPlanes</declname>
        </param>
        <briefdescription>
<para>Camera setter API. </para>
        </briefdescription>
        <detaileddescription>
<para>Set matrices, viewport and clipping planes explicitly that are used when there is no <ref refid="class_hd_camera" kindref="compound">HdCamera</ref> in the render pass state.</para>
<para>This is used by render pass that do not have an associated <ref refid="class_hd_camera" kindref="compound">HdCamera</ref> such as the shadow render pass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1aa24a25fa8a9ab10a39fa95117eba833c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d GetCullMatrix</definition>
        <argsstring>() const</argsstring>
        <name>GetCullMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="162" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a556e090ac0716e1ba457e39290b02a45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>HDST_API GfMatrix4d GetWorldToViewMatrix</definition>
        <argsstring>() const override</argsstring>
        <name>GetWorldToViewMatrix</name>
        <reimplements refid="class_hd_render_pass_state_1aff741205af587bfc3b2b3dca6b8677ed">GetWorldToViewMatrix</reimplements>
        <briefdescription>
<para>Overrides the case when no <ref refid="class_hd_camera" kindref="compound">HdCamera</ref> is given. </para>
        </briefdescription>
        <detaileddescription>
<para>In the case, uses matrix specified by SetCameraFramingState. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1ae9c1b9bbe80104012a33256d04af8f93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>HDST_API GfMatrix4d GetProjectionMatrix</definition>
        <argsstring>() const override</argsstring>
        <name>GetProjectionMatrix</name>
        <reimplements refid="class_hd_render_pass_state_1a9fbad4830989cbbdcebcf67aede821c7">GetProjectionMatrix</reimplements>
        <briefdescription>
<para>Overrides the case when no <ref refid="class_hd_camera" kindref="compound">HdCamera</ref> is given. </para>
        </briefdescription>
        <detaileddescription>
<para>In the case, uses matrix specified by SetCameraFramingState. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a03384756cd16ea5443a655e1fa47ef9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API ClipPlanesVector const  &amp;</type>
        <definition>HDST_API ClipPlanesVector const&amp; GetClipPlanes</definition>
        <argsstring>() const override</argsstring>
        <name>GetClipPlanes</name>
        <reimplements refid="class_hd_render_pass_state_1a4664ead9f358c19107c2ad636b4f6d33">GetClipPlanes</reimplements>
        <briefdescription>
<para>Overrides the case when no <ref refid="class_hd_camera" kindref="compound">HdCamera</ref> is given. </para>
        </briefdescription>
        <detaileddescription>
<para>In the case, uses clip planes specified by SetCameraFramingState. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a808c222a3da39b37657e6739cb619768" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref></type>
        <definition>HDST_API GfVec4i ComputeViewport</definition>
        <argsstring>() const</argsstring>
        <name>ComputeViewport</name>
        <briefdescription>
<para>Helper to compute and get the y-up Viewport This is either using the modern camera framing, which is always y-down, or the legacy viewport. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a6cbdb3962be636c86633b75809cb8fec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="struct_hgi_graphics_cmds_desc" kindref="compound">HgiGraphicsCmdsDesc</ref></type>
        <definition>HDST_API HgiGraphicsCmdsDesc MakeGraphicsCmdsDesc</definition>
        <argsstring>(HdRenderIndex const *renderIndex) const</argsstring>
        <name>MakeGraphicsCmdsDesc</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> const *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a3eeb48c12912e5366ea6356f950d0493" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void InitGraphicsPipelineDesc</definition>
        <argsstring>(HgiGraphicsPipelineDesc *pipeDesc, HdSt_GeometricShaderSharedPtr const &amp;geometricShader) const</argsstring>
        <name>InitGraphicsPipelineDesc</name>
        <param>
          <type><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> *</type>
          <declname>pipeDesc</declname>
        </param>
        <param>
          <type>HdSt_GeometricShaderSharedPtr const &amp;</type>
          <declname>geometricShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1aeb1b412af00ac72a97aab968ce45de8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API uint64_t</type>
        <definition>HDST_API uint64_t GetGraphicsPipelineHash</definition>
        <argsstring>(HdSt_GeometricShaderSharedPtr const &amp;geometricShader) const</argsstring>
        <name>GetGraphicsPipelineHash</name>
        <param>
          <type>HdSt_GeometricShaderSharedPtr const &amp;</type>
          <declname>geometricShader</declname>
        </param>
        <briefdescription>
<para>Generates the hash for the settings used to init the graphics pipeline. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a46314f0cf0d24b46dfee3889a8b02466" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_gf_vec4f" kindref="compound">AxisAlignedAffineTransform</ref></type>
        <definition>HDST_API AxisAlignedAffineTransform ComputeImageToHorizontallyNormalizedFilmback</definition>
        <argsstring>() const</argsstring>
        <name>ComputeImageToHorizontallyNormalizedFilmback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="219" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a6f67232ed26753ca5f650afdf0b0d0df" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _UseAlphaMask</definition>
        <argsstring>() const</argsstring>
        <name>_UseAlphaMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a2b76fe9efa401b71c803c81851f1eb95" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int _GetFramebufferHeight</definition>
        <argsstring>() const</argsstring>
        <name>_GetFramebufferHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a80aa543e7f675182276276783ee2a87e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref></type>
        <definition>GfRange2f _ComputeFlippedFilmbackWindow</definition>
        <argsstring>() const</argsstring>
        <name>_ComputeFlippedFilmbackWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a5558d85e1b03eb38640d28d7a6933232" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitAttachmentDesc</definition>
        <argsstring>(HgiAttachmentDesc &amp;attachmentDesc, HdRenderPassAovBinding const &amp;binding, HdRenderBuffer const *renderBuffer, int aovIndex) const</argsstring>
        <name>_InitAttachmentDesc</name>
        <param>
          <type><ref refid="struct_hgi_attachment_desc" kindref="compound">HgiAttachmentDesc</ref> &amp;</type>
          <declname>attachmentDesc</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_render_pass_aov_binding" kindref="compound">HdRenderPassAovBinding</ref> const &amp;</type>
          <declname>binding</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_buffer" kindref="compound">HdRenderBuffer</ref> const *</type>
          <declname>renderBuffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>aovIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1ab67427faf3eae206da89175a4972ec06" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitPrimitiveState</definition>
        <argsstring>(HgiGraphicsPipelineDesc *pipeDesc, HdSt_GeometricShaderSharedPtr const &amp;geometricShader) const</argsstring>
        <name>_InitPrimitiveState</name>
        <param>
          <type><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> *</type>
          <declname>pipeDesc</declname>
        </param>
        <param>
          <type>HdSt_GeometricShaderSharedPtr const &amp;</type>
          <declname>geometricShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1ae8224a042f86416b2bdffd76cd48f034" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitAttachmentState</definition>
        <argsstring>(HgiGraphicsPipelineDesc *pipeDesc) const</argsstring>
        <name>_InitAttachmentState</name>
        <param>
          <type><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> *</type>
          <declname>pipeDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a6f4a57a24a26f0bd66115f689ba833aa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitDepthStencilState</definition>
        <argsstring>(HgiDepthStencilState *depthState) const</argsstring>
        <name>_InitDepthStencilState</name>
        <param>
          <type><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref> *</type>
          <declname>depthState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1ac499909e584a96b618440d7fd6f2f049" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitMultiSampleState</definition>
        <argsstring>(HgiMultiSampleState *multisampleState) const</argsstring>
        <name>_InitMultiSampleState</name>
        <param>
          <type><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref> *</type>
          <declname>multisampleState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_state_1a0611b37f22fb4a14ed5966942b898f1d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitRasterizationState</definition>
        <argsstring>(HgiRasterizationState *rasterizationState, HdSt_GeometricShaderSharedPtr const &amp;geometricShader) const</argsstring>
        <name>_InitRasterizationState</name>
        <param>
          <type><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref> *</type>
          <declname>rasterizationState</declname>
        </param>
        <param>
          <type>HdSt_GeometricShaderSharedPtr const &amp;</type>
          <declname>geometricShader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassState.h" line="240" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A set of rendering parameters used among render passes. </para>
    </briefdescription>
    <detaileddescription>
<para>Parameters are expressed as GL states, uniforms or shaders. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3292">
        <label>HdRenderPassState</label>
        <link refid="class_hd_render_pass_state"/>
      </node>
      <node id="3291">
        <label>HdStRenderPassState</label>
        <link refid="class_hd_st_render_pass_state"/>
        <childnode refid="3292" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3298">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="3301">
        <label>GfRange1f</label>
        <link refid="class_gf_range1f"/>
      </node>
      <node id="3300">
        <label>GfMatrix4d</label>
        <link refid="class_gf_matrix4d"/>
      </node>
      <node id="3299">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="3297">
        <label>HdCamera</label>
        <link refid="class_hd_camera"/>
        <childnode refid="3298" relation="public-inheritance">
        </childnode>
        <childnode refid="3296" relation="usage">
          <edgelabel>_lensDistortionAsym</edgelabel>
          <edgelabel>_lensDistortionCenter</edgelabel>
        </childnode>
        <childnode refid="3299" relation="usage">
          <edgelabel>_lensDistortionType</edgelabel>
        </childnode>
        <childnode refid="3300" relation="usage">
          <edgelabel>_transform</edgelabel>
        </childnode>
        <childnode refid="3301" relation="usage">
          <edgelabel>_clippingRange</edgelabel>
        </childnode>
      </node>
      <node id="3296">
        <label>GfVec2f</label>
        <link refid="class_gf_vec2f"/>
      </node>
      <node id="3295">
        <label>GfVec4f</label>
        <link refid="class_gf_vec4f"/>
      </node>
      <node id="3302">
        <label>CameraUtilFraming</label>
        <link refid="class_camera_util_framing"/>
        <childnode refid="3303" relation="usage">
          <edgelabel>displayWindow</edgelabel>
        </childnode>
        <childnode refid="3304" relation="usage">
          <edgelabel>dataWindow</edgelabel>
        </childnode>
      </node>
      <node id="3294">
        <label>HdRenderPassState</label>
        <link refid="class_hd_render_pass_state"/>
        <childnode refid="3295" relation="usage">
          <edgelabel>_blendConstantColor</edgelabel>
          <edgelabel>_overrideColor</edgelabel>
          <edgelabel>_indicatorColor</edgelabel>
          <edgelabel>_pointColor</edgelabel>
          <edgelabel>_wireframeColor</edgelabel>
          <edgelabel>_maskColor</edgelabel>
          <edgelabel>_viewport</edgelabel>
        </childnode>
        <childnode refid="3296" relation="usage">
          <edgelabel>_depthRange</edgelabel>
          <edgelabel>_drawRange</edgelabel>
        </childnode>
        <childnode refid="3297" relation="usage">
          <edgelabel>_camera</edgelabel>
        </childnode>
        <childnode refid="3302" relation="usage">
          <edgelabel>_framing</edgelabel>
        </childnode>
      </node>
      <node id="3293">
        <label>HdStRenderPassState</label>
        <link refid="class_hd_st_render_pass_state"/>
        <childnode refid="3294" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3304">
        <label>GfRect2i</label>
        <link refid="class_gf_rect2i"/>
      </node>
      <node id="3303">
        <label>GfRange2f</label>
        <link refid="class_gf_range2f"/>
        <childnode refid="3303" relation="usage">
          <edgelabel>UnitSquare</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/renderPassState.h" line="66" column="1" bodyfile="pxr/imaging/hdSt/renderPassState.h" bodystart="65" bodyend="266"/>
    <listofallmembers>
      <member refid="class_hd_render_pass_state_1a568ec7fc714141771eab1da5922ab09f" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_alphaThreshold</name></member>
      <member refid="class_hd_st_render_pass_state_1a5b26d4103fe09a0713230a898606e5ea" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_alphaThresholdCurrent</name></member>
      <member refid="class_hd_render_pass_state_1ad9e3bc168e57f93bad964391d5e7976c" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_alphaToCoverageEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a21cece5f580f5106d1a7783e4a47bccd" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_aovBindings</name></member>
      <member refid="class_hd_render_pass_state_1af56546f99e6def66c0fb28af514afc2b" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_aovInputBindings</name></member>
      <member refid="class_hd_render_pass_state_1ae4fe293684d493f97a4e81a99dfe86ec" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendAlphaDstFactor</name></member>
      <member refid="class_hd_render_pass_state_1a84b363218378b265200d8eb1d27a3db3" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendAlphaOp</name></member>
      <member refid="class_hd_render_pass_state_1a0f23bc95405c6bf4f6a9ab543d33b658" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendAlphaSrcFactor</name></member>
      <member refid="class_hd_render_pass_state_1ae7d2b0bbbef5801da57fc5a737ec7254" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendColorDstFactor</name></member>
      <member refid="class_hd_render_pass_state_1aba4ac6d7b1287b9ac3f9c549aea31255" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendColorOp</name></member>
      <member refid="class_hd_render_pass_state_1a395d4dc45e9c3b851c4cfbfd837ef990" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendColorSrcFactor</name></member>
      <member refid="class_hd_render_pass_state_1a2020c7a853f0398111583d69af356aa6" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendConstantColor</name></member>
      <member refid="class_hd_render_pass_state_1a75e498d75cf1bd554ea72c6a53a898c1" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_blendEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a6f11b7290df65c5f07b3464ecf5e8d10" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_camera</name></member>
      <member refid="class_hd_render_pass_state_1a8fbe0ff2eca3535b4015cf5c8ee2f167" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_clippingEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1aa586da74f3cd1799106fad0f6f37419b" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_clipPlanes</name></member>
      <member refid="class_hd_st_render_pass_state_1a3f634e9bc591cdbf8b475c8d3e3a0ecb" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_clipPlanesBufferSize</name></member>
      <member refid="class_hd_render_pass_state_1a1c7efc757b9881d8a0d072b17d31dce5" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_colorMasks</name></member>
      <member refid="class_hd_render_pass_state_1a9c48418e81bd6c24dd666ccffedcd2a8" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_colorMaskUseDefault</name></member>
      <member refid="class_hd_st_render_pass_state_1a80aa543e7f675182276276783ee2a87e" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_ComputeFlippedFilmbackWindow</name></member>
      <member refid="class_hd_render_pass_state_1a2a3eff397f100559c43d8053e2c48d45" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_conservativeRasterizationEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1a82f16ef691bb4d154190bfd1af1dc68a" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_cullMatrix</name></member>
      <member refid="class_hd_render_pass_state_1a0d10aa0ce3116bd56034c5e4cbcb3c5b" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_cullStyle</name></member>
      <member refid="class_hd_render_pass_state_1a5dccaa4271b7eeb4e67928b8f472a6cf" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthBiasConstantFactor</name></member>
      <member refid="class_hd_render_pass_state_1a58fa95e6e942efbc31def5ed05670c61" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthBiasEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a13a331d77028a2ef88d10edfed1db01b" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthBiasSlopeFactor</name></member>
      <member refid="class_hd_render_pass_state_1af204098936f564ab24932f1a33a6462b" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthBiasUseDefault</name></member>
      <member refid="class_hd_render_pass_state_1afe8ee724dc805e5a992114a7e316ed2c" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthClampEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a7f9688a0ba63e9543e670368ac8b13bb" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthFunc</name></member>
      <member refid="class_hd_render_pass_state_1a26fe825006d6e3c7b70f4d5a4da5cdfb" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthMaskEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a853bce09c88b24179be3923a6852966e" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthRange</name></member>
      <member refid="class_hd_render_pass_state_1aac1c5813cf0b64f9809c762466a59c8e" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_depthTestEnabled</name></member>
      <member refid="class_hd_render_pass_state_1af6fd7f9db39f18ad65f13f2bfee56ede" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_drawRange</name></member>
      <member refid="class_hd_st_render_pass_state_1a9a7591f5db701025c27ea8b6be9a423a" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_fallbackLightingShader</name></member>
      <member refid="class_hd_render_pass_state_1a45cedb49680fd7fb30cae3e826e3d1ae" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_framing</name></member>
      <member refid="class_hd_st_render_pass_state_1a2b76fe9efa401b71c803c81851f1eb95" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_GetFramebufferHeight</name></member>
      <member refid="class_hd_render_pass_state_1a4164828105af2307f909cd73ad16c5f4" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_indicatorColor</name></member>
      <member refid="class_hd_st_render_pass_state_1a5558d85e1b03eb38640d28d7a6933232" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_InitAttachmentDesc</name></member>
      <member refid="class_hd_st_render_pass_state_1ae8224a042f86416b2bdffd76cd48f034" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_InitAttachmentState</name></member>
      <member refid="class_hd_st_render_pass_state_1a6f4a57a24a26f0bd66115f689ba833aa" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_InitDepthStencilState</name></member>
      <member refid="class_hd_st_render_pass_state_1ac499909e584a96b618440d7fd6f2f049" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_InitMultiSampleState</name></member>
      <member refid="class_hd_st_render_pass_state_1ab67427faf3eae206da89175a4972ec06" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_InitPrimitiveState</name></member>
      <member refid="class_hd_st_render_pass_state_1a0611b37f22fb4a14ed5966942b898f1d" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_InitRasterizationState</name></member>
      <member refid="class_hd_render_pass_state_1a313ca9271af1b540d759a21ae2f8b207" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_lightingEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1aad2b0b3d276fdb662ce4158f90f21d02" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_lightingShader</name></member>
      <member refid="class_hd_render_pass_state_1a63bb6e1a3863a4ca2f2a5a97aa604330" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_lineWidth</name></member>
      <member refid="class_hd_render_pass_state_1a81391d9d7775ed5f45d1917db6d20f01" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_maskColor</name></member>
      <member refid="class_hd_render_pass_state_1af7cee523904a2c58cc8b51367181c669" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_multiSampleEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a374ddd71960bddbe4a01e054cbc33a6a" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_overrideColor</name></member>
      <member refid="class_hd_render_pass_state_1add64581840b0e8fe695d12dc8cae8311" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_overrideWindowPolicy</name></member>
      <member refid="class_hd_render_pass_state_1a4409bcba68a2e06dbcd00c1e4f6121fb" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_pointColor</name></member>
      <member refid="class_hd_render_pass_state_1a0207ec9e3eb2e7b467d6927c8fe5d9a8" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_pointSelectedSize</name></member>
      <member refid="class_hd_render_pass_state_1a82fc15181f91d153acc8106975518ee4" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_pointSize</name></member>
      <member refid="class_hd_st_render_pass_state_1a52a85566cc858af240e9191128307840" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_projectionMatrix</name></member>
      <member refid="class_hd_st_render_pass_state_1a6680920dbcf3857ce499fa6a91aeb5de" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_renderPassShader</name></member>
      <member refid="class_hd_st_render_pass_state_1a155e0f7bd44e120eb70903052af5c7da" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_renderPassStateBar</name></member>
      <member refid="class_hd_st_render_pass_state_1ac2b01c3ec279bc7e49cbbebe3b79dc4d" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_resolveMultiSampleAov</name></member>
      <member refid="class_hd_render_pass_state_1a4e18599f390686fd33e8544720e9611d" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a1958c9a24c0c7e18655a8830ae5800ad" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilFailOp</name></member>
      <member refid="class_hd_render_pass_state_1a16951fad57e95b5d3a420d0d96ba20a1" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilFunc</name></member>
      <member refid="class_hd_render_pass_state_1a6a6a961685296d0ea7d81f75800601e0" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilMask</name></member>
      <member refid="class_hd_render_pass_state_1a15922a5cb54ee9d4de4745f8e8bf8b21" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilRef</name></member>
      <member refid="class_hd_render_pass_state_1a944270a788e372ca86ab1133b8903a9e" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilZFailOp</name></member>
      <member refid="class_hd_render_pass_state_1acf191ed916de245ea2195cdd34809290" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stencilZPassOp</name></member>
      <member refid="class_hd_render_pass_state_1af3786e185fac03ac24432b118e1adad8" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stepSize</name></member>
      <member refid="class_hd_render_pass_state_1a0d26b407b582ac064ff781e4125d4f1f" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_stepSizeLighting</name></member>
      <member refid="class_hd_render_pass_state_1acfa9b19fca5e779da27787396213ea7b" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_tessLevel</name></member>
      <member refid="class_hd_st_render_pass_state_1a6f67232ed26753ca5f650afdf0b0d0df" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_UseAlphaMask</name></member>
      <member refid="class_hd_render_pass_state_1a0d22215518ae7f16d78137f21352d37f" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_useMultiSampleAov</name></member>
      <member refid="class_hd_st_render_pass_state_1abdbdc8c564ae8c689c7e9eedead88e56" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_useSceneMaterials</name></member>
      <member refid="class_hd_render_pass_state_1aa421c060145c803c4dab83d1cc656ddb" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_viewport</name></member>
      <member refid="class_hd_render_pass_state_1a932508f50243bfdfdf1f5c3812012786" prot="protected" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_wireframeColor</name></member>
      <member refid="class_hd_st_render_pass_state_1ae33a9653911635d3772988f64ca4032b" prot="private" virt="non-virtual"><scope>HdStRenderPassState</scope><name>_worldToViewMatrix</name></member>
      <member refid="class_hd_st_render_pass_state_1af3078065b4ca4667729d15c54b66976e" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ApplyStateFromCamera</name></member>
      <member refid="class_hd_st_render_pass_state_1a6358147461ee8181b4a823fd0810dfa3" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ApplyStateFromGeometricShader</name></member>
      <member refid="class_hd_st_render_pass_state_1ad5bb3ab988d5bcb3567034d9b4a5ea3c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>AxisAlignedAffineTransform</name></member>
      <member refid="class_hd_st_render_pass_state_1adb187599f5dcc1d137c5b1560b4d2b8c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>Bind</name></member>
      <member refid="class_hd_render_pass_state_1a5acf1e9a6d045d8409a5eb3f716cd057" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ClipPlanesVector</name></member>
      <member refid="class_hd_render_pass_state_1afd791441db232c9a28b5460ae2b18772" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ColorMask</name></member>
      <member refid="class_hd_render_pass_state_1afd791441db232c9a28b5460ae2b18772a9491eaa72dddf718168de4fb435d6061" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ColorMaskNone</name></member>
      <member refid="class_hd_render_pass_state_1afd791441db232c9a28b5460ae2b18772aad26941140e324f698937822e31a6ce9" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ColorMaskRGB</name></member>
      <member refid="class_hd_render_pass_state_1afd791441db232c9a28b5460ae2b18772aaa6b7a6a66d468edd8a0c8e03c221a8d" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ColorMaskRGBA</name></member>
      <member refid="class_hd_st_render_pass_state_1a46314f0cf0d24b46dfee3889a8b02466" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ComputeImageToHorizontallyNormalizedFilmback</name></member>
      <member refid="class_hd_st_render_pass_state_1a808c222a3da39b37657e6739cb619768" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>ComputeViewport</name></member>
      <member refid="class_hd_render_pass_state_1ac7af57699233cdd852e9fd66ac07fd7e" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetAlphaThreshold</name></member>
      <member refid="class_hd_render_pass_state_1a06b468c43d052012e2179ea3a2c7269b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetAlphaToCoverageEnabled</name></member>
      <member refid="class_hd_render_pass_state_1aaeac4a852b40f026e6dfa209d1f7ff09" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetAovBindings</name></member>
      <member refid="class_hd_render_pass_state_1a95d5ec96e7a657e6fb3c44fa2c4ff236" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetAovInputBindings</name></member>
      <member refid="class_hd_render_pass_state_1a482242c488769b7c5e0f54159c6da30b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendAlphaDstFactor</name></member>
      <member refid="class_hd_render_pass_state_1aff746f01b47011477020b400674383b8" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendAlphaOp</name></member>
      <member refid="class_hd_render_pass_state_1a540a5b285087b51d3cfad33221a1655a" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendAlphaSrcFactor</name></member>
      <member refid="class_hd_render_pass_state_1a2add7f8119f2a46a7e98623aec2221c3" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendColorDstFactor</name></member>
      <member refid="class_hd_render_pass_state_1afc7b1058e2cf4cc0c9d00c58eae55c86" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendColorOp</name></member>
      <member refid="class_hd_render_pass_state_1a9eb026795fe3c2abe66c093e238eafe2" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendColorSrcFactor</name></member>
      <member refid="class_hd_render_pass_state_1aa8fad0440107bf9900ddd1bc7c8c42a3" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetBlendConstantColor</name></member>
      <member refid="class_hd_render_pass_state_1a51a8da742d0d3a39fc18d755cd445e0e" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetCamera</name></member>
      <member refid="class_hd_render_pass_state_1a1bd5030f6492b6dde115c458c0988552" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetClippingEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1a03384756cd16ea5443a655e1fa47ef9b" prot="public" virt="virtual"><scope>HdStRenderPassState</scope><name>GetClipPlanes</name></member>
      <member refid="class_hd_render_pass_state_1a3affaeec2505ff97df5bc4c88e656249" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetColorMasks</name></member>
      <member refid="class_hd_render_pass_state_1a66e5b521852e37765eb60acb7d406883" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetColorMaskUseDefault</name></member>
      <member refid="class_hd_render_pass_state_1aaf697fd5a274c21bfadc45b02a75361d" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetConservativeRasterizationEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1aa24a25fa8a9ab10a39fa95117eba833c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetCullMatrix</name></member>
      <member refid="class_hd_render_pass_state_1aaefba23690fe2e32faa0167522caacfc" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetCullStyle</name></member>
      <member refid="class_hd_render_pass_state_1a9d484ffc9cdef272a678cd57d32b84ae" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetDepthBiasEnabled</name></member>
      <member refid="class_hd_render_pass_state_1aae2ba2bce16e07abdda4bb6a4b158672" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetDepthBiasUseDefault</name></member>
      <member refid="class_hd_render_pass_state_1a5e3efa12ea0a9a95e541f1478e1e6a20" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetDepthFunc</name></member>
      <member refid="class_hd_render_pass_state_1ac182a7b8860df105444b3edb8a16e62c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetDepthRange</name></member>
      <member refid="class_hd_render_pass_state_1a8227380a7f048764af2c7b98aa8f00a8" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetDrawingRange</name></member>
      <member refid="class_hd_render_pass_state_1a0ad24436d0950525a5403d782ae21a67" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetDrawingRangeNDC</name></member>
      <member refid="class_hd_render_pass_state_1af450c218b4d52376bda97fc3d229250b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetEnableDepthClamp</name></member>
      <member refid="class_hd_render_pass_state_1ab31fc8b810c715f2bf00735486eb317a" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetEnableDepthMask</name></member>
      <member refid="class_hd_render_pass_state_1ad6cee7f8b762a4098365265ae9a6afa5" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetEnableDepthTest</name></member>
      <member refid="class_hd_render_pass_state_1aee5ebe8343a2d6777833cfc461ee98a6" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetFraming</name></member>
      <member refid="class_hd_st_render_pass_state_1aeb1b412af00ac72a97aab968ce45de8a" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetGraphicsPipelineHash</name></member>
      <member refid="class_hd_render_pass_state_1a04d3fe288f9d8ab98841643513bebcbb" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetImageToWorldMatrix</name></member>
      <member refid="class_hd_render_pass_state_1abb132fc9b939820b8532154a2805fac0" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetIndicatorColor</name></member>
      <member refid="class_hd_render_pass_state_1a2156ef640385f0302c70d3dbd9b8269b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetLightingEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1a12908c9f37b76690ec90336bf8cc6ce8" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetLightingShader</name></member>
      <member refid="class_hd_render_pass_state_1a6297630af4c50e67a7da48c8eedf9d66" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetLineWidth</name></member>
      <member refid="class_hd_render_pass_state_1acf879fce3cb3d70e721ce90fb8711c90" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetMaskColor</name></member>
      <member refid="class_hd_render_pass_state_1a28478f4170a0c9049a883dd1335eb0f3" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetMultiSampleEnabled</name></member>
      <member refid="class_hd_render_pass_state_1ad7911679d244a7db7773e74d0ede5c1f" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetOverrideColor</name></member>
      <member refid="class_hd_render_pass_state_1ae9e575786fd5e05e9d6dad9ab5e4a684" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetOverrideWindowPolicy</name></member>
      <member refid="class_hd_render_pass_state_1ad35555f6c6fe0dd761bcdf22e8e52f1c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetPointColor</name></member>
      <member refid="class_hd_render_pass_state_1ad1c61894de16e8f3f8ceb0c5b8bf3b34" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetPointSelectedSize</name></member>
      <member refid="class_hd_render_pass_state_1a72875608ac645dc20d356a698a296fe9" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetPointSize</name></member>
      <member refid="class_hd_st_render_pass_state_1ae9c1b9bbe80104012a33256d04af8f93" prot="public" virt="virtual"><scope>HdStRenderPassState</scope><name>GetProjectionMatrix</name></member>
      <member refid="class_hd_st_render_pass_state_1a56694e15e1d33f64f023934255ac61a3" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetRenderPassShader</name></member>
      <member refid="class_hd_st_render_pass_state_1a300f1f63293463995fcd8f29aa9e3b6b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetResolveAovMultiSample</name></member>
      <member refid="class_hd_st_render_pass_state_1a45161007af73f20c3740825eacca4e83" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetShaderHash</name></member>
      <member refid="class_hd_st_render_pass_state_1a80da2c286f2f673cafefe9e9cb8b787c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetShaders</name></member>
      <member refid="class_hd_render_pass_state_1ae2a767d696abec5cb0920eaf94886560" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilDepthFailOp</name></member>
      <member refid="class_hd_render_pass_state_1aac5f541aee4575d8a23257264f193515" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilDepthPassOp</name></member>
      <member refid="class_hd_render_pass_state_1a9762e80ef729c90c970a4984f174483e" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a21252ac55563b5850b1e708fc5170a05" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilFailOp</name></member>
      <member refid="class_hd_render_pass_state_1a2cd05e836537c2bbc87985097b38aa0a" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilFunc</name></member>
      <member refid="class_hd_render_pass_state_1a72a93fa083d4862dd7125d12adb187a2" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilMask</name></member>
      <member refid="class_hd_render_pass_state_1a06cd2c12633ed0bb651c3d59df8a5f29" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetStencilRef</name></member>
      <member refid="class_hd_render_pass_state_1a71fc91c8a56a2224af76df09089e7472" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetTessLevel</name></member>
      <member refid="class_hd_render_pass_state_1a2669d98188463e5969e46a56c40c22e1" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetUseAovMultiSample</name></member>
      <member refid="class_hd_st_render_pass_state_1abdd9eca20dc64b01ef90719fcfc2d150" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetUseSceneMaterials</name></member>
      <member refid="class_hd_render_pass_state_1abfd360ca764a960d84a536a509405ecf" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetViewport</name></member>
      <member refid="class_hd_render_pass_state_1a2221d42df6c742935d45b8ccf9853a81" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetWindowPolicy</name></member>
      <member refid="class_hd_render_pass_state_1af17942625346b3a8ed135590aefa71c3" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>GetWireframeColor</name></member>
      <member refid="class_hd_st_render_pass_state_1a556e090ac0716e1ba457e39290b02a45" prot="public" virt="virtual"><scope>HdStRenderPassState</scope><name>GetWorldToViewMatrix</name></member>
      <member refid="class_hd_render_pass_state_1a84b14dbf0f7bf25ef1965102b9b77559" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>HdRenderPassState</name></member>
      <member refid="class_hd_st_render_pass_state_1ad9eb5711eec92544191c8bd341f29341" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>HdStRenderPassState</name></member>
      <member refid="class_hd_st_render_pass_state_1a9ad6fd79578fc946a5c021e927aeec4c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>HdStRenderPassState</name></member>
      <member refid="class_hd_st_render_pass_state_1a3eeb48c12912e5366ea6356f950d0493" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>InitGraphicsPipelineDesc</name></member>
      <member refid="class_hd_st_render_pass_state_1a6cbdb3962be636c86633b75809cb8fec" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>MakeGraphicsCmdsDesc</name></member>
      <member refid="class_hd_st_render_pass_state_1a880afdd1f2b726bd60c5d8cf1b34cdaf" prot="public" virt="virtual"><scope>HdStRenderPassState</scope><name>Prepare</name></member>
      <member refid="class_hd_render_pass_state_1ad3ff5c271d17c34d3f330a017fdef56f" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetAlphaThreshold</name></member>
      <member refid="class_hd_render_pass_state_1a48b0da4584d3c4c468ad7e13cc80d481" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetAlphaToCoverageEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a454bc752c33d72330d9246b0fb239bb1" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetAovBindings</name></member>
      <member refid="class_hd_render_pass_state_1a3d1ecbb9457516fdda0fa513a3ddcdb4" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetAovInputBindings</name></member>
      <member refid="class_hd_render_pass_state_1acf28b9409aa0fd0312470e2e071c4e96" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetBlend</name></member>
      <member refid="class_hd_render_pass_state_1aeb2d077f08489200dde3341bc6f57a40" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetBlendConstantColor</name></member>
      <member refid="class_hd_render_pass_state_1abb6eb280b0dc7be96e3124f563ca0399" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetBlendEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a48d6f54920c68ea4697ed22aeede7b1c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetCamera</name></member>
      <member refid="class_hd_st_render_pass_state_1a8721c22d8b54f10d26b833815882f4ee" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetCameraFramingState</name></member>
      <member refid="class_hd_render_pass_state_1ad859a5202a64e6d1b31e2d4df2b597ac" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetClippingEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a22386f127cbe8e17806dc8dba3ee67b4" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetColorMasks</name></member>
      <member refid="class_hd_render_pass_state_1a252761d2ee48cc5377a103533097cac0" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetColorMaskUseDefault</name></member>
      <member refid="class_hd_render_pass_state_1a8055528cb9c03ccf56ed203e670fe99a" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetConservativeRasterizationEnabled</name></member>
      <member refid="class_hd_render_pass_state_1ab2335fda587b688a2f616c12b1d17ba6" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetCullStyle</name></member>
      <member refid="class_hd_render_pass_state_1a10ea0b0fb663833aef4b6b8c1b1b3c5f" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetDepthBias</name></member>
      <member refid="class_hd_render_pass_state_1a7c9845f3052dd72c31a12d2f503f35af" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetDepthBiasEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a67862f634f4340db54da503fc07ccbaa" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetDepthBiasUseDefault</name></member>
      <member refid="class_hd_render_pass_state_1a71b795fb5eb43af827a0e92a14bc22c5" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetDepthFunc</name></member>
      <member refid="class_hd_render_pass_state_1a04e8f44672276b0635c714bb5465b9d8" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetDepthRange</name></member>
      <member refid="class_hd_render_pass_state_1abe30ffea657b13640a6fbbdbe621b9bc" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetDrawingRange</name></member>
      <member refid="class_hd_render_pass_state_1aecc8512b023abed18b38e5cd1d76e4b7" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetEnableDepthClamp</name></member>
      <member refid="class_hd_render_pass_state_1ab7e6dc3663d9c5fbd02a14e4377b45af" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetEnableDepthMask</name></member>
      <member refid="class_hd_render_pass_state_1a38de5fe93cc8fb8324709b9ea22291a5" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetEnableDepthTest</name></member>
      <member refid="class_hd_render_pass_state_1a2e5fc14ee45dadd9bf5c3fa0efe60eda" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetFraming</name></member>
      <member refid="class_hd_render_pass_state_1aebf52cbe505e4ba1e1c30dd8f8b32736" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetIndicatorColor</name></member>
      <member refid="class_hd_render_pass_state_1aa3669cb0a5c497b8143be52eff457a8b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetLightingEnabled</name></member>
      <member refid="class_hd_st_render_pass_state_1a7c7d10701af4dd6e610fe3079de9b751" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetLightingShader</name></member>
      <member refid="class_hd_render_pass_state_1a7f57bc07c4753bba821b4547cb5f9950" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetLineWidth</name></member>
      <member refid="class_hd_render_pass_state_1a253c16bb65f4492ab04e854514436ba4" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetMaskColor</name></member>
      <member refid="class_hd_render_pass_state_1a44666e91b13ddbabdd08501772a8ed6e" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetMultiSampleEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a5a1fd5a03178790ae518872f08376c12" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetOverrideColor</name></member>
      <member refid="class_hd_render_pass_state_1a3bed18d1ce53306f52d3cc2d18903a02" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetOverrideWindowPolicy</name></member>
      <member refid="class_hd_render_pass_state_1a4bbcd289e4d8bc328d62d066d3c0a464" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetPointColor</name></member>
      <member refid="class_hd_render_pass_state_1a991aaabe20401da951ddeab1abcc2f5f" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetPointSelectedSize</name></member>
      <member refid="class_hd_render_pass_state_1a8705486b94c5d9eb29bca4cf20121b12" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetPointSize</name></member>
      <member refid="class_hd_st_render_pass_state_1a0096f5ff163ed55ddbd89200cb36cf62" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetRenderPassShader</name></member>
      <member refid="class_hd_st_render_pass_state_1a437b2b4ad98d63ac01186f9553f5f67b" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetResolveAovMultiSample</name></member>
      <member refid="class_hd_render_pass_state_1a98616b7895638262a8ff5af54d7b1208" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetStencil</name></member>
      <member refid="class_hd_render_pass_state_1a54111469af00d8720b4a04eecf276fff" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetStencilEnabled</name></member>
      <member refid="class_hd_render_pass_state_1a1939992819fa265cb3f3334aa5efa668" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetTessLevel</name></member>
      <member refid="class_hd_render_pass_state_1ad54ab3b3ba7642af084ff25210c477cc" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetUseAovMultiSample</name></member>
      <member refid="class_hd_st_render_pass_state_1ab2ba860d578c12c1d5f9defd154f1965" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetUseSceneMaterials</name></member>
      <member refid="class_hd_render_pass_state_1a8edb732ea2dab2f735b87c80de4e813e" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetViewport</name></member>
      <member refid="class_hd_render_pass_state_1aeb17d04e72043a3164f9bd5b8a179dcd" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetVolumeRenderingConstants</name></member>
      <member refid="class_hd_render_pass_state_1a949683b9435012d66f2889bfbda62cd2" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>SetWireframeColor</name></member>
      <member refid="class_hd_st_render_pass_state_1a3f570efabb29724a309e350c4578562c" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>Unbind</name></member>
      <member refid="class_hd_render_pass_state_1acb7be7bed8a43e41a6621677da1b2f83" prot="public" virt="virtual"><scope>HdStRenderPassState</scope><name>~HdRenderPassState</name></member>
      <member refid="class_hd_st_render_pass_state_1a297bcae4be6234eb16533dbe5f212e40" prot="public" virt="non-virtual"><scope>HdStRenderPassState</scope><name>~HdStRenderPassState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
