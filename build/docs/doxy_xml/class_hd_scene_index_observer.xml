<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_scene_index_observer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HdSceneIndexObserver</compoundname>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <derivedcompoundref refid="class_hd_scene_index_adapter_scene_delegate" prot="public" virt="non-virtual">HdSceneIndexAdapterSceneDelegate</derivedcompoundref>
    <derivedcompoundref refid="class_hdsi_prim_managing_scene_index_observer" prot="public" virt="non-virtual">HdsiPrimManagingSceneIndexObserver</derivedcompoundref>
    <derivedcompoundref refid="class_hdx_selection_scene_index_observer" prot="public" virt="non-virtual">HdxSelectionSceneIndexObserver</derivedcompoundref>
    <includes refid="scene_index_observer_8h" local="no">sceneIndexObserver.h</includes>
    <innerclass refid="struct_hd_scene_index_observer_1_1_added_prim_entry" prot="public">HdSceneIndexObserver::AddedPrimEntry</innerclass>
    <innerclass refid="struct_hd_scene_index_observer_1_1_dirtied_prim_entry" prot="public">HdSceneIndexObserver::DirtiedPrimEntry</innerclass>
    <innerclass refid="struct_hd_scene_index_observer_1_1_removed_prim_entry" prot="public">HdSceneIndexObserver::RemovedPrimEntry</innerclass>
    <innerclass refid="struct_hd_scene_index_observer_1_1_renamed_prim_entry" prot="public">HdSceneIndexObserver::RenamedPrimEntry</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_scene_index_observer_1a3dad19a020c6daee833f270521b3b109" prot="public" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; <ref refid="struct_hd_scene_index_observer_1_1_added_prim_entry" kindref="compound">AddedPrimEntry</ref>, 16 &gt;</type>
        <definition>using AddedPrimEntries =  TfSmallVector&lt;AddedPrimEntry, 16&gt;</definition>
        <argsstring></argsstring>
        <name>AddedPrimEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="70" column="1" bodyfile="pxr/imaging/hd/sceneIndexObserver.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_scene_index_observer_1a8c6404855649c2366af2490dc53b08d3" prot="public" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; <ref refid="struct_hd_scene_index_observer_1_1_removed_prim_entry" kindref="compound">RemovedPrimEntry</ref>, 16 &gt;</type>
        <definition>using RemovedPrimEntries =  TfSmallVector&lt;RemovedPrimEntry, 16&gt;</definition>
        <argsstring></argsstring>
        <name>RemovedPrimEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="86" column="1" bodyfile="pxr/imaging/hd/sceneIndexObserver.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_scene_index_observer_1accb5ec6e29149f518fdb9837443ecdd0" prot="public" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; <ref refid="struct_hd_scene_index_observer_1_1_dirtied_prim_entry" kindref="compound">DirtiedPrimEntry</ref>, 16 &gt;</type>
        <definition>using DirtiedPrimEntries =  TfSmallVector&lt;DirtiedPrimEntry, 16&gt;</definition>
        <argsstring></argsstring>
        <name>DirtiedPrimEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="108" column="1" bodyfile="pxr/imaging/hd/sceneIndexObserver.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_scene_index_observer_1a97100b5c8230a90a37e524c23970da8d" prot="public" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; <ref refid="struct_hd_scene_index_observer_1_1_renamed_prim_entry" kindref="compound">RenamedPrimEntry</ref>, 16 &gt;</type>
        <definition>using RenamedPrimEntries =  TfSmallVector&lt;RenamedPrimEntry, 16&gt;</definition>
        <argsstring></argsstring>
        <name>RenamedPrimEntries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="126" column="1" bodyfile="pxr/imaging/hd/sceneIndexObserver.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_scene_index_observer_1a4b755f82fc47b55d3dfcf0d906710758" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API</type>
        <definition>virtual HD_API ~HdSceneIndexObserver</definition>
        <argsstring>()</argsstring>
        <name>~HdSceneIndexObserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_scene_index_observer_1a486c4ae832a8d67b4a2704286baa7cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void PrimsAdded</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const AddedPrimEntries &amp;entries)=0</argsstring>
        <name>PrimsAdded</name>
        <reimplementedby refid="class_hdx_selection_scene_index_observer_1a4d0596a9ebc953ef59ca4e4fb6c50279">PrimsAdded</reimplementedby>
        <reimplementedby refid="class_hd_scene_index_adapter_scene_delegate_1a79eb5085cdd0533b424f23e5594cd61b">PrimsAdded</reimplementedby>
        <reimplementedby refid="class_hdsi_prim_managing_scene_index_observer_1a79eb5085cdd0533b424f23e5594cd61b">PrimsAdded</reimplementedby>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">AddedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prims have been added to the scene. </para>
        </briefdescription>
        <detaileddescription>
<para>The set of scene prims compiled from added/removed notices should match the set from a traversal based on <computeroutput>sender.GetChildPrimNames</computeroutput>. Each prim has a path and type. It&apos;s possible for <computeroutput>PrimsAdded</computeroutput> to be called for prims that already exist; in that case, observers should be sure to update the prim type, in case it changed, and resync the prim. This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_scene_index_observer_1aec4924464d54d6e70002fddf8408d31f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void PrimsRemoved</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const RemovedPrimEntries &amp;entries)=0</argsstring>
        <name>PrimsRemoved</name>
        <reimplementedby refid="class_hd_scene_index_adapter_scene_delegate_1a184b27c75c27d505f0900ea87b16ac34">PrimsRemoved</reimplementedby>
        <reimplementedby refid="class_hdx_selection_scene_index_observer_1aca4185e188f4bd0c94ab1dbd2afdc996">PrimsRemoved</reimplementedby>
        <reimplementedby refid="class_hdsi_prim_managing_scene_index_observer_1a184b27c75c27d505f0900ea87b16ac34">PrimsRemoved</reimplementedby>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">RemovedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prims have been removed from the scene. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this message is considered hierarchical; if <computeroutput>/Path</computeroutput> is removed, <computeroutput>/Path/child</computeroutput> is considered removed as well. This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_scene_index_observer_1a087e1d62f6ec2f2041bc78e31d712560" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void PrimsDirtied</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const DirtiedPrimEntries &amp;entries)=0</argsstring>
        <name>PrimsDirtied</name>
        <reimplementedby refid="class_hdx_selection_scene_index_observer_1a78b5da16d7e0178398866a04747f777c">PrimsDirtied</reimplementedby>
        <reimplementedby refid="class_hd_scene_index_adapter_scene_delegate_1ab38a1b97a048f6b7548322448206032b">PrimsDirtied</reimplementedby>
        <reimplementedby refid="class_hdsi_prim_managing_scene_index_observer_1ab38a1b97a048f6b7548322448206032b">PrimsDirtied</reimplementedby>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">DirtiedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prim datasources have been invalidated. </para>
        </briefdescription>
        <detaileddescription>
<para>This message is not considered hierarchical on <computeroutput>primPath</computeroutput>; if <computeroutput>/Path</computeroutput> is dirtied, <computeroutput>/Path/child</computeroutput> is not necessarily dirtied. However datasource locators are considered hierarchical: if <computeroutput>primvars</computeroutput> is dirtied on a prim, <computeroutput>primvars/color</computeroutput> is considered dirtied as well. This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_scene_index_observer_1a5cbc2ff942711627842ddf0f1781a60f" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void PrimsRenamed</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const RenamedPrimEntries &amp;entries)=0</argsstring>
        <name>PrimsRenamed</name>
        <reimplementedby refid="class_hdx_selection_scene_index_observer_1af46d6a01ef6365d16704552459ba7d53">PrimsRenamed</reimplementedby>
        <reimplementedby refid="class_hd_scene_index_adapter_scene_delegate_1a1c8cc4fdfbce0f58a2877c3d273e1415">PrimsRenamed</reimplementedby>
        <reimplementedby refid="class_hdsi_prim_managing_scene_index_observer_1a1c8cc4fdfbce0f58a2877c3d273e1415">PrimsRenamed</reimplementedby>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">RenamedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prims (and their descendants) have been renamed or reparented. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_scene_index_observer_1a1b45298b84622e88b6c0e85ca1baeb57" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>static HD_API void ConvertPrimsRenamedToRemovedAndAdded</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const HdSceneIndexObserver::RenamedPrimEntries &amp;renamedEntries, HdSceneIndexObserver::RemovedPrimEntries *outputRemovedEntries, HdSceneIndexObserver::AddedPrimEntries *outputAddedEntries)</argsstring>
        <name>ConvertPrimsRenamedToRemovedAndAdded</name>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">HdSceneIndexObserver::RenamedPrimEntries</ref> &amp;</type>
          <declname>renamedEntries</declname>
        </param>
        <param>
          <type><ref refid="class_tf_small_vector" kindref="compound">HdSceneIndexObserver::RemovedPrimEntries</ref> *</type>
          <declname>outputRemovedEntries</declname>
        </param>
        <param>
          <type><ref refid="class_tf_small_vector" kindref="compound">HdSceneIndexObserver::AddedPrimEntries</ref> *</type>
          <declname>outputAddedEntries</declname>
        </param>
        <briefdescription>
<para>A utility for converting prims renamed messages into equivalent removed and added notices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_scene_index_observer_1a529aa2e0d528281da47353b55efd2475" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>static HD_API void ConvertPrimsRenamedToRemovedAndAdded</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const HdSceneIndexObserver::RenamedPrimEntries &amp;renamedEntries, HdSceneIndexObserver *observer)</argsstring>
        <name>ConvertPrimsRenamedToRemovedAndAdded</name>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">HdSceneIndexObserver::RenamedPrimEntries</ref> &amp;</type>
          <declname>renamedEntries</declname>
        </param>
        <param>
          <type><ref refid="class_hd_scene_index_observer" kindref="compound">HdSceneIndexObserver</ref> *</type>
          <declname>observer</declname>
        </param>
        <briefdescription>
<para>A utility for converting prims renamed messages into equivalent removed and added notices at the observer level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/sceneIndexObserver.h" line="182" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Observer of scene data. </para>
    </briefdescription>
    <detaileddescription>
<para>From the time an observer is registered with a scene index, the scene index will send it diffs as the scene changes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2790">
        <label>HdSceneIndexObserver</label>
        <link refid="class_hd_scene_index_observer"/>
        <childnode refid="2791" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2791">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="2792">
        <label>HdSceneIndexAdapterSceneDelegate</label>
        <link refid="class_hd_scene_index_adapter_scene_delegate"/>
        <childnode refid="2790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2794">
        <label>HdxSelectionSceneIndexObserver</label>
        <link refid="class_hdx_selection_scene_index_observer"/>
        <childnode refid="2790" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2793">
        <label>HdsiPrimManagingSceneIndexObserver</label>
        <link refid="class_hdsi_prim_managing_scene_index_observer"/>
        <childnode refid="2790" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2795">
        <label>HdSceneIndexObserver</label>
        <link refid="class_hd_scene_index_observer"/>
        <childnode refid="2796" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2796">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/sceneIndexObserver.h" line="49" column="1" bodyfile="pxr/imaging/hd/sceneIndexObserver.h" bodystart="48" bodyend="191"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>_HasRemnant</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>_Register</name></member>
      <member refid="class_hd_scene_index_observer_1a3dad19a020c6daee833f270521b3b109" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>AddedPrimEntries</name></member>
      <member refid="class_hd_scene_index_observer_1a1b45298b84622e88b6c0e85ca1baeb57" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>ConvertPrimsRenamedToRemovedAndAdded</name></member>
      <member refid="class_hd_scene_index_observer_1a529aa2e0d528281da47353b55efd2475" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>ConvertPrimsRenamedToRemovedAndAdded</name></member>
      <member refid="class_hd_scene_index_observer_1accb5ec6e29149f518fdb9837443ecdd0" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>DirtiedPrimEntries</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>EnableNotification2</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>operator=</name></member>
      <member refid="class_hd_scene_index_observer_1a486c4ae832a8d67b4a2704286baa7cbd" prot="public" virt="pure-virtual"><scope>HdSceneIndexObserver</scope><name>PrimsAdded</name></member>
      <member refid="class_hd_scene_index_observer_1a087e1d62f6ec2f2041bc78e31d712560" prot="public" virt="pure-virtual"><scope>HdSceneIndexObserver</scope><name>PrimsDirtied</name></member>
      <member refid="class_hd_scene_index_observer_1aec4924464d54d6e70002fddf8408d31f" prot="public" virt="pure-virtual"><scope>HdSceneIndexObserver</scope><name>PrimsRemoved</name></member>
      <member refid="class_hd_scene_index_observer_1a5cbc2ff942711627842ddf0f1781a60f" prot="public" virt="pure-virtual"><scope>HdSceneIndexObserver</scope><name>PrimsRenamed</name></member>
      <member refid="class_hd_scene_index_observer_1a8c6404855649c2366af2490dc53b08d3" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>RemovedPrimEntries</name></member>
      <member refid="class_hd_scene_index_observer_1a97100b5c8230a90a37e524c23970da8d" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>RenamedPrimEntries</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>TfWeakBase</name></member>
      <member refid="class_hd_scene_index_observer_1a4b755f82fc47b55d3dfcf0d906710758" prot="public" virt="virtual"><scope>HdSceneIndexObserver</scope><name>~HdSceneIndexObserver</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>HdSceneIndexObserver</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
