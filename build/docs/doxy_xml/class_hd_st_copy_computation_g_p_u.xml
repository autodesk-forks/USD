<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_copy_computation_g_p_u" kind="class" language="C++" prot="public">
    <compoundname>HdStCopyComputationGPU</compoundname>
    <basecompoundref refid="class_hd_st_computation" prot="public" virt="non-virtual">HdStComputation</basecompoundref>
    <includes refid="copy_computation_8h" local="no">copyComputation.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_copy_computation_g_p_u_1a2fb4ecebf6b844925f85975925a2789d" prot="private" static="no" mutable="no">
        <type>HdBufferArrayRangeSharedPtr</type>
        <definition>HdBufferArrayRangeSharedPtr _src</definition>
        <argsstring></argsstring>
        <name>_src</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/copyComputation.h" line="59" column="1" bodyfile="pxr/imaging/hdSt/copyComputation.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_copy_computation_g_p_u_1a073299b165fbc77310a8ada4902f85f8" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/copyComputation.h" line="60" column="1" bodyfile="pxr/imaging/hdSt/copyComputation.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_copy_computation_g_p_u_1a95df79fe3fa4182f36beb776c837bbcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStCopyComputationGPU</definition>
        <argsstring>(HdBufferArrayRangeSharedPtr const &amp;src, TfToken const &amp;name)</argsstring>
        <name>HdStCopyComputationGPU</name>
        <param>
          <type>HdBufferArrayRangeSharedPtr const &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/copyComputation.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_copy_computation_g_p_u_1a0c7e66f0a973f19d545a376c6acd8571" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Execute</definition>
        <argsstring>(HdBufferArrayRangeSharedPtr const &amp;range, HdResourceRegistry *resourceRegistry) override</argsstring>
        <name>Execute</name>
        <reimplements refid="class_hd_st_computation_1a0868e343ecbcdb8a87d6b26653d18fca">Execute</reimplements>
        <param>
          <type>HdBufferArrayRangeSharedPtr const &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type><ref refid="class_hd_resource_registry" kindref="compound">HdResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <briefdescription>
<para>Execute computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/copyComputation.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_copy_computation_g_p_u_1a70b4d3e1ba119e868a92d4347313293d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API int</type>
        <definition>HDST_API int GetNumOutputElements</definition>
        <argsstring>() const override</argsstring>
        <name>GetNumOutputElements</name>
        <reimplements refid="class_hd_st_computation_1ab35f67106a7590bcd1c96695a7ac3f4c">GetNumOutputElements</reimplements>
        <briefdescription>
<para>Returns the size of its destination buffer (located by range argument of <ref refid="class_hd_st_copy_computation_g_p_u_1a0c7e66f0a973f19d545a376c6acd8571" kindref="member">Execute()</ref>). </para>
        </briefdescription>
        <detaileddescription>
<para>This function will be called after all HdBufferSources have been resolved and commited, so it can use the result of those buffer source results. Returning 0 means it doesn&apos;t need to resize. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/copyComputation.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_copy_computation_g_p_u_1a596df3707c1a0ac69178be8b953a65ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void GetBufferSpecs</definition>
        <argsstring>(HdBufferSpecVector *specs) const override</argsstring>
        <name>GetBufferSpecs</name>
        <reimplements refid="class_hd_st_computation_1a8a168db3ae7e1b0a8e17ed98f40f9f4e">GetBufferSpecs</reimplements>
        <param>
          <type>HdBufferSpecVector *</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
<para>Add the buffer spec for this computation into given bufferspec vector. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller has to allocate the destination buffer with respect to the BufferSpecs, and passes the range when registering the computation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/copyComputation.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A GPU computation which transfers a vbo range specified by src and name to the given range. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3092">
        <label>HdStCopyComputationGPU</label>
        <link refid="class_hd_st_copy_computation_g_p_u"/>
        <childnode refid="3093" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3093">
        <label>HdStComputation</label>
        <link refid="class_hd_st_computation"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3094">
        <label>HdStCopyComputationGPU</label>
        <link refid="class_hd_st_copy_computation_g_p_u"/>
        <childnode refid="3095" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3095">
        <label>HdStComputation</label>
        <link refid="class_hd_st_computation"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/copyComputation.h" line="42" column="1" bodyfile="pxr/imaging/hdSt/copyComputation.h" bodystart="41" bodyend="61"/>
    <listofallmembers>
      <member refid="class_hd_st_copy_computation_g_p_u_1a073299b165fbc77310a8ada4902f85f8" prot="private" virt="non-virtual"><scope>HdStCopyComputationGPU</scope><name>_name</name></member>
      <member refid="class_hd_st_copy_computation_g_p_u_1a2fb4ecebf6b844925f85975925a2789d" prot="private" virt="non-virtual"><scope>HdStCopyComputationGPU</scope><name>_src</name></member>
      <member refid="class_hd_st_copy_computation_g_p_u_1a0c7e66f0a973f19d545a376c6acd8571" prot="public" virt="virtual"><scope>HdStCopyComputationGPU</scope><name>Execute</name></member>
      <member refid="class_hd_st_copy_computation_g_p_u_1a596df3707c1a0ac69178be8b953a65ab" prot="public" virt="virtual"><scope>HdStCopyComputationGPU</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_st_copy_computation_g_p_u_1a70b4d3e1ba119e868a92d4347313293d" prot="public" virt="virtual"><scope>HdStCopyComputationGPU</scope><name>GetNumOutputElements</name></member>
      <member refid="class_hd_st_copy_computation_g_p_u_1a95df79fe3fa4182f36beb776c837bbcc" prot="public" virt="non-virtual"><scope>HdStCopyComputationGPU</scope><name>HdStCopyComputationGPU</name></member>
      <member refid="class_hd_st_computation_1a9dcb9b43a3d0fa9003d4c1c9d921f6b2" prot="public" virt="non-virtual"><scope>HdStCopyComputationGPU</scope><name>IsValid</name></member>
      <member refid="class_hd_st_computation_1a68c76127de856de0467c3b350434ea88" prot="public" virt="virtual"><scope>HdStCopyComputationGPU</scope><name>~HdStComputation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
