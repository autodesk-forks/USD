<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec4d" kind="class" language="C++" prot="public">
    <compoundname>GfVec4d</compoundname>
    <includes refid="vec4d_8h" local="no">vec4d.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec4d_1a5459d6283bff692e454aad6e9ad9acf0" prot="public" static="no">
        <type>double</type>
        <definition>typedef double ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="66" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec4d_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="67" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec4d_1a72eabdcd77398d7880882f53f92764c1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double _data[4]</definition>
        <argsstring>[4]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="296" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec4d_1acb04c2b844080f20708fa1d78fd03961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec4d</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec4d</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ac45a6441c90c553a2f93c7907ed4f34f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec4d</definition>
        <argsstring>(double value)</argsstring>
        <name>GfVec4d</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="73" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a7555a80b9d0f8112099389d085431463" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec4d</definition>
        <argsstring>(double s0, double s1, double s2, double s3)</argsstring>
        <name>GfVec4d</name>
        <param>
          <type>double</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s3</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="79" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a21ac6fc348bb957a36a2f54407a53202" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec4d</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec4d</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="86" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a26589e0f0548c40ca23b57f2ea061fa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec4d</definition>
        <argsstring>(class GfVec4f const &amp;other)</argsstring>
        <name>GfVec4d</name>
        <param>
          <type>class <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="92" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="313" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ac301fe2660601bfb00e3268b6b8dea86" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec4d</definition>
        <argsstring>(class GfVec4h const &amp;other)</argsstring>
        <name>GfVec4d</name>
        <param>
          <type>class <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="95" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="321" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a87ed5ea184d3d6acc7c2a12740a9497a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec4d</definition>
        <argsstring>(class GfVec4i const &amp;other)</argsstring>
        <name>GfVec4d</name>
        <param>
          <type>class <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="98" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="329" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a2f5f0fdd53afeeacb16b81bd874d4ef6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>GfVec4d&amp; Set</definition>
        <argsstring>(double s0, double s1, double s2, double s3)</argsstring>
        <name>Set</name>
        <param>
          <type>double</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>s3</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="135" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a0c31730f5ef1634f9112154ac3aa0c8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>GfVec4d&amp; Set</definition>
        <argsstring>(double const *a)</argsstring>
        <name>Set</name>
        <param>
          <type>double const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="144" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1aded95d2676df3338ef36491ad8da2a7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double const  *</type>
        <definition>double const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="149" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a3bb9b5a4861b768ea80cb3459104972a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double *</type>
        <definition>double* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="150" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a1b1913e7195aa108fb4d37d777c22bc4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double const  *</type>
        <definition>double const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="151" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a8b79b25972fd5003783327e1d2d05a03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double const  &amp;</type>
        <definition>double const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="154" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a43382a9121d867db0005aeb7563cb937" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double &amp;</type>
        <definition>double&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="155" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a1164002101953fd8e720eebd63655965" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec4d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="163" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a91a84233147b6c08b958fce434b52a90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec4d const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="169" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a9a4518928605b221a8f5dd83e13e7405" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec4f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ab432144b52c912af8ba299075299d88b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec4h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ab1f13844e9a83b254e5880f8e6544cb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec4i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a0804d3df4f6737ca7581912633452974" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="185" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a3b12199ce949155d51ec7610a40f5cc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>GfVec4d&amp; operator+=</definition>
        <argsstring>(GfVec4d const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="190" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="190" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a4da15bb7407a4a2591804da1a2e91fda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>GfVec4d&amp; operator-=</definition>
        <argsstring>(GfVec4d const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="202" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="202" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ad601d324ec375390c87de0a0fbd4f73c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>GfVec4d&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="214" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="214" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a78b3da251263802cf3eb5bc0c014e49c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="221" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ac713e6b5c1218ef69b82d7e5887e3f24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>GfVec4d&amp; operator/=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="230" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1ae9f93ae1a1218d2adb614fd543e8cd00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d operator/</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="236" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1aecfbe5f66f7848b63635cbe35a115cab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double operator *</definition>
        <argsstring>(GfVec4d const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="241" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a9f8d189082579962654310ef1287b3b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d GetProjection</definition>
        <argsstring>(GfVec4d const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="249" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="249" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a69322b4b3b506ae4f1199dca62b30849" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d GetComplement</definition>
        <argsstring>(GfVec4d const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="258" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a16195658683719527784d391e1b20ba7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="263" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1adca4fce8e3ab8fd1eacd396af7c9adbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetLength</definition>
        <argsstring>() const</argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="268" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a626f0c98105bfc96bc8b8a582f817627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Normalize</definition>
        <argsstring>(double eps=GF_MIN_VECTOR_LENGTH)</argsstring>
        <name>Normalize</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___basic_math_1gae311f33eddd983e9559c10758908de5b" kindref="member">GF_MIN_VECTOR_LENGTH</ref></defval>
        </param>
        <briefdescription>
<para>Normalizes the vector in place to unit length, returning the length before normalization. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length of the vector is smaller than <computeroutput>eps</computeroutput>, then the vector is set to vector/<computeroutput>eps</computeroutput>. The original length of the vector is returned. See also <ref refid="vec2d_8h_1aba4a21e52a2e2d5a01caaa5021d46e17" kindref="member">GfNormalize()</ref>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="280" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="280" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1af889568b1d376076ef2714845077c7e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d GetNormalized</definition>
        <argsstring>(double eps=GF_MIN_VECTOR_LENGTH) const</argsstring>
        <name>GetNormalized</name>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___basic_math_1gae311f33eddd983e9559c10758908de5b" kindref="member">GF_MIN_VECTOR_LENGTH</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="288" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="288" bodyend="292"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec4d_1a4063d0adbf25538e81f55fd215b4c692" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>static GfVec4d XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="101" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="101" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a5e7f162baa9b8ac4d687ba97268ede42" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>static GfVec4d YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="107" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="107" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a49232e1e2bf95b3c6514f214091afde0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>static GfVec4d ZAxis</definition>
        <argsstring>()</argsstring>
        <name>ZAxis</name>
        <briefdescription>
<para>Create a unit vector along the Z-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="113" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a8d546a38512858940f15f4f8456652d0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>static GfVec4d WAxis</definition>
        <argsstring>()</argsstring>
        <name>WAxis</name>
        <briefdescription>
<para>Create a unit vector along the W-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="119" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4d_1a66dafcc27d54657be599981346ce9d2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>static GfVec4d Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 4. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="127" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="127" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec4d_1a59b0c24285a1c9af858d9040574e9d57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec4d const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="158" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec4d_1ab03e69614279b0eccb7110612978d710" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d operator+</definition>
        <argsstring>(GfVec4d const &amp;l, GfVec4d const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="197" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec4d_1a89bab922227b42183dd982987c77ff77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d operator-</definition>
        <argsstring>(GfVec4d const &amp;l, GfVec4d const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="209" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec4d_1abf4a5b2e7c9a601af0bdadd2b82bdc27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d operator *</definition>
        <argsstring>(double s, GfVec4d const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4d.h" line="224" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="224" bodyend="226"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 4 double components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 4 components of type <computeroutput>double</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec4d.h" line="63" column="1" bodyfile="pxr/base/gf/vec4d.h" bodystart="62" bodyend="297"/>
    <listofallmembers>
      <member refid="class_gf_vec4d_1a72eabdcd77398d7880882f53f92764c1" prot="private" virt="non-virtual"><scope>GfVec4d</scope><name>_data</name></member>
      <member refid="class_gf_vec4d_1a66dafcc27d54657be599981346ce9d2c" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>Axis</name></member>
      <member refid="class_gf_vec4d_1aded95d2676df3338ef36491ad8da2a7d" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>data</name></member>
      <member refid="class_gf_vec4d_1a3bb9b5a4861b768ea80cb3459104972a" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>data</name></member>
      <member refid="class_gf_vec4d_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>dimension</name></member>
      <member refid="class_gf_vec4d_1a1b1913e7195aa108fb4d37d777c22bc4" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GetArray</name></member>
      <member refid="class_gf_vec4d_1a69322b4b3b506ae4f1199dca62b30849" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec4d_1adca4fce8e3ab8fd1eacd396af7c9adbb" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GetLength</name></member>
      <member refid="class_gf_vec4d_1a16195658683719527784d391e1b20ba7" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec4d_1af889568b1d376076ef2714845077c7e9" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GetNormalized</name></member>
      <member refid="class_gf_vec4d_1a9f8d189082579962654310ef1287b3b3" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec4d_1acb04c2b844080f20708fa1d78fd03961" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1ac45a6441c90c553a2f93c7907ed4f34f" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1a7555a80b9d0f8112099389d085431463" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1a21ac6fc348bb957a36a2f54407a53202" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1a26589e0f0548c40ca23b57f2ea061fa8" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1ac301fe2660601bfb00e3268b6b8dea86" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1a87ed5ea184d3d6acc7c2a12740a9497a" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>GfVec4d</name></member>
      <member refid="class_gf_vec4d_1a59b0c24285a1c9af858d9040574e9d57" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>hash_value</name></member>
      <member refid="class_gf_vec4d_1a626f0c98105bfc96bc8b8a582f817627" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>Normalize</name></member>
      <member refid="class_gf_vec4d_1a78b3da251263802cf3eb5bc0c014e49c" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator *</name></member>
      <member refid="class_gf_vec4d_1abf4a5b2e7c9a601af0bdadd2b82bdc27" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator *</name></member>
      <member refid="class_gf_vec4d_1aecfbe5f66f7848b63635cbe35a115cab" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator *</name></member>
      <member refid="class_gf_vec4d_1ad601d324ec375390c87de0a0fbd4f73c" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator *=</name></member>
      <member refid="class_gf_vec4d_1a91a84233147b6c08b958fce434b52a90" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator!=</name></member>
      <member refid="class_gf_vec4d_1ab03e69614279b0eccb7110612978d710" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator+</name></member>
      <member refid="class_gf_vec4d_1a3b12199ce949155d51ec7610a40f5cc6" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator+=</name></member>
      <member refid="class_gf_vec4d_1a0804d3df4f6737ca7581912633452974" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator-</name></member>
      <member refid="class_gf_vec4d_1a89bab922227b42183dd982987c77ff77" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator-</name></member>
      <member refid="class_gf_vec4d_1a4da15bb7407a4a2591804da1a2e91fda" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator-=</name></member>
      <member refid="class_gf_vec4d_1ae9f93ae1a1218d2adb614fd543e8cd00" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator/</name></member>
      <member refid="class_gf_vec4d_1ac713e6b5c1218ef69b82d7e5887e3f24" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator/=</name></member>
      <member refid="class_gf_vec4d_1a1164002101953fd8e720eebd63655965" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator==</name></member>
      <member refid="class_gf_vec4d_1a9a4518928605b221a8f5dd83e13e7405" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator==</name></member>
      <member refid="class_gf_vec4d_1ab432144b52c912af8ba299075299d88b" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator==</name></member>
      <member refid="class_gf_vec4d_1ab1f13844e9a83b254e5880f8e6544cb7" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator==</name></member>
      <member refid="class_gf_vec4d_1a8b79b25972fd5003783327e1d2d05a03" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator[]</name></member>
      <member refid="class_gf_vec4d_1a43382a9121d867db0005aeb7563cb937" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>operator[]</name></member>
      <member refid="class_gf_vec4d_1a5459d6283bff692e454aad6e9ad9acf0" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec4d_1a2f5f0fdd53afeeacb16b81bd874d4ef6" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>Set</name></member>
      <member refid="class_gf_vec4d_1a0c31730f5ef1634f9112154ac3aa0c8e" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>Set</name></member>
      <member refid="class_gf_vec4d_1a8d546a38512858940f15f4f8456652d0" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>WAxis</name></member>
      <member refid="class_gf_vec4d_1a4063d0adbf25538e81f55fd215b4c692" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>XAxis</name></member>
      <member refid="class_gf_vec4d_1a5e7f162baa9b8ac4d687ba97268ede42" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>YAxis</name></member>
      <member refid="class_gf_vec4d_1a49232e1e2bf95b3c6514f214091afde0" prot="public" virt="non-virtual"><scope>GfVec4d</scope><name>ZAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
