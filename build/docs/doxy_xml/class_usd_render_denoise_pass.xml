<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_render_denoise_pass" kind="class" language="C++" prot="public">
    <compoundname>UsdRenderDenoisePass</compoundname>
    <basecompoundref refid="class_usd_typed" prot="public" virt="non-virtual">UsdTyped</basecompoundref>
    <includes refid="denoise_pass_8h" local="no">denoisePass.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_render_denoise_pass_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa6650141c3d230f8e4e51461e1d9e645" kindref="member">UsdSchemaKind::ConcreteTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="71" column="1" bodyfile="pxr/usd/usdRender/denoisePass.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_render_denoise_pass_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="149" column="1" bodyfile="pxr/usd/usdRender/denoisePass.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_render_denoise_pass_1a4a031ff27405b1d58f5b5562a25b2337" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdRenderDenoisePass</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdRenderDenoisePass</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_render_denoise_pass" kindref="compound">UsdRenderDenoisePass</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_render_denoise_pass_1a72a4251d6772d1bdf17af0b50481da7c" kindref="member">UsdRenderDenoisePass::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="77" column="1" bodyfile="pxr/usd/usdRender/denoisePass.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_render_denoise_pass_1ad68f02222b2bef4f1ae69384e0c96774" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdRenderDenoisePass</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdRenderDenoisePass</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_render_denoise_pass" kindref="compound">UsdRenderDenoisePass</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_render_denoise_pass" kindref="compound">UsdRenderDenoisePass</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="85" column="1" bodyfile="pxr/usd/usdRender/denoisePass.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_render_denoise_pass_1ac9e6cddc054fc5d29bebc2354caa1876" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDRENDER_API</type>
        <definition>virtual USDRENDER_API ~UsdRenderDenoisePass</definition>
        <argsstring>()</argsstring>
        <name>~UsdRenderDenoisePass</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_render_denoise_pass_1a213b41b80903043bb63cfba685831205" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRENDER_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDRENDER_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_render_denoise_pass_1a72a4251d6772d1bdf17af0b50481da7c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRENDER_API <ref refid="class_usd_render_denoise_pass" kindref="compound">UsdRenderDenoisePass</ref></type>
        <definition>static USDRENDER_API UsdRenderDenoisePass Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_render_denoise_pass" kindref="compound">UsdRenderDenoisePass</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdRenderDenoisePass(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_render_denoise_pass_1a58f77d426dd760f545880db18f6028ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRENDER_API <ref refid="class_usd_render_denoise_pass" kindref="compound">UsdRenderDenoisePass</ref></type>
        <definition>static USDRENDER_API UsdRenderDenoisePass Define</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Define</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Attempt to ensure a <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis> adhering to this schema at <computeroutput>path</computeroutput> is defined (according to <ref refid="class_usd_prim_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">UsdPrim::IsDefined()</ref>) on this stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If a prim adhering to this schema at <computeroutput>path</computeroutput> is already defined on this stage, return that prim. Otherwise author an <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> with <emphasis>specifier</emphasis> == <emphasis>SdfSpecifierDef</emphasis> and this schema&apos;s prim type name for the prim at <computeroutput>path</computeroutput> at the current EditTarget. Author <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> s with <computeroutput>specifier</computeroutput> == <emphasis>SdfSpecifierDef</emphasis> and empty typeName at the current EditTarget for any nonexistent, or existing but not <emphasis>Defined</emphasis> ancestors.</para>
<para>The given <emphasis>path</emphasis> must be an absolute prim path that does not contain any variant selections.</para>
<para>If it is impossible to author any of the necessary PrimSpecs, (for example, in case <emphasis>path</emphasis> cannot map to the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>&apos;s namespace) issue an error and return an invalid <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis>.</para>
<para>Note that this method may return a defined prim whose typeName does not specify this schema class, in case a stronger typeName opinion overrides the opinion at the current EditTarget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_render_denoise_pass_1ab337deeefb883bb6bcb563c6c7c9e1fd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDRENDER_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDRENDER_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_typed_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_render_denoise_pass_1a843b95ad9d64c52fc862cd569bc623be" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRENDER_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDRENDER_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_render_denoise_pass_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="153" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_render_denoise_pass_1a6fb6bc8e96b6a96303733398a432ee9f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDRENDER_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDRENDER_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_typed_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRender/denoisePass.h" line="157" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A RenderDenoisePass generates renders via a denoising process. </para>
    </briefdescription>
    <detaileddescription>
<para>This may be the same renderer that a pipeline uses for UsdRender, or may be a separate one. Notably, a RenderDenoisePass requires another Pass to be present for it to operate. The denoising process itself is not generative, and requires images inputs to operate.</para>
<para>As denoising integration varies so widely across pipelines, all implementation details are left to pipeline-specific prims that inherit from RenderDenoisePass. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7916">
        <label>UsdRenderDenoisePass</label>
        <link refid="class_usd_render_denoise_pass"/>
        <childnode refid="7917" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7917">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="7918" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7918">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7919">
        <label>UsdRenderDenoisePass</label>
        <link refid="class_usd_render_denoise_pass"/>
        <childnode refid="7920" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7920">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="7921" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7921">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdRender/denoisePass.h" line="66" column="1" bodyfile="pxr/usd/usdRender/denoisePass.h" bodystart="65" bodyend="170"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_render_denoise_pass_1ab337deeefb883bb6bcb563c6c7c9e1fd" prot="protected" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_render_denoise_pass_1a843b95ad9d64c52fc862cd569bc623be" prot="private" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_render_denoise_pass_1a6fb6bc8e96b6a96303733398a432ee9f" prot="private" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_render_denoise_pass_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_render_denoise_pass_1a58f77d426dd760f545880db18f6028ce" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>Define</name></member>
      <member refid="class_usd_render_denoise_pass_1a72a4251d6772d1bdf17af0b50481da7c" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>Get</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>GetPrim</name></member>
      <member refid="class_usd_render_denoise_pass_1a213b41b80903043bb63cfba685831205" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>operator bool</name></member>
      <member refid="class_usd_render_denoise_pass_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>schemaKind</name></member>
      <member refid="class_usd_render_denoise_pass_1a4a031ff27405b1d58f5b5562a25b2337" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdRenderDenoisePass</name></member>
      <member refid="class_usd_render_denoise_pass_1ad68f02222b2bef4f1ae69384e0c96774" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdRenderDenoisePass</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_render_denoise_pass_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdRenderDenoisePass</scope><name>UsdTyped</name></member>
      <member refid="class_usd_render_denoise_pass_1ac9e6cddc054fc5d29bebc2354caa1876" prot="public" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>~UsdRenderDenoisePass</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdRenderDenoisePass</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
