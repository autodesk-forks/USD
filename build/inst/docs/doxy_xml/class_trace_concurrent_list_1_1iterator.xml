<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_concurrent_list_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>TraceConcurrentList::iterator</compoundname>
    <includes refid="concurrent_list_8h" local="no">concurrentList.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_trace_concurrent_list_1_1iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="63" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_concurrent_list_1_1iterator_1abd94952aa088bb8815104efbf46430ca" prot="public" static="no">
        <type>T</type>
        <definition>using value =  T</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="64" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_concurrent_list_1_1iterator_1ab088798d28525c0befe3c707b95c5bc2" prot="public" static="no">
        <type>T *</type>
        <definition>using pointer =  T*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="65" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_concurrent_list_1_1iterator_1a0c5a1541ecf7ad17925583cf6abd2c65" prot="public" static="no">
        <type>T &amp;</type>
        <definition>using reference =  T&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="66" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_concurrent_list_1_1iterator_1aec07e0ee98729a19bc41fe09e433f5d0" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>using difference_type =  ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="67" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_concurrent_list_1_1iterator_1a96e545270712ab49eaae15bdaa9bbf23" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* _node</definition>
        <argsstring></argsstring>
        <name>_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="100" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_trace_concurrent_list_1_1iterator_1a04496962963aab98eb287cc25ae10e27" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TraceConcurrentList</definition>
        <argsstring></argsstring>
        <name>TraceConcurrentList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="101" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1a67d652c2433cf9217ed2a1485092fdd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>()</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="69" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1a170c65e2b49f7a77927598d053661ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="71" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="71" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1a6ee9dc5776b24dedfd849715bcc3bebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator *</definition>
        <argsstring>()</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="75" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1af1b1c7856a59f34c7d3570f946a2ff00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_concurrent_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="79" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1a538d230f8b52d2bc0950e26ce74ec239" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_concurrent_list_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="84" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1acb2f06c4b1ee127c70370cfaf77a0976" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator !=</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="class_trace_concurrent_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="90" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1a63d0e3db2d00378d96905bff89bd9ea4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_trace_concurrent_list_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="94" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="94" bodyend="96"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_trace_concurrent_list_1_1iterator_1aeb624aadd0b9ab5a6960273df76bbbcc" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>(Node *node)</argsstring>
        <name>iterator</name>
        <param>
          <type>Node *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/concurrentList.h" line="99" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="99" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides forward iterator support to iterate over all the items. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/concurrentList.h" line="60" column="1" bodyfile="pxr/base/trace/concurrentList.h" bodystart="60" bodyend="102"/>
    <listofallmembers>
      <member refid="class_trace_concurrent_list_1_1iterator_1a96e545270712ab49eaae15bdaa9bbf23" prot="private" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>_node</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1aec07e0ee98729a19bc41fe09e433f5d0" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>difference_type</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a67d652c2433cf9217ed2a1485092fdd1" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>iterator</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1aeb624aadd0b9ab5a6960273df76bbbcc" prot="private" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>iterator</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>iterator_category</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1acb2f06c4b1ee127c70370cfaf77a0976" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>operator !=</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a6ee9dc5776b24dedfd849715bcc3bebc" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>operator *</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1af1b1c7856a59f34c7d3570f946a2ff00" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>operator++</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a538d230f8b52d2bc0950e26ce74ec239" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>operator++</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a170c65e2b49f7a77927598d053661ddb" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a63d0e3db2d00378d96905bff89bd9ea4" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>operator==</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1ab088798d28525c0befe3c707b95c5bc2" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>pointer</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a0c5a1541ecf7ad17925583cf6abd2c65" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>reference</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1a04496962963aab98eb287cc25ae10e27" prot="private" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>TraceConcurrentList</name></member>
      <member refid="class_trace_concurrent_list_1_1iterator_1abd94952aa088bb8815104efbf46430ca" prot="public" virt="non-virtual"><scope>TraceConcurrentList::iterator</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
