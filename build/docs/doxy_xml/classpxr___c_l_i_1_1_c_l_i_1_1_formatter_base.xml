<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>pxr_CLI::CLI::FormatterBase</compoundname>
    <derivedcompoundref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter" prot="public" virt="non-virtual">Formatter</derivedcompoundref>
    <derivedcompoundref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_lambda" prot="public" virt="non-virtual">FormatterLambda</derivedcompoundref>
    <includes refid="_c_l_i11_8h" local="no">CLI11.h</includes>
      <sectiondef kind="user-defined">
      <header>Options</header>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a49a688c49a8eca1a0e576a96dd036e9d" prot="protected" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t column_width_</definition>
        <argsstring></argsstring>
        <name>column_width_</name>
        <initializer>{30}</initializer>
        <briefdescription>
<para>The width of the first column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4003" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4003" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a07223c982b9be4faded6cb99b2eef712" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, std::string &gt;</type>
        <definition>std::map&lt;std::string, std::string&gt; labels_</definition>
        <argsstring></argsstring>
        <name>labels_</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>The required help printout labels (user changeable) Values are Needs, Excludes, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4007" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4007" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Basic</header>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1aae16b56c9f3cb42ce562e2cfc50be9b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FormatterBase</definition>
        <argsstring>()=default</argsstring>
        <name>FormatterBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4014" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a2465b6a6e87a6836cbb1dddf600d6161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FormatterBase</definition>
        <argsstring>(const FormatterBase &amp;)=default</argsstring>
        <name>FormatterBase</name>
        <param>
          <type>const <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kindref="compound">FormatterBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4015" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1ada3e2449e7eff5e8456599f1f2b8ad82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FormatterBase</definition>
        <argsstring>(FormatterBase &amp;&amp;)=default</argsstring>
        <name>FormatterBase</name>
        <param>
          <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kindref="compound">FormatterBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4016" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a05a272478763bef4528f38e3dbac1bbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kindref="compound">FormatterBase</ref> &amp;</type>
        <definition>FormatterBase&amp; operator=</definition>
        <argsstring>(const FormatterBase &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kindref="compound">FormatterBase</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4017" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a5b34fbb21629142e6ddad35a0174667d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kindref="compound">FormatterBase</ref> &amp;</type>
        <definition>FormatterBase&amp; operator=</definition>
        <argsstring>(FormatterBase &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base" kindref="compound">FormatterBase</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4018" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a55011f5b55ffaa71d04d05df2ea0e8e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual ~FormatterBase</definition>
        <argsstring>() noexcept</argsstring>
        <name>~FormatterBase</name>
        <briefdescription>
<para>Adding a destructor in this form to work around bug in GCC 4.7. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4021" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4021" bodyend="4021"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a3c3a2300178ed17ecf98b0e04313a604" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string make_help</definition>
        <argsstring>(const App *, std::string, AppFormatMode) const =0</argsstring>
        <name>make_help</name>
        <reimplementedby refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_lambda_1a87e41ec34986642e4e9900bedacdf2ac">make_help</reimplementedby>
        <reimplementedby refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_1a188cdf33618c577f1266a78a39f11abd">make_help</reimplementedby>
        <param>
          <type>const <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_app" kindref="compound">App</ref> *</type>
        </param>
        <param>
          <type>std::string</type>
        </param>
        <param>
          <type>AppFormatMode</type>
        </param>
        <briefdescription>
<para>This is the key method that puts together help. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4024" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Setters</header>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a413bff586d9480543b25e5b05b5f279a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void label</definition>
        <argsstring>(std::string key, std::string val)</argsstring>
        <name>label</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the &quot;REQUIRED&quot; label. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4031" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4031" bodyend="4031"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a9d49f5969dc6e08c8cfc7fd1f4a884e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void column_width</definition>
        <argsstring>(std::size_t val)</argsstring>
        <name>column_width</name>
        <param>
          <type>std::size_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the column width. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4034" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4034" bodyend="4034"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Getters</header>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1ad74fe261bd7b52e74ab248cdff052924" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CLI11_NODISCARD std::string</type>
        <definition>CLI11_NODISCARD std::string get_label</definition>
        <argsstring>(std::string key) const</argsstring>
        <name>get_label</name>
        <param>
          <type>std::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Get the current value of a name (REQUIRED, etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4041" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4041" bodyend="4045"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a0a00ae86f1d2262a981ec52aa3580f62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CLI11_NODISCARD std::size_t</type>
        <definition>CLI11_NODISCARD std::size_t get_column_width</definition>
        <argsstring>() const</argsstring>
        <name>get_column_width</name>
        <briefdescription>
<para>Get the current column width. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="4048" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="4048" bodyend="4048"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the minimum requirements to run a formatter. </para>
    </briefdescription>
    <detaileddescription>
<para>A user can subclass this is if they do not care at all about the structure in <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter" kindref="compound">CLI::Formatter</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1202">
        <label>Formatter</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter"/>
        <childnode refid="1201" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1201">
        <label>FormatterBase</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base"/>
      </node>
      <node id="1203">
        <label>FormatterLambda</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_lambda"/>
        <childnode refid="1201" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="3997" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="3997" bodyend="4051"/>
    <listofallmembers>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a9d49f5969dc6e08c8cfc7fd1f4a884e3" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>column_width</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a49a688c49a8eca1a0e576a96dd036e9d" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>column_width_</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1aae16b56c9f3cb42ce562e2cfc50be9b2" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>FormatterBase</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a2465b6a6e87a6836cbb1dddf600d6161" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>FormatterBase</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1ada3e2449e7eff5e8456599f1f2b8ad82" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>FormatterBase</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a0a00ae86f1d2262a981ec52aa3580f62" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>get_column_width</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1ad74fe261bd7b52e74ab248cdff052924" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>get_label</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a413bff586d9480543b25e5b05b5f279a" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>label</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a07223c982b9be4faded6cb99b2eef712" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>labels_</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a3c3a2300178ed17ecf98b0e04313a604" prot="public" virt="pure-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>make_help</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a05a272478763bef4528f38e3dbac1bbc" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>operator=</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a5b34fbb21629142e6ddad35a0174667d" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>operator=</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_formatter_base_1a55011f5b55ffaa71d04d05df2ea0e8e2" prot="public" virt="virtual"><scope>pxr_CLI::CLI::FormatterBase</scope><name>~FormatterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
