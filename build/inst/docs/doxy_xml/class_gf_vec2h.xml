<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec2h" kind="class" language="C++" prot="public">
    <compoundname>GfVec2h</compoundname>
    <includes refid="vec2h_8h" local="no">vec2h.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec2h_1a512284adad2afc1cb29997cf585d965d" prot="public" static="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>typedef GfHalf ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="67" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec2h_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="68" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec2h_1a9f0110a2576ef2feb2f07e44b2766440" prot="private" static="no" mutable="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf _data[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="275" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec2h_1a2ed6d380a7fd2ffd154bd4f3ec80cd0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec2h</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec2h</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1ae3ddc2e7e2d8ced760762fb78c9aaaab" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec2h</definition>
        <argsstring>(GfHalf value)</argsstring>
        <name>GfVec2h</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="74" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a58844a3dee5a493734694089682cc51e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec2h</definition>
        <argsstring>(GfHalf s0, GfHalf s1)</argsstring>
        <name>GfVec2h</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s1</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="80" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a4188ffb6102f87de09457ca9c6117c08" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec2h</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec2h</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="87" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a984b0384f65a7ddbfcf1f0b02ec340a0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec2h</definition>
        <argsstring>(class GfVec2d const &amp;other)</argsstring>
        <name>GfVec2h</name>
        <param>
          <type>class <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="93" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="292" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a8dc8e209221f3a1cb1dac89243bcd31e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec2h</definition>
        <argsstring>(class GfVec2f const &amp;other)</argsstring>
        <name>GfVec2h</name>
        <param>
          <type>class <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="96" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="298" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1aba387cb0d2be5ac3847aa7d9b94f957f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec2h</definition>
        <argsstring>(class GfVec2i const &amp;other)</argsstring>
        <name>GfVec2h</name>
        <param>
          <type>class <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="99" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="304" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a5fed35e07e7ac6df720b757281280bec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> &amp;</type>
        <definition>GfVec2h&amp; Set</definition>
        <argsstring>(GfHalf s0, GfHalf s1)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s1</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="124" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1affa2f201ca850f9b9247a1aefe758a40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> &amp;</type>
        <definition>GfVec2h&amp; Set</definition>
        <argsstring>(GfHalf const *a)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="131" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1afafdbc3262e85ed2a72eb36060b3fc5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  *</type>
        <definition>GfHalf const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="136" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a78cb19ccdc85588f4f9097d1f0f65eff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> *</type>
        <definition>GfHalf* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="137" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a2353a58d92a73f16541a2732c5025c25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  *</type>
        <definition>GfHalf const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="138" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a07e409d151715c0f1050f6c59701013b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  &amp;</type>
        <definition>GfHalf const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="141" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a90770070a228360ab6d6ebccbc7034fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> &amp;</type>
        <definition>GfHalf&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="142" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a81cf15e8a9f86000d466ada731aef129" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec2h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="150" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1ab5ec9130d8004aee33432d49a1734426" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec2h const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="154" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1abe23630d3b474e98bea0560d19f88768" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1aaea9ce7b70f26ad1dcbf9a73d5518dc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1af5390cbf370d0dade5648577a48b3c44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a4d4b961e08dfa845b9ee8633d29e3492" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="170" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a1eb32b1daa9315d518893517ed2615b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> &amp;</type>
        <definition>GfVec2h&amp; operator+=</definition>
        <argsstring>(GfVec2h const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="175" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a4a7dfe267d49db4d8a31977b88b6dc0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> &amp;</type>
        <definition>GfVec2h&amp; operator-=</definition>
        <argsstring>(GfVec2h const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="185" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a0ed1cb8cc27f3b56e3142af8508dc9c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> &amp;</type>
        <definition>GfVec2h&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="195" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a1e36dd629b8ac6afdabfe7ca278524d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="200" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1ac8ef1edb44189fef6c7e36415d90024c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> &amp;</type>
        <definition>GfVec2h&amp; operator/=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="209" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a2902e457fed646427c5cdda8eb3bac7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h operator/</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="215" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1add5b2e5143ed46006d6e2c05b341686a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf operator *</definition>
        <argsstring>(GfVec2h const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="220" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1af430ef0488f98f7b1a66f6d0060b8b51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h GetProjection</definition>
        <argsstring>(GfVec2h const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="228" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1ad98b3ce7aa5f4a14fdf52078293140db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h GetComplement</definition>
        <argsstring>(GfVec2h const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="237" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a98273f3be3eaaafbf30c3ef142e6c570" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="242" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLength</definition>
        <argsstring>() const</argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="247" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a865d492c9cd8cd8c0334f92b77b012e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf Normalize</definition>
        <argsstring>(GfHalf eps=0.001)</argsstring>
        <name>Normalize</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
<para>Normalizes the vector in place to unit length, returning the length before normalization. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length of the vector is smaller than <computeroutput>eps</computeroutput>, then the vector is set to vector/<computeroutput>eps</computeroutput>. The original length of the vector is returned. See also <ref refid="vec2d_8h_1aba4a21e52a2e2d5a01caaa5021d46e17" kindref="member">GfNormalize()</ref>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="259" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="259" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a1450884273db5d306148d30b74ea4010" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h GetNormalized</definition>
        <argsstring>(GfHalf eps=0.001) const</argsstring>
        <name>GetNormalized</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="267" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="267" bodyend="271"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec2h_1ae0f4b22ec0b55d3941605e60653c6192" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>static GfVec2h XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="102" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1ac8b17a949b39fe1af12745fd468a0335" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>static GfVec2h YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="108" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2h_1a0d56dc856d337cb4a2d3181a0a9b8f46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>static GfVec2h Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="116" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="116" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec2h_1ad01f7deff0faab8d887e695072dcc3d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec2h const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="145" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2h_1a9dda46e307e7656de606408bb5ab0233" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h operator+</definition>
        <argsstring>(GfVec2h const &amp;l, GfVec2h const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="180" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2h_1aac1a229da45824776cdff34d75b84f9f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h operator-</definition>
        <argsstring>(GfVec2h const &amp;l, GfVec2h const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="190" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2h_1a0097c008d97206af9d0924a4bd478691" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref></type>
        <definition>GfVec2h operator *</definition>
        <argsstring>(double s, GfVec2h const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2h.h" line="203" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="203" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 2 GfHalf components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 2 components of type <computeroutput>GfHalf</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec2h.h" line="64" column="1" bodyfile="pxr/base/gf/vec2h.h" bodystart="63" bodyend="276"/>
    <listofallmembers>
      <member refid="class_gf_vec2h_1a9f0110a2576ef2feb2f07e44b2766440" prot="private" virt="non-virtual"><scope>GfVec2h</scope><name>_data</name></member>
      <member refid="class_gf_vec2h_1a0d56dc856d337cb4a2d3181a0a9b8f46" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>Axis</name></member>
      <member refid="class_gf_vec2h_1afafdbc3262e85ed2a72eb36060b3fc5b" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>data</name></member>
      <member refid="class_gf_vec2h_1a78cb19ccdc85588f4f9097d1f0f65eff" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>data</name></member>
      <member refid="class_gf_vec2h_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>dimension</name></member>
      <member refid="class_gf_vec2h_1a2353a58d92a73f16541a2732c5025c25" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GetArray</name></member>
      <member refid="class_gf_vec2h_1ad98b3ce7aa5f4a14fdf52078293140db" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec2h_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GetLength</name></member>
      <member refid="class_gf_vec2h_1a98273f3be3eaaafbf30c3ef142e6c570" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec2h_1a1450884273db5d306148d30b74ea4010" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GetNormalized</name></member>
      <member refid="class_gf_vec2h_1af430ef0488f98f7b1a66f6d0060b8b51" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec2h_1a2ed6d380a7fd2ffd154bd4f3ec80cd0d" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1ae3ddc2e7e2d8ced760762fb78c9aaaab" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1a58844a3dee5a493734694089682cc51e" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1a4188ffb6102f87de09457ca9c6117c08" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1a984b0384f65a7ddbfcf1f0b02ec340a0" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1a8dc8e209221f3a1cb1dac89243bcd31e" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1aba387cb0d2be5ac3847aa7d9b94f957f" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>GfVec2h</name></member>
      <member refid="class_gf_vec2h_1ad01f7deff0faab8d887e695072dcc3d5" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>hash_value</name></member>
      <member refid="class_gf_vec2h_1a865d492c9cd8cd8c0334f92b77b012e3" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>Normalize</name></member>
      <member refid="class_gf_vec2h_1a1e36dd629b8ac6afdabfe7ca278524d0" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator *</name></member>
      <member refid="class_gf_vec2h_1a0097c008d97206af9d0924a4bd478691" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator *</name></member>
      <member refid="class_gf_vec2h_1add5b2e5143ed46006d6e2c05b341686a" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator *</name></member>
      <member refid="class_gf_vec2h_1a0ed1cb8cc27f3b56e3142af8508dc9c7" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator *=</name></member>
      <member refid="class_gf_vec2h_1ab5ec9130d8004aee33432d49a1734426" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator!=</name></member>
      <member refid="class_gf_vec2h_1a9dda46e307e7656de606408bb5ab0233" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator+</name></member>
      <member refid="class_gf_vec2h_1a1eb32b1daa9315d518893517ed2615b9" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator+=</name></member>
      <member refid="class_gf_vec2h_1a4d4b961e08dfa845b9ee8633d29e3492" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator-</name></member>
      <member refid="class_gf_vec2h_1aac1a229da45824776cdff34d75b84f9f" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator-</name></member>
      <member refid="class_gf_vec2h_1a4a7dfe267d49db4d8a31977b88b6dc0a" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator-=</name></member>
      <member refid="class_gf_vec2h_1a2902e457fed646427c5cdda8eb3bac7d" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator/</name></member>
      <member refid="class_gf_vec2h_1ac8ef1edb44189fef6c7e36415d90024c" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator/=</name></member>
      <member refid="class_gf_vec2h_1a81cf15e8a9f86000d466ada731aef129" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator==</name></member>
      <member refid="class_gf_vec2h_1abe23630d3b474e98bea0560d19f88768" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator==</name></member>
      <member refid="class_gf_vec2h_1aaea9ce7b70f26ad1dcbf9a73d5518dc8" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator==</name></member>
      <member refid="class_gf_vec2h_1af5390cbf370d0dade5648577a48b3c44" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator==</name></member>
      <member refid="class_gf_vec2h_1a07e409d151715c0f1050f6c59701013b" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator[]</name></member>
      <member refid="class_gf_vec2h_1a90770070a228360ab6d6ebccbc7034fc" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>operator[]</name></member>
      <member refid="class_gf_vec2h_1a512284adad2afc1cb29997cf585d965d" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec2h_1a5fed35e07e7ac6df720b757281280bec" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>Set</name></member>
      <member refid="class_gf_vec2h_1affa2f201ca850f9b9247a1aefe758a40" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>Set</name></member>
      <member refid="class_gf_vec2h_1ae0f4b22ec0b55d3941605e60653c6192" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>XAxis</name></member>
      <member refid="class_gf_vec2h_1ac8b17a949b39fe1af12745fd468a0335" prot="public" virt="non-virtual"><scope>GfVec2h</scope><name>YAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
