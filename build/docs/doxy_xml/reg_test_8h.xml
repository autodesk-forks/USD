<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="reg_test_8h" kind="file" language="C++">
    <compoundname>regTest.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2tf_2api_8h" local="yes">pxr/base/tf/api.h</includes>
    <includes refid="singleton_8h" local="yes">pxr/base/tf/singleton.h</includes>
    <includes refid="tf_2hash_8h" local="yes">pxr/base/tf/hash.h</includes>
    <includes refid="hashmap_8h" local="yes">pxr/base/tf/hashmap.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="76421">
        <label>atomic</label>
      </node>
      <node id="76426">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="76427" relation="include">
        </childnode>
        <childnode refid="76428" relation="include">
        </childnode>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76418" relation="include">
        </childnode>
        <childnode refid="76429" relation="include">
        </childnode>
      </node>
      <node id="76441">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76418" relation="include">
        </childnode>
        <childnode refid="76442" relation="include">
        </childnode>
      </node>
      <node id="76417">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="76418" relation="include">
        </childnode>
      </node>
      <node id="76428">
        <label>cstdint</label>
      </node>
      <node id="76420">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="76418" relation="include">
        </childnode>
      </node>
      <node id="76430">
        <label>cmath</label>
      </node>
      <node id="76423">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76424" relation="include">
        </childnode>
        <childnode refid="76425" relation="include">
        </childnode>
        <childnode refid="76426" relation="include">
        </childnode>
        <childnode refid="76431" relation="include">
        </childnode>
        <childnode refid="76432" relation="include">
        </childnode>
      </node>
      <node id="76434">
        <label>string</label>
      </node>
      <node id="76435">
        <label>map</label>
      </node>
      <node id="76427">
        <label>cinttypes</label>
      </node>
      <node id="76415">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="76424">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76418" relation="include">
        </childnode>
      </node>
      <node id="76429">
        <label>sys/types.h</label>
      </node>
      <node id="76414">
        <label>pxr/base/tf/regTest.h</label>
        <link refid="reg_test_8h"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76416" relation="include">
        </childnode>
        <childnode refid="76419" relation="include">
        </childnode>
        <childnode refid="76422" relation="include">
        </childnode>
        <childnode refid="76441" relation="include">
        </childnode>
        <childnode refid="76434" relation="include">
        </childnode>
      </node>
      <node id="76425">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76418" relation="include">
        </childnode>
        <childnode refid="76426" relation="include">
        </childnode>
        <childnode refid="76430" relation="include">
        </childnode>
      </node>
      <node id="76440">
        <label>vector</label>
      </node>
      <node id="76416">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="76417" relation="include">
        </childnode>
      </node>
      <node id="76432">
        <label>utility</label>
      </node>
      <node id="76418">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="76422">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76423" relation="include">
        </childnode>
        <childnode refid="76416" relation="include">
        </childnode>
        <childnode refid="76433" relation="include">
        </childnode>
        <childnode refid="76434" relation="include">
        </childnode>
        <childnode refid="76435" relation="include">
        </childnode>
        <childnode refid="76436" relation="include">
        </childnode>
        <childnode refid="76437" relation="include">
        </childnode>
        <childnode refid="76438" relation="include">
        </childnode>
        <childnode refid="76439" relation="include">
        </childnode>
        <childnode refid="76432" relation="include">
        </childnode>
        <childnode refid="76440" relation="include">
        </childnode>
      </node>
      <node id="76431">
        <label>math.h</label>
      </node>
      <node id="76419">
        <label>pxr/base/tf/singleton.h</label>
        <link refid="singleton_8h"/>
        <childnode refid="76415" relation="include">
        </childnode>
        <childnode refid="76420" relation="include">
        </childnode>
        <childnode refid="76421" relation="include">
        </childnode>
      </node>
      <node id="76442">
        <label>unordered_map</label>
      </node>
      <node id="76439">
        <label>type_traits</label>
      </node>
      <node id="76437">
        <label>set</label>
      </node>
      <node id="76433">
        <label>cstring</label>
      </node>
      <node id="76436">
        <label>memory</label>
      </node>
      <node id="76438">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_tf_reg_test" prot="public">TfRegTest</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__tf___internal_1gaeb6c58f30b74d3fee64e79ca01188f48" prot="public" static="no">
        <name>TF_ADD_REGTEST</name>
        <param><defname>name</defname></param>
        <briefdescription>
<para>Adds the function Test_<computeroutput>name</computeroutput>, under name <computeroutput>name</computeroutput>, as a runnable regression test. </para>
        </briefdescription>
        <detaileddescription>
<para>Test_<computeroutput>name</computeroutput> must be of type <computeroutput>RegFunc</computeroutput> or <computeroutput>RegFuncWithArgs</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/regTest.h" line="149" column="9" bodyfile="pxr/base/tf/regTest.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="reg_test_8h_1a22898ab2d99fd3f9c8a646604ff79c51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TF_API_TEMPLATE_CLASS</definition>
        <argsstring>(TfSingleton&lt; TfRegTest &gt;)</argsstring>
        <name>TF_API_TEMPLATE_CLASS</name>
        <param>
          <type><ref refid="class_tf_singleton" kindref="compound">TfSingleton</ref>&lt; <ref refid="class_tf_reg_test" kindref="compound">TfRegTest</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/regTest.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Support for simple regression tests. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_REG_TEST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_REG_TEST_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="singleton_8h" kindref="compound">pxr/base/tf/singleton.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tf_2hash_8h" kindref="compound">pxr/base/tf/hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/hashmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_tf_reg_test" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_reg_test" kindref="compound">TfRegTest</ref><sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106" refid="class_tf_reg_test_1a43449224cb09c2401fd1571e686c104e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_tf_reg_test_1a43449224cb09c2401fd1571e686c104e" kindref="member">Main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetInstance()._Main(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_reg_test" kindref="compound">TfRegTest</ref>&amp;<sp/>GetInstance();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_tf_reg_test_1a873c112a0c7ab1bae6e415478d89d026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="class_tf_reg_test_1a873c112a0c7ab1bae6e415478d89d026" kindref="member">RegFunc</ref>)();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_tf_reg_test_1aac9c8ae193d39c62bb1df8d850d1d84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bool<sp/>(*<ref refid="class_tf_reg_test_1aac9c8ae193d39c62bb1df8d850d1d84e" kindref="member">RegFuncWithArgs</ref>)(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Register(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/><ref refid="class_tf_reg_test_1a873c112a0c7ab1bae6e415478d89d026" kindref="member">RegFunc</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Register(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name,<sp/><ref refid="class_tf_reg_test_1aac9c8ae193d39c62bb1df8d850d1d84e" kindref="member">RegFuncWithArgs</ref>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_singleton" kindref="compound">TfSingleton</ref>&lt;<ref refid="class_tf_reg_test" kindref="compound">TfRegTest</ref>&gt;;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_Main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_PrintTestNames();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfHashMap&lt;std::string,<sp/>RegFunc,<sp/>TfHash&gt;<sp/>_Hash;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfHashMap&lt;std::string,<sp/>RegFuncWithArgs,<sp/>TfHash&gt;<sp/>_HashWithArgs;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>_Hash<sp/>_functionTable;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>_HashWithArgs<sp/>_functionTableWithArgs;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">TF_API_TEMPLATE_CLASS(<ref refid="class_tf_singleton" kindref="compound">TfSingleton&lt;TfRegTest&gt;</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="group__group__tf___internal_1gaeb6c58f30b74d3fee64e79ca01188f48" refkind="member"><highlight class="preprocessor">#define<sp/>TF_ADD_REGTEST(name)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>bool<sp/>Tf_RegTst##name<sp/>=<sp/>TfRegTest::GetInstance().Register(#name,<sp/>Test_##name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/regTest.h"/>
  </compounddef>
</doxygen>
