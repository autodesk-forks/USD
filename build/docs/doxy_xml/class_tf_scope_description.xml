<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_scope_description" kind="class" language="C++" prot="public">
    <compoundname>TfScopeDescription</compoundname>
    <includes refid="scope_description_8h" local="no">scopeDescription.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_scope_description_1ae25950f0156fa3e43a7de138f72a0586" prot="private" static="no" mutable="no">
        <type>boost::optional&lt; std::string &gt;</type>
        <definition>boost::optional&lt;std::string&gt; _ownedString</definition>
        <argsstring></argsstring>
        <name>_ownedString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="112" column="1" bodyfile="pxr/base/tf/scopeDescription.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_scope_description_1a5743de41c3f0b6991b680bbcfe529672" prot="private" static="no" mutable="no">
        <type>char const  *</type>
        <definition>char const* _description</definition>
        <argsstring></argsstring>
        <name>_description</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="113" column="1" bodyfile="pxr/base/tf/scopeDescription.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_scope_description_1ae46fe53039b88eb37ee0085546ad566e" prot="private" static="no" mutable="no">
        <type>TfCallContext</type>
        <definition>TfCallContext _context</definition>
        <argsstring></argsstring>
        <name>_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="114" column="1" bodyfile="pxr/base/tf/scopeDescription.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_scope_description_1aa818d3797505032dab3db5983464650f" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* _localStack</definition>
        <argsstring></argsstring>
        <name>_localStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="115" column="1" bodyfile="pxr/base/tf/scopeDescription.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_scope_description_1a018fef8d6d2d486cae3832e641870105" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> *</type>
        <definition>TfScopeDescription* _prev</definition>
        <argsstring></argsstring>
        <name>_prev</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="116" column="1" bodyfile="pxr/base/tf/scopeDescription.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_scope_description_1a54ffd509c4e4f33e0f99687a3413fda9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TfScopeDescription</definition>
        <argsstring>()=delete</argsstring>
        <name>TfScopeDescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1a55569df106f067b1c2d8ce0ac67f798e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TfScopeDescription</definition>
        <argsstring>(TfScopeDescription const &amp;)=delete</argsstring>
        <name>TfScopeDescription</name>
        <param>
          <type><ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1a135fdfe4564b07d819d79b5cd7880490" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> &amp;</type>
        <definition>TfScopeDescription&amp; operator=</definition>
        <argsstring>(TfScopeDescription const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1ae29aed2a57ac73cb96782b14f4dced23" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _Push</definition>
        <argsstring>()</argsstring>
        <name>_Push</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1a2bd2a44c54ba8dc7b293d4a22332b0b8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _Pop</definition>
        <argsstring>() const</argsstring>
        <name>_Pop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_scope_description_1a7ec5e696ba1ff37d218a63b5070e92e2" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>TF_API</type>
        <definition>TF_API TfScopeDescription</definition>
        <argsstring>(std::string const &amp;description, TfCallContext const &amp;context=TfCallContext())</argsstring>
        <name>TfScopeDescription</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>TfCallContext const &amp;</type>
          <declname>context</declname>
          <defval>TfCallContext()</defval>
        </param>
        <briefdescription>
<para>Construct with a description. </para>
        </briefdescription>
        <detaileddescription>
<para>Push <emphasis>description</emphasis> on the stack of descriptions for this thread. Caller guarantees that the string <computeroutput>description</computeroutput> lives at least as long as this <ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1aa359c75263b10fc95afdaee94b4ff91d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>TF_API</type>
        <definition>TF_API TfScopeDescription</definition>
        <argsstring>(std::string &amp;&amp;description, TfCallContext const &amp;context=TfCallContext())</argsstring>
        <name>TfScopeDescription</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>description</declname>
        </param>
        <param>
          <type>TfCallContext const &amp;</type>
          <declname>context</declname>
          <defval>TfCallContext()</defval>
        </param>
        <briefdescription>
<para>Construct with a description. </para>
        </briefdescription>
        <detaileddescription>
<para>Push <emphasis>description</emphasis> on the stack of descriptions for this thread. This object adopts ownership of the rvalue <computeroutput>description</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1a306c8eb84f9d5dacefbb5ec760a6dc48" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>TF_API</type>
        <definition>TF_API TfScopeDescription</definition>
        <argsstring>(char const *description, TfCallContext const &amp;context=TfCallContext())</argsstring>
        <name>TfScopeDescription</name>
        <param>
          <type>char const *</type>
          <declname>description</declname>
        </param>
        <param>
          <type>TfCallContext const &amp;</type>
          <declname>context</declname>
          <defval>TfCallContext()</defval>
        </param>
        <briefdescription>
<para>Construct with a description. </para>
        </briefdescription>
        <detaileddescription>
<para>Push <emphasis>description</emphasis> on the stack of descriptions for this thread. Caller guarantees that the string <computeroutput>description</computeroutput> lives at least as long as this <ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1ac89aa37bffce5a32ce5e14f6a8f21bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API</type>
        <definition>TF_API ~TfScopeDescription</definition>
        <argsstring>()</argsstring>
        <name>~TfScopeDescription</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Pop the description stack in this thread. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1aa034fb855070478fd11c0cbc54f257ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void SetDescription</definition>
        <argsstring>(std::string const &amp;description)</argsstring>
        <name>SetDescription</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Replace the description stack entry for this scope description. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller guarantees that the string <computeroutput>description</computeroutput> lives at least as long as this <ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1a0c6e631f34c8bbed76cff582e63e41f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void SetDescription</definition>
        <argsstring>(std::string &amp;&amp;description)</argsstring>
        <name>SetDescription</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Replace the description stack entry for this scope description. </para>
        </briefdescription>
        <detaileddescription>
<para>This object adopts ownership of the rvalue <computeroutput>description</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scope_description_1a98e2c345da59935b15533dd8aa071ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void SetDescription</definition>
        <argsstring>(char const *description)</argsstring>
        <name>SetDescription</name>
        <param>
          <type>char const *</type>
          <declname>description</declname>
        </param>
        <briefdescription>
<para>Replace the description stack entry for this scope description. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller guarantees that the string <computeroutput>description</computeroutput> lives at least as long as this <ref refid="class_tf_scope_description" kindref="compound">TfScopeDescription</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scopeDescription.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is used to provide high-level descriptions about scopes of execution that could possibly block, or to provide relevant information about high-level action that would be useful in a crash report. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is reasonably fast to use, especially if the message strings are not dynamically created, however it should not be used in very highly performance sensitive contexts. The cost to push &amp; pop is essentially a TLS lookup plus a couple of atomic operations. </para>
    </detaileddescription>
    <location file="pxr/base/tf/scopeDescription.h" line="51" column="1" bodyfile="pxr/base/tf/scopeDescription.h" bodystart="50" bodyend="117"/>
    <listofallmembers>
      <member refid="class_tf_scope_description_1ae46fe53039b88eb37ee0085546ad566e" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_context</name></member>
      <member refid="class_tf_scope_description_1a5743de41c3f0b6991b680bbcfe529672" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_description</name></member>
      <member refid="class_tf_scope_description_1aa818d3797505032dab3db5983464650f" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_localStack</name></member>
      <member refid="class_tf_scope_description_1ae25950f0156fa3e43a7de138f72a0586" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_ownedString</name></member>
      <member refid="class_tf_scope_description_1a2bd2a44c54ba8dc7b293d4a22332b0b8" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_Pop</name></member>
      <member refid="class_tf_scope_description_1a018fef8d6d2d486cae3832e641870105" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_prev</name></member>
      <member refid="class_tf_scope_description_1ae29aed2a57ac73cb96782b14f4dced23" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>_Push</name></member>
      <member refid="class_tf_scope_description_1a135fdfe4564b07d819d79b5cd7880490" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>operator=</name></member>
      <member refid="class_tf_scope_description_1aa034fb855070478fd11c0cbc54f257ff" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>SetDescription</name></member>
      <member refid="class_tf_scope_description_1a0c6e631f34c8bbed76cff582e63e41f5" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>SetDescription</name></member>
      <member refid="class_tf_scope_description_1a98e2c345da59935b15533dd8aa071ca8" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>SetDescription</name></member>
      <member refid="class_tf_scope_description_1a54ffd509c4e4f33e0f99687a3413fda9" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>TfScopeDescription</name></member>
      <member refid="class_tf_scope_description_1a55569df106f067b1c2d8ce0ac67f798e" prot="private" virt="non-virtual"><scope>TfScopeDescription</scope><name>TfScopeDescription</name></member>
      <member refid="class_tf_scope_description_1a7ec5e696ba1ff37d218a63b5070e92e2" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>TfScopeDescription</name></member>
      <member refid="class_tf_scope_description_1aa359c75263b10fc95afdaee94b4ff91d" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>TfScopeDescription</name></member>
      <member refid="class_tf_scope_description_1a306c8eb84f9d5dacefbb5ec760a6dc48" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>TfScopeDescription</name></member>
      <member refid="class_tf_scope_description_1ac89aa37bffce5a32ce5e14f6a8f21bf1" prot="public" virt="non-virtual"><scope>TfScopeDescription</scope><name>~TfScopeDescription</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
