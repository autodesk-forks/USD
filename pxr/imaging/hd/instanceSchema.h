//
// Copyright 2021 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "Apache License")
// with the following modification; you may not use this file except in
// compliance with the Apache License and the following modification to it:
// Section 6. Trademarks. is deleted and replaced with:
//
// 6. Trademarks. This License does not grant permission to use the trade
//    names, trademarks, service marks, or product names of the Licensor
//    and its affiliates, except as required to comply with Section 4(c) of
//    the License and to reproduce the content of the NOTICE file.
//
// You may obtain a copy of the Apache License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Apache License with the above modification is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the Apache License for the specific
// language governing permissions and limitations under the Apache License.
//
////////////////////////////////////////////////////////////////////////
// This file is generated by a script.  Do not edit directly.  Edit the
// schema.template.h file to make changes.

#ifndef PXR_IMAGING_HD_INSTANCE_SCHEMA_H
#define PXR_IMAGING_HD_INSTANCE_SCHEMA_H

#include "pxr/imaging/hd/api.h"

#include "pxr/imaging/hd/schema.h" 

PXR_NAMESPACE_OPEN_SCOPE

//-----------------------------------------------------------------------------

#define HDINSTANCE_SCHEMA_TOKENS \
    (instancer) \
    (path) \

TF_DECLARE_PUBLIC_TOKENS(HdInstanceSchemaTokens, HD_API,
    HDINSTANCE_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------

// This schema can be considered the opposite of instancerTopology's
// "instanceLocations".  When the scene coalesces scene prims into multiple
// instances of a single prototype, it inserts "instance" prims at the site
// of de-duplication.  The instancer prim added to manage the prototype
// uses "instanceLocations" to point back to all of these instance prims.
//
// The instance prims aren't directly useful for rendering but can be useful
// for scene processing and data aggregation.


class HdInstanceSchema : public HdSchema
{
public:
    HdInstanceSchema(HdContainerDataSourceHandle container)
    : HdSchema(container) {}

    //ACCESSORS

    HD_API
    HdPathArrayDataSourceHandle GetPath();

    // RETRIEVING AND CONSTRUCTING

    HD_API
    static HdContainerDataSourceHandle
    BuildRetained(
        const HdPathArrayDataSourceHandle &path
    );

    class Builder
    {
    public:
        HD_API
        Builder &SetPath(
            const HdPathArrayDataSourceHandle &path);

        HD_API
        HdContainerDataSourceHandle Build();

    private:
        HdPathArrayDataSourceHandle _path;
    };

    HD_API
    static HdInstanceSchema GetFromParent(
        const HdContainerDataSourceHandle &fromParentContainer);

    HD_API
    static const HdDataSourceLocator &GetDefaultLocator();

};

PXR_NAMESPACE_CLOSE_SCOPE

#endif