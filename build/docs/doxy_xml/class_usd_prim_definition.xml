<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_prim_definition" kind="class" language="C++" prot="public">
    <compoundname>UsdPrimDefinition</compoundname>
    <includes refid="prim_definition_8h" local="no">primDefinition.h</includes>
    <innerclass refid="struct_usd_prim_definition_1_1___layer_and_path" prot="private">UsdPrimDefinition::_LayerAndPath</innerclass>
    <innerclass refid="class_usd_prim_definition_1_1_attribute" prot="public">UsdPrimDefinition::Attribute</innerclass>
    <innerclass refid="class_usd_prim_definition_1_1_property" prot="public">UsdPrimDefinition::Property</innerclass>
    <innerclass refid="class_usd_prim_definition_1_1_relationship" prot="public">UsdPrimDefinition::Relationship</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_usd_prim_definition_1a54e63d46e56c11f2fad7b34d33e0c517" prot="private" static="no">
        <type>std::unordered_map&lt; std::pair&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;, UsdSchemaVersion, <ref refid="class_tf_hash" kindref="compound">TfHash</ref> &gt;</type>
        <definition>using _FamilyAndInstanceToVersionMap =  std::unordered_map&lt;std::pair&lt;TfToken, TfToken&gt;, UsdSchemaVersion, TfHash&gt;</definition>
        <argsstring></argsstring>
        <name>_FamilyAndInstanceToVersionMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="598" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="599" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_definition_1a99a958dc8ab3066d3dc9a36fb7588d56" prot="private" static="no">
        <type>std::unordered_map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, _LayerAndPath, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>using _PrimTypePropNameToPathMap =  std::unordered_map&lt;TfToken, _LayerAndPath, TfToken::HashFunctor&gt;</definition>
        <argsstring></argsstring>
        <name>_PrimTypePropNameToPathMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="616" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_prim_definition_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="468" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_prim_definition_1a34194ae3fce16e35299eb4cde408f8d1" prot="private" static="no" mutable="no">
        <type>_LayerAndPath</type>
        <definition>_LayerAndPath _primLayerAndPath</definition>
        <argsstring></argsstring>
        <name>_primLayerAndPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="612" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_definition_1abea77b3df17cc0768316e777a07dc229" prot="private" static="no" mutable="no">
        <type>_PrimTypePropNameToPathMap</type>
        <definition>_PrimTypePropNameToPathMap _propLayerAndPathMap</definition>
        <argsstring></argsstring>
        <name>_propLayerAndPathMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="618" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_definition_1af30e3bb5334547940c56fbaa470ef28c" prot="private" static="no" mutable="no">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _appliedAPISchemas</definition>
        <argsstring></argsstring>
        <name>_appliedAPISchemas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="619" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_definition_1abb50c5fb2f09e30762be56272a09d047" prot="private" static="no" mutable="no">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _properties</definition>
        <argsstring></argsstring>
        <name>_properties</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="622" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_definition_1a324768dce22e9cfd90f7c63e84169a23" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_ref_ptr" kindref="compound">SdfLayerRefPtr</ref></type>
        <definition>SdfLayerRefPtr _composedPropertyLayer</definition>
        <argsstring></argsstring>
        <name>_composedPropertyLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="627" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="627" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_prim_definition_1acf3c8898fef7de1cb7d30a604e8dd60c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~UsdPrimDefinition</definition>
        <argsstring>()=default</argsstring>
        <name>~UsdPrimDefinition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1aa27e6a6b5d2bf4c69bfbaf77a4f89a39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>const TfTokenVector&amp; GetPropertyNames</definition>
        <argsstring>() const</argsstring>
        <name>GetPropertyNames</name>
        <briefdescription>
<para>Return the list of names of builtin properties for this prim definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="54" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a6a432f1e0c050f831089bb2b546ad05a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>const TfTokenVector&amp; GetAppliedAPISchemas</definition>
        <argsstring>() const</argsstring>
        <name>GetAppliedAPISchemas</name>
        <briefdescription>
<para>Return the list of names of the API schemas that have been applied to this prim definition in order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="58" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a49ef17988596ec23ee299104450b4e89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref></type>
        <definition>USD_API Property GetPropertyDefinition</definition>
        <argsstring>(const TfToken &amp;propName) const</argsstring>
        <name>GetPropertyDefinition</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
<para>Returns a property accessor the property named <computeroutput>propName</computeroutput> if it is defined by this this prim definition. </para>
        </briefdescription>
        <detaileddescription>
<para>If a property with the given name doesn&apos;t exist, this will return an invalid <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a25e0cc7d610b8a2e030e675eb5d46b3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_prim_definition_1_1_attribute" kindref="compound">Attribute</ref></type>
        <definition>USD_API Attribute GetAttributeDefinition</definition>
        <argsstring>(const TfToken &amp;attrName) const</argsstring>
        <name>GetAttributeDefinition</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <briefdescription>
<para>Returns an attribute accessor the property named <computeroutput>attrName</computeroutput> if it is defined by this this prim definition and is an attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>If a property with the given name doesn&apos;t exist or exists but isn&apos;t an attribute, this will return an invalid <ref refid="class_usd_prim_definition_1_1_attribute" kindref="compound">Attribute</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a3b7e24ae0cad23c0d23f3a70d39be93c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_prim_definition_1_1_relationship" kindref="compound">Relationship</ref></type>
        <definition>USD_API Relationship GetRelationshipDefinition</definition>
        <argsstring>(const TfToken &amp;relName) const</argsstring>
        <name>GetRelationshipDefinition</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>relName</declname>
        </param>
        <briefdescription>
<para>Returns a relationship accessor the property named <computeroutput>relName</computeroutput> if it is defined by this this prim definition and is a relationship. </para>
        </briefdescription>
        <detaileddescription>
<para>If a property with the given name doesn&apos;t exist or exists but isn&apos;t a relationship, this will return an invalid <ref refid="class_usd_prim_definition_1_1_relationship" kindref="compound">Relationship</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a127ca205ca94e63c4b0df6dc832fae79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="usd_2sdf_2types_8h_1a1393f770f7685f4c58baf0b34679e522" kindref="member">SdfSpecType</ref></type>
        <definition>USD_API SdfSpecType GetSpecType</definition>
        <argsstring>(const TfToken &amp;propName) const</argsstring>
        <name>GetSpecType</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
<para>Return the SdfSpecType for <computeroutput>propName</computeroutput> if it is a builtin property of the prim type represented by this prim definition. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise return SdfSpecTypeUnknown. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a27de14654377225174840ae39b27c769" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API SdfPropertySpecHandle</type>
        <definition>USD_API SdfPropertySpecHandle GetSchemaPropertySpec</definition>
        <argsstring>(const TfToken &amp;propName) const</argsstring>
        <name>GetSchemaPropertySpec</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000073"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetPropertyDefinition instead.</para>
</xrefdescription></xrefsect></para>
<para>Return the property spec that defines the fallback for the property named <emphasis>propName</emphasis> on prims of this prim definition&apos;s type. Return null if there is no such property spec. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a975bb264df5e6fdcc11acff2ff8f56d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API SdfAttributeSpecHandle</type>
        <definition>USD_API SdfAttributeSpecHandle GetSchemaAttributeSpec</definition>
        <argsstring>(const TfToken &amp;attrName) const</argsstring>
        <name>GetSchemaAttributeSpec</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000074"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetAttributeDefinition instead.</para>
</xrefdescription></xrefsect></para>
<para>This is a convenience method. It is shorthand for TfDynamic_cast&lt;SdfAttributeSpecHandle&gt;( GetSchemaPropertySpec(primType, attrName)); </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a10a7ad1661018fda44be507816889a96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API SdfRelationshipSpecHandle</type>
        <definition>USD_API SdfRelationshipSpecHandle GetSchemaRelationshipSpec</definition>
        <argsstring>(const TfToken &amp;relName) const</argsstring>
        <name>GetSchemaRelationshipSpec</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>relName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000075"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetRelationshipDefinition instead.</para>
</xrefdescription></xrefsect></para>
<para>This is a convenience method. It is shorthand for TfDynamic_cast&lt;SdfRelationshipSpecHandle&gt;( GetSchemaPropertySpec(primType, relName)); </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a9a49bb4ee9ceef6f1b783915f7e3ae4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetAttributeFallbackValue</definition>
        <argsstring>(const TfToken &amp;attrName, T *value) const</argsstring>
        <name>GetAttributeFallbackValue</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the fallback value for the attribute named <computeroutput>attrName</computeroutput> and stores it in <computeroutput>value</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the attribute exists in this prim definition and it has a fallback value defined. Returns false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="328" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1ae080ba93a1ddac47fea4b346d89e7f3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USD_API TfTokenVector ListMetadataFields</definition>
        <argsstring>() const</argsstring>
        <name>ListMetadataFields</name>
        <briefdescription>
<para>Returns the list of names of metadata fields that are defined by this prim definition for the prim itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1ad2d76f736733f3ad51aa1ea1df6f4d44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetMetadata</definition>
        <argsstring>(const TfToken &amp;key, T *value) const</argsstring>
        <name>GetMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the fallback value for the metadata field named <computeroutput>key</computeroutput>, that is defined by this prim definition for the prim itself and stores it in <computeroutput>value</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a fallback value is defined for the given metadata <computeroutput>key</computeroutput>. Returns false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="345" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="345" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1aba47c41ec8cc536290c04e219f12589c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath, T *value) const</argsstring>
        <name>GetMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value at <computeroutput>keyPath</computeroutput> from the fallback dictionary value for the dictionary metadata field named <computeroutput>key</computeroutput>, that is defined by this prim definition for the prim itself, and stores it in <computeroutput>value</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a fallback dictionary value is defined for the given metadata <computeroutput>key</computeroutput> and it contains a value at <computeroutput>keyPath</computeroutput>. Returns false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="362" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="362" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1afbeb96db494ea5fa795d937e532083c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::string</type>
        <definition>USD_API std::string GetDocumentation</definition>
        <argsstring>() const</argsstring>
        <name>GetDocumentation</name>
        <briefdescription>
<para>Returns the documentation metadata defined by the prim definition for the prim itself. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a11ace91a508b1e63eab0fd855f48f435" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USD_API TfTokenVector ListPropertyMetadataFields</definition>
        <argsstring>(const TfToken &amp;propName) const</argsstring>
        <name>ListPropertyMetadataFields</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
<para>Returns the list of names of metadata fields that are defined by this prim definition for property <computeroutput>propName</computeroutput> if a property named <computeroutput>propName</computeroutput> exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a51e0cd10e704aa79243ea483f9fd179a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetPropertyMetadata</definition>
        <argsstring>(const TfToken &amp;propName, const TfToken &amp;key, T *value) const</argsstring>
        <name>GetPropertyMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the fallback value for the metadata field named <computeroutput>key</computeroutput>, that is defined by this prim definition for the property named <computeroutput>propName</computeroutput>, and stores it in <computeroutput>value</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a fallback value is defined for the given metadata <computeroutput>key</computeroutput> for the named property. Returns false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="389" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="389" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1aadb390bdd0989bd6361664ee731d1f5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetPropertyMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;propName, const TfToken &amp;key, const TfToken &amp;keyPath, T *value) const</argsstring>
        <name>GetPropertyMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the value at <computeroutput>keyPath</computeroutput> from the fallback dictionary value for the dictionary metadata field named <computeroutput>key</computeroutput>, that is defined by this prim definition for the property named <computeroutput>propName</computeroutput>, and stores it in <computeroutput>value</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if a fallback dictionary value is defined for the given metadata <computeroutput>key</computeroutput> for the named property and it contains a value at <computeroutput>keyPath</computeroutput>. Returns false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="407" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="407" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1aae20e4df4c42820bcb2e5630804886bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::string</type>
        <definition>USD_API std::string GetPropertyDocumentation</definition>
        <argsstring>(const TfToken &amp;propName) const</argsstring>
        <name>GetPropertyDocumentation</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
<para>Returns the documentation metadata defined by the prim definition for the property named <computeroutput>propName</computeroutput> if it exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1ae45726b266879e6a0a64f736a52b96ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool FlattenTo</definition>
        <argsstring>(const SdfLayerHandle &amp;layer, const SdfPath &amp;path, SdfSpecifier newSpecSpecifier=SdfSpecifierOver) const</argsstring>
        <name>FlattenTo</name>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>newSpecSpecifier</declname>
          <defval>SdfSpecifierOver</defval>
        </param>
        <briefdescription>
<para>Copies the contents of this prim definition to a prim spec on the given <computeroutput>layer</computeroutput> at the given <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This includes the entire property spec for each of this definition&apos;s built-in properties as well as all of this definition&apos;s prim metadata.</para>
<para>If the prim definition represents a concrete prim type, the type name of the prim spec is set to the the type name of this prim definition. Otherwise the type name is set to empty. The &apos;apiSchemas&apos; metadata on the prim spec will always be explicitly set to the combined list of all API schemas applied to this prim definition, i.e. the list returned by <ref refid="class_usd_prim_definition_1a6a432f1e0c050f831089bb2b546ad05a" kindref="member">UsdPrimDefinition::GetAppliedAPISchemas</ref>. Note that if this prim definition is an API schema prim definition (see <ref refid="class_usd_schema_registry_1a583796fd498889a71e6754513e42b2a8" kindref="member">UsdSchemaRegistry::FindAppliedAPIPrimDefinition</ref>) then &apos;apiSchemas&apos; will be empty as this prim definition does not &quot;have&quot; an applied API because instead it &quot;is&quot; an applied API.</para>
<para>If there is no prim spec at the given <computeroutput>path</computeroutput>, a new prim spec is created at that path with the specifier <computeroutput>newSpecSpecifier</computeroutput>. Any necessary ancestor specs will be created as well but they will always be created as overs. If a spec does exist at <computeroutput>path</computeroutput>, then all of its properties and <ref refid="class_usd_schema_registry_1aa422270c1807db9cf40912dce3f54f41" kindref="member">schema allowed metadata</ref> are cleared before it is populated from the prim definition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="446" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a7d1dd4a3a0b6c545a7fa4b897d51217e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>USD_API UsdPrim FlattenTo</definition>
        <argsstring>(const UsdPrim &amp;parent, const TfToken &amp;name, SdfSpecifier newSpecSpecifier=SdfSpecifierOver) const</argsstring>
        <name>FlattenTo</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>parent</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>newSpecSpecifier</declname>
          <defval>SdfSpecifierOver</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Copies the contents of this prim definition to a prim spec at the current edit target for a prim with the given <computeroutput>name</computeroutput> under the prim <computeroutput>parent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a4ca293bcc33243b34258cdfba32ab539" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>USD_API UsdPrim FlattenTo</definition>
        <argsstring>(const UsdPrim &amp;prim, SdfSpecifier newSpecSpecifier=SdfSpecifierOver) const</argsstring>
        <name>FlattenTo</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>newSpecSpecifier</declname>
          <defval>SdfSpecifierOver</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Copies the contents of this prim definition to a prim spec at the current edit target for the given <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="463" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_prim_definition_1a671465eafee7bcaa8925b63f78e28b8c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _HasField</definition>
        <argsstring>(const TfToken &amp;propName, const TfToken &amp;fieldName, T *value) const</argsstring>
        <name>_HasField</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>It is preferable to use the _HasField and _HasFieldDictKey methods to access property field values, as opposed to getting a spec handle from the GetSchemaXXXSpec functions, as these methods are faster. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="516" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="516" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a22088f06e33ed46cdbdc8c6c91026ea1" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _HasFieldDictKey</definition>
        <argsstring>(const TfToken &amp;propName, const TfToken &amp;fieldName, const TfToken &amp;keyPath, T *value) const</argsstring>
        <name>_HasFieldDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="528" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="528" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a0afbaacf0da44b0b3d22e6feb0f11e57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdPrimDefinition</definition>
        <argsstring>()=default</argsstring>
        <name>UsdPrimDefinition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="540" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1ab1f9711d421a4811afd509cb166fb91e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdPrimDefinition</definition>
        <argsstring>(const UsdPrimDefinition &amp;)=default</argsstring>
        <name>UsdPrimDefinition</name>
        <param>
          <type>const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a1bb1e35056567347bb0daf59ca4a2dcf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void _IntializeForTypedSchema</definition>
        <argsstring>(const SdfLayerHandle &amp;schematicsLayer, const SdfPath &amp;schematicsPrimPath, const VtTokenArray &amp;propertiesToIgnore)</argsstring>
        <name>_IntializeForTypedSchema</name>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>schematicsLayer</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>schematicsPrimPath</declname>
        </param>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>propertiesToIgnore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1acd7be94d31eae8fa7a00b70cf6a706f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void _IntializeForAPISchema</definition>
        <argsstring>(const TfToken &amp;apiSchemaName, const SdfLayerHandle &amp;schematicsLayer, const SdfPath &amp;schematicsPrimPath, const VtTokenArray &amp;propertiesToIgnore)</argsstring>
        <name>_IntializeForAPISchema</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>apiSchemaName</declname>
        </param>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>schematicsLayer</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>schematicsPrimPath</declname>
        </param>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>propertiesToIgnore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a74453c60888a0866d3dd82909322ed57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _MapSchematicsPropertyPaths</definition>
        <argsstring>(const VtTokenArray &amp;propertiesToIgnore)</argsstring>
        <name>_MapSchematicsPropertyPaths</name>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>propertiesToIgnore</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a06bc58cc095f93e1250aa63f703bba90" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const _LayerAndPath *</type>
        <definition>const _LayerAndPath* _GetPropertyLayerAndPath</definition>
        <argsstring>(const TfToken &amp;propName) const</argsstring>
        <name>_GetPropertyLayerAndPath</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="561" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="561" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a6d88a8d66adfe4ec36bbe5020388e678" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_LayerAndPath *</type>
        <definition>_LayerAndPath* _GetPropertyLayerAndPath</definition>
        <argsstring>(const TfToken &amp;propName)</argsstring>
        <name>_GetPropertyLayerAndPath</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="566" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="566" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1acc4432673acf20375eef6caea3b5bfa0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ComposePropertiesFromPrimDef</definition>
        <argsstring>(const UsdPrimDefinition &amp;weakerPrimDef)</argsstring>
        <name>_ComposePropertiesFromPrimDef</name>
        <param>
          <type>const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> &amp;</type>
          <declname>weakerPrimDef</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1ad83a0525bc0cccc6366557de8eebfbd8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ComposePropertiesFromPrimDefInstance</definition>
        <argsstring>(const UsdPrimDefinition &amp;weakerPrimDef, const std::string &amp;instanceName)</argsstring>
        <name>_ComposePropertiesFromPrimDefInstance</name>
        <param>
          <type>const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> &amp;</type>
          <declname>weakerPrimDef</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>instanceName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="575" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1af8055d6a8b6105c6e38d8f942da92cf2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _AddOrComposeProperty</definition>
        <argsstring>(const TfToken &amp;propName, const _LayerAndPath &amp;layerAndPath)</argsstring>
        <name>_AddOrComposeProperty</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const _LayerAndPath &amp;</type>
          <declname>layerAndPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a7e5cb990c89b1f1f0b4a921a14b551c6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SdfPropertySpecHandle</type>
        <definition>SdfPropertySpecHandle _FindOrCreatePropertySpecForComposition</definition>
        <argsstring>(const TfToken &amp;propName, const _LayerAndPath &amp;srcLayerAndPath)</argsstring>
        <name>_FindOrCreatePropertySpecForComposition</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const _LayerAndPath &amp;</type>
          <declname>srcLayerAndPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a5414392d0b3026eaf03f62623578106b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SdfPropertySpecHandle</type>
        <definition>SdfPropertySpecHandle _CreateComposedPropertyIfNeeded</definition>
        <argsstring>(const TfToken &amp;propName, const _LayerAndPath &amp;strongProp, const _LayerAndPath &amp;weakProp)</argsstring>
        <name>_CreateComposedPropertyIfNeeded</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const _LayerAndPath &amp;</type>
          <declname>strongProp</declname>
        </param>
        <param>
          <type>const _LayerAndPath &amp;</type>
          <declname>weakProp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a2da117c2f836364b696542994d15331c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void _ComposeOverAndReplaceExistingProperty</definition>
        <argsstring>(const TfToken &amp;propName, const SdfLayerRefPtr &amp;overLayer, const SdfPath &amp;overPrimPath)</argsstring>
        <name>_ComposeOverAndReplaceExistingProperty</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_ref_ptr" kindref="compound">SdfLayerRefPtr</ref> &amp;</type>
          <declname>overLayer</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>overPrimPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1a4519849de609867e4c4d1aabd8aa6bec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool _ComposeWeakerAPIPrimDefinition</definition>
        <argsstring>(const UsdPrimDefinition &amp;apiPrimDef, const TfToken &amp;instanceName, _FamilyAndInstanceToVersionMap *alreadyAppliedSchemaFamilyVersions)</argsstring>
        <name>_ComposeWeakerAPIPrimDefinition</name>
        <param>
          <type>const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> &amp;</type>
          <declname>apiPrimDef</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>instanceName</declname>
        </param>
        <param>
          <type>_FamilyAndInstanceToVersionMap *</type>
          <declname>alreadyAppliedSchemaFamilyVersions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="602" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_prim_definition_1a8ec7077e6c152ebb537eda617689f5c6" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _PropertyTypesMatch</definition>
        <argsstring>(const Property &amp;strongProp, const Property &amp;weakProp)</argsstring>
        <name>_PropertyTypesMatch</name>
        <param>
          <type>const <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> &amp;</type>
          <declname>strongProp</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> &amp;</type>
          <declname>weakProp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="607" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class representing the builtin definition of a prim given the schemas registered in the schema registry. </para>
    </briefdescription>
    <detaileddescription>
<para>It provides access to the the builtin properties and metadata of a prim whose type is defined by this definition.</para>
<para>Instances of this class can only be created by the <ref refid="class_usd_schema_registry" kindref="compound">UsdSchemaRegistry</ref>. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/primDefinition.h" line="49" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="48" bodyend="628"/>
    <listofallmembers>
      <member refid="class_usd_prim_definition_1af8055d6a8b6105c6e38d8f942da92cf2" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_AddOrComposeProperty</name></member>
      <member refid="class_usd_prim_definition_1af30e3bb5334547940c56fbaa470ef28c" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_appliedAPISchemas</name></member>
      <member refid="class_usd_prim_definition_1a324768dce22e9cfd90f7c63e84169a23" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_composedPropertyLayer</name></member>
      <member refid="class_usd_prim_definition_1a2da117c2f836364b696542994d15331c" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_ComposeOverAndReplaceExistingProperty</name></member>
      <member refid="class_usd_prim_definition_1acc4432673acf20375eef6caea3b5bfa0" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_ComposePropertiesFromPrimDef</name></member>
      <member refid="class_usd_prim_definition_1ad83a0525bc0cccc6366557de8eebfbd8" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_ComposePropertiesFromPrimDefInstance</name></member>
      <member refid="class_usd_prim_definition_1a4519849de609867e4c4d1aabd8aa6bec" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_ComposeWeakerAPIPrimDefinition</name></member>
      <member refid="class_usd_prim_definition_1a5414392d0b3026eaf03f62623578106b" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_CreateComposedPropertyIfNeeded</name></member>
      <member refid="class_usd_prim_definition_1a54e63d46e56c11f2fad7b34d33e0c517" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_FamilyAndInstanceToVersionMap</name></member>
      <member refid="class_usd_prim_definition_1a7e5cb990c89b1f1f0b4a921a14b551c6" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_FindOrCreatePropertySpecForComposition</name></member>
      <member refid="class_usd_prim_definition_1a06bc58cc095f93e1250aa63f703bba90" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_GetPropertyLayerAndPath</name></member>
      <member refid="class_usd_prim_definition_1a6d88a8d66adfe4ec36bbe5020388e678" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_GetPropertyLayerAndPath</name></member>
      <member refid="class_usd_prim_definition_1a671465eafee7bcaa8925b63f78e28b8c" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_HasField</name></member>
      <member refid="class_usd_prim_definition_1a22088f06e33ed46cdbdc8c6c91026ea1" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_HasFieldDictKey</name></member>
      <member refid="class_usd_prim_definition_1acd7be94d31eae8fa7a00b70cf6a706f5" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_IntializeForAPISchema</name></member>
      <member refid="class_usd_prim_definition_1a1bb1e35056567347bb0daf59ca4a2dcf" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_IntializeForTypedSchema</name></member>
      <member refid="class_usd_prim_definition_1a74453c60888a0866d3dd82909322ed57" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_MapSchematicsPropertyPaths</name></member>
      <member refid="class_usd_prim_definition_1a34194ae3fce16e35299eb4cde408f8d1" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_primLayerAndPath</name></member>
      <member refid="class_usd_prim_definition_1a99a958dc8ab3066d3dc9a36fb7588d56" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_PrimTypePropNameToPathMap</name></member>
      <member refid="class_usd_prim_definition_1abb50c5fb2f09e30762be56272a09d047" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_properties</name></member>
      <member refid="class_usd_prim_definition_1a8ec7077e6c152ebb537eda617689f5c6" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_PropertyTypesMatch</name></member>
      <member refid="class_usd_prim_definition_1abea77b3df17cc0768316e777a07dc229" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>_propLayerAndPathMap</name></member>
      <member refid="class_usd_prim_definition_1ae45726b266879e6a0a64f736a52b96ac" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>FlattenTo</name></member>
      <member refid="class_usd_prim_definition_1a7d1dd4a3a0b6c545a7fa4b897d51217e" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>FlattenTo</name></member>
      <member refid="class_usd_prim_definition_1a4ca293bcc33243b34258cdfba32ab539" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>FlattenTo</name></member>
      <member refid="class_usd_prim_definition_1a6a432f1e0c050f831089bb2b546ad05a" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetAppliedAPISchemas</name></member>
      <member refid="class_usd_prim_definition_1a25e0cc7d610b8a2e030e675eb5d46b3e" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetAttributeDefinition</name></member>
      <member refid="class_usd_prim_definition_1a9a49bb4ee9ceef6f1b783915f7e3ae4a" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetAttributeFallbackValue</name></member>
      <member refid="class_usd_prim_definition_1afbeb96db494ea5fa795d937e532083c9" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetDocumentation</name></member>
      <member refid="class_usd_prim_definition_1ad2d76f736733f3ad51aa1ea1df6f4d44" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetMetadata</name></member>
      <member refid="class_usd_prim_definition_1aba47c41ec8cc536290c04e219f12589c" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetMetadataByDictKey</name></member>
      <member refid="class_usd_prim_definition_1a49ef17988596ec23ee299104450b4e89" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetPropertyDefinition</name></member>
      <member refid="class_usd_prim_definition_1aae20e4df4c42820bcb2e5630804886bd" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetPropertyDocumentation</name></member>
      <member refid="class_usd_prim_definition_1a51e0cd10e704aa79243ea483f9fd179a" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetPropertyMetadata</name></member>
      <member refid="class_usd_prim_definition_1aadb390bdd0989bd6361664ee731d1f5a" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetPropertyMetadataByDictKey</name></member>
      <member refid="class_usd_prim_definition_1aa27e6a6b5d2bf4c69bfbaf77a4f89a39" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetPropertyNames</name></member>
      <member refid="class_usd_prim_definition_1a3b7e24ae0cad23c0d23f3a70d39be93c" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetRelationshipDefinition</name></member>
      <member refid="class_usd_prim_definition_1a975bb264df5e6fdcc11acff2ff8f56d8" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetSchemaAttributeSpec</name></member>
      <member refid="class_usd_prim_definition_1a27de14654377225174840ae39b27c769" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetSchemaPropertySpec</name></member>
      <member refid="class_usd_prim_definition_1a10a7ad1661018fda44be507816889a96" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetSchemaRelationshipSpec</name></member>
      <member refid="class_usd_prim_definition_1a127ca205ca94e63c4b0df6dc832fae79" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>GetSpecType</name></member>
      <member refid="class_usd_prim_definition_1ae080ba93a1ddac47fea4b346d89e7f3c" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>ListMetadataFields</name></member>
      <member refid="class_usd_prim_definition_1a11ace91a508b1e63eab0fd855f48f435" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>ListPropertyMetadataFields</name></member>
      <member refid="class_usd_prim_definition_1a0afbaacf0da44b0b3d22e6feb0f11e57" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>UsdPrimDefinition</name></member>
      <member refid="class_usd_prim_definition_1ab1f9711d421a4811afd509cb166fb91e" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>UsdPrimDefinition</name></member>
      <member refid="class_usd_prim_definition_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_prim_definition_1acf3c8898fef7de1cb7d30a604e8dd60c" prot="public" virt="non-virtual"><scope>UsdPrimDefinition</scope><name>~UsdPrimDefinition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
