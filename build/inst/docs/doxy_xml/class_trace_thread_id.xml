<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_thread_id" kind="class" language="C++" prot="public">
    <compoundname>TraceThreadId</compoundname>
    <includes refid="trace_2threads_8h" local="no">threads.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_thread_id_1a80b00be3a3df31651b1292dbdd8bfb2f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/threads.h" line="59" column="1" bodyfile="pxr/base/trace/threads.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_thread_id_1a003ae4a3107e7f5aaf9e5ab543cbdb3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API TraceThreadId</definition>
        <argsstring>()</argsstring>
        <name>TraceThreadId</name>
        <briefdescription>
<para>Constructor which creates an identifier based on std::thread_id. </para>
        </briefdescription>
        <detaileddescription>
<para>It is either&quot;Main Thread&quot; if this id is marked as the main thread or &quot;Thread XXX&quot; where XXX is the string representation of the thread id. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/threads.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_thread_id_1aeea4adbb2d2fb197ab1c643b1fe61f1e" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API TraceThreadId</definition>
        <argsstring>(const std::string &amp;id)</argsstring>
        <name>TraceThreadId</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Constructor which creates an identifier from <computeroutput>id</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/threads.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_thread_id_1ad47e79e22950f38a7cc16e79f6bb7f2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Returns the string representation of the id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/threads.h" line="51" column="1" bodyfile="pxr/base/trace/threads.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_thread_id_1aeea13bb91d36429bc385292c9eb88282" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API bool</type>
        <definition>TRACE_API bool operator==</definition>
        <argsstring>(const TraceThreadId &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/threads.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_thread_id_1a1c216fd1068763cb0432747e0f49d072" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API bool</type>
        <definition>TRACE_API bool operator&lt;</definition>
        <argsstring>(const TraceThreadId &amp;) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Less than operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/threads.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class represents an identifier for a thread. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/threads.h" line="40" column="1" bodyfile="pxr/base/trace/threads.h" bodystart="40" bodyend="60"/>
    <listofallmembers>
      <member refid="class_trace_thread_id_1a80b00be3a3df31651b1292dbdd8bfb2f" prot="private" virt="non-virtual"><scope>TraceThreadId</scope><name>_id</name></member>
      <member refid="class_trace_thread_id_1a1c216fd1068763cb0432747e0f49d072" prot="public" virt="non-virtual"><scope>TraceThreadId</scope><name>operator&lt;</name></member>
      <member refid="class_trace_thread_id_1aeea13bb91d36429bc385292c9eb88282" prot="public" virt="non-virtual"><scope>TraceThreadId</scope><name>operator==</name></member>
      <member refid="class_trace_thread_id_1ad47e79e22950f38a7cc16e79f6bb7f2e" prot="public" virt="non-virtual"><scope>TraceThreadId</scope><name>ToString</name></member>
      <member refid="class_trace_thread_id_1a003ae4a3107e7f5aaf9e5ab543cbdb3d" prot="public" virt="non-virtual"><scope>TraceThreadId</scope><name>TraceThreadId</name></member>
      <member refid="class_trace_thread_id_1aeea4adbb2d2fb197ab1c643b1fe61f1e" prot="public" virt="non-virtual"><scope>TraceThreadId</scope><name>TraceThreadId</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
