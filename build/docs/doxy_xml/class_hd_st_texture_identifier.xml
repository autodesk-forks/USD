<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_texture_identifier" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStTextureIdentifier</compoundname>
    <includes refid="texture_identifier_8h" local="no">textureIdentifier.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_st_texture_identifier_1ae273d2202bff0b49a83c92326b020543" prot="public" static="no">
        <type>size_t</type>
        <definition>using ID =  size_t</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="50" column="1" bodyfile="pxr/imaging/hdSt/textureIdentifier.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_texture_identifier_1ad7209f69387b5873a2a092558e8fb264" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _filePath</definition>
        <argsstring></argsstring>
        <name>_filePath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="102" column="1" bodyfile="pxr/imaging/hdSt/textureIdentifier.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_identifier_1aa8ccdb04f1925d3e5e555ee188d48d14" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; const <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> &gt;</type>
        <definition>std::unique_ptr&lt;const HdStSubtextureIdentifier&gt; _subtextureId</definition>
        <argsstring></argsstring>
        <name>_subtextureId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="103" column="1" bodyfile="pxr/imaging/hdSt/textureIdentifier.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_texture_identifier_1a0328235f22c3ddacf2092bf0babb03b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStTextureIdentifier</definition>
        <argsstring>()</argsstring>
        <name>HdStTextureIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1a2c2a9bb442df6d073d9348e26a8eca3a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStTextureIdentifier</definition>
        <argsstring>(const TfToken &amp;filePath)</argsstring>
        <name>HdStTextureIdentifier</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>C&apos;tor for files that can contain only one texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1a23b864f6ef0d8147ede94675fb7e8543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStTextureIdentifier</definition>
        <argsstring>(const TfToken &amp;filePath, std::unique_ptr&lt; const HdStSubtextureIdentifier &gt; &amp;&amp;subtextureId)</argsstring>
        <name>HdStTextureIdentifier</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; const <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> &gt; &amp;&amp;</type>
          <declname>subtextureId</declname>
        </param>
        <briefdescription>
<para>C&apos;tor for files that can contain more than one texture (e.g., frames in a movie, grids in a VDB file). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1a38b3936adeaed9ad3827d97e93e6643c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStTextureIdentifier</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId)</argsstring>
        <name>HdStTextureIdentifier</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1ae92b27a8128a5732ec472d3815683c70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
        <definition>HDST_API HdStTextureIdentifier&amp; operator=</definition>
        <argsstring>(HdStTextureIdentifier &amp;&amp;textureId)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;&amp;</type>
          <declname>textureId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1ae0e832343a9555c933f5aa507e96a9b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
        <definition>HDST_API HdStTextureIdentifier&amp; operator=</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1a6d2c178495b1d6c1b704860cf06cc996" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStTextureIdentifier</definition>
        <argsstring>()</argsstring>
        <name>~HdStTextureIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1ae94c6b2dbf49cd48271271502ef665d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; GetFilePath</definition>
        <argsstring>() const</argsstring>
        <name>GetFilePath</name>
        <briefdescription>
<para>Get file path of texture file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="82" column="1" bodyfile="pxr/imaging/hdSt/textureIdentifier.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1ad68fc9724c31a8994a2320e39a899e84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> *</type>
        <definition>const HdStSubtextureIdentifier* GetSubtextureIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>GetSubtextureIdentifier</name>
        <briefdescription>
<para>Get additional information identifying a texture in a file that can contain more than one texture (e.g., a frame in a movie or a grid in a VDB file). </para>
        </briefdescription>
        <detaileddescription>
<para>nullptr for files (e.g., png) that can contain only one texture. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="92" column="1" bodyfile="pxr/imaging/hdSt/textureIdentifier.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1abe871685c15e51d7fdf4aacaf9119cc2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool operator==</definition>
        <argsstring>(const HdStTextureIdentifier &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_identifier_1a6ed9a83247b97b365432412f0ca84fa4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool operator!=</definition>
        <argsstring>(const HdStTextureIdentifier &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureIdentifier.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class to identify a texture file or a texture within the texture file (e.g., a frame in a movie). </para>
    </briefdescription>
    <detaileddescription>
<para>The class has value semantics and uses <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> in a polymorphic way. </para>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/textureIdentifier.h" line="48" column="1" bodyfile="pxr/imaging/hdSt/textureIdentifier.h" bodystart="47" bodyend="104"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_identifier_1ad7209f69387b5873a2a092558e8fb264" prot="private" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>_filePath</name></member>
      <member refid="class_hd_st_texture_identifier_1aa8ccdb04f1925d3e5e555ee188d48d14" prot="private" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>_subtextureId</name></member>
      <member refid="class_hd_st_texture_identifier_1ae94c6b2dbf49cd48271271502ef665d6" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>GetFilePath</name></member>
      <member refid="class_hd_st_texture_identifier_1ad68fc9724c31a8994a2320e39a899e84" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>GetSubtextureIdentifier</name></member>
      <member refid="class_hd_st_texture_identifier_1a0328235f22c3ddacf2092bf0babb03b5" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>HdStTextureIdentifier</name></member>
      <member refid="class_hd_st_texture_identifier_1a2c2a9bb442df6d073d9348e26a8eca3a" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>HdStTextureIdentifier</name></member>
      <member refid="class_hd_st_texture_identifier_1a23b864f6ef0d8147ede94675fb7e8543" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>HdStTextureIdentifier</name></member>
      <member refid="class_hd_st_texture_identifier_1a38b3936adeaed9ad3827d97e93e6643c" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>HdStTextureIdentifier</name></member>
      <member refid="class_hd_st_texture_identifier_1ae273d2202bff0b49a83c92326b020543" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>ID</name></member>
      <member refid="class_hd_st_texture_identifier_1a6ed9a83247b97b365432412f0ca84fa4" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>operator!=</name></member>
      <member refid="class_hd_st_texture_identifier_1ae92b27a8128a5732ec472d3815683c70" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>operator=</name></member>
      <member refid="class_hd_st_texture_identifier_1ae0e832343a9555c933f5aa507e96a9b0" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>operator=</name></member>
      <member refid="class_hd_st_texture_identifier_1abe871685c15e51d7fdf4aacaf9119cc2" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>operator==</name></member>
      <member refid="class_hd_st_texture_identifier_1a6d2c178495b1d6c1b704860cf06cc996" prot="public" virt="non-virtual"><scope>HdStTextureIdentifier</scope><name>~HdStTextureIdentifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
