<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_vt_value_1_1___proxy_helper" kind="struct" language="C++" prot="private">
    <compoundname>VtValue::_ProxyHelper</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class Enable</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_vt_value_1_1___proxy_helper_1af530a5f120efa2cbb2ad16b649940e13" prot="public" static="no">
        <type>typename VtGetProxiedType&lt; T &gt;::type</type>
        <definition>using ProxiedType =  typename VtGetProxiedType&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>ProxiedType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="449" column="1" bodyfile="pxr/base/vt/value.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1ad11d742c4a0d8b30b96ca90c6bf3c0e5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool CanHash</definition>
        <argsstring>(T const &amp;)</argsstring>
        <name>CanHash</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="451" column="1" bodyfile="pxr/base/vt/value.h" bodystart="451" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a79368fe7c2c18b8b07f6e6f2daab596b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t Hash</definition>
        <argsstring>(T const &amp;obj)</argsstring>
        <name>Hash</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="452" column="1" bodyfile="pxr/base/vt/value.h" bodystart="452" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a29093e21746923302ae4bd3e4c4d519d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Equal</definition>
        <argsstring>(T const &amp;a, T const &amp;b)</argsstring>
        <name>Equal</name>
        <param>
          <type>T const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="455" column="1" bodyfile="pxr/base/vt/value.h" bodystart="455" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a3b2a00d5b60d200ed51ca868b4f0463a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref></type>
        <definition>static TfPyObjWrapper GetPyObj</definition>
        <argsstring>(T const &amp;obj)</argsstring>
        <name>GetPyObj</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="462" column="1" bodyfile="pxr/base/vt/value.h" bodystart="462" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a5bb8ae97522c644b305112eecdfe4a28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>static std::ostream&amp; StreamOut</definition>
        <argsstring>(T const &amp;obj, std::ostream &amp;out)</argsstring>
        <name>StreamOut</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="471" column="1" bodyfile="pxr/base/vt/value.h" bodystart="471" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a5a18754802b7254d02585c54613b4381" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vt_ShapeData const  *</type>
        <definition>static Vt_ShapeData const* GetShapeData</definition>
        <argsstring>(T const &amp;obj)</argsstring>
        <name>GetShapeData</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="474" column="1" bodyfile="pxr/base/vt/value.h" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a540af8437724514366229c951cc08a7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t GetNumElements</definition>
        <argsstring>(T const &amp;obj)</argsstring>
        <name>GetNumElements</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="478" column="1" bodyfile="pxr/base/vt/value.h" bodystart="478" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a3b14b11ab03c8ec27f7ed21e6f43ed78" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsArrayValued</definition>
        <argsstring>(T const &amp;)</argsstring>
        <name>IsArrayValued</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="482" column="1" bodyfile="pxr/base/vt/value.h" bodystart="482" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a5983cc8397e18e3809029a4e2e83f4b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::type_info const  &amp;</type>
        <definition>static std::type_info const&amp; GetTypeid</definition>
        <argsstring>(T const &amp;)</argsstring>
        <name>GetTypeid</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="485" column="1" bodyfile="pxr/base/vt/value.h" bodystart="485" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a17693e1a435f126b40eeeb2a53fb85b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::type_info const  &amp;</type>
        <definition>static std::type_info const&amp; GetElementTypeid</definition>
        <argsstring>(T const &amp;)</argsstring>
        <name>GetElementTypeid</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="488" column="1" bodyfile="pxr/base/vt/value.h" bodystart="488" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a1b87168569f24ffbb5b71bcfcbc4039d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>static VtValue GetProxiedAsVtValue</definition>
        <argsstring>(T const &amp;obj)</argsstring>
        <name>GetProxiedAsVtValue</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="491" column="1" bodyfile="pxr/base/vt/value.h" bodystart="491" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a39a38af444a791c0ebfe91339a408f28" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool HoldsType</definition>
        <argsstring>(T const &amp;tp, std::type_info const &amp;query)</argsstring>
        <name>HoldsType</name>
        <param>
          <type>T const &amp;</type>
          <declname>tp</declname>
        </param>
        <param>
          <type>std::type_info const &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="494" column="1" bodyfile="pxr/base/vt/value.h" bodystart="494" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1ad354ea7b675c23a2bcd5bed2b0e44e65" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_type" kindref="compound">TfType</ref></type>
        <definition>static TfType GetTfType</definition>
        <argsstring>(T const &amp;tp)</argsstring>
        <name>GetTfType</name>
        <param>
          <type>T const &amp;</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="497" column="1" bodyfile="pxr/base/vt/value.h" bodystart="497" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___proxy_helper_1a755dd00403987995d45a820f82308590" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void const  *</type>
        <definition>static void const* GetObjPtr</definition>
        <argsstring>(T const &amp;tp)</argsstring>
        <name>GetObjPtr</name>
        <param>
          <type>T const &amp;</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="500" column="1" bodyfile="pxr/base/vt/value.h" bodystart="500" bodyend="502"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/vt/value.h" line="448" column="1" bodyfile="pxr/base/vt/value.h" bodystart="447" bodyend="503"/>
    <listofallmembers>
      <member refid="struct_vt_value_1_1___proxy_helper_1ad11d742c4a0d8b30b96ca90c6bf3c0e5" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>CanHash</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a29093e21746923302ae4bd3e4c4d519d" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>Equal</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a17693e1a435f126b40eeeb2a53fb85b0" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetElementTypeid</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a540af8437724514366229c951cc08a7a" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetNumElements</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a755dd00403987995d45a820f82308590" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetObjPtr</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a1b87168569f24ffbb5b71bcfcbc4039d" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetProxiedAsVtValue</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a3b2a00d5b60d200ed51ca868b4f0463a" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetPyObj</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a5a18754802b7254d02585c54613b4381" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetShapeData</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1ad354ea7b675c23a2bcd5bed2b0e44e65" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetTfType</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a5983cc8397e18e3809029a4e2e83f4b4" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>GetTypeid</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a79368fe7c2c18b8b07f6e6f2daab596b" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>Hash</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a39a38af444a791c0ebfe91339a408f28" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>HoldsType</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a3b14b11ab03c8ec27f7ed21e6f43ed78" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>IsArrayValued</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1af530a5f120efa2cbb2ad16b649940e13" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>ProxiedType</name></member>
      <member refid="struct_vt_value_1_1___proxy_helper_1a5bb8ae97522c644b305112eecdfe4a28" prot="public" virt="non-virtual"><scope>VtValue::_ProxyHelper</scope><name>StreamOut</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
