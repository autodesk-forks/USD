<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_polymorphic_8h" kind="file" language="C++">
    <compoundname>pyPolymorphic.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="py_override_8h" local="yes">pxr/base/tf/pyOverride.h</includes>
    <includes refid="ref_ptr_8h" local="yes">pxr/base/tf/refPtr.h</includes>
    <includes refid="weak_ptr_8h" local="yes">pxr/base/tf/weakPtr.h</includes>
    <includes refid="base_2tf_2diagnostic_8h" local="yes">pxr/base/tf/diagnostic.h</includes>
    <includes refid="py_call_8h" local="yes">pxr/base/tf/pyCall.h</includes>
    <includes refid="py_lock_8h" local="yes">pxr/base/tf/pyLock.h</includes>
    <includes refid="type_8h" local="yes">pxr/base/tf/type.h</includes>
    <includes local="no">boost/python/object/class_detail.hpp</includes>
    <includes local="no">boost/python/wrapper.hpp</includes>
    <includes local="no">boost/python/has_back_reference.hpp</includes>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <incdepgraph>
      <node id="71525">
        <label>list</label>
      </node>
      <node id="71451">
        <label>locale</label>
      </node>
      <node id="71540">
        <label>boost/python/wrapper.hpp</label>
      </node>
      <node id="71490">
        <label>atomic</label>
      </node>
      <node id="71504">
        <label>stdarg.h</label>
      </node>
      <node id="71473">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="71474" relation="include">
        </childnode>
        <childnode refid="71475" relation="include">
        </childnode>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71476" relation="include">
        </childnode>
      </node>
      <node id="71514">
        <label>functional</label>
      </node>
      <node id="71454">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="71450" relation="include">
        </childnode>
      </node>
      <node id="71456">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="71518">
        <label>iterator</label>
      </node>
      <node id="71475">
        <label>cstdint</label>
      </node>
      <node id="71508">
        <label>pxr/base/tf/errorMark.h</label>
        <link refid="error_mark_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71509" relation="include">
        </childnode>
        <childnode refid="71532" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71446">
        <label>pxr/base/tf/pyOverride.h</label>
        <link refid="py_override_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71447" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71461" relation="include">
        </childnode>
      </node>
      <node id="71462">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71463" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
        <childnode refid="71487" relation="include">
        </childnode>
        <childnode refid="71488" relation="include">
        </childnode>
        <childnode refid="71491" relation="include">
        </childnode>
        <childnode refid="71493" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71494" relation="include">
        </childnode>
      </node>
      <node id="71502">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71451" relation="include">
        </childnode>
        <childnode refid="71503" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
      </node>
      <node id="71449">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="71450" relation="include">
        </childnode>
      </node>
      <node id="71477">
        <label>cmath</label>
      </node>
      <node id="71471">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71465" relation="include">
        </childnode>
        <childnode refid="71472" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71478" relation="include">
        </childnode>
        <childnode refid="71479" relation="include">
        </childnode>
      </node>
      <node id="71519">
        <label>numeric</label>
      </node>
      <node id="71488">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71489" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71524">
        <label>cstdarg</label>
      </node>
      <node id="71481">
        <label>string</label>
      </node>
      <node id="71444">
        <label>pxr/base/tf/pyPolymorphic.h</label>
        <link refid="py_polymorphic_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71446" relation="include">
        </childnode>
        <childnode refid="71462" relation="include">
        </childnode>
        <childnode refid="71495" relation="include">
        </childnode>
        <childnode refid="71499" relation="include">
        </childnode>
        <childnode refid="71506" relation="include">
        </childnode>
        <childnode refid="71447" relation="include">
        </childnode>
        <childnode refid="71535" relation="include">
        </childnode>
        <childnode refid="71539" relation="include">
        </childnode>
        <childnode refid="71540" relation="include">
        </childnode>
        <childnode refid="71541" relation="include">
        </childnode>
        <childnode refid="71514" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
      </node>
      <node id="71464">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71454" relation="include">
        </childnode>
      </node>
      <node id="71529">
        <label>pxr/base/tf/warning.h</label>
        <link refid="warning_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
      </node>
      <node id="71482">
        <label>map</label>
      </node>
      <node id="71474">
        <label>cinttypes</label>
      </node>
      <node id="71445">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="71536">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="71537" relation="include">
        </childnode>
      </node>
      <node id="71505">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71484" relation="include">
        </childnode>
      </node>
      <node id="71530">
        <label>tbb/enumerable_thread_specific.h</label>
      </node>
      <node id="71469">
        <label>stddef.h</label>
      </node>
      <node id="71465">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
      </node>
      <node id="71461">
        <label>boost/python/override.hpp</label>
      </node>
      <node id="71509">
        <label>pxr/base/tf/diagnosticMgr.h</label>
        <link refid="diagnostic_mgr_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71467" relation="include">
        </childnode>
        <childnode refid="71510" relation="include">
        </childnode>
        <childnode refid="71463" relation="include">
        </childnode>
        <childnode refid="71521" relation="include">
        </childnode>
        <childnode refid="71527" relation="include">
        </childnode>
        <childnode refid="71528" relation="include">
        </childnode>
        <childnode refid="71523" relation="include">
        </childnode>
        <childnode refid="71529" relation="include">
        </childnode>
        <childnode refid="71495" relation="include">
        </childnode>
        <childnode refid="71511" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71468" relation="include">
        </childnode>
        <childnode refid="71530" relation="include">
        </childnode>
        <childnode refid="71531" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
        <childnode refid="71524" relation="include">
        </childnode>
        <childnode refid="71525" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
      </node>
      <node id="71534">
        <label>boost/python/call.hpp</label>
      </node>
      <node id="71512">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="71450" relation="include">
        </childnode>
      </node>
      <node id="71489">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
      </node>
      <node id="71491">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
      </node>
      <node id="71497">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71448">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="71449" relation="include">
        </childnode>
        <childnode refid="71451" relation="include">
        </childnode>
        <childnode refid="71452" relation="include">
        </childnode>
      </node>
      <node id="71531">
        <label>tbb/spin_rw_mutex.h</label>
      </node>
      <node id="71503">
        <label>any</label>
      </node>
      <node id="71521">
        <label>pxr/base/tf/error.h</label>
        <link refid="tf_2error_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
      </node>
      <node id="71476">
        <label>sys/types.h</label>
      </node>
      <node id="71515">
        <label>pxr/base/tf/stopwatch.h</label>
        <link refid="stopwatch_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71516" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
      </node>
      <node id="71498">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71499" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
        <childnode refid="71462" relation="include">
        </childnode>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71505" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
      </node>
      <node id="71511">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71505" relation="include">
        </childnode>
        <childnode refid="71470" relation="include">
        </childnode>
        <childnode refid="71512" relation="include">
        </childnode>
        <childnode refid="71491" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
      </node>
      <node id="71492">
        <label>typeinfo</label>
      </node>
      <node id="71520">
        <label>cstdio</label>
      </node>
      <node id="71458">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="71457">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="71495">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71487" relation="include">
        </childnode>
        <childnode refid="71462" relation="include">
        </childnode>
        <childnode refid="71471" relation="include">
        </childnode>
        <childnode refid="71496" relation="include">
        </childnode>
        <childnode refid="71498" relation="include">
        </childnode>
        <childnode refid="71494" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
      </node>
      <node id="71537">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
        <childnode refid="71538" relation="include">
        </childnode>
        <childnode refid="71475" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
      </node>
      <node id="71472">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71477" relation="include">
        </childnode>
      </node>
      <node id="71486">
        <label>vector</label>
      </node>
      <node id="71453">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="71454" relation="include">
        </childnode>
      </node>
      <node id="71447">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71448" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71516">
        <label>pxr/base/arch/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71450" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71517" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
        <childnode refid="71518" relation="include">
        </childnode>
        <childnode refid="71519" relation="include">
        </childnode>
      </node>
      <node id="71533">
        <label>boost/python/default_call_policies.hpp</label>
      </node>
      <node id="71479">
        <label>utility</label>
      </node>
      <node id="71506">
        <label>pxr/base/tf/pyCall.h</label>
        <link refid="py_call_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71507" relation="include">
        </childnode>
        <childnode refid="71447" relation="include">
        </childnode>
        <childnode refid="71455" relation="include">
        </childnode>
        <childnode refid="71534" relation="include">
        </childnode>
      </node>
      <node id="71526">
        <label>sstream</label>
      </node>
      <node id="71500">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71501" relation="include">
        </childnode>
        <childnode refid="71468" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
      </node>
      <node id="71487">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71450">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="71510">
        <label>pxr/base/tf/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71471" relation="include">
        </childnode>
        <childnode refid="71511" relation="include">
        </childnode>
        <childnode refid="71512" relation="include">
        </childnode>
        <childnode refid="71513" relation="include">
        </childnode>
        <childnode refid="71515" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
        <childnode refid="71520" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
      </node>
      <node id="71466">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="71450" relation="include">
        </childnode>
      </node>
      <node id="71470">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71471" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71480" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71482" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71484" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71479" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
      </node>
      <node id="71478">
        <label>math.h</label>
      </node>
      <node id="71523">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71511" relation="include">
        </childnode>
        <childnode refid="71524" relation="include">
        </childnode>
        <childnode refid="71480" relation="include">
        </childnode>
        <childnode refid="71525" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71526" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
      </node>
      <node id="71459">
        <label>iosfwd</label>
      </node>
      <node id="71538">
        <label>cstdlib</label>
      </node>
      <node id="71467">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71468" relation="include">
        </childnode>
        <childnode refid="71469" relation="include">
        </childnode>
      </node>
      <node id="71535">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71513" relation="include">
        </childnode>
        <childnode refid="71493" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
        <childnode refid="71483" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
        <childnode refid="71485" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
        <childnode refid="71486" relation="include">
        </childnode>
        <childnode refid="71536" relation="include">
        </childnode>
      </node>
      <node id="71452">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="71494">
        <label>cstddef</label>
      </node>
      <node id="71527">
        <label>pxr/base/tf/singleton.h</label>
        <link refid="singleton_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71449" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
      </node>
      <node id="71493">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
      </node>
      <node id="71463">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71465" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71467" relation="include">
        </childnode>
        <childnode refid="71469" relation="include">
        </childnode>
      </node>
      <node id="71455">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71449" relation="include">
        </childnode>
        <childnode refid="71448" relation="include">
        </childnode>
        <childnode refid="71456" relation="include">
        </childnode>
        <childnode refid="71457" relation="include">
        </childnode>
        <childnode refid="71458" relation="include">
        </childnode>
        <childnode refid="71459" relation="include">
        </childnode>
        <childnode refid="71460" relation="include">
        </childnode>
      </node>
      <node id="71532">
        <label>pxr/base/tf/errorTransport.h</label>
        <link refid="error_transport_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71509" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
      </node>
      <node id="71507">
        <label>pxr/base/tf/pyError.h</label>
        <link refid="py_error_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71508" relation="include">
        </childnode>
        <childnode refid="71533" relation="include">
        </childnode>
      </node>
      <node id="71485">
        <label>type_traits</label>
      </node>
      <node id="71483">
        <label>set</label>
      </node>
      <node id="71501">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="71454" relation="include">
        </childnode>
      </node>
      <node id="71539">
        <label>boost/python/object/class_detail.hpp</label>
      </node>
      <node id="71468">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="71450" relation="include">
        </childnode>
      </node>
      <node id="71517">
        <label>algorithm</label>
      </node>
      <node id="71541">
        <label>boost/python/has_back_reference.hpp</label>
      </node>
      <node id="71480">
        <label>cstring</label>
      </node>
      <node id="71522">
        <label>pxr/base/tf/diagnosticBase.h</label>
        <link refid="diagnostic_base_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71467" relation="include">
        </childnode>
        <childnode refid="71511" relation="include">
        </childnode>
        <childnode refid="71488" relation="include">
        </childnode>
        <childnode refid="71523" relation="include">
        </childnode>
        <childnode refid="71495" relation="include">
        </childnode>
        <childnode refid="71473" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71500" relation="include">
        </childnode>
        <childnode refid="71503" relation="include">
        </childnode>
        <childnode refid="71524" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
      </node>
      <node id="71528">
        <label>pxr/base/tf/status.h</label>
        <link refid="status_8h_source"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71522" relation="include">
        </childnode>
      </node>
      <node id="71496">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71497" relation="include">
        </childnode>
        <childnode refid="71462" relation="include">
        </childnode>
        <childnode refid="71490" relation="include">
        </childnode>
      </node>
      <node id="71460">
        <label>memory</label>
      </node>
      <node id="71513">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71464" relation="include">
        </childnode>
        <childnode refid="71512" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71514" relation="include">
        </childnode>
        <childnode refid="71492" relation="include">
        </childnode>
      </node>
      <node id="71499">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="71445" relation="include">
        </childnode>
        <childnode refid="71500" relation="include">
        </childnode>
        <childnode refid="71463" relation="include">
        </childnode>
        <childnode refid="71453" relation="include">
        </childnode>
        <childnode refid="71466" relation="include">
        </childnode>
        <childnode refid="71502" relation="include">
        </childnode>
        <childnode refid="71469" relation="include">
        </childnode>
        <childnode refid="71504" relation="include">
        </childnode>
        <childnode refid="71481" relation="include">
        </childnode>
      </node>
      <node id="71484">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_tf_py_polymorphic" prot="public">TfPyPolymorphic</innerclass>
    <innerclass refid="struct_tf_py_polymorphic_1_1___bind_mem_fn" prot="private">TfPyPolymorphic::_BindMemFn</innerclass>
    <innerclass refid="structboost_1_1python_1_1has__back__reference_3_011_1_1_tf_py_polymorphic_3_01_t_01_4_01_4" prot="public">boost::python::has_back_reference&lt; 1::TfPyPolymorphic&lt; T &gt; &gt;</innerclass>
    <innernamespace refid="namespaceboost">boost</innernamespace>
    <innernamespace refid="namespaceboost_1_1python">boost::python</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="py_polymorphic_8h_1ad0717684e519f2267341bf24db1e2f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Base</type>
          </param>
          <param>
            <type>typename Fn</type>
          </param>
        </templateparamlist>
        <type>Tf_PyMemberFunctionPointerUpcast&lt; Base, Fn &gt;::Type</type>
        <definition>Tf_PyMemberFunctionPointerUpcast&lt;Base, Fn&gt;::Type TfPyProtectedVirtual</definition>
        <argsstring>(Fn fn)</argsstring>
        <name>TfPyProtectedVirtual</name>
        <param>
          <type>Fn</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="261" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="261" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_PY_POLYMORPHIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_PY_POLYMORPHIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyOverride.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ref_ptr_8h" kindref="compound">pxr/base/tf/refPtr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weak_ptr_8h" kindref="compound">pxr/base/tf/weakPtr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2diagnostic_8h" kindref="compound">pxr/base/tf/diagnostic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="py_call_8h" kindref="compound">pxr/base/tf/pyCall.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyLock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/object/class_detail.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/wrapper.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/has_back_reference.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>All<sp/>this<sp/>stuff<sp/>with<sp/>holding<sp/>onto<sp/>the<sp/>class<sp/>needs<sp/>to<sp/>go<sp/>away.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TfPyPolymorphic<sp/>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TfType::PyPolymorphicBase,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::python::wrapper&lt;Derived&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfPyPolymorphic&lt;Derived&gt;<sp/>This;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_tf_py_override" kindref="compound">TfPyOverride</ref><sp/>Override;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Override<sp/>GetOverride(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*func)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>pyLock;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>use<sp/>boost::python::wrapper::get_override(),<sp/>as<sp/>it<sp/>can<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>wrong<sp/>result.<sp/>instead,<sp/>implement<sp/>our<sp/>own<sp/>version<sp/>which<sp/>does</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>better</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject<sp/>*<sp/>m_self<sp/>=<sp/>detail::wrapper_base_::get_owner(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_self)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>using<sp/>pythons<sp/>mro,<sp/>get<sp/>the<sp/>attribute<sp/>string<sp/>that<sp/>represents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>named<sp/>function.<sp/>this<sp/>will<sp/>return<sp/>something<sp/>valid<sp/>if<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>this<sp/>or<sp/>any<sp/>ancestor<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle&lt;&gt;<sp/>m<sp/>=<sp/>handle&lt;&gt;(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow_null(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_GetAttrString(</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_self,<sp/>const_cast&lt;char*&gt;(func))))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>get<sp/>the<sp/>typehandle<sp/>to<sp/>the<sp/>class.<sp/>we<sp/>will<sp/>use<sp/>this<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>if<sp/>this<sp/>method<sp/>exists<sp/>on<sp/>the<sp/>derived<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type_handle<sp/>typeHandle<sp/>=</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objects::registered_class_object(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(Derived));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyTypeObject*<sp/>class_object<sp/>=<sp/>typeHandle.get();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject*<sp/>func_object<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyMethod_Check(m.get())</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((PyMethodObject*)m.get())-&gt;im_self<sp/>==<sp/>m_self</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>class_object-&gt;tp_dict<sp/>!=<sp/>0</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>for<sp/>the<sp/>method<sp/>on<sp/>the<sp/>class<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle&lt;&gt;<sp/>borrowed_f(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allow_null(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyObject_GetAttrString(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PyObject<sp/>*)class_object,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;char*&gt;(func))));</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>leave<sp/>an<sp/>exception<sp/>if<sp/>there&apos;s<sp/>no<sp/>base<sp/>class<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>the<sp/>appropriate<sp/>conversion,<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(borrowed_f<sp/>&amp;&amp;<sp/>PyCallable_Check(borrowed_f.get()))<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func_object<sp/>=<sp/>borrowed_f.get();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now,<sp/>func_object<sp/>is<sp/>either<sp/>NULL,<sp/>or<sp/>pointing<sp/>at<sp/>the<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>the<sp/>class<sp/>or<sp/>one<sp/>of<sp/>it&apos;s<sp/>ancestors.<sp/>m<sp/>is<sp/>holding<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>actual<sp/>method<sp/>that<sp/>pythons<sp/>mro<sp/>would<sp/>find.<sp/>if<sp/>that<sp/>thing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>not<sp/>the<sp/>same,<sp/>it<sp/>must<sp/>be<sp/>an<sp/>override</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(func_object<sp/>!=<sp/>((PyMethodObject*)m.get())-&gt;im_func)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Override(m);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_Clear();<sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>leave<sp/>an<sp/>exception<sp/>if<sp/>there&apos;s<sp/>no<sp/>override.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Override(handle&lt;&gt;(detail::none()));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>Override<sp/>GetPureOverride(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*func)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>pyLock;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Override<sp/>ret<sp/>=<sp/>GetOverride(func);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raise<sp/>a<sp/>*python*<sp/>exception<sp/>when<sp/>no<sp/>virtual<sp/>is<sp/>found.<sp/><sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>a<sp/>subsequent<sp/>attempt<sp/>to<sp/>call<sp/>ret<sp/>will<sp/>result<sp/>in<sp/>a<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exception,<sp/>but<sp/>a<sp/>far<sp/>less<sp/>useful<sp/>one.<sp/><sp/>If<sp/>we<sp/>were<sp/>to<sp/>simply<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>TfError<sp/>here,<sp/>it<sp/>would<sp/>be<sp/>trumped<sp/>by<sp/>that<sp/>python<sp/>exception.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_AttributeError,<sp/><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf</ref></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Pure<sp/>virtual<sp/>method<sp/>&apos;%s&apos;<sp/>called<sp/>--<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;must<sp/>provide<sp/>a<sp/>python<sp/>implementation.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func).c_str());</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TfPyConvertPythonExceptionToTfErrors();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ret&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref><sp/>CallPureVirtual(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*func)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref>(GetPureOverride(func));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ret,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cls,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Arg&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;Ret<sp/>(Arg...)&gt;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>CallVirtual(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*fname,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret<sp/>(Cls::*defaultImpl)(Arg...));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ret,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cls,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Arg&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>std::function&lt;Ret<sp/>(Arg...)&gt;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>CallVirtual(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*fname,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret<sp/>(Cls::*defaultImpl)(Arg...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~TfPyPolymorphic();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>bind<sp/>a<sp/>pointer-to-member-function<sp/>and<sp/>a<sp/>pointer<sp/>to<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ret,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cls,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_BindMemFn</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>MemFn<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_const&lt;Cls&gt;::value,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret<sp/>(Cls::*)(Args...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">,<sp/>Ret<sp/>(Cls::*)(Args...)&gt;::type;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_BindMemFn(MemFn<sp/>memFn,<sp/>Cls<sp/>*obj)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_memFn(memFn)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_obj(obj)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Ret</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(Args...<sp/>args)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="180"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_obj-&gt;*_memFn)(args...);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MemFn<sp/>_memFn;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cls<sp/>*_obj;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="188"><highlight class="normal">};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">TfPyPolymorphic&lt;Derived&gt;::~TfPyPolymorphic()</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ret,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cls,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">std::function&lt;Ret<sp/>(Args...)&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">TfPyPolymorphic&lt;Derived&gt;::CallVirtual(</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*fname,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>Ret<sp/>(Cls::*defaultImpl)(Args...))</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;This,<sp/>Cls&gt;::value,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>must<sp/>be<sp/>a<sp/>base<sp/>of<sp/>Cls.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Override<sp/>o<sp/>=<sp/>GetOverride(fname))</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::function&lt;Ret<sp/>(Args...)&gt;(<ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref>(o));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_BindMemFn&lt;Ret,<sp/>Cls,<sp/>Args...&gt;(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultImpl,<sp/>static_cast&lt;Cls<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Ret,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cls,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">std::function&lt;Ret<sp/>(Args...)&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">TfPyPolymorphic&lt;Derived&gt;::CallVirtual(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*fname,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>Ret<sp/>(Cls::*defaultImpl)(Args...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;This,<sp/>Cls&gt;::value,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;This<sp/>must<sp/>be<sp/>a<sp/>base<sp/>of<sp/>Cls.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Override<sp/>o<sp/>=<sp/>GetOverride(fname))</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::function&lt;Ret<sp/>(Args...)&gt;(<ref refid="struct_tf_py_call" kindref="compound">TfPyCall&lt;Ret&gt;</ref>(o));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_BindMemFn&lt;Ret,<sp/>Cls<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">,<sp/>Args...&gt;(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultImpl,<sp/>static_cast&lt;Cls<sp/>const<sp/>*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialize<sp/>has_back_reference&lt;&gt;<sp/>so<sp/>that<sp/>boost.python<sp/>will<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PyObject*<sp/>as<sp/>the<sp/>1st<sp/>argument<sp/>to<sp/>TfPyPolymorphic&apos;s<sp/>ctor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">python<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">has_back_reference&lt;<sp/>PXR_NS::TfPyPolymorphic&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mpl::true_<sp/>{};</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>case<sp/>for<sp/>internal<sp/>Tf_PyMemberFunctionPointerUpcast.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fn&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyMemberFunctionPointerUpcast;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ret,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyMemberFunctionPointerUpcast&lt;<sp/>Base,<sp/>Ret<sp/>(Derived::*)(Args...)<sp/>&gt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Ret<sp/>(Base::*Type)(Args...);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Derived,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Ret,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyMemberFunctionPointerUpcast&lt;<sp/>Base,<sp/>Ret<sp/>(Derived::*)(Args...)<sp/>const<sp/>&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Ret<sp/>(Base::*Type)(Args...)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">};</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Fn&gt;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tf_PyMemberFunctionPointerUpcast&lt;Base,<sp/>Fn&gt;::Type</highlight></codeline>
<codeline lineno="261"><highlight class="normal">TfPyProtectedVirtual(<sp/>Fn<sp/>fn<sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tf_PyMemberFunctionPointerUpcast&lt;Base,<sp/>Fn&gt;::Type<sp/>Ret;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;Ret&gt;(fn);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_PY_POLYMORPHIC_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pyPolymorphic.h"/>
  </compounddef>
</doxygen>
