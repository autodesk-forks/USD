<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_field_texture_object" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStFieldTextureObject</compoundname>
    <basecompoundref refid="class_hd_st_texture_object" prot="public" virt="non-virtual">HdStTextureObject</basecompoundref>
    <includes refid="texture_object_8h" local="no">textureObject.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_field_texture_object_1ad5246185f49069f2d07b7d54de887fd6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_hd_st_texture_cpu_data" kindref="compound">HdStTextureCpuData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HdStTextureCpuData&gt; _cpuData</definition>
        <argsstring></argsstring>
        <name>_cpuData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="279" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_texture_object_1adf269aca285976b65a541f0dfc26d84a" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_b_box3d" kindref="compound">GfBBox3d</ref></type>
        <definition>GfBBox3d _bbox</definition>
        <argsstring></argsstring>
        <name>_bbox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="280" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_texture_object_1aa0c3d0c09763f785271a1eafefae1b3d" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _samplingTransform</definition>
        <argsstring></argsstring>
        <name>_samplingTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="281" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_texture_object_1a48a7f66326d9f440aaac7d7be29569ed" prot="private" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle _gpuTexture</definition>
        <argsstring></argsstring>
        <name>_gpuTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="282" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_texture_object_1ae923f1f1af45226b3de4dd97f4d64c2c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _valid</definition>
        <argsstring></argsstring>
        <name>_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="283" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_field_texture_object_1afda932b79d6ae81c7f170f49f1e07f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStFieldTextureObject</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId, HdSt_TextureObjectRegistry *textureObjectRegistry)</argsstring>
        <name>HdStFieldTextureObject</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>HdSt_TextureObjectRegistry *</type>
          <declname>textureObjectRegistry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a2432b294618f4f468cdf5c7688ca7b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStFieldTextureObject</definition>
        <argsstring>() override</argsstring>
        <name>~HdStFieldTextureObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a0f8a0f2f3d393395bdfdaf350b31dbd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HgiTextureHandle const  &amp;</type>
        <definition>HgiTextureHandle const&amp; GetTexture</definition>
        <argsstring>() const</argsstring>
        <name>GetTexture</name>
        <briefdescription>
<para>Get the handle to the actual GPU resource. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="247" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="247" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a0d7e96a983b474200bc0f218314b22d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_b_box3d" kindref="compound">GfBBox3d</ref> &amp;</type>
        <definition>const GfBBox3d&amp; GetBoundingBox</definition>
        <argsstring>() const</argsstring>
        <name>GetBoundingBox</name>
        <briefdescription>
<para>The box the texture fills out. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after the commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="255" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="255" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1aa712d16e5428abd38af3cb56856794b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
        <definition>const GfMatrix4d&amp; GetSamplingTransform</definition>
        <argsstring>() const</argsstring>
        <name>GetSamplingTransform</name>
        <briefdescription>
<para>The sampling transform. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after the commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="261" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="261" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool IsValid</definition>
        <argsstring>() const override</argsstring>
        <name>IsValid</name>
        <reimplements refid="class_hd_st_texture_object_1a83d17ce2f1f540385d21e9f81b3dae76">IsValid</reimplements>
        <briefdescription>
<para>Is texture valid? Only correct after commit phase. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g., no file at given file path. Consulted by clients to determine whether to use the fallback value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a719fe828133e23597e11ebc9b664529a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API HdTextureType</type>
        <definition>HDST_API HdTextureType GetTextureType</definition>
        <argsstring>() const override</argsstring>
        <name>GetTextureType</name>
        <reimplements refid="class_hd_st_texture_object_1a78a9450bcebcd13da2e1b124fe241a2b">GetTextureType</reimplements>
        <briefdescription>
<para>Get texture type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="269" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a113afdb59ba5d85e64ff870aeae4a575" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _Load</definition>
        <argsstring>() override</argsstring>
        <name>_Load</name>
        <reimplements refid="class_hd_st_texture_object_1a53f612f5be05577bafd37e4ca630aba8">_Load</reimplements>
        <briefdescription>
<para>Load texture to CPU (thread-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _Commit</definition>
        <argsstring>() override</argsstring>
        <name>_Commit</name>
        <reimplements refid="class_hd_st_texture_object_1af9c7ea62423805492df6200fa37b0452">_Commit</reimplements>
        <briefdescription>
<para>Commit texture to GPU (not thread-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="276" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A uvw texture with a bounding box describing how to transform it. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3174">
        <label>HdStFieldTextureObject</label>
        <link refid="class_hd_st_field_texture_object"/>
        <childnode refid="3175" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3175">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3176">
        <label>HdStFieldTextureObject</label>
        <link refid="class_hd_st_field_texture_object"/>
        <childnode refid="3177" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3177">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/textureObject.h" line="233" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="232" bodyend="284"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_object_1a4bb9e349d6ac5c6cb101c3b76c444909" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_AddToTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1a498f50b8bbbe346da6e294b0551ae51f" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_AdjustTotalTextureMemory</name></member>
      <member refid="class_hd_st_field_texture_object_1adf269aca285976b65a541f0dfc26d84a" prot="private" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_bbox</name></member>
      <member refid="class_hd_st_field_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698" prot="protected" virt="virtual"><scope>HdStFieldTextureObject</scope><name>_Commit</name></member>
      <member refid="class_hd_st_field_texture_object_1ad5246185f49069f2d07b7d54de887fd6" prot="private" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_cpuData</name></member>
      <member refid="class_hd_st_texture_object_1a6ecfd8fb0c62f45e1a8978fb53a025f9" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_GetDebugName</name></member>
      <member refid="class_hd_st_texture_object_1a5a7b6bc152ae4b062a7aa5f10e7d1bab" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_GetHgi</name></member>
      <member refid="class_hd_st_texture_object_1a0328339184490ba78de07142381a31ce" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_GetPremultiplyAlpha</name></member>
      <member refid="class_hd_st_texture_object_1aecf3efc41bd50e8e4598620301ca7890" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_GetResourceRegistry</name></member>
      <member refid="class_hd_st_texture_object_1aab2a86741f445fd5c73d0707912e8d11" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_GetSourceColorSpace</name></member>
      <member refid="class_hd_st_field_texture_object_1a48a7f66326d9f440aaac7d7be29569ed" prot="private" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_gpuTexture</name></member>
      <member refid="class_hd_st_field_texture_object_1a113afdb59ba5d85e64ff870aeae4a575" prot="protected" virt="virtual"><scope>HdStFieldTextureObject</scope><name>_Load</name></member>
      <member refid="class_hd_st_field_texture_object_1aa0c3d0c09763f785271a1eafefae1b3d" prot="private" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_samplingTransform</name></member>
      <member refid="class_hd_st_texture_object_1a656982d9323adc3d53decc0dcc731c35" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_SubtractFromTotalTextureMemory</name></member>
      <member refid="class_hd_st_field_texture_object_1ae923f1f1af45226b3de4dd97f4d64c2c" prot="private" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>_valid</name></member>
      <member refid="class_hd_st_field_texture_object_1a0d7e96a983b474200bc0f218314b22d5" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>GetBoundingBox</name></member>
      <member refid="class_hd_st_field_texture_object_1aa712d16e5428abd38af3cb56856794b1" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>GetSamplingTransform</name></member>
      <member refid="class_hd_st_texture_object_1a1604cec087550d6968d8050060ef414f" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>GetTargetMemory</name></member>
      <member refid="class_hd_st_field_texture_object_1a0f8a0f2f3d393395bdfdaf350b31dbd1" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>GetTexture</name></member>
      <member refid="class_hd_st_texture_object_1a9b0c375568692c0b631a211b92fb3fbc" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>GetTextureIdentifier</name></member>
      <member refid="class_hd_st_field_texture_object_1a719fe828133e23597e11ebc9b664529a" prot="public" virt="virtual"><scope>HdStFieldTextureObject</scope><name>GetTextureType</name></member>
      <member refid="class_hd_st_field_texture_object_1afda932b79d6ae81c7f170f49f1e07f4c" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>HdStFieldTextureObject</name></member>
      <member refid="class_hd_st_texture_object_1a91c3c2ce5a3fe4bee791c2b2e539a436" prot="protected" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>HdStTextureObject</name></member>
      <member refid="class_hd_st_field_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9" prot="public" virt="virtual"><scope>HdStFieldTextureObject</scope><name>IsValid</name></member>
      <member refid="class_hd_st_texture_object_1a6ded25aed3b249789c7d7ea438be2076" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>SetTargetMemory</name></member>
      <member refid="class_hd_st_field_texture_object_1a2432b294618f4f468cdf5c7688ca7b69" prot="public" virt="non-virtual"><scope>HdStFieldTextureObject</scope><name>~HdStFieldTextureObject</name></member>
      <member refid="class_hd_st_texture_object_1a17729686cf8e982e36553a33d4c1ee7c" prot="public" virt="virtual"><scope>HdStFieldTextureObject</scope><name>~HdStTextureObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
