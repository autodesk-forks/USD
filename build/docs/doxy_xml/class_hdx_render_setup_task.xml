<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_render_setup_task" kind="class" language="C++" prot="public">
    <compoundname>HdxRenderSetupTask</compoundname>
    <basecompoundref prot="public" virt="non-virtual">HdTask</basecompoundref>
    <includes refid="render_setup_task_8h" local="no">renderSetupTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_render_setup_task_1a7986ee5477d20f21d694c956b5042151" prot="private" static="no" mutable="no">
        <type>HdRenderPassStateSharedPtr</type>
        <definition>HdRenderPassStateSharedPtr _renderPassState</definition>
        <argsstring></argsstring>
        <name>_renderPassState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="105" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1a825f6c1ab60f440c602b9dc57455d8cd" prot="private" static="no" mutable="no">
        <type>HdStRenderPassShaderSharedPtr</type>
        <definition>HdStRenderPassShaderSharedPtr _colorRenderPassShader</definition>
        <argsstring></argsstring>
        <name>_colorRenderPassShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="106" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1a8a16cc28094d4f12498a04f2ff6f25dd" prot="private" static="no" mutable="no">
        <type>HdStRenderPassShaderSharedPtr</type>
        <definition>HdStRenderPassShaderSharedPtr _idRenderPassShader</definition>
        <argsstring></argsstring>
        <name>_idRenderPassShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="107" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1aab75c19136df41d5061b8e2cc1b6d0fc" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _cameraId</definition>
        <argsstring></argsstring>
        <name>_cameraId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="108" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1a45cedb49680fd7fb30cae3e826e3d1ae" prot="private" static="no" mutable="no">
        <type><ref refid="class_camera_util_framing" kindref="compound">CameraUtilFraming</ref></type>
        <definition>CameraUtilFraming _framing</definition>
        <argsstring></argsstring>
        <name>_framing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="109" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1add64581840b0e8fe695d12dc8cae8311" prot="private" static="no" mutable="no">
        <type>std::optional&lt; CameraUtilConformWindowPolicy &gt;</type>
        <definition>std::optional&lt;CameraUtilConformWindowPolicy&gt; _overrideWindowPolicy</definition>
        <argsstring></argsstring>
        <name>_overrideWindowPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="110" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1a2e693e8333cc12fdc05c714ca930c8f6" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d _viewport</definition>
        <argsstring></argsstring>
        <name>_viewport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="113" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1a21cece5f580f5106d1a7783e4a47bccd" prot="private" static="no" mutable="no">
        <type>HdRenderPassAovBindingVector</type>
        <definition>HdRenderPassAovBindingVector _aovBindings</definition>
        <argsstring></argsstring>
        <name>_aovBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="114" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_render_setup_task_1af56546f99e6def66c0fb28af514afc2b" prot="private" static="no" mutable="no">
        <type>HdRenderPassAovBindingVector</type>
        <definition>HdRenderPassAovBindingVector _aovInputBindings</definition>
        <argsstring></argsstring>
        <name>_aovInputBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="115" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_render_setup_task_1aa9380975ef9bf9160f8d46c8fbdacdab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxRenderSetupTask</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdxRenderSetupTask</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1a06342440a8f423a7d0256a15e217f609" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API ~HdxRenderSetupTask</definition>
        <argsstring>() override</argsstring>
        <name>~HdxRenderSetupTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1a75e1220d46401d36300b897da411f867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void SyncParams</definition>
        <argsstring>(HdSceneDelegate *delegate, HdxRenderTaskParams const &amp;params)</argsstring>
        <name>SyncParams</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="struct_hdx_render_task_params" kindref="compound">HdxRenderTaskParams</ref> const &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1a55da1145d265b548f7e5f8aa2c098d21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void PrepareCamera</definition>
        <argsstring>(HdRenderIndex *renderIndex)</argsstring>
        <name>PrepareCamera</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1acdd324e954d5aafadc9d0a2b7699369a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdRenderPassStateSharedPtr const  &amp;</type>
        <definition>HdRenderPassStateSharedPtr const&amp; GetRenderPassState</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderPassState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="85" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1a65601d5e0b6d93e1df6b6618c5c040e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Sync</definition>
        <argsstring>(HdSceneDelegate *delegate, HdTaskContext *ctx, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Sync the render pass resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Prepare</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex) override</argsstring>
        <name>Prepare</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
<para>Prepare the tasks resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Execute</definition>
        <argsstring>(HdTaskContext *ctx) override</argsstring>
        <name>Execute</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Execute render pass task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_render_setup_task_1a584afbfae95b2a41bca036c746564ff8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SetRenderpassShadersForStorm</definition>
        <argsstring>(HdxRenderTaskParams const &amp;params, HdStRenderPassState *renderPassState)</argsstring>
        <name>_SetRenderpassShadersForStorm</name>
        <param>
          <type><ref refid="struct_hdx_render_task_params" kindref="compound">HdxRenderTaskParams</ref> const &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_render_pass_state" kindref="compound">HdStRenderPassState</ref> *</type>
          <declname>renderPassState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1acbc136e79035a6fe8b5c5e66da74b2bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdRenderPassStateSharedPtr &amp;</type>
        <definition>HdRenderPassStateSharedPtr&amp; _GetRenderPassState</definition>
        <argsstring>(HdRenderIndex *renderIndex)</argsstring>
        <name>_GetRenderPassState</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1ab28f961568d5e415f76a926b1966349c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _PrepareAovBindings</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex)</argsstring>
        <name>_PrepareAovBindings</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1afaa9ea4fa990bc05710cc9ba3a7aeacb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxRenderSetupTask</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxRenderSetupTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1a4d430b3bd01614728c87473d9168f623" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxRenderSetupTask</definition>
        <argsstring>(const HdxRenderSetupTask &amp;)=delete</argsstring>
        <name>HdxRenderSetupTask</name>
        <param>
          <type>const <ref refid="class_hdx_render_setup_task" kindref="compound">HdxRenderSetupTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_render_setup_task_1ac5023193ce32ae2a2184218c09c05ed3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hdx_render_setup_task" kindref="compound">HdxRenderSetupTask</ref> &amp;</type>
        <definition>HdxRenderSetupTask&amp; operator=</definition>
        <argsstring>(const HdxRenderSetupTask &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hdx_render_setup_task" kindref="compound">HdxRenderSetupTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/renderSetupTask.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A task for setting up render pass state (camera, renderpass shader, GL states). </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> depends on the output of this task. Applications can choose to create a render setup task, and pass it the <ref refid="struct_hdx_render_task_params" kindref="compound">HdxRenderTaskParams</ref>; or they can pass the <ref refid="struct_hdx_render_task_params" kindref="compound">HdxRenderTaskParams</ref> directly to the render task, which will create a render setup task internally. See the <ref refid="class_hdx_render_task" kindref="compound">HdxRenderTask</ref> documentation for details. </para>
    </detaileddescription>
    <location file="pxr/imaging/hdx/renderSetupTask.h" line="69" column="1" bodyfile="pxr/imaging/hdx/renderSetupTask.h" bodystart="68" bodyend="129"/>
    <listofallmembers>
      <member refid="class_hdx_render_setup_task_1a21cece5f580f5106d1a7783e4a47bccd" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_aovBindings</name></member>
      <member refid="class_hdx_render_setup_task_1af56546f99e6def66c0fb28af514afc2b" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_aovInputBindings</name></member>
      <member refid="class_hdx_render_setup_task_1aab75c19136df41d5061b8e2cc1b6d0fc" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_cameraId</name></member>
      <member refid="class_hdx_render_setup_task_1a825f6c1ab60f440c602b9dc57455d8cd" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_colorRenderPassShader</name></member>
      <member refid="class_hdx_render_setup_task_1a45cedb49680fd7fb30cae3e826e3d1ae" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_framing</name></member>
      <member refid="class_hd_task_1ab4beed642380f0353cf158cef16c4f32" prot="protected" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_GetDriver</name></member>
      <member refid="class_hdx_render_setup_task_1acbc136e79035a6fe8b5c5e66da74b2bc" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_GetRenderPassState</name></member>
      <member refid="class_hd_task_1a2ceca911620546c6b245d903f9ec5f78" prot="protected" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_GetTaskContextData</name></member>
      <member refid="class_hd_task_1a50bb64fcb3404805df436ad9e12ddd3c" prot="protected" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_GetTaskParams</name></member>
      <member refid="class_hd_task_1a7db1af254e4af3fbffc974c19968a6e7" prot="protected" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_GetTaskRenderTags</name></member>
      <member refid="class_hd_task_1a6f03b9a9e34350db200b0a7f252eaf8e" prot="protected" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_HasTaskContextData</name></member>
      <member refid="class_hdx_render_setup_task_1a8a16cc28094d4f12498a04f2ff6f25dd" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_idRenderPassShader</name></member>
      <member refid="class_hdx_render_setup_task_1add64581840b0e8fe695d12dc8cae8311" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_overrideWindowPolicy</name></member>
      <member refid="class_hdx_render_setup_task_1ab28f961568d5e415f76a926b1966349c" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_PrepareAovBindings</name></member>
      <member refid="class_hdx_render_setup_task_1a7986ee5477d20f21d694c956b5042151" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_renderPassState</name></member>
      <member refid="class_hdx_render_setup_task_1a584afbfae95b2a41bca036c746564ff8" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_SetRenderpassShadersForStorm</name></member>
      <member refid="class_hdx_render_setup_task_1a2e693e8333cc12fdc05c714ca930c8f6" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>_viewport</name></member>
      <member refid="class_hdx_render_setup_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>Execute</name></member>
      <member refid="class_hd_task_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>GetId</name></member>
      <member refid="class_hd_task_1ade051cd8ff53a108b7e6c27be99a5e3a" prot="public" virt="virtual"><scope>HdxRenderSetupTask</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hdx_render_setup_task_1acdd324e954d5aafadc9d0a2b7699369a" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>GetRenderPassState</name></member>
      <member refid="class_hd_task_1a5660db150d0d46d62319100c3f6138fd" prot="public" virt="virtual"><scope>HdxRenderSetupTask</scope><name>GetRenderTags</name></member>
      <member refid="class_hd_task_1a3df864dcce7538c1b130b105af7c2406" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>HdTask</name></member>
      <member refid="class_hdx_render_setup_task_1aa9380975ef9bf9160f8d46c8fbdacdab" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>HdxRenderSetupTask</name></member>
      <member refid="class_hdx_render_setup_task_1afaa9ea4fa990bc05710cc9ba3a7aeacb" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>HdxRenderSetupTask</name></member>
      <member refid="class_hdx_render_setup_task_1a4d430b3bd01614728c87473d9168f623" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>HdxRenderSetupTask</name></member>
      <member refid="class_hdx_render_setup_task_1ac5023193ce32ae2a2184218c09c05ed3" prot="private" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>operator=</name></member>
      <member refid="class_hdx_render_setup_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>Prepare</name></member>
      <member refid="class_hdx_render_setup_task_1a55da1145d265b548f7e5f8aa2c098d21" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>PrepareCamera</name></member>
      <member refid="class_hdx_render_setup_task_1a65601d5e0b6d93e1df6b6618c5c040e0" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>Sync</name></member>
      <member refid="class_hdx_render_setup_task_1a75e1220d46401d36300b897da411f867" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>SyncParams</name></member>
      <member refid="class_hd_task_1a08a2f7cc6d3767c8081f5098bd113d66" prot="public" virt="virtual"><scope>HdxRenderSetupTask</scope><name>~HdTask</name></member>
      <member refid="class_hdx_render_setup_task_1a06342440a8f423a7d0256a15e217f609" prot="public" virt="non-virtual"><scope>HdxRenderSetupTask</scope><name>~HdxRenderSetupTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
