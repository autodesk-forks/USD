<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_px_osd_mesh_topology_validation" kind="class" language="C++" prot="public">
    <compoundname>PxOsdMeshTopologyValidation</compoundname>
    <includes refid="mesh_topology_validation_8h" local="no">meshTopologyValidation.h</includes>
    <innerclass refid="class_px_osd_mesh_topology_validation_1_1___optional_invalidation_vector" prot="private">PxOsdMeshTopologyValidation::_OptionalInvalidationVector</innerclass>
    <innerclass refid="struct_px_osd_mesh_topology_validation_1_1_invalidation" prot="public">PxOsdMeshTopologyValidation::Invalidation</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281d" prot="public" static="no" strong="yes">
        <type></type>
        <name>Code</name>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281daa19e4f5c985e2b3f6a62facf85447276" prot="public">
          <name>InvalidScheme</name>
          <briefdescription>
<para>Encodes invalid scheme token value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da4d6d5814fc83d5d3ebad1de43dd0ae98" prot="public">
          <name>InvalidOrientation</name>
          <briefdescription>
<para>Encodes invalid orientation token value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281dad8ac371b903d7a347f2ace3a0b562865" prot="public">
          <name>InvalidTriangleSubdivision</name>
          <briefdescription>
<para>Encodes invalid triangle subdivision token value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da19cb88abed8f64298a12da79cdc3a362" prot="public">
          <name>InvalidVertexInterpolationRule</name>
          <briefdescription>
<para>Encodes invalid vertex interpolation rule token value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da55875e437552887c1dc4314764b4a621" prot="public">
          <name>InvalidFaceVaryingInterpolationRule</name>
          <briefdescription>
<para>Encodes invalid face varying interpolation rule token value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da750ed1391a866082742608889202102f" prot="public">
          <name>InvalidCreaseMethod</name>
          <briefdescription>
<para>Encodes invalid crease method token value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da4b9bc1db81fcb7f8315108c50acfa7e5" prot="public">
          <name>InvalidCreaseLengthElement</name>
          <briefdescription>
<para>Encodes crease lengths element less than 2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da01fe1931b140c8cbf7a2a7878b63113e" prot="public">
          <name>InvalidCreaseIndicesSize</name>
          <briefdescription>
<para>Encodes crease indices size not matching the sum of the lengths array. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281dab5334bbd27588de87e41deeb3a4e94a5" prot="public">
          <name>InvalidCreaseIndicesElement</name>
          <briefdescription>
<para>Encodes crease indices element is not in the face vertex indices vector. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da0b4eec8defbaef6a28217d66b6d2f8cd" prot="public">
          <name>InvalidCreaseWeightsSize</name>
          <briefdescription>
<para>Encodes if crease weights is the size of the number of creases or the number of crease edges. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da566ac19e83475b5505a81270ec8cc06b" prot="public">
          <name>NegativeCreaseWeights</name>
          <briefdescription>
<para>Encodes if crease weights are negative. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da9efef48a2e38bbd7ea1d0c936f88ee78" prot="public">
          <name>InvalidCornerIndicesElement</name>
          <briefdescription>
<para>Encodes corner indices element is not in the face vertex indices vector. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da9e5dd8b095821e9ba73e378f4cfdc942" prot="public">
          <name>NegativeCornerWeights</name>
          <briefdescription>
<para>Encodes if corner weights are negative. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281dae94033e2d2e12b0d04547447c9345776" prot="public">
          <name>InvalidCornerWeightsSize</name>
          <briefdescription>
<para>Encodes if corner weights is not the size of the number of corner indices. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da2c805b05e74663d877a720d66baa4e3f" prot="public">
          <name>InvalidHoleIndicesElement</name>
          <briefdescription>
<para>Encodes if the hole indices are negative or greater than the maximum face index (face count - 1) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da28c88c55a4e190c768f0d3ad191083e8" prot="public">
          <name>InvalidFaceVertexCountsElement</name>
          <briefdescription>
<para>Encodes if a vertex count is less than 3. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281daa1a6315b2ed9e4883ae77faa4edffbd2" prot="public">
          <name>InvalidFaceVertexIndicesElement</name>
          <briefdescription>
<para>Encodes if the element is negative. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281da3d27c753fd98abe1ee37c9a9944e3b17" prot="public">
          <name>InvalidFaceVertexIndicesSize</name>
          <briefdescription>
<para>Encodes if the indices size does not match the sum of the face vertex counts array. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Codes for various invalid states for <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="65" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="65" bodyend="109"/>
      </memberdef>
      <memberdef kind="typedef" id="class_px_osd_mesh_topology_validation_1aa22e829d89dc2488778bceec259bc7aa" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_px_osd_mesh_topology_validation_1_1_invalidation" kindref="compound">Invalidation</ref> &gt;::const_iterator</type>
        <definition>using iterator =  std::vector&lt;Invalidation&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="182" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_px_osd_mesh_topology_validation_1a96d13b4a7bdc84416c24f8d357c5ffde" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_px_osd_mesh_topology_validation_1_1_invalidation" kindref="compound">Invalidation</ref> &gt;::const_iterator</type>
        <definition>using const_iterator =  std::vector&lt;Invalidation&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="183" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_px_osd_mesh_topology_validation_1a5f749040399f118e69d825429871ff6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class PxOsdMeshTopology</definition>
        <argsstring></argsstring>
        <name>PxOsdMeshTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="63" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_px_osd_mesh_topology_validation_1a4548e95e3400c047c0cd20b076dd4306" prot="private" static="no" mutable="no">
        <type>_OptionalInvalidationVector</type>
        <definition>_OptionalInvalidationVector _invalidations</definition>
        <argsstring></argsstring>
        <name>_invalidations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="153" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1ac336956f1030ee6f492c58f1d8ca69a4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>S</declname>
            <defname>S</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void _ValidateToken</definition>
        <argsstring>(PxOsdMeshTopologyValidation::Code code, const char *name, const TfToken &amp;token, const std::array&lt; TfToken, S &gt; &amp;validTokens)</argsstring>
        <name>_ValidateToken</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281d" kindref="member">PxOsdMeshTopologyValidation::Code</ref></type>
          <declname>code</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>token</declname>
        </param>
        <param>
          <type>const std::array&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, S &gt; &amp;</type>
          <declname>validTokens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1aade9a34abcd13ba85c67e97f939bdc9a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _AppendInvalidation</definition>
        <argsstring>(const Invalidation &amp;invalidation)</argsstring>
        <name>_AppendInvalidation</name>
        <param>
          <type>const <ref refid="struct_px_osd_mesh_topology_validation_1_1_invalidation" kindref="compound">Invalidation</ref> &amp;</type>
          <declname>invalidation</declname>
        </param>
        <briefdescription>
<para>initializes the vector if necessary </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="159" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a8305874f9c8f7739227c11143308f5d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PxOsdMeshTopologyValidation</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>PxOsdMeshTopologyValidation</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1aa11a89cbf27aa629a0791167f2c830d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateScheme</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateScheme</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1ad4a80f63a3c10b594599a919b0345a30" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateOrientation</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateOrientation</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a82c08e7293c065ffbb58c379b7fbf932" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateTriangleSubdivision</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateTriangleSubdivision</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a06ce519c55ad69cbd819900ea5b1c05c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateVertexInterpolation</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateVertexInterpolation</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1ab0a6ce668174ee44b2664d39afe7a76f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateFaceVaryingInterpolation</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateFaceVaryingInterpolation</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a6f92dfa95ce186fae105ca5294052d89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateCreaseMethod</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateCreaseMethod</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1aafe436fb9f92c130ecadcae0f19445a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateCreasesAndCorners</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateCreasesAndCorners</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a7142b095cb9a8944c37dcd3e93c719b5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateHoles</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateHoles</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a21ee6849d6037927c6ee4b6e759a0c81" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateFaceVertexCounts</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateFaceVertexCounts</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1aa33c1489b26d9754400ec582eaa14160" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ValidateFaceVertexIndices</definition>
        <argsstring>(PxOsdMeshTopology const &amp;)</argsstring>
        <name>_ValidateFaceVertexIndices</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="220" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1abecb49efa932487ec1012d1fba2c151b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PxOsdMeshTopologyValidation</definition>
        <argsstring>()=default</argsstring>
        <name>PxOsdMeshTopologyValidation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1aa23b50cbfa487fc076e61797afddfea4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PxOsdMeshTopologyValidation</definition>
        <argsstring>(PxOsdMeshTopologyValidation &amp;&amp;)=default</argsstring>
        <name>PxOsdMeshTopologyValidation</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a7089d67f14d33eb5cda5682fe7ddd8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref> &amp;</type>
        <definition>PxOsdMeshTopologyValidation&amp; operator=</definition>
        <argsstring>(PxOsdMeshTopologyValidation &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a6ea89ab55442746ebd0f76ebdfe606b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PxOsdMeshTopologyValidation</definition>
        <argsstring>(PxOsdMeshTopologyValidation const &amp;other)=default</argsstring>
        <name>PxOsdMeshTopologyValidation</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a54757af904c73e013182b14a728e2350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref> &amp;</type>
        <definition>PxOsdMeshTopologyValidation&amp; operator=</definition>
        <argsstring>(PxOsdMeshTopologyValidation const &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_px_osd_mesh_topology_validation" kindref="compound">PxOsdMeshTopologyValidation</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Return true if the topology is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="178" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a29305669b60ca1680752e2fc3592ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator for the beginning of the invalidation vector if it has been initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise, returns an empty iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="187" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator for the end of the invalidation vector if it has been initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise, returns an empty iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="193" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a39112ae08f6ffc7ee58c6aa79772e094" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
<para>Returns an iterator for the beginning of the invalidation vector if it has been initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise, returns an empty iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="200" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_px_osd_mesh_topology_validation_1a93791e61ab486b4022c389d634b4facc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
<para>Returns an iterator for the end of the invalidation vector if it has been initialized. </para>
        </briefdescription>
        <detaileddescription>
<para>Otherwise, returns an empty iterator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="206" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="206" bodyend="209"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility to help validate an OpenSubdiv Mesh topology. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is created by <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref>&apos;s Validate method.</para>
<para>Internally, this will avoid dynamic allocations as long as the topology is valid (currently using std::unique_ptr but targeting std::optional for C++17).</para>
<para>This class does a set of basic validation tests on the topology of a mesh. This set of tests isn&apos;t necessarily complete. There are other cases like invalid primvar size that this will not check for.</para>
<para>Topology is considered valid if it passes a series of checks enumerated by the Code class enum.</para>
<para>\warn This doesn&apos;t currently validate that the topology of crease indices match valid edges.</para>
<para><simplesect kind="note"><para>This class is convertable to bool and converts to true if the the topology is valid and false if any invalidations were found. That is to say, a conversion to true implies an empty invalidation vector and false implies a non-empty invalidation vector. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="pxr/imaging/pxOsd/meshTopologyValidation.h" line="61" column="1" bodyfile="pxr/imaging/pxOsd/meshTopologyValidation.h" bodystart="61" bodyend="221"/>
    <listofallmembers>
      <member refid="class_px_osd_mesh_topology_validation_1aade9a34abcd13ba85c67e97f939bdc9a" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_AppendInvalidation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a4548e95e3400c047c0cd20b076dd4306" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_invalidations</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a6f92dfa95ce186fae105ca5294052d89" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateCreaseMethod</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1aafe436fb9f92c130ecadcae0f19445a2" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateCreasesAndCorners</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1ab0a6ce668174ee44b2664d39afe7a76f" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateFaceVaryingInterpolation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a21ee6849d6037927c6ee4b6e759a0c81" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateFaceVertexCounts</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1aa33c1489b26d9754400ec582eaa14160" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateFaceVertexIndices</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a7142b095cb9a8944c37dcd3e93c719b5" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateHoles</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1ad4a80f63a3c10b594599a919b0345a30" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateOrientation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1aa11a89cbf27aa629a0791167f2c830d2" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateScheme</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1ac336956f1030ee6f492c58f1d8ca69a4" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateToken</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a82c08e7293c065ffbb58c379b7fbf932" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateTriangleSubdivision</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a06ce519c55ad69cbd819900ea5b1c05c" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>_ValidateVertexInterpolation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a29305669b60ca1680752e2fc3592ba99" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>begin</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a39112ae08f6ffc7ee58c6aa79772e094" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>cbegin</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a93791e61ab486b4022c389d634b4facc" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>cend</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1af31477bc48f67856bedb0fa8e5b5281d" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>Code</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a96d13b4a7bdc84416c24f8d357c5ffde" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>const_iterator</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>end</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1aa22e829d89dc2488778bceec259bc7aa" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>iterator</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>operator bool</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a7089d67f14d33eb5cda5682fe7ddd8ce" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>operator=</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a54757af904c73e013182b14a728e2350" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>operator=</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a5f749040399f118e69d825429871ff6c" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>PxOsdMeshTopology</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a8305874f9c8f7739227c11143308f5d5" prot="private" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>PxOsdMeshTopologyValidation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1abecb49efa932487ec1012d1fba2c151b" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>PxOsdMeshTopologyValidation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1aa23b50cbfa487fc076e61797afddfea4" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>PxOsdMeshTopologyValidation</name></member>
      <member refid="class_px_osd_mesh_topology_validation_1a6ea89ab55442746ebd0f76ebdfe606b5" prot="public" virt="non-virtual"><scope>PxOsdMeshTopologyValidation</scope><name>PxOsdMeshTopologyValidation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
