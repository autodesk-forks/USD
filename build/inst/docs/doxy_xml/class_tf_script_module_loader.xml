<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_script_module_loader" kind="class" language="C++" prot="public">
    <compoundname>TfScriptModuleLoader</compoundname>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <includes refid="script_module_loader_8h" local="no">scriptModuleLoader.h</includes>
    <innerclass refid="struct_tf_script_module_loader_1_1___lib_info" prot="private">TfScriptModuleLoader::_LibInfo</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_script_module_loader_1abc6c3101977483f95c57677d3c036603" prot="public" static="no">
        <type><ref refid="class_tf_script_module_loader" kindref="compound">TfScriptModuleLoader</ref></type>
        <definition>typedef TfScriptModuleLoader This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="62" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_tf_script_module_loader_1a68b707cb5cb8a04400a49174e4fe6f06" prot="private" static="no">
        <type>TfHashMap&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, _LibInfo, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>typedef TfHashMap&lt;TfToken, _LibInfo, TfToken::HashFunctor&gt; _TokenToInfoMap</definition>
        <argsstring></argsstring>
        <name>_TokenToInfoMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="111" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_script_module_loader_1a6bd5da11b2292a89a5bbd7ead8e9a429" prot="private" static="no">
        <type>TfHashMap&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>typedef TfHashMap&lt;TfToken, TfToken, TfToken::HashFunctor&gt; _TokenToTokenMap</definition>
        <argsstring></argsstring>
        <name>_TokenToTokenMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="114" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_script_module_loader_1aa99dd89307015e1ef3b87a8fc77624f5" prot="private" static="no">
        <type>TfHashSet&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>typedef TfHashSet&lt;TfToken, TfToken::HashFunctor&gt; _TokenSet</definition>
        <argsstring></argsstring>
        <name>_TokenSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="117" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_script_module_loader_1ac443fd49c9ab99cbc65050761db08863" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TfSingleton&lt; This &gt;</definition>
        <argsstring></argsstring>
        <name>TfSingleton&lt; This &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="120" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_script_module_loader_1a05fdd2d310afdb3ee3e4673ca4c70ac8" prot="private" static="no" mutable="no">
        <type>_TokenToInfoMap</type>
        <definition>_TokenToInfoMap _libInfo</definition>
        <argsstring></argsstring>
        <name>_libInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="136" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_script_module_loader_1a49d6aaa32b7c101eda749b4514e49e06" prot="private" static="no" mutable="no">
        <type>_TokenToTokenMap</type>
        <definition>_TokenToTokenMap _libsToModules</definition>
        <argsstring></argsstring>
        <name>_libsToModules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="137" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_script_module_loader_1ada0a7e55f311195ac9e7ff37de3c5199" prot="private" static="no" mutable="no">
        <type>_TokenSet</type>
        <definition>_TokenSet _loadedSet</definition>
        <argsstring></argsstring>
        <name>_loadedSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="138" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_script_module_loader_1a32c7d3bd3abd6debd9995feb88a0db28" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;</type>
        <definition>std::deque&lt;TfToken&gt; _remainingLoadWork</definition>
        <argsstring></argsstring>
        <name>_remainingLoadWork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="141" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_tf_script_module_loader_1ae18594af10c21320658ea776d62e7a03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TF_API <ref refid="class_tf_script_module_loader" kindref="compound">This</ref> &amp;</type>
        <definition>static TF_API This&amp; GetInstance</definition>
        <argsstring>()</argsstring>
        <name>GetInstance</name>
        <briefdescription>
<para>Return the singleton instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="65" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="65" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_script_module_loader_1a83c18c359bea53a887749c3753ad304c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void RegisterLibrary</definition>
        <argsstring>(TfToken const &amp;name, TfToken const &amp;moduleName, std::vector&lt; TfToken &gt; const &amp;predecessors)</argsstring>
        <name>RegisterLibrary</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>moduleName</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; const &amp;</type>
          <declname>predecessors</declname>
        </param>
        <briefdescription>
<para>Register a library named <emphasis>name</emphasis> and with script module <emphasis>moduleName</emphasis> and libraries which must be loaded first <emphasis>predecessors</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>The script module will be loaded when necessary. This should generally not be called by user code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a4dbed2faabc3e129b1d66c4c07c7cb21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void LoadModules</definition>
        <argsstring>()</argsstring>
        <name>LoadModules</name>
        <briefdescription>
<para>Load all the script modules for any libraries registered using <emphasis>RegisterLibrary</emphasis> if necessary. </para>
        </briefdescription>
        <detaileddescription>
<para>Loads the modules in dependency order as defined in <emphasis>RegisterLibrary</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a52fbb29210398a4cbb5079c89259737f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void LoadModulesForLibrary</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>LoadModulesForLibrary</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Load all the script modules for any libraries registered using <emphasis>RegisterLibrary</emphasis> that depend on library <emphasis>name</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a8d4fff3d47c01f8b902fd99da6eb6575" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::vector&lt; std::string &gt;</type>
        <definition>TF_API std::vector&lt;std::string&gt; GetModuleNames</definition>
        <argsstring>() const</argsstring>
        <name>GetModuleNames</name>
        <briefdescription>
<para>Return a list of all currently known modules in a valid dependency order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a0b9b347e9b42e67840fd632ab0f8a1b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API boost::python::dict</type>
        <definition>TF_API boost::python::dict GetModulesDict</definition>
        <argsstring>() const</argsstring>
        <name>GetModulesDict</name>
        <briefdescription>
<para>Return a python dict containing all currently known modules under their canonical names. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1ada47f6933344ed4f29b87f1940ab7cda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void WriteDotFile</definition>
        <argsstring>(std::string const &amp;file) const</argsstring>
        <name>WriteDotFile</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Write a graphviz dot-file for the dependency graph of all. </para>
        </briefdescription>
        <detaileddescription>
<para>currently known libraries/modules to <emphasis>file</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="101" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_script_module_loader_1a88e7907c6c11a8f17ac4ef53ba3db80a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TfScriptModuleLoader</definition>
        <argsstring>()</argsstring>
        <name>TfScriptModuleLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1aa4ad66ddb0fb5250b8e93f91dc307dda" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~TfScriptModuleLoader</definition>
        <argsstring>()</argsstring>
        <name>~TfScriptModuleLoader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a08dd42c9a68654bfa01e4d35666d32dd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _AddSuccessor</definition>
        <argsstring>(TfToken const &amp;lib, TfToken const &amp;successor)</argsstring>
        <name>_AddSuccessor</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>lib</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>successor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a949461f702fb5c9c1b67cb6f76bed1a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _LoadModulesFor</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>_LoadModulesFor</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1ab23c6ce583d9319ed67ba5769368cb5c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _LoadUpTo</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>_LoadUpTo</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a3aecfd62947fe075eaf2df4d02e5358a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GetOrderedDependenciesRecursive</definition>
        <argsstring>(TfToken const &amp;lib, TfToken::HashSet *seenLibs, std::vector&lt; TfToken &gt; *result) const</argsstring>
        <name>_GetOrderedDependenciesRecursive</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>lib</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token_1a47a247622efbb7fcbd329894e5144ffd" kindref="member">TfToken::HashSet</ref> *</type>
          <declname>seenLibs</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1ae1cb1131c7ef5f2f3039cdae6050d9bf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GetOrderedDependencies</definition>
        <argsstring>(std::vector&lt; TfToken &gt; const &amp;input, std::vector&lt; TfToken &gt; *result) const</argsstring>
        <name>_GetOrderedDependencies</name>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; const &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a53a14e016862cdb66345dc041685d337" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _TopologicalSort</definition>
        <argsstring>(std::vector&lt; TfToken &gt; *result) const</argsstring>
        <name>_TopologicalSort</name>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_script_module_loader_1a6fecc69f591d54077aef391e2621b95e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _HasTransitiveSuccessor</definition>
        <argsstring>(TfToken const &amp;predecessor, TfToken const &amp;successor) const</argsstring>
        <name>_HasTransitiveSuccessor</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>predecessor</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>successor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scriptModuleLoader.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides low-level facilities for shared libraries with script bindings to register themselves with their dependences, and provides a mechanism whereby those script modules will be loaded when necessary. </para>
    </briefdescription>
    <detaileddescription>
<para>Currently, this is when one of our script modules is loaded, when TfPyInitialize is called, and when Plug opens shared libraries.</para>
<para>Generally, user code will not make use of this. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5622">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5621">
        <label>TfScriptModuleLoader</label>
        <link refid="class_tf_script_module_loader"/>
        <childnode refid="5622" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5624">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5623">
        <label>TfScriptModuleLoader</label>
        <link refid="class_tf_script_module_loader"/>
        <childnode refid="5624" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/scriptModuleLoader.h" line="58" column="1" bodyfile="pxr/base/tf/scriptModuleLoader.h" bodystart="58" bodyend="142"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_tf_script_module_loader_1a08dd42c9a68654bfa01e4d35666d32dd" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_AddSuccessor</name></member>
      <member refid="class_tf_script_module_loader_1ae1cb1131c7ef5f2f3039cdae6050d9bf" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_GetOrderedDependencies</name></member>
      <member refid="class_tf_script_module_loader_1a3aecfd62947fe075eaf2df4d02e5358a" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_GetOrderedDependenciesRecursive</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_HasRemnant</name></member>
      <member refid="class_tf_script_module_loader_1a6fecc69f591d54077aef391e2621b95e" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_HasTransitiveSuccessor</name></member>
      <member refid="class_tf_script_module_loader_1a05fdd2d310afdb3ee3e4673ca4c70ac8" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_libInfo</name></member>
      <member refid="class_tf_script_module_loader_1a49d6aaa32b7c101eda749b4514e49e06" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_libsToModules</name></member>
      <member refid="class_tf_script_module_loader_1ada0a7e55f311195ac9e7ff37de3c5199" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_loadedSet</name></member>
      <member refid="class_tf_script_module_loader_1a949461f702fb5c9c1b67cb6f76bed1a2" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_LoadModulesFor</name></member>
      <member refid="class_tf_script_module_loader_1ab23c6ce583d9319ed67ba5769368cb5c" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_LoadUpTo</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_Register</name></member>
      <member refid="class_tf_script_module_loader_1a32c7d3bd3abd6debd9995feb88a0db28" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_remainingLoadWork</name></member>
      <member refid="class_tf_script_module_loader_1aa99dd89307015e1ef3b87a8fc77624f5" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_TokenSet</name></member>
      <member refid="class_tf_script_module_loader_1a68b707cb5cb8a04400a49174e4fe6f06" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_TokenToInfoMap</name></member>
      <member refid="class_tf_script_module_loader_1a6bd5da11b2292a89a5bbd7ead8e9a429" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_TokenToTokenMap</name></member>
      <member refid="class_tf_script_module_loader_1a53a14e016862cdb66345dc041685d337" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>_TopologicalSort</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>EnableNotification2</name></member>
      <member refid="class_tf_script_module_loader_1ae18594af10c21320658ea776d62e7a03" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>GetInstance</name></member>
      <member refid="class_tf_script_module_loader_1a8d4fff3d47c01f8b902fd99da6eb6575" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>GetModuleNames</name></member>
      <member refid="class_tf_script_module_loader_1a0b9b347e9b42e67840fd632ab0f8a1b3" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>GetModulesDict</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_script_module_loader_1a4dbed2faabc3e129b1d66c4c07c7cb21" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>LoadModules</name></member>
      <member refid="class_tf_script_module_loader_1a52fbb29210398a4cbb5079c89259737f" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>LoadModulesForLibrary</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>operator=</name></member>
      <member refid="class_tf_script_module_loader_1a83c18c359bea53a887749c3753ad304c" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>RegisterLibrary</name></member>
      <member refid="class_tf_script_module_loader_1a88e7907c6c11a8f17ac4ef53ba3db80a" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>TfScriptModuleLoader</name></member>
      <member refid="class_tf_script_module_loader_1ac443fd49c9ab99cbc65050761db08863" prot="private" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>TfSingleton&lt; This &gt;</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_script_module_loader_1abc6c3101977483f95c57677d3c036603" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>This</name></member>
      <member refid="class_tf_script_module_loader_1ada47f6933344ed4f29b87f1940ab7cda" prot="public" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>WriteDotFile</name></member>
      <member refid="class_tf_script_module_loader_1aa4ad66ddb0fb5250b8e93f91dc307dda" prot="private" virt="virtual"><scope>TfScriptModuleLoader</scope><name>~TfScriptModuleLoader</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>TfScriptModuleLoader</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
