<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_selection_scene_index_observer" kind="class" language="C++" prot="public">
    <compoundname>HdxSelectionSceneIndexObserver</compoundname>
    <basecompoundref refid="class_hd_scene_index_observer" prot="public" virt="non-virtual">HdSceneIndexObserver</basecompoundref>
    <includes refid="selection_scene_index_observer_8h" local="no">selectionSceneIndexObserver.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_selection_scene_index_observer_1a1866e67bd80277bb69e46b153cfe9a96" prot="private" static="no" mutable="no">
        <type>HdSceneIndexBaseRefPtr</type>
        <definition>HdSceneIndexBaseRefPtr _sceneIndex</definition>
        <argsstring></argsstring>
        <name>_sceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="80" column="1" bodyfile="pxr/imaging/hdx/selectionSceneIndexObserver.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_selection_scene_index_observer_1a5d970fae54e7cfeb30029c66caf3a351" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _version</definition>
        <argsstring></argsstring>
        <name>_version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="82" column="1" bodyfile="pxr/imaging/hdx/selectionSceneIndexObserver.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_selection_scene_index_observer_1a9a3ab8509a3ec3dd91684e9e4a6f2db5" prot="private" static="no" mutable="no">
        <type>HdSelectionSharedPtr</type>
        <definition>HdSelectionSharedPtr _selection</definition>
        <argsstring></argsstring>
        <name>_selection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="83" column="1" bodyfile="pxr/imaging/hdx/selectionSceneIndexObserver.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_selection_scene_index_observer_1ab0a009269cf593ccbdea65cb7768f0b7" prot="private" static="no" mutable="no">
        <type>SdfPathSet</type>
        <definition>SdfPathSet _dirtiedPrims</definition>
        <argsstring></argsstring>
        <name>_dirtiedPrims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="84" column="1" bodyfile="pxr/imaging/hdx/selectionSceneIndexObserver.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1af04b561db948772822093b130e4926c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxSelectionSceneIndexObserver</definition>
        <argsstring>()</argsstring>
        <name>HdxSelectionSceneIndexObserver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1a6212680d83c8d774fdeee704556fef80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void SetSceneIndex</definition>
        <argsstring>(HdSceneIndexBaseRefPtr const &amp;sceneIndex)</argsstring>
        <name>SetSceneIndex</name>
        <param>
          <type>HdSceneIndexBaseRefPtr const &amp;</type>
          <declname>sceneIndex</declname>
        </param>
        <briefdescription>
<para>Set which scene index to query for selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1a59e15a60697e2ff0f5a6edc7319c9b06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API int</type>
        <definition>HDX_API int GetVersion</definition>
        <argsstring>() const</argsstring>
        <name>GetVersion</name>
        <briefdescription>
<para>Increased every time the selection in the scene index gets dirtied (or a difference scene index is set). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1ac089427bda5083fdb924f5db37b606c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API HdSelectionSharedPtr</type>
        <definition>HDX_API HdSelectionSharedPtr GetSelection</definition>
        <argsstring>()</argsstring>
        <name>GetSelection</name>
        <briefdescription>
<para>Get the result of querying the scene index for the selection as <ref refid="class_hd_selection" kindref="compound">HdSelection</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1a4d0596a9ebc953ef59ca4e4fb6c50279" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void PrimsAdded</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const AddedPrimEntries &amp;entries) override</argsstring>
        <name>PrimsAdded</name>
        <reimplements refid="class_hd_scene_index_observer_1a486c4ae832a8d67b4a2704286baa7cbd">PrimsAdded</reimplements>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">AddedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prims have been added to the scene. </para>
        </briefdescription>
        <detaileddescription>
<para>The set of scene prims compiled from added/removed notices should match the set from a traversal based on <computeroutput>sender.GetChildPrimNames</computeroutput>. Each prim has a path and type. It&apos;s possible for <computeroutput>PrimsAdded</computeroutput> to be called for prims that already exist; in that case, observers should be sure to update the prim type, in case it changed, and resync the prim. This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1a78b5da16d7e0178398866a04747f777c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void PrimsDirtied</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const DirtiedPrimEntries &amp;entries) override</argsstring>
        <name>PrimsDirtied</name>
        <reimplements refid="class_hd_scene_index_observer_1a087e1d62f6ec2f2041bc78e31d712560">PrimsDirtied</reimplements>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">DirtiedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prim datasources have been invalidated. </para>
        </briefdescription>
        <detaileddescription>
<para>This message is not considered hierarchical on <computeroutput>primPath</computeroutput>; if <computeroutput>/Path</computeroutput> is dirtied, <computeroutput>/Path/child</computeroutput> is not necessarily dirtied. However datasource locators are considered hierarchical: if <computeroutput>primvars</computeroutput> is dirtied on a prim, <computeroutput>primvars/color</computeroutput> is considered dirtied as well. This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1aca4185e188f4bd0c94ab1dbd2afdc996" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void PrimsRemoved</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const RemovedPrimEntries &amp;entries) override</argsstring>
        <name>PrimsRemoved</name>
        <reimplements refid="class_hd_scene_index_observer_1aec4924464d54d6e70002fddf8408d31f">PrimsRemoved</reimplements>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">RemovedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prims have been removed from the scene. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this message is considered hierarchical; if <computeroutput>/Path</computeroutput> is removed, <computeroutput>/Path/child</computeroutput> is considered removed as well. This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1af46d6a01ef6365d16704552459ba7d53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void PrimsRenamed</definition>
        <argsstring>(const HdSceneIndexBase &amp;sender, const RenamedPrimEntries &amp;entries) override</argsstring>
        <name>PrimsRenamed</name>
        <reimplements refid="class_hd_scene_index_observer_1a5cbc2ff942711627842ddf0f1781a60f">PrimsRenamed</reimplements>
        <param>
          <type>const <ref refid="class_hd_scene_index_base" kindref="compound">HdSceneIndexBase</ref> &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">RenamedPrimEntries</ref> &amp;</type>
          <declname>entries</declname>
        </param>
        <briefdescription>
<para>A notification indicating prims (and their descendants) have been renamed or reparented. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is not expected to be threadsafe. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_selection_scene_index_observer_1a9d979988ac1addd5c52b9957a24cce51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdSelectionSharedPtr</type>
        <definition>HdSelectionSharedPtr _ComputeSelection</definition>
        <argsstring>()</argsstring>
        <name>_ComputeSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="78" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Queries each prim of the given scene index for the HdSelectionsSchema to compute a <ref refid="class_hd_selection" kindref="compound">HdSelection</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3634">
        <label>HdSceneIndexObserver</label>
        <link refid="class_hd_scene_index_observer"/>
        <childnode refid="3635" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3635">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="3633">
        <label>HdxSelectionSceneIndexObserver</label>
        <link refid="class_hdx_selection_scene_index_observer"/>
        <childnode refid="3634" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3637">
        <label>HdSceneIndexObserver</label>
        <link refid="class_hd_scene_index_observer"/>
        <childnode refid="3638" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3638">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="3636">
        <label>HdxSelectionSceneIndexObserver</label>
        <link refid="class_hdx_selection_scene_index_observer"/>
        <childnode refid="3637" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdx/selectionSceneIndexObserver.h" line="40" column="1" bodyfile="pxr/imaging/hdx/selectionSceneIndexObserver.h" bodystart="39" bodyend="85"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a9d979988ac1addd5c52b9957a24cce51" prot="private" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_ComputeSelection</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1ab0a009269cf593ccbdea65cb7768f0b7" prot="private" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_dirtiedPrims</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_HasRemnant</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_Register</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a1866e67bd80277bb69e46b153cfe9a96" prot="private" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_sceneIndex</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a9a3ab8509a3ec3dd91684e9e4a6f2db5" prot="private" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_selection</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a5d970fae54e7cfeb30029c66caf3a351" prot="private" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>_version</name></member>
      <member refid="class_hd_scene_index_observer_1a3dad19a020c6daee833f270521b3b109" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>AddedPrimEntries</name></member>
      <member refid="class_hd_scene_index_observer_1a1b45298b84622e88b6c0e85ca1baeb57" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>ConvertPrimsRenamedToRemovedAndAdded</name></member>
      <member refid="class_hd_scene_index_observer_1a529aa2e0d528281da47353b55efd2475" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>ConvertPrimsRenamedToRemovedAndAdded</name></member>
      <member refid="class_hd_scene_index_observer_1accb5ec6e29149f518fdb9837443ecdd0" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>DirtiedPrimEntries</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>EnableNotification2</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1ac089427bda5083fdb924f5db37b606c1" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>GetSelection</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a59e15a60697e2ff0f5a6edc7319c9b06" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>GetVersion</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1af04b561db948772822093b130e4926c2" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>HdxSelectionSceneIndexObserver</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>operator=</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a4d0596a9ebc953ef59ca4e4fb6c50279" prot="public" virt="virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>PrimsAdded</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a78b5da16d7e0178398866a04747f777c" prot="public" virt="virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>PrimsDirtied</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1aca4185e188f4bd0c94ab1dbd2afdc996" prot="public" virt="virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>PrimsRemoved</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1af46d6a01ef6365d16704552459ba7d53" prot="public" virt="virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>PrimsRenamed</name></member>
      <member refid="class_hd_scene_index_observer_1a8c6404855649c2366af2490dc53b08d3" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>RemovedPrimEntries</name></member>
      <member refid="class_hd_scene_index_observer_1a97100b5c8230a90a37e524c23970da8d" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>RenamedPrimEntries</name></member>
      <member refid="class_hdx_selection_scene_index_observer_1a6212680d83c8d774fdeee704556fef80" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>SetSceneIndex</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>TfWeakBase</name></member>
      <member refid="class_hd_scene_index_observer_1a4b755f82fc47b55d3dfcf0d906710758" prot="public" virt="virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>~HdSceneIndexObserver</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>HdxSelectionSceneIndexObserver</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
