<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_path_key_policy" kind="class" language="C++" prot="public">
    <compoundname>SdfPathKeyPolicy</compoundname>
    <includes refid="proxy_policies_8h" local="no">proxyPolicies.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_path_key_policy_1a79660a1a934f2e17f1b30e0bd103873b" prot="public" static="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>typedef SdfPath value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="85" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sdf_path_key_policy_1a2b4d7c8ceb4d220c646d9357eb72dd6b" prot="private" static="no" mutable="no">
        <type>SdfSpecHandle</type>
        <definition>SdfSpecHandle _owner</definition>
        <argsstring></argsstring>
        <name>_owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="126" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_path_key_policy_1aec83daa6c366c56a632f6149891289f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfPathKeyPolicy</definition>
        <argsstring>()</argsstring>
        <name>SdfPathKeyPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="87" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_key_policy_1a64269e0ed89500a02f53d7ac2c9d1670" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfPathKeyPolicy</definition>
        <argsstring>(const SdfSpecHandle &amp;owner)</argsstring>
        <name>SdfPathKeyPolicy</name>
        <param>
          <type>const SdfSpecHandle &amp;</type>
          <declname>owner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="88" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_key_policy_1a0b3431037ebf72615a8f998939af1439" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">value_type</ref></type>
        <definition>value_type Canonicalize</definition>
        <argsstring>(const value_type &amp;x) const</argsstring>
        <name>Canonicalize</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">value_type</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="91" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_key_policy_1a855f639394ab2ae851fd123e248789dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_sdf_path" kindref="compound">value_type</ref> &gt;</type>
        <definition>std::vector&lt;value_type&gt; Canonicalize</definition>
        <argsstring>(const std::vector&lt; value_type &gt; &amp;x) const</argsstring>
        <name>Canonicalize</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_sdf_path" kindref="compound">value_type</ref> &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="96" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="96" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdf_path_key_policy_1a873cce772cd6c07b2a2eb332b0f36688" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _GetAnchor</definition>
        <argsstring>() const</argsstring>
        <name>_GetAnchor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="114" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_path_key_policy_1a70358c7c55562a1019f029ff90d14e3a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">value_type</ref></type>
        <definition>value_type _Canonicalize</definition>
        <argsstring>(const value_type &amp;x, const SdfPath &amp;primPath) const</argsstring>
        <name>_Canonicalize</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">value_type</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/proxyPolicies.h" line="120" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="120" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Key policy for <computeroutput><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></computeroutput>; converts all SdfPaths to absolute. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/sdf/proxyPolicies.h" line="83" column="1" bodyfile="pxr/usd/sdf/proxyPolicies.h" bodystart="83" bodyend="127"/>
    <listofallmembers>
      <member refid="class_sdf_path_key_policy_1a70358c7c55562a1019f029ff90d14e3a" prot="private" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>_Canonicalize</name></member>
      <member refid="class_sdf_path_key_policy_1a873cce772cd6c07b2a2eb332b0f36688" prot="private" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>_GetAnchor</name></member>
      <member refid="class_sdf_path_key_policy_1a2b4d7c8ceb4d220c646d9357eb72dd6b" prot="private" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>_owner</name></member>
      <member refid="class_sdf_path_key_policy_1a0b3431037ebf72615a8f998939af1439" prot="public" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>Canonicalize</name></member>
      <member refid="class_sdf_path_key_policy_1a855f639394ab2ae851fd123e248789dd" prot="public" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>Canonicalize</name></member>
      <member refid="class_sdf_path_key_policy_1aec83daa6c366c56a632f6149891289f3" prot="public" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>SdfPathKeyPolicy</name></member>
      <member refid="class_sdf_path_key_policy_1a64269e0ed89500a02f53d7ac2c9d1670" prot="public" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>SdfPathKeyPolicy</name></member>
      <member refid="class_sdf_path_key_policy_1a79660a1a934f2e17f1b30e0bd103873b" prot="public" virt="non-virtual"><scope>SdfPathKeyPolicy</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
