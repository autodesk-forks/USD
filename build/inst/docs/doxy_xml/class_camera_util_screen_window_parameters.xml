<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_camera_util_screen_window_parameters" kind="class" language="C++" prot="public">
    <compoundname>CameraUtilScreenWindowParameters</compoundname>
    <includes refid="screen_window_parameters_8h" local="no">screenWindowParameters.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_camera_util_screen_window_parameters_1a27708a3ec73def5bc7fb6c94a6c7f568" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GfVec4d _screenWindow</definition>
        <argsstring></argsstring>
        <name>_screenWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="70" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_camera_util_screen_window_parameters_1ac6c2bcbc0f03a29a486ec6068ad5a595" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double _fieldOfView</definition>
        <argsstring></argsstring>
        <name>_fieldOfView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="71" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_camera_util_screen_window_parameters_1a49d2c683902c91de96419115998b64b5" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _zFacingViewMatrix</definition>
        <argsstring></argsstring>
        <name>_zFacingViewMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="72" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_camera_util_screen_window_parameters_1a79b3620080608e5f337d84485ab7d126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API</type>
        <definition>CAMERAUTIL_API CameraUtilScreenWindowParameters</definition>
        <argsstring>(const GfCamera &amp;camera, GfCamera::FOVDirection fitDirection=GfCamera::FOVHorizontal)</argsstring>
        <name>CameraUtilScreenWindowParameters</name>
        <param>
          <type>const <ref refid="class_gf_camera" kindref="compound">GfCamera</ref> &amp;</type>
          <declname>camera</declname>
        </param>
        <param>
          <type><ref refid="class_gf_camera_1ada1d1d603d386218c1a2f37b9cbdf7da" kindref="member">GfCamera::FOVDirection</ref></type>
          <declname>fitDirection</declname>
          <defval>GfCamera::FOVHorizontal</defval>
        </param>
        <briefdescription>
<para>Constructs screenwindow parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>The optional <computeroutput>fitDirection</computeroutput> indicates in which direction the screenwindow will have length 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_util_screen_window_parameters_1aadad39bc123f291cfd15022e80d4a4f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
        <definition>const GfVec4d&amp; GetScreenWindow</definition>
        <argsstring>() const</argsstring>
        <name>GetScreenWindow</name>
        <briefdescription>
<para>The vector (left, right, bottom, top) defining the rectangle in the image plane. </para>
        </briefdescription>
        <detaileddescription>
<para>Give these parameters to RiScreenWindow. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="52" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_util_screen_window_parameters_1a0ca61e9fb990d345d5f3616d2e19b690" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetFieldOfView</definition>
        <argsstring>() const</argsstring>
        <name>GetFieldOfView</name>
        <briefdescription>
<para>The field of view. </para>
        </briefdescription>
        <detaileddescription>
<para>More precisely, the full angle perspective field of view (in degrees) between screen space coordinates (-1,0) and (1,0). Give these parameters to RiProjection as parameter after &quot;perspective&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="59" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_camera_util_screen_window_parameters_1ace9d931b46f4136d38dc90cef2fddf2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
        <definition>const GfMatrix4d&amp; GetZFacingViewMatrix</definition>
        <argsstring>() const</argsstring>
        <name>GetZFacingViewMatrix</name>
        <briefdescription>
<para>Returns the inverse of the transform for a camera that is y-Up and z-facing (vs the OpenGL camera that is (-z)-facing). </para>
        </briefdescription>
        <detaileddescription>
<para>Write this transform with RiConcatTransform before RiWorldBegin. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="65" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="65" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Given a camera object, compute parameters suitable for setting up RenderMan. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/cameraUtil/screenWindowParameters.h" line="40" column="1" bodyfile="pxr/imaging/cameraUtil/screenWindowParameters.h" bodystart="39" bodyend="73"/>
    <listofallmembers>
      <member refid="class_camera_util_screen_window_parameters_1ac6c2bcbc0f03a29a486ec6068ad5a595" prot="private" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>_fieldOfView</name></member>
      <member refid="class_camera_util_screen_window_parameters_1a27708a3ec73def5bc7fb6c94a6c7f568" prot="private" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>_screenWindow</name></member>
      <member refid="class_camera_util_screen_window_parameters_1a49d2c683902c91de96419115998b64b5" prot="private" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>_zFacingViewMatrix</name></member>
      <member refid="class_camera_util_screen_window_parameters_1a79b3620080608e5f337d84485ab7d126" prot="public" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>CameraUtilScreenWindowParameters</name></member>
      <member refid="class_camera_util_screen_window_parameters_1a0ca61e9fb990d345d5f3616d2e19b690" prot="public" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>GetFieldOfView</name></member>
      <member refid="class_camera_util_screen_window_parameters_1aadad39bc123f291cfd15022e80d4a4f2" prot="public" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>GetScreenWindow</name></member>
      <member refid="class_camera_util_screen_window_parameters_1ace9d931b46f4136d38dc90cef2fddf2d" prot="public" virt="non-virtual"><scope>CameraUtilScreenWindowParameters</scope><name>GetZFacingViewMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
