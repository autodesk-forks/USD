<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_zip_file_writer" kind="class" language="C++" prot="public">
    <compoundname>UsdZipFileWriter</compoundname>
    <includes refid="zip_file_8h" local="no">zipFile.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_zip_file_writer_1a1330d959056750a36c212e3b71c22d97" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; _Impl &gt;</type>
        <definition>std::unique_ptr&lt;_Impl&gt; _impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="291" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_zip_file_writer_1af2391e89f8ca526248851cd90831164a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref></type>
        <definition>static USD_API UsdZipFileWriter CreateNew</definition>
        <argsstring>(const std::string &amp;filePath)</argsstring>
        <name>CreateNew</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
<para>Create a new file writer with <computeroutput>filePath</computeroutput> as the destination file path where the zip archive will be written. </para>
        </briefdescription>
        <detaileddescription>
<para>The zip file will not be written to <computeroutput>filePath</computeroutput> until the writer is destroyed or <ref refid="class_usd_zip_file_writer_1a6673daf67c3af34a3ca699e1c195f8d2" kindref="member">Save()</ref> is called.</para>
<para>Returns an invalid object on error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="240" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_zip_file_writer_1a446a2161c75a923f09b0b23477c111c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API UsdZipFileWriter</definition>
        <argsstring>()</argsstring>
        <name>UsdZipFileWriter</name>
        <briefdescription>
<para>Create an invalid <ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a1f8c10f88da67f0fef3831f5c82f27e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API ~UsdZipFileWriter</definition>
        <argsstring>()</argsstring>
        <name>~UsdZipFileWriter</name>
        <briefdescription>
<para>Calls <ref refid="class_usd_zip_file_writer_1a6673daf67c3af34a3ca699e1c195f8d2" kindref="member">Save()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a687dd7b08e280175420042e67c00e8e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdZipFileWriter</definition>
        <argsstring>(const UsdZipFileWriter &amp;)=delete</argsstring>
        <name>UsdZipFileWriter</name>
        <param>
          <type>const <ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a11f1007df125210e7c6817e8c0e8b5b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> &amp;</type>
        <definition>UsdZipFileWriter&amp; operator=</definition>
        <argsstring>(const UsdZipFileWriter &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a12d3bef9ab9127934c8d4e7337bbf051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API UsdZipFileWriter</definition>
        <argsstring>(UsdZipFileWriter &amp;&amp;rhs)</argsstring>
        <name>UsdZipFileWriter</name>
        <param>
          <type><ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a98be666769ad10430808d092a699ea27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> &amp;</type>
        <definition>USD_API UsdZipFileWriter&amp; operator=</definition>
        <argsstring>(UsdZipFileWriter &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_usd_zip_file_writer" kindref="compound">UsdZipFileWriter</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a586531d84339318108c817f91367e626" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns true if this is a valid object, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="260" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a3fade233f86960c6ce7d0b483378c2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::string</type>
        <definition>USD_API std::string AddFile</definition>
        <argsstring>(const std::string &amp;filePath, const std::string &amp;filePathInArchive=std::string())</argsstring>
        <name>AddFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePathInArchive</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
<para>Adds the file at <computeroutput>filePath</computeroutput> to the zip archive with no compression applied. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>filePathInArchive</computeroutput> is non-empty, the file will be added at that path in the archive. Otherwise, it will be added at <computeroutput>filePath</computeroutput>.</para>
<para>Returns the file path used to identify the file in the zip archive on success. This path conforms to the zip file specification and may not be the same as <computeroutput>filePath</computeroutput> or <computeroutput>filePathInArchive</computeroutput>. Returns an empty string on failure. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a6673daf67c3af34a3ca699e1c195f8d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool Save</definition>
        <argsstring>()</argsstring>
        <name>Save</name>
        <briefdescription>
<para>Finalizes the zip archive and saves it to the destination file path. </para>
        </briefdescription>
        <detaileddescription>
<para>Once saved, the file writer is invalid and may not be reused. Returns true on success, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_writer_1a9cbd238a51f199f78768b2b7175292a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void Discard</definition>
        <argsstring>()</argsstring>
        <name>Discard</name>
        <briefdescription>
<para>Discards the zip archive so that it is not saved to the destination file path. </para>
        </briefdescription>
        <detaileddescription>
<para>Once discarded, the file writer is invalid and may not be reused. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="285" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_zip_file_writer_1aa8fc258410081a95be41dab152b96f13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdZipFileWriter</definition>
        <argsstring>(std::unique_ptr&lt; _Impl &gt; &amp;&amp;impl)</argsstring>
        <name>UsdZipFileWriter</name>
        <param>
          <type>std::unique_ptr&lt; _Impl &gt; &amp;&amp;</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="289" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for writing a zip file. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is primarily intended to support the .usdz file format. It is not a general-purpose zip writer, as it does not implement the full zip file specification. However, all files written by this class should be valid zip files and readable by external zip libraries and utilities. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/zipFile.h" line="232" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="231" bodyend="292"/>
    <listofallmembers>
      <member refid="class_usd_zip_file_writer_1a1330d959056750a36c212e3b71c22d97" prot="private" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>_impl</name></member>
      <member refid="class_usd_zip_file_writer_1a3fade233f86960c6ce7d0b483378c2a9" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>AddFile</name></member>
      <member refid="class_usd_zip_file_writer_1af2391e89f8ca526248851cd90831164a" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>CreateNew</name></member>
      <member refid="class_usd_zip_file_writer_1a9cbd238a51f199f78768b2b7175292a2" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>Discard</name></member>
      <member refid="class_usd_zip_file_writer_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>operator bool</name></member>
      <member refid="class_usd_zip_file_writer_1a11f1007df125210e7c6817e8c0e8b5b9" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>operator=</name></member>
      <member refid="class_usd_zip_file_writer_1a98be666769ad10430808d092a699ea27" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>operator=</name></member>
      <member refid="class_usd_zip_file_writer_1a6673daf67c3af34a3ca699e1c195f8d2" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>Save</name></member>
      <member refid="class_usd_zip_file_writer_1a446a2161c75a923f09b0b23477c111c4" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>UsdZipFileWriter</name></member>
      <member refid="class_usd_zip_file_writer_1a687dd7b08e280175420042e67c00e8e7" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>UsdZipFileWriter</name></member>
      <member refid="class_usd_zip_file_writer_1a12d3bef9ab9127934c8d4e7337bbf051" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>UsdZipFileWriter</name></member>
      <member refid="class_usd_zip_file_writer_1aa8fc258410081a95be41dab152b96f13" prot="private" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>UsdZipFileWriter</name></member>
      <member refid="class_usd_zip_file_writer_1a1f8c10f88da67f0fef3831f5c82f27e6" prot="public" virt="non-virtual"><scope>UsdZipFileWriter</scope><name>~UsdZipFileWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
