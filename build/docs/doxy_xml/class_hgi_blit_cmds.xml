<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_blit_cmds" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HgiBlitCmds</compoundname>
    <basecompoundref refid="class_hgi_cmds" prot="public" virt="non-virtual">HgiCmds</basecompoundref>
    <derivedcompoundref refid="class_hgi_g_l_blit_cmds" prot="public" virt="non-virtual">HgiGLBlitCmds</derivedcompoundref>
    <includes refid="blit_cmds_8h" local="no">blitCmds.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_blit_cmds_1afd344066aee9a33016c9754417314c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API</type>
        <definition>HGI_API ~HgiBlitCmds</definition>
        <argsstring>() override</argsstring>
        <name>~HgiBlitCmds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a4faea3ac78fb17fe44b934ddcd670ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void PushDebugGroup</definition>
        <argsstring>(const char *label)=0</argsstring>
        <name>PushDebugGroup</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1afef735fb601fa2235b72d0b42214a08d">PushDebugGroup</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Push a debug marker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a7f3b9bc0bba2f41ee8fadb843c6220d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void PopDebugGroup</definition>
        <argsstring>()=0</argsstring>
        <name>PopDebugGroup</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1ac03f05639627f7e78f42fdbc9ebbfd74">PopDebugGroup</reimplementedby>
        <briefdescription>
<para>Pop the lastest debug. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1ae322c1fa7aefe4b6bb16bef7fab253ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyTextureGpuToCpu</definition>
        <argsstring>(HgiTextureGpuToCpuOp const &amp;copyOp)=0</argsstring>
        <name>CopyTextureGpuToCpu</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a8bb7cb5e20c4afc5aaef9553b26a6d20">CopyTextureGpuToCpu</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_texture_gpu_to_cpu_op" kindref="compound">HgiTextureGpuToCpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a texture resource from GPU to CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronization between GPU writes and CPU reads must be managed by the client by supplying the correct &apos;wait&apos; flags in SubmitCmds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1ac8964515cf70eb44bcb86b3830e570ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyTextureCpuToGpu</definition>
        <argsstring>(HgiTextureCpuToGpuOp const &amp;copyOp)=0</argsstring>
        <name>CopyTextureCpuToGpu</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a8e50549cbc8b1c2c45ad11b3ff498fc7">CopyTextureCpuToGpu</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_texture_cpu_to_gpu_op" kindref="compound">HgiTextureCpuToGpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy new data from the CPU into a GPU texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a47c0ce758b8ff068829e74db08747d3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyBufferGpuToGpu</definition>
        <argsstring>(HgiBufferGpuToGpuOp const &amp;copyOp)=0</argsstring>
        <name>CopyBufferGpuToGpu</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1af24a0ec71e491bfcc96688c636cbdb03">CopyBufferGpuToGpu</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_buffer_gpu_to_gpu_op" kindref="compound">HgiBufferGpuToGpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a buffer resource from GPU to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a48ab9b78dc0bc8f6c4fca78b78ab8068" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyBufferCpuToGpu</definition>
        <argsstring>(HgiBufferCpuToGpuOp const &amp;copyOp)=0</argsstring>
        <name>CopyBufferCpuToGpu</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a138c1d9a31e70a8df991f67f9a06b8b1">CopyBufferCpuToGpu</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_buffer_cpu_to_gpu_op" kindref="compound">HgiBufferCpuToGpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy new data from CPU into GPU buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>For example copy new data into a uniform block or storage buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1ad8bc5bf8aa09f4d9e4546de400c8c6c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyBufferGpuToCpu</definition>
        <argsstring>(HgiBufferGpuToCpuOp const &amp;copyOp)=0</argsstring>
        <name>CopyBufferGpuToCpu</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1aa8664fe813faea0b3764bb1831e0de3b">CopyBufferGpuToCpu</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_buffer_gpu_to_cpu_op" kindref="compound">HgiBufferGpuToCpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy new data from GPU into CPU buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronization between GPU writes and CPU reads must be managed by the client by supplying the correct &apos;wait&apos; flags in SubmitCmds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a95d40baddbd0ccc5d160fd4c08e6e7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyTextureToBuffer</definition>
        <argsstring>(HgiTextureToBufferOp const &amp;copyOp)=0</argsstring>
        <name>CopyTextureToBuffer</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a0d2b8707c2ee634388378933a2a8b7d2">CopyTextureToBuffer</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_texture_to_buffer_op" kindref="compound">HgiTextureToBufferOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a texture resource into a buffer resource from GPU to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a762baa4803a5ab46ef538ae2ae986c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void CopyBufferToTexture</definition>
        <argsstring>(HgiBufferToTextureOp const &amp;copyOp)=0</argsstring>
        <name>CopyBufferToTexture</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a09eb41c8eb2d6a485f47ed0abd86b198">CopyBufferToTexture</reimplementedby>
        <param>
          <type><ref refid="struct_hgi_buffer_to_texture_op" kindref="compound">HgiBufferToTextureOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a buffer resource into a texture resource from GPU to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1a90a2a118ae766e2461701fd21e6b6a4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void GenerateMipMaps</definition>
        <argsstring>(HgiTextureHandle const &amp;texture)=0</argsstring>
        <name>GenerateMipMaps</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a0f3bfdab9b149f1e227095cb367305d6">GenerateMipMaps</reimplementedby>
        <param>
          <type>HgiTextureHandle const &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Generate mip maps for a texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1adf143add2bc5169953bacba877176a68" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void FillBuffer</definition>
        <argsstring>(HgiBufferHandle const &amp;buffer, uint8_t value)=0</argsstring>
        <name>FillBuffer</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a57c0690dd1ffa432e98934911e47ddf1">FillBuffer</reimplementedby>
        <param>
          <type><ref refid="class_hgi_handle" kindref="compound">HgiBufferHandle</ref> const &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Fill a buffer with a constant value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1af7fca4b663cc7418d36f96c36b72cc54" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API void</type>
        <definition>virtual HGI_API void InsertMemoryBarrier</definition>
        <argsstring>(HgiMemoryBarrier barrier)=0</argsstring>
        <name>InsertMemoryBarrier</name>
        <reimplementedby refid="class_hgi_g_l_blit_cmds_1a150f08387a4c7165f2c5aeeb19542a33">InsertMemoryBarrier</reimplementedby>
        <param>
          <type>HgiMemoryBarrier</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
<para>Inserts a barrier so that data written to memory by commands before the barrier is available to commands after the barrier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hgi_blit_cmds_1a3e639e87286babcd8255368a97b40b36" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API</type>
        <definition>HGI_API HgiBlitCmds</definition>
        <argsstring>()</argsstring>
        <name>HgiBlitCmds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="116" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hgi_blit_cmds_1a0c01f8c66ee94a5fa3ced85547546467" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hgi_blit_cmds" kindref="compound">HgiBlitCmds</ref> &amp;</type>
        <definition>HgiBlitCmds&amp; operator=</definition>
        <argsstring>(const HgiBlitCmds &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hgi_blit_cmds" kindref="compound">HgiBlitCmds</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_blit_cmds_1aa4b61fb0e3b1aeb48fc741b7a618151e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiBlitCmds</definition>
        <argsstring>(const HgiBlitCmds &amp;)=delete</argsstring>
        <name>HgiBlitCmds</name>
        <param>
          <type>const <ref refid="class_hgi_blit_cmds" kindref="compound">HgiBlitCmds</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmds.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A graphics API independent abstraction of resource copy commands. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_hgi_blit_cmds" kindref="compound">HgiBlitCmds</ref> is a lightweight object that cannot be re-used after it has been submitted. A new cmds object should be acquired for each frame. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3710">
        <label>HgiBlitCmds</label>
        <link refid="class_hgi_blit_cmds"/>
        <childnode refid="3711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3712">
        <label>HgiGLBlitCmds</label>
        <link refid="class_hgi_g_l_blit_cmds"/>
        <childnode refid="3710" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3711">
        <label>HgiCmds</label>
        <link refid="class_hgi_cmds"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3713">
        <label>HgiBlitCmds</label>
        <link refid="class_hgi_blit_cmds"/>
        <childnode refid="3714" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3714">
        <label>HgiCmds</label>
        <link refid="class_hgi_cmds"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/blitCmds.h" line="55" column="1" bodyfile="pxr/imaging/hgi/blitCmds.h" bodystart="54" bodyend="121"/>
    <listofallmembers>
      <member refid="class_hgi_cmds_1ac15c43bdc2f47df7bc72769b366c3de7" prot="protected" virt="non-virtual"><scope>HgiBlitCmds</scope><name>_SetSubmitted</name></member>
      <member refid="class_hgi_cmds_1ada9b3b32ca4eb9804e3a47ddd8954062" prot="protected" virt="virtual"><scope>HgiBlitCmds</scope><name>_Submit</name></member>
      <member refid="class_hgi_blit_cmds_1a48ab9b78dc0bc8f6c4fca78b78ab8068" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyBufferCpuToGpu</name></member>
      <member refid="class_hgi_blit_cmds_1ad8bc5bf8aa09f4d9e4546de400c8c6c6" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyBufferGpuToCpu</name></member>
      <member refid="class_hgi_blit_cmds_1a47c0ce758b8ff068829e74db08747d3a" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyBufferGpuToGpu</name></member>
      <member refid="class_hgi_blit_cmds_1a762baa4803a5ab46ef538ae2ae986c00" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyBufferToTexture</name></member>
      <member refid="class_hgi_blit_cmds_1ac8964515cf70eb44bcb86b3830e570ed" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyTextureCpuToGpu</name></member>
      <member refid="class_hgi_blit_cmds_1ae322c1fa7aefe4b6bb16bef7fab253ba" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyTextureGpuToCpu</name></member>
      <member refid="class_hgi_blit_cmds_1a95d40baddbd0ccc5d160fd4c08e6e7f9" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>CopyTextureToBuffer</name></member>
      <member refid="class_hgi_blit_cmds_1adf143add2bc5169953bacba877176a68" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>FillBuffer</name></member>
      <member refid="class_hgi_blit_cmds_1a90a2a118ae766e2461701fd21e6b6a4d" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>GenerateMipMaps</name></member>
      <member refid="class_hgi_blit_cmds_1a3e639e87286babcd8255368a97b40b36" prot="protected" virt="non-virtual"><scope>HgiBlitCmds</scope><name>HgiBlitCmds</name></member>
      <member refid="class_hgi_blit_cmds_1aa4b61fb0e3b1aeb48fc741b7a618151e" prot="private" virt="non-virtual"><scope>HgiBlitCmds</scope><name>HgiBlitCmds</name></member>
      <member refid="class_hgi_cmds_1aacf15024d99594cd7e32536f934141ab" prot="protected" virt="non-virtual"><scope>HgiBlitCmds</scope><name>HgiCmds</name></member>
      <member refid="class_hgi_blit_cmds_1af7fca4b663cc7418d36f96c36b72cc54" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>InsertMemoryBarrier</name></member>
      <member refid="class_hgi_cmds_1ae21ceb4d878a96527fa7e9aa2eec6c0b" prot="public" virt="non-virtual"><scope>HgiBlitCmds</scope><name>IsSubmitted</name></member>
      <member refid="class_hgi_blit_cmds_1a0c01f8c66ee94a5fa3ced85547546467" prot="private" virt="non-virtual"><scope>HgiBlitCmds</scope><name>operator=</name></member>
      <member refid="class_hgi_blit_cmds_1a7f3b9bc0bba2f41ee8fadb843c6220d3" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>PopDebugGroup</name></member>
      <member refid="class_hgi_blit_cmds_1a4faea3ac78fb17fe44b934ddcd670ff5" prot="public" virt="pure-virtual"><scope>HgiBlitCmds</scope><name>PushDebugGroup</name></member>
      <member refid="class_hgi_blit_cmds_1afd344066aee9a33016c9754417314c9d" prot="public" virt="non-virtual"><scope>HgiBlitCmds</scope><name>~HgiBlitCmds</name></member>
      <member refid="class_hgi_cmds_1acfebf344be18afe51829d5c843d53ccd" prot="public" virt="virtual"><scope>HgiBlitCmds</scope><name>~HgiCmds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
