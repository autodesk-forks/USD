<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_simple_lighting_shader" kind="class" language="C++" prot="public">
    <compoundname>HdStSimpleLightingShader</compoundname>
    <basecompoundref refid="class_hd_st_lighting_shader" prot="public" virt="non-virtual">HdStLightingShader</basecompoundref>
    <includes refid="simple_lighting_shader_8h" local="no">simpleLightingShader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1aa8ea9a05c1af6d824204f119c82f0b62" prot="private" static="no" mutable="no">
        <type>GlfSimpleLightingContextRefPtr</type>
        <definition>GlfSimpleLightingContextRefPtr _lightingContext</definition>
        <argsstring></argsstring>
        <name>_lightingContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="146" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a789817d1a284feeebc113219d360d19e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _useLighting</definition>
        <argsstring></argsstring>
        <name>_useLighting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="147" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a534410bd82fb7d9a8ef914ce6b2705de" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; class <ref refid="class_hio_glslfx" kindref="compound">HioGlslfx</ref> &gt;</type>
        <definition>std::unique_ptr&lt;class HioGlslfx&gt; _glslfx</definition>
        <argsstring></argsstring>
        <name>_glslfx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="148" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a5a0c540719001d9d4f4a5c0dd5a0ee88" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="class_hd_st_binding_request" kindref="compound">HdStBindingRequest</ref> &gt;</type>
        <definition>std::map&lt;TfToken, HdStBindingRequest&gt; _customBuffers</definition>
        <argsstring></argsstring>
        <name>_customBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="151" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a6a2a41940aea9c29b4df0bc95d7ebe6f" prot="private" static="no" mutable="no">
        <type>HdStTextureHandleSharedPtr</type>
        <definition>HdStTextureHandleSharedPtr _domeLightEnvironmentTextureHandle</definition>
        <argsstring></argsstring>
        <name>_domeLightEnvironmentTextureHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="157" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1ab76e90202902816ea2b8bb77ff04a07c" prot="private" static="no" mutable="no">
        <type>NamedTextureHandleVector</type>
        <definition>NamedTextureHandleVector _namedTextureHandles</definition>
        <argsstring></argsstring>
        <name>_namedTextureHandles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="160" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1aab05e6fc971240bdb9807f6407969e29" prot="private" static="no" mutable="no">
        <type>NamedTextureHandleVector</type>
        <definition>NamedTextureHandleVector _domeLightTextureHandles</definition>
        <argsstring></argsstring>
        <name>_domeLightTextureHandles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="162" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a8adcba92548579029d2bece23bdfc197" prot="private" static="no" mutable="no">
        <type>NamedTextureHandleVector</type>
        <definition>NamedTextureHandleVector _shadowTextureHandles</definition>
        <argsstring></argsstring>
        <name>_shadowTextureHandles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="163" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a02c52e49be2648e5e8a73c05291a5582" prot="private" static="no" mutable="no">
        <type>HdSt_MaterialParamVector</type>
        <definition>HdSt_MaterialParamVector _lightTextureParams</definition>
        <argsstring></argsstring>
        <name>_lightTextureParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="165" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a28fadae9ff888a93bc6c09a6f09db09c" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
        <definition>HdRenderParam* _renderParam</definition>
        <argsstring></argsstring>
        <name>_renderParam</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="167" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a4ed49d3d026aaaf4ccf05225a2825493" prot="private" static="no" mutable="no">
        <type>HdRenderPassAovBindingVector</type>
        <definition>HdRenderPassAovBindingVector _shadowAovBindings</definition>
        <argsstring></argsstring>
        <name>_shadowAovBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="169" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_simple_lighting_shader_1a632ef3fe14397e98fb3c8ececa695e7f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; HdStRenderBuffer &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;HdStRenderBuffer&gt; &gt; _shadowAovBuffers</definition>
        <argsstring></argsstring>
        <name>_shadowAovBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="170" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1af835c4eec03fc43c518a41043d85bae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStSimpleLightingShader</definition>
        <argsstring>()</argsstring>
        <name>HdStSimpleLightingShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a88dde7d6a89a317a40dbea9d8546d881" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStSimpleLightingShader</definition>
        <argsstring>() override</argsstring>
        <name>~HdStSimpleLightingShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a9d802c1047cd5aea9dc92919b2803423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API ID</type>
        <definition>HDST_API ID ComputeHash</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeHash</name>
        <reimplements refid="class_hd_st_shader_code_1acfa7f0a0b30c2ac28eeaf6aed0a30231">ComputeHash</reimplements>
        <briefdescription>
<para>HdShader overrides. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a908e0465551c896cb54231d81e059d1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API std::string</type>
        <definition>HDST_API std::string GetSource</definition>
        <argsstring>(TfToken const &amp;shaderStageKey) const override</argsstring>
        <name>GetSource</name>
        <reimplements refid="class_hd_st_shader_code_1a8717d742607de2b45bea9024d452c00a">GetSource</reimplements>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderStageKey</declname>
        </param>
        <briefdescription>
<para>Returns the shader source provided by this shader for <emphasis>shaderStageKey</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1ae1f190000fb661c92c68506fffc9fb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void BindResources</definition>
        <argsstring>(int program, HdSt_ResourceBinder const &amp;binder) override</argsstring>
        <name>BindResources</name>
        <reimplements refid="class_hd_st_shader_code_1a13700c17eb68d77baadffa79dbec83d4">BindResources</reimplements>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>HdSt_ResourceBinder const &amp;</type>
          <declname>binder</declname>
        </param>
        <briefdescription>
<para>Binds shader-specific resources to <emphasis>program</emphasis> XXX: this interface is meant to be used for bridging the GlfSimpleLightingContext mechanism, and not for generic use-cases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1ad68ad0c16d09b39ab29774987a7db6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void UnbindResources</definition>
        <argsstring>(int program, HdSt_ResourceBinder const &amp;binder) override</argsstring>
        <name>UnbindResources</name>
        <reimplements refid="class_hd_st_shader_code_1aa5aea916f3a072c69d53a67874958794">UnbindResources</reimplements>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>HdSt_ResourceBinder const &amp;</type>
          <declname>binder</declname>
        </param>
        <briefdescription>
<para>Unbinds shader-specific resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a4bb91c7fbdb5f28ae5b04b912295f884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AddBufferBinding</definition>
        <argsstring>(HdStBindingRequest const &amp;req)</argsstring>
        <name>AddBufferBinding</name>
        <param>
          <type><ref refid="class_hd_st_binding_request" kindref="compound">HdStBindingRequest</ref> const &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Add a custom binding request for use when this shader executes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a13cd951886c9d88f1a0a5023dfb64935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void RemoveBufferBinding</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>RemoveBufferBinding</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove <computeroutput>name</computeroutput> from custom binding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a55ced321743ab14761d7628f5dc4c11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void ClearBufferBindings</definition>
        <argsstring>()</argsstring>
        <name>ClearBufferBindings</name>
        <briefdescription>
<para>Clear all custom bindings associated with this shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a4cfef0b3a78e078f1386a3b47f9ea824" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AddBindings</definition>
        <argsstring>(HdStBindingRequestVector *customBindings) override</argsstring>
        <name>AddBindings</name>
        <reimplements refid="class_hd_st_shader_code_1a736c068e4fec90946da60dcd9e2621eb">AddBindings</reimplements>
        <param>
          <type>HdStBindingRequestVector *</type>
          <declname>customBindings</declname>
        </param>
        <briefdescription>
<para>Add custom bindings (used by codegen) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1abc4479ebc6ccc2e6a51144961627c0b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AddResourcesFromTextures</definition>
        <argsstring>(ResourceContext &amp;ctx) const override</argsstring>
        <name>AddResourcesFromTextures</name>
        <reimplements refid="class_hd_st_shader_code_1a7f54ea8b13462f62034e2143d600b668">AddResourcesFromTextures</reimplements>
        <param>
          <type><ref refid="class_hd_st_shader_code_1_1_resource_context" kindref="compound">ResourceContext</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Adds computations to create the dome light textures that are pre-calculated from the environment map texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1aa9164a243a42e0f97284b6263c7bd062" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API HdSt_MaterialParamVector const  &amp;</type>
        <definition>HDST_API HdSt_MaterialParamVector const&amp; GetParams</definition>
        <argsstring>() const override</argsstring>
        <name>GetParams</name>
        <reimplements refid="class_hd_st_shader_code_1a33ed1752551f2580e533727f89b421cd">GetParams</reimplements>
        <briefdescription>
<para><ref refid="class_hd_st_shader_code" kindref="compound">HdStShaderCode</ref> overrides. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1afa0c667464af334e7965aae12ac57ac4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetCamera</definition>
        <argsstring>(GfMatrix4d const &amp;worldToViewMatrix, GfMatrix4d const &amp;projectionMatrix) override</argsstring>
        <name>SetCamera</name>
        <reimplements refid="class_hd_st_lighting_shader_1a664dc23937e0a7b3ee81d5a468f98b6c">SetCamera</reimplements>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>worldToViewMatrix</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>projectionMatrix</declname>
        </param>
        <briefdescription>
<para><ref refid="class_hd_st_lighting_shader" kindref="compound">HdStLightingShader</ref> overrides. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a99e82a41cba77db72cfcedd3e1f6c132" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GlfSimpleLightingContextRefPtr</type>
        <definition>GlfSimpleLightingContextRefPtr GetLightingContext</definition>
        <argsstring>() const</argsstring>
        <name>GetLightingContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="107" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a5635445188281975f63a7c2447590ab4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AllocateTextureHandles</definition>
        <argsstring>(HdRenderIndex const &amp;renderIndex)</argsstring>
        <name>AllocateTextureHandles</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> const &amp;</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
<para>Allocates texture handles (texture loading happens later during commit) needed for lights. </para>
        </briefdescription>
        <detaileddescription>
<para>Call after lighting context has been set or updated in Sync-phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1ad4466d775f5e41539f8ec5839643e0fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const HdStTextureHandleSharedPtr &amp;</type>
        <definition>const HdStTextureHandleSharedPtr&amp; GetDomeLightEnvironmentTextureHandle</definition>
        <argsstring>() const</argsstring>
        <name>GetDomeLightEnvironmentTextureHandle</name>
        <briefdescription>
<para>The dome light environment map used as source for the other dome light textures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="122" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a996cd3d76e498522116cdff37fd780ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API NamedTextureHandleVector const  &amp;</type>
        <definition>HDST_API NamedTextureHandleVector const&amp; GetNamedTextureHandles</definition>
        <argsstring>() const override</argsstring>
        <name>GetNamedTextureHandles</name>
        <reimplements refid="class_hd_st_shader_code_1afa5d4e1a8aa32dc92f9da89ff4c92659">GetNamedTextureHandles</reimplements>
        <briefdescription>
<para>The textures computed from the dome light environment map that the shader needs to bind for the dome light shading. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a75e322e1b1a4862004f90784ee5a8691" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API const HdStTextureHandleSharedPtr &amp;</type>
        <definition>HDST_API const HdStTextureHandleSharedPtr&amp; GetTextureHandle</definition>
        <argsstring>(const TfToken &amp;name) const</argsstring>
        <name>GetTextureHandle</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Get one of the textures that need to be computed from the dome light environment map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a7392fe3095e3319c315f8c4f7364c63d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HdRenderPassAovBindingVector const  &amp;</type>
        <definition>HdRenderPassAovBindingVector const&amp; GetShadowAovBindings</definition>
        <argsstring>()</argsstring>
        <name>GetShadowAovBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="137" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="137" bodyend="139"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1a0e926984cc7f35645959b81d89654229" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _GetAovPath</definition>
        <argsstring>(TfToken const &amp;aov, size_t shadowIndex) const</argsstring>
        <name>_GetAovPath</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>aov</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>shadowIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1aa89bece6a2f1b3770fa1d8f3e761e4d0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ResizeOrCreateBufferForAov</definition>
        <argsstring>(size_t shadowIndex) const</argsstring>
        <name>_ResizeOrCreateBufferForAov</name>
        <param>
          <type>size_t</type>
          <declname>shadowIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_simple_lighting_shader_1ad35df3de34cf70f26f3addf37f016b2e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _CleanupAovBindings</definition>
        <argsstring>()</argsstring>
        <name>_CleanupAovBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="144" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A shader that supports simple lighting functionality. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3322">
        <label>HdStShaderCode</label>
        <link refid="class_hd_st_shader_code"/>
      </node>
      <node id="3320">
        <label>HdStSimpleLightingShader</label>
        <link refid="class_hd_st_simple_lighting_shader"/>
        <childnode refid="3321" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3321">
        <label>HdStLightingShader</label>
        <link refid="class_hd_st_lighting_shader"/>
        <childnode refid="3322" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3325">
        <label>HdStShaderCode</label>
        <link refid="class_hd_st_shader_code"/>
      </node>
      <node id="3323">
        <label>HdStSimpleLightingShader</label>
        <link refid="class_hd_st_simple_lighting_shader"/>
        <childnode refid="3324" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3324">
        <label>HdStLightingShader</label>
        <link refid="class_hd_st_lighting_shader"/>
        <childnode refid="3325" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/simpleLightingShader.h" line="58" column="1" bodyfile="pxr/imaging/hdSt/simpleLightingShader.h" bodystart="57" bodyend="171"/>
    <listofallmembers>
      <member refid="class_hd_st_simple_lighting_shader_1ad35df3de34cf70f26f3addf37f016b2e" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_CleanupAovBindings</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a5a0c540719001d9d4f4a5c0dd5a0ee88" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_customBuffers</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a6a2a41940aea9c29b4df0bc95d7ebe6f" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_domeLightEnvironmentTextureHandle</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1aab05e6fc971240bdb9807f6407969e29" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_domeLightTextureHandles</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a0e926984cc7f35645959b81d89654229" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_GetAovPath</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a534410bd82fb7d9a8ef914ce6b2705de" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_glslfx</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1aa8ea9a05c1af6d824204f119c82f0b62" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_lightingContext</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a02c52e49be2648e5e8a73c05291a5582" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_lightTextureParams</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1ab76e90202902816ea2b8bb77ff04a07c" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_namedTextureHandles</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a28fadae9ff888a93bc6c09a6f09db09c" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_renderParam</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1aa89bece6a2f1b3770fa1d8f3e761e4d0" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_ResizeOrCreateBufferForAov</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a4ed49d3d026aaaf4ccf05225a2825493" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_shadowAovBindings</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a632ef3fe14397e98fb3c8ececa695e7f" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_shadowAovBuffers</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a8adcba92548579029d2bece23bdfc197" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_shadowTextureHandles</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a789817d1a284feeebc113219d360d19e" prot="private" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>_useLighting</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a4cfef0b3a78e078f1386a3b47f9ea824" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>AddBindings</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a4bb91c7fbdb5f28ae5b04b912295f884" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>AddBufferBinding</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1abc4479ebc6ccc2e6a51144961627c0b8" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>AddResourcesFromTextures</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a5635445188281975f63a7c2447590ab4" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>AllocateTextureHandles</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1ae1f190000fb661c92c68506fffc9fb80" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>BindResources</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a55ced321743ab14761d7628f5dc4c11b" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>ClearBufferBindings</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a9d802c1047cd5aea9dc92919b2803423" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>ComputeHash</name></member>
      <member refid="class_hd_st_shader_code_1a0cb254cccc84edc7c968ac420c68c510" prot="public" virt="non-virtual" ambiguityscope="HdStLightingShader::"><scope>HdStSimpleLightingShader</scope><name>ComputeHash</name></member>
      <member refid="class_hd_st_shader_code_1aa87939b745008a9e4c595ff5a3b7bc47" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>ComputeTextureSourceHash</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1ad4466d775f5e41539f8ec5839643e0fe" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>GetDomeLightEnvironmentTextureHandle</name></member>
      <member refid="class_hd_st_shader_code_1a87c79469678d418e6b22a40cc44c71e9" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>GetLayout</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a99e82a41cba77db72cfcedd3e1f6c132" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>GetLightingContext</name></member>
      <member refid="class_hd_st_shader_code_1aa083cfe5ffeb293d140939015cfc4bee" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>GetMaterialTag</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a996cd3d76e498522116cdff37fd780ca" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>GetNamedTextureHandles</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1aa9164a243a42e0f97284b6263c7bd062" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>GetParams</name></member>
      <member refid="class_hd_st_shader_code_1aca5eb08abdbce73ddf3875154536a422" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>GetPrimvarNames</name></member>
      <member refid="class_hd_st_shader_code_1a1c6ec58a09a01194b77a4a6e3f44d58c" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>GetShaderData</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a7392fe3095e3319c315f8c4f7364c63d" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>GetShadowAovBindings</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a908e0465551c896cb54231d81e059d1b" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>GetSource</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a75e322e1b1a4862004f90784ee5a8691" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>GetTextureHandle</name></member>
      <member refid="class_hd_st_lighting_shader_1aefd47c0a8b4b8448cefc3e8cc56dfbe8" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>HdStLightingShader</name></member>
      <member refid="class_hd_st_shader_code_1ac530c4be851e1dba7b0abd4930ebb712" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>HdStShaderCode</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1af835c4eec03fc43c518a41043d85bae9" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>HdStSimpleLightingShader</name></member>
      <member refid="class_hd_st_shader_code_1a98561e8cb698fef2e90d441103da9db1" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>ID</name></member>
      <member refid="class_hd_st_shader_code_1acaa3f03bbc11d10ddb93f36f864bc55c" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>IsEnabledPrimvarFiltering</name></member>
      <member refid="class_hd_st_shader_code_1affddb2cacbc61841edb346aa3404bba8" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>NamedTextureHandleVector</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a13cd951886c9d88f1a0a5023dfb64935" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>RemoveBufferBinding</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1afa0c667464af334e7965aae12ac57ac4" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>SetCamera</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1ad68ad0c16d09b39ab29774987a7db6a1" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>UnbindResources</name></member>
      <member refid="class_hd_st_lighting_shader_1aebfe1fe1de8ebb707c8045d17f92fd25" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>~HdStLightingShader</name></member>
      <member refid="class_hd_st_shader_code_1a031ab0133a22cca5abd7781330fb39c3" prot="public" virt="virtual"><scope>HdStSimpleLightingShader</scope><name>~HdStShaderCode</name></member>
      <member refid="class_hd_st_simple_lighting_shader_1a88dde7d6a89a317a40dbea9d8546d881" prot="public" virt="non-virtual"><scope>HdStSimpleLightingShader</scope><name>~HdStSimpleLightingShader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
