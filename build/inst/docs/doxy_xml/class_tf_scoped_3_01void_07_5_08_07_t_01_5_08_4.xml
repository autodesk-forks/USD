<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4" kind="class" language="C++" prot="public">
    <compoundname>TfScoped&lt; void(*)(T *)&gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a403e0e8289751c74c888064fb57dbb50" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Procedure) (T *)</definition>
        <argsstring>)(T *)</argsstring>
        <name>Procedure</name>
        <briefdescription>
<para>The type of the function executed on destruction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="102" column="1" bodyfile="pxr/base/tf/scoped.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1af6963adfd8ca750e121b54cc9edb11e1" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* _obj</definition>
        <argsstring></argsstring>
        <name>_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="115" column="1" bodyfile="pxr/base/tf/scoped.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a9e30631b10fecd647b6d7db5606d5171" prot="private" static="no" mutable="no">
        <type>Procedure</type>
        <definition>Procedure _onExit</definition>
        <argsstring></argsstring>
        <name>_onExit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="116" column="1" bodyfile="pxr/base/tf/scoped.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a28f1d2d77994c455ceb84a8a1ee9cf36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TfScoped</definition>
        <argsstring>(TfScoped const &amp;)=delete</argsstring>
        <name>TfScoped</name>
        <param>
          <type><ref refid="class_tf_scoped" kindref="compound">TfScoped</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a8711a00c64a8f9ca4e32344549b2502a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tf_scoped" kindref="compound">TfScoped</ref> &amp;</type>
        <definition>TfScoped&amp; operator=</definition>
        <argsstring>(TfScoped const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_tf_scoped" kindref="compound">TfScoped</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="99" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1ad5dce6106402e93425b560f03e0640c2" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfScoped</definition>
        <argsstring>(const Procedure &amp;leave, T *obj)</argsstring>
        <name>TfScoped</name>
        <param>
          <type>const Procedure &amp;</type>
          <declname>leave</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Execute <computeroutput>leave</computeroutput>, passing <computeroutput>obj</computeroutput>, when this object goes out of scope. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="105" column="1" bodyfile="pxr/base/tf/scoped.h" bodystart="105" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a8d10433d0a8b7015be1466b152266d96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~TfScoped</definition>
        <argsstring>()</argsstring>
        <name>~TfScoped</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="108" column="1" bodyfile="pxr/base/tf/scoped.h" bodystart="108" bodyend="108"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a22c141c33f74d21f21be163696e53af3" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* operator new</definition>
        <argsstring>(::std::size_t size)</argsstring>
        <name>operator new</name>
        <param>
          <type>::std::size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/scoped.h" line="112" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/scoped.h" line="97" column="1" bodyfile="pxr/base/tf/scoped.h" bodystart="97" bodyend="117"/>
    <listofallmembers>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1af6963adfd8ca750e121b54cc9edb11e1" prot="private" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>_obj</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a9e30631b10fecd647b6d7db5606d5171" prot="private" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>_onExit</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a22c141c33f74d21f21be163696e53af3" prot="private" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>operator new</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a8711a00c64a8f9ca4e32344549b2502a" prot="private" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>operator=</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a403e0e8289751c74c888064fb57dbb50" prot="public" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>Procedure</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a28f1d2d77994c455ceb84a8a1ee9cf36" prot="private" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>TfScoped</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1ad5dce6106402e93425b560f03e0640c2" prot="public" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>TfScoped</name></member>
      <member refid="class_tf_scoped_3_01void_07_5_08_07_t_01_5_08_4_1a8d10433d0a8b7015be1466b152266d96" prot="public" virt="non-virtual"><scope>TfScoped&lt; void(*)(T *)&gt;</scope><name>~TfScoped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
