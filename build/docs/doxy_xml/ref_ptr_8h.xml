<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ref_ptr_8h" kind="file" language="C++">
    <compoundname>refPtr.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="diagnostic_lite_8h" local="yes">pxr/base/tf/diagnosticLite.h</includes>
    <includes refid="tf_2hash_8h" local="yes">pxr/base/tf/hash.h</includes>
    <includes refid="null_ptr_8h" local="yes">pxr/base/tf/nullPtr.h</includes>
    <includes refid="ref_base_8h" local="yes">pxr/base/tf/refBase.h</includes>
    <includes refid="safe_type_compare_8h" local="yes">pxr/base/tf/safeTypeCompare.h</includes>
    <includes refid="type_functions_8h" local="yes">pxr/base/tf/typeFunctions.h</includes>
    <includes refid="base_2tf_2api_8h" local="yes">pxr/base/tf/api.h</includes>
    <includes refid="hints_8h" local="yes">pxr/base/arch/hints.h</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">cstddef</includes>
    <includedby refid="base_2plug_2registry_8h" local="yes">pxr/base/plug/registry.h</includedby>
    <includedby refid="declare_ptrs_8h" local="yes">pxr/base/tf/declarePtrs.h</includedby>
    <includedby refid="instantiate_type_8h" local="yes">pxr/base/tf/instantiateType.h</includedby>
    <includedby refid="make_py_constructor_8h" local="yes">pxr/base/tf/makePyConstructor.h</includedby>
    <includedby refid="py_container_conversions_8h" local="yes">pxr/base/tf/pyContainerConversions.h</includedby>
    <includedby refid="py_identity_8h" local="yes">pxr/base/tf/pyIdentity.h</includedby>
    <includedby refid="py_polymorphic_8h" local="yes">pxr/base/tf/pyPolymorphic.h</includedby>
    <includedby refid="py_ptr_helpers_8h" local="yes">pxr/base/tf/pyPtrHelpers.h</includedby>
    <includedby refid="base_2tf_2py_utils_8h" local="yes">pxr/base/tf/pyUtils.h</includedby>
    <includedby refid="weak_base_8h" local="yes">pxr/base/tf/weakBase.h</includedby>
    <includedby refid="weak_ptr_8h" local="yes">pxr/base/tf/weakPtr.h</includedby>
    <includedby refid="weak_ptr_facade_8h" local="yes">pxr/base/tf/weakPtrFacade.h</includedby>
    <includedby refid="aggregate_node_8h" local="yes">pxr/base/trace/aggregateNode.h</includedby>
    <includedby refid="collector_8h" local="yes">pxr/base/trace/collector.h</includedby>
    <includedby refid="event_node_8h" local="yes">pxr/base/trace/eventNode.h</includedby>
    <includedby refid="event_tree_8h" local="yes">pxr/base/trace/eventTree.h</includedby>
    <includedby refid="simple_shadow_array_8h" local="yes">pxr/imaging/glf/simpleShadowArray.h</includedby>
    <includedby refid="glf_2texture_8h" local="yes">pxr/imaging/glf/texture.h</includedby>
    <incdepgraph>
      <node id="75008">
        <label>atomic</label>
      </node>
      <node id="74990">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="74991" relation="include">
        </childnode>
        <childnode refid="74992" relation="include">
        </childnode>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74980" relation="include">
        </childnode>
        <childnode refid="74993" relation="include">
        </childnode>
      </node>
      <node id="74979">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="74980" relation="include">
        </childnode>
      </node>
      <node id="74992">
        <label>cstdint</label>
      </node>
      <node id="74975">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74977" relation="include">
        </childnode>
        <childnode refid="74987" relation="include">
        </childnode>
        <childnode refid="75005" relation="include">
        </childnode>
        <childnode refid="75006" relation="include">
        </childnode>
        <childnode refid="75009" relation="include">
        </childnode>
        <childnode refid="75011" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
        <childnode refid="74983" relation="include">
        </childnode>
        <childnode refid="75010" relation="include">
        </childnode>
        <childnode refid="75003" relation="include">
        </childnode>
        <childnode refid="75012" relation="include">
        </childnode>
      </node>
      <node id="74994">
        <label>cmath</label>
      </node>
      <node id="74988">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74982" relation="include">
        </childnode>
        <childnode refid="74989" relation="include">
        </childnode>
        <childnode refid="74990" relation="include">
        </childnode>
        <childnode refid="74995" relation="include">
        </childnode>
        <childnode refid="74996" relation="include">
        </childnode>
      </node>
      <node id="75006">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="75007" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
      </node>
      <node id="74998">
        <label>string</label>
      </node>
      <node id="74978">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74979" relation="include">
        </childnode>
      </node>
      <node id="74999">
        <label>map</label>
      </node>
      <node id="74991">
        <label>cinttypes</label>
      </node>
      <node id="74976">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="74986">
        <label>stddef.h</label>
      </node>
      <node id="74982">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74980" relation="include">
        </childnode>
      </node>
      <node id="75007">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74990" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
        <childnode refid="75008" relation="include">
        </childnode>
      </node>
      <node id="75009">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="75010" relation="include">
        </childnode>
      </node>
      <node id="74993">
        <label>sys/types.h</label>
      </node>
      <node id="75010">
        <label>typeinfo</label>
      </node>
      <node id="74989">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74980" relation="include">
        </childnode>
        <childnode refid="74990" relation="include">
        </childnode>
        <childnode refid="74994" relation="include">
        </childnode>
      </node>
      <node id="75004">
        <label>vector</label>
      </node>
      <node id="74981">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="74979" relation="include">
        </childnode>
      </node>
      <node id="74996">
        <label>utility</label>
      </node>
      <node id="75005">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
      </node>
      <node id="74980">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="74983">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="74980" relation="include">
        </childnode>
      </node>
      <node id="74987">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74988" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
        <childnode refid="74997" relation="include">
        </childnode>
        <childnode refid="74998" relation="include">
        </childnode>
        <childnode refid="74999" relation="include">
        </childnode>
        <childnode refid="75000" relation="include">
        </childnode>
        <childnode refid="75001" relation="include">
        </childnode>
        <childnode refid="75002" relation="include">
        </childnode>
        <childnode refid="75003" relation="include">
        </childnode>
        <childnode refid="74996" relation="include">
        </childnode>
        <childnode refid="75004" relation="include">
        </childnode>
      </node>
      <node id="74995">
        <label>math.h</label>
      </node>
      <node id="74984">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
        <childnode refid="74985" relation="include">
        </childnode>
        <childnode refid="74986" relation="include">
        </childnode>
      </node>
      <node id="75012">
        <label>cstddef</label>
      </node>
      <node id="75011">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="75000" relation="include">
        </childnode>
      </node>
      <node id="74977">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="74976" relation="include">
        </childnode>
        <childnode refid="74978" relation="include">
        </childnode>
        <childnode refid="74981" relation="include">
        </childnode>
        <childnode refid="74982" relation="include">
        </childnode>
        <childnode refid="74983" relation="include">
        </childnode>
        <childnode refid="74984" relation="include">
        </childnode>
        <childnode refid="74986" relation="include">
        </childnode>
      </node>
      <node id="75003">
        <label>type_traits</label>
      </node>
      <node id="75001">
        <label>set</label>
      </node>
      <node id="74985">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="74980" relation="include">
        </childnode>
      </node>
      <node id="74997">
        <label>cstring</label>
      </node>
      <node id="75000">
        <label>memory</label>
      </node>
      <node id="75002">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="75440">
        <label>pxr/usd/pcp/layerStackIdentifier.h</label>
        <link refid="layer_stack_identifier_8h"/>
        <childnode refid="75432" relation="include">
        </childnode>
        <childnode refid="75441" relation="include">
        </childnode>
        <childnode refid="75271" relation="include">
        </childnode>
        <childnode refid="75436" relation="include">
        </childnode>
        <childnode refid="75281" relation="include">
        </childnode>
        <childnode refid="75159" relation="include">
        </childnode>
        <childnode refid="75266" relation="include">
        </childnode>
      </node>
      <node id="75017">
        <label>pxr/imaging/hd/rendererPluginRegistry.h</label>
        <link refid="renderer_plugin_registry_8h_source"/>
      </node>
      <node id="75405">
        <label>pxr/imaging/hdSt/commandBuffer.h</label>
        <link refid="command_buffer_8h_source"/>
        <childnode refid="75358" relation="include">
        </childnode>
      </node>
      <node id="75038">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="75364">
        <label>pxr/imaging/hdx/renderSetupTask.h</label>
        <link refid="render_setup_task_8h_source"/>
        <childnode refid="75365" relation="include">
        </childnode>
        <childnode refid="75368" relation="include">
        </childnode>
        <childnode refid="75369" relation="include">
        </childnode>
        <childnode refid="75353" relation="include">
        </childnode>
      </node>
      <node id="75181">
        <label>pxr/usd/usdGeom/pointBased.h</label>
        <link refid="point_based_8h"/>
        <childnode refid="75182" relation="include">
        </childnode>
        <childnode refid="75186" relation="include">
        </childnode>
        <childnode refid="75187" relation="include">
        </childnode>
        <childnode refid="75188" relation="include">
        </childnode>
      </node>
      <node id="75129">
        <label>pxr/usd/usdGeom/visibilityAPI.h</label>
        <link refid="visibility_a_p_i_8h"/>
      </node>
      <node id="75070">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="75212">
        <label>pxr/usd/usd/primRange.h</label>
        <link refid="prim_range_8h_source"/>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75386">
        <label>pxr/imaging/hd/changeTracker.h</label>
        <link refid="change_tracker_8h_source"/>
        <childnode refid="75387" relation="include">
        </childnode>
        <childnode refid="75324" relation="include">
        </childnode>
        <childnode refid="75400" relation="include">
        </childnode>
        <childnode refid="75336" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75171">
        <label>pxr/usd/usdGeom/xformable.h</label>
        <link refid="xformable_8h"/>
        <childnode refid="75172" relation="include">
        </childnode>
        <childnode refid="75199" relation="include">
        </childnode>
        <childnode refid="75202" relation="include">
        </childnode>
        <childnode refid="75169" relation="include">
        </childnode>
        <childnode refid="75130" relation="include">
        </childnode>
        <childnode refid="75047" relation="include">
        </childnode>
        <childnode refid="75042" relation="include">
        </childnode>
        <childnode refid="75155" relation="include">
        </childnode>
        <childnode refid="75203" relation="include">
        </childnode>
        <childnode refid="75153" relation="include">
        </childnode>
        <childnode refid="75204" relation="include">
        </childnode>
        <childnode refid="75116" relation="include">
        </childnode>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75303">
        <label>pxr/usd/sdf/listEditor.h</label>
        <link refid="list_editor_8h_source"/>
        <childnode refid="75304" relation="include">
        </childnode>
        <childnode refid="75306" relation="include">
        </childnode>
      </node>
      <node id="75178">
        <label>pxr/usd/usdGeom/cylinder.h</label>
        <link refid="usd_2usd_geom_2cylinder_8h"/>
      </node>
      <node id="75395">
        <label>pxr/imaging/hdEmbree/renderDelegate.h</label>
        <link refid="mbree_2render_delegate_8h_source"/>
      </node>
      <node id="75582">
        <label>pxr/base/work/dispatcher.h</label>
        <link refid="dispatcher_8h"/>
        <childnode refid="75580" relation="include">
        </childnode>
        <childnode refid="75583" relation="include">
        </childnode>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75168" relation="include">
        </childnode>
        <childnode refid="75377" relation="include">
        </childnode>
      </node>
      <node id="75367">
        <label>pxr/imaging/hdx/oitVolumeRenderTask.h</label>
        <link refid="oit_volume_render_task_8h_source"/>
      </node>
      <node id="75488">
        <label>pxr/imaging/hdsi/coordSysPrimSceneIndex.h</label>
        <link refid="coord_sys_prim_scene_index_8h_source"/>
      </node>
      <node id="75414">
        <label>pxr/imaging/hdSt/simpleLightingShader.h</label>
        <link refid="simple_lighting_shader_8h_source"/>
      </node>
      <node id="75426">
        <label>pxr/usd/ndr/discoveryPlugin.h</label>
        <link refid="ndr_2discovery_plugin_8h_source"/>
        <childnode refid="75427" relation="include">
        </childnode>
        <childnode refid="75428" relation="include">
        </childnode>
        <childnode refid="75430" relation="include">
        </childnode>
        <childnode refid="75431" relation="include">
        </childnode>
      </node>
      <node id="75323">
        <label>pxr/imaging/hd/dirtyList.h</label>
        <link refid="dirty_list_8h_source"/>
        <childnode refid="75324" relation="include">
        </childnode>
      </node>
      <node id="75049">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="75360">
        <label>pxr/imaging/hdx/pickFromRenderBufferTask.h</label>
        <link refid="pick_from_render_buffer_task_8h_source"/>
      </node>
      <node id="75446">
        <label>pxr/usd/sdf/declareSpec.h</label>
        <link refid="declare_spec_8h_source"/>
        <childnode refid="75299" relation="include">
        </childnode>
        <childnode refid="75296" relation="include">
        </childnode>
        <childnode refid="75298" relation="include">
        </childnode>
        <childnode refid="75297" relation="include">
        </childnode>
        <childnode refid="75300" relation="include">
        </childnode>
        <childnode refid="75309" relation="include">
        </childnode>
        <childnode refid="75301" relation="include">
        </childnode>
        <childnode refid="75302" relation="include">
        </childnode>
      </node>
      <node id="75116">
        <label>pxr/usdImaging/usdImaging/dataSourcePrim.h</label>
        <link refid="data_source_prim_8h_source"/>
        <childnode refid="75117" relation="include">
        </childnode>
        <childnode refid="75118" relation="include">
        </childnode>
        <childnode refid="75126" relation="include">
        </childnode>
        <childnode refid="75115" relation="include">
        </childnode>
        <childnode refid="75127" relation="include">
        </childnode>
        <childnode refid="75128" relation="include">
        </childnode>
      </node>
      <node id="75410">
        <label>pxr/imaging/hdSt/shaderCode.h</label>
        <link refid="shader_code_8h_source"/>
        <childnode refid="75411" relation="include">
        </childnode>
        <childnode refid="75412" relation="include">
        </childnode>
        <childnode refid="75415" relation="include">
        </childnode>
        <childnode refid="75416" relation="include">
        </childnode>
        <childnode refid="75417" relation="include">
        </childnode>
      </node>
      <node id="75315">
        <label>pxr/base/trace/aggregateNode.h</label>
        <link refid="aggregate_node_8h_source"/>
        <childnode refid="75316" relation="include">
        </childnode>
        <childnode refid="75317" relation="include">
        </childnode>
      </node>
      <node id="75136">
        <label>pxr/usd/usdLux/shapingAPI.h</label>
        <link refid="shaping_a_p_i_8h"/>
      </node>
      <node id="75028">
        <label>pxr/usd/pcp/cache.h</label>
        <link refid="pcp_2cache_8h_source"/>
        <childnode refid="75029" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
      </node>
      <node id="75211">
        <label>pxr/usd/usd/primCompositionQuery.h</label>
        <link refid="prim_composition_query_8h"/>
      </node>
      <node id="75452">
        <label>pxr/usd/usd/usdFileFormat.h</label>
        <link refid="usd_file_format_8h_source"/>
      </node>
      <node id="75244">
        <label>pxr/usd/usdShade/types.h</label>
        <link refid="usd_2usd_shade_2types_8h_source"/>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75242" relation="include">
        </childnode>
        <childnode refid="75243" relation="include">
        </childnode>
        <childnode refid="75245" relation="include">
        </childnode>
      </node>
      <node id="75375">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="75369" relation="include">
        </childnode>
      </node>
      <node id="75284">
        <label>pxr/usd/pcp/pyUtils.h</label>
        <link refid="usd_2pcp_2py_utils_8h_source"/>
      </node>
      <node id="75420">
        <label>pxr/imaging/hd/resourceRegistry.h</label>
        <link refid="resource_registry_8h_source"/>
        <childnode refid="75324" relation="include">
        </childnode>
        <childnode refid="75407" relation="include">
        </childnode>
      </node>
      <node id="75585">
        <label>pxr/usd/usdUtils/coalescingDiagnosticDelegate.h</label>
        <link refid="coalescing_diagnostic_delegate_8h"/>
      </node>
      <node id="75234">
        <label>pxr/usd/usdShade/shader.h</label>
        <link refid="shader_8h"/>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
      </node>
      <node id="75502">
        <label>pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h</label>
        <link refid="ni_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="75422">
        <label>pxr/base/trace/eventNode.h</label>
        <link refid="event_node_8h_source"/>
        <childnode refid="75423" relation="include">
        </childnode>
      </node>
      <node id="75280">
        <label>pxr/usd/usd/resolver.h</label>
        <link refid="usd_2resolver_8h_source"/>
      </node>
      <node id="75137">
        <label>pxr/usd/usdLux/volumeLightAPI.h</label>
        <link refid="volume_light_a_p_i_8h"/>
      </node>
      <node id="75109">
        <label>pxr/usd/usd/modelAPI.h</label>
        <link refid="model_a_p_i_8h"/>
      </node>
      <node id="75043">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="75492">
        <label>pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h</label>
        <link refid="material_binding_resolving_scene_index_8h_source"/>
      </node>
      <node id="75110">
        <label>pxr/usd/usdGeom/modelAPI.h</label>
        <link refid="eom_2model_a_p_i_8h"/>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75487">
        <label>pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h</label>
        <link refid="generative_procedural_resolving_scene_index_8h_source"/>
      </node>
      <node id="75388">
        <label>pxr/imaging/hd/rendererPlugin.h</label>
        <link refid="renderer_plugin_8h_source"/>
        <childnode refid="75389" relation="include">
        </childnode>
        <childnode refid="75390" relation="include">
        </childnode>
        <childnode refid="75391" relation="include">
        </childnode>
      </node>
      <node id="75279">
        <label>pxr/usd/pcp/iterator.h</label>
        <link refid="usd_2pcp_2iterator_8h_source"/>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75272" relation="include">
        </childnode>
        <childnode refid="75280" relation="include">
        </childnode>
      </node>
      <node id="75091">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="75092" relation="include">
        </childnode>
        <childnode refid="75093" relation="include">
        </childnode>
        <childnode refid="75094" relation="include">
        </childnode>
        <childnode refid="75095" relation="include">
        </childnode>
      </node>
      <node id="75366">
        <label>pxr/imaging/hdx/oitRenderTask.h</label>
        <link refid="oit_render_task_8h_source"/>
      </node>
      <node id="75537">
        <label>pxr/imaging/hdSt/ptexTextureObject.h</label>
        <link refid="ptex_texture_object_8h_source"/>
      </node>
      <node id="75519">
        <label>pxr/imaging/hdPrman/renderTerminalOutputInvalidatingSceneIndexPlugin.h</label>
        <link refid="render_terminal_output_invalidating_scene_index_plugin_8h_source"/>
      </node>
      <node id="75318">
        <label>pxr/base/trace/collector.h</label>
        <link refid="collector_8h_source"/>
        <childnode refid="75319" relation="include">
        </childnode>
      </node>
      <node id="75222">
        <label>pxr/usd/usdPhysics/fixedJoint.h</label>
        <link refid="fixed_joint_8h"/>
      </node>
      <node id="75260">
        <label>pxr/usdImaging/usdImaging/lightAPIAdapter.h</label>
        <link refid="light_a_p_i_adapter_8h_source"/>
      </node>
      <node id="75408">
        <label>pxr/imaging/hdSt/extCompGpuComputationResource.h</label>
        <link refid="ext_comp_gpu_computation_resource_8h_source"/>
        <childnode refid="75409" relation="include">
        </childnode>
      </node>
      <node id="75332">
        <label>pxr/imaging/hdSt/basisCurves.h</label>
        <link refid="imaging_2hd_st_2basis_curves_8h_source"/>
      </node>
      <node id="75201">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="75368">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="75089">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="75536">
        <label>pxr/imaging/hdSt/dynamicUvTextureObject.h</label>
        <link refid="dynamic_uv_texture_object_8h_source"/>
      </node>
      <node id="75150">
        <label>pxr/usd/usdShade/connectableAPI.h</label>
        <link refid="connectable_a_p_i_8h"/>
        <childnode refid="75151" relation="include">
        </childnode>
        <childnode refid="75152" relation="include">
        </childnode>
        <childnode refid="75126" relation="include">
        </childnode>
      </node>
      <node id="75371">
        <label>pxr/imaging/hdx/shadowTask.h</label>
        <link refid="shadow_task_8h_source"/>
        <childnode refid="75369" relation="include">
        </childnode>
      </node>
      <node id="75270">
        <label>pxr/usd/usd/resolveTarget.h</label>
        <link refid="resolve_target_8h_source"/>
        <childnode refid="75167" relation="include">
        </childnode>
      </node>
      <node id="75576">
        <label>pxr/base/tf/errorMark.h</label>
        <link refid="error_mark_8h"/>
        <childnode refid="75577" relation="include">
        </childnode>
        <childnode refid="75580" relation="include">
        </childnode>
        <childnode refid="75582" relation="include">
        </childnode>
        <childnode refid="75306" relation="include">
        </childnode>
      </node>
      <node id="75163">
        <label>pxr/usd/usd/collectionPredicateLibrary.h</label>
        <link refid="collection_predicate_library_8h"/>
      </node>
      <node id="75156">
        <label>pxr/usd/usdSkel/bindingAPI.h</label>
        <link refid="binding_a_p_i_8h"/>
      </node>
      <node id="75112">
        <label>pxr/usd/usdGeom/primvarsAPI.h</label>
        <link refid="primvars_a_p_i_8h"/>
        <childnode refid="75113" relation="include">
        </childnode>
        <childnode refid="75114" relation="include">
        </childnode>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75399">
        <label>pxr/imaging/hdSt/renderParam.h</label>
        <link refid="hd_st_2render_param_8h_source"/>
      </node>
      <node id="75187">
        <label>pxr/usd/usdGeom/nurbsPatch.h</label>
        <link refid="nurbs_patch_8h"/>
      </node>
      <node id="75273">
        <label>pxr/usd/pcp/targetIndex.h</label>
        <link refid="target_index_8h_source"/>
      </node>
      <node id="75013">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="75014" relation="include">
        </childnode>
        <childnode refid="75020" relation="include">
        </childnode>
        <childnode refid="75542" relation="include">
        </childnode>
        <childnode refid="75543" relation="include">
        </childnode>
        <childnode refid="75544" relation="include">
        </childnode>
        <childnode refid="75546" relation="include">
        </childnode>
        <childnode refid="75551" relation="include">
        </childnode>
        <childnode refid="75549" relation="include">
        </childnode>
        <childnode refid="75552" relation="include">
        </childnode>
        <childnode refid="75569" relation="include">
        </childnode>
        <childnode refid="75572" relation="include">
        </childnode>
        <childnode refid="75591" relation="include">
        </childnode>
        <childnode refid="75315" relation="include">
        </childnode>
        <childnode refid="75318" relation="include">
        </childnode>
        <childnode refid="75422" relation="include">
        </childnode>
        <childnode refid="75423" relation="include">
        </childnode>
        <childnode refid="75477" relation="include">
        </childnode>
        <childnode refid="75478" relation="include">
        </childnode>
      </node>
      <node id="75223">
        <label>pxr/usd/usdPhysics/prismaticJoint.h</label>
        <link refid="prismatic_joint_8h"/>
      </node>
      <node id="75390">
        <label>pxr/imaging/hdPrmanLoader/rendererPlugin.h</label>
        <link refid="rman_loader_2renderer_plugin_8h_source"/>
      </node>
      <node id="75354">
        <label>pxr/imaging/hd/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="75352" relation="include">
        </childnode>
        <childnode refid="75355" relation="include">
        </childnode>
        <childnode refid="75356" relation="include">
        </childnode>
        <childnode refid="75357" relation="include">
        </childnode>
        <childnode refid="75358" relation="include">
        </childnode>
        <childnode refid="75359" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75421">
        <label>pxr/imaging/hdSt/bufferArrayRegistry.h</label>
        <link refid="buffer_array_registry_8h_source"/>
        <childnode refid="75407" relation="include">
        </childnode>
      </node>
      <node id="75080">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="75081" relation="include">
        </childnode>
        <childnode refid="75082" relation="include">
        </childnode>
        <childnode refid="75083" relation="include">
        </childnode>
        <childnode refid="75084" relation="include">
        </childnode>
        <childnode refid="75085" relation="include">
        </childnode>
        <childnode refid="75086" relation="include">
        </childnode>
        <childnode refid="75087" relation="include">
        </childnode>
        <childnode refid="75088" relation="include">
        </childnode>
        <childnode refid="75089" relation="include">
        </childnode>
        <childnode refid="75090" relation="include">
        </childnode>
      </node>
      <node id="75020">
        <label>pxr/base/tf/declarePtrs.h</label>
        <link refid="declare_ptrs_8h"/>
        <childnode refid="75021" relation="include">
        </childnode>
        <childnode refid="75314" relation="include">
        </childnode>
        <childnode refid="75014" relation="include">
        </childnode>
        <childnode refid="75315" relation="include">
        </childnode>
        <childnode refid="75318" relation="include">
        </childnode>
        <childnode refid="75422" relation="include">
        </childnode>
        <childnode refid="75423" relation="include">
        </childnode>
        <childnode refid="75317" relation="include">
        </childnode>
        <childnode refid="75424" relation="include">
        </childnode>
        <childnode refid="75425" relation="include">
        </childnode>
        <childnode refid="75426" relation="include">
        </childnode>
        <childnode refid="75028" relation="include">
        </childnode>
        <childnode refid="75432" relation="include">
        </childnode>
        <childnode refid="75433" relation="include">
        </childnode>
        <childnode refid="75434" relation="include">
        </childnode>
        <childnode refid="75435" relation="include">
        </childnode>
        <childnode refid="75271" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75436" relation="include">
        </childnode>
        <childnode refid="75437" relation="include">
        </childnode>
        <childnode refid="75438" relation="include">
        </childnode>
        <childnode refid="75439" relation="include">
        </childnode>
        <childnode refid="75447" relation="include">
        </childnode>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75455" relation="include">
        </childnode>
        <childnode refid="75296" relation="include">
        </childnode>
        <childnode refid="75298" relation="include">
        </childnode>
        <childnode refid="75162" relation="include">
        </childnode>
        <childnode refid="75469" relation="include">
        </childnode>
        <childnode refid="75282" relation="include">
        </childnode>
        <childnode refid="75166" relation="include">
        </childnode>
        <childnode refid="75290" relation="include">
        </childnode>
        <childnode refid="75265" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75465" relation="include">
        </childnode>
        <childnode refid="75450" relation="include">
        </childnode>
        <childnode refid="75254" relation="include">
        </childnode>
        <childnode refid="75255" relation="include">
        </childnode>
        <childnode refid="75466" relation="include">
        </childnode>
        <childnode refid="75474" relation="include">
        </childnode>
        <childnode refid="75475" relation="include">
        </childnode>
        <childnode refid="75476" relation="include">
        </childnode>
        <childnode refid="75477" relation="include">
        </childnode>
        <childnode refid="75478" relation="include">
        </childnode>
        <childnode refid="75479" relation="include">
        </childnode>
        <childnode refid="75480" relation="include">
        </childnode>
        <childnode refid="75509" relation="include">
        </childnode>
        <childnode refid="75528" relation="include">
        </childnode>
        <childnode refid="75531" relation="include">
        </childnode>
        <childnode refid="75532" relation="include">
        </childnode>
        <childnode refid="75533" relation="include">
        </childnode>
        <childnode refid="75534" relation="include">
        </childnode>
        <childnode refid="75416" relation="include">
        </childnode>
        <childnode refid="75414" relation="include">
        </childnode>
        <childnode refid="75535" relation="include">
        </childnode>
        <childnode refid="75361" relation="include">
        </childnode>
        <childnode refid="75359" relation="include">
        </childnode>
        <childnode refid="75371" relation="include">
        </childnode>
        <childnode refid="75372" relation="include">
        </childnode>
        <childnode refid="75540" relation="include">
        </childnode>
        <childnode refid="75541" relation="include">
        </childnode>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75526" relation="include">
        </childnode>
        <childnode refid="75353" relation="include">
        </childnode>
      </node>
      <node id="75051">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="75018">
        <label>pxr/imaging/hd/sceneIndexPluginRegistry.h</label>
        <link refid="scene_index_plugin_registry_8h_source"/>
      </node>
      <node id="75204">
        <label>pxr/usd/usdVol/fieldBase.h</label>
        <link refid="field_base_8h"/>
        <childnode refid="75205" relation="include">
        </childnode>
      </node>
      <node id="75141">
        <label>pxr/usd/usdPhysics/driveAPI.h</label>
        <link refid="drive_a_p_i_8h"/>
      </node>
      <node id="75075">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="75170">
        <label>pxr/usd/usdGeom/xformOp.h</label>
        <link refid="xform_op_8h"/>
        <childnode refid="75171" relation="include">
        </childnode>
        <childnode refid="75130" relation="include">
        </childnode>
      </node>
      <node id="75533">
        <label>pxr/imaging/hd/utils.h</label>
        <link refid="imaging_2hd_2utils_8h_source"/>
      </node>
      <node id="75233">
        <label>pxr/usd/usdShade/nodeGraph.h</label>
        <link refid="node_graph_8h"/>
        <childnode refid="75151" relation="include">
        </childnode>
      </node>
      <node id="75132">
        <label>pxr/usd/usdLux/lightListAPI.h</label>
        <link refid="light_list_a_p_i_8h"/>
      </node>
      <node id="75034">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="75035" relation="include">
        </childnode>
        <childnode refid="75047" relation="include">
        </childnode>
        <childnode refid="75049" relation="include">
        </childnode>
        <childnode refid="75050" relation="include">
        </childnode>
        <childnode refid="75051" relation="include">
        </childnode>
        <childnode refid="75052" relation="include">
        </childnode>
        <childnode refid="75107" relation="include">
        </childnode>
        <childnode refid="75108" relation="include">
        </childnode>
      </node>
      <node id="75478">
        <label>pxr/imaging/glf/texture.h</label>
        <link refid="glf_2texture_8h"/>
        <childnode refid="75475" relation="include">
        </childnode>
      </node>
      <node id="75501">
        <label>pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h</label>
        <link refid="extent_resolving_scene_index_8h_source"/>
      </node>
      <node id="75024">
        <label>pxr/usd/sdf/childrenPolicies.h</label>
        <link refid="children_policies_8h_source"/>
        <childnode refid="75025" relation="include">
        </childnode>
      </node>
      <node id="75525">
        <label>pxr/imaging/hdGp/generativeProceduralPlugin.h</label>
        <link refid="generative_procedural_plugin_8h_source"/>
        <childnode refid="75019" relation="include">
        </childnode>
      </node>
      <node id="75541">
        <label>pxr/usdImaging/usdImaging/dataSourceStage.h</label>
        <link refid="data_source_stage_8h_source"/>
      </node>
      <node id="75342">
        <label>pxr/imaging/hdSt/volume.h</label>
        <link refid="imaging_2hd_st_2volume_8h_source"/>
      </node>
      <node id="75289">
        <label>pxr/usd/usd/primDefinition.h</label>
        <link refid="prim_definition_8h_source"/>
        <childnode refid="75290" relation="include">
        </childnode>
        <childnode refid="75291" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
      </node>
      <node id="75164">
        <label>pxr/usd/usd/notice.h</label>
        <link refid="usd_2usd_2notice_8h_source"/>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75165" relation="include">
        </childnode>
      </node>
      <node id="75032">
        <label>pxr/usd/usd/clipsAPI.h</label>
        <link refid="clips_a_p_i_8h"/>
        <childnode refid="75033" relation="include">
        </childnode>
      </node>
      <node id="75523">
        <label>pxr/imaging/hdSt/nurbsApproximatingSceneIndexPlugin.h</label>
        <link refid="nurbs_approximating_scene_index_plugin_8h_source"/>
      </node>
      <node id="75092">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="75087">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="75522">
        <label>pxr/imaging/hdSt/implicitSurfaceSceneIndexPlugin.h</label>
        <link refid="implicit_surface_scene_index_plugin_8h_source"/>
      </node>
      <node id="75316">
        <label>pxr/base/trace/aggregateTree.h</label>
        <link refid="aggregate_tree_8h_source"/>
      </node>
      <node id="75313">
        <label>pxr/usd/usdUtils/stitch.h</label>
        <link refid="stitch_8h"/>
      </node>
      <node id="75496">
        <label>pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h</label>
        <link refid="prim_type_notice_batching_scene_index_8h"/>
      </node>
      <node id="75147">
        <label>pxr/usd/usdPhysics/rigidBodyAPI.h</label>
        <link refid="rigid_body_a_p_i_8h"/>
      </node>
      <node id="75484">
        <label>pxr/imaging/hd/mergingSceneIndex.h</label>
        <link refid="merging_scene_index_8h_source"/>
        <childnode refid="75324" relation="include">
        </childnode>
      </node>
      <node id="75343">
        <label>pxr/imaging/hdPrman/cone.h</label>
        <link refid="imaging_2hd_prman_2cone_8h_source"/>
      </node>
      <node id="75081">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="75103">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="75111">
        <label>pxr/usd/usdGeom/motionAPI.h</label>
        <link refid="motion_a_p_i_8h"/>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75586">
        <label>pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h</label>
        <link refid="conditional_abort_diagnostic_delegate_8h_source"/>
      </node>
      <node id="75463">
        <label>pxr/usd/usdSkel/animMapper.h</label>
        <link refid="anim_mapper_8h"/>
        <childnode refid="75255" relation="include">
        </childnode>
        <childnode refid="75241" relation="include">
        </childnode>
      </node>
      <node id="75184">
        <label>pxr/usd/usdGeom/hermiteCurves.h</label>
        <link refid="hermite_curves_8h"/>
      </node>
      <node id="75046">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="75380">
        <label>pxr/imaging/hdx/visualizeAovTask.h</label>
        <link refid="visualize_aov_task_8h_source"/>
      </node>
      <node id="75281">
        <label>pxr/usd/usd/editTarget.h</label>
        <link refid="edit_target_8h_source"/>
        <childnode refid="75282" relation="include">
        </childnode>
        <childnode refid="75283" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75253" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
      </node>
      <node id="75225">
        <label>pxr/usd/usdPhysics/sphericalJoint.h</label>
        <link refid="spherical_joint_8h"/>
      </node>
      <node id="75202">
        <label>pxr/usd/usdGeom/xform.h</label>
        <link refid="xform_8h"/>
      </node>
      <node id="75107">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="75347">
        <label>pxr/imaging/hdPrman/sphere.h</label>
        <link refid="imaging_2hd_prman_2sphere_8h_source"/>
      </node>
      <node id="75230">
        <label>pxr/usd/usdRender/settings.h</label>
        <link refid="settings_8h"/>
      </node>
      <node id="75417">
        <label>pxr/imaging/hdSt/textureBinder.h</label>
        <link refid="texture_binder_8h_source"/>
      </node>
      <node id="75118">
        <label>pxr/usdImaging/usdImaging/dataSourceGprim.h</label>
        <link refid="data_source_gprim_8h_source"/>
        <childnode refid="75119" relation="include">
        </childnode>
        <childnode refid="75120" relation="include">
        </childnode>
        <childnode refid="75121" relation="include">
        </childnode>
        <childnode refid="75122" relation="include">
        </childnode>
        <childnode refid="75123" relation="include">
        </childnode>
        <childnode refid="75124" relation="include">
        </childnode>
        <childnode refid="75125" relation="include">
        </childnode>
      </node>
      <node id="75065">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="75035">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="75036" relation="include">
        </childnode>
        <childnode refid="75042" relation="include">
        </childnode>
      </node>
      <node id="75538">
        <label>pxr/imaging/hdSt/textureHandleRegistry.h</label>
        <link refid="texture_handle_registry_8h_source"/>
      </node>
      <node id="75074">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="75288">
        <label>pxr/usd/sdf/siteUtils.h</label>
        <link refid="site_utils_8h"/>
      </node>
      <node id="75521">
        <label>pxr/imaging/hdSt/dependencySceneIndexPlugin.h</label>
        <link refid="dependency_scene_index_plugin_8h_source"/>
      </node>
      <node id="75565">
        <label>pxr/base/vt/valueFromPython.h</label>
        <link refid="value_from_python_8h"/>
      </node>
      <node id="75372">
        <label>pxr/imaging/hdx/simpleLightTask.h</label>
        <link refid="simple_light_task_8h_source"/>
      </node>
      <node id="75290">
        <label>pxr/usd/usd/primData.h</label>
        <link refid="prim_data_8h"/>
        <childnode refid="75161" relation="include">
        </childnode>
      </node>
      <node id="75040">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="75350">
        <label>pxr/imaging/hd/task.h</label>
        <link refid="task_8h_source"/>
        <childnode refid="75351" relation="include">
        </childnode>
        <childnode refid="75354" relation="include">
        </childnode>
        <childnode refid="75361" relation="include">
        </childnode>
        <childnode refid="75362" relation="include">
        </childnode>
        <childnode refid="75363" relation="include">
        </childnode>
        <childnode refid="75359" relation="include">
        </childnode>
        <childnode refid="75364" relation="include">
        </childnode>
        <childnode refid="75370" relation="include">
        </childnode>
        <childnode refid="75371" relation="include">
        </childnode>
        <childnode refid="75372" relation="include">
        </childnode>
        <childnode refid="75373" relation="include">
        </childnode>
        <childnode refid="75369" relation="include">
        </childnode>
      </node>
      <node id="75352">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="75245">
        <label>pxr/usd/usdShade/utils.h</label>
        <link refid="usd_2usd_shade_2utils_8h_source"/>
        <childnode refid="75242" relation="include">
        </childnode>
        <childnode refid="75243" relation="include">
        </childnode>
      </node>
      <node id="75292">
        <label>pxr/usd/usd/schemaRegistry.h</label>
        <link refid="schema_registry_8h_source"/>
        <childnode refid="75166" relation="include">
        </childnode>
        <childnode refid="75289" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
      </node>
      <node id="75559">
        <label>pxr/usd/ar/notice.h</label>
        <link refid="usd_2ar_2notice_8h_source"/>
        <childnode refid="75030" relation="include">
        </childnode>
      </node>
      <node id="75019">
        <label>pxr/imaging/hdGp/generativeProceduralPluginRegistry.h</label>
        <link refid="generative_procedural_plugin_registry_8h_source"/>
      </node>
      <node id="75532">
        <label>pxr/imaging/hd/systemSchema.h</label>
        <link refid="system_schema_8h_source"/>
      </node>
      <node id="75498">
        <label>pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h</label>
        <link refid="render_settings_filtering_scene_index_8h_source"/>
      </node>
      <node id="75277">
        <label>pxr/usd/pcp/node.h</label>
        <link refid="pcp_2node_8h_source"/>
        <childnode refid="75275" relation="include">
        </childnode>
        <childnode refid="75268" relation="include">
        </childnode>
        <childnode refid="75278" relation="include">
        </childnode>
        <childnode refid="75276" relation="include">
        </childnode>
        <childnode refid="75279" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75272" relation="include">
        </childnode>
        <childnode refid="75281" relation="include">
        </childnode>
        <childnode refid="75211" relation="include">
        </childnode>
        <childnode refid="75265" relation="include">
        </childnode>
        <childnode refid="75280" relation="include">
        </childnode>
        <childnode refid="75270" relation="include">
        </childnode>
      </node>
      <node id="75301">
        <label>pxr/usd/sdf/variantSetSpec.h</label>
        <link refid="variant_set_spec_8h"/>
      </node>
      <node id="75213">
        <label>pxr/usd/usd/property.h</label>
        <link refid="usd_2property_8h_source"/>
        <childnode refid="75214" relation="include">
        </childnode>
        <childnode refid="75249" relation="include">
        </childnode>
      </node>
      <node id="75083">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="75016">
        <label>pxr/imaging/hf/pluginRegistry.h</label>
        <link refid="plugin_registry_8h_source"/>
        <childnode refid="75017" relation="include">
        </childnode>
        <childnode refid="75018" relation="include">
        </childnode>
        <childnode refid="75019" relation="include">
        </childnode>
      </node>
      <node id="75490">
        <label>pxr/imaging/hdsi/implicitSurfaceSceneIndex.h</label>
        <link refid="implicit_surface_scene_index_8h_source"/>
      </node>
      <node id="75377">
        <label>pxr/imaging/hdx/colorCorrectionTask.h</label>
        <link refid="color_correction_task_8h_source"/>
        <childnode refid="75369" relation="include">
        </childnode>
      </node>
      <node id="75500">
        <label>pxr/usdImaging/usdImaging/drawModeSceneIndex.h</label>
        <link refid="draw_mode_scene_index_8h_source"/>
      </node>
      <node id="75098">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="75182">
        <label>pxr/usd/usdGeom/curves.h</label>
        <link refid="curves_8h"/>
        <childnode refid="75183" relation="include">
        </childnode>
        <childnode refid="75184" relation="include">
        </childnode>
        <childnode refid="75185" relation="include">
        </childnode>
      </node>
      <node id="75162">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="75034" relation="include">
        </childnode>
      </node>
      <node id="75086">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="75320">
        <label>pxr/imaging/hd/perfLog.h</label>
        <link refid="hd_2perf_log_8h_source"/>
        <childnode refid="75321" relation="include">
        </childnode>
        <childnode refid="75406" relation="include">
        </childnode>
        <childnode refid="75324" relation="include">
        </childnode>
        <childnode refid="75420" relation="include">
        </childnode>
        <childnode refid="75332" relation="include">
        </childnode>
        <childnode refid="75421" relation="include">
        </childnode>
        <childnode refid="75336" relation="include">
        </childnode>
        <childnode refid="75339" relation="include">
        </childnode>
      </node>
      <node id="75036">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="75037" relation="include">
        </childnode>
        <childnode refid="75038" relation="include">
        </childnode>
        <childnode refid="75039" relation="include">
        </childnode>
        <childnode refid="75040" relation="include">
        </childnode>
        <childnode refid="75041" relation="include">
        </childnode>
      </node>
      <node id="75438">
        <label>pxr/usd/sdf/data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="75026" relation="include">
        </childnode>
      </node>
      <node id="75135">
        <label>pxr/usd/usdLux/shadowAPI.h</label>
        <link refid="shadow_a_p_i_8h"/>
      </node>
      <node id="75214">
        <label>pxr/usd/usd/attribute.h</label>
        <link refid="attribute_8h_source"/>
        <childnode refid="75167" relation="include">
        </childnode>
        <childnode refid="75215" relation="include">
        </childnode>
        <childnode refid="75239" relation="include">
        </childnode>
        <childnode refid="75240" relation="include">
        </childnode>
        <childnode refid="75170" relation="include">
        </childnode>
        <childnode refid="75242" relation="include">
        </childnode>
        <childnode refid="75243" relation="include">
        </childnode>
        <childnode refid="75244" relation="include">
        </childnode>
        <childnode refid="75245" relation="include">
        </childnode>
        <childnode refid="75246" relation="include">
        </childnode>
        <childnode refid="75241" relation="include">
        </childnode>
        <childnode refid="75247" relation="include">
        </childnode>
        <childnode refid="75208" relation="include">
        </childnode>
        <childnode refid="75248" relation="include">
        </childnode>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
      </node>
      <node id="75044">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="75581">
        <label>pxr/base/work/utils.h</label>
        <link refid="base_2work_2utils_8h"/>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75317">
        <label>pxr/base/trace/reporter.h</label>
        <link refid="reporter_8h_source"/>
      </node>
      <node id="75249">
        <label>pxr/usd/usd/relationship.h</label>
        <link refid="relationship_8h_source"/>
        <childnode refid="75215" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75241" relation="include">
        </childnode>
        <childnode refid="75250" relation="include">
        </childnode>
      </node>
      <node id="75048">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="75450">
        <label>pxr/usd/usd/usdaFileFormat.h</label>
        <link refid="usda_file_format_8h_source"/>
      </node>
      <node id="75473">
        <label>pxr/usd/usdPhysics/metrics.h</label>
        <link refid="usd_physics_2metrics_8h"/>
      </node>
      <node id="75300">
        <label>pxr/usd/sdf/relationshipSpec.h</label>
        <link refid="relationship_spec_8h"/>
        <childnode refid="75289" relation="include">
        </childnode>
      </node>
      <node id="75331">
        <label>pxr/imaging/hdPrman/basisCurves.h</label>
        <link refid="imaging_2hd_prman_2basis_curves_8h_source"/>
      </node>
      <node id="75309">
        <label>pxr/usd/sdf/spec.h</label>
        <link refid="sdf_2spec_8h"/>
        <childnode refid="75023" relation="include">
        </childnode>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75303" relation="include">
        </childnode>
        <childnode refid="75310" relation="include">
        </childnode>
        <childnode refid="75311" relation="include">
        </childnode>
        <childnode refid="75296" relation="include">
        </childnode>
        <childnode refid="75298" relation="include">
        </childnode>
        <childnode refid="75312" relation="include">
        </childnode>
        <childnode refid="75288" relation="include">
        </childnode>
        <childnode refid="75301" relation="include">
        </childnode>
        <childnode refid="75302" relation="include">
        </childnode>
        <childnode refid="75313" relation="include">
        </childnode>
      </node>
      <node id="75551">
        <label>pxr/base/tf/pyPolymorphic.h</label>
        <link refid="py_polymorphic_8h"/>
      </node>
      <node id="75128">
        <label>pxr/usdImaging/usdVolImaging/dataSourceFieldAsset.h</label>
        <link refid="data_source_field_asset_8h_source"/>
      </node>
      <node id="75516">
        <label>pxr/imaging/hdGp/sceneIndexPlugin.h</label>
        <link refid="p_2scene_index_plugin_8h_source"/>
      </node>
      <node id="75193">
        <label>pxr/usd/usdSkel/root.h</label>
        <link refid="root_8h"/>
      </node>
      <node id="75588">
        <label>pxr/base/tf/warning.h</label>
        <link refid="warning_8h_source"/>
        <childnode refid="75575" relation="include">
        </childnode>
      </node>
      <node id="75411">
        <label>pxr/imaging/hdSt/geometricShader.h</label>
        <link refid="geometric_shader_8h_source"/>
      </node>
      <node id="75592">
        <label>pxr/usd/kind/registry.h</label>
        <link refid="usd_2kind_2registry_8h"/>
      </node>
      <node id="75276">
        <label>pxr/usd/pcp/instanceKey.h</label>
        <link refid="instance_key_8h_source"/>
      </node>
      <node id="75145">
        <label>pxr/usd/usdPhysics/materialAPI.h</label>
        <link refid="usd_physics_2material_a_p_i_8h"/>
      </node>
      <node id="75140">
        <label>pxr/usd/usdPhysics/collisionAPI.h</label>
        <link refid="collision_a_p_i_8h"/>
      </node>
      <node id="75271">
        <label>pxr/usd/pcp/layerStack.h</label>
        <link refid="layer_stack_8h"/>
      </node>
      <node id="75353">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="75201" relation="include">
        </childnode>
      </node>
      <node id="75413">
        <label>pxr/imaging/hdSt/fallbackLightingShader.h</label>
        <link refid="fallback_lighting_shader_8h_source"/>
      </node>
      <node id="75461">
        <label>pxr/usd/sdf/childrenUtils.h</label>
        <link refid="children_utils_8h"/>
      </node>
      <node id="75455">
        <label>pxr/usd/sdf/layerStateDelegate.h</label>
        <link refid="layer_state_delegate_8h_source"/>
      </node>
      <node id="75296">
        <label>pxr/usd/sdf/primSpec.h</label>
        <link refid="prim_spec_8h"/>
        <childnode refid="75279" relation="include">
        </childnode>
        <childnode refid="75297" relation="include">
        </childnode>
        <childnode refid="75288" relation="include">
        </childnode>
        <childnode refid="75281" relation="include">
        </childnode>
        <childnode refid="75292" relation="include">
        </childnode>
      </node>
      <node id="75263">
        <label>pxr/usdImaging/usdImaging/dataSourceUsdPrimInfo.h</label>
        <link refid="data_source_usd_prim_info_8h_source"/>
      </node>
      <node id="75168">
        <label>pxr/usd/usdGeom/bboxCache.h</label>
        <link refid="bbox_cache_8h_source"/>
        <childnode refid="75110" relation="include">
        </childnode>
      </node>
      <node id="75108">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
      </node>
      <node id="75209">
        <label>pxr/usd/usd/inherits.h</label>
        <link refid="inherits_8h_source"/>
      </node>
      <node id="75562">
        <label>pxr/base/tf/pyFunction.h</label>
        <link refid="py_function_8h_source"/>
        <childnode refid="75545" relation="include">
        </childnode>
      </node>
      <node id="75102">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="75381">
        <label>pxr/imaging/hd/unitTestDelegate.h</label>
        <link refid="unit_test_delegate_8h_source"/>
        <childnode refid="75352" relation="include">
        </childnode>
      </node>
      <node id="75333">
        <label>pxr/imaging/hd/mesh.h</label>
        <link refid="imaging_2hd_2mesh_8h_source"/>
        <childnode refid="75334" relation="include">
        </childnode>
        <childnode refid="75335" relation="include">
        </childnode>
        <childnode refid="75336" relation="include">
        </childnode>
      </node>
      <node id="75495">
        <label>pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h</label>
        <link refid="pinned_curve_expanding_scene_index_8h_source"/>
      </node>
      <node id="75059">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="75483">
        <label>pxr/imaging/hd/materialFilteringSceneIndexBase.h</label>
        <link refid="material_filtering_scene_index_base_8h_source"/>
      </node>
      <node id="75419">
        <label>pxr/imaging/hdSt/textureObjectRegistry.h</label>
        <link refid="texture_object_registry_8h_source"/>
      </node>
      <node id="75544">
        <label>pxr/base/tf/pyContainerConversions.h</label>
        <link refid="py_container_conversions_8h"/>
        <childnode refid="75545" relation="include">
        </childnode>
      </node>
      <node id="75155">
        <label>pxr/usd/usdLux/pluginLight.h</label>
        <link refid="plugin_light_8h"/>
      </node>
      <node id="75090">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="75058">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="75304">
        <label>pxr/usd/sdf/listEditorProxy.h</label>
        <link refid="list_editor_proxy_8h"/>
        <childnode refid="75025" relation="include">
        </childnode>
        <childnode refid="75305" relation="include">
        </childnode>
      </node>
      <node id="75199">
        <label>pxr/usd/usdGeom/camera.h</label>
        <link refid="usd_2usd_geom_2camera_8h"/>
        <childnode refid="75200" relation="include">
        </childnode>
        <childnode refid="75201" relation="include">
        </childnode>
        <childnode refid="75117" relation="include">
        </childnode>
      </node>
      <node id="75041">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="75255">
        <label>pxr/usd/usdSkel/skeletonQuery.h</label>
        <link refid="skeleton_query_8h"/>
        <childnode refid="75105" relation="include">
        </childnode>
      </node>
      <node id="75071">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="75339">
        <label>pxr/imaging/hdSt/points.h</label>
        <link refid="imaging_2hd_st_2points_8h_source"/>
      </node>
      <node id="75142">
        <label>pxr/usd/usdPhysics/filteredPairsAPI.h</label>
        <link refid="filtered_pairs_a_p_i_8h"/>
      </node>
      <node id="75471">
        <label>pxr/usd/usdGeom/metrics.h</label>
        <link refid="usd_geom_2metrics_8h"/>
      </node>
      <node id="75152">
        <label>pxr/usd/usdShade/shaderDefUtils.h</label>
        <link refid="shader_def_utils_8h_source"/>
      </node>
      <node id="75061">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="75096">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="75456">
        <label>pxr/usd/sdf/layerTree.h</label>
        <link refid="layer_tree_8h"/>
        <childnode refid="75271" relation="include">
        </childnode>
      </node>
      <node id="75575">
        <label>pxr/base/tf/diagnosticMgr.h</label>
        <link refid="diagnostic_mgr_8h"/>
        <childnode refid="75576" relation="include">
        </childnode>
        <childnode refid="75584" relation="include">
        </childnode>
        <childnode refid="75585" relation="include">
        </childnode>
        <childnode refid="75586" relation="include">
        </childnode>
      </node>
      <node id="75217">
        <label>pxr/usd/usdGeom/imageable.h</label>
        <link refid="imageable_8h"/>
        <childnode refid="75110" relation="include">
        </childnode>
        <childnode refid="75218" relation="include">
        </childnode>
        <childnode refid="75219" relation="include">
        </childnode>
        <childnode refid="75171" relation="include">
        </childnode>
        <childnode refid="75220" relation="include">
        </childnode>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75355">
        <label>pxr/imaging/hd/unitTestNullRenderPass.h</label>
        <link refid="unit_test_null_render_pass_8h_source"/>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75149">
        <label>pxr/usd/usdRi/splineAPI.h</label>
        <link refid="spline_a_p_i_8h"/>
      </node>
      <node id="75567">
        <label>pxr/usd/sdf/pyListOp.h</label>
        <link refid="py_list_op_8h_source"/>
      </node>
      <node id="75444">
        <label>pxr/usd/sdf/pyChildrenView.h</label>
        <link refid="py_children_view_8h"/>
      </node>
      <node id="75458">
        <label>pxr/usd/sdf/pySpec.h</label>
        <link refid="py_spec_8h"/>
      </node>
      <node id="75238">
        <label>pxr/usd/usdUI/backdrop.h</label>
        <link refid="backdrop_8h"/>
      </node>
      <node id="75314">
        <label>pxr/base/plug/plugin.h</label>
        <link refid="plugin_8h_source"/>
      </node>
      <node id="75224">
        <label>pxr/usd/usdPhysics/revoluteJoint.h</label>
        <link refid="revolute_joint_8h"/>
      </node>
      <node id="75158">
        <label>pxr/usd/usdUI/sceneGraphPrimAPI.h</label>
        <link refid="scene_graph_prim_a_p_i_8h"/>
      </node>
      <node id="75275">
        <label>pxr/usd/pcp/arc.h</label>
        <link refid="arc_8h_source"/>
      </node>
      <node id="75229">
        <label>pxr/usd/usdRender/product.h</label>
        <link refid="product_8h"/>
      </node>
      <node id="75357">
        <label>pxr/imaging/hdSt/imageShaderRenderPass.h</label>
        <link refid="image_shader_render_pass_8h_source"/>
      </node>
      <node id="75210">
        <label>pxr/usd/usd/payloads.h</label>
        <link refid="payloads_8h_source"/>
      </node>
      <node id="75148">
        <label>pxr/usd/usdRi/materialAPI.h</label>
        <link refid="usd_ri_2material_a_p_i_8h"/>
      </node>
      <node id="75143">
        <label>pxr/usd/usdPhysics/limitAPI.h</label>
        <link refid="limit_a_p_i_8h"/>
      </node>
      <node id="75325">
        <label>pxr/imaging/hd/sceneDelegate.h</label>
        <link refid="scene_delegate_8h_source"/>
        <childnode refid="75326" relation="include">
        </childnode>
        <childnode refid="75327" relation="include">
        </childnode>
        <childnode refid="75329" relation="include">
        </childnode>
        <childnode refid="75349" relation="include">
        </childnode>
        <childnode refid="75350" relation="include">
        </childnode>
        <childnode refid="75381" relation="include">
        </childnode>
        <childnode refid="75382" relation="include">
        </childnode>
        <childnode refid="75348" relation="include">
        </childnode>
        <childnode refid="75383" relation="include">
        </childnode>
        <childnode refid="75369" relation="include">
        </childnode>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75384" relation="include">
        </childnode>
      </node>
      <node id="75563">
        <label>pxr/base/tf/pyOptional.h</label>
        <link refid="py_optional_8h"/>
      </node>
      <node id="75549">
        <label>pxr/base/tf/pyPtrHelpers.h</label>
        <link refid="py_ptr_helpers_8h"/>
        <childnode refid="75550" relation="include">
        </childnode>
      </node>
      <node id="75392">
        <label>pxr/imaging/hd/rendererPluginHandle.h</label>
        <link refid="renderer_plugin_handle_8h_source"/>
        <childnode refid="75393" relation="include">
        </childnode>
      </node>
      <node id="75269">
        <label>pxr/usd/pcp/primIndex.h</label>
        <link refid="prim_index_8h_source"/>
        <childnode refid="75028" relation="include">
        </childnode>
        <childnode refid="75211" relation="include">
        </childnode>
        <childnode refid="75270" relation="include">
        </childnode>
      </node>
      <node id="75037">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="75208">
        <label>pxr/usdImaging/usdImaging/dataSourceAttribute.h</label>
        <link refid="data_source_attribute_8h_source"/>
        <childnode refid="75114" relation="include">
        </childnode>
      </node>
      <node id="75479">
        <label>pxr/imaging/glf/uniformBlock.h</label>
        <link refid="uniform_block_8h"/>
      </node>
      <node id="75526">
        <label>pxr/usdImaging/usdImaging/sceneIndices.h</label>
        <link refid="scene_indices_8h_source"/>
      </node>
      <node id="75451">
        <label>pxr/usd/usd/usdcFileFormat.h</label>
        <link refid="usdc_file_format_8h_source"/>
      </node>
      <node id="75548">
        <label>pxr/base/tf/pyNoticeWrapper.h</label>
        <link refid="py_notice_wrapper_8h_source"/>
      </node>
      <node id="75485">
        <label>pxr/imaging/hd/noticeBatchingSceneIndex.h</label>
        <link refid="notice_batching_scene_index_8h_source"/>
        <childnode refid="75324" relation="include">
        </childnode>
      </node>
      <node id="75470">
        <label>pxr/usd/usd/stageLoadRules.h</label>
        <link refid="stage_load_rules_8h"/>
        <childnode refid="75030" relation="include">
        </childnode>
      </node>
      <node id="75489">
        <label>pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h</label>
        <link refid="ext_computation_primvar_pruning_scene_index_8h_source"/>
      </node>
      <node id="75466">
        <label>pxr/usd/usdUtils/stageCache.h</label>
        <link refid="tils_2stage_cache_8h"/>
      </node>
      <node id="75465">
        <label>pxr/usd/usd/stageCache.h</label>
        <link refid="stage_cache_8h_source"/>
        <childnode refid="75466" relation="include">
        </childnode>
      </node>
      <node id="75183">
        <label>pxr/usd/usdGeom/basisCurves.h</label>
        <link refid="usd_2usd_geom_2basis_curves_8h"/>
        <childnode refid="75119" relation="include">
        </childnode>
      </node>
      <node id="75068">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="75169">
        <label>pxr/usd/usdGeom/xformCache.h</label>
        <link refid="xform_cache_8h_source"/>
        <childnode refid="75168" relation="include">
        </childnode>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75066" relation="include">
        </childnode>
      </node>
      <node id="75079">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="75312">
        <label>pxr/usd/sdf/proxyPolicies.h</label>
        <link refid="proxy_policies_8h"/>
        <childnode refid="75024" relation="include">
        </childnode>
        <childnode refid="75025" relation="include">
        </childnode>
      </node>
      <node id="75045">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="75513">
        <label>pxr/imaging/hd/legacyPrimSceneIndex.h</label>
        <link refid="legacy_prim_scene_index_8h_source"/>
        <childnode refid="75324" relation="include">
        </childnode>
      </node>
      <node id="75515">
        <label>pxr/imaging/hd/sceneIndexPlugin.h</label>
        <link refid="scene_index_plugin_8h_source"/>
        <childnode refid="75516" relation="include">
        </childnode>
        <childnode refid="75517" relation="include">
        </childnode>
        <childnode refid="75518" relation="include">
        </childnode>
        <childnode refid="75519" relation="include">
        </childnode>
        <childnode refid="75520" relation="include">
        </childnode>
        <childnode refid="75521" relation="include">
        </childnode>
        <childnode refid="75522" relation="include">
        </childnode>
        <childnode refid="75523" relation="include">
        </childnode>
      </node>
      <node id="75423">
        <label>pxr/base/trace/eventTree.h</label>
        <link refid="event_tree_8h_source"/>
      </node>
      <node id="75192">
        <label>pxr/usd/usdProc/generativeProcedural.h</label>
        <link refid="usd_2usd_proc_2generative_procedural_8h"/>
      </node>
      <node id="75311">
        <label>pxr/usd/sdf/mapEditProxy.h</label>
        <link refid="map_edit_proxy_8h"/>
        <childnode refid="75025" relation="include">
        </childnode>
      </node>
      <node id="75369">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="75424">
        <label>pxr/base/trace/reporterBase.h</label>
        <link refid="reporter_base_8h_source"/>
        <childnode refid="75317" relation="include">
        </childnode>
      </node>
      <node id="75298">
        <label>pxr/usd/sdf/propertySpec.h</label>
        <link refid="property_spec_8h"/>
        <childnode refid="75279" relation="include">
        </childnode>
        <childnode refid="75272" relation="include">
        </childnode>
        <childnode refid="75299" relation="include">
        </childnode>
        <childnode refid="75300" relation="include">
        </childnode>
        <childnode refid="75288" relation="include">
        </childnode>
        <childnode refid="75289" relation="include">
        </childnode>
        <childnode refid="75213" relation="include">
        </childnode>
      </node>
      <node id="75088">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="75439">
        <label>pxr/usd/sdf/declareHandles.h</label>
        <link refid="declare_handles_8h"/>
        <childnode refid="75028" relation="include">
        </childnode>
        <childnode refid="75432" relation="include">
        </childnode>
        <childnode refid="75440" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75273" relation="include">
        </childnode>
        <childnode refid="75442" relation="include">
        </childnode>
        <childnode refid="75024" relation="include">
        </childnode>
        <childnode refid="75445" relation="include">
        </childnode>
        <childnode refid="75446" relation="include">
        </childnode>
        <childnode refid="75447" relation="include">
        </childnode>
        <childnode refid="75454" relation="include">
        </childnode>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75455" relation="include">
        </childnode>
        <childnode refid="75456" relation="include">
        </childnode>
        <childnode refid="75285" relation="include">
        </childnode>
        <childnode refid="75303" relation="include">
        </childnode>
        <childnode refid="75311" relation="include">
        </childnode>
        <childnode refid="75457" relation="include">
        </childnode>
        <childnode refid="75298" relation="include">
        </childnode>
        <childnode refid="75312" relation="include">
        </childnode>
        <childnode refid="75025" relation="include">
        </childnode>
        <childnode refid="75458" relation="include">
        </childnode>
        <childnode refid="75449" relation="include">
        </childnode>
        <childnode refid="75459" relation="include">
        </childnode>
        <childnode refid="75159" relation="include">
        </childnode>
        <childnode refid="75209" relation="include">
        </childnode>
        <childnode refid="75210" relation="include">
        </childnode>
        <childnode refid="75251" relation="include">
        </childnode>
        <childnode refid="75280" relation="include">
        </childnode>
        <childnode refid="75270" relation="include">
        </childnode>
        <childnode refid="75252" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75465" relation="include">
        </childnode>
        <childnode refid="75253" relation="include">
        </childnode>
        <childnode refid="75467" relation="include">
        </childnode>
        <childnode refid="75107" relation="include">
        </childnode>
        <childnode refid="75266" relation="include">
        </childnode>
        <childnode refid="75267" relation="include">
        </childnode>
        <childnode refid="75468" relation="include">
        </childnode>
        <childnode refid="75313" relation="include">
        </childnode>
        <childnode refid="75033" relation="include">
        </childnode>
      </node>
      <node id="75285">
        <label>pxr/usd/sdf/layerUtils.h</label>
        <link refid="layer_utils_8h"/>
      </node>
      <node id="75341">
        <label>pxr/imaging/hdPrman/volume.h</label>
        <link refid="imaging_2hd_prman_2volume_8h_source"/>
      </node>
      <node id="75082">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="75251">
        <label>pxr/usd/usd/references.h</label>
        <link refid="references_8h_source"/>
        <childnode refid="75215" relation="include">
        </childnode>
      </node>
      <node id="75524">
        <label>pxr/imaging/hdGp/generativeProcedural.h</label>
        <link refid="imaging_2hd_gp_2generative_procedural_8h_source"/>
        <childnode refid="75525" relation="include">
        </childnode>
        <childnode refid="75487" relation="include">
        </childnode>
      </node>
      <node id="75055">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="75542">
        <label>pxr/base/tf/instantiateType.h</label>
        <link refid="instantiate_type_8h_source"/>
      </node>
      <node id="75503">
        <label>pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h</label>
        <link refid="pi_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="75117">
        <label>pxr/usdImaging/usdImaging/dataSourceCamera.h</label>
        <link refid="data_source_camera_8h_source"/>
      </node>
      <node id="75305">
        <label>pxr/usd/sdf/pyListEditorProxy.h</label>
        <link refid="py_list_editor_proxy_8h"/>
      </node>
      <node id="75574">
        <label>pxr/base/tf/error.h</label>
        <link refid="tf_2error_8h"/>
        <childnode refid="75575" relation="include">
        </childnode>
      </node>
      <node id="75393">
        <label>pxr/imaging/hd/pluginRenderDelegateUniqueHandle.h</label>
        <link refid="plugin_render_delegate_unique_handle_8h_source"/>
        <childnode refid="75353" relation="include">
        </childnode>
      </node>
      <node id="75407">
        <label>pxr/imaging/hdSt/resourceRegistry.h</label>
        <link refid="t_2resource_registry_8h_source"/>
        <childnode refid="75408" relation="include">
        </childnode>
        <childnode refid="75348" relation="include">
        </childnode>
        <childnode refid="75410" relation="include">
        </childnode>
        <childnode refid="75418" relation="include">
        </childnode>
      </node>
      <node id="75047">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="75048" relation="include">
        </childnode>
      </node>
      <node id="75278">
        <label>pxr/usd/pcp/dynamicFileFormatContext.h</label>
        <link refid="dynamic_file_format_context_8h_source"/>
      </node>
      <node id="75468">
        <label>pxr/usd/usdUtils/pipeline.h</label>
        <link refid="pipeline_8h"/>
      </node>
      <node id="75401">
        <label>pxr/imaging/hdSt/drawTarget.h</label>
        <link refid="hd_st_2draw_target_8h_source"/>
      </node>
      <node id="75480">
        <label>pxr/imaging/hd/filteringSceneIndex.h</label>
        <link refid="filtering_scene_index_8h_source"/>
        <childnode refid="75481" relation="include">
        </childnode>
        <childnode refid="75482" relation="include">
        </childnode>
        <childnode refid="75483" relation="include">
        </childnode>
        <childnode refid="75484" relation="include">
        </childnode>
        <childnode refid="75485" relation="include">
        </childnode>
        <childnode refid="75486" relation="include">
        </childnode>
        <childnode refid="75487" relation="include">
        </childnode>
        <childnode refid="75488" relation="include">
        </childnode>
        <childnode refid="75489" relation="include">
        </childnode>
        <childnode refid="75490" relation="include">
        </childnode>
        <childnode refid="75491" relation="include">
        </childnode>
        <childnode refid="75492" relation="include">
        </childnode>
        <childnode refid="75493" relation="include">
        </childnode>
        <childnode refid="75494" relation="include">
        </childnode>
        <childnode refid="75495" relation="include">
        </childnode>
        <childnode refid="75496" relation="include">
        </childnode>
        <childnode refid="75497" relation="include">
        </childnode>
        <childnode refid="75498" relation="include">
        </childnode>
        <childnode refid="75499" relation="include">
        </childnode>
        <childnode refid="75500" relation="include">
        </childnode>
        <childnode refid="75501" relation="include">
        </childnode>
        <childnode refid="75502" relation="include">
        </childnode>
        <childnode refid="75503" relation="include">
        </childnode>
        <childnode refid="75504" relation="include">
        </childnode>
        <childnode refid="75505" relation="include">
        </childnode>
        <childnode refid="75506" relation="include">
        </childnode>
        <childnode refid="75507" relation="include">
        </childnode>
        <childnode refid="75508" relation="include">
        </childnode>
      </node>
      <node id="75262">
        <label>pxr/usdImaging/usdImaging/dataSourceStageGlobals.h</label>
        <link refid="data_source_stage_globals_8h_source"/>
        <childnode refid="75208" relation="include">
        </childnode>
        <childnode refid="75119" relation="include">
        </childnode>
        <childnode refid="75117" relation="include">
        </childnode>
        <childnode refid="75118" relation="include">
        </childnode>
        <childnode refid="75126" relation="include">
        </childnode>
        <childnode refid="75120" relation="include">
        </childnode>
        <childnode refid="75123" relation="include">
        </childnode>
        <childnode refid="75116" relation="include">
        </childnode>
        <childnode refid="75114" relation="include">
        </childnode>
        <childnode refid="75250" relation="include">
        </childnode>
        <childnode refid="75127" relation="include">
        </childnode>
        <childnode refid="75124" relation="include">
        </childnode>
        <childnode refid="75125" relation="include">
        </childnode>
        <childnode refid="75165" relation="include">
        </childnode>
        <childnode refid="75128" relation="include">
        </childnode>
      </node>
      <node id="75232">
        <label>pxr/usd/usdRender/var.h</label>
        <link refid="var_8h"/>
      </node>
      <node id="75248">
        <label>pxr/usdImaging/usdImaging/dataSourceAttributeColorSpace.h</label>
        <link refid="data_source_attribute_color_space_8h_source"/>
      </node>
      <node id="75078">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="75365">
        <label>pxr/imaging/hdx/renderTask.h</label>
        <link refid="render_task_8h_source"/>
        <childnode refid="75366" relation="include">
        </childnode>
        <childnode refid="75367" relation="include">
        </childnode>
      </node>
      <node id="75494">
        <label>pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h</label>
        <link refid="nurbs_approximating_scene_index_8h_source"/>
      </node>
      <node id="75319">
        <label>pxr/base/trace/trace.h</label>
        <link refid="trace_8h"/>
        <childnode refid="75166" relation="include">
        </childnode>
        <childnode refid="75320" relation="include">
        </childnode>
      </node>
      <node id="75508">
        <label>pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h</label>
        <link refid="unloaded_draw_mode_scene_index_8h_source"/>
      </node>
      <node id="75239">
        <label>pxr/usd/usdGeom/constraintTarget.h</label>
        <link refid="constraint_target_8h_source"/>
        <childnode refid="75110" relation="include">
        </childnode>
      </node>
      <node id="75063">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="75064" relation="include">
        </childnode>
        <childnode refid="75065" relation="include">
        </childnode>
      </node>
      <node id="75076">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="75146">
        <label>pxr/usd/usdPhysics/meshCollisionAPI.h</label>
        <link refid="mesh_collision_a_p_i_8h"/>
      </node>
      <node id="75026">
        <label>pxr/usd/sdf/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="75027" relation="include">
        </childnode>
        <childnode refid="75274" relation="include">
        </childnode>
        <childnode refid="75285" relation="include">
        </childnode>
        <childnode refid="75286" relation="include">
        </childnode>
        <childnode refid="75287" relation="include">
        </childnode>
        <childnode refid="75288" relation="include">
        </childnode>
        <childnode refid="75281" relation="include">
        </childnode>
        <childnode refid="75289" relation="include">
        </childnode>
        <childnode refid="75292" relation="include">
        </childnode>
        <childnode refid="75196" relation="include">
        </childnode>
        <childnode refid="75293" relation="include">
        </childnode>
        <childnode refid="75295" relation="include">
        </childnode>
      </node>
      <node id="75453">
        <label>pxr/usd/usd/usdzFileFormat.h</label>
        <link refid="usdz_file_format_8h_source"/>
      </node>
      <node id="75474">
        <label>pxr/imaging/garch/glPlatformDebugContext.h</label>
        <link refid="gl_platform_debug_context_8h_source"/>
      </node>
      <node id="75186">
        <label>pxr/usd/usdGeom/mesh.h</label>
        <link refid="usd_2usd_geom_2mesh_8h"/>
        <childnode refid="75120" relation="include">
        </childnode>
      </node>
      <node id="75123">
        <label>pxr/usdImaging/usdImaging/dataSourcePoints.h</label>
        <link refid="data_source_points_8h_source"/>
      </node>
      <node id="75591">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="75572" relation="include">
        </childnode>
        <childnode refid="75439" relation="include">
        </childnode>
      </node>
      <node id="75384">
        <label>pxr/usdImaging/usdImaging/primvarDescCache.h</label>
        <link refid="primvar_desc_cache_8h"/>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
      </node>
      <node id="75459">
        <label>pxr/usd/sdf/types.h</label>
        <link refid="usd_2sdf_2types_8h"/>
        <childnode refid="75432" relation="include">
        </childnode>
        <childnode refid="75268" relation="include">
        </childnode>
        <childnode refid="75277" relation="include">
        </childnode>
        <childnode refid="75436" relation="include">
        </childnode>
        <childnode refid="75437" relation="include">
        </childnode>
        <childnode refid="75023" relation="include">
        </childnode>
        <childnode refid="75299" relation="include">
        </childnode>
        <childnode refid="75460" relation="include">
        </childnode>
        <childnode refid="75024" relation="include">
        </childnode>
        <childnode refid="75461" relation="include">
        </childnode>
        <childnode refid="75445" relation="include">
        </childnode>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75455" relation="include">
        </childnode>
        <childnode refid="75296" relation="include">
        </childnode>
        <childnode refid="75298" relation="include">
        </childnode>
        <childnode refid="75300" relation="include">
        </childnode>
        <childnode refid="75022" relation="include">
        </childnode>
        <childnode refid="75308" relation="include">
        </childnode>
        <childnode refid="75309" relation="include">
        </childnode>
        <childnode refid="75462" relation="include">
        </childnode>
        <childnode refid="75301" relation="include">
        </childnode>
        <childnode refid="75214" relation="include">
        </childnode>
        <childnode refid="75290" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75138" relation="include">
        </childnode>
        <childnode refid="75463" relation="include">
        </childnode>
        <childnode refid="75464" relation="include">
        </childnode>
        <childnode refid="75346" relation="include">
        </childnode>
      </node>
      <node id="75231">
        <label>pxr/usd/usdRender/spec.h</label>
        <link refid="usd_render_2spec_8h"/>
      </node>
      <node id="75442">
        <label>pxr/usd/sdf/children.h</label>
        <link refid="children_8h_source"/>
        <childnode refid="75443" relation="include">
        </childnode>
      </node>
      <node id="75406">
        <label>pxr/imaging/hd/instanceRegistry.h</label>
        <link refid="instance_registry_8h_source"/>
        <childnode refid="75407" relation="include">
        </childnode>
        <childnode refid="75419" relation="include">
        </childnode>
      </node>
      <node id="75237">
        <label>pxr/usd/usdSkel/blendShapeQuery.h</label>
        <link refid="blend_shape_query_8h"/>
        <childnode refid="75105" relation="include">
        </childnode>
      </node>
      <node id="75180">
        <label>pxr/usd/usdGeom/plane.h</label>
        <link refid="usd_2usd_geom_2plane_8h"/>
      </node>
      <node id="75172">
        <label>pxr/usd/usdGeom/boundable.h</label>
        <link refid="boundable_8h"/>
        <childnode refid="75173" relation="include">
        </childnode>
        <childnode refid="75191" relation="include">
        </childnode>
        <childnode refid="75036" relation="include">
        </childnode>
        <childnode refid="75192" relation="include">
        </childnode>
        <childnode refid="75193" relation="include">
        </childnode>
        <childnode refid="75194" relation="include">
        </childnode>
        <childnode refid="75116" relation="include">
        </childnode>
      </node>
      <node id="75560">
        <label>pxr/base/tf/pyAnnotatedBoolResult.h</label>
        <link refid="py_annotated_bool_result_8h_source"/>
      </node>
      <node id="75547">
        <label>pxr/base/tf/pyObjectFinder.h</label>
        <link refid="py_object_finder_8h_source"/>
        <childnode refid="75548" relation="include">
        </childnode>
        <childnode refid="75549" relation="include">
        </childnode>
      </node>
      <node id="75504">
        <label>pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h</label>
        <link refid="render_settings_flattening_scene_index_8h_source"/>
      </node>
      <node id="75404">
        <label>pxr/imaging/hdSt/drawItemInstance.h</label>
        <link refid="draw_item_instance_8h_source"/>
        <childnode refid="75405" relation="include">
        </childnode>
        <childnode refid="75357" relation="include">
        </childnode>
      </node>
      <node id="75122">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsPatch.h</label>
        <link refid="data_source_nurbs_patch_8h_source"/>
      </node>
      <node id="75334">
        <label>pxr/imaging/hdEmbree/mesh.h</label>
        <link refid="imaging_2hd_embree_2mesh_8h_source"/>
      </node>
      <node id="75448">
        <label>pxr/usd/pcp/dynamicFileFormatInterface.h</label>
        <link refid="dynamic_file_format_interface_8h_source"/>
      </node>
      <node id="75159">
        <label>pxr/usd/usd/flattenUtils.h</label>
        <link refid="flatten_utils_8h"/>
      </node>
      <node id="75491">
        <label>pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h</label>
        <link refid="legacy_display_style_override_scene_index_8h_source"/>
      </node>
      <node id="75445">
        <label>pxr/usd/sdf/copyUtils.h</label>
        <link refid="copy_utils_8h"/>
      </node>
      <node id="75412">
        <label>pxr/imaging/hdSt/lightingShader.h</label>
        <link refid="lighting_shader_8h_source"/>
        <childnode refid="75413" relation="include">
        </childnode>
        <childnode refid="75414" relation="include">
        </childnode>
      </node>
      <node id="75206">
        <label>pxr/usd/usdVol/field3DAsset.h</label>
        <link refid="field3_d_asset_8h"/>
      </node>
      <node id="75057">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="75058" relation="include">
        </childnode>
        <childnode refid="75059" relation="include">
        </childnode>
        <childnode refid="75060" relation="include">
        </childnode>
        <childnode refid="75061" relation="include">
        </childnode>
        <childnode refid="75062" relation="include">
        </childnode>
        <childnode refid="75063" relation="include">
        </childnode>
        <childnode refid="75066" relation="include">
        </childnode>
        <childnode refid="75070" relation="include">
        </childnode>
        <childnode refid="75079" relation="include">
        </childnode>
        <childnode refid="75080" relation="include">
        </childnode>
        <childnode refid="75091" relation="include">
        </childnode>
        <childnode refid="75096" relation="include">
        </childnode>
        <childnode refid="75071" relation="include">
        </childnode>
        <childnode refid="75072" relation="include">
        </childnode>
        <childnode refid="75073" relation="include">
        </childnode>
        <childnode refid="75075" relation="include">
        </childnode>
        <childnode refid="75076" relation="include">
        </childnode>
        <childnode refid="75097" relation="include">
        </childnode>
        <childnode refid="75098" relation="include">
        </childnode>
        <childnode refid="75099" relation="include">
        </childnode>
        <childnode refid="75100" relation="include">
        </childnode>
        <childnode refid="75077" relation="include">
        </childnode>
        <childnode refid="75078" relation="include">
        </childnode>
        <childnode refid="75101" relation="include">
        </childnode>
        <childnode refid="75102" relation="include">
        </childnode>
        <childnode refid="75103" relation="include">
        </childnode>
        <childnode refid="75104" relation="include">
        </childnode>
        <childnode refid="75105" relation="include">
        </childnode>
        <childnode refid="75106" relation="include">
        </childnode>
      </node>
      <node id="75572">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="75014" relation="include">
        </childnode>
        <childnode refid="75553" relation="include">
        </childnode>
        <childnode refid="75020" relation="include">
        </childnode>
        <childnode refid="75573" relation="include">
        </childnode>
        <childnode refid="75575" relation="include">
        </childnode>
        <childnode refid="75543" relation="include">
        </childnode>
        <childnode refid="75554" relation="include">
        </childnode>
        <childnode refid="75544" relation="include">
        </childnode>
        <childnode refid="75546" relation="include">
        </childnode>
        <childnode refid="75551" relation="include">
        </childnode>
        <childnode refid="75549" relation="include">
        </childnode>
        <childnode refid="75550" relation="include">
        </childnode>
        <childnode refid="75552" relation="include">
        </childnode>
        <childnode refid="75315" relation="include">
        </childnode>
        <childnode refid="75318" relation="include">
        </childnode>
        <childnode refid="75423" relation="include">
        </childnode>
        <childnode refid="75589" relation="include">
        </childnode>
        <childnode refid="75477" relation="include">
        </childnode>
        <childnode refid="75478" relation="include">
        </childnode>
      </node>
      <node id="75527">
        <label>pxr/usdImaging/usdviewq/hydraObserver.h</label>
        <link refid="hydra_observer_8h_source"/>
      </node>
      <node id="75114">
        <label>pxr/usdImaging/usdImaging/dataSourcePrimvars.h</label>
        <link refid="data_source_primvars_8h_source"/>
        <childnode refid="75115" relation="include">
        </childnode>
        <childnode refid="75116" relation="include">
        </childnode>
      </node>
      <node id="75218">
        <label>pxr/usd/usdGeom/scope.h</label>
        <link refid="scope_8h"/>
      </node>
      <node id="75436">
        <label>pxr/usd/pcp/site.h</label>
        <link refid="pcp_2site_8h_source"/>
        <childnode refid="75027" relation="include">
        </childnode>
        <childnode refid="75276" relation="include">
        </childnode>
        <childnode refid="75274" relation="include">
        </childnode>
      </node>
      <node id="75520">
        <label>pxr/imaging/hdSt/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_st_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="75157">
        <label>pxr/usd/usdUI/nodeGraphNodeAPI.h</label>
        <link refid="node_graph_node_a_p_i_8h"/>
      </node>
      <node id="75511">
        <label>pxr/imaging/hd/primDataSourceOverlayCache.h</label>
        <link refid="prim_data_source_overlay_cache_8h_source"/>
      </node>
      <node id="75579">
        <label>pxr/base/tf/pyInvoke.h</label>
        <link refid="py_invoke_8h"/>
      </node>
      <node id="75027">
        <label>pxr/usd/pcp/errors.h</label>
        <link refid="pcp_2errors_8h_source"/>
        <childnode refid="75028" relation="include">
        </childnode>
        <childnode refid="75268" relation="include">
        </childnode>
        <childnode refid="75271" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75272" relation="include">
        </childnode>
        <childnode refid="75273" relation="include">
        </childnode>
      </node>
      <node id="75295">
        <label>pxr/usdImaging/usdImaging/textureUtils.h</label>
        <link refid="usd_imaging_2usd_imaging_2texture_utils_8h_source"/>
      </node>
      <node id="75382">
        <label>pxr/imaging/hdPrman/instancer.h</label>
        <link refid="rman_2instancer_8h_source"/>
        <childnode refid="75346" relation="include">
        </childnode>
      </node>
      <node id="75220">
        <label>pxr/usd/usdPhysics/joint.h</label>
        <link refid="joint_8h"/>
        <childnode refid="75221" relation="include">
        </childnode>
        <childnode refid="75222" relation="include">
        </childnode>
        <childnode refid="75223" relation="include">
        </childnode>
        <childnode refid="75224" relation="include">
        </childnode>
        <childnode refid="75225" relation="include">
        </childnode>
      </node>
      <node id="75134">
        <label>pxr/usd/usdLux/meshLightAPI.h</label>
        <link refid="mesh_light_a_p_i_8h"/>
      </node>
      <node id="75101">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="75029">
        <label>pxr/usd/pcp/namespaceEdits.h</label>
        <link refid="namespace_edits_8h_source"/>
      </node>
      <node id="75389">
        <label>pxr/imaging/hdEmbree/rendererPlugin.h</label>
        <link refid="mbree_2renderer_plugin_8h_source"/>
      </node>
      <node id="75545">
        <label>pxr/base/vt/wrapArray.h</label>
        <link refid="wrap_array_8h_source"/>
      </node>
      <node id="75254">
        <label>pxr/usd/usdSkel/animQuery.h</label>
        <link refid="anim_query_8h"/>
        <childnode refid="75198" relation="include">
        </childnode>
        <childnode refid="75255" relation="include">
        </childnode>
      </node>
      <node id="75550">
        <label>pxr/base/tf/pySingleton.h</label>
        <link refid="py_singleton_8h_source"/>
      </node>
      <node id="75486">
        <label>pxr/imaging/hd/prefixingSceneIndex.h</label>
        <link refid="prefixing_scene_index_8h_source"/>
      </node>
      <node id="75236">
        <label>pxr/usd/usdSkel/blendShape.h</label>
        <link refid="blend_shape_8h"/>
        <childnode refid="75237" relation="include">
        </childnode>
      </node>
      <node id="75425">
        <label>pxr/base/trace/reporterDataSourceCollector.h</label>
        <link refid="reporter_data_source_collector_8h_source"/>
      </node>
      <node id="75064">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="75056">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="75435">
        <label>pxr/usd/pcp/expressionVariablesDependencyData.h</label>
        <link refid="expression_variables_dependency_data_8h_source"/>
        <childnode refid="75269" relation="include">
        </childnode>
      </node>
      <node id="75227">
        <label>pxr/usd/usdRender/denoisePass.h</label>
        <link refid="denoise_pass_8h"/>
      </node>
      <node id="75432">
        <label>pxr/usd/pcp/changes.h</label>
        <link refid="changes_8h"/>
      </node>
      <node id="75437">
        <label>pxr/usd/sdf/abstractData.h</label>
        <link refid="abstract_data_8h_source"/>
        <childnode refid="75438" relation="include">
        </childnode>
        <childnode refid="75309" relation="include">
        </childnode>
        <childnode refid="75214" relation="include">
        </childnode>
        <childnode refid="75161" relation="include">
        </childnode>
      </node>
      <node id="75546">
        <label>pxr/base/tf/pyIdentity.h</label>
        <link refid="py_identity_8h_source"/>
        <childnode refid="75543" relation="include">
        </childnode>
        <childnode refid="75547" relation="include">
        </childnode>
        <childnode refid="75549" relation="include">
        </childnode>
      </node>
      <node id="75454">
        <label>pxr/usd/sdf/identity.h</label>
        <link refid="identity_8h_source"/>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75309" relation="include">
        </childnode>
      </node>
      <node id="75497">
        <label>pxr/imaging/hdsi/primTypePruningSceneIndex.h</label>
        <link refid="prim_type_pruning_scene_index_8h_source"/>
      </node>
      <node id="75268">
        <label>pxr/usd/pcp/composeSite.h</label>
        <link refid="compose_site_8h"/>
        <childnode refid="75269" relation="include">
        </childnode>
      </node>
      <node id="75130">
        <label>pxr/usd/usdGeom/xformCommonAPI.h</label>
        <link refid="xform_common_a_p_i_8h"/>
      </node>
      <node id="75120">
        <label>pxr/usdImaging/usdImaging/dataSourceMesh.h</label>
        <link refid="data_source_mesh_8h_source"/>
      </node>
      <node id="75291">
        <label>pxr/usd/usd/primTypeInfo.h</label>
        <link refid="prim_type_info_8h_source"/>
        <childnode refid="75290" relation="include">
        </childnode>
      </node>
      <node id="75243">
        <label>pxr/usd/usdShade/output.h</label>
        <link refid="output_8h_source"/>
        <childnode refid="75035" relation="include">
        </childnode>
        <childnode refid="75047" relation="include">
        </childnode>
        <childnode refid="75135" relation="include">
        </childnode>
        <childnode refid="75136" relation="include">
        </childnode>
        <childnode refid="75148" relation="include">
        </childnode>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75234" relation="include">
        </childnode>
      </node>
      <node id="75241">
        <label>pxr/usd/usdSkel/skinningQuery.h</label>
        <link refid="skinning_query_8h"/>
        <childnode refid="75195" relation="include">
        </childnode>
      </node>
      <node id="75493">
        <label>pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h</label>
        <link refid="material_primvar_transfer_scene_index_8h_source"/>
      </node>
      <node id="75030">
        <label>pxr/usd/usd/stage.h</label>
        <link refid="stage_8h"/>
        <childnode refid="75031" relation="include">
        </childnode>
        <childnode refid="75032" relation="include">
        </childnode>
        <childnode refid="75034" relation="include">
        </childnode>
        <childnode refid="75159" relation="include">
        </childnode>
        <childnode refid="75109" relation="include">
        </childnode>
        <childnode refid="75160" relation="include">
        </childnode>
        <childnode refid="75161" relation="include">
        </childnode>
        <childnode refid="75265" relation="include">
        </childnode>
        <childnode refid="75216" relation="include">
        </childnode>
        <childnode refid="75183" relation="include">
        </childnode>
        <childnode refid="75172" relation="include">
        </childnode>
        <childnode refid="75199" relation="include">
        </childnode>
        <childnode refid="75174" relation="include">
        </childnode>
        <childnode refid="75175" relation="include">
        </childnode>
        <childnode refid="75176" relation="include">
        </childnode>
        <childnode refid="75177" relation="include">
        </childnode>
        <childnode refid="75182" relation="include">
        </childnode>
        <childnode refid="75178" relation="include">
        </childnode>
        <childnode refid="75179" relation="include">
        </childnode>
        <childnode refid="75173" relation="include">
        </childnode>
        <childnode refid="75184" relation="include">
        </childnode>
        <childnode refid="75217" relation="include">
        </childnode>
        <childnode refid="75186" relation="include">
        </childnode>
        <childnode refid="75110" relation="include">
        </childnode>
        <childnode refid="75111" relation="include">
        </childnode>
        <childnode refid="75185" relation="include">
        </childnode>
        <childnode refid="75187" relation="include">
        </childnode>
        <childnode refid="75180" relation="include">
        </childnode>
        <childnode refid="75181" relation="include">
        </childnode>
        <childnode refid="75191" relation="include">
        </childnode>
        <childnode refid="75188" relation="include">
        </childnode>
        <childnode refid="75112" relation="include">
        </childnode>
        <childnode refid="75218" relation="include">
        </childnode>
        <childnode refid="75189" relation="include">
        </childnode>
        <childnode refid="75219" relation="include">
        </childnode>
        <childnode refid="75129" relation="include">
        </childnode>
        <childnode refid="75202" relation="include">
        </childnode>
        <childnode refid="75171" relation="include">
        </childnode>
        <childnode refid="75130" relation="include">
        </childnode>
        <childnode refid="75131" relation="include">
        </childnode>
        <childnode refid="75036" relation="include">
        </childnode>
        <childnode refid="75037" relation="include">
        </childnode>
        <childnode refid="75038" relation="include">
        </childnode>
        <childnode refid="75043" relation="include">
        </childnode>
        <childnode refid="75044" relation="include">
        </childnode>
        <childnode refid="75045" relation="include">
        </childnode>
        <childnode refid="75046" relation="include">
        </childnode>
        <childnode refid="75035" relation="include">
        </childnode>
        <childnode refid="75047" relation="include">
        </childnode>
        <childnode refid="75132" relation="include">
        </childnode>
        <childnode refid="75133" relation="include">
        </childnode>
        <childnode refid="75134" relation="include">
        </childnode>
        <childnode refid="75042" relation="include">
        </childnode>
        <childnode refid="75155" relation="include">
        </childnode>
        <childnode refid="75048" relation="include">
        </childnode>
        <childnode refid="75039" relation="include">
        </childnode>
        <childnode refid="75040" relation="include">
        </childnode>
        <childnode refid="75135" relation="include">
        </childnode>
        <childnode refid="75136" relation="include">
        </childnode>
        <childnode refid="75041" relation="include">
        </childnode>
        <childnode refid="75137" relation="include">
        </childnode>
        <childnode refid="75138" relation="include">
        </childnode>
        <childnode refid="75203" relation="include">
        </childnode>
        <childnode refid="75139" relation="include">
        </childnode>
        <childnode refid="75140" relation="include">
        </childnode>
        <childnode refid="75049" relation="include">
        </childnode>
        <childnode refid="75221" relation="include">
        </childnode>
        <childnode refid="75141" relation="include">
        </childnode>
        <childnode refid="75142" relation="include">
        </childnode>
        <childnode refid="75222" relation="include">
        </childnode>
        <childnode refid="75220" relation="include">
        </childnode>
        <childnode refid="75143" relation="include">
        </childnode>
        <childnode refid="75144" relation="include">
        </childnode>
        <childnode refid="75145" relation="include">
        </childnode>
        <childnode refid="75146" relation="include">
        </childnode>
        <childnode refid="75223" relation="include">
        </childnode>
        <childnode refid="75224" relation="include">
        </childnode>
        <childnode refid="75147" relation="include">
        </childnode>
        <childnode refid="75226" relation="include">
        </childnode>
        <childnode refid="75225" relation="include">
        </childnode>
        <childnode refid="75192" relation="include">
        </childnode>
        <childnode refid="75227" relation="include">
        </childnode>
        <childnode refid="75050" relation="include">
        </childnode>
        <childnode refid="75229" relation="include">
        </childnode>
        <childnode refid="75230" relation="include">
        </childnode>
        <childnode refid="75228" relation="include">
        </childnode>
        <childnode refid="75231" relation="include">
        </childnode>
        <childnode refid="75232" relation="include">
        </childnode>
        <childnode refid="75148" relation="include">
        </childnode>
        <childnode refid="75051" relation="include">
        </childnode>
        <childnode refid="75149" relation="include">
        </childnode>
        <childnode refid="75113" relation="include">
        </childnode>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75153" relation="include">
        </childnode>
        <childnode refid="75151" relation="include">
        </childnode>
        <childnode refid="75052" relation="include">
        </childnode>
        <childnode refid="75154" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75234" relation="include">
        </childnode>
        <childnode refid="75235" relation="include">
        </childnode>
        <childnode refid="75156" relation="include">
        </childnode>
        <childnode refid="75236" relation="include">
        </childnode>
        <childnode refid="75193" relation="include">
        </childnode>
        <childnode refid="75194" relation="include">
        </childnode>
        <childnode refid="75238" relation="include">
        </childnode>
        <childnode refid="75157" relation="include">
        </childnode>
        <childnode refid="75158" relation="include">
        </childnode>
        <childnode refid="75107" relation="include">
        </childnode>
        <childnode refid="75266" relation="include">
        </childnode>
        <childnode refid="75267" relation="include">
        </childnode>
        <childnode refid="75206" relation="include">
        </childnode>
        <childnode refid="75205" relation="include">
        </childnode>
        <childnode refid="75204" relation="include">
        </childnode>
        <childnode refid="75207" relation="include">
        </childnode>
        <childnode refid="75190" relation="include">
        </childnode>
        <childnode refid="75200" relation="include">
        </childnode>
        <childnode refid="75201" relation="include">
        </childnode>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75165" relation="include">
        </childnode>
      </node>
      <node id="75499">
        <label>pxr/imaging/hdsi/sceneGlobalsSceneIndex.h</label>
        <link refid="scene_globals_scene_index_8h_source"/>
      </node>
      <node id="75564">
        <label>pxr/base/tf/pyResultConversions.h</label>
        <link refid="py_result_conversions_8h_source"/>
        <childnode refid="75545" relation="include">
        </childnode>
        <childnode refid="75305" relation="include">
        </childnode>
        <childnode refid="75307" relation="include">
        </childnode>
      </node>
      <node id="75385">
        <label>pxr/imaging/hd/rprimCollection.h</label>
        <link refid="rprim_collection_8h_source"/>
        <childnode refid="75386" relation="include">
        </childnode>
        <childnode refid="75323" relation="include">
        </childnode>
        <childnode refid="75354" relation="include">
        </childnode>
        <childnode refid="75401" relation="include">
        </childnode>
        <childnode refid="75402" relation="include">
        </childnode>
        <childnode refid="75359" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
        <childnode refid="75353" relation="include">
        </childnode>
      </node>
      <node id="75160">
        <label>pxr/usd/usd/namespaceEditor.h</label>
        <link refid="namespace_editor_8h"/>
      </node>
      <node id="75093">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="75400">
        <label>pxr/imaging/hdSt/instancer.h</label>
        <link refid="t_2instancer_8h_source"/>
      </node>
      <node id="75310">
        <label>pxr/usd/sdf/mapEditor.h</label>
        <link refid="map_editor_8h_source"/>
        <childnode refid="75311" relation="include">
        </childnode>
      </node>
      <node id="75349">
        <label>pxr/imaging/hd/sceneIndexAdapterSceneDelegate.h</label>
        <link refid="scene_index_adapter_scene_delegate_8h_source"/>
      </node>
      <node id="75179">
        <label>pxr/usd/usdGeom/cylinder_1.h</label>
        <link refid="cylinder__1_8h"/>
      </node>
      <node id="75257">
        <label>pxr/usdImaging/usdImaging/collectionAPIAdapter.h</label>
        <link refid="collection_a_p_i_adapter_8h_source"/>
      </node>
      <node id="75344">
        <label>pxr/imaging/hdPrman/cylinder.h</label>
        <link refid="imaging_2hd_prman_2cylinder_8h_source"/>
      </node>
      <node id="75358">
        <label>pxr/imaging/hdSt/renderPass.h</label>
        <link refid="t_2render_pass_8h_source"/>
      </node>
      <node id="75441">
        <label>pxr/usd/pcp/expressionVariables.h</label>
        <link refid="expression_variables_8h_source"/>
      </node>
      <node id="75151">
        <label>pxr/usd/usdShade/material.h</label>
        <link refid="usd_2usd_shade_2material_8h"/>
        <childnode refid="75148" relation="include">
        </childnode>
        <childnode refid="75052" relation="include">
        </childnode>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75443">
        <label>pxr/usd/sdf/childrenView.h</label>
        <link refid="children_view_8h"/>
        <childnode refid="75025" relation="include">
        </childnode>
        <childnode refid="75444" relation="include">
        </childnode>
      </node>
      <node id="75340">
        <label>pxr/imaging/hd/volume.h</label>
        <link refid="imaging_2hd_2volume_8h_source"/>
        <childnode refid="75341" relation="include">
        </childnode>
        <childnode refid="75342" relation="include">
        </childnode>
      </node>
      <node id="75330">
        <label>pxr/imaging/hd/basisCurves.h</label>
        <link refid="imaging_2hd_2basis_curves_8h_source"/>
        <childnode refid="75331" relation="include">
        </childnode>
        <childnode refid="75332" relation="include">
        </childnode>
      </node>
      <node id="75250">
        <label>pxr/usdImaging/usdImaging/dataSourceRelationship.h</label>
        <link refid="data_source_relationship_8h_source"/>
      </node>
      <node id="75099">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="75460">
        <label>pxr/usd/sdf/changeList.h</label>
        <link refid="change_list_8h"/>
        <childnode refid="75432" relation="include">
        </childnode>
        <childnode refid="75457" relation="include">
        </childnode>
        <childnode refid="75164" relation="include">
        </childnode>
      </node>
      <node id="75283">
        <label>pxr/usd/usd/pyEditContext.h</label>
        <link refid="py_edit_context_8h_source"/>
      </node>
      <node id="75106">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="75264">
        <label>pxr/usdImaging/usdviewq/utils.h</label>
        <link refid="usd_imaging_2usdviewq_2utils_8h_source"/>
      </node>
      <node id="75433">
        <label>pxr/usd/pcp/dependency.h</label>
        <link refid="dependency_8h_source"/>
        <childnode refid="75028" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
      </node>
      <node id="75431">
        <label>pxr/usd/usdShade/shaderDefParser.h</label>
        <link refid="shader_def_parser_8h_source"/>
      </node>
      <node id="75138">
        <label>pxr/usd/usdMedia/assetPreviewsAPI.h</label>
        <link refid="asset_previews_a_p_i_8h"/>
      </node>
      <node id="75578">
        <label>pxr/base/tf/pyCall.h</label>
        <link refid="py_call_8h"/>
        <childnode refid="75562" relation="include">
        </childnode>
        <childnode refid="75551" relation="include">
        </childnode>
        <childnode refid="75305" relation="include">
        </childnode>
      </node>
      <node id="75094">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="75590">
        <label>pxr/usd/sdrOsl/oslParser.h</label>
        <link refid="osl_parser_8h"/>
      </node>
      <node id="75293">
        <label>pxr/usd/usdUtils/usdzPackage.h</label>
        <link refid="usdz_package_8h"/>
        <childnode refid="75294" relation="include">
        </childnode>
      </node>
      <node id="75337">
        <label>pxr/imaging/hd/points.h</label>
        <link refid="imaging_2hd_2points_8h_source"/>
        <childnode refid="75338" relation="include">
        </childnode>
        <childnode refid="75339" relation="include">
        </childnode>
      </node>
      <node id="75126">
        <label>pxr/usdImaging/usdImaging/dataSourceMaterial.h</label>
        <link refid="data_source_material_8h_source"/>
      </node>
      <node id="75216">
        <label>pxr/usd/usd/typed.h</label>
        <link refid="typed_8h"/>
        <childnode refid="75217" relation="include">
        </childnode>
        <childnode refid="75219" relation="include">
        </childnode>
        <childnode refid="75049" relation="include">
        </childnode>
        <childnode refid="75226" relation="include">
        </childnode>
        <childnode refid="75227" relation="include">
        </childnode>
        <childnode refid="75050" relation="include">
        </childnode>
        <childnode refid="75228" relation="include">
        </childnode>
        <childnode refid="75232" relation="include">
        </childnode>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75234" relation="include">
        </childnode>
        <childnode refid="75235" relation="include">
        </childnode>
        <childnode refid="75236" relation="include">
        </childnode>
        <childnode refid="75238" relation="include">
        </childnode>
      </node>
      <node id="75512">
        <label>pxr/imaging/hd/retainedSceneIndex.h</label>
        <link refid="retained_scene_index_8h_source"/>
        <childnode refid="75513" relation="include">
        </childnode>
      </node>
      <node id="75561">
        <label>pxr/base/tf/pyEnum.h</label>
        <link refid="py_enum_8h"/>
      </node>
      <node id="75189">
        <label>pxr/usd/usdGeom/sphere.h</label>
        <link refid="usd_2usd_geom_2sphere_8h"/>
        <childnode refid="75054" relation="include">
        </childnode>
      </node>
      <node id="75174">
        <label>pxr/usd/usdGeom/capsule.h</label>
        <link refid="capsule_8h"/>
      </node>
      <node id="75133">
        <label>pxr/usd/usdLux/listAPI.h</label>
        <link refid="list_a_p_i_8h"/>
      </node>
      <node id="75434">
        <label>pxr/usd/pcp/dynamicFileFormatDependencyData.h</label>
        <link refid="dynamic_file_format_dependency_data_8h_source"/>
        <childnode refid="75269" relation="include">
        </childnode>
      </node>
      <node id="75374">
        <label>pxr/imaging/hdx/aovInputTask.h</label>
        <link refid="aov_input_task_8h_source"/>
      </node>
      <node id="75240">
        <label>pxr/usd/usdGeom/primvar.h</label>
        <link refid="primvar_8h_source"/>
        <childnode refid="75217" relation="include">
        </childnode>
        <childnode refid="75112" relation="include">
        </childnode>
        <childnode refid="75156" relation="include">
        </childnode>
        <childnode refid="75241" relation="include">
        </childnode>
        <childnode refid="75114" relation="include">
        </childnode>
      </node>
      <node id="75139">
        <label>pxr/usd/usdPhysics/articulationRootAPI.h</label>
        <link refid="articulation_root_a_p_i_8h"/>
      </node>
      <node id="75507">
        <label>pxr/usdImaging/usdImaging/selectionSceneIndex.h</label>
        <link refid="selection_scene_index_8h_source"/>
      </node>
      <node id="75540">
        <label>pxr/imaging/hgiGL/texture.h</label>
        <link refid="hgi_g_l_2texture_8h_source"/>
      </node>
      <node id="75324">
        <label>pxr/imaging/hd/renderIndex.h</label>
        <link refid="render_index_8h_source"/>
        <childnode refid="75325" relation="include">
        </childnode>
        <childnode refid="75369" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75338">
        <label>pxr/imaging/hdPrman/points.h</label>
        <link refid="imaging_2hd_prman_2points_8h_source"/>
      </node>
      <node id="75127">
        <label>pxr/usdImaging/usdImaging/dataSourceRenderPrims.h</label>
        <link refid="data_source_render_prims_8h_source"/>
      </node>
      <node id="75165">
        <label>pxr/usdImaging/usdImaging/stageSceneIndex.h</label>
        <link refid="stage_scene_index_8h_source"/>
      </node>
      <node id="75200">
        <label>pxr/usdImaging/usdAppUtils/camera.h</label>
        <link refid="usd_imaging_2usd_app_utils_2camera_8h"/>
      </node>
      <node id="75477">
        <label>pxr/imaging/glf/simpleShadowArray.h</label>
        <link refid="simple_shadow_array_8h"/>
        <childnode refid="75476" relation="include">
        </childnode>
      </node>
      <node id="75394">
        <label>pxr/imaging/hd/unitTestNullRenderDelegate.h</label>
        <link refid="unit_test_null_render_delegate_8h_source"/>
        <childnode refid="75352" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75326">
        <label>pxr/imaging/hd/extComputation.h</label>
        <link refid="ext_computation_8h_source"/>
        <childnode refid="75327" relation="include">
        </childnode>
        <childnode refid="75328" relation="include">
        </childnode>
      </node>
      <node id="75321">
        <label>pxr/imaging/hd/drawItem.h</label>
        <link refid="draw_item_8h_source"/>
        <childnode refid="75322" relation="include">
        </childnode>
        <childnode refid="75403" relation="include">
        </childnode>
      </node>
      <node id="75226">
        <label>pxr/usd/usdPhysics/scene.h</label>
        <link refid="scene_8h"/>
      </node>
      <node id="75299">
        <label>pxr/usd/sdf/attributeSpec.h</label>
        <link refid="attribute_spec_8h"/>
        <childnode refid="75289" relation="include">
        </childnode>
      </node>
      <node id="75506">
        <label>pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h</label>
        <link refid="root_overrides_scene_index_8h_source"/>
      </node>
      <node id="75077">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="75067">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="75203">
        <label>pxr/usd/usdMedia/spatialAudio.h</label>
        <link refid="spatial_audio_8h"/>
      </node>
      <node id="75033">
        <label>pxr/usd/usdUtils/stitchClips.h</label>
        <link refid="stitch_clips_8h"/>
      </node>
      <node id="75570">
        <label>pxr/base/tf/refPtrTracker.h</label>
        <link refid="ref_ptr_tracker_8h"/>
      </node>
      <node id="75539">
        <label>pxr/imaging/hdSt/udimTextureObject.h</label>
        <link refid="udim_texture_object_8h_source"/>
      </node>
      <node id="75060">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="75113">
        <label>pxr/usd/usdRi/statementsAPI.h</label>
        <link refid="statements_a_p_i_8h"/>
      </node>
      <node id="75100">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="75096" relation="include">
        </childnode>
      </node>
      <node id="75387">
        <label>pxr/imaging/hd/renderDelegate.h</label>
        <link refid="render_delegate_8h_source"/>
        <childnode refid="75388" relation="include">
        </childnode>
        <childnode refid="75392" relation="include">
        </childnode>
        <childnode refid="75017" relation="include">
        </childnode>
        <childnode refid="75394" relation="include">
        </childnode>
        <childnode refid="75395" relation="include">
        </childnode>
        <childnode refid="75396" relation="include">
        </childnode>
        <childnode refid="75397" relation="include">
        </childnode>
        <childnode refid="75398" relation="include">
        </childnode>
        <childnode refid="75399" relation="include">
        </childnode>
      </node>
      <node id="75345">
        <label>pxr/imaging/hdPrman/gprimbase.h</label>
        <link refid="gprimbase_8h_source"/>
        <childnode refid="75346" relation="include">
        </childnode>
      </node>
      <node id="75297">
        <label>pxr/usd/sdf/pseudoRootSpec.h</label>
        <link refid="pseudo_root_spec_8h"/>
      </node>
      <node id="75510">
        <label>pxr/imaging/hd/dataSourceLegacyPrim.h</label>
        <link refid="data_source_legacy_prim_8h_source"/>
      </node>
      <node id="75552">
        <label>pxr/base/tf/pyUtils.h</label>
        <link refid="base_2tf_2py_utils_8h"/>
        <childnode refid="75553" relation="include">
        </childnode>
        <childnode refid="75543" relation="include">
        </childnode>
        <childnode refid="75560" relation="include">
        </childnode>
        <childnode refid="75544" relation="include">
        </childnode>
        <childnode refid="75561" relation="include">
        </childnode>
        <childnode refid="75562" relation="include">
        </childnode>
        <childnode refid="75546" relation="include">
        </childnode>
        <childnode refid="75563" relation="include">
        </childnode>
        <childnode refid="75564" relation="include">
        </childnode>
        <childnode refid="75550" relation="include">
        </childnode>
        <childnode refid="75565" relation="include">
        </childnode>
        <childnode refid="75545" relation="include">
        </childnode>
        <childnode refid="75566" relation="include">
        </childnode>
        <childnode refid="75444" relation="include">
        </childnode>
        <childnode refid="75305" relation="include">
        </childnode>
        <childnode refid="75567" relation="include">
        </childnode>
        <childnode refid="75307" relation="include">
        </childnode>
        <childnode refid="75568" relation="include">
        </childnode>
        <childnode refid="75458" relation="include">
        </childnode>
      </node>
      <node id="75476">
        <label>pxr/imaging/glf/simpleLightingContext.h</label>
        <link refid="simple_lighting_context_8h"/>
        <childnode refid="75414" relation="include">
        </childnode>
        <childnode refid="75368" relation="include">
        </childnode>
        <childnode refid="75369" relation="include">
        </childnode>
      </node>
      <node id="75022">
        <label>pxr/usd/sdf/schema.h</label>
        <link refid="usd_2sdf_2schema_8h_source"/>
        <childnode refid="75023" relation="include">
        </childnode>
        <childnode refid="75024" relation="include">
        </childnode>
        <childnode refid="75303" relation="include">
        </childnode>
        <childnode refid="75308" relation="include">
        </childnode>
        <childnode refid="75309" relation="include">
        </childnode>
        <childnode refid="75166" relation="include">
        </childnode>
      </node>
      <node id="75095">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="75131">
        <label>pxr/usd/usdHydra/generativeProceduralAPI.h</label>
        <link refid="generative_procedural_a_p_i_8h"/>
      </node>
      <node id="75391">
        <label>pxr/imaging/hdStorm/rendererPlugin.h</label>
        <link refid="torm_2renderer_plugin_8h_source"/>
      </node>
      <node id="75557">
        <label>pxr/base/tf/typeNotice.h</label>
        <link refid="type_notice_8h_source"/>
      </node>
      <node id="75409">
        <label>pxr/imaging/hdSt/extCompGpuComputation.h</label>
        <link refid="ext_comp_gpu_computation_8h_source"/>
      </node>
      <node id="75378">
        <label>pxr/imaging/hdx/colorizeSelectionTask.h</label>
        <link refid="colorize_selection_task_8h_source"/>
      </node>
      <node id="75359">
        <label>pxr/imaging/hdx/pickTask.h</label>
        <link refid="pick_task_8h_source"/>
        <childnode refid="75360" relation="include">
        </childnode>
      </node>
      <node id="75259">
        <label>pxr/usdImaging/usdImaging/geomModelAPIAdapter.h</label>
        <link refid="geom_model_a_p_i_adapter_8h_source"/>
      </node>
      <node id="75267">
        <label>pxr/usd/usdUtils/introspection.h</label>
        <link refid="introspection_8h"/>
      </node>
      <node id="75462">
        <label>pxr/usd/sdf/specType.h</label>
        <link refid="spec_type_8h"/>
        <childnode refid="75446" relation="include">
        </childnode>
      </node>
      <node id="75166">
        <label>pxr/usd/usd/prim.h</label>
        <link refid="prim_8h"/>
        <childnode refid="75031" relation="include">
        </childnode>
        <childnode refid="75167" relation="include">
        </childnode>
        <childnode refid="75032" relation="include">
        </childnode>
        <childnode refid="75034" relation="include">
        </childnode>
        <childnode refid="75163" relation="include">
        </childnode>
        <childnode refid="75209" relation="include">
        </childnode>
        <childnode refid="75109" relation="include">
        </childnode>
        <childnode refid="75210" relation="include">
        </childnode>
        <childnode refid="75211" relation="include">
        </childnode>
        <childnode refid="75212" relation="include">
        </childnode>
        <childnode refid="75213" relation="include">
        </childnode>
        <childnode refid="75251" relation="include">
        </childnode>
        <childnode refid="75215" relation="include">
        </childnode>
        <childnode refid="75252" relation="include">
        </childnode>
        <childnode refid="75216" relation="include">
        </childnode>
        <childnode refid="75253" relation="include">
        </childnode>
        <childnode refid="75183" relation="include">
        </childnode>
        <childnode refid="75172" relation="include">
        </childnode>
        <childnode refid="75199" relation="include">
        </childnode>
        <childnode refid="75174" relation="include">
        </childnode>
        <childnode refid="75175" relation="include">
        </childnode>
        <childnode refid="75176" relation="include">
        </childnode>
        <childnode refid="75177" relation="include">
        </childnode>
        <childnode refid="75182" relation="include">
        </childnode>
        <childnode refid="75178" relation="include">
        </childnode>
        <childnode refid="75179" relation="include">
        </childnode>
        <childnode refid="75173" relation="include">
        </childnode>
        <childnode refid="75184" relation="include">
        </childnode>
        <childnode refid="75217" relation="include">
        </childnode>
        <childnode refid="75186" relation="include">
        </childnode>
        <childnode refid="75110" relation="include">
        </childnode>
        <childnode refid="75111" relation="include">
        </childnode>
        <childnode refid="75185" relation="include">
        </childnode>
        <childnode refid="75187" relation="include">
        </childnode>
        <childnode refid="75180" relation="include">
        </childnode>
        <childnode refid="75181" relation="include">
        </childnode>
        <childnode refid="75191" relation="include">
        </childnode>
        <childnode refid="75188" relation="include">
        </childnode>
        <childnode refid="75112" relation="include">
        </childnode>
        <childnode refid="75218" relation="include">
        </childnode>
        <childnode refid="75189" relation="include">
        </childnode>
        <childnode refid="75219" relation="include">
        </childnode>
        <childnode refid="75129" relation="include">
        </childnode>
        <childnode refid="75202" relation="include">
        </childnode>
        <childnode refid="75171" relation="include">
        </childnode>
        <childnode refid="75169" relation="include">
        </childnode>
        <childnode refid="75130" relation="include">
        </childnode>
        <childnode refid="75131" relation="include">
        </childnode>
        <childnode refid="75036" relation="include">
        </childnode>
        <childnode refid="75037" relation="include">
        </childnode>
        <childnode refid="75038" relation="include">
        </childnode>
        <childnode refid="75043" relation="include">
        </childnode>
        <childnode refid="75044" relation="include">
        </childnode>
        <childnode refid="75045" relation="include">
        </childnode>
        <childnode refid="75046" relation="include">
        </childnode>
        <childnode refid="75035" relation="include">
        </childnode>
        <childnode refid="75047" relation="include">
        </childnode>
        <childnode refid="75132" relation="include">
        </childnode>
        <childnode refid="75133" relation="include">
        </childnode>
        <childnode refid="75134" relation="include">
        </childnode>
        <childnode refid="75042" relation="include">
        </childnode>
        <childnode refid="75155" relation="include">
        </childnode>
        <childnode refid="75048" relation="include">
        </childnode>
        <childnode refid="75039" relation="include">
        </childnode>
        <childnode refid="75040" relation="include">
        </childnode>
        <childnode refid="75135" relation="include">
        </childnode>
        <childnode refid="75136" relation="include">
        </childnode>
        <childnode refid="75041" relation="include">
        </childnode>
        <childnode refid="75137" relation="include">
        </childnode>
        <childnode refid="75138" relation="include">
        </childnode>
        <childnode refid="75203" relation="include">
        </childnode>
        <childnode refid="75139" relation="include">
        </childnode>
        <childnode refid="75140" relation="include">
        </childnode>
        <childnode refid="75049" relation="include">
        </childnode>
        <childnode refid="75221" relation="include">
        </childnode>
        <childnode refid="75141" relation="include">
        </childnode>
        <childnode refid="75142" relation="include">
        </childnode>
        <childnode refid="75222" relation="include">
        </childnode>
        <childnode refid="75220" relation="include">
        </childnode>
        <childnode refid="75143" relation="include">
        </childnode>
        <childnode refid="75144" relation="include">
        </childnode>
        <childnode refid="75145" relation="include">
        </childnode>
        <childnode refid="75146" relation="include">
        </childnode>
        <childnode refid="75223" relation="include">
        </childnode>
        <childnode refid="75224" relation="include">
        </childnode>
        <childnode refid="75147" relation="include">
        </childnode>
        <childnode refid="75226" relation="include">
        </childnode>
        <childnode refid="75225" relation="include">
        </childnode>
        <childnode refid="75192" relation="include">
        </childnode>
        <childnode refid="75227" relation="include">
        </childnode>
        <childnode refid="75050" relation="include">
        </childnode>
        <childnode refid="75229" relation="include">
        </childnode>
        <childnode refid="75230" relation="include">
        </childnode>
        <childnode refid="75228" relation="include">
        </childnode>
        <childnode refid="75231" relation="include">
        </childnode>
        <childnode refid="75232" relation="include">
        </childnode>
        <childnode refid="75148" relation="include">
        </childnode>
        <childnode refid="75051" relation="include">
        </childnode>
        <childnode refid="75149" relation="include">
        </childnode>
        <childnode refid="75113" relation="include">
        </childnode>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75153" relation="include">
        </childnode>
        <childnode refid="75151" relation="include">
        </childnode>
        <childnode refid="75052" relation="include">
        </childnode>
        <childnode refid="75154" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75234" relation="include">
        </childnode>
        <childnode refid="75235" relation="include">
        </childnode>
        <childnode refid="75254" relation="include">
        </childnode>
        <childnode refid="75156" relation="include">
        </childnode>
        <childnode refid="75236" relation="include">
        </childnode>
        <childnode refid="75198" relation="include">
        </childnode>
        <childnode refid="75193" relation="include">
        </childnode>
        <childnode refid="75194" relation="include">
        </childnode>
        <childnode refid="75255" relation="include">
        </childnode>
        <childnode refid="75241" relation="include">
        </childnode>
        <childnode refid="75238" relation="include">
        </childnode>
        <childnode refid="75157" relation="include">
        </childnode>
        <childnode refid="75158" relation="include">
        </childnode>
        <childnode refid="75206" relation="include">
        </childnode>
        <childnode refid="75205" relation="include">
        </childnode>
        <childnode refid="75204" relation="include">
        </childnode>
        <childnode refid="75207" relation="include">
        </childnode>
        <childnode refid="75190" relation="include">
        </childnode>
        <childnode refid="75256" relation="include">
        </childnode>
        <childnode refid="75126" relation="include">
        </childnode>
        <childnode refid="75116" relation="include">
        </childnode>
        <childnode refid="75262" relation="include">
        </childnode>
        <childnode refid="75263" relation="include">
        </childnode>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75055" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
        <childnode refid="75053" relation="include">
        </childnode>
        <childnode refid="75264" relation="include">
        </childnode>
      </node>
      <node id="75469">
        <label>pxr/usd/usd/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="75214" relation="include">
        </childnode>
        <childnode refid="75167" relation="include">
        </childnode>
        <childnode refid="75162" relation="include">
        </childnode>
        <childnode refid="75209" relation="include">
        </childnode>
        <childnode refid="75160" relation="include">
        </childnode>
        <childnode refid="75164" relation="include">
        </childnode>
        <childnode refid="75161" relation="include">
        </childnode>
        <childnode refid="75210" relation="include">
        </childnode>
        <childnode refid="75166" relation="include">
        </childnode>
        <childnode refid="75290" relation="include">
        </childnode>
        <childnode refid="75212" relation="include">
        </childnode>
        <childnode refid="75213" relation="include">
        </childnode>
        <childnode refid="75251" relation="include">
        </childnode>
        <childnode refid="75249" relation="include">
        </childnode>
        <childnode refid="75280" relation="include">
        </childnode>
        <childnode refid="75292" relation="include">
        </childnode>
        <childnode refid="75252" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75470" relation="include">
        </childnode>
        <childnode refid="75253" relation="include">
        </childnode>
        <childnode refid="75471" relation="include">
        </childnode>
        <childnode refid="75472" relation="include">
        </childnode>
        <childnode refid="75473" relation="include">
        </childnode>
        <childnode refid="75468" relation="include">
        </childnode>
      </node>
      <node id="75039">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="75119">
        <label>pxr/usdImaging/usdImaging/dataSourceBasisCurves.h</label>
        <link refid="data_source_basis_curves_8h_source"/>
      </node>
      <node id="75085">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="75370">
        <label>pxr/imaging/hdx/selectionTask.h</label>
        <link refid="selection_task_8h_source"/>
      </node>
      <node id="75054">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="75055" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75475">
        <label>pxr/imaging/glf/drawTarget.h</label>
        <link refid="glf_2draw_target_8h"/>
      </node>
      <node id="75247">
        <label>pxr/usd/usdUtils/sparseValueWriter.h</label>
        <link refid="sparse_value_writer_8h"/>
      </node>
      <node id="75447">
        <label>pxr/usd/sdf/fileFormat.h</label>
        <link refid="file_format_8h"/>
        <childnode refid="75448" relation="include">
        </childnode>
        <childnode refid="75449" relation="include">
        </childnode>
        <childnode refid="75451" relation="include">
        </childnode>
        <childnode refid="75452" relation="include">
        </childnode>
        <childnode refid="75453" relation="include">
        </childnode>
      </node>
      <node id="75258">
        <label>pxr/usdImaging/usdImaging/coordSysAPIAdapter.h</label>
        <link refid="coord_sys_a_p_i_adapter_8h_source"/>
      </node>
      <node id="75272">
        <label>pxr/usd/pcp/propertyIndex.h</label>
        <link refid="property_index_8h_source"/>
        <childnode refid="75028" relation="include">
        </childnode>
      </node>
      <node id="75121">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsCurves.h</label>
        <link refid="data_source_nurbs_curves_8h_source"/>
      </node>
      <node id="75253">
        <label>pxr/usd/usd/variantSets.h</label>
        <link refid="variant_sets_8h_source"/>
        <childnode refid="75151" relation="include">
        </childnode>
      </node>
      <node id="75025">
        <label>pxr/usd/sdf/proxyTypes.h</label>
        <link refid="proxy_types_8h_source"/>
        <childnode refid="75026" relation="include">
        </childnode>
        <childnode refid="75296" relation="include">
        </childnode>
        <childnode refid="75298" relation="include">
        </childnode>
        <childnode refid="75301" relation="include">
        </childnode>
        <childnode refid="75302" relation="include">
        </childnode>
      </node>
      <node id="75481">
        <label>pxr/imaging/hd/dependencyForwardingSceneIndex.h</label>
        <link refid="dependency_forwarding_scene_index_8h_source"/>
      </node>
      <node id="75555">
        <label>pxr/base/tf/debugNotice.h</label>
        <link refid="debug_notice_8h"/>
      </node>
      <node id="75418">
        <label>pxr/imaging/hdSt/vboSimpleMemoryManager.h</label>
        <link refid="vbo_simple_memory_manager_8h_source"/>
      </node>
      <node id="75294">
        <label>pxr/usd/usdUtils/dependencies.h</label>
        <link refid="dependencies_8h"/>
      </node>
      <node id="75580">
        <label>pxr/base/work/detachedTask.h</label>
        <link refid="detached_task_8h"/>
        <childnode refid="75581" relation="include">
        </childnode>
      </node>
      <node id="75021">
        <label>pxr/base/plug/notice.h</label>
        <link refid="base_2plug_2notice_8h_source"/>
        <childnode refid="75022" relation="include">
        </childnode>
      </node>
      <node id="75528">
        <label>pxr/imaging/hd/sceneIndexObserver.h</label>
        <link refid="scene_index_observer_8h_source"/>
        <childnode refid="75509" relation="include">
        </childnode>
        <childnode refid="75529" relation="include">
        </childnode>
        <childnode refid="75530" relation="include">
        </childnode>
      </node>
      <node id="75242">
        <label>pxr/usd/usdShade/input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="75035" relation="include">
        </childnode>
        <childnode refid="75047" relation="include">
        </childnode>
        <childnode refid="75135" relation="include">
        </childnode>
        <childnode refid="75136" relation="include">
        </childnode>
        <childnode refid="75148" relation="include">
        </childnode>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75233" relation="include">
        </childnode>
        <childnode refid="75234" relation="include">
        </childnode>
      </node>
      <node id="75396">
        <label>pxr/imaging/hdEmbree/renderParam.h</label>
        <link refid="hd_embree_2render_param_8h_source"/>
      </node>
      <node id="75428">
        <label>pxr/usd/ndr/registry.h</label>
        <link refid="usd_2ndr_2registry_8h"/>
        <childnode refid="75429" relation="include">
        </childnode>
      </node>
      <node id="75328">
        <label>pxr/imaging/hdSt/extComputation.h</label>
        <link refid="t_2ext_computation_8h_source"/>
      </node>
      <node id="75014">
        <label>pxr/base/plug/registry.h</label>
        <link refid="base_2plug_2registry_8h_source"/>
        <childnode refid="75015" relation="include">
        </childnode>
        <childnode refid="75016" relation="include">
        </childnode>
      </node>
      <node id="75219">
        <label>pxr/usd/usdGeom/subset.h</label>
        <link refid="subset_8h"/>
        <childnode refid="75151" relation="include">
        </childnode>
        <childnode refid="75052" relation="include">
        </childnode>
      </node>
      <node id="75031">
        <label>pxr/usd/usd/apiSchemaBase.h</label>
        <link refid="api_schema_base_8h"/>
        <childnode refid="75032" relation="include">
        </childnode>
        <childnode refid="75034" relation="include">
        </childnode>
        <childnode refid="75109" relation="include">
        </childnode>
        <childnode refid="75110" relation="include">
        </childnode>
        <childnode refid="75111" relation="include">
        </childnode>
        <childnode refid="75112" relation="include">
        </childnode>
        <childnode refid="75129" relation="include">
        </childnode>
        <childnode refid="75130" relation="include">
        </childnode>
        <childnode refid="75131" relation="include">
        </childnode>
        <childnode refid="75035" relation="include">
        </childnode>
        <childnode refid="75132" relation="include">
        </childnode>
        <childnode refid="75133" relation="include">
        </childnode>
        <childnode refid="75134" relation="include">
        </childnode>
        <childnode refid="75135" relation="include">
        </childnode>
        <childnode refid="75136" relation="include">
        </childnode>
        <childnode refid="75137" relation="include">
        </childnode>
        <childnode refid="75138" relation="include">
        </childnode>
        <childnode refid="75139" relation="include">
        </childnode>
        <childnode refid="75140" relation="include">
        </childnode>
        <childnode refid="75141" relation="include">
        </childnode>
        <childnode refid="75142" relation="include">
        </childnode>
        <childnode refid="75143" relation="include">
        </childnode>
        <childnode refid="75144" relation="include">
        </childnode>
        <childnode refid="75145" relation="include">
        </childnode>
        <childnode refid="75146" relation="include">
        </childnode>
        <childnode refid="75147" relation="include">
        </childnode>
        <childnode refid="75148" relation="include">
        </childnode>
        <childnode refid="75051" relation="include">
        </childnode>
        <childnode refid="75149" relation="include">
        </childnode>
        <childnode refid="75113" relation="include">
        </childnode>
        <childnode refid="75150" relation="include">
        </childnode>
        <childnode refid="75153" relation="include">
        </childnode>
        <childnode refid="75052" relation="include">
        </childnode>
        <childnode refid="75154" relation="include">
        </childnode>
        <childnode refid="75156" relation="include">
        </childnode>
        <childnode refid="75157" relation="include">
        </childnode>
        <childnode refid="75158" relation="include">
        </childnode>
      </node>
      <node id="75167">
        <label>pxr/usd/usd/attributeQuery.h</label>
        <link refid="attribute_query_8h_source"/>
        <childnode refid="75168" relation="include">
        </childnode>
        <childnode refid="75169" relation="include">
        </childnode>
        <childnode refid="75170" relation="include">
        </childnode>
        <childnode refid="75208" relation="include">
        </childnode>
      </node>
      <node id="75509">
        <label>pxr/imaging/hd/sceneIndex.h</label>
        <link refid="scene_index_8h_source"/>
        <childnode refid="75510" relation="include">
        </childnode>
        <childnode refid="75480" relation="include">
        </childnode>
        <childnode refid="75511" relation="include">
        </childnode>
        <childnode refid="75324" relation="include">
        </childnode>
        <childnode refid="75512" relation="include">
        </childnode>
        <childnode refid="75514" relation="include">
        </childnode>
        <childnode refid="75349" relation="include">
        </childnode>
        <childnode refid="75515" relation="include">
        </childnode>
        <childnode refid="75018" relation="include">
        </childnode>
        <childnode refid="75524" relation="include">
        </childnode>
        <childnode refid="75256" relation="include">
        </childnode>
        <childnode refid="75526" relation="include">
        </childnode>
        <childnode refid="75165" relation="include">
        </childnode>
        <childnode refid="75527" relation="include">
        </childnode>
      </node>
      <node id="75361">
        <label>pxr/imaging/hdx/drawTargetTask.h</label>
        <link refid="draw_target_task_8h_source"/>
      </node>
      <node id="75403">
        <label>pxr/imaging/hdSt/drawItem.h</label>
        <link refid="t_2draw_item_8h_source"/>
        <childnode refid="75404" relation="include">
        </childnode>
      </node>
      <node id="75175">
        <label>pxr/usd/usdGeom/capsule_1.h</label>
        <link refid="capsule__1_8h"/>
      </node>
      <node id="75015">
        <label>pxr/base/plug/thisPlugin.h</label>
        <link refid="this_plugin_8h_source"/>
      </node>
      <node id="75566">
        <label>pxr/usd/sdf/pyChildrenProxy.h</label>
        <link refid="py_children_proxy_8h"/>
      </node>
      <node id="75228">
        <label>pxr/usd/usdRender/settingsBase.h</label>
        <link refid="settings_base_8h"/>
        <childnode refid="75229" relation="include">
        </childnode>
        <childnode refid="75230" relation="include">
        </childnode>
        <childnode refid="75231" relation="include">
        </childnode>
      </node>
      <node id="75198">
        <label>pxr/usd/usdSkel/cache.h</label>
        <link refid="usd_skel_2cache_8h"/>
        <childnode refid="75105" relation="include">
        </childnode>
      </node>
      <node id="75173">
        <label>pxr/usd/usdGeom/gprim.h</label>
        <link refid="usd_2usd_geom_2gprim_8h"/>
        <childnode refid="75174" relation="include">
        </childnode>
        <childnode refid="75175" relation="include">
        </childnode>
        <childnode refid="75176" relation="include">
        </childnode>
        <childnode refid="75177" relation="include">
        </childnode>
        <childnode refid="75178" relation="include">
        </childnode>
        <childnode refid="75179" relation="include">
        </childnode>
        <childnode refid="75180" relation="include">
        </childnode>
        <childnode refid="75181" relation="include">
        </childnode>
        <childnode refid="75189" relation="include">
        </childnode>
        <childnode refid="75190" relation="include">
        </childnode>
      </node>
      <node id="75356">
        <label>pxr/imaging/hdEmbree/renderPass.h</label>
        <link refid="mbree_2render_pass_8h_source"/>
      </node>
      <node id="75336">
        <label>pxr/imaging/hdSt/mesh.h</label>
        <link refid="imaging_2hd_st_2mesh_8h_source"/>
      </node>
      <node id="75246">
        <label>pxr/usd/usdSkel/inbetweenShape.h</label>
        <link refid="inbetween_shape_8h_source"/>
        <childnode refid="75236" relation="include">
        </childnode>
        <childnode refid="75237" relation="include">
        </childnode>
      </node>
      <node id="75197">
        <label>pxr/usd/usdSkel/utils.h</label>
        <link refid="usd_2usd_skel_2utils_8h"/>
      </node>
      <node id="75302">
        <label>pxr/usd/sdf/variantSpec.h</label>
        <link refid="variant_spec_8h"/>
      </node>
      <node id="75153">
        <label>pxr/usd/usdShade/coordSysAPI.h</label>
        <link refid="coord_sys_a_p_i_8h"/>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75427">
        <label>pxr/usd/ndr/filesystemDiscovery.h</label>
        <link refid="filesystem_discovery_8h_source"/>
      </node>
      <node id="75362">
        <label>pxr/imaging/hdx/oitBufferAccessor.h</label>
        <link refid="oit_buffer_accessor_8h_source"/>
      </node>
      <node id="75534">
        <label>pxr/imaging/hdar/systemSchema.h</label>
        <link refid="r_2system_schema_8h_source"/>
      </node>
      <node id="75529">
        <label>pxr/imaging/hdsi/primManagingSceneIndexObserver.h</label>
        <link refid="prim_managing_scene_index_observer_8h"/>
      </node>
      <node id="75554">
        <label>pxr/base/tf/notice.h</label>
        <link refid="base_2tf_2notice_8h"/>
        <childnode refid="75021" relation="include">
        </childnode>
        <childnode refid="75555" relation="include">
        </childnode>
        <childnode refid="75556" relation="include">
        </childnode>
        <childnode refid="75548" relation="include">
        </childnode>
        <childnode refid="75557" relation="include">
        </childnode>
        <childnode refid="75558" relation="include">
        </childnode>
        <childnode refid="75559" relation="include">
        </childnode>
        <childnode refid="75457" relation="include">
        </childnode>
        <childnode refid="75164" relation="include">
        </childnode>
      </node>
      <node id="75073">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="75518">
        <label>pxr/imaging/hdPrman/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_prman_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="75482">
        <label>pxr/imaging/hd/flatteningSceneIndex.h</label>
        <link refid="flattening_scene_index_8h_source"/>
      </node>
      <node id="75397">
        <label>pxr/imaging/hdPrman/renderDelegate.h</label>
        <link refid="rman_2render_delegate_8h_source"/>
      </node>
      <node id="75125">
        <label>pxr/usdImaging/usdImaging/dataSourceVolume.h</label>
        <link refid="data_source_volume_8h_source"/>
      </node>
      <node id="75583">
        <label>pxr/base/work/withScopedParallelism.h</label>
        <link refid="with_scoped_parallelism_8h"/>
      </node>
      <node id="75052">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75161">
        <label>pxr/usd/usd/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="75162" relation="include">
        </childnode>
        <childnode refid="75163" relation="include">
        </childnode>
        <childnode refid="75164" relation="include">
        </childnode>
        <childnode refid="75166" relation="include">
        </childnode>
        <childnode refid="75213" relation="include">
        </childnode>
      </node>
      <node id="75266">
        <label>pxr/usd/usdUtils/flattenLayerStack.h</label>
        <link refid="flatten_layer_stack_8h"/>
      </node>
      <node id="75196">
        <label>pxr/usd/usdSkel/bakeSkinning.h</label>
        <link refid="bake_skinning_8h_source"/>
        <childnode refid="75197" relation="include">
        </childnode>
      </node>
      <node id="75190">
        <label>pxr/usd/usdVol/volume.h</label>
        <link refid="usd_2usd_vol_2volume_8h"/>
        <childnode refid="75125" relation="include">
        </childnode>
        <childnode refid="75078" relation="include">
        </childnode>
      </node>
      <node id="75124">
        <label>pxr/usdImaging/usdImaging/dataSourceSchemaBased.h</label>
        <link refid="data_source_schema_based_8h_source"/>
      </node>
      <node id="75274">
        <label>pxr/usd/pcp/types.h</label>
        <link refid="usd_2pcp_2types_8h"/>
        <childnode refid="75275" relation="include">
        </childnode>
        <childnode refid="75027" relation="include">
        </childnode>
        <childnode refid="75276" relation="include">
        </childnode>
        <childnode refid="75277" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75284" relation="include">
        </childnode>
      </node>
      <node id="75584">
        <label>pxr/base/tf/errorTransport.h</label>
        <link refid="error_transport_8h"/>
        <childnode refid="75576" relation="include">
        </childnode>
        <childnode refid="75582" relation="include">
        </childnode>
      </node>
      <node id="75577">
        <label>pxr/base/tf/pyError.h</label>
        <link refid="py_error_8h_source"/>
        <childnode refid="75543" relation="include">
        </childnode>
        <childnode refid="75578" relation="include">
        </childnode>
        <childnode refid="75579" relation="include">
        </childnode>
        <childnode refid="75566" relation="include">
        </childnode>
        <childnode refid="75458" relation="include">
        </childnode>
      </node>
      <node id="75449">
        <label>pxr/usd/sdf/textFileFormat.h</label>
        <link refid="text_file_format_8h"/>
        <childnode refid="75450" relation="include">
        </childnode>
      </node>
      <node id="75351">
        <label>pxr/imaging/hd/engine.h</label>
        <link refid="imaging_2hd_2engine_8h_source"/>
        <childnode refid="75352" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
        <childnode refid="75353" relation="include">
        </childnode>
      </node>
      <node id="75307">
        <label>pxr/usd/sdf/pyListProxy.h</label>
        <link refid="py_list_proxy_8h"/>
        <childnode refid="75305" relation="include">
        </childnode>
      </node>
      <node id="75176">
        <label>pxr/usd/usdGeom/cone.h</label>
        <link refid="usd_2usd_geom_2cone_8h"/>
      </node>
      <node id="75072">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="75589">
        <label>pxr/usd/ndr/parserPlugin.h</label>
        <link refid="parser_plugin_8h"/>
        <childnode refid="75428" relation="include">
        </childnode>
        <childnode refid="75590" relation="include">
        </childnode>
        <childnode refid="75430" relation="include">
        </childnode>
        <childnode refid="75431" relation="include">
        </childnode>
      </node>
      <node id="75188">
        <label>pxr/usd/usdGeom/points.h</label>
        <link refid="usd_2usd_geom_2points_8h"/>
      </node>
      <node id="75306">
        <label>pxr/usd/sdf/listProxy.h</label>
        <link refid="list_proxy_8h"/>
        <childnode refid="75304" relation="include">
        </childnode>
        <childnode refid="75025" relation="include">
        </childnode>
        <childnode refid="75307" relation="include">
        </childnode>
      </node>
      <node id="75429">
        <label>pxr/usd/sdr/registry.h</label>
        <link refid="usd_2sdr_2registry_8h"/>
      </node>
      <node id="75207">
        <label>pxr/usd/usdVol/openVDBAsset.h</label>
        <link refid="open_v_d_b_asset_8h"/>
      </node>
      <node id="75335">
        <label>pxr/imaging/hdPrman/mesh.h</label>
        <link refid="imaging_2hd_prman_2mesh_8h_source"/>
      </node>
      <node id="75287">
        <label>pxr/usd/sdf/site.h</label>
        <link refid="sdf_2site_8h_source"/>
        <childnode refid="75268" relation="include">
        </childnode>
        <childnode refid="75279" relation="include">
        </childnode>
        <childnode refid="75269" relation="include">
        </childnode>
        <childnode refid="75288" relation="include">
        </childnode>
      </node>
      <node id="75286">
        <label>pxr/usd/sdf/pyUtils.h</label>
        <link refid="usd_2sdf_2py_utils_8h_source"/>
      </node>
      <node id="75191">
        <label>pxr/usd/usdGeom/pointInstancer.h</label>
        <link refid="point_instancer_8h"/>
        <childnode refid="75168" relation="include">
        </childnode>
        <childnode refid="75115" relation="include">
        </childnode>
        <childnode refid="75053" relation="include">
        </childnode>
      </node>
      <node id="75472">
        <label>pxr/usd/usdPhysics/massProperties.h</label>
        <link refid="mass_properties_8h_source"/>
      </node>
      <node id="75383">
        <label>pxr/imaging/hdx/freeCameraSceneDelegate.h</label>
        <link refid="free_camera_scene_delegate_8h_source"/>
      </node>
      <node id="75235">
        <label>pxr/usd/usdSkel/animation.h</label>
        <link refid="animation_8h"/>
      </node>
      <node id="75457">
        <label>pxr/usd/sdf/notice.h</label>
        <link refid="usd_2sdf_2notice_8h_source"/>
        <childnode refid="75030" relation="include">
        </childnode>
      </node>
      <node id="75115">
        <label>pxr/usdImaging/usdImaging/dataSourcePointInstancer.h</label>
        <link refid="data_source_point_instancer_8h_source"/>
      </node>
      <node id="75558">
        <label>pxr/base/trace/collectionNotice.h</label>
        <link refid="collection_notice_8h_source"/>
        <childnode refid="75424" relation="include">
        </childnode>
        <childnode refid="75425" relation="include">
        </childnode>
      </node>
      <node id="75097">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="75556">
        <label>pxr/base/tf/pyModuleNotice.h</label>
        <link refid="py_module_notice_8h_source"/>
      </node>
      <node id="75543">
        <label>pxr/base/tf/makePyConstructor.h</label>
        <link refid="make_py_constructor_8h"/>
      </node>
      <node id="75535">
        <label>pxr/imaging/hdSt/textureObject.h</label>
        <link refid="texture_object_8h_source"/>
        <childnode refid="75536" relation="include">
        </childnode>
        <childnode refid="75537" relation="include">
        </childnode>
        <childnode refid="75538" relation="include">
        </childnode>
        <childnode refid="75539" relation="include">
        </childnode>
      </node>
      <node id="75376">
        <label>pxr/imaging/hdx/colorChannelTask.h</label>
        <link refid="color_channel_task_8h_source"/>
      </node>
      <node id="75084">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="75322">
        <label>pxr/imaging/hd/repr.h</label>
        <link refid="repr_8h_source"/>
        <childnode refid="75323" relation="include">
        </childnode>
        <childnode refid="75329" relation="include">
        </childnode>
        <childnode refid="75385" relation="include">
        </childnode>
        <childnode refid="75325" relation="include">
        </childnode>
      </node>
      <node id="75053">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="75054" relation="include">
        </childnode>
        <childnode refid="75057" relation="include">
        </childnode>
      </node>
      <node id="75066">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="75058" relation="include">
        </childnode>
        <childnode refid="75067" relation="include">
        </childnode>
        <childnode refid="75068" relation="include">
        </childnode>
        <childnode refid="75061" relation="include">
        </childnode>
        <childnode refid="75069" relation="include">
        </childnode>
        <childnode refid="75070" relation="include">
        </childnode>
        <childnode refid="75071" relation="include">
        </childnode>
        <childnode refid="75072" relation="include">
        </childnode>
        <childnode refid="75073" relation="include">
        </childnode>
        <childnode refid="75074" relation="include">
        </childnode>
        <childnode refid="75075" relation="include">
        </childnode>
        <childnode refid="75076" relation="include">
        </childnode>
        <childnode refid="75077" relation="include">
        </childnode>
        <childnode refid="75078" relation="include">
        </childnode>
      </node>
      <node id="75042">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="75043" relation="include">
        </childnode>
        <childnode refid="75044" relation="include">
        </childnode>
        <childnode refid="75045" relation="include">
        </childnode>
        <childnode refid="75046" relation="include">
        </childnode>
      </node>
      <node id="75221">
        <label>pxr/usd/usdPhysics/distanceJoint.h</label>
        <link refid="distance_joint_8h"/>
      </node>
      <node id="75348">
        <label>pxr/imaging/hdSt/primUtils.h</label>
        <link refid="prim_utils_8h_source"/>
      </node>
      <node id="75346">
        <label>pxr/imaging/hdPrman/gprim.h</label>
        <link refid="imaging_2hd_prman_2gprim_8h_source"/>
        <childnode refid="75331" relation="include">
        </childnode>
        <childnode refid="75343" relation="include">
        </childnode>
        <childnode refid="75344" relation="include">
        </childnode>
        <childnode refid="75335" relation="include">
        </childnode>
        <childnode refid="75338" relation="include">
        </childnode>
        <childnode refid="75347" relation="include">
        </childnode>
        <childnode refid="75341" relation="include">
        </childnode>
      </node>
      <node id="75252">
        <label>pxr/usd/usd/specializes.h</label>
        <link refid="specializes_8h_source"/>
      </node>
      <node id="75185">
        <label>pxr/usd/usdGeom/nurbsCurves.h</label>
        <link refid="nurbs_curves_8h"/>
      </node>
      <node id="75373">
        <label>pxr/imaging/hdx/task.h</label>
        <link refid="_2task_8h_source"/>
        <childnode refid="75374" relation="include">
        </childnode>
        <childnode refid="75375" relation="include">
        </childnode>
        <childnode refid="75376" relation="include">
        </childnode>
        <childnode refid="75377" relation="include">
        </childnode>
        <childnode refid="75378" relation="include">
        </childnode>
        <childnode refid="75360" relation="include">
        </childnode>
        <childnode refid="75379" relation="include">
        </childnode>
        <childnode refid="75365" relation="include">
        </childnode>
        <childnode refid="75368" relation="include">
        </childnode>
        <childnode refid="75380" relation="include">
        </childnode>
      </node>
      <node id="75430">
        <label>pxr/usd/usdHydra/discoveryPlugin.h</label>
        <link refid="usd_hydra_2discovery_plugin_8h_source"/>
      </node>
      <node id="75194">
        <label>pxr/usd/usdSkel/skeleton.h</label>
        <link refid="skeleton_8h"/>
        <childnode refid="75195" relation="include">
        </childnode>
        <childnode refid="75156" relation="include">
        </childnode>
        <childnode refid="75105" relation="include">
        </childnode>
      </node>
      <node id="75308">
        <label>pxr/usd/sdf/schemaTypeRegistration.h</label>
        <link refid="schema_type_registration_8h_source"/>
      </node>
      <node id="75069">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="75571">
        <label>pxr/base/tf/scriptModuleLoader.h</label>
        <link refid="script_module_loader_8h_source"/>
      </node>
      <node id="75205">
        <label>pxr/usd/usdVol/fieldAsset.h</label>
        <link refid="field_asset_8h"/>
        <childnode refid="75206" relation="include">
        </childnode>
        <childnode refid="75207" relation="include">
        </childnode>
      </node>
      <node id="75517">
        <label>pxr/imaging/hdPrman/coordSysPrimSceneIndexPlugin.h</label>
        <link refid="coord_sys_prim_scene_index_plugin_8h_source"/>
      </node>
      <node id="75265">
        <label>pxr/usd/usd/resolveInfo.h</label>
        <link refid="resolve_info_8h"/>
        <childnode refid="75214" relation="include">
        </childnode>
        <childnode refid="75167" relation="include">
        </childnode>
      </node>
      <node id="75105">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="75505">
        <label>pxr/usdImaging/usdImaging/rerootingSceneIndex.h</label>
        <link refid="rerooting_scene_index_8h_source"/>
      </node>
      <node id="75062">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="75573">
        <label>pxr/base/tf/diagnosticBase.h</label>
        <link refid="diagnostic_base_8h"/>
        <childnode refid="75574" relation="include">
        </childnode>
        <childnode refid="75587" relation="include">
        </childnode>
        <childnode refid="75588" relation="include">
        </childnode>
      </node>
      <node id="75531">
        <label>pxr/imaging/hd/sceneIndexPrimView.h</label>
        <link refid="scene_index_prim_view_8h_source"/>
      </node>
      <node id="75177">
        <label>pxr/usd/usdGeom/cube.h</label>
        <link refid="cube_8h"/>
        <childnode refid="75054" relation="include">
        </childnode>
      </node>
      <node id="75587">
        <label>pxr/base/tf/status.h</label>
        <link refid="status_8h_source"/>
        <childnode refid="75575" relation="include">
        </childnode>
      </node>
      <node id="75379">
        <label>pxr/imaging/hdx/presentTask.h</label>
        <link refid="present_task_8h_source"/>
      </node>
      <node id="75144">
        <label>pxr/usd/usdPhysics/massAPI.h</label>
        <link refid="mass_a_p_i_8h"/>
      </node>
      <node id="75195">
        <label>pxr/usd/usdSkel/binding.h</label>
        <link refid="usd_2usd_skel_2binding_8h"/>
        <childnode refid="75196" relation="include">
        </childnode>
        <childnode refid="75198" relation="include">
        </childnode>
        <childnode refid="75105" relation="include">
        </childnode>
      </node>
      <node id="75261">
        <label>pxr/usdImaging/usdImaging/materialBindingAPIAdapter.h</label>
        <link refid="material_binding_a_p_i_adapter_8h_source"/>
      </node>
      <node id="75415">
        <label>pxr/imaging/hdSt/material.h</label>
        <link refid="imaging_2hd_st_2material_8h_source"/>
      </node>
      <node id="75416">
        <label>pxr/imaging/hdSt/renderPassShader.h</label>
        <link refid="render_pass_shader_8h_source"/>
      </node>
      <node id="75050">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="75329">
        <label>pxr/imaging/hd/rprim.h</label>
        <link refid="rprim_8h_source"/>
        <childnode refid="75330" relation="include">
        </childnode>
        <childnode refid="75333" relation="include">
        </childnode>
        <childnode refid="75337" relation="include">
        </childnode>
        <childnode refid="75340" relation="include">
        </childnode>
        <childnode refid="75343" relation="include">
        </childnode>
        <childnode refid="75344" relation="include">
        </childnode>
        <childnode refid="75345" relation="include">
        </childnode>
        <childnode refid="75347" relation="include">
        </childnode>
        <childnode refid="75348" relation="include">
        </childnode>
        <childnode refid="75056" relation="include">
        </childnode>
      </node>
      <node id="75569">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="75314" relation="include">
        </childnode>
        <childnode refid="75014" relation="include">
        </childnode>
        <childnode refid="75570" relation="include">
        </childnode>
        <childnode refid="75571" relation="include">
        </childnode>
        <childnode refid="75572" relation="include">
        </childnode>
        <childnode refid="75591" relation="include">
        </childnode>
        <childnode refid="75315" relation="include">
        </childnode>
        <childnode refid="75318" relation="include">
        </childnode>
        <childnode refid="75423" relation="include">
        </childnode>
        <childnode refid="75592" relation="include">
        </childnode>
        <childnode refid="75426" relation="include">
        </childnode>
        <childnode refid="75589" relation="include">
        </childnode>
        <childnode refid="75428" relation="include">
        </childnode>
        <childnode refid="75437" relation="include">
        </childnode>
        <childnode refid="75447" relation="include">
        </childnode>
        <childnode refid="75455" relation="include">
        </childnode>
        <childnode refid="75022" relation="include">
        </childnode>
        <childnode refid="75593" relation="include">
        </childnode>
        <childnode refid="75166" relation="include">
        </childnode>
        <childnode refid="75030" relation="include">
        </childnode>
        <childnode refid="75474" relation="include">
        </childnode>
        <childnode refid="75594" relation="include">
        </childnode>
        <childnode refid="75475" relation="include">
        </childnode>
        <childnode refid="75476" relation="include">
        </childnode>
        <childnode refid="75479" relation="include">
        </childnode>
        <childnode refid="75540" relation="include">
        </childnode>
      </node>
      <node id="75553">
        <label>pxr/base/tf/anyWeakPtr.h</label>
        <link refid="any_weak_ptr_8h"/>
        <childnode refid="75554" relation="include">
        </childnode>
        <childnode refid="75549" relation="include">
        </childnode>
      </node>
      <node id="75464">
        <label>pxr/usd/usdSkel/topology.h</label>
        <link refid="usd_2usd_skel_2topology_8h"/>
        <childnode refid="75194" relation="include">
        </childnode>
      </node>
      <node id="75402">
        <label>pxr/imaging/hdSt/drawTargetRenderPassState.h</label>
        <link refid="draw_target_render_pass_state_8h_source"/>
        <childnode refid="75401" relation="include">
        </childnode>
      </node>
      <node id="75568">
        <label>pxr/usd/sdf/pyMapEditProxy.h</label>
        <link refid="py_map_edit_proxy_8h"/>
      </node>
      <node id="75327">
        <label>pxr/imaging/hd/extComputationUtils.h</label>
        <link refid="ext_computation_utils_8h_source"/>
      </node>
      <node id="75154">
        <label>pxr/usd/usdShade/nodeDefAPI.h</label>
        <link refid="node_def_a_p_i_8h"/>
        <childnode refid="75155" relation="include">
        </childnode>
        <childnode refid="75048" relation="include">
        </childnode>
      </node>
      <node id="75594">
        <label>pxr/imaging/glf/bindingMap.h</label>
        <link refid="binding_map_8h"/>
      </node>
      <node id="75282">
        <label>pxr/usd/usd/editContext.h</label>
        <link refid="edit_context_8h_source"/>
        <childnode refid="75283" relation="include">
        </childnode>
      </node>
      <node id="75104">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
      <node id="75593">
        <label>pxr/usd/sdr/shaderProperty.h</label>
        <link refid="shader_property_8h"/>
      </node>
      <node id="75530">
        <label>pxr/imaging/hdx/selectionSceneIndexObserver.h</label>
        <link refid="selection_scene_index_observer_8h_source"/>
      </node>
      <node id="75467">
        <label>pxr/usd/usdShade/udimUtils.h</label>
        <link refid="udim_utils_8h_source"/>
      </node>
      <node id="75398">
        <label>pxr/imaging/hdSt/renderDelegate.h</label>
        <link refid="t_2render_delegate_8h_source"/>
      </node>
      <node id="75514">
        <label>pxr/imaging/hd/sceneGlobalsSchema.h</label>
        <link refid="scene_globals_schema_8h_source"/>
      </node>
      <node id="75256">
        <label>pxr/usdImaging/usdImaging/apiSchemaAdapter.h</label>
        <link refid="api_schema_adapter_8h"/>
        <childnode refid="75257" relation="include">
        </childnode>
        <childnode refid="75258" relation="include">
        </childnode>
        <childnode refid="75259" relation="include">
        </childnode>
        <childnode refid="75260" relation="include">
        </childnode>
        <childnode refid="75261" relation="include">
        </childnode>
      </node>
      <node id="75215">
        <label>pxr/usd/usd/schemaBase.h</label>
        <link refid="schema_base_8h_source"/>
        <childnode refid="75031" relation="include">
        </childnode>
        <childnode refid="75216" relation="include">
        </childnode>
      </node>
      <node id="75363">
        <label>pxr/imaging/hdx/oitResolveTask.h</label>
        <link refid="oit_resolve_task_8h_source"/>
      </node>
      <node id="75023">
        <label>pxr/usd/sdf/accessorHelpers.h</label>
        <link refid="accessor_helpers_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_tf_weak_ptr" prot="public">TfWeakPtr</innerclass>
    <innerclass refid="class_tf_weak_ptr_facade" prot="public">TfWeakPtrFacade</innerclass>
    <innerclass refid="class_tf_ref_ptr" prot="public">TfRefPtr</innerclass>
    <innerclass refid="struct_tf_ref_ptr_1_1_rebind" prot="public">TfRefPtr::Rebind</innerclass>
    <innerclass refid="class_tf_ref_ptr_1_1___create_ref_ptr" prot="private">TfRefPtr::_CreateRefPtr</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ref_ptr_8h_1a3e20c45d7ac01819aeabe2e4fc74d462" prot="public" static="no">
        <name>TF_SUPPORTS_REFPTR</name>
        <param><defname>T</defname></param>
        <initializer>std::is_base_of&lt;<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>, T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refPtr.h" line="1342" column="9" bodyfile="pxr/base/tf/refPtr.h" bodystart="1342" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reference counting. </para>
    </briefdescription>
    <detaileddescription>
<para><anchor id="ref_ptr_8h_1refPtr_QuickStart"/><bold> Quick Start </bold></para>
<para>Here is how to make a class <computeroutput>Bunny</computeroutput> usable through <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput>.</para>
<para><programlisting><codeline><highlight class="normal">#include<sp/>&quot;pxr/base/tf/refPtr.h&quot;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;Bunny&gt;<sp/>BunnyRefPtr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>Bunny<sp/>:<sp/>public<sp/>TfRefBase<sp/>{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>BunnyRefPtr<sp/>New()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>warning:<sp/>return<sp/>new<sp/>Bunny<sp/>directly<sp/>will<sp/>leak<sp/>memory!</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TfCreateRefPtr(new<sp/>Bunny);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>BunnyRefPtr<sp/>New(bool<sp/>isRabid)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TfCreateRefPtr(new<sp/>Bunny(isRabid));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>~Bunny();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>IsHungry();</highlight></codeline>
<codeline><highlight class="normal"><sp/>private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Bunny();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Bunny(bool);</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">BunnyRefPtr<sp/>nice<sp/>=<sp/>Bunny::New();</highlight></codeline>
<codeline><highlight class="normal">BunnyRefPtr<sp/>mean<sp/>=<sp/>Bunny::New(true);<sp/><sp/><sp/><sp/>//<sp/>this<sp/>one<sp/>is<sp/>rabid</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">BunnyRefPtr<sp/>mean2<sp/>=<sp/>mean;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>two<sp/>references<sp/>to<sp/>mean<sp/>rabbit</highlight></codeline>
<codeline><highlight class="normal">mean.Reset();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>one<sp/>reference<sp/>to<sp/>mean<sp/>rabbit</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(mean2-&gt;IsHungry())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>nice.Reset();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>nice<sp/>bunny<sp/>gone<sp/>now...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>this<sp/>function<sp/>comes<sp/>from</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>TfRefBase;<sp/>meaning<sp/>is<sp/>that</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(mean2-&gt;IsUnique())<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>mean2<sp/>is<sp/>the<sp/>last<sp/>pointer<sp/>to</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>mean2.Reset();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>this<sp/>bunny...</highlight></codeline>
</programlisting></para>
<para>Pretty much any pointer operation that is legal with regular pointers is legal with the <computeroutput>BunnyRefPtr</computeroutput>; continue reading for a more detailed description.</para>
<para>Note that by virtue of deriving from <computeroutput><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref></computeroutput>, the reference count can be queried: see <computeroutput><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref></computeroutput> for details.</para>
<para><anchor id="ref_ptr_8h_1refPtr_DetailedDiscussion"/><bold> Detailed Discussion: Overview </bold></para>
<para>Objects created by the <computeroutput>new</computeroutput> operator can easily be a source of both memory leaks and dangling pointers. One solution is <emphasis>reference</emphasis> counting; when an object is created by <computeroutput>new</computeroutput>, the number of pointers given the object&apos;s address is continually tracked in a <emphasis>reference</emphasis> <emphasis>counter</emphasis>. Then, <computeroutput>delete</computeroutput> is called on the object <emphasis>only</emphasis> when the object&apos;s reference count drops to zero, meaning there are no more pointers left pointing to the object. Reference counting avoids both dangling pointers and memory leaks.</para>
<para>Access by regular pointers does not perform reference counting, but the <computeroutput>TfRefPtr&lt;T&gt;</computeroutput> class implements reference-counted pointer access to objects of type <computeroutput>T</computeroutput>, with minimal overhead. The reference counting is made thread-safe by use of atomic integers.</para>
<para><bold> Basic Use </bold></para>
<para>The use of a <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> is simple. Whenever a <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> is made to point at an object, either by initialization or assignment, the object being pointed at has its reference count incremented. When a <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> with a non-NULL address is reassigned, or goes out of scope, the object being pointed to has its reference count decremented.</para>
<para>A <computeroutput>TfRefPtr&lt;T&gt;</computeroutput> can access <computeroutput>T&apos;s</computeroutput> public members by the <computeroutput>-&gt;</computeroutput> operator and can be dereferenced by the &quot;\c *&quot; operator. Here is a simple example: <programlisting><codeline><highlight class="normal">#include<sp/>&quot;pxr/base/tf/refPtr.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;Simple&gt;<sp/>SimpleRefPtr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>Simple<sp/>:<sp/>public<sp/>TfRefBase<sp/>{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Method1();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/><sp/>Method2();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>SimpleRefPtr<sp/>New()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TfCreateRefPtr(new<sp/>Simple);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Simple();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">SimpleRefPtr<sp/>p1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>p1<sp/>points<sp/>to<sp/>NULL</highlight></codeline>
<codeline><highlight class="normal">SimpleRefPtr<sp/>p2<sp/>=<sp/>Simple::New();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>p2<sp/>points<sp/>to<sp/>new<sp/>object<sp/>A</highlight></codeline>
<codeline><highlight class="normal">SimpleRefPtr<sp/>p3<sp/>=<sp/>Simple::New();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>p3<sp/>points<sp/>to<sp/>new<sp/>object<sp/>B</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">p1-&gt;Method1();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>runtime<sp/>error<sp/>--<sp/>p1<sp/>is<sp/>NULL</highlight></codeline>
<codeline><highlight class="normal">p3<sp/>=<sp/>p2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>object<sp/>B<sp/>is<sp/>deleted</highlight></codeline>
<codeline><highlight class="normal">p2-&gt;Method1();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Method1<sp/>on<sp/>object<sp/>A</highlight></codeline>
<codeline><highlight class="normal">int<sp/>value<sp/>=<sp/>p3-&gt;Method2();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Method2<sp/>on<sp/>object<sp/>A</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">p2.Reset();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>only<sp/>p3<sp/>still<sp/>points<sp/>at<sp/>A</highlight></codeline>
<codeline><highlight class="normal">p3<sp/>=<sp/>p1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>object<sp/>A<sp/>is<sp/>deleted</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(...)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SimpleRefPtr<sp/>p4<sp/>=<sp/>Simple::New();<sp/><sp/><sp/><sp/><sp/>//<sp/>p4<sp/>points<sp/>to<sp/>object<sp/>C</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>p4-&gt;Method1();</highlight></codeline>
<codeline><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>object<sp/>C<sp/>destroyed</highlight></codeline>
</programlisting></para>
<para>Note that <computeroutput>Simple&apos;s</computeroutput> constructor is private; this ensures that one can only get at a <computeroutput>Simple</computeroutput> through <computeroutput>Simple::New()</computeroutput>, which is careful to return a <computeroutput>SimpleRefPtr</computeroutput>.</para>
<para>Note that it is often useful to have both const and non-const versions of <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> for the same data type. Our convention is to use a <computeroutput>typedef</computeroutput> for each of these, with the const version beginning with &quot;Const&quot;, after any prefix. The const version can be used as a parameter to a function in which you want to prevent changes to the pointed-to object. For example: <programlisting><codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;XySimple&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XySimpleRefPtr;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;const<sp/>XySimple&gt;<sp/>XyConstSimpleRefPtr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void</highlight></codeline>
<codeline><highlight class="normal">Func1(const<sp/>XySimpleRefPtr<sp/>&amp;p)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;Modify();<sp/><sp/>//<sp/>OK<sp/>even<sp/>if<sp/>Modify()<sp/>is<sp/>not<sp/>a<sp/>const<sp/>member</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void</highlight></codeline>
<codeline><highlight class="normal">Func2(const<sp/>XyConstSimpleRefPtr<sp/>&amp;p)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;Query();<sp/><sp/><sp/>//<sp/>OK<sp/>only<sp/>if<sp/>Query()<sp/>is<sp/>a<sp/>const<sp/>member</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>It is always possible to assign a non-const pointer to a const pointer variable. In extremely rare cases where you want to do the opposite, you can use the <computeroutput>TfConst_cast</computeroutput> function, as in: <programlisting><codeline><highlight class="normal">XyConstSimpleRefPtr<sp/>p1;</highlight></codeline>
<codeline><highlight class="normal">XySimpleRefPtr<sp/><sp/><sp/><sp/><sp/><sp/>p2;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">p1<sp/>=<sp/>p2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>OK</highlight></codeline>
<codeline><highlight class="normal">p2<sp/>=<sp/>p1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Illegal!</highlight></codeline>
<codeline><highlight class="normal">p2<sp/>=<sp/>TfConst_cast&lt;XySimpleRefPtr&gt;(p1);<sp/>//<sp/>OK,<sp/>but<sp/>discouraged</highlight></codeline>
</programlisting></para>
<para><bold> Comparisons and Tests </bold></para>
<para>Reference-counted pointers of like type can be compared; any <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> can be tested to see it is NULL or not:</para>
<para><programlisting><codeline><highlight class="normal">TfRefPtr&lt;Elf&gt;<sp/><sp/><sp/>elf<sp/>=<sp/>Elf::New();</highlight></codeline>
<codeline><highlight class="normal">TfRefPtr&lt;Dwarf&gt;<sp/>sleepy,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sneezy<sp/>=<sp/>Dwarf::New();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(!sleepy)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>true:<sp/>sleepy<sp/>is<sp/>NULL</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(sneezy)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>true:<sp/>sneezy<sp/>is<sp/>non-nULL</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">bool<sp/>b1<sp/>=<sp/>(sleepy<sp/>!=<sp/>sneezy),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>b2<sp/>=<sp/>(sleepy<sp/>==<sp/>sneezy),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>b3<sp/>=<sp/>(elf<sp/>==<sp/>sneezy);<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compilation<sp/>error<sp/>--<sp/>type<sp/>clash</highlight></codeline>
</programlisting></para>
<para><bold> Opaqueness </bold></para>
<para>A <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> can be used as an opaque pointer, just as a regular pointer can. For example, without having included the header file for a class <computeroutput>XySimple</computeroutput>, the following will still compile: <programlisting><codeline><highlight class="normal">#include<sp/>&quot;pxr/base/tf/refPtr.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>XySimple;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>Complicated<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/>public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>SetSimple(const<sp/>TfRefPtr&lt;XySimple&gt;&amp;<sp/>s)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_simplePtr<sp/>=<sp/>s;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TfRefPtr&lt;XySimple&gt;<sp/>GetSimple()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>_simplePtr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Forget()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_simplePtr.Reset();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/>private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TfRefPtr&lt;XySimple&gt;<sp/>_simplePtr;</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>Note that the call <computeroutput>Forget()</computeroutput> (or <computeroutput>SetSimple()</computeroutput> for that matter) may implicitly cause destruction of an <computeroutput>XySimple</computeroutput> object, if the count of the object pointed to by <computeroutput>_simplePtr</computeroutput> drops to zero. Even though the definition of <computeroutput>XySimple</computeroutput> is unknown, this compiles and works correctly.</para>
<para>The only time that the definition of <computeroutput>XySimple</computeroutput> is required is when putting a raw <computeroutput>XySimple*</computeroutput> into a <computeroutput>TfRefPtr&lt;XySimple&gt;</computeroutput>; note however, that this should in fact only be done within the class definition of <computeroutput>XySimple</computeroutput> itself.</para>
<para>Other cases that require a definition of <computeroutput>XySimple</computeroutput> are parallel to regular raw pointers, such as calling a member function, static or dynamic casts (but not const casts) and using the <computeroutput>TfTypeid</computeroutput> function. Transferring a <computeroutput><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref></computeroutput> to a <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> also requires knowing the definition of <computeroutput>XySimple</computeroutput>.</para>
<para>Sometimes a class may have many typedefs associated with it, having to do with <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> or <computeroutput><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref></computeroutput>. If it is useful to use the class opaquely, we recommend creating a separate file as follows:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>file:<sp/>proj/xy/simplePtrDefs.h</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;pxr/base/tf/refPtr.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;pxr/base/tf/weakPtr.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;class<sp/>XySimple&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>XySimpleRefPtr;</highlight></codeline>
<codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;const<sp/>class<sp/>XySimple&gt;<sp/>XyConstSimpleRefPtr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>typedefs<sp/>for<sp/>TfWeakPtr&lt;XySimple&gt;<sp/>would<sp/>follow,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>if<sp/>XySimple<sp/>derives<sp/>from<sp/>TfWeakBase</highlight></codeline>
</programlisting></para>
<para>The definition for <computeroutput>XySimple</computeroutput> would then use the typedefs:</para>
<para><programlisting><codeline><highlight class="normal">#include<sp/>&quot;Proj/Xy/SimpleRefPtrDefs.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>XySimple<sp/>:<sp/>public<sp/>TfRefBase<sp/>{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>XySimpleRefPtr<sp/>New();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>The above pattern now allows a consumer of class <computeroutput>XySimple</computeroutput> the option to include only <computeroutput>simplePtrDefs.h</computeroutput>, if using the type opaquely suffices, or to include <computeroutput>simple.h</computeroutput>, if the class definition is required.</para>
<para><bold> Cyclic Dependencies </bold></para>
<para>If you build a tree using <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput>, and you only have pointers from parent to child, everything is fine: if you &quot;lose&quot; the root of the tree, the tree will correctly destroy itself.</para>
<para>But what if children point back to parents? Then a simple parent/child pair is stable, because the parent and child point at each other, and even if nobody else has a pointer to the parent, the reference count of the two nodes remains at one.</para>
<para>The solution to this is to make one of the links (typically from child back to parent) use a <computeroutput><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref></computeroutput>. If a class <computeroutput>T</computeroutput> is enabled for both &quot;guarding&quot; (see <computeroutput><ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref></computeroutput>) and reference counting, then a <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> can be converted to a <computeroutput><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref></computeroutput> (in this context, a &quot;back pointer&quot;) and vice versa.</para>
<para><bold> Inheritance </bold></para>
<para>Reference-counted pointers obey the same rules with respect to inheritance as regular pointers. In particular, if class <computeroutput>Derived</computeroutput> is derived from class <computeroutput>Base</computeroutput>, then the following are legal:</para>
<para><programlisting><codeline><highlight class="normal">TfRefPtr&lt;Base&gt;<sp/><sp/><sp/><sp/>bPtr<sp/>=<sp/>new<sp/>Base;</highlight></codeline>
<codeline><highlight class="normal">TfRefPtr&lt;Derived&gt;<sp/>dPtr<sp/>=<sp/>new<sp/>Derived;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TfRefPtr&lt;Base&gt;<sp/>b2Ptr<sp/>=<sp/>dPtr;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>initialization</highlight></codeline>
<codeline><highlight class="normal">b2Ptr<sp/>=<sp/>dPtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>assignment</highlight></codeline>
<codeline><highlight class="normal">b2Ptr<sp/>==<sp/>dPtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>comparison</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">dPtr<sp/>=<sp/>bPtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Not<sp/>legal:<sp/>compilation<sp/>error</highlight></codeline>
</programlisting></para>
<para>As the last example shows, initialization or assignment to a <computeroutput>TfRefPtr&lt;Derived&gt;</computeroutput> from a <computeroutput>TfRefPtr&lt;Base&gt;</computeroutput> is illegal, just as it is illegal to assign a <computeroutput>Base*</computeroutput> to a <computeroutput>Derived*</computeroutput>. However, if <computeroutput>Derived</computeroutput> and <computeroutput>Base</computeroutput> are polymorphic (i.e. have virtual functions) then the analogue of a <computeroutput>dynamic_cast&lt;&gt;</computeroutput> is possible:</para>
<para><programlisting><codeline><highlight class="normal">dPtr<sp/>=<sp/>TfDynamic_cast&lt;TfRefPtr&lt;Derived&gt;<sp/>&gt;(bPtr);</highlight></codeline>
</programlisting></para>
<para>Just like a regular <computeroutput>dynamic_cast&lt;&gt;</computeroutput> operation, the <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> returned by <computeroutput>TfDynamic_cast&lt;&gt;</computeroutput> points to NULL if the conversion fails, so that the operator can also be used to check types:</para>
<para><programlisting><codeline><highlight class="normal">if<sp/>(!<sp/>TfDynamic_cast&lt;TfRefPtr&lt;T2&gt;<sp/>&gt;(ptr))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>complain:<sp/>ptr<sp/>is<sp/>not<sp/>of<sp/>type<sp/>T2</highlight></codeline>
</programlisting></para>
<para>Similarly, one can use the <computeroutput>TfStatic_cast&lt;&gt;</computeroutput> operator to statically convert <computeroutput>TfRefPtrs:</computeroutput> </para>
<para><programlisting><codeline><highlight class="normal">dPtr<sp/>=<sp/>TfStatic_cast&lt;TfRefPtr&lt;Derived&gt;<sp/>&gt;(bPtr);</highlight></codeline>
</programlisting></para>
<para>This is faster, but not as safe as using <computeroutput>TfDynamic_cast</computeroutput>.</para>
<para>Finally, remember that in <computeroutput>C++</computeroutput>, a <computeroutput>Derived**</computeroutput> is not a <computeroutput>Base**</computeroutput>, nor is a <computeroutput>Derived*&amp;</computeroutput> a <computeroutput>Base*&amp;</computeroutput>. This implies that</para>
<para><programlisting><codeline><highlight class="normal">TfRefPtr&lt;Base&gt;*<sp/><sp/>bPtrPtr<sp/>=<sp/>&amp;dPtr;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compilation<sp/>error</highlight></codeline>
<codeline><highlight class="normal">TfRefPtr&lt;Base&gt;&amp;<sp/><sp/>bPtrRef<sp/>=<sp/>dPtr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compilation<sp/>error</highlight></codeline>
<codeline><highlight class="normal">const<sp/>TfRefPtr&lt;Base&gt;&amp;bPtrRef<sp/>=<sp/>dPtr;<sp/><sp/><sp/>//<sp/>OK</highlight></codeline>
</programlisting></para>
<para>The last initialization is legal because the compiler implicitly converts dPtr into a temporary variable of type <computeroutput>TfRefPtr&lt;Base&gt;</computeroutput>.</para>
<para><bold> Thread Safety </bold></para>
<para>One more comment about thread-safety: the above examples are thread-safe in the sense that if two or more threads create and destroy their <emphasis>own</emphasis> <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> objects, the reference counts of the underlying objects are always correct; said another way, the reference count it a thread-safe quantity.</para>
<para>However, it is never safe for two threads to simultaneously try to alter the same <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> object, nor can two threads safely call methods on the same underlying object unless that object itself guarantees thread safety.</para>
<para><anchor id="ref_ptr_8h_1refPtr_Tracking"/><bold> Tracking References </bold></para>
<para>The <computeroutput><ref refid="class_tf_ref_ptr_tracker" kindref="compound">TfRefPtrTracker</ref></computeroutput> singleton can track <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> objects that point to particular instances. The macros <computeroutput>TF_DECLARE_REFBASE_TRACK</computeroutput> and <computeroutput>TF_DEFINE_REFBASE_TRACK</computeroutput> are used to enable tracking. Tracking is enabled at compile time but which instances to track is chosen at runtime.</para>
<para><bold> Total Encapsulation </bold> <anchor id="ref_ptr_8h_1refPtr_encapsulation"/> If you&apos;re using <computeroutput>TfRefPtrs</computeroutput> on a type <computeroutput>T</computeroutput>, you probably want to completely forbid clients from creating their own objects of type <computeroutput>T</computeroutput>, and force them to go through <computeroutput>TfRefPtrs</computeroutput>. Such encapsulation is strongly encouraged. Here is the recommended technique:</para>
<para><programlisting><codeline><highlight class="normal">typedef<sp/>TfRefPtr&lt;class<sp/>Simple&gt;<sp/>SimpleRefPtr;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>Simple<sp/>:<sp/>public<sp/>TfRefBase<sp/>{</highlight></codeline>
<codeline><highlight class="normal">private:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>use<sp/>protected<sp/>if<sp/>you<sp/>plan<sp/>to<sp/>derive<sp/>later</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Simple();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Simple(&lt;arg-list&gt;);</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>SimpleRefPtr<sp/>New()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TfCreateRefPtr(new<sp/>Simple);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>static<sp/>SimpleRefPtr<sp/>New(&lt;arg-list&gt;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TfCreateRefPtr(new<sp/>Simple(&lt;arg-list&gt;));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>~Simple();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>Clients can now only create objects of type <computeroutput>Simple</computeroutput> using a <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>:</computeroutput> </para>
<para><programlisting><codeline><highlight class="normal">Simple<sp/><sp/><sp/><sp/>s;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compilation<sp/>error</highlight></codeline>
<codeline><highlight class="normal">SimpleRefPtr<sp/>sPtr1<sp/>=<sp/>new<sp/>Simple;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>compilation<sp/>error</highlight></codeline>
<codeline><highlight class="normal">SimpleRefPtr<sp/>sPtr2<sp/>=<sp/>Simple::New();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>OK</highlight></codeline>
<codeline><highlight class="normal">SimpleRefPtr<sp/>sPtr3<sp/>=<sp/>Simple::New(&lt;arg-list&gt;);<sp/><sp/><sp/>//<sp/>Ok</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_REF_PTR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_REF_PTR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="diagnostic_lite_8h" kindref="compound">pxr/base/tf/diagnosticLite.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tf_2hash_8h" kindref="compound">pxr/base/tf/hash.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/nullPtr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ref_base_8h" kindref="compound">pxr/base/tf/refBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="safe_type_compare_8h" kindref="compound">pxr/base/tf/safeTypeCompare.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type_functions_8h" kindref="compound">pxr/base/tf/typeFunctions.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hints_8h" kindref="compound">pxr/base/arch/hints.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tf_SupportsUniqueChanged<sp/>is<sp/>a<sp/>metafunction<sp/>that<sp/>may<sp/>be<sp/>specialized<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>false<sp/>for<sp/>classes<sp/>(and<sp/>all<sp/>derived<sp/>classes)<sp/>that<sp/>*cannot*<sp/>ever<sp/>invoke<sp/>unique</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="comment">//<sp/>changed<sp/>listeners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_SupportsUniqueChanged<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Value<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal">};</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Remnants<sp/>are<sp/>never<sp/>able<sp/>to<sp/>support<sp/>weak<sp/>changed<sp/>listeners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tf_Remnant;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_SupportsUniqueChanged&lt;Tf_Remnant&gt;<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Value<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">};</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">X,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Y&gt;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TfWeakPtrFacade;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Functions<sp/>used<sp/>for<sp/>tracking.<sp/><sp/>Do<sp/>not<sp/>implement<sp/>these.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_RefPtrTracker_FirstRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_RefPtrTracker_LastRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_RefPtrTracker_Delete(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tf_RefPtrTracker_Assign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>used<sp/>to<sp/>increment<sp/>and<sp/>decrement<sp/>ref<sp/>counts<sp/>in<sp/>the<sp/>common<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>may<sp/>lock<sp/>and<sp/>invoke<sp/>the<sp/>unique<sp/>changed<sp/>listener,<sp/>if<sp/>the<sp/>reference<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>becomes<sp/>unique<sp/>or<sp/>non-unique.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_RefPtr_UniqueChangedCounter<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>AddRef(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBase)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>need<sp/>to<sp/>invoke<sp/>the<sp/>unique<sp/>changed<sp/>listener.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBase-&gt;_shouldInvokeUniqueChangedListener)</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_AddRef(refBase);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>refBase-&gt;GetRefCount()._FetchAndAdd(1);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>RemoveRef(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>refBase)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBase)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>we<sp/>need<sp/>to<sp/>invoke<sp/>the<sp/>unique<sp/>changed<sp/>listener.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>refBase-&gt;_shouldInvokeUniqueChangedListener<sp/>?</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoveRef(refBase)<sp/>:</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>refBase-&gt;GetRefCount()._DecrementAndTestIfZero();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>ptr&apos;s<sp/>count<sp/>if<sp/>it<sp/>is<sp/>not<sp/>zero.<sp/><sp/>Return<sp/>true<sp/>if<sp/>done<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully,<sp/>false<sp/>if<sp/>its<sp/>count<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>AddRefIfNonzero(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr-&gt;_shouldInvokeUniqueChangedListener)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_AddRefIfNonzero(ptr);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;counter<sp/>=<sp/>ptr-&gt;GetRefCount()._counter;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>counter.load();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!counter.compare_exchange_weak(val,<sp/>val<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_RemoveRef(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_AddRef(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_AddRefIfNonzero(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase);</highlight></codeline>
<codeline lineno="526"><highlight class="normal">};</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>is<sp/>used<sp/>to<sp/>increment<sp/>and<sp/>decrement<sp/>ref<sp/>counts<sp/>in<sp/>the<sp/>case<sp/>where</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>object<sp/>pointed<sp/>to<sp/>explicitly<sp/>does<sp/>not<sp/>support<sp/>unique<sp/>changed<sp/>listeners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_RefPtr_Counter<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>AddRef(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*refBase)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(refBase)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>refBase-&gt;GetRefCount()._FetchAndAdd(1);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>RemoveRef(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr<sp/>&amp;&amp;<sp/>(ptr-&gt;GetRefCount()._DecrementAndTestIfZero()));</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>ptr&apos;s<sp/>count<sp/>if<sp/>it<sp/>is<sp/>not<sp/>zero.<sp/><sp/>Return<sp/>true<sp/>if<sp/>done<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>successfully,<sp/>false<sp/>if<sp/>its<sp/>count<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>AddRefIfNonzero(<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr)</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;counter<sp/>=<sp/>ptr-&gt;GetRefCount()._counter;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>counter.load();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!counter.compare_exchange_weak(val,<sp/>val<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal">};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>post<sp/>a<sp/>fatal<sp/>error<sp/>when<sp/>a<sp/>NULL<sp/>Tf<sp/>pointer<sp/>is<sp/>dereferenced.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">[[noreturn]]</highlight></codeline>
<codeline lineno="561"><highlight class="normal">TF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal">Tf_PostNullSmartPtrDereferenceFatalError(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TfCallContext<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>the<sp/>counter<sp/>based<sp/>on<sp/>whether<sp/>T<sp/>supports<sp/>unique<sp/>changed<sp/>listeners.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_Counter<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::conditional&lt;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_SupportsUniqueChanged&lt;T&gt;::Value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_convertible&lt;T*,<sp/>TfSimpleRefBase*&gt;::value,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtr_UniqueChangedCounter,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtr_Counter&gt;::type;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="586" refid="class_tf_ref_ptr_1afe400d3f662f42fab8f065a689ba9a4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_tf_ref_ptr_1afe400d3f662f42fab8f065a689ba9a4a" kindref="member">DataType</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Rebind<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref><sp/>Type;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" kindref="member">TfRefPtr</ref>()<sp/>:<sp/>_refBase(nullptr)<sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="class_tf_ref_ptr_1a37b016d2605e95703bb7fd61c4c4c730" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1a37b016d2605e95703bb7fd61c4c4c730" kindref="member">TfRefPtr</ref>(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;&amp;<sp/>p)<sp/>:<sp/>_refBase(p._refBase)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._refBase<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(&amp;p,<sp/>p._GetObjectForTracking(),</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="class_tf_ref_ptr_1aadb607015dc6fd449caf6a77ce316445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1aadb607015dc6fd449caf6a77ce316445" kindref="member">TfRefPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>p)<sp/>:<sp/>_refBase(p._refBase)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_AddRef();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">X,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">U&gt;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" kindref="member">TfRefPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TfWeakPtrFacade&lt;X,<sp/>U&gt;&amp;<sp/>p,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;U*,<sp/>T*&gt;::value</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type<sp/>*<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="preprocessor">#if<sp/>defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref><sp/><ref refid="class_tf_ref_ptr_1a8a1f63452b7c862198d700ba3b8ad380" kindref="member">TfCreateRefPtr</ref>(T*);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref><sp/><ref refid="class_tf_ref_ptr_1a8a1f63452b7c862198d700ba3b8ad380" kindref="member">TfCreateRefPtr</ref>(U*);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="678" refid="class_tf_ref_ptr_1a80f00837444702c7ea589a7a96ec80fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1a80f00837444702c7ea589a7a96ec80fa" kindref="member">TfRefPtr</ref>(</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U*<sp/>ptr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;U*,<sp/>T*&gt;::value&gt;::type<sp/>*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_refBase(ptr)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_AddRef();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="688" refid="class_tf_ref_ptr_1aa437dcac2e6393797505de3be6cbf010" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1aa437dcac2e6393797505de3be6cbf010" kindref="member">TfRefPtr</ref>(TfNullPtrType)<sp/>:<sp/>_refBase(nullptr)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="694" refid="class_tf_ref_ptr_1af3c8389306a23e6e828f44529c888c1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1af3c8389306a23e6e828f44529c888c1b" kindref="member">TfRefPtr</ref>(std::nullptr_t)<sp/>:<sp/>_refBase(nullptr)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="class_tf_ref_ptr_1a58ebd6e7db873f660498eae68f96528c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/><ref refid="class_tf_ref_ptr_1a58ebd6e7db873f660498eae68f96528c" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>quite<sp/>possible<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>ptr<sp/>=<sp/>TfNullPtr;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>delete<sp/>the<sp/>space<sp/>that<sp/>ptr<sp/>actually<sp/>lives<sp/>in<sp/>(this<sp/>happens</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>you<sp/>use<sp/>a<sp/>circular<sp/>reference<sp/>to<sp/>keep<sp/>an<sp/>object<sp/>alive).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>a<sp/>crash,<sp/>we<sp/>have<sp/>to<sp/>ensure<sp/>that<sp/>deletion<sp/>of<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>last<sp/>thing<sp/>done<sp/>in<sp/>the<sp/>assignment;<sp/>so<sp/>we<sp/>use<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>variables<sp/>to<sp/>help<sp/>us<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>p._GetObjectForTracking(),</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>*<sp/>tmp<sp/>=<sp/>_refBase;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_refBase<sp/>=<sp/>p._refBase;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._AddRef();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoveRef(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="745" refid="class_tf_ref_ptr_1a79110afc36318a217b8747ddacd95bbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/><ref refid="class_tf_ref_ptr_1a79110afc36318a217b8747ddacd95bbb" kindref="member">operator=</ref>(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>comment<sp/>in<sp/>assignment<sp/>operator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>p._GetObjectForTracking(),</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(&amp;p,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._GetObjectForTracking());</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>*<sp/>tmp<sp/>=<sp/>_refBase;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_refBase<sp/>=<sp/>p._refBase;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._refBase<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoveRef(tmp);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="764" refid="class_tf_ref_ptr_1a4c127a68abb58485ca93cc93cbcbc315" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1a4c127a68abb58485ca93cc93cbcbc315" kindref="member">~TfRefPtr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Delete(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoveRef(_refBase);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="class_tf_ref_ptr_1ae2a72ffad18f4bd51d1b9c8359712a61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ae2a72ffad18f4bd51d1b9c8359712a61" kindref="member">TfRefPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/>:<sp/>_refBase(p._refBase)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;U*,<sp/>T*&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_AddRef();</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799" refid="class_tf_ref_ptr_1ad59871465a56e3ba5751a0df193bfe78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ad59871465a56e3ba5751a0df193bfe78" kindref="member">TfRefPtr</ref>(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;&amp;<sp/>p)<sp/>:<sp/>_refBase(p._refBase)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;U*,<sp/>T*&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._refBase<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(&amp;p,<sp/>p._GetObjectForTracking(),</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820" refid="class_tf_ref_ptr_1ac572a39d34606471f22108798561bc46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/><ref refid="class_tf_ref_ptr_1ac572a39d34606471f22108798561bc46" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;U*,<sp/>T*&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;T*&gt;(p._GetObjectForTracking()),</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>*<sp/>tmp<sp/>=<sp/>_refBase;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_refBase<sp/>=<sp/>p._GetData();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._AddRef();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoveRef(tmp);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="class_tf_ref_ptr_1a670f7f34961d6412ffa3888e5567c0ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/><ref refid="class_tf_ref_ptr_1a670f7f34961d6412ffa3888e5567c0ee" kindref="member">operator=</ref>(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;&amp;<sp/>p)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_convertible&lt;U*,<sp/>T*&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;T*&gt;(p._GetObjectForTracking()),</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(&amp;p,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;T*&gt;(p._GetObjectForTracking()));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>*<sp/>tmp<sp/>=<sp/>_refBase;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_refBase<sp/>=<sp/>p._GetData();</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p._refBase<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoveRef(tmp);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="class_tf_ref_ptr_1a0cf528f98b109e720fffdc2a273f7937" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1a0cf528f98b109e720fffdc2a273f7937" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;T<sp/>*&gt;()<sp/>==<sp/>std::declval&lt;U<sp/>*&gt;(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>==<sp/>p._refBase;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881" refid="class_tf_ref_ptr_1abf3873f48a2806208484a4d39ca00c40" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1abf3873f48a2806208484a4d39ca00c40" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;T<sp/>*&gt;()<sp/>!=<sp/>std::declval&lt;U<sp/>*&gt;(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>!=<sp/>p._refBase;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893" refid="class_tf_ref_ptr_1aeaf71084107e6a32783cfe6c6f1d4fa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1aeaf71084107e6a32783cfe6c6f1d4fa3" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;T<sp/>*&gt;()<sp/>&lt;<sp/>std::declval&lt;U<sp/>*&gt;(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>&lt;<sp/>p._refBase;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;T<sp/>*&gt;()<sp/>&gt;<sp/>std::declval&lt;U<sp/>*&gt;(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>&gt;<sp/>p._refBase;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator&lt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;T<sp/>*&gt;()<sp/>&lt;=<sp/>std::declval&lt;U<sp/>*&gt;(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>&lt;=<sp/>p._refBase;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator&gt;=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/>decltype(std::declval&lt;T<sp/>*&gt;()<sp/>&gt;=<sp/>std::declval&lt;U<sp/>*&gt;(),<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">())<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>&gt;=<sp/>p._refBase;</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="class_tf_ref_ptr_1a5c1735ebb61cb9b40f6d0ed30be8a288" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/><ref refid="class_tf_ref_ptr_1a5c1735ebb61cb9b40f6d0ed30be8a288" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_refBase)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;T*&gt;(const_cast&lt;TfRefBase*&gt;(_refBase));</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_PostNullSmartPtrDereferenceFatalError(</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_CALL_CONTEXT,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>).name());</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="932" refid="class_tf_ref_ptr_1a2477b013cf44492b54afd64d151de6aa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T&amp;<sp/><ref refid="class_tf_ref_ptr_1a2477b013cf44492b54afd64d151de6aa" kindref="member">operator *</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_tf_ref_ptr_1a5c1735ebb61cb9b40f6d0ed30be8a288" kindref="member">operator-&gt;</ref>();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>UnspecifiedBoolType<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref><sp/>*<sp/>(<ref refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" kindref="member">TfRefPtr</ref>::*);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="941" refid="class_tf_ref_ptr_1a10c79bb09aeb8efbd9b01ee1fbde0061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>UnspecifiedBoolType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>?<sp/>&amp;TfRefPtr::_refBase<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="946" refid="class_tf_ref_ptr_1a45a49470b17aeb71f23c5a2ca7bff5fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1a45a49470b17aeb71f23c5a2ca7bff5fa" kindref="member">operator !</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refBase<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="class_tf_ref_ptr_1a720afd959893c637eb1aa2dfd879dcfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1a720afd959893c637eb1aa2dfd879dcfd" kindref="member">swap</ref>(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>other._GetObjectForTracking(),</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_Assign(&amp;other,<sp/>_GetObjectForTracking(),</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other._GetObjectForTracking());</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(_refBase,<sp/>other._refBase);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="964" refid="class_tf_ref_ptr_1a372de693ad40b3f42839c8ec6ac845f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr_1a372de693ad40b3f42839c8ec6ac845f4" kindref="member">Reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>TfNullPtr;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>*<sp/>_refBase;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>HashState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TfHashAppend(HashState<sp/>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash_value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>T<sp/>*get_pointer(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;p)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;T<sp/>*&gt;(const_cast&lt;TfRefBase<sp/>*&gt;(p._refBase));</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>to<sp/>distinguish<sp/>construction<sp/>in<sp/>TfCreateRefPtr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_CreateRefPtr<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>private<sp/>constructor,<sp/>used<sp/>by<sp/>TfCreateRefPtr()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" kindref="member">TfRefPtr</ref>(T*<sp/>ptr,<sp/>_CreateRefPtr<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_refBase(ptr)</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reference<sp/>count<sp/>is<sp/>NOT<sp/>bumped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_FirstRef(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_New(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>_GetObjectForTracking());</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hide<sp/>confusing<sp/>internals<sp/>of<sp/>actual<sp/>C++<sp/>definition<sp/>(e.g.<sp/>DataType)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>doxygen<sp/>output:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="preprocessor">#if<sp/>defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanitized<sp/>for<sp/>documentation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;D&gt;</ref><sp/><ref refid="class_tf_ref_ptr_1a33867ccc5d837124fb08eff87e027c80" kindref="member">TfDynamic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1a33867ccc5d837124fb08eff87e027c80" kindref="member">TfDynamic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;B&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="safe_type_compare_8h_1aa394a1e0354f9df3a7c5f5eec494f2c7" kindref="member">TfSafeDynamic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;B&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="preprocessor">#if<sp/>defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanitized<sp/>for<sp/>documentation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;D&gt;</ref><sp/><ref refid="class_tf_ref_ptr_1afe6d36e3754da224ba3f0093c0b64fa3" kindref="member">TfStatic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>B&gt;</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1afe6d36e3754da224ba3f0093c0b64fa3" kindref="member">TfStatic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;B&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="preprocessor">#if<sp/>defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sanitized<sp/>for<sp/>documentation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;D&gt;</ref><sp/><ref refid="class_tf_ref_ptr_1ae090e00181e4bc38bee64e5542c7e1d6" kindref="member">TfConst_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const D&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ae090e00181e4bc38bee64e5542c7e1d6" kindref="member">TfConst_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const typename D::DataType&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>_GetData()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;T*&gt;(const_cast&lt;TfRefBase*&gt;(_refBase));</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>is<sp/>only<sp/>used<sp/>when<sp/>calling<sp/>the<sp/>hook<sp/>functions<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tracking.<sp/><sp/>We<sp/>reinterpret_cast<sp/>instead<sp/>of<sp/>static_cast<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>need<sp/>the<sp/>definition<sp/>of<sp/>T.<sp/><sp/>However,<sp/>if<sp/>TfRefBase<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>first<sp/>base<sp/>class<sp/>of<sp/>T<sp/>then<sp/>the<sp/>resulting<sp/>pointer<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>point<sp/>to<sp/>a<sp/>T.<sp/><sp/>Nevertheless,<sp/>it<sp/>should<sp/>be<sp/>consistent<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>calls<sp/>to<sp/>the<sp/>tracking<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>_GetObjectForTracking()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reinterpret_cast&lt;T*&gt;(const_cast&lt;TfRefBase*&gt;(_refBase));</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;<sp/><ref refid="class_tf_ref_ptr_1a928f24fab0d243b7270a2ce7f92f8921" kindref="member">TfTypeid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref>&amp;<sp/>ptr);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_AddRef()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Counter::AddRef(_refBase);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_RemoveRef(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>*<sp/>ptr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_Counter::RemoveRef(ptr))<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RefPtrTracker_LastRef(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;T*&gt;(const_cast&lt;TfRefBase*&gt;(ptr)));</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!<sp/>defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>doxygen<sp/>is<sp/>very<sp/>confused<sp/>by<sp/>this.<sp/>It<sp/>declares<sp/>all<sp/>TfRefPtrs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>friends.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Tf_Remnant;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;U&gt;</ref><sp/><ref refid="weak_ptr_8h_1a7f25110d342fc385b9f49536bf3a3852" kindref="member">TfCreateRefPtrFromProtectedWeakPtr</ref>(<ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr&lt;U&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref>;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>nullptr<sp/>comparisons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>are<sp/>provided<sp/>to<sp/>avoid<sp/>ambiguous<sp/>overloads<sp/>due<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TfWeakPtrFacade::Derived<sp/>comparisons<sp/>with<sp/>TfRefPtr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator== </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!p;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator== </ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p)</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!p;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!= </ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>==<sp/>p);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="1154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::less&lt;const<sp/>TfRefBase<sp/>*&gt;()(get_pointer(p),<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;<sp/>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::less&lt;const<sp/>TfRefBase<sp/>*&gt;()(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>get_pointer(p));</highlight></codeline>
<codeline lineno="1161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="1165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&lt;<sp/>p);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;=<sp/>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p<sp/>&lt;<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&lt;<sp/>p;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;<sp/>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p)</highlight></codeline>
<codeline lineno="1181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p<sp/>&lt;<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(p<sp/>&lt;<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&gt;=<sp/>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;p)</highlight></codeline>
<codeline lineno="1192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>&lt;<sp/>p);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>TfCreateRefPtr(T*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>(ptr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;::_CreateRefPtr</ref>());</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info&amp;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">TfTypeid(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="1205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_UNLIKELY(!ptr._refBase))</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1ga7cbfc0e6eb2af388e728ad675086a348" kindref="member">TF_FATAL_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;called<sp/>TfTypeid<sp/>on<sp/>NULL<sp/>TfRefPtr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(*ptr._GetData());</highlight></codeline>
<codeline lineno="1210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><ref refid="declare_handles_8h_1a9657ab533e10437581538364b069339a" kindref="member">TfDynamic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref><sp/>RefPtr;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RefPtr(dynamic_cast&lt;typename<sp/>D::DataType*&gt;(ptr._GetData()));</highlight></codeline>
<codeline lineno="1219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><ref refid="safe_type_compare_8h_1aa394a1e0354f9df3a7c5f5eec494f2c7" kindref="member">TfSafeDynamic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="1225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref><sp/>RefPtr;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RefPtr(TfSafeDynamic_cast&lt;typename<sp/>D::DataType*&gt;(ptr._GetData()));</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><ref refid="declare_handles_8h_1a8926a712ca955cef8ae27ba0b401f0c6" kindref="member">TfStatic_cast</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename D::DataType&gt;</ref><sp/>RefPtr;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RefPtr(static_cast&lt;typename<sp/>D::DataType*&gt;(ptr._GetData()));</highlight></codeline>
<codeline lineno="1237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename T::DataType&gt;</ref></highlight></codeline>
<codeline lineno="1242"><highlight class="normal">TfConst_cast(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const typename T::DataType&gt;</ref>&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="1243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>ugly<sp/>cast<sp/>allows<sp/>TfConst_cast<sp/>to<sp/>work<sp/>without<sp/>requiring</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>definition<sp/>for<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;typename T::DataType&gt;</ref><sp/>NonConstRefPtr;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*((NonConstRefPtr*)(&amp;ptr));</highlight></codeline>
<codeline lineno="1248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialization:<sp/>prevent<sp/>construction<sp/>of<sp/>a<sp/>TfRefPtr&lt;TfRefBase&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt;<ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" kindref="member">TfRefPtr</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt;const<sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr_1ad2fbc9f5fab0deca1d46de73896a484f" kindref="member">TfRefPtr</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tf_type_functions" kindref="compound">TfTypeFunctions</ref>&lt;<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt;T&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T*<sp/>GetRawPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t.operator-&gt;<sp/>();</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>ConstructFromRawPtr(T*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>(ptr);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsNull(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!t;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Class_Object_MUST_Be_Passed_By_Address()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Class_Object_MUST_Not_Be_Const()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tf_type_functions" kindref="compound">TfTypeFunctions</ref>&lt;<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt;const<sp/>T&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/>GetRawPtr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const T&gt;</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t.operator-&gt;<sp/>();</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const T&gt;</ref><sp/>ConstructFromRawPtr(T*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const T&gt;</ref>(ptr);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsNull(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;const T&gt;</ref>&amp;<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!t;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Class_Object_MUST_Be_Passed_By_Address()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(doxygen)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><ref refid="class_ar_asset_info_1a3f35583e8095afee271ebad345ec5a19" kindref="member">swap</ref>(<ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>lhs,<sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>rhs)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>lhs.<ref refid="class_tf_ref_ptr_1a720afd959893c637eb1aa2dfd879dcfd" kindref="member">swap</ref>(rhs);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">boost<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal">T<sp/>*</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">get_pointer(PXR_NS::TfRefPtr&lt;T&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>p)</highlight></codeline>
<codeline lineno="1317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_pointer(p);</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>boost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extend<sp/>boost::hash<sp/>to<sp/>support<sp/>TfRefPtr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><ref refid="half_8h_1a46cd4803c1efd2558d7a291d7c288ab3" kindref="member">hash_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref>&amp;<sp/>ptr)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_hash" kindref="compound">TfHash</ref>()(ptr);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>HashState,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal">TfHashAppend(HashState<sp/>&amp;h,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr&lt;T&gt;</ref><sp/>&amp;ptr)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/>h.Append(get_pointer(ptr));</highlight></codeline>
<codeline lineno="1338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TF_SUPPORTS_REFPTR(T)<sp/>std::is_base_of&lt;TfRefBase,<sp/>T&gt;::value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_REF_PTR_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/refPtr.h"/>
  </compounddef>
</doxygen>
