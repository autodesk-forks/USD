<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_g_l_blit_cmds" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HgiGLBlitCmds</compoundname>
    <basecompoundref refid="class_hgi_blit_cmds" prot="public" virt="non-virtual">HgiBlitCmds</basecompoundref>
    <includes refid="_l_2blit_cmds_8h" local="no">blitCmds.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_hgi_g_l_blit_cmds_1a459c65427f4c47c738022928ea52ecae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class HgiGL</definition>
        <argsstring></argsstring>
        <name>HgiGL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="82" column="1" bodyfile="pxr/imaging/hgiGL/blitCmds.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hgi_g_l_blit_cmds_1ac33703a3f1f92877d1320f4a0b67fa2a" prot="private" static="no" mutable="no">
        <type>HgiGLOpsVector</type>
        <definition>HgiGLOpsVector _ops</definition>
        <argsstring></argsstring>
        <name>_ops</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="94" column="1" bodyfile="pxr/imaging/hgiGL/blitCmds.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hgi_g_l_blit_cmds_1abf2b6d3f7ab37507fb22123d961cc064" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _pushStack</definition>
        <argsstring></argsstring>
        <name>_pushStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="95" column="1" bodyfile="pxr/imaging/hgiGL/blitCmds.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1aad90255943c327bb39c549f95725d428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGIGL_API</type>
        <definition>HGIGL_API ~HgiGLBlitCmds</definition>
        <argsstring>() override</argsstring>
        <name>~HgiGLBlitCmds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1afef735fb601fa2235b72d0b42214a08d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void PushDebugGroup</definition>
        <argsstring>(const char *label) override</argsstring>
        <name>PushDebugGroup</name>
        <reimplements refid="class_hgi_blit_cmds_1a4faea3ac78fb17fe44b934ddcd670ff5">PushDebugGroup</reimplements>
        <param>
          <type>const char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Push a debug marker. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1ac03f05639627f7e78f42fdbc9ebbfd74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void PopDebugGroup</definition>
        <argsstring>() override</argsstring>
        <name>PopDebugGroup</name>
        <reimplements refid="class_hgi_blit_cmds_1a7f3b9bc0bba2f41ee8fadb843c6220d3">PopDebugGroup</reimplements>
        <briefdescription>
<para>Pop the lastest debug. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a8bb7cb5e20c4afc5aaef9553b26a6d20" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyTextureGpuToCpu</definition>
        <argsstring>(HgiTextureGpuToCpuOp const &amp;copyOp) override</argsstring>
        <name>CopyTextureGpuToCpu</name>
        <reimplements refid="class_hgi_blit_cmds_1ae322c1fa7aefe4b6bb16bef7fab253ba">CopyTextureGpuToCpu</reimplements>
        <param>
          <type><ref refid="struct_hgi_texture_gpu_to_cpu_op" kindref="compound">HgiTextureGpuToCpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a texture resource from GPU to CPU. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronization between GPU writes and CPU reads must be managed by the client by supplying the correct &apos;wait&apos; flags in SubmitCmds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a8e50549cbc8b1c2c45ad11b3ff498fc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyTextureCpuToGpu</definition>
        <argsstring>(HgiTextureCpuToGpuOp const &amp;copyOp) override</argsstring>
        <name>CopyTextureCpuToGpu</name>
        <reimplements refid="class_hgi_blit_cmds_1ac8964515cf70eb44bcb86b3830e570ed">CopyTextureCpuToGpu</reimplements>
        <param>
          <type><ref refid="struct_hgi_texture_cpu_to_gpu_op" kindref="compound">HgiTextureCpuToGpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy new data from the CPU into a GPU texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1af24a0ec71e491bfcc96688c636cbdb03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyBufferGpuToGpu</definition>
        <argsstring>(HgiBufferGpuToGpuOp const &amp;copyOp) override</argsstring>
        <name>CopyBufferGpuToGpu</name>
        <reimplements refid="class_hgi_blit_cmds_1a47c0ce758b8ff068829e74db08747d3a">CopyBufferGpuToGpu</reimplements>
        <param>
          <type><ref refid="struct_hgi_buffer_gpu_to_gpu_op" kindref="compound">HgiBufferGpuToGpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a buffer resource from GPU to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a138c1d9a31e70a8df991f67f9a06b8b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyBufferCpuToGpu</definition>
        <argsstring>(HgiBufferCpuToGpuOp const &amp;copyOp) override</argsstring>
        <name>CopyBufferCpuToGpu</name>
        <reimplements refid="class_hgi_blit_cmds_1a48ab9b78dc0bc8f6c4fca78b78ab8068">CopyBufferCpuToGpu</reimplements>
        <param>
          <type><ref refid="struct_hgi_buffer_cpu_to_gpu_op" kindref="compound">HgiBufferCpuToGpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy new data from CPU into GPU buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>For example copy new data into a uniform block or storage buffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1aa8664fe813faea0b3764bb1831e0de3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyBufferGpuToCpu</definition>
        <argsstring>(HgiBufferGpuToCpuOp const &amp;copyOp) override</argsstring>
        <name>CopyBufferGpuToCpu</name>
        <reimplements refid="class_hgi_blit_cmds_1ad8bc5bf8aa09f4d9e4546de400c8c6c6">CopyBufferGpuToCpu</reimplements>
        <param>
          <type><ref refid="struct_hgi_buffer_gpu_to_cpu_op" kindref="compound">HgiBufferGpuToCpuOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy new data from GPU into CPU buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronization between GPU writes and CPU reads must be managed by the client by supplying the correct &apos;wait&apos; flags in SubmitCmds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a0d2b8707c2ee634388378933a2a8b7d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyTextureToBuffer</definition>
        <argsstring>(HgiTextureToBufferOp const &amp;copyOp) override</argsstring>
        <name>CopyTextureToBuffer</name>
        <reimplements refid="class_hgi_blit_cmds_1a95d40baddbd0ccc5d160fd4c08e6e7f9">CopyTextureToBuffer</reimplements>
        <param>
          <type><ref refid="struct_hgi_texture_to_buffer_op" kindref="compound">HgiTextureToBufferOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a texture resource into a buffer resource from GPU to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a09eb41c8eb2d6a485f47ed0abd86b198" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void CopyBufferToTexture</definition>
        <argsstring>(HgiBufferToTextureOp const &amp;copyOp) override</argsstring>
        <name>CopyBufferToTexture</name>
        <reimplements refid="class_hgi_blit_cmds_1a762baa4803a5ab46ef538ae2ae986c00">CopyBufferToTexture</reimplements>
        <param>
          <type><ref refid="struct_hgi_buffer_to_texture_op" kindref="compound">HgiBufferToTextureOp</ref> const &amp;</type>
          <declname>copyOp</declname>
        </param>
        <briefdescription>
<para>Copy a buffer resource into a texture resource from GPU to GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a0f3bfdab9b149f1e227095cb367305d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void GenerateMipMaps</definition>
        <argsstring>(HgiTextureHandle const &amp;texture) override</argsstring>
        <name>GenerateMipMaps</name>
        <reimplements refid="class_hgi_blit_cmds_1a90a2a118ae766e2461701fd21e6b6a4d">GenerateMipMaps</reimplements>
        <param>
          <type>HgiTextureHandle const &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Generate mip maps for a texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a57c0690dd1ffa432e98934911e47ddf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void FillBuffer</definition>
        <argsstring>(HgiBufferHandle const &amp;buffer, uint8_t value) override</argsstring>
        <name>FillBuffer</name>
        <reimplements refid="class_hgi_blit_cmds_1adf143add2bc5169953bacba877176a68">FillBuffer</reimplements>
        <param>
          <type><ref refid="class_hgi_handle" kindref="compound">HgiBufferHandle</ref> const &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Fill a buffer with a constant value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a150f08387a4c7165f2c5aeeb19542a33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API void</type>
        <definition>HGIGL_API void InsertMemoryBarrier</definition>
        <argsstring>(HgiMemoryBarrier barrier) override</argsstring>
        <name>InsertMemoryBarrier</name>
        <reimplements refid="class_hgi_blit_cmds_1af7fca4b663cc7418d36f96c36b72cc54">InsertMemoryBarrier</reimplements>
        <param>
          <type>HgiMemoryBarrier</type>
          <declname>barrier</declname>
        </param>
        <briefdescription>
<para>Inserts a barrier so that data written to memory by commands before the barrier is available to commands after the barrier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a5d08463f51d5f1f9aa2e9dd0f44f2f09" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGIGL_API</type>
        <definition>HGIGL_API HgiGLBlitCmds</definition>
        <argsstring>()</argsstring>
        <name>HgiGLBlitCmds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1a2fedb298d39f65c457938415fcb3f6a1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGIGL_API bool</type>
        <definition>HGIGL_API bool _Submit</definition>
        <argsstring>(Hgi *hgi, HgiSubmitWaitType wait) override</argsstring>
        <name>_Submit</name>
        <reimplements refid="class_hgi_cmds_1ada9b3b32ca4eb9804e3a47ddd8954062">_Submit</reimplements>
        <param>
          <type><ref refid="class_hgi" kindref="compound">Hgi</ref> *</type>
          <declname>hgi</declname>
        </param>
        <param>
          <type>HgiSubmitWaitType</type>
          <declname>wait</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="88" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1af803cb303de34a1398e033c25d818a4b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hgi_g_l_blit_cmds" kindref="compound">HgiGLBlitCmds</ref> &amp;</type>
        <definition>HgiGLBlitCmds&amp; operator=</definition>
        <argsstring>(const HgiGLBlitCmds &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hgi_g_l_blit_cmds" kindref="compound">HgiGLBlitCmds</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_g_l_blit_cmds_1abdae9b501cb3b7500f8ddccc6e65ae01" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiGLBlitCmds</definition>
        <argsstring>(const HgiGLBlitCmds &amp;)=delete</argsstring>
        <name>HgiGLBlitCmds</name>
        <param>
          <type>const <ref refid="class_hgi_g_l_blit_cmds" kindref="compound">HgiGLBlitCmds</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgiGL/blitCmds.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>OpenGL implementation of <ref refid="class_hgi_blit_cmds" kindref="compound">HgiBlitCmds</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3788">
        <label>HgiBlitCmds</label>
        <link refid="class_hgi_blit_cmds"/>
        <childnode refid="3789" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3787">
        <label>HgiGLBlitCmds</label>
        <link refid="class_hgi_g_l_blit_cmds"/>
        <childnode refid="3788" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3789">
        <label>HgiCmds</label>
        <link refid="class_hgi_cmds"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3791">
        <label>HgiBlitCmds</label>
        <link refid="class_hgi_blit_cmds"/>
        <childnode refid="3792" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3790">
        <label>HgiGLBlitCmds</label>
        <link refid="class_hgi_g_l_blit_cmds"/>
        <childnode refid="3791" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3792">
        <label>HgiCmds</label>
        <link refid="class_hgi_cmds"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgiGL/blitCmds.h" line="40" column="1" bodyfile="pxr/imaging/hgiGL/blitCmds.h" bodystart="39" bodyend="99"/>
    <listofallmembers>
      <member refid="class_hgi_g_l_blit_cmds_1ac33703a3f1f92877d1320f4a0b67fa2a" prot="private" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>_ops</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1abf2b6d3f7ab37507fb22123d961cc064" prot="private" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>_pushStack</name></member>
      <member refid="class_hgi_cmds_1ac15c43bdc2f47df7bc72769b366c3de7" prot="protected" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>_SetSubmitted</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a2fedb298d39f65c457938415fcb3f6a1" prot="protected" virt="virtual"><scope>HgiGLBlitCmds</scope><name>_Submit</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a138c1d9a31e70a8df991f67f9a06b8b1" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyBufferCpuToGpu</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1aa8664fe813faea0b3764bb1831e0de3b" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyBufferGpuToCpu</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1af24a0ec71e491bfcc96688c636cbdb03" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyBufferGpuToGpu</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a09eb41c8eb2d6a485f47ed0abd86b198" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyBufferToTexture</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a8e50549cbc8b1c2c45ad11b3ff498fc7" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyTextureCpuToGpu</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a8bb7cb5e20c4afc5aaef9553b26a6d20" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyTextureGpuToCpu</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a0d2b8707c2ee634388378933a2a8b7d2" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>CopyTextureToBuffer</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a57c0690dd1ffa432e98934911e47ddf1" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>FillBuffer</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a0f3bfdab9b149f1e227095cb367305d6" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>GenerateMipMaps</name></member>
      <member refid="class_hgi_blit_cmds_1a3e639e87286babcd8255368a97b40b36" prot="protected" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>HgiBlitCmds</name></member>
      <member refid="class_hgi_cmds_1aacf15024d99594cd7e32536f934141ab" prot="protected" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>HgiCmds</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a459c65427f4c47c738022928ea52ecae" prot="protected" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>HgiGL</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a5d08463f51d5f1f9aa2e9dd0f44f2f09" prot="protected" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>HgiGLBlitCmds</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1abdae9b501cb3b7500f8ddccc6e65ae01" prot="private" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>HgiGLBlitCmds</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1a150f08387a4c7165f2c5aeeb19542a33" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>InsertMemoryBarrier</name></member>
      <member refid="class_hgi_cmds_1ae21ceb4d878a96527fa7e9aa2eec6c0b" prot="public" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>IsSubmitted</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1af803cb303de34a1398e033c25d818a4b" prot="private" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>operator=</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1ac03f05639627f7e78f42fdbc9ebbfd74" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>PopDebugGroup</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1afef735fb601fa2235b72d0b42214a08d" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>PushDebugGroup</name></member>
      <member refid="class_hgi_blit_cmds_1afd344066aee9a33016c9754417314c9d" prot="public" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>~HgiBlitCmds</name></member>
      <member refid="class_hgi_cmds_1acfebf344be18afe51829d5c843d53ccd" prot="public" virt="virtual"><scope>HgiGLBlitCmds</scope><name>~HgiCmds</name></member>
      <member refid="class_hgi_g_l_blit_cmds_1aad90255943c327bb39c549f95725d428" prot="public" virt="non-virtual"><scope>HgiGLBlitCmds</scope><name>~HgiGLBlitCmds</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
