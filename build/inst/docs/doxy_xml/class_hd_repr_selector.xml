<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_repr_selector" kind="class" language="C++" prot="public">
    <compoundname>HdReprSelector</compoundname>
    <includes refid="repr_8h" local="no">repr.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_hd_repr_selector_1a2a8ac023a4d60b4add278dad3c465e1c" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t MAX_TOPOLOGY_REPRS</definition>
        <argsstring></argsstring>
        <name>MAX_TOPOLOGY_REPRS</name>
        <initializer>= 3</initializer>
        <briefdescription>
<para>Currenly support upto 3 topology tokens. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="77" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_repr_selector_1a56bb461379bd9ca92fc4d6e811d5be48" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken refinedToken</definition>
        <argsstring></argsstring>
        <name>refinedToken</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="134" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_repr_selector_1a07726f974e8c4a92724cec90368d4518" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken unrefinedToken</definition>
        <argsstring></argsstring>
        <name>unrefinedToken</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="135" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_repr_selector_1a736cd8f3191fd996491aefcebbfa7044" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken pointsToken</definition>
        <argsstring></argsstring>
        <name>pointsToken</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="136" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_repr_selector_1aa0b0a3209cf17aa1f7b7f2ea37cf071e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdReprSelector</definition>
        <argsstring>()</argsstring>
        <name>HdReprSelector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="51" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1abeb2603140957947215d1d4dab16fd0f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdReprSelector</definition>
        <argsstring>(TfToken const &amp;token)</argsstring>
        <name>HdReprSelector</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="56" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a8d1ce2e16067c1e1f712df59ace88f28" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdReprSelector</definition>
        <argsstring>(TfToken const &amp;refined, TfToken const &amp;unrefined)</argsstring>
        <name>HdReprSelector</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>unrefined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="61" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a3098b1eebdb268393430150740a3047c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdReprSelector</definition>
        <argsstring>(TfToken const &amp;refined, TfToken const &amp;unrefined, TfToken const &amp;points)</argsstring>
        <name>HdReprSelector</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>unrefined</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="68" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1aad85ef83603294c1f69ff7dbd47972f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool Contains</definition>
        <argsstring>(const TfToken &amp;reprToken) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>reprToken</declname>
        </param>
        <briefdescription>
<para>Returns true if the passed in reprToken is in the set of tokens for any topology index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a80783f8e4162c77fe9a36a7afec03873" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool IsActiveRepr</definition>
        <argsstring>(size_t topologyIndex) const</argsstring>
        <name>IsActiveRepr</name>
        <param>
          <type>size_t</type>
          <declname>topologyIndex</declname>
        </param>
        <briefdescription>
<para>Returns true if the topology token at an index is active, i.e., neither empty nor disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a2ea9a38a97360290bd371c5fd7386d50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool AnyActiveRepr</definition>
        <argsstring>() const</argsstring>
        <name>AnyActiveRepr</name>
        <briefdescription>
<para>Returns true if any of the topology tokens is valid, i.e., neither empty nor disabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1aa2736a736a6dd2c47a63f5851ee5c934" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref></type>
        <definition>HD_API HdReprSelector CompositeOver</definition>
        <argsstring>(const HdReprSelector &amp;under) const</argsstring>
        <name>CompositeOver</name>
        <param>
          <type>const <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> &amp;</type>
          <declname>under</declname>
        </param>
        <briefdescription>
<para>Returns a selector that is the composite of this selector &apos;over&apos; the passed in selector. </para>
        </briefdescription>
        <detaileddescription>
<para>For each token that IsEmpty in this selector return the corresponding token in the passed in selector. Effectively this performs a merge operation where this selector wins for each topological index it has an opinion on. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a3824be7510df574746ae4c1c68d339e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(const HdReprSelector &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a1379823584db451e43357ddcf072d72c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator!=</definition>
        <argsstring>(const HdReprSelector &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a0a291bd16be00dcae0fac3ba48804209" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator&lt;</definition>
        <argsstring>(const HdReprSelector &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1ac13e2d32aa20334a9719f52eaab22fad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API size_t</type>
        <definition>HD_API size_t Hash</definition>
        <argsstring>() const</argsstring>
        <name>Hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1aa8ed1a2d31787a00595ae7d331ade47a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API char const  *</type>
        <definition>HD_API char const* GetText</definition>
        <argsstring>() const</argsstring>
        <name>GetText</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_repr_selector_1a7963ded3146d88e839bd4f660feda602" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>HD_API TfToken const&amp; operator[]</definition>
        <argsstring>(size_t topologyIndex) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>topologyIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_hd_repr_selector_1a0ec6247e0298ef1e0bb1cd6bfa7f3bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API friend std::ostream &amp;</type>
        <definition>HD_API friend std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, HdReprSelector const &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="friend" id="class_hd_repr_selector_1a47a9885d9a7903a9348342b2f00be1b5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HashState</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void TfHashAppend</definition>
        <argsstring>(HashState &amp;h, HdReprSelector const &amp;rs)</argsstring>
        <name>TfHashAppend</name>
        <param>
          <type>HashState &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> const &amp;</type>
          <declname>rs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/repr.h" line="130" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="130" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes one or more authored display representations for an rprim. </para>
    </briefdescription>
    <detaileddescription>
<para>Display opinions are separated by the topology index they represent. This allows the application to specify one or more topological representations for a given <ref refid="class_hd_rprim" kindref="compound">HdRprim</ref>. For some visualizations, an application may choose to provide an opinion for the display of the refined surface, the unrefined hull and the points separately from the rprim&apos;s authored opinions. <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> allows these opinions to compose/merge into a final composite representation to be used for rendering. </para>
    </detaileddescription>
    <location file="pxr/imaging/hd/repr.h" line="49" column="1" bodyfile="pxr/imaging/hd/repr.h" bodystart="48" bodyend="137"/>
    <listofallmembers>
      <member refid="class_hd_repr_selector_1a2ea9a38a97360290bd371c5fd7386d50" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>AnyActiveRepr</name></member>
      <member refid="class_hd_repr_selector_1aa2736a736a6dd2c47a63f5851ee5c934" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>CompositeOver</name></member>
      <member refid="class_hd_repr_selector_1aad85ef83603294c1f69ff7dbd47972f5" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>Contains</name></member>
      <member refid="class_hd_repr_selector_1aa8ed1a2d31787a00595ae7d331ade47a" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>GetText</name></member>
      <member refid="class_hd_repr_selector_1ac13e2d32aa20334a9719f52eaab22fad" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>Hash</name></member>
      <member refid="class_hd_repr_selector_1aa0b0a3209cf17aa1f7b7f2ea37cf071e" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>HdReprSelector</name></member>
      <member refid="class_hd_repr_selector_1abeb2603140957947215d1d4dab16fd0f" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>HdReprSelector</name></member>
      <member refid="class_hd_repr_selector_1a8d1ce2e16067c1e1f712df59ace88f28" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>HdReprSelector</name></member>
      <member refid="class_hd_repr_selector_1a3098b1eebdb268393430150740a3047c" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>HdReprSelector</name></member>
      <member refid="class_hd_repr_selector_1a80783f8e4162c77fe9a36a7afec03873" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>IsActiveRepr</name></member>
      <member refid="class_hd_repr_selector_1a2a8ac023a4d60b4add278dad3c465e1c" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>MAX_TOPOLOGY_REPRS</name></member>
      <member refid="class_hd_repr_selector_1a1379823584db451e43357ddcf072d72c" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>operator!=</name></member>
      <member refid="class_hd_repr_selector_1a0a291bd16be00dcae0fac3ba48804209" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>operator&lt;</name></member>
      <member refid="class_hd_repr_selector_1a0ec6247e0298ef1e0bb1cd6bfa7f3bc4" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_hd_repr_selector_1a3824be7510df574746ae4c1c68d339e2" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>operator==</name></member>
      <member refid="class_hd_repr_selector_1a7963ded3146d88e839bd4f660feda602" prot="public" virt="non-virtual"><scope>HdReprSelector</scope><name>operator[]</name></member>
      <member refid="class_hd_repr_selector_1a736cd8f3191fd996491aefcebbfa7044" prot="private" virt="non-virtual"><scope>HdReprSelector</scope><name>pointsToken</name></member>
      <member refid="class_hd_repr_selector_1a56bb461379bd9ca92fc4d6e811d5be48" prot="private" virt="non-virtual"><scope>HdReprSelector</scope><name>refinedToken</name></member>
      <member refid="class_hd_repr_selector_1a47a9885d9a7903a9348342b2f00be1b5" prot="private" virt="non-virtual"><scope>HdReprSelector</scope><name>TfHashAppend</name></member>
      <member refid="class_hd_repr_selector_1a07726f974e8c4a92724cec90368d4518" prot="private" virt="non-virtual"><scope>HdReprSelector</scope><name>unrefinedToken</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
