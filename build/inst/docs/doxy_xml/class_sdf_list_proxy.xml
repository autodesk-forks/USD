<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_list_proxy" kind="class" language="C++" prot="public">
    <compoundname>SdfListProxy</compoundname>
    <includes refid="list_proxy_8h" local="no">listProxy.h</includes>
    <innerclass refid="class_sdf_list_proxy_1_1___const_get_helper" prot="private">SdfListProxy::_ConstGetHelper</innerclass>
    <innerclass refid="class_sdf_list_proxy_1_1___get_helper" prot="private">SdfListProxy::_GetHelper</innerclass>
    <innerclass refid="class_sdf_list_proxy_1_1___item_proxy" prot="private">SdfListProxy::_ItemProxy</innerclass>
    <innerclass refid="class_sdf_list_proxy_1_1___iterator" prot="private">SdfListProxy::_Iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>_TypePolicy</declname>
        <defname>_TypePolicy</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a66eef962842a9639011185acc58f5fb9" prot="public" static="no">
        <type>_TypePolicy</type>
        <definition>typedef _TypePolicy TypePolicy</definition>
        <argsstring></argsstring>
        <name>TypePolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="56" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1ad1fae8622255085c84a68d7b5bfc9a00" prot="public" static="no">
        <type><ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; TypePolicy &gt;</type>
        <definition>typedef SdfListProxy&lt;TypePolicy&gt; This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="57" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a2ca496ff8f6470b2435c267ff8ab4b36" prot="public" static="no">
        <type>TypePolicy::value_type</type>
        <definition>typedef TypePolicy::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="58" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a1d5f5be7426540b7a3f19bf269789ef1" prot="public" static="no">
        <type>std::vector&lt; value_type &gt;</type>
        <definition>typedef std::vector&lt;value_type&gt; value_vector_type</definition>
        <argsstring></argsstring>
        <name>value_vector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="59" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1ab49658ca6fcb6f2e7cd73a91b88e9e7c" prot="public" static="no">
        <type>_ItemProxy</type>
        <definition>typedef _ItemProxy reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="297" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a686137dfb103a65bc28ebc7e4598f2dc" prot="public" static="no">
        <type>_Iterator&lt; <ref refid="class_sdf_list_proxy" kindref="compound">This</ref> *, _GetHelper &gt;</type>
        <definition>typedef _Iterator&lt;This*, _GetHelper&gt; iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="298" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a5da40a01a43b27b9d761a9f0fa3c5f73" prot="public" static="no">
        <type>_Iterator&lt; const <ref refid="class_sdf_list_proxy" kindref="compound">This</ref> *, _ConstGetHelper &gt;</type>
        <definition>typedef _Iterator&lt;const This*, _ConstGetHelper&gt; const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="299" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a19a4f893695618227888a0659f4d4eab" prot="public" static="no">
        <type>Tf_ProxyReferenceReverseIterator&lt; iterator &gt;</type>
        <definition>typedef Tf_ProxyReferenceReverseIterator&lt;iterator&gt; reverse_iterator</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="300" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_list_proxy_1a170e1cba7ac9b55e4a83a5500cfa4cc4" prot="public" static="no">
        <type>Tf_ProxyReferenceReverseIterator&lt; const_iterator &gt;</type>
        <definition>typedef Tf_ProxyReferenceReverseIterator&lt;const_iterator&gt; const_reverse_iterator</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="301" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="301" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_sdf_list_proxy_1afd75b03222f6f121d3de710205c4b737" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class _ItemProxy</definition>
        <argsstring></argsstring>
        <name>_ItemProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="115" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a76113f61f2ed182e1b7637a7b6b79b48" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class _GetHelper</definition>
        <argsstring></argsstring>
        <name>_GetHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="133" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a0664c6ea4dfe08233cef965f935b8b28" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class _ConstGetHelper</definition>
        <argsstring></argsstring>
        <name>_ConstGetHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="134" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a3bfd505801609108a5115aae04716c04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class SdfPyWrapListProxy</definition>
        <argsstring></argsstring>
        <name>SdfPyWrapListProxy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="767" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="767" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a951cc6aaf373bd75831443607aaefa6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const value_vector_type &amp;x, const SdfListProxy &amp;y)</argsstring>
        <name>operator==</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Equality comparision. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="517" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="517" bodyend="519"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a6637104390a1f54b89b7cc7156b07292" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const value_vector_type &amp;x, const SdfListProxy &amp;y)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Inequality comparision. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="527" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a20ce3196b8504d5b4ccb9e5e53d37a52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const value_vector_type &amp;x, const SdfListProxy &amp;y)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Less-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="537" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="537" bodyend="539"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a74be1785e173ae672b084873edad3f8d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const value_vector_type &amp;x, const SdfListProxy &amp;y)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Greater-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="547" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="547" bodyend="549"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1a116ba1fde07ea01a33821f72ee26a9e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const value_vector_type &amp;x, const SdfListProxy &amp;y)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Less-than or equal to comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="557" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="557" bodyend="559"/>
      </memberdef>
      <memberdef kind="friend" id="class_sdf_list_proxy_1afd2afa735d4548b2b050b8869de3cae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const value_vector_type &amp;x, const SdfListProxy &amp;y)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Greater-than or equal to comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="567" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="567" bodyend="569"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sdf_list_proxy_1aa23a7748ea0d3afa8b3d09fafb1207e7" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; Sdf_ListEditor&lt; TypePolicy &gt; &gt;</type>
        <definition>std::shared_ptr&lt;Sdf_ListEditor&lt;TypePolicy&gt; &gt; _listEditor</definition>
        <argsstring></argsstring>
        <name>_listEditor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="764" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="764" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_list_proxy_1a31a796e863d1e2c2df88964b7850edda" prot="private" static="no" mutable="no">
        <type>SdfListOpType</type>
        <definition>SdfListOpType _op</definition>
        <argsstring></argsstring>
        <name>_op</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="765" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="765" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_list_proxy_1a83c2ec180dedc2c21227158d47fbe378" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfListProxy</definition>
        <argsstring>(SdfListOpType op)</argsstring>
        <name>SdfListProxy</name>
        <param>
          <type>SdfListOpType</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Creates a default list proxy object for list operation vector specified <computeroutput>op</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This object evaluates to false in a boolean context and all operations on this object have no effect. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="306" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="306" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a5df4c8e2aa8db4fcaaa287e800098747" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfListProxy</definition>
        <argsstring>(const std::shared_ptr&lt; Sdf_ListEditor&lt; TypePolicy &gt; &gt; &amp;editor, SdfListOpType op)</argsstring>
        <name>SdfListProxy</name>
        <param>
          <type>const std::shared_ptr&lt; Sdf_ListEditor&lt; TypePolicy &gt; &gt; &amp;</type>
          <declname>editor</declname>
        </param>
        <param>
          <type>SdfListOpType</type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Create a new proxy wrapping the list operation vector specified by <computeroutput>op</computeroutput> in the underlying <computeroutput>listEditor</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="313" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="313" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ad69bd11391be1a1dba5c8202259664f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Return an iterator to the start of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="321" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="321" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1acad38d52497a975bfb6f2f6acd76631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Return an iterator to the end of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="325" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="325" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1acea44ed500a54b2bb93e16b86e81afa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator rbegin</definition>
        <argsstring>()</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Return a reverse iterator to the last item of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="330" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a68c599ddcbfddc65170de524ac165e44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reverse_iterator</type>
        <definition>reverse_iterator rend</definition>
        <argsstring>()</argsstring>
        <name>rend</name>
        <briefdescription>
<para>Return a reverse iterator past the start item of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="334" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="334" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a29305669b60ca1680752e2fc3592ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Return a const iterator to the start of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="339" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="339" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Return a const iterator to the end of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="343" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="343" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1af086cceac199bd735c7a97c2a8d7ed21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <briefdescription>
<para>Return a const reverse iterator to the last item of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="348" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a07da1fdc890b6949f1a20a1961c6fc44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <briefdescription>
<para>Return a const reverse iterator past the start item of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="353" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="353" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Return the size of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="358" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Return true if <ref refid="class_sdf_list_proxy_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size()</ref> == 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="363" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a7fbaa72c3b985139ea192224f6e7b437" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator[]</definition>
        <argsstring>(size_t n)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return a <computeroutput>reference</computeroutput> to the item at index <computeroutput>n</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="368" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="368" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a079f4bc11784859796bc25faf1d22f22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type</type>
        <definition>value_type operator[]</definition>
        <argsstring>(size_t n) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Return a copy of the item at index <computeroutput>n</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="373" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a6a48363b4355f6f5b441637774f79a59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference front</definition>
        <argsstring>()</argsstring>
        <name>front</name>
        <briefdescription>
<para>Return a <computeroutput>reference</computeroutput> to the item at the front of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="378" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="378" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1af71e6c1eccbc12e9339c00a86a981a43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference back</definition>
        <argsstring>()</argsstring>
        <name>back</name>
        <briefdescription>
<para>Return a <computeroutput>reference</computeroutput> to the item at the back of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="383" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="383" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a1b61e6b4e91c6ddb89443451857ef6b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type</type>
        <definition>value_type front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
<para>Return a copy of the item at the front of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="388" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a7427a42d55bb5ae2e3290958556913b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type</type>
        <definition>value_type back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <briefdescription>
<para>Return a copy of the item at the back of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="393" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="393" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a0a54ab10434e522e8aa6d4e95aca09b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void push_back</definition>
        <argsstring>(const value_type &amp;elem)</argsstring>
        <name>push_back</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>elem</declname>
        </param>
        <briefdescription>
<para>Append <computeroutput>elem</computeroutput> to this sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="398" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a058bda4957df6a97b1ea6c9fd783f672" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pop_back</definition>
        <argsstring>()</argsstring>
        <name>pop_back</name>
        <briefdescription>
<para>Remove the last element from this sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="403" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="403" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ab7105cf7d0873762b9b207c86e6a5227" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator insert</definition>
        <argsstring>(iterator pos, const value_type &amp;x)</argsstring>
        <name>insert</name>
        <param>
          <type>iterator</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const value_type &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Insert <computeroutput>x</computeroutput> into this sequence at position <computeroutput>pos</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="408" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a2f28b71cd85388928ed9a4c335e526e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class InputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void insert</definition>
        <argsstring>(iterator pos, InputIterator f, InputIterator l)</argsstring>
        <name>insert</name>
        <param>
          <type>iterator</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>f</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Insert copies of the elements in [<computeroutput>f</computeroutput>, <computeroutput>l</computeroutput>) into this sequence starting at position <computeroutput>pos</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="416" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="416" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1acd0a5455b9873c9198748e6c498a12df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void erase</definition>
        <argsstring>(iterator pos)</argsstring>
        <name>erase</name>
        <param>
          <type>iterator</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Erase the element at <computeroutput>pos</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="421" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="421" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a8e3c21d97498f1717699788151a90d1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void erase</definition>
        <argsstring>(iterator f, iterator l)</argsstring>
        <name>erase</name>
        <param>
          <type>iterator</type>
          <declname>f</declname>
        </param>
        <param>
          <type>iterator</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Erase all the elements in the range [<computeroutput>f</computeroutput>, <computeroutput>l</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="426" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="426" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear the contents of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="431" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="431" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a2ca931c6d993daf5ce23989b06509989" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void resize</definition>
        <argsstring>(size_t n, const value_type &amp;t=value_type())</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const value_type &amp;</type>
          <declname>t</declname>
          <defval>value_type()</defval>
        </param>
        <briefdescription>
<para>Resize the contents of the sequence. </para>
        </briefdescription>
        <detaileddescription>
<para>Inserts or erases copies of <computeroutput>t</computeroutput> at the end such that the size becomes <computeroutput>n</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="439" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="439" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a45f7ea70a4e5a4d0b9df6e2bbf406c9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator value_vector_type</definition>
        <argsstring>() const</argsstring>
        <name>operator value_vector_type</name>
        <briefdescription>
<para>Produce a copy of the contents of this sequence into a vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="450" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="450" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a4c27720c4f258753ef34223b8a30cd52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_sdf_list_proxy" kindref="compound">This</ref> &amp;</type>
        <definition>This&amp; operator=</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Replace all elements in this sequence with the elements in the <computeroutput>other</computeroutput> sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="457" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="457" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a137d3cd4be9fac5592f4d4845e97eec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_list_proxy" kindref="compound">This</ref> &amp;</type>
        <definition>This&amp; operator=</definition>
        <argsstring>(const value_vector_type &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Replace all elements in this sequence with the given vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="463" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="463" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1af9591ccbe3998ea89740f50425ab4bb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Y</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_sdf_list_proxy" kindref="compound">This</ref> &amp;</type>
        <definition>This&amp; operator=</definition>
        <argsstring>(const std::vector&lt; Y &gt; &amp;v)</argsstring>
        <name>operator=</name>
        <param>
          <type>const std::vector&lt; Y &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Replace all elements in this sequence with the given vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="470" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="470" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1afb4d6c6b37f6918aefd41973e68a44b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;y) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="477" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="477" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a5f345b7a6dce690481caab7b56bacb6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;y) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="483" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="483" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a524903a0e0a441c4b93653951b55b36a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;y) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Less-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="489" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="489" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a49da11eda6487685e59911dfa28fff50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;y) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Less-than-or-equal comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="495" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="495" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a44d93a81b479ba6e2f0b315399c022a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;y) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Greater-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="501" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="501" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a71098a676c384a9fe8fbd15d53e35468" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const SdfListProxy&lt; T2 &gt; &amp;y) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref>&lt; T2 &gt; &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Greater-than-or-equal comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="507" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="507" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ab4dd9fa0c507d2b9f109da91b4739cd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const value_vector_type &amp;y) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="512" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="512" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1aba4c16e50e00fdc8dbffab7322a44cf3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const value_vector_type &amp;y) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="522" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="522" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a9c7f46fc5bc3434af7ad1b20e00f26b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const value_vector_type &amp;y) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Less-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="532" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="532" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a777716c59b8441da3ea48bd1f74c13af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const value_vector_type &amp;y) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Greater-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="542" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="542" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a1ce5742bb70e0b764b2b39190625d840" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const value_vector_type &amp;y) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Less-than or equal to comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="552" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="552" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1abc962ecbab6d4095b147614058cbd7ee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const value_vector_type &amp;y) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Greater-than or equal to comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="562" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="562" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Explicit bool conversion operator. </para>
        </briefdescription>
        <detaileddescription>
<para>The list proxy object converts to <computeroutput>true</computeroutput> if the list editor is valid, <computeroutput>false</computeroutput> otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="573" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="573" bodyend="576"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a6a9cf839ecb5e648b0bfd2864419c4b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>SdfLayerHandle</type>
        <definition>SdfLayerHandle GetLayer</definition>
        <argsstring>() const</argsstring>
        <name>GetLayer</name>
        <briefdescription>
<para>Returns the layer that this list editor belongs to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="581" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="581" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a936bfb1e341cc81184c64af44763c433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
<para>Returns the path to this list editor&apos;s value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="587" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="587" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1aba2bcf1ee25f12ef7281db6bcea5dd68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsExpired</definition>
        <argsstring>() const</argsstring>
        <name>IsExpired</name>
        <briefdescription>
<para>Returns true if the list editor is expired. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="593" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a297b47c0555aaf99099b6cc91fb5ded9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Count</definition>
        <argsstring>(const value_type &amp;value) const</argsstring>
        <name>Count</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="598" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="598" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a3b420f3e308b608ac329133866bdd330" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Find</definition>
        <argsstring>(const value_type &amp;value) const</argsstring>
        <name>Find</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="603" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="603" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a2a9a27c952bfa84966a176779409cfd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Insert</definition>
        <argsstring>(int index, const value_type &amp;value)</argsstring>
        <name>Insert</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="608" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="608" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ab5040b467390e7ece502ea7309b926ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Remove</definition>
        <argsstring>(const value_type &amp;value)</argsstring>
        <name>Remove</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="616" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="616" bodyend="627"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ab0b8c0a3e37354ae574743f1c4162692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Replace</definition>
        <argsstring>(const value_type &amp;oldValue, const value_type &amp;newValue)</argsstring>
        <name>Replace</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>oldValue</declname>
        </param>
        <param>
          <type>const value_type &amp;</type>
          <declname>newValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="629" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="629" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1aecb4d6b50ef9d7b549a48be23451c698" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Erase</definition>
        <argsstring>(size_t index)</argsstring>
        <name>Erase</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="642" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a178ad826fd871527fe34ce932eac298c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ApplyList</definition>
        <argsstring>(const SdfListProxy &amp;list)</argsstring>
        <name>ApplyList</name>
        <param>
          <type>const <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> &amp;</type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Applies the edits in the given list to this one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="648" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="648" bodyend="653"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a2500d30ed0a0ad4755047dfadb478944" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ApplyEditsToList</definition>
        <argsstring>(value_vector_type *vec)</argsstring>
        <name>ApplyEditsToList</name>
        <param>
          <type>value_vector_type *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Apply the edits in this list to the given <computeroutput>vec</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="656" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="656" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a8d5f1a386724b739009c96f27c3eefa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class CB</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ModifyItemEdits</definition>
        <argsstring>(CB callback)</argsstring>
        <name>ModifyItemEdits</name>
        <param>
          <type>CB</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Modify all edits in this list. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>callback</computeroutput> must be a callable that accepts an argument of type value_type and returns a boost::optional&lt;value_type&gt;.</para>
<para><computeroutput>callback</computeroutput> is called with every item in the list. If an invalid boost::optional is returned, the item is removed. Otherwise it&apos;s replaced with the returned item. If a returned item matches an item that was previously returned, the returned item will be removed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="674" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="674" bodyend="679"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdf_list_proxy_1ab9cdfb7a09e4815809c6f9a121f94878" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Validate</definition>
        <argsstring>()</argsstring>
        <name>_Validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="682" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="682" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a7807b858e124ccbb8c32826921923a33" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Validate</definition>
        <argsstring>() const</argsstring>
        <name>_Validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="695" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="695" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a3a3cfd0544e6ff3a05d1d6a4d7e1d2c7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_list_proxy" kindref="compound">This</ref> *</type>
        <definition>This* _GetThis</definition>
        <argsstring>()</argsstring>
        <name>_GetThis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="708" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="708" bodyend="711"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1ae51cf4abbf3de6081230d2104b544118" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_sdf_list_proxy" kindref="compound">This</ref> *</type>
        <definition>const This* _GetThis</definition>
        <argsstring>() const</argsstring>
        <name>_GetThis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="713" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="713" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1aacca91dd81ed251b36bee20a47e7fa2c" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _IsRelevant</definition>
        <argsstring>() const</argsstring>
        <name>_IsRelevant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="718" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="718" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a845e1bdbfe39d3cafc49cb65aac76565" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t _GetSize</definition>
        <argsstring>() const</argsstring>
        <name>_GetSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="731" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="731" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a7365d7571ab790fb336c17f9031f8524" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type</type>
        <definition>value_type _Get</definition>
        <argsstring>(size_t n) const</argsstring>
        <name>_Get</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="736" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="736" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_list_proxy_1a1a5826e9657c079f76abe94de5ae46a0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _Edit</definition>
        <argsstring>(size_t index, size_t n, const value_vector_type &amp;elems)</argsstring>
        <name>_Edit</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const value_vector_type &amp;</type>
          <declname>elems</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/listProxy.h" line="741" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="741" bodyend="761"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a single list of list editing operations. </para>
    </briefdescription>
    <detaileddescription>
<para>An <ref refid="class_sdf_list_proxy" kindref="compound">SdfListProxy</ref> represents a single list of list editing operations, making it look like an STL vector (modeling a random access container and back insertion sequence). </para>
    </detaileddescription>
    <location file="pxr/usd/sdf/listProxy.h" line="54" column="1" bodyfile="pxr/usd/sdf/listProxy.h" bodystart="54" bodyend="768"/>
    <listofallmembers>
      <member refid="class_sdf_list_proxy_1a0664c6ea4dfe08233cef965f935b8b28" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_ConstGetHelper</name></member>
      <member refid="class_sdf_list_proxy_1a1a5826e9657c079f76abe94de5ae46a0" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_Edit</name></member>
      <member refid="class_sdf_list_proxy_1a7365d7571ab790fb336c17f9031f8524" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_Get</name></member>
      <member refid="class_sdf_list_proxy_1a76113f61f2ed182e1b7637a7b6b79b48" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_GetHelper</name></member>
      <member refid="class_sdf_list_proxy_1a845e1bdbfe39d3cafc49cb65aac76565" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_GetSize</name></member>
      <member refid="class_sdf_list_proxy_1a3a3cfd0544e6ff3a05d1d6a4d7e1d2c7" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_GetThis</name></member>
      <member refid="class_sdf_list_proxy_1ae51cf4abbf3de6081230d2104b544118" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_GetThis</name></member>
      <member refid="class_sdf_list_proxy_1aacca91dd81ed251b36bee20a47e7fa2c" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_IsRelevant</name></member>
      <member refid="class_sdf_list_proxy_1afd75b03222f6f121d3de710205c4b737" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_ItemProxy</name></member>
      <member refid="class_sdf_list_proxy_1aa23a7748ea0d3afa8b3d09fafb1207e7" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_listEditor</name></member>
      <member refid="class_sdf_list_proxy_1a31a796e863d1e2c2df88964b7850edda" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_op</name></member>
      <member refid="class_sdf_list_proxy_1ab9cdfb7a09e4815809c6f9a121f94878" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_Validate</name></member>
      <member refid="class_sdf_list_proxy_1a7807b858e124ccbb8c32826921923a33" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>_Validate</name></member>
      <member refid="class_sdf_list_proxy_1a2500d30ed0a0ad4755047dfadb478944" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>ApplyEditsToList</name></member>
      <member refid="class_sdf_list_proxy_1a178ad826fd871527fe34ce932eac298c" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>ApplyList</name></member>
      <member refid="class_sdf_list_proxy_1af71e6c1eccbc12e9339c00a86a981a43" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>back</name></member>
      <member refid="class_sdf_list_proxy_1a7427a42d55bb5ae2e3290958556913b6" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>back</name></member>
      <member refid="class_sdf_list_proxy_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>begin</name></member>
      <member refid="class_sdf_list_proxy_1a29305669b60ca1680752e2fc3592ba99" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>begin</name></member>
      <member refid="class_sdf_list_proxy_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>clear</name></member>
      <member refid="class_sdf_list_proxy_1a5da40a01a43b27b9d761a9f0fa3c5f73" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>const_iterator</name></member>
      <member refid="class_sdf_list_proxy_1a170e1cba7ac9b55e4a83a5500cfa4cc4" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>const_reverse_iterator</name></member>
      <member refid="class_sdf_list_proxy_1a297b47c0555aaf99099b6cc91fb5ded9" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>Count</name></member>
      <member refid="class_sdf_list_proxy_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>empty</name></member>
      <member refid="class_sdf_list_proxy_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>end</name></member>
      <member refid="class_sdf_list_proxy_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>end</name></member>
      <member refid="class_sdf_list_proxy_1aecb4d6b50ef9d7b549a48be23451c698" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>Erase</name></member>
      <member refid="class_sdf_list_proxy_1acd0a5455b9873c9198748e6c498a12df" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>erase</name></member>
      <member refid="class_sdf_list_proxy_1a8e3c21d97498f1717699788151a90d1a" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>erase</name></member>
      <member refid="class_sdf_list_proxy_1a3b420f3e308b608ac329133866bdd330" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>Find</name></member>
      <member refid="class_sdf_list_proxy_1a6a48363b4355f6f5b441637774f79a59" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>front</name></member>
      <member refid="class_sdf_list_proxy_1a1b61e6b4e91c6ddb89443451857ef6b5" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>front</name></member>
      <member refid="class_sdf_list_proxy_1a6a9cf839ecb5e648b0bfd2864419c4b1" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>GetLayer</name></member>
      <member refid="class_sdf_list_proxy_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>GetPath</name></member>
      <member refid="class_sdf_list_proxy_1a2a9a27c952bfa84966a176779409cfd7" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>Insert</name></member>
      <member refid="class_sdf_list_proxy_1ab7105cf7d0873762b9b207c86e6a5227" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>insert</name></member>
      <member refid="class_sdf_list_proxy_1a2f28b71cd85388928ed9a4c335e526e3" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>insert</name></member>
      <member refid="class_sdf_list_proxy_1aba2bcf1ee25f12ef7281db6bcea5dd68" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>IsExpired</name></member>
      <member refid="class_sdf_list_proxy_1a686137dfb103a65bc28ebc7e4598f2dc" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>iterator</name></member>
      <member refid="class_sdf_list_proxy_1a8d5f1a386724b739009c96f27c3eefa9" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>ModifyItemEdits</name></member>
      <member refid="class_sdf_list_proxy_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator bool</name></member>
      <member refid="class_sdf_list_proxy_1a45f7ea70a4e5a4d0b9df6e2bbf406c9a" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator value_vector_type</name></member>
      <member refid="class_sdf_list_proxy_1a5f345b7a6dce690481caab7b56bacb6a" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator!=</name></member>
      <member refid="class_sdf_list_proxy_1aba4c16e50e00fdc8dbffab7322a44cf3" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator!=</name></member>
      <member refid="class_sdf_list_proxy_1a6637104390a1f54b89b7cc7156b07292" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator!=</name></member>
      <member refid="class_sdf_list_proxy_1a524903a0e0a441c4b93653951b55b36a" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_list_proxy_1a9c7f46fc5bc3434af7ad1b20e00f26b0" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_list_proxy_1a20ce3196b8504d5b4ccb9e5e53d37a52" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_list_proxy_1a49da11eda6487685e59911dfa28fff50" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&lt;=</name></member>
      <member refid="class_sdf_list_proxy_1a1ce5742bb70e0b764b2b39190625d840" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&lt;=</name></member>
      <member refid="class_sdf_list_proxy_1a116ba1fde07ea01a33821f72ee26a9e6" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&lt;=</name></member>
      <member refid="class_sdf_list_proxy_1a4c27720c4f258753ef34223b8a30cd52" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator=</name></member>
      <member refid="class_sdf_list_proxy_1a137d3cd4be9fac5592f4d4845e97eec9" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator=</name></member>
      <member refid="class_sdf_list_proxy_1af9591ccbe3998ea89740f50425ab4bb4" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator=</name></member>
      <member refid="class_sdf_list_proxy_1afb4d6c6b37f6918aefd41973e68a44b3" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator==</name></member>
      <member refid="class_sdf_list_proxy_1ab4dd9fa0c507d2b9f109da91b4739cd1" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator==</name></member>
      <member refid="class_sdf_list_proxy_1a951cc6aaf373bd75831443607aaefa6f" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator==</name></member>
      <member refid="class_sdf_list_proxy_1a44d93a81b479ba6e2f0b315399c022a2" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&gt;</name></member>
      <member refid="class_sdf_list_proxy_1a777716c59b8441da3ea48bd1f74c13af" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&gt;</name></member>
      <member refid="class_sdf_list_proxy_1a74be1785e173ae672b084873edad3f8d" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&gt;</name></member>
      <member refid="class_sdf_list_proxy_1a71098a676c384a9fe8fbd15d53e35468" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&gt;=</name></member>
      <member refid="class_sdf_list_proxy_1abc962ecbab6d4095b147614058cbd7ee" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&gt;=</name></member>
      <member refid="class_sdf_list_proxy_1afd2afa735d4548b2b050b8869de3cae4" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator&gt;=</name></member>
      <member refid="class_sdf_list_proxy_1a7fbaa72c3b985139ea192224f6e7b437" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator[]</name></member>
      <member refid="class_sdf_list_proxy_1a079f4bc11784859796bc25faf1d22f22" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>operator[]</name></member>
      <member refid="class_sdf_list_proxy_1a058bda4957df6a97b1ea6c9fd783f672" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>pop_back</name></member>
      <member refid="class_sdf_list_proxy_1a0a54ab10434e522e8aa6d4e95aca09b3" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>push_back</name></member>
      <member refid="class_sdf_list_proxy_1acea44ed500a54b2bb93e16b86e81afa8" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>rbegin</name></member>
      <member refid="class_sdf_list_proxy_1af086cceac199bd735c7a97c2a8d7ed21" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>rbegin</name></member>
      <member refid="class_sdf_list_proxy_1ab49658ca6fcb6f2e7cd73a91b88e9e7c" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>reference</name></member>
      <member refid="class_sdf_list_proxy_1ab5040b467390e7ece502ea7309b926ec" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>Remove</name></member>
      <member refid="class_sdf_list_proxy_1a68c599ddcbfddc65170de524ac165e44" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>rend</name></member>
      <member refid="class_sdf_list_proxy_1a07da1fdc890b6949f1a20a1961c6fc44" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>rend</name></member>
      <member refid="class_sdf_list_proxy_1ab0b8c0a3e37354ae574743f1c4162692" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>Replace</name></member>
      <member refid="class_sdf_list_proxy_1a2ca931c6d993daf5ce23989b06509989" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>resize</name></member>
      <member refid="class_sdf_list_proxy_1a19a4f893695618227888a0659f4d4eab" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>reverse_iterator</name></member>
      <member refid="class_sdf_list_proxy_1a83c2ec180dedc2c21227158d47fbe378" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>SdfListProxy</name></member>
      <member refid="class_sdf_list_proxy_1a5df4c8e2aa8db4fcaaa287e800098747" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>SdfListProxy</name></member>
      <member refid="class_sdf_list_proxy_1a3bfd505801609108a5115aae04716c04" prot="private" virt="non-virtual"><scope>SdfListProxy</scope><name>SdfPyWrapListProxy</name></member>
      <member refid="class_sdf_list_proxy_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>size</name></member>
      <member refid="class_sdf_list_proxy_1ad1fae8622255085c84a68d7b5bfc9a00" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>This</name></member>
      <member refid="class_sdf_list_proxy_1a66eef962842a9639011185acc58f5fb9" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>TypePolicy</name></member>
      <member refid="class_sdf_list_proxy_1a2ca496ff8f6470b2435c267ff8ab4b36" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>value_type</name></member>
      <member refid="class_sdf_list_proxy_1a1d5f5be7426540b7a3f19bf269789ef1" prot="public" virt="non-virtual"><scope>SdfListProxy</scope><name>value_vector_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
