<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_serialization" kind="class" language="C++" prot="public">
    <compoundname>TraceSerialization</compoundname>
    <includes refid="serialization_8h" local="no">serialization.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_trace_serialization_1ab16bce4d5573f72234824394b47c0ada" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API bool</type>
        <definition>static TRACE_API bool Write</definition>
        <argsstring>(std::ostream &amp;ostr, const std::shared_ptr&lt; TraceCollection &gt; &amp;col)</argsstring>
        <name>Write</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt; &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Writes <computeroutput>col</computeroutput> to <computeroutput>ostr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the write was successful, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/serialization.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_serialization_1ae89dc8eafce36f2975fff89fa1c8af32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API bool</type>
        <definition>static TRACE_API bool Write</definition>
        <argsstring>(std::ostream &amp;ostr, const std::vector&lt; std::shared_ptr&lt; TraceCollection &gt;&gt; &amp;collections)</argsstring>
        <name>Write</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt;&gt; &amp;</type>
          <declname>collections</declname>
        </param>
        <briefdescription>
<para>Writes <computeroutput>collections</computeroutput> to <computeroutput>ostr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the write was successful, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/serialization.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_serialization_1afea44c13f48b98f671cf966a712b793f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API std::unique_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt;</type>
        <definition>static TRACE_API std::unique_ptr&lt;TraceCollection&gt; Read</definition>
        <argsstring>(std::istream &amp;istr, std::string *error=nullptr)</argsstring>
        <name>Read</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>istr</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>error</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Tries to create a <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> from the contexts of <computeroutput>istr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the created collection if it was successful. If there is an error reading <computeroutput>istr</computeroutput>, <computeroutput>error</computeroutput> will be populated with a description. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/serialization.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class contains methods to read and write <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/serialization.h" line="44" column="1" bodyfile="pxr/base/trace/serialization.h" bodystart="44" bodyend="63"/>
    <listofallmembers>
      <member refid="class_trace_serialization_1afea44c13f48b98f671cf966a712b793f" prot="public" virt="non-virtual"><scope>TraceSerialization</scope><name>Read</name></member>
      <member refid="class_trace_serialization_1ab16bce4d5573f72234824394b47c0ada" prot="public" virt="non-virtual"><scope>TraceSerialization</scope><name>Write</name></member>
      <member refid="class_trace_serialization_1ae89dc8eafce36f2975fff89fa1c8af32" prot="public" virt="non-virtual"><scope>TraceSerialization</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
