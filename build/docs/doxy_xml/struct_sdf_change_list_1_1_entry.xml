<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_sdf_change_list_1_1_entry" kind="struct" language="C++" prot="public">
    <compoundname>SdfChangeList::Entry</compoundname>
    <includes refid="change_list_8h" local="no">changeList.h</includes>
    <innerclass refid="struct_sdf_change_list_1_1_entry_1_1___flags" prot="public">SdfChangeList::Entry::_Flags</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_sdf_change_list_1_1_entry_1a734d9422e54040122a8eb8fbfd57c8c3" prot="public" static="no">
        <type>std::pair&lt; <ref refid="class_vt_value" kindref="compound">VtValue</ref>, <ref refid="class_vt_value" kindref="compound">VtValue</ref> &gt;</type>
        <definition>typedef std::pair&lt;VtValue, VtValue&gt; InfoChange</definition>
        <argsstring></argsstring>
        <name>InfoChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="119" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_sdf_change_list_1_1_entry_1a90160741231da82bd8cbcd48b567d5b2" prot="public" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; std::pair&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, InfoChange &gt;, 3 &gt;</type>
        <definition>typedef TfSmallVector&lt;std::pair&lt;TfToken, InfoChange&gt;, 3&gt; InfoChangeVec</definition>
        <argsstring></argsstring>
        <name>InfoChangeVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="122" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_sdf_change_list_1_1_entry_1ab6adcd21374ea30880e35f285b701e01" prot="public" static="no">
        <type>std::pair&lt; std::string, SubLayerChangeType &gt;</type>
        <definition>typedef std::pair&lt;std::string, SubLayerChangeType&gt; SubLayerChange</definition>
        <argsstring></argsstring>
        <name>SubLayerChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="145" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_sdf_change_list_1_1_entry_1a96e10e74ca9cd67d75ce268ac8bf1c3f" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">InfoChangeVec</ref></type>
        <definition>InfoChangeVec infoChanged</definition>
        <argsstring></argsstring>
        <name>infoChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="123" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_change_list_1_1_entry_1aab4852cf220da71ca22a58833673de7d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; SubLayerChange &gt;</type>
        <definition>std::vector&lt;SubLayerChange&gt; subLayerChanges</definition>
        <argsstring></argsstring>
        <name>subLayerChanges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="146" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_change_list_1_1_entry_1aaccbb7ae435a786d16b6ee9f6380b051" prot="public" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath oldPath</definition>
        <argsstring></argsstring>
        <name>oldPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="149" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_change_list_1_1_entry_1a1c7e96c2ea791d5e4195fcc63301fccd" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string oldIdentifier</definition>
        <argsstring></argsstring>
        <name>oldIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="152" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_change_list_1_1_entry_1ac3fee055306c740e7d992e5b93de82dc" prot="public" static="no" mutable="no">
        <type>_Flags</type>
        <definition>_Flags flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="199" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_sdf_change_list_1_1_entry_1af8edfc6806f07cc103221b96b2066efd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>InfoChangeVec::const_iterator</type>
        <definition>InfoChangeVec::const_iterator FindInfoChange</definition>
        <argsstring>(TfToken const &amp;key) const</argsstring>
        <name>FindInfoChange</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return the iterator in infoChanged whose first element is <computeroutput>key</computeroutput>, or infoChanged.end() if there is no such element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="128" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="128" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_change_list_1_1_entry_1a78acf2875cc3567783e5be2abfd62ef6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasInfoChange</definition>
        <argsstring>(TfToken const &amp;key) const</argsstring>
        <name>HasInfoChange</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return true if this entry has an info change for <computeroutput>key</computeroutput>, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/changeList.h" line="141" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="141" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="struct_sdf_change_list_1_1_entry" kindref="compound">Entry</ref> of changes at a single path in namespace. </para>
    </briefdescription>
    <detaileddescription>
<para>If the path is <ref refid="class_sdf_path_1a9e77b565c10268c2b55f92559f621606" kindref="member">SdfPath::AbsoluteRootPath()</ref>, that indicates a change to the root of namespace (that is, a layer or stage).</para>
<para>Note: Our language for invalidation used to be more precise about items added, removed, or reordered. It might seem that this would afford more opportunities for efficient updates, but in practice it does not. Because our derived data typically must recompose or reinstantiate based on the underlying data, the particular delta might be ignored, overridden, or invalid. It is simpler to treat all changes identically, and focus on making the common base case fast, rather than have complicated differential update logic. It also vastly simplifies the language of invalidation. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1113">
        <label>SdfPath</label>
        <link refid="class_sdf_path"/>
      </node>
      <node id="1114">
        <label>TfSmallVector&lt; std::pair&lt; TfToken, InfoChange &gt;, 3 &gt;</label>
        <link refid="class_tf_small_vector"/>
      </node>
      <node id="1112">
        <label>SdfChangeList::Entry</label>
        <link refid="struct_sdf_change_list_1_1_entry"/>
        <childnode refid="1113" relation="usage">
          <edgelabel>oldPath</edgelabel>
        </childnode>
        <childnode refid="1114" relation="usage">
          <edgelabel>infoChanged</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/changeList.h" line="117" column="1" bodyfile="pxr/usd/sdf/changeList.h" bodystart="117" bodyend="200"/>
    <listofallmembers>
      <member refid="struct_sdf_change_list_1_1_entry_1af8edfc6806f07cc103221b96b2066efd" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>FindInfoChange</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1ac3fee055306c740e7d992e5b93de82dc" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>flags</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1a78acf2875cc3567783e5be2abfd62ef6" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>HasInfoChange</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1a734d9422e54040122a8eb8fbfd57c8c3" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>InfoChange</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1a96e10e74ca9cd67d75ce268ac8bf1c3f" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>infoChanged</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1a90160741231da82bd8cbcd48b567d5b2" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>InfoChangeVec</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1a1c7e96c2ea791d5e4195fcc63301fccd" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>oldIdentifier</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1aaccbb7ae435a786d16b6ee9f6380b051" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>oldPath</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1ab6adcd21374ea30880e35f285b701e01" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>SubLayerChange</name></member>
      <member refid="struct_sdf_change_list_1_1_entry_1aab4852cf220da71ca22a58833673de7d" prot="public" virt="non-virtual"><scope>SdfChangeList::Entry</scope><name>subLayerChanges</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
