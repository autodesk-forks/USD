<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_namespace_editor" kind="class" language="C++" prot="public">
    <compoundname>UsdNamespaceEditor</compoundname>
    <includes refid="namespace_editor_8h" local="no">namespaceEditor.h</includes>
    <innerclass refid="struct_usd_namespace_editor_1_1___edit_description" prot="private">UsdNamespaceEditor::_EditDescription</innerclass>
    <innerclass refid="struct_usd_namespace_editor_1_1___processed_edit" prot="private">UsdNamespaceEditor::_ProcessedEdit</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_usd_namespace_editor_1ad66e545e01d3d4c0e8e6a3870aee8870" prot="private" static="no" strong="yes">
        <type></type>
        <name>_EditType</name>
        <enumvalue id="class_usd_namespace_editor_1ad66e545e01d3d4c0e8e6a3870aee8870a4bbb8f967da6d1a610596d7257179c2b" prot="private">
          <name>Invalid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_namespace_editor_1ad66e545e01d3d4c0e8e6a3870aee8870af2a6c498fb90ee345d997f888fce3b18" prot="private">
          <name>Delete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_namespace_editor_1ad66e545e01d3d4c0e8e6a3870aee8870a904a8304056d77e4547744781b7ceb50" prot="private">
          <name>Rename</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_namespace_editor_1ad66e545e01d3d4c0e8e6a3870aee8870acae1aa0a77218af83ad753d3dc1c7486" prot="private">
          <name>Reparent</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="206" column="1" bodyfile="pxr/usd/usd/namespaceEditor.h" bodystart="206" bodyend="212"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_namespace_editor_1a49f89b94d7f97471cb90144d13b7e64f" prot="private" static="no" mutable="no">
        <type>UsdStageRefPtr</type>
        <definition>UsdStageRefPtr _stage</definition>
        <argsstring></argsstring>
        <name>_stage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="295" column="1" bodyfile="pxr/usd/usd/namespaceEditor.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_namespace_editor_1a52db4517c82cfa32c5fce8bdfccf287b" prot="private" static="no" mutable="no">
        <type>_EditDescription</type>
        <definition>_EditDescription _editDescription</definition>
        <argsstring></argsstring>
        <name>_editDescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="296" column="1" bodyfile="pxr/usd/usd/namespaceEditor.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_namespace_editor_1ab4f0839a12f1d9398ee17ca4ea0d0201" prot="private" static="no" mutable="yes">
        <type>std::optional&lt; _ProcessedEdit &gt;</type>
        <definition>std::optional&lt;_ProcessedEdit&gt; _processedEdit</definition>
        <argsstring></argsstring>
        <name>_processedEdit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="297" column="1" bodyfile="pxr/usd/usd/namespaceEditor.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_namespace_editor_1a2309b677a6e1f13993a4820177741205" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API UsdNamespaceEditor</definition>
        <argsstring>(const UsdStageRefPtr &amp;stage)</argsstring>
        <name>UsdNamespaceEditor</name>
        <param>
          <type>const UsdStageRefPtr &amp;</type>
          <declname>stage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a33e5b0914a45d0153055e36d11ff3a36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool DeletePrimAtPath</definition>
        <argsstring>(const SdfPath &amp;path)</argsstring>
        <name>DeletePrimAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to delete the composed prim at the given <computeroutput>path</computeroutput> from this namespace editor&apos;s stage. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the path is a valid possible composed prim path; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a12a4c9412aa44bde0ad467ac2c521eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool MovePrimAtPath</definition>
        <argsstring>(const SdfPath &amp;path, const SdfPath &amp;newPath)</argsstring>
        <name>MovePrimAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>newPath</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to move the composed prim at the given <computeroutput>path</computeroutput> on this namespace editor&apos;s stage to instead be at the path <computeroutput>newPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if both paths are valid possible composed prim path; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1ac1c8cd3a3d3ab7d6a03c8a13066232f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool DeletePrim</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>DeletePrim</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to delete the composed prim at the path of <computeroutput>prim</computeroutput> from this namespace editor&apos;s stage. </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to calling DeletePrimAtPath(prim.GetPath())</para>
<para>Returns true if the prim provides a valid possible composed prim path; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1aa986d7b126da4592540f04991517d114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool RenamePrim</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;newName)</argsstring>
        <name>RenamePrim</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to rename the composed prim at the path of <computeroutput>prim</computeroutput> on this namespace editor&apos;s stage to instead have the name <computeroutput>newName</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the prim provides a valid possible composed prim path and the new name is a valid possible prim name; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a6d02c0a11e20d2e34bb9c67eb14b1bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ReparentPrim</definition>
        <argsstring>(const UsdPrim &amp;prim, const UsdPrim &amp;newParent)</argsstring>
        <name>ReparentPrim</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>newParent</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to reparent the composed prim at the path of <computeroutput>prim</computeroutput> on this namespace editor&apos;s stage to instead be a namespace child of the composed prim at the path of <computeroutput>newParent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the both the prim and the new parent prim provide a valid possible composed prim paths; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a8cb215e3d7aaf8490f1eb742c36bd047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ReparentPrim</definition>
        <argsstring>(const UsdPrim &amp;prim, const UsdPrim &amp;newParent, const TfToken &amp;newName)</argsstring>
        <name>ReparentPrim</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>newParent</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to reparent the composed prim at the path of <computeroutput>prim</computeroutput> on this namespace editor&apos;s stage to instead be a prim named <computeroutput>newName</computeroutput> that is a namespace child of the composed prim at the. </para>
        </briefdescription>
        <detaileddescription>
<para>path of <computeroutput>newParent</computeroutput>.</para>
<para>Returns true if the both the prim and the new parent prim provide a valid possible composed prim paths and the new name is a valid prim name; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1af482c5c839e9b796b6c863fc84e4a6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool DeletePropertyAtPath</definition>
        <argsstring>(const SdfPath &amp;path)</argsstring>
        <name>DeletePropertyAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to delete the composed property at the given <computeroutput>path</computeroutput> from this namespace editor&apos;s stage. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the path is a valid possible composed property path; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a6d04ecd085d8438091966f1d4773cd00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool MovePropertyAtPath</definition>
        <argsstring>(const SdfPath &amp;path, const SdfPath &amp;newPath)</argsstring>
        <name>MovePropertyAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>newPath</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to move the composed property at the given <computeroutput>path</computeroutput> on this namespace editor&apos;s stage to instead be at the path <computeroutput>newPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if both paths are valid possible composed property path; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a58e754a0ebf0265bb38e8ec3c9e47ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool DeleteProperty</definition>
        <argsstring>(const UsdProperty &amp;property)</argsstring>
        <name>DeleteProperty</name>
        <param>
          <type>const <ref refid="class_usd_property" kindref="compound">UsdProperty</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to delete the composed property at the path of <computeroutput>property</computeroutput> from this namespace editor&apos;s stage. </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to calling DeletePropertyAtPath(property.GetPath())</para>
<para>Returns true if the property provides a valid possible composed property path; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a38b8a95f01e0d080b5e38e2299d43c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool RenameProperty</definition>
        <argsstring>(const UsdProperty &amp;property, const TfToken &amp;newName)</argsstring>
        <name>RenameProperty</name>
        <param>
          <type>const <ref refid="class_usd_property" kindref="compound">UsdProperty</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to rename the composed property at the path of <computeroutput>property</computeroutput> on this namespace editor&apos;s stage to instead have the name <computeroutput>newName</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the property provides a valid possible composed property path and the new name is a valid possible property name; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a4481bbb339227edc0dc30ef6e6c95cf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ReparentProperty</definition>
        <argsstring>(const UsdProperty &amp;property, const UsdPrim &amp;newParent)</argsstring>
        <name>ReparentProperty</name>
        <param>
          <type>const <ref refid="class_usd_property" kindref="compound">UsdProperty</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>newParent</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to reparent the composed property at the path of <computeroutput>property</computeroutput> on this namespace editor&apos;s stage to instead be a namespace child of the composed property at the path of <computeroutput>newParent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the both the property and the new parent prim provide a valid possible composed paths; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a6fe3e1b66c596c82486fb0de1b41cae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ReparentProperty</definition>
        <argsstring>(const UsdProperty &amp;property, const UsdPrim &amp;newParent, const TfToken &amp;newName)</argsstring>
        <name>ReparentProperty</name>
        <param>
          <type>const <ref refid="class_usd_property" kindref="compound">UsdProperty</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>newParent</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>newName</declname>
        </param>
        <briefdescription>
<para>Adds an edit operation to reparent the composed property at the path of <computeroutput>property</computeroutput> on this namespace editor&apos;s stage to instead be a property named <computeroutput>newName</computeroutput> that is a namespace child of the composed prim at the path of <computeroutput>newParent</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the both the property and the new parent prim provide a valid possible composed paths and the new name is a valid property name; returns false and emits a coding error if not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a4007e1163c810cf04699a67d2b023cc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ApplyEdits</definition>
        <argsstring>()</argsstring>
        <name>ApplyEdits</name>
        <briefdescription>
<para>Applies all the added namespace edits stored in this to namespace editor to its stage by authoring all scene description in the layer stack of the current edit target necessary to move or delete the composed objects that the edit paths refer to. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if all the necessary edits are successfully performed; returns false and emits a coding error otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a931a7e1155741ccb4397f29fa0374bd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool CanApplyEdits</definition>
        <argsstring>(std::string *whyNot=nullptr) const</argsstring>
        <name>CanApplyEdits</name>
        <param>
          <type>std::string *</type>
          <declname>whyNot</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns whether all the added namespace edits stored in this to namespace editor can be applied to its stage. </para>
        </briefdescription>
        <detaileddescription>
<para>In other words, this returns whether ApplyEdits should be successful if it were called right now. If this would return false and <computeroutput>whyNot</computeroutput> is provided, the reasons ApplyEdits would fail will be copied to whyNot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="201" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_namespace_editor_1afef2b9afdd46964762e0c53ca950e351" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _AddPrimDelete</definition>
        <argsstring>(const SdfPath &amp;oldPath)</argsstring>
        <name>_AddPrimDelete</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>oldPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1af40e325a3971abb71dc009f6b8338154" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _AddPrimMove</definition>
        <argsstring>(const SdfPath &amp;oldPath, const SdfPath &amp;newPath)</argsstring>
        <name>_AddPrimMove</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>oldPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>newPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1ad6cdde4381006232640bcc7b4aa0b5f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _AddPropertyDelete</definition>
        <argsstring>(const SdfPath &amp;oldPath)</argsstring>
        <name>_AddPropertyDelete</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>oldPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a41af38c491dca3b6f82eb8d6b7e0a9bc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _AddPropertyMove</definition>
        <argsstring>(const SdfPath &amp;oldPath, const SdfPath &amp;newPath)</argsstring>
        <name>_AddPropertyMove</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>oldPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>newPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a9c7fc68e4c7aeae4afdd3bdbd2da8ce2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ClearProcessedEdits</definition>
        <argsstring>()</argsstring>
        <name>_ClearProcessedEdits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1af5c2852dce3d52f1c88da8f4c846943c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ProcessEditsIfNeeded</definition>
        <argsstring>() const</argsstring>
        <name>_ProcessEditsIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1ad0cba0a2ac6e737da2f2941abd3c317c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>_ProcessedEdit</type>
        <definition>_ProcessedEdit _ProcessEdit</definition>
        <argsstring>(const _EditDescription &amp;editDesc) const</argsstring>
        <name>_ProcessEdit</name>
        <param>
          <type>const _EditDescription &amp;</type>
          <declname>editDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a4978983a978276cbd256a44ea47cc757" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>_ProcessedEdit</type>
        <definition>_ProcessedEdit _ProcessPrimEdit</definition>
        <argsstring>(const _EditDescription &amp;editDesc) const</argsstring>
        <name>_ProcessPrimEdit</name>
        <param>
          <type>const _EditDescription &amp;</type>
          <declname>editDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a5ed5bdbdd6ceecb4dd26bbc4aec16d16" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>_ProcessedEdit</type>
        <definition>_ProcessedEdit _ProcessPropertyEdit</definition>
        <argsstring>(const _EditDescription &amp;editDesc) const</argsstring>
        <name>_ProcessPropertyEdit</name>
        <param>
          <type>const _EditDescription &amp;</type>
          <declname>editDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="281" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_namespace_editor_1a4fa06665ef141ac1146060bc3fe49e17" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _GatherLayersToEdit</definition>
        <argsstring>(const _EditDescription &amp;editDesc, const UsdEditTarget &amp;editTarget, const PcpPrimIndex &amp;primIndex, _ProcessedEdit *processedEdit)</argsstring>
        <name>_GatherLayersToEdit</name>
        <param>
          <type>const _EditDescription &amp;</type>
          <declname>editDesc</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref> &amp;</type>
          <declname>editTarget</declname>
        </param>
        <param>
          <type>const <ref refid="class_pcp_prim_index" kindref="compound">PcpPrimIndex</ref> &amp;</type>
          <declname>primIndex</declname>
        </param>
        <param>
          <type>_ProcessedEdit *</type>
          <declname>processedEdit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_namespace_editor_1a967b3ab9ee221fc5cc5eb4a12c960684" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _ApplyProcessedEdit</definition>
        <argsstring>(const _ProcessedEdit &amp;processedEdit)</argsstring>
        <name>_ApplyProcessedEdit</name>
        <param>
          <type>const _ProcessedEdit &amp;</type>
          <declname>processedEdit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/namespaceEditor.h" line="293" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>This code is a work in progress and should not be used in production scenarios. It is currently not feature-complete and subject to change.</para>
</simplesect>
Provides namespace editing operations </para>
    </detaileddescription>
    <location file="pxr/usd/usd/namespaceEditor.h" line="44" column="1" bodyfile="pxr/usd/usd/namespaceEditor.h" bodystart="43" bodyend="298"/>
    <listofallmembers>
      <member refid="class_usd_namespace_editor_1afef2b9afdd46964762e0c53ca950e351" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_AddPrimDelete</name></member>
      <member refid="class_usd_namespace_editor_1af40e325a3971abb71dc009f6b8338154" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_AddPrimMove</name></member>
      <member refid="class_usd_namespace_editor_1ad6cdde4381006232640bcc7b4aa0b5f9" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_AddPropertyDelete</name></member>
      <member refid="class_usd_namespace_editor_1a41af38c491dca3b6f82eb8d6b7e0a9bc" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_AddPropertyMove</name></member>
      <member refid="class_usd_namespace_editor_1a967b3ab9ee221fc5cc5eb4a12c960684" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_ApplyProcessedEdit</name></member>
      <member refid="class_usd_namespace_editor_1a9c7fc68e4c7aeae4afdd3bdbd2da8ce2" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_ClearProcessedEdits</name></member>
      <member refid="class_usd_namespace_editor_1a52db4517c82cfa32c5fce8bdfccf287b" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_editDescription</name></member>
      <member refid="class_usd_namespace_editor_1ad66e545e01d3d4c0e8e6a3870aee8870" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_EditType</name></member>
      <member refid="class_usd_namespace_editor_1a4fa06665ef141ac1146060bc3fe49e17" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_GatherLayersToEdit</name></member>
      <member refid="class_usd_namespace_editor_1ab4f0839a12f1d9398ee17ca4ea0d0201" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_processedEdit</name></member>
      <member refid="class_usd_namespace_editor_1ad0cba0a2ac6e737da2f2941abd3c317c" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_ProcessEdit</name></member>
      <member refid="class_usd_namespace_editor_1af5c2852dce3d52f1c88da8f4c846943c" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_ProcessEditsIfNeeded</name></member>
      <member refid="class_usd_namespace_editor_1a4978983a978276cbd256a44ea47cc757" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_ProcessPrimEdit</name></member>
      <member refid="class_usd_namespace_editor_1a5ed5bdbdd6ceecb4dd26bbc4aec16d16" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_ProcessPropertyEdit</name></member>
      <member refid="class_usd_namespace_editor_1a49f89b94d7f97471cb90144d13b7e64f" prot="private" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>_stage</name></member>
      <member refid="class_usd_namespace_editor_1a4007e1163c810cf04699a67d2b023cc8" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>ApplyEdits</name></member>
      <member refid="class_usd_namespace_editor_1a931a7e1155741ccb4397f29fa0374bd4" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>CanApplyEdits</name></member>
      <member refid="class_usd_namespace_editor_1ac1c8cd3a3d3ab7d6a03c8a13066232f9" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>DeletePrim</name></member>
      <member refid="class_usd_namespace_editor_1a33e5b0914a45d0153055e36d11ff3a36" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>DeletePrimAtPath</name></member>
      <member refid="class_usd_namespace_editor_1a58e754a0ebf0265bb38e8ec3c9e47ff8" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>DeleteProperty</name></member>
      <member refid="class_usd_namespace_editor_1af482c5c839e9b796b6c863fc84e4a6ee" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>DeletePropertyAtPath</name></member>
      <member refid="class_usd_namespace_editor_1a12a4c9412aa44bde0ad467ac2c521eca" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>MovePrimAtPath</name></member>
      <member refid="class_usd_namespace_editor_1a6d04ecd085d8438091966f1d4773cd00" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>MovePropertyAtPath</name></member>
      <member refid="class_usd_namespace_editor_1aa986d7b126da4592540f04991517d114" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>RenamePrim</name></member>
      <member refid="class_usd_namespace_editor_1a38b8a95f01e0d080b5e38e2299d43c47" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>RenameProperty</name></member>
      <member refid="class_usd_namespace_editor_1a6d02c0a11e20d2e34bb9c67eb14b1bb5" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>ReparentPrim</name></member>
      <member refid="class_usd_namespace_editor_1a8cb215e3d7aaf8490f1eb742c36bd047" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>ReparentPrim</name></member>
      <member refid="class_usd_namespace_editor_1a4481bbb339227edc0dc30ef6e6c95cf6" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>ReparentProperty</name></member>
      <member refid="class_usd_namespace_editor_1a6fe3e1b66c596c82486fb0de1b41cae7" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>ReparentProperty</name></member>
      <member refid="class_usd_namespace_editor_1a2309b677a6e1f13993a4820177741205" prot="public" virt="non-virtual"><scope>UsdNamespaceEditor</scope><name>UsdNamespaceEditor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
