<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_anim_mapper" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelAnimMapper</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_skel_anim_mapper_1aa368b138f82336383e15b87526c2720f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _targetSize</definition>
        <argsstring></argsstring>
        <name>_targetSize</name>
        <briefdescription>
<para>Size of the output map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="165" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_anim_mapper_1aa0469ca336366d63abf322b050795a4a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _offset</definition>
        <argsstring></argsstring>
        <name>_offset</name>
        <briefdescription>
<para>For ordered mappings, an offset into the output array at which to map the source data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="169" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_anim_mapper_1acb7747fce3cf7aaa3a5d4dc4e24f9888" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _indexMap</definition>
        <argsstring></argsstring>
        <name>_indexMap</name>
        <briefdescription>
<para>For unordered mappings, an index map, mapping from source indices to target indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="173" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_anim_mapper_1aa4a61b1d913f2bee1e0ed5d9daf26549" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _flags</definition>
        <argsstring></argsstring>
        <name>_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="174" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1abb7f81ee4d709caef4c47273ad5ec978" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelAnimMapper</definition>
        <argsstring>()</argsstring>
        <name>UsdSkelAnimMapper</name>
        <briefdescription>
<para>Construct a null mapper. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1adf9a1a79258215686c0468b1cdf5c500" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelAnimMapper</definition>
        <argsstring>(size_t size)</argsstring>
        <name>UsdSkelAnimMapper</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Construct an identity mapper for remapping a range of <computeroutput>size</computeroutput> elems. </para>
        </briefdescription>
        <detaileddescription>
<para>An identity mapper is used to indicate that no remapping is required. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a5c481cc950dbeff73972822f14b28bc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelAnimMapper</definition>
        <argsstring>(const VtTokenArray &amp;sourceOrder, const VtTokenArray &amp;targetOrder)</argsstring>
        <name>UsdSkelAnimMapper</name>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>sourceOrder</declname>
        </param>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>targetOrder</declname>
        </param>
        <briefdescription>
<para>Construct a mapper for mapping data from <computeroutput>sourceOrder</computeroutput> to <computeroutput>targetOrder</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1ae2a70e9f9a38c86b06c2464c041d82c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelAnimMapper</definition>
        <argsstring>(const TfToken *sourceOrder, size_t sourceOrderSize, const TfToken *targetOrder, size_t targetOrderSize)</argsstring>
        <name>UsdSkelAnimMapper</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> *</type>
          <declname>sourceOrder</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sourceOrderSize</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> *</type>
          <declname>targetOrder</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>targetOrderSize</declname>
        </param>
        <briefdescription>
<para>Construct a mapper for mapping data from <computeroutput>sourceOrder</computeroutput> to <computeroutput>targetOrder</computeroutput>, each being arrays of size <computeroutput>sourceOrderSize</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>and <computeroutput>targetOrderSize</computeroutput>, respectively. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1aee674e7c615ae761fb6ffa66a885db20" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Remap</definition>
        <argsstring>(const Container &amp;source, Container *target, int elementSize=1, const typename Container::value_type *defaultValue=nullptr) const</argsstring>
        <name>Remap</name>
        <param>
          <type>const Container &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Container *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elementSize</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const typename Container::value_type *</type>
          <declname>defaultValue</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Typed remapping of data in an arbitrary, stl-like container. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>source</computeroutput> array provides a run of <computeroutput>elementSize</computeroutput> for each path in the \em sourceOrder. These elements are remapped and copied over the <computeroutput>target</computeroutput> array. Prior to remapping, the <computeroutput>target</computeroutput> array is resized to the size of the \em targetOrder (as given at mapper construction time) multiplied by the <computeroutput>elementSize</computeroutput>. New element created in the array are initialized to <computeroutput>defaultValue</computeroutput>, if provided. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="85" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="196" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a1e2688bc79bcfb8c29a945c7920a50f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool Remap</definition>
        <argsstring>(const VtValue &amp;source, VtValue *target, int elementSize=1, const VtValue &amp;defaultValue=VtValue()) const</argsstring>
        <name>Remap</name>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elementSize</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <briefdescription>
<para>Type-erased remapping of data from <computeroutput>source</computeroutput> into <computeroutput>target</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>source</computeroutput> array provides a run of <computeroutput>elementSize</computeroutput> elements for each path in the \em sourceOrder. These elements are remapped and copied over the <computeroutput>target</computeroutput> array. Prior to remapping, the <computeroutput>target</computeroutput> array is resized to the size of the \em targetOrder (as given at mapper construction time) multiplied by the <computeroutput>elementSize</computeroutput>. New elements created in the array are initialized to <computeroutput>defaultValue</computeroutput>, if provided. Remapping is supported for registered Sdf array value types only. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a41174c5c347cdf614ed8ec3abd24f84a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool RemapTransforms</definition>
        <argsstring>(const VtArray&lt; Matrix4 &gt; &amp;source, VtArray&lt; Matrix4 &gt; *target, int elementSize=1) const</argsstring>
        <name>RemapTransforms</name>
        <param>
          <type>const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elementSize</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Convenience method for the common task of remapping transform arrays. </para>
        </briefdescription>
        <detaileddescription>
<para>This performs the same operation as Remap(), but sets the matrix identity as the default value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a93b269dfdf5f6a37c40218024daf006a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool IsIdentity</definition>
        <argsstring>() const</argsstring>
        <name>IsIdentity</name>
        <briefdescription>
<para>Returns true if this is an identity map. </para>
        </briefdescription>
        <detaileddescription>
<para>The source and target orders of an identity map are identical. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a06f5ce32bc8c578ba42c647bb3c52f94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool IsSparse</definition>
        <argsstring>() const</argsstring>
        <name>IsSparse</name>
        <briefdescription>
<para>Returns true if this is a sparse mapping. </para>
        </briefdescription>
        <detaileddescription>
<para>A sparse mapping means that not all target values will be overridden by source values, when mapped with Remap(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a69843c30bdbfccbb3337ec3b763d91c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool IsNull</definition>
        <argsstring>() const</argsstring>
        <name>IsNull</name>
        <briefdescription>
<para>Returns true if this is a null mapping. </para>
        </briefdescription>
        <detaileddescription>
<para>No source elements of a null map are mapped to the target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a14b8cc9726fa3b17a91a2b06bbaae306" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>USDSKEL_API size_t</type>
        <definition>USDSKEL_API size_t size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Get the size of the output array that this mapper expects to map data into. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="132" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1aec7c069b34aa29e2743f5f013fe67fbe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdSkelAnimMapper &amp;o) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const UsdSkelAnimMapper &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1af581a234fd7996e0a2a3d2e97f4c67cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdSkelAnimMapper &amp;o) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const UsdSkelAnimMapper &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="136" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="136" bodyend="138"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a7dc2505b02ccdc84fbaa463d7346bb0d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _UntypedRemap</definition>
        <argsstring>(const VtValue &amp;source, VtValue *target, int elementSize, const VtValue &amp;defaultValue) const</argsstring>
        <name>_UntypedRemap</name>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>target</declname>
        </param>
        <param>
          <type>int</type>
          <declname>elementSize</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a951c40d194b3b3366ced5741677b1631" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool _IsOrdered</definition>
        <argsstring>() const</argsstring>
        <name>_IsOrdered</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="162" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1ae2f0b0ec1cf2742db6aa4fd4b3fe1ff2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void _ResizeContainer</definition>
        <argsstring>(VtArray&lt; T &gt; *array, size_t size, const T &amp;defaultValue)</argsstring>
        <name>_ResizeContainer</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; T &gt; *</type>
          <declname>array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="147" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="180" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_anim_mapper_1a85cc2bce6def16672441dbebf4be4222" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Container</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void _ResizeContainer</definition>
        <argsstring>(Container *container, size_t size, const typename Container::value_type &amp;defaultValue, typename std::enable_if&lt; !VtIsArray&lt; Container &gt;::value, Container &gt;::type *=0)</argsstring>
        <name>_ResizeContainer</name>
        <param>
          <type>Container *</type>
          <declname>container</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const typename Container::value_type &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt; !<ref refid="struct_vt_is_array" kindref="compound">VtIsArray</ref>&lt; Container &gt;::value, Container &gt;::type *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animMapper.h" line="152" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="152" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/animMapper.h" line="52" column="1" bodyfile="pxr/usd/usdSkel/animMapper.h" bodystart="52" bodyend="175"/>
    <listofallmembers>
      <member refid="class_usd_skel_anim_mapper_1aa4a61b1d913f2bee1e0ed5d9daf26549" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_flags</name></member>
      <member refid="class_usd_skel_anim_mapper_1acb7747fce3cf7aaa3a5d4dc4e24f9888" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_indexMap</name></member>
      <member refid="class_usd_skel_anim_mapper_1a951c40d194b3b3366ced5741677b1631" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_IsOrdered</name></member>
      <member refid="class_usd_skel_anim_mapper_1aa0469ca336366d63abf322b050795a4a" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_offset</name></member>
      <member refid="class_usd_skel_anim_mapper_1ae2f0b0ec1cf2742db6aa4fd4b3fe1ff2" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_ResizeContainer</name></member>
      <member refid="class_usd_skel_anim_mapper_1a85cc2bce6def16672441dbebf4be4222" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_ResizeContainer</name></member>
      <member refid="class_usd_skel_anim_mapper_1aa368b138f82336383e15b87526c2720f" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_targetSize</name></member>
      <member refid="class_usd_skel_anim_mapper_1a7dc2505b02ccdc84fbaa463d7346bb0d" prot="private" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>_UntypedRemap</name></member>
      <member refid="class_usd_skel_anim_mapper_1a93b269dfdf5f6a37c40218024daf006a" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>IsIdentity</name></member>
      <member refid="class_usd_skel_anim_mapper_1a69843c30bdbfccbb3337ec3b763d91c5" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>IsNull</name></member>
      <member refid="class_usd_skel_anim_mapper_1a06f5ce32bc8c578ba42c647bb3c52f94" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>IsSparse</name></member>
      <member refid="class_usd_skel_anim_mapper_1af581a234fd7996e0a2a3d2e97f4c67cb" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>operator!=</name></member>
      <member refid="class_usd_skel_anim_mapper_1aec7c069b34aa29e2743f5f013fe67fbe" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>operator==</name></member>
      <member refid="class_usd_skel_anim_mapper_1aee674e7c615ae761fb6ffa66a885db20" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>Remap</name></member>
      <member refid="class_usd_skel_anim_mapper_1a1e2688bc79bcfb8c29a945c7920a50f3" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>Remap</name></member>
      <member refid="class_usd_skel_anim_mapper_1a41174c5c347cdf614ed8ec3abd24f84a" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>RemapTransforms</name></member>
      <member refid="class_usd_skel_anim_mapper_1a14b8cc9726fa3b17a91a2b06bbaae306" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>size</name></member>
      <member refid="class_usd_skel_anim_mapper_1abb7f81ee4d709caef4c47273ad5ec978" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>UsdSkelAnimMapper</name></member>
      <member refid="class_usd_skel_anim_mapper_1adf9a1a79258215686c0468b1cdf5c500" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>UsdSkelAnimMapper</name></member>
      <member refid="class_usd_skel_anim_mapper_1a5c481cc950dbeff73972822f14b28bc7" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>UsdSkelAnimMapper</name></member>
      <member refid="class_usd_skel_anim_mapper_1ae2a70e9f9a38c86b06c2464c041d82c7" prot="public" virt="non-virtual"><scope>UsdSkelAnimMapper</scope><name>UsdSkelAnimMapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
