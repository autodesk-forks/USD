<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_quath" kind="class" language="C++" prot="public">
    <compoundname>GfQuath</compoundname>
    <includes refid="quath_8h" local="no">quath.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_quath_1a512284adad2afc1cb29997cf585d965d" prot="public" static="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>typedef GfHalf ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="63" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_gf_quath_1afe842a033d8787acf7dcc78fdf3a1bb6" prot="public" static="no">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>typedef GfVec3h ImaginaryType</definition>
        <argsstring></argsstring>
        <name>ImaginaryType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="64" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_quath_1a46f4c5e87cb18c7ffd601806dc56e0af" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h _imaginary</definition>
        <argsstring></argsstring>
        <name>_imaginary</name>
        <briefdescription>
<para>Imaginary part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="257" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gf_quath_1aa8bc2132edb71eac9a59cb81fd5b79ec" prot="private" static="no" mutable="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf _real</definition>
        <argsstring></argsstring>
        <name>_real</name>
        <briefdescription>
<para>Real part. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="260" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_quath_1a6e700c33532908e6a0d04ae23dc1cc80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfQuath</definition>
        <argsstring>()</argsstring>
        <name>GfQuath</name>
        <briefdescription>
<para>Default constructor leaves the quaternion undefined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="67" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1aee12f2564ebae3e9bc702a411751c169" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfQuath</definition>
        <argsstring>(GfHalf realVal)</argsstring>
        <name>GfQuath</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>realVal</declname>
        </param>
        <briefdescription>
<para>Initialize the real coefficient to <computeroutput>realVal</computeroutput> and the imaginary coefficients to zero. </para>
        </briefdescription>
        <detaileddescription>
<para>Since quaternions typically must be normalized, reasonable values for <computeroutput>realVal</computeroutput> are -1, 0, or 1. Other values are legal but are likely to be meaningless. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="76" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a00606884fd7aeda8c987124d3e28f1d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfQuath</definition>
        <argsstring>(GfHalf real, GfHalf i, GfHalf j, GfHalf k)</argsstring>
        <name>GfQuath</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>real</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Initialize the real and imaginary coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="79" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1adbc3ea6541fbeb99972bcd98537d5938" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfQuath</definition>
        <argsstring>(GfHalf real, const GfVec3h &amp;imaginary)</argsstring>
        <name>GfQuath</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>real</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>imaginary</declname>
        </param>
        <briefdescription>
<para>Initialize the real and imaginary coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="85" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1ab5a269512b553aaa8d3c6ba612ab79b0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>GF_API</type>
        <definition>GF_API GfQuath</definition>
        <argsstring>(class GfQuatd const &amp;other)</argsstring>
        <name>GfQuath</name>
        <param>
          <type>class <ref refid="class_gf_quatd" kindref="compound">GfQuatd</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_quatd" kindref="compound">GfQuatd</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1ad7f2962ee85ccc87093d308f15ac55ce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>GF_API</type>
        <definition>GF_API GfQuath</definition>
        <argsstring>(class GfQuatf const &amp;other)</argsstring>
        <name>GfQuath</name>
        <param>
          <type>class <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a2798ddf8e14a6e3181ae1f0ae474931b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetReal</definition>
        <argsstring>() const</argsstring>
        <name>GetReal</name>
        <briefdescription>
<para>Return the real coefficient. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="106" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a8d2d5151afba20454ed7e2320563e457" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetReal</definition>
        <argsstring>(GfHalf real)</argsstring>
        <name>SetReal</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>real</declname>
        </param>
        <briefdescription>
<para>Set the real coefficient. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="109" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1abf669fd2f72840dee6ea2490fe65b8f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>const GfVec3h&amp; GetImaginary</definition>
        <argsstring>() const</argsstring>
        <name>GetImaginary</name>
        <briefdescription>
<para>Return the imaginary coefficient. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="112" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="112" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a183bc4d8b8b5a1ae02c7f5c82ebdd34b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetImaginary</definition>
        <argsstring>(const GfVec3h &amp;imaginary)</argsstring>
        <name>SetImaginary</name>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>imaginary</declname>
        </param>
        <briefdescription>
<para>Set the imaginary coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="115" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1adea7c29de73eed83736b1510803c8d48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetImaginary</definition>
        <argsstring>(GfHalf i, GfHalf j, GfHalf k)</argsstring>
        <name>SetImaginary</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>j</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Set the imaginary coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="120" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLength</definition>
        <argsstring>() const</argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Return geometric length of this quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="125" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1ac0c90c9ca052b3dda0face648a7a3b7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath GetNormalized</definition>
        <argsstring>(GfHalf eps=GF_MIN_VECTOR_LENGTH) const</argsstring>
        <name>GetNormalized</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___basic_math_1gae311f33eddd983e9559c10758908de5b" kindref="member">GF_MIN_VECTOR_LENGTH</ref></defval>
        </param>
        <briefdescription>
<para>length of this quaternion is smaller than <computeroutput>eps</computeroutput>, return the identity quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="130" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a2d91b3e1498ecf61cebc32b52f4ada90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GF_API GfHalf Normalize</definition>
        <argsstring>(GfHalf eps=GF_MIN_VECTOR_LENGTH)</argsstring>
        <name>Normalize</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___basic_math_1gae311f33eddd983e9559c10758908de5b" kindref="member">GF_MIN_VECTOR_LENGTH</ref></defval>
        </param>
        <briefdescription>
<para>Normalizes this quaternion in place to unit length, returning the length before normalization. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length of this quaternion is smaller than <computeroutput>eps</computeroutput>, this sets the quaternion to identity. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a81843f536e794ed2498cb00dfbe887f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath GetConjugate</definition>
        <argsstring>() const</argsstring>
        <name>GetConjugate</name>
        <briefdescription>
<para>Return this quaternion&apos;s conjugate, which is the quaternion with the same real coefficient and negated imaginary coefficients. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="144" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a4af71ba089a8400a722360d45ebfa55f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath GetInverse</definition>
        <argsstring>() const</argsstring>
        <name>GetInverse</name>
        <briefdescription>
<para>Return this quaternion&apos;s inverse, or reciprocal. </para>
        </briefdescription>
        <detaileddescription>
<para>This is the quaternion&apos;s conjugate divided by it&apos;s squared length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="150" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1ad65c651e6b15a39876051a3343f77485" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GF_API GfVec3h Transform</definition>
        <argsstring>(const GfVec3h &amp;point) const</argsstring>
        <name>Transform</name>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>Transform the <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> point. </para>
        </briefdescription>
        <detaileddescription>
<para>If the quaternion is normalized, the transformation is a rotation. Given a <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> q, q.Transform(point) is equivalent to: <verbatim>(q * GfQuath(0, point) * q.GetInverse()).GetImaginary()
</verbatim></para>
<para>but is more efficient. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a1fa858d31b9ddc00d54013425d466d48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Component-wise negation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="170" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1aa458291ac5522d1f19edde83a99afd31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const GfQuath &amp;q) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Component-wise quaternion equality test. </para>
        </briefdescription>
        <detaileddescription>
<para>The real and imaginary parts must match exactly for quaternions to be considered equal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="176" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1ac5c36b73fa4d11bdece69bf60d910a8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const GfQuath &amp;q) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Component-wise quaternion inequality test. </para>
        </briefdescription>
        <detaileddescription>
<para>The real and imaginary parts must match exactly for quaternions to be considered equal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="183" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1ab9b7ab3ee8f26501bf602ee233816c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
        <definition>GF_API GfQuath&amp; operator *=</definition>
        <argsstring>(const GfQuath &amp;q)</argsstring>
        <name>operator *=</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Post-multiply quaternion <computeroutput>q</computeroutput> into this quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1aaca2da243c8b0cc2927f8ac9ccd62d1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
        <definition>GfQuath&amp; operator *=</definition>
        <argsstring>(GfHalf s)</argsstring>
        <name>operator *=</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiply this quaternion&apos;s coefficients by <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="192" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="192" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1abfd66b9f5ad8a78affbf6f42f3aa0272" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
        <definition>GfQuath&amp; operator/=</definition>
        <argsstring>(GfHalf s)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Divide this quaternion&apos;s coefficients by <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="199" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="199" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1a1ff4b26bae025e1fd206d54afc398de4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
        <definition>GfQuath&amp; operator+=</definition>
        <argsstring>(const GfQuath &amp;q)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Add quaternion <computeroutput>q</computeroutput> to this quaternion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="206" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1af048280787416cc8b5ebc41f5e647f29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
        <definition>GfQuath&amp; operator -=</definition>
        <argsstring>(const GfQuath &amp;q)</argsstring>
        <name>operator -=</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Component-wise unary difference operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="213" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="213" bodyend="217"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_quath_1ae6684d3f6a43beb37cd1fdffb6a03bec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>static GfQuath GetZero</definition>
        <argsstring>()</argsstring>
        <name>GetZero</name>
        <briefdescription>
<para>Return the zero quaternion, with real coefficient 0 and an imaginary coefficients all zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="99" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_quath_1aff838fa48f3e85c6d01fbe454afd511e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>static GfQuath GetIdentity</definition>
        <argsstring>()</argsstring>
        <name>GetIdentity</name>
        <briefdescription>
<para>Return the identity quaternion, with real coefficient 1 and an imaginary coefficients all zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="103" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="103" bodyend="103"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_quath_1a25f6f98d5665ce9f8d361e453eb7e7ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(const GfQuath &amp;q)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="165" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_quath_1a4efb702fd0410de469dc9eac680623ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator+</definition>
        <argsstring>(const GfQuath &amp;q1, const GfQuath &amp;q2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q2</declname>
        </param>
        <briefdescription>
<para>Component-wise binary sum operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="221" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_quath_1a92e487880f725e9e669db411337ea20b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator -</definition>
        <argsstring>(const GfQuath &amp;q1, const GfQuath &amp;q2)</argsstring>
        <name>operator -</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q2</declname>
        </param>
        <briefdescription>
<para>Component-wise binary difference operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="227" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_quath_1a129a0666795ba3122070d6e92bb7a642" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator *</definition>
        <argsstring>(const GfQuath &amp;q1, const GfQuath &amp;q2)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q2</declname>
        </param>
        <briefdescription>
<para>Returns the product of quaternions <computeroutput>q1</computeroutput> and <computeroutput>q2</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="233" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_quath_1a37122bd2850d3f16815a07c8b618e0e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator *</definition>
        <argsstring>(const GfQuath &amp;q, GfHalf s)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Returns the product of quaternion <computeroutput>q</computeroutput> and scalar <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="239" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_quath_1a00ba39ae72eed87ee100988b1b1127c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator *</definition>
        <argsstring>(GfHalf s, const GfQuath &amp;q)</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Returns the product of quaternion <computeroutput>q</computeroutput> and scalar <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="245" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="245" bodyend="247"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_quath_1a28a7b1619b2c94987ca965585de9a024" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_quath" kindref="compound">GfQuath</ref></type>
        <definition>GfQuath operator/</definition>
        <argsstring>(const GfQuath &amp;q, GfHalf s)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="class_gf_quath" kindref="compound">GfQuath</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Returns the product of quaternion <computeroutput>q</computeroutput> and scalar 1 / <computeroutput>s</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="251" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="251" bodyend="253"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_gf_quath_1ac9e7b6b5b1f9a21e413cbc861d9a168f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf _GetLengthSquared</definition>
        <argsstring>() const</argsstring>
        <name>_GetLengthSquared</name>
        <briefdescription>
<para>Returns the square of the length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/quath.h" line="264" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="264" bodyend="266"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type: a quaternion, a complex number with a real coefficient and three imaginary coefficients, stored as a 3-vector. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/gf/quath.h" line="61" column="1" bodyfile="pxr/base/gf/quath.h" bodystart="60" bodyend="267"/>
    <listofallmembers>
      <member refid="class_gf_quath_1ac9e7b6b5b1f9a21e413cbc861d9a168f" prot="private" virt="non-virtual"><scope>GfQuath</scope><name>_GetLengthSquared</name></member>
      <member refid="class_gf_quath_1a46f4c5e87cb18c7ffd601806dc56e0af" prot="private" virt="non-virtual"><scope>GfQuath</scope><name>_imaginary</name></member>
      <member refid="class_gf_quath_1aa8bc2132edb71eac9a59cb81fd5b79ec" prot="private" virt="non-virtual"><scope>GfQuath</scope><name>_real</name></member>
      <member refid="class_gf_quath_1a81843f536e794ed2498cb00dfbe887f5" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetConjugate</name></member>
      <member refid="class_gf_quath_1aff838fa48f3e85c6d01fbe454afd511e" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetIdentity</name></member>
      <member refid="class_gf_quath_1abf669fd2f72840dee6ea2490fe65b8f5" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetImaginary</name></member>
      <member refid="class_gf_quath_1a4af71ba089a8400a722360d45ebfa55f" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetInverse</name></member>
      <member refid="class_gf_quath_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetLength</name></member>
      <member refid="class_gf_quath_1ac0c90c9ca052b3dda0face648a7a3b7e" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetNormalized</name></member>
      <member refid="class_gf_quath_1a2798ddf8e14a6e3181ae1f0ae474931b" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetReal</name></member>
      <member refid="class_gf_quath_1ae6684d3f6a43beb37cd1fdffb6a03bec" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GetZero</name></member>
      <member refid="class_gf_quath_1a6e700c33532908e6a0d04ae23dc1cc80" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GfQuath</name></member>
      <member refid="class_gf_quath_1aee12f2564ebae3e9bc702a411751c169" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GfQuath</name></member>
      <member refid="class_gf_quath_1a00606884fd7aeda8c987124d3e28f1d3" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GfQuath</name></member>
      <member refid="class_gf_quath_1adbc3ea6541fbeb99972bcd98537d5938" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GfQuath</name></member>
      <member refid="class_gf_quath_1ab5a269512b553aaa8d3c6ba612ab79b0" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GfQuath</name></member>
      <member refid="class_gf_quath_1ad7f2962ee85ccc87093d308f15ac55ce" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>GfQuath</name></member>
      <member refid="class_gf_quath_1a25f6f98d5665ce9f8d361e453eb7e7ba" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>hash_value</name></member>
      <member refid="class_gf_quath_1afe842a033d8787acf7dcc78fdf3a1bb6" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>ImaginaryType</name></member>
      <member refid="class_gf_quath_1a2d91b3e1498ecf61cebc32b52f4ada90" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>Normalize</name></member>
      <member refid="class_gf_quath_1a129a0666795ba3122070d6e92bb7a642" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator *</name></member>
      <member refid="class_gf_quath_1a37122bd2850d3f16815a07c8b618e0e7" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator *</name></member>
      <member refid="class_gf_quath_1a00ba39ae72eed87ee100988b1b1127c1" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator *</name></member>
      <member refid="class_gf_quath_1ab9b7ab3ee8f26501bf602ee233816c93" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator *=</name></member>
      <member refid="class_gf_quath_1aaca2da243c8b0cc2927f8ac9ccd62d1f" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator *=</name></member>
      <member refid="class_gf_quath_1a92e487880f725e9e669db411337ea20b" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator -</name></member>
      <member refid="class_gf_quath_1af048280787416cc8b5ebc41f5e647f29" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator -=</name></member>
      <member refid="class_gf_quath_1ac5c36b73fa4d11bdece69bf60d910a8e" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator!=</name></member>
      <member refid="class_gf_quath_1a4efb702fd0410de469dc9eac680623ff" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator+</name></member>
      <member refid="class_gf_quath_1a1ff4b26bae025e1fd206d54afc398de4" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator+=</name></member>
      <member refid="class_gf_quath_1a1fa858d31b9ddc00d54013425d466d48" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator-</name></member>
      <member refid="class_gf_quath_1a28a7b1619b2c94987ca965585de9a024" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator/</name></member>
      <member refid="class_gf_quath_1abfd66b9f5ad8a78affbf6f42f3aa0272" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator/=</name></member>
      <member refid="class_gf_quath_1aa458291ac5522d1f19edde83a99afd31" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>operator==</name></member>
      <member refid="class_gf_quath_1a512284adad2afc1cb29997cf585d965d" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>ScalarType</name></member>
      <member refid="class_gf_quath_1a183bc4d8b8b5a1ae02c7f5c82ebdd34b" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>SetImaginary</name></member>
      <member refid="class_gf_quath_1adea7c29de73eed83736b1510803c8d48" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>SetImaginary</name></member>
      <member refid="class_gf_quath_1a8d2d5151afba20454ed7e2320563e457" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>SetReal</name></member>
      <member refid="class_gf_quath_1ad65c651e6b15a39876051a3343f77485" prot="public" virt="non-virtual"><scope>GfQuath</scope><name>Transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
