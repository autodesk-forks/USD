<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_layer_1_1_detached_layer_rules" kind="class" language="C++" prot="public">
    <compoundname>SdfLayer::DetachedLayerRules</compoundname>
    <includes refid="layer_8h" local="no">layer.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_sdf_layer_1_1_detached_layer_rules_1abf3bfd2eec262c2ade68d1f5f1db2488" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SdfLayer</definition>
        <argsstring></argsstring>
        <name>SdfLayer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1299" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sdf_layer_1_1_detached_layer_rules_1af696ed4ca1fccaf46e12cfed39c1bfc3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; _include</definition>
        <argsstring></argsstring>
        <name>_include</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1301" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_layer_1_1_detached_layer_rules_1ab9897620af4d95272329b94c10313cd9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; _exclude</definition>
        <argsstring></argsstring>
        <name>_exclude</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1302" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_layer_1_1_detached_layer_rules_1a0ff96a05bd282ba1ff3b208436cf9063" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _includeAll</definition>
        <argsstring></argsstring>
        <name>_includeAll</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1303" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1303" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1a2684d71db373a5d7f41f41130042e667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DetachedLayerRules</definition>
        <argsstring>()=default</argsstring>
        <name>DetachedLayerRules</name>
        <briefdescription>
<para>A default constructed rules object Excludes all layers from the detached layer set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1264" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1a5a18ecf73887ae3e0074c1d05dc34737" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_layer_1_1_detached_layer_rules" kindref="compound">DetachedLayerRules</ref> &amp;</type>
        <definition>DetachedLayerRules&amp; IncludeAll</definition>
        <argsstring>()</argsstring>
        <name>IncludeAll</name>
        <briefdescription>
<para>Include all layers in the detached layer set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1267" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1267" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1a4bbe6379de0eaf5e4cd67138ad581662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_layer_1_1_detached_layer_rules" kindref="compound">DetachedLayerRules</ref> &amp;</type>
        <definition>SDF_API DetachedLayerRules&amp; Include</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;patterns)</argsstring>
        <name>Include</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>patterns</declname>
        </param>
        <briefdescription>
<para>Include layers whose identifiers contain any of the strings in <computeroutput>patterns</computeroutput> in the detached layer set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1aa5f4f78ccabd6144b4d4a68e1650ff73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_layer_1_1_detached_layer_rules" kindref="compound">DetachedLayerRules</ref> &amp;</type>
        <definition>SDF_API DetachedLayerRules&amp; Exclude</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;patterns)</argsstring>
        <name>Exclude</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>patterns</declname>
        </param>
        <briefdescription>
<para>Exclude layers whose identifiers contain any of the strings in <computeroutput>patterns</computeroutput> from the detached layer set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1a4352541028201aa650507c359dbbc61a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IncludedAll</definition>
        <argsstring>() const</argsstring>
        <name>IncludedAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1284" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1284" bodyend="1284"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1a8b989895dd19ef21f9bd7da03dc8d5d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt;std::string&gt;&amp; GetIncluded</definition>
        <argsstring>() const</argsstring>
        <name>GetIncluded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1285" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1285" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1a08f2652c9b66b6980e15192113a951e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt;std::string&gt;&amp; GetExcluded</definition>
        <argsstring>() const</argsstring>
        <name>GetExcluded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1286" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1286" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_layer_1_1_detached_layer_rules_1aac37ac79e5e9b2bb8e79b730cdf296c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool IsIncluded</definition>
        <argsstring>(const std::string &amp;identifier) const</argsstring>
        <name>IsIncluded</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>identifier</computeroutput> is included in the detached layer set, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>identifier</computeroutput> is included if it matches an include pattern (or the mask includes all identifiers) and it does not match any of the exclude patterns. Anonymous layer identifiers are always excluded from the mask. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/layer.h" line="1296" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Object used to specify detached layers. </para>
    </briefdescription>
    <detaileddescription>
<para>Layers may be included or excluded from the detached layer set by specifying simple substring patterns for layer identifiers. For example, the following will include all layers in the detached layer set, except for those whose identifiers contain the substring &quot;sim&quot; or &quot;geom&quot;:</para>
<para><programlisting><codeline><highlight class="normal">SdfLayer::SetDetachedLayerRules(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SdfLayer::DetachedLayerRules()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.IncludeAll();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Exclude({&quot;sim&quot;,<sp/>&quot;geom&quot;})</highlight></codeline>
<codeline><highlight class="normal">);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pxr/usd/sdf/layer.h" line="1260" column="1" bodyfile="pxr/usd/sdf/layer.h" bodystart="1259" bodyend="1304"/>
    <listofallmembers>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1ab9897620af4d95272329b94c10313cd9" prot="private" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>_exclude</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1af696ed4ca1fccaf46e12cfed39c1bfc3" prot="private" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>_include</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a0ff96a05bd282ba1ff3b208436cf9063" prot="private" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>_includeAll</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a2684d71db373a5d7f41f41130042e667" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>DetachedLayerRules</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1aa5f4f78ccabd6144b4d4a68e1650ff73" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>Exclude</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a08f2652c9b66b6980e15192113a951e0" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>GetExcluded</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a8b989895dd19ef21f9bd7da03dc8d5d9" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>GetIncluded</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a4bbe6379de0eaf5e4cd67138ad581662" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>Include</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a5a18ecf73887ae3e0074c1d05dc34737" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>IncludeAll</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1a4352541028201aa650507c359dbbc61a" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>IncludedAll</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1aac37ac79e5e9b2bb8e79b730cdf296c5" prot="public" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>IsIncluded</name></member>
      <member refid="class_sdf_layer_1_1_detached_layer_rules_1abf3bfd2eec262c2ade68d1f5f1db2488" prot="private" virt="non-virtual"><scope>SdfLayer::DetachedLayerRules</scope><name>SdfLayer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
