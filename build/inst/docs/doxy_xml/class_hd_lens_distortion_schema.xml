<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_lens_distortion_schema" kind="class" language="C++" prot="public">
    <compoundname>HdLensDistortionSchema</compoundname>
    <basecompoundref refid="class_hd_schema" prot="public" virt="non-virtual">HdSchema</basecompoundref>
    <innerclass refid="class_hd_lens_distortion_schema_1_1_builder" prot="public">HdLensDistortionSchema::Builder</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a24afc38ce0b1f5d6cbd27ae15b7bb8bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdLensDistortionSchema</definition>
        <argsstring>(HdContainerDataSourceHandle container)</argsstring>
        <name>HdLensDistortionSchema</name>
        <param>
          <type>HdContainerDataSourceHandle</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="63" column="1" bodyfile="pxr/imaging/hd/lensDistortionSchema.h" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a8045923128f29ef6c47986c8cedbddcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdTokenDataSourceHandle</type>
        <definition>HD_API HdTokenDataSourceHandle GetType</definition>
        <argsstring>()</argsstring>
        <name>GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a050b1924c86dfb2520c710d8d47dce6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdFloatDataSourceHandle</type>
        <definition>HD_API HdFloatDataSourceHandle GetK1</definition>
        <argsstring>()</argsstring>
        <name>GetK1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a226230a13ffc790eae88984fae45255f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdFloatDataSourceHandle</type>
        <definition>HD_API HdFloatDataSourceHandle GetK2</definition>
        <argsstring>()</argsstring>
        <name>GetK2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a38be298afdd1e45312187f0025d593a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdVec2fDataSourceHandle</type>
        <definition>HD_API HdVec2fDataSourceHandle GetCenter</definition>
        <argsstring>()</argsstring>
        <name>GetCenter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a8e0c9f36bda244cdcceae52b8187b3ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdFloatDataSourceHandle</type>
        <definition>HD_API HdFloatDataSourceHandle GetAnaSq</definition>
        <argsstring>()</argsstring>
        <name>GetAnaSq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a07087f2010f8d665acd3f0b24acf0d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdVec2fDataSourceHandle</type>
        <definition>HD_API HdVec2fDataSourceHandle GetAsym</definition>
        <argsstring>()</argsstring>
        <name>GetAsym</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a8bb61c7ce32e831fd77320966aa07b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdFloatDataSourceHandle</type>
        <definition>HD_API HdFloatDataSourceHandle GetScale</definition>
        <argsstring>()</argsstring>
        <name>GetScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a1bf5e3a9bc2155041b4fa15837ff7c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdFloatDataSourceHandle</type>
        <definition>HD_API HdFloatDataSourceHandle GetIor</definition>
        <argsstring>()</argsstring>
        <name>GetIor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a4624f8953011476959c8b74d1d4da0da" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdContainerDataSourceHandle</type>
        <definition>static HD_API HdContainerDataSourceHandle BuildRetained</definition>
        <argsstring>(const HdTokenDataSourceHandle &amp;type, const HdFloatDataSourceHandle &amp;k1, const HdFloatDataSourceHandle &amp;k2, const HdVec2fDataSourceHandle &amp;center, const HdFloatDataSourceHandle &amp;anaSq, const HdVec2fDataSourceHandle &amp;asym, const HdFloatDataSourceHandle &amp;scale, const HdFloatDataSourceHandle &amp;ior)</argsstring>
        <name>BuildRetained</name>
        <param>
          <type>const HdTokenDataSourceHandle &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const HdFloatDataSourceHandle &amp;</type>
          <declname>k1</declname>
        </param>
        <param>
          <type>const HdFloatDataSourceHandle &amp;</type>
          <declname>k2</declname>
        </param>
        <param>
          <type>const HdVec2fDataSourceHandle &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>const HdFloatDataSourceHandle &amp;</type>
          <declname>anaSq</declname>
        </param>
        <param>
          <type>const HdVec2fDataSourceHandle &amp;</type>
          <declname>asym</declname>
        </param>
        <param>
          <type>const HdFloatDataSourceHandle &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const HdFloatDataSourceHandle &amp;</type>
          <declname>ior</declname>
        </param>
        <briefdescription>
<para>Builds a container data source which includes the provided child data sources. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters with nullptr values are excluded. This is a low-level interface. For cases in which it&apos;s desired to define the container with a sparse set of child fields, the <ref refid="class_hd_lens_distortion_schema_1_1_builder" kindref="compound">Builder</ref> class is often more convenient and readable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a6ae42e58bda5cdfb337518ad625649f7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdLensDistortionSchema</type>
        <definition>static HD_API HdLensDistortionSchema GetFromParent</definition>
        <argsstring>(const HdContainerDataSourceHandle &amp;fromParentContainer)</argsstring>
        <name>GetFromParent</name>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>fromParentContainer</declname>
        </param>
        <briefdescription>
<para>Retrieves a container data source with the schema&apos;s default name token &quot;lensDistortion&quot; from the parent container and constructs a HdLensDistortionSchema instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Because the requested container data source may not exist, the result should be checked with IsDefined() or a bool comparison before use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a13f863d37918c123e3613f6972f77a91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>static HD_API const TfToken&amp; GetSchemaToken</definition>
        <argsstring>()</argsstring>
        <name>GetSchemaToken</name>
        <briefdescription>
<para>Returns a token where the container representing this schema is found in a container by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a7822253290cf5a0af0fd50787fc38f54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetDefaultLocator</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the container representing this schema is found by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_lens_distortion_schema_1a633f3fb28e897c083bb0f73c1e55312d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdTokenDataSourceHandle</type>
        <definition>static HD_API HdTokenDataSourceHandle BuildTypeDataSource</definition>
        <argsstring>(const TfToken &amp;type)</argsstring>
        <name>BuildTypeDataSource</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns token data source for use as type value. </para>
        </briefdescription>
        <detaileddescription>
<para>Values of...<itemizedlist>
<listitem><para>HdLensDistortionSchemaTokens-&gt;standard</para>
</listitem><listitem><para>HdLensDistortionSchemaTokens-&gt;fisheye ...will be stored statically and reused for future calls. </para>
</listitem></itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/lensDistortionSchema.h" line="179" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2153">
        <label>HdSchema</label>
        <link refid="class_hd_schema"/>
      </node>
      <node id="2152">
        <label>HdLensDistortionSchema</label>
        <childnode refid="2153" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2155">
        <label>HdSchema</label>
        <link refid="class_hd_schema"/>
      </node>
      <node id="2154">
        <label>HdLensDistortionSchema</label>
        <childnode refid="2155" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/lensDistortionSchema.h" line="61" column="1" bodyfile="pxr/imaging/hd/lensDistortionSchema.h" bodystart="60" bodyend="182"/>
    <listofallmembers>
      <member refid="class_hd_schema_1a0199d1b612f9eace744ec93edce137f4" prot="protected" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>_container</name></member>
      <member refid="class_hd_schema_1a0b7d9bdabb5f9beed73770bbbbd7e8ed" prot="protected" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>_GetTypedDataSource</name></member>
      <member refid="class_hd_lens_distortion_schema_1a4624f8953011476959c8b74d1d4da0da" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>BuildRetained</name></member>
      <member refid="class_hd_lens_distortion_schema_1a633f3fb28e897c083bb0f73c1e55312d" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>BuildTypeDataSource</name></member>
      <member refid="class_hd_lens_distortion_schema_1a8e0c9f36bda244cdcceae52b8187b3ba" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetAnaSq</name></member>
      <member refid="class_hd_lens_distortion_schema_1a07087f2010f8d665acd3f0b24acf0d9d" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetAsym</name></member>
      <member refid="class_hd_lens_distortion_schema_1a38be298afdd1e45312187f0025d593a6" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetCenter</name></member>
      <member refid="class_hd_schema_1abe3b2a98314ce888136534588e4fb990" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetContainer</name></member>
      <member refid="class_hd_lens_distortion_schema_1a7822253290cf5a0af0fd50787fc38f54" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetDefaultLocator</name></member>
      <member refid="class_hd_lens_distortion_schema_1a6ae42e58bda5cdfb337518ad625649f7" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetFromParent</name></member>
      <member refid="class_hd_lens_distortion_schema_1a1bf5e3a9bc2155041b4fa15837ff7c7c" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetIor</name></member>
      <member refid="class_hd_lens_distortion_schema_1a050b1924c86dfb2520c710d8d47dce6c" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetK1</name></member>
      <member refid="class_hd_lens_distortion_schema_1a226230a13ffc790eae88984fae45255f" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetK2</name></member>
      <member refid="class_hd_lens_distortion_schema_1a8bb61c7ce32e831fd77320966aa07b80" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetScale</name></member>
      <member refid="class_hd_lens_distortion_schema_1a13f863d37918c123e3613f6972f77a91" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetSchemaToken</name></member>
      <member refid="class_hd_lens_distortion_schema_1a8045923128f29ef6c47986c8cedbddcf" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>GetType</name></member>
      <member refid="class_hd_lens_distortion_schema_1a24afc38ce0b1f5d6cbd27ae15b7bb8bd" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>HdLensDistortionSchema</name></member>
      <member refid="class_hd_schema_1a996c4a7891229be6cfec0c8915db550b" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>HdSchema</name></member>
      <member refid="class_hd_schema_1a39d97ef359ad169d83a9056229dd7d92" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>IsDefined</name></member>
      <member refid="class_hd_schema_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>HdLensDistortionSchema</scope><name>operator bool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
