<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_prim_spec" kind="class" language="C++" prot="public">
    <compoundname>SdfPrimSpec</compoundname>
    <basecompoundref refid="class_sdf_spec" prot="public" virt="non-virtual">SdfSpec</basecompoundref>
    <derivedcompoundref refid="class_sdf_pseudo_root_spec" prot="public" virt="non-virtual">SdfPseudoRootSpec</derivedcompoundref>
    <includes refid="prim_spec_8h" local="no">primSpec.h</includes>
      <sectiondef kind="user-defined">
      <header>Spec creation</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a3f62dadcfac6417147c5267d3b3df1d6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>static SDF_API SdfPrimSpecHandle New</definition>
        <argsstring>(const SdfLayerHandle &amp;parentLayer, const std::string &amp;name, SdfSpecifier spec, const std::string &amp;typeName=std::string())</argsstring>
        <name>New</name>
        <param>
          <type>const SdfLayerHandle &amp;</type>
          <declname>parentLayer</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>typeName</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
<para>Create a root prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a prim spec with a <computeroutput>name</computeroutput>, <computeroutput>specifier</computeroutput> and <computeroutput>typeName</computeroutput> as a root prim in the given layer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a65a4bc9d09b3adf0e338bd97b37e3a72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>static SDF_API SdfPrimSpecHandle New</definition>
        <argsstring>(const SdfPrimSpecHandle &amp;parentPrim, const std::string &amp;name, SdfSpecifier spec, const std::string &amp;typeName=std::string())</argsstring>
        <name>New</name>
        <param>
          <type>const SdfPrimSpecHandle &amp;</type>
          <declname>parentPrim</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>typeName</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
<para>Create a prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>Creates a prim spec with a <computeroutput>name</computeroutput>, <computeroutput>specifier</computeroutput> and <computeroutput>typeName</computeroutput> as a namespace child of the given prim.</para>
<para><simplesect kind="see"><para><ref refid="prim_spec_8h_1a930dfe5b3e742f4e8b057ceb1ec09cd9" kindref="member">SdfCreatePrimInLayer()</ref> to create a PrimSpec with all required ancestor specs as SdfSpecifierOver. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Name</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1aaf39d3b7953761651981a821ce934211" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>static SDF_API bool IsValidName</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>IsValidName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if the given string is a valid prim name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a204344d110d2bb74928f43d2c1fe0047" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API const std::string &amp;</type>
        <definition>SDF_API const std::string&amp; GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the prim&apos;s name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a320078c8c86baa76a237c2233d55a730" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>SDF_API TfToken GetNameToken</definition>
        <argsstring>() const</argsstring>
        <name>GetNameToken</name>
        <briefdescription>
<para>Returns the prim&apos;s name, as a token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a8d3b6e7e600320a58351d2f74554a94c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool CanSetName</definition>
        <argsstring>(const std::string &amp;newName, std::string *whyNot) const</argsstring>
        <name>CanSetName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>newName</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>whyNot</declname>
        </param>
        <briefdescription>
<para>Returns true if setting the prim spec&apos;s name to <computeroutput>newName</computeroutput> will succeed. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns false if it won&apos;t, and sets <computeroutput>whyNot</computeroutput> with a string describing why not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aa1f241d28f26488867a276eca6d54405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool SetName</definition>
        <argsstring>(const std::string &amp;newName, bool validate=true)</argsstring>
        <name>SetName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>newName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Sets the prim&apos;s name. </para>
        </briefdescription>
        <detaileddescription>
<para>Children prims must be unique by name. It is an error to set the name to the same name as an existing child of this prim&apos;s parent.</para>
<para>Setting validate to false, will skip validation of the <computeroutput>newName</computeroutput> (that is, CanSetName will not be called).</para>
<para>Returns true if successful, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Namespace hierarchy</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a47aa0e00415f1058634b714d1e430d9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>SDF_API SdfPrimSpecHandle GetNameRoot</definition>
        <argsstring>() const</argsstring>
        <name>GetNameRoot</name>
        <briefdescription>
<para>Returns the prim&apos;s namespace pseudo-root prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a3bf6b9e0eea4388d894d140ba88d003f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>SDF_API SdfPrimSpecHandle GetNameParent</definition>
        <argsstring>() const</argsstring>
        <name>GetNameParent</name>
        <briefdescription>
<para>Returns the prim&apos;s namespace parent. </para>
        </briefdescription>
        <detaileddescription>
<para>This does not return the pseudo-root for root prims. Most algorithms that scan the namespace hierarchy upwards don&apos;t want to process the pseudo-root the same way as actual prims. Algorithms that do can always call <computeroutput><ref refid="class_sdf_prim_spec_1a91bfcb2bb51bcc557059b67c99ff1ab3" kindref="member">GetRealNameParent()</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a91bfcb2bb51bcc557059b67c99ff1ab3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>SDF_API SdfPrimSpecHandle GetRealNameParent</definition>
        <argsstring>() const</argsstring>
        <name>GetRealNameParent</name>
        <briefdescription>
<para>Returns the prim&apos;s namespace parent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ad66b5eac156110ca576d90e40a37d740" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_children_view" kindref="compound">NameChildrenView</ref></type>
        <definition>SDF_API NameChildrenView GetNameChildren</definition>
        <argsstring>() const</argsstring>
        <name>GetNameChildren</name>
        <briefdescription>
<para>Returns a keyed vector view of the prim&apos;s namespace children. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a863df355db6d3445cefaf9aeacac14f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetNameChildren</definition>
        <argsstring>(const SdfPrimSpecHandleVector &amp;)</argsstring>
        <name>SetNameChildren</name>
        <param>
          <type>const SdfPrimSpecHandleVector &amp;</type>
        </param>
        <briefdescription>
<para>Updates nameChildren to match the given vector of prims. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a967784274eb761e4074c6f8f2d12bbb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool InsertNameChild</definition>
        <argsstring>(const SdfPrimSpecHandle &amp;child, int index=-1)</argsstring>
        <name>InsertNameChild</name>
        <param>
          <type>const SdfPrimSpecHandle &amp;</type>
          <declname>child</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Inserts a child. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>index</computeroutput> is ignored except for range checking; -1 is permitted.</para>
<para>Returns true if successful, false if failed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a16ea103f106fc15250ae7f5e8777e849" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool RemoveNameChild</definition>
        <argsstring>(const SdfPrimSpecHandle &amp;child)</argsstring>
        <name>RemoveNameChild</name>
        <param>
          <type>const SdfPrimSpecHandle &amp;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
<para>Removes the child. Returns true if successful, false if failed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a4cd96e2436f94bcd9164d68009d4c643" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_proxy" kindref="compound">SdfNameChildrenOrderProxy</ref></type>
        <definition>SDF_API SdfNameChildrenOrderProxy GetNameChildrenOrder</definition>
        <argsstring>() const</argsstring>
        <name>GetNameChildrenOrder</name>
        <briefdescription>
<para>Returns the list of child names for this prim&apos;s reorder. </para>
        </briefdescription>
        <detaileddescription>
<para>nameChildren statement.</para>
<para>See <ref refid="class_sdf_prim_spec_1a075d97cf9dbaf781b86e52a6d6643248" kindref="member">SetNameChildrenOrder()</ref> for more info. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1adb6d45b960d1f908db1f25f15851880e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasNameChildrenOrder</definition>
        <argsstring>() const</argsstring>
        <name>HasNameChildrenOrder</name>
        <briefdescription>
<para>Returns true if this prim has name children order specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a075d97cf9dbaf781b86e52a6d6643248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetNameChildrenOrder</definition>
        <argsstring>(const std::vector&lt; TfToken &gt; &amp;names)</argsstring>
        <name>SetNameChildrenOrder</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
<para>Given a list of (possibly sparse) child names, authors a reorder nameChildren statement for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The reorder statement can modify the order of name children during composition. This order doesn&apos;t affect <ref refid="class_sdf_prim_spec_1ad66b5eac156110ca576d90e40a37d740" kindref="member">GetNameChildren()</ref>, <ref refid="class_sdf_prim_spec_1a967784274eb761e4074c6f8f2d12bbb5" kindref="member">InsertNameChild()</ref>, <ref refid="class_sdf_prim_spec_1a863df355db6d3445cefaf9aeacac14f7" kindref="member">SetNameChildren()</ref>, et al. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ac8259a5c7fa384112d767b3263a333b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void InsertInNameChildrenOrder</definition>
        <argsstring>(const TfToken &amp;name, int index=-1)</argsstring>
        <name>InsertInNameChildrenOrder</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Adds a new name child <computeroutput>name</computeroutput> in the name children order. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>index</computeroutput> is -1, the name is inserted at the end. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="211" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a7043fc74d15548fe472194cce1b23916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveFromNameChildrenOrder</definition>
        <argsstring>(const TfToken &amp;name)</argsstring>
        <name>RemoveFromNameChildrenOrder</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes a name child name from the name children order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ab41f9b86a615fd6a2ef218285fd90fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveFromNameChildrenOrderByIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>RemoveFromNameChildrenOrderByIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a name child name from the name children order by index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a6bf438fae54d0b5cf2f50a6a8d111975" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ApplyNameChildrenOrder</definition>
        <argsstring>(std::vector&lt; TfToken &gt; *vec) const</argsstring>
        <name>ApplyNameChildrenOrder</name>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Reorders the given list of child names according to the reorder nameChildren statement for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine employs the standard list editing operation for ordered items in a ListEditor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="227" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Properties</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a861b43ad798a853510376fe35ac2ac87" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_children_view" kindref="compound">PropertySpecView</ref></type>
        <definition>SDF_API PropertySpecView GetProperties</definition>
        <argsstring>() const</argsstring>
        <name>GetProperties</name>
        <briefdescription>
<para>Returns the prim&apos;s properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aaaf5de5dc16e39f6c490e6a7468ccca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetProperties</definition>
        <argsstring>(const SdfPropertySpecHandleVector &amp;)</argsstring>
        <name>SetProperties</name>
        <param>
          <type>const SdfPropertySpecHandleVector &amp;</type>
        </param>
        <briefdescription>
<para>Updates properties to match the given vector of properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a23cf7d2cffe392e9bfce504d0038d94e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool InsertProperty</definition>
        <argsstring>(const SdfPropertySpecHandle &amp;property, int index=-1)</argsstring>
        <name>InsertProperty</name>
        <param>
          <type>const SdfPropertySpecHandle &amp;</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Inserts a property. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>index</computeroutput> is ignored except for range checking; -1 is permitted.</para>
<para>Returns true if successful, false if failed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aeb2dcaf19bf51b7dccda4d0bae2f5088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveProperty</definition>
        <argsstring>(const SdfPropertySpecHandle &amp;property)</argsstring>
        <name>RemoveProperty</name>
        <param>
          <type>const SdfPropertySpecHandle &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Removes the property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a6b7fff6a55224630c14ba5cd87ade35e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_children_view" kindref="compound">AttributeSpecView</ref></type>
        <definition>SDF_API AttributeSpecView GetAttributes</definition>
        <argsstring>() const</argsstring>
        <name>GetAttributes</name>
        <briefdescription>
<para>Returns a view of the attributes of this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a8044f9041dfafdeba8998c0faf89e6bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_children_view" kindref="compound">RelationshipSpecView</ref></type>
        <definition>SDF_API RelationshipSpecView GetRelationships</definition>
        <argsstring>() const</argsstring>
        <name>GetRelationships</name>
        <briefdescription>
<para>Returns a view of the relationships of this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a9cdb8321a85e0a455306289e4d38b488" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_proxy" kindref="compound">SdfPropertyOrderProxy</ref></type>
        <definition>SDF_API SdfPropertyOrderProxy GetPropertyOrder</definition>
        <argsstring>() const</argsstring>
        <name>GetPropertyOrder</name>
        <briefdescription>
<para>Returns the list of property names for this prim&apos;s reorder properties statement. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_sdf_prim_spec_1ae4dc2817b7cbeb144bae0c5790982586" kindref="member">SetPropertyOrder()</ref> for more info. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aaf236624368b29310b0403a9c791f7e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasPropertyOrder</definition>
        <argsstring>() const</argsstring>
        <name>HasPropertyOrder</name>
        <briefdescription>
<para>Returns true if this prim has a property ordering specified. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ae4dc2817b7cbeb144bae0c5790982586" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetPropertyOrder</definition>
        <argsstring>(const std::vector&lt; TfToken &gt; &amp;names)</argsstring>
        <name>SetPropertyOrder</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; &amp;</type>
          <declname>names</declname>
        </param>
        <briefdescription>
<para>Given a list of (possibly sparse) property names, authors a reorder properties statement for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The reorder statement can modify the order of properties during composition. This order doesn&apos;t affect <ref refid="class_sdf_prim_spec_1a861b43ad798a853510376fe35ac2ac87" kindref="member">GetProperties()</ref>, <ref refid="class_sdf_prim_spec_1a23cf7d2cffe392e9bfce504d0038d94e" kindref="member">InsertProperty()</ref>, <ref refid="class_sdf_prim_spec_1aaaf5de5dc16e39f6c490e6a7468ccca7" kindref="member">SetProperties()</ref>, et al. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a5f242e404c7fd55c1cd8d6d225790842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void InsertInPropertyOrder</definition>
        <argsstring>(const TfToken &amp;name, int index=-1)</argsstring>
        <name>InsertInPropertyOrder</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Add a new property <computeroutput>name</computeroutput> in the property order. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>index</computeroutput> is -1, the name is inserted at the end. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a33f88def74ce8df58433ae2ed88edaef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveFromPropertyOrder</definition>
        <argsstring>(const TfToken &amp;name)</argsstring>
        <name>RemoveFromPropertyOrder</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove a property name from the property order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a4de80105398cd1b2ae4cf10945c325f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveFromPropertyOrderByIndex</definition>
        <argsstring>(int index)</argsstring>
        <name>RemoveFromPropertyOrderByIndex</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Remove a property name from the property order by index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a9f26d32c753a82018c9e42c167eac307" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ApplyPropertyOrder</definition>
        <argsstring>(std::vector&lt; TfToken &gt; *vec) const</argsstring>
        <name>ApplyPropertyOrder</name>
        <param>
          <type>std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; *</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Reorders the given list of property names according to the reorder properties statement for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>This routine employs the standard list editing operation for ordered items in a ListEditor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="300" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Lookup</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a5089c9ab8a6f017f42478cced843ed9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfSpecHandle</type>
        <definition>SDF_API SdfSpecHandle GetObjectAtPath</definition>
        <argsstring>(const SdfPath &amp;path) const</argsstring>
        <name>GetObjectAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns the object for the given <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>path</computeroutput> is relative then it will be interpreted as relative to this prim. If it is absolute then it will be interpreted as absolute in this prim&apos;s layer.</para>
<para>Returns invalid handle if there is no object at <computeroutput>path</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aac316794c73d357ce70f76a2685ba4ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPrimSpecHandle</type>
        <definition>SDF_API SdfPrimSpecHandle GetPrimAtPath</definition>
        <argsstring>(const SdfPath &amp;path) const</argsstring>
        <name>GetPrimAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns a prim given its <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns invalid handle if there is no prim at <computeroutput>path</computeroutput>. This is simply a more specifically typed version of GetObjectAtPath. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="321" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a99e14d808472bdd3ab56f688bc426ad1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfPropertySpecHandle</type>
        <definition>SDF_API SdfPropertySpecHandle GetPropertyAtPath</definition>
        <argsstring>(const SdfPath &amp;path) const</argsstring>
        <name>GetPropertyAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns a property given its <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns invalid handle if there is no property at <computeroutput>path</computeroutput>. This is simply a more specifically typed version of GetObjectAtPath. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1af1c5339316f766006e7560d048d8942d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfAttributeSpecHandle</type>
        <definition>SDF_API SdfAttributeSpecHandle GetAttributeAtPath</definition>
        <argsstring>(const SdfPath &amp;path) const</argsstring>
        <name>GetAttributeAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns an attribute given its <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns invalid handle if there is no attribute at <computeroutput>path</computeroutput>. This is simply a more specifically typed version of GetObjectAtPath. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1adbd32bec164f916fe95dc13744576402" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfRelationshipSpecHandle</type>
        <definition>SDF_API SdfRelationshipSpecHandle GetRelationshipAtPath</definition>
        <argsstring>(const SdfPath &amp;path) const</argsstring>
        <name>GetRelationshipAtPath</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Returns a relationship given its <computeroutput>path</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns invalid handle if there is no relationship at <computeroutput>path</computeroutput>. This is simply a more specifically typed version of GetObjectAtPath. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="342" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Metadata</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1acbdee8cae242dda2f7841b94d6d5df5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>SDF_API TfToken GetTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
<para>Returns the typeName of the prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The typeName should be meaningful to a higher level prim definition system.</para>
<para>The default value for typeName is the empty token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="355" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a3aca24b636ad7cb9ebc1046b1616660f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetTypeName</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>SetTypeName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the typeName of the model prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aa09e2580406e4e30598f2a316ef029b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetComment</definition>
        <argsstring>() const</argsstring>
        <name>GetComment</name>
        <briefdescription>
<para>Returns the comment string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for comment is "". </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a9d2550c83c8f19b23cf3485a75e16681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetComment</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>SetComment</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the comment string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a5f4c1bc9f2f793b24014551075d7cb6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetDocumentation</definition>
        <argsstring>() const</argsstring>
        <name>GetDocumentation</name>
        <briefdescription>
<para>Returns the documentation string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for documentation is "". </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a0df7b9ada95628ee04032e00e48e7417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetDocumentation</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>SetDocumentation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the documentation string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ac3a9e288b6b8bae8a8c68b7c519cefca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool GetActive</definition>
        <argsstring>() const</argsstring>
        <name>GetActive</name>
        <briefdescription>
<para>Returns whether this prim spec is active. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for active is true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a42b9a499c6433fe5525799bfd4ee3317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetActive</definition>
        <argsstring>(bool value)</argsstring>
        <name>SetActive</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets whether this prim spec is active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aff7a86ea6b7d711710485c43c49a8875" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasActive</definition>
        <argsstring>() const</argsstring>
        <name>HasActive</name>
        <briefdescription>
<para>Returns true if this prim spec has an opinion about active. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="393" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ae27afdaa2306ce34705b584cc8bcdce3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearActive</definition>
        <argsstring>()</argsstring>
        <name>ClearActive</name>
        <briefdescription>
<para>Removes the active opinion in this prim spec if there is one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="397" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a73b83447b66d61cd900b2e8c4f0868ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool GetHidden</definition>
        <argsstring>() const</argsstring>
        <name>GetHidden</name>
        <briefdescription>
<para>Returns whether this prim spec will be hidden in browsers. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for hidden is false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a33854bd790c06e0cc959b70a2511cfb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetHidden</definition>
        <argsstring>(bool value)</argsstring>
        <name>SetHidden</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets whether this prim spec will be hidden in browsers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="407" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a487d7c7f6aaba871e0ac8262dbd073af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>SDF_API TfToken GetKind</definition>
        <argsstring>() const</argsstring>
        <name>GetKind</name>
        <briefdescription>
<para>Returns this prim spec&apos;s kind. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for kind is an empty <computeroutput><ref refid="class_tf_token" kindref="compound">TfToken</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aeee2b294eb217e52cad48c962ee334c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetKind</definition>
        <argsstring>(const TfToken &amp;value)</argsstring>
        <name>SetKind</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets this prim spec&apos;s kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1afff9b6f7514d4ddadf5b07e1b043e9a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasKind</definition>
        <argsstring>() const</argsstring>
        <name>HasKind</name>
        <briefdescription>
<para>Returns true if this prim spec has an opinion about kind. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="421" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a5d6e42b7e9fc0250349f73fac4d94308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearKind</definition>
        <argsstring>()</argsstring>
        <name>ClearKind</name>
        <briefdescription>
<para>Remove the kind opinion from this prim spec if there is one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a5792f900b1a0fdb1314aa793af4e7df8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>SDF_API TfToken GetSymmetryFunction</definition>
        <argsstring>() const</argsstring>
        <name>GetSymmetryFunction</name>
        <briefdescription>
<para>Returns the symmetry function for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for symmetry function is an empty token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a490d4304afe7b9b0cd2cfc9ef05be93f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetSymmetryFunction</definition>
        <argsstring>(const TfToken &amp;functionName)</argsstring>
        <name>SetSymmetryFunction</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>functionName</declname>
        </param>
        <briefdescription>
<para>Sets the symmetry function for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>functionName</computeroutput> is an empty token, then this removes any symmetry function for the given prim. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a7b13ede56ab5ee26f285da2280167a31" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfDictionaryProxy</ref></type>
        <definition>SDF_API SdfDictionaryProxy GetSymmetryArguments</definition>
        <argsstring>() const</argsstring>
        <name>GetSymmetryArguments</name>
        <briefdescription>
<para>Returns the symmetry arguments for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for symmetry arguments is an empty dictionary. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="444" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a46e788e0e01bb8ff6d716d6dbcdc5e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetSymmetryArgument</definition>
        <argsstring>(const std::string &amp;name, const VtValue &amp;value)</argsstring>
        <name>SetSymmetryArgument</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a symmetry argument for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>value</computeroutput> is empty, then this removes the setting for the given symmetry argument <computeroutput>name</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="451" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1af72eac4916d1a00c08f27a4694835112" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetSymmetricPeer</definition>
        <argsstring>() const</argsstring>
        <name>GetSymmetricPeer</name>
        <briefdescription>
<para>Returns the symmetric peer for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for symmetric peer is an empty string. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="457" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1af11cd8834441d94496bf4cce983559d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetSymmetricPeer</definition>
        <argsstring>(const std::string &amp;peerName)</argsstring>
        <name>SetSymmetricPeer</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>peerName</declname>
        </param>
        <briefdescription>
<para>Sets a symmetric peer for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>peerName</computeroutput> is empty, then this removes the symmetric peer for this prim. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="464" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aa430e2e4657e7043764dae08dc7a4e4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetPrefix</definition>
        <argsstring>() const</argsstring>
        <name>GetPrefix</name>
        <briefdescription>
<para>Returns the prefix string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for prefix is &quot;&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a61b9d7858d930e1f8219ecfcfeaf193b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetPrefix</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>SetPrefix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the prefix string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ab0afe06c8843e972dff682c3f7868ac9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetSuffix</definition>
        <argsstring>() const</argsstring>
        <name>GetSuffix</name>
        <briefdescription>
<para>Returns the suffix string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for suffix is &quot;&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ab56b19de2727e437c05484300330b0c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetSuffix</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>SetSuffix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the suffix string for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="484" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ade086cf82f9dd9c876ee3fd194b6f1bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfDictionaryProxy</ref></type>
        <definition>SDF_API SdfDictionaryProxy GetCustomData</definition>
        <argsstring>() const</argsstring>
        <name>GetCustomData</name>
        <briefdescription>
<para>Returns the custom data for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for custom data is an empty dictionary.</para>
<para>Custom data is for use by plugins or other non-tools supplied extensions that need to be able to store data attached to arbitrary scene objects. Note that if the only objects you want to store data on are prims, using custom attributes is probably a better choice. But if you need to possibly store this data on attributes or relationships or as annotations on reference arcs, then custom data is an appropriate choice. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ad4760909f0cdc5d9ec133f0607ec72b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfDictionaryProxy</ref></type>
        <definition>SDF_API SdfDictionaryProxy GetAssetInfo</definition>
        <argsstring>() const</argsstring>
        <name>GetAssetInfo</name>
        <briefdescription>
<para>Returns the asset info dictionary for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value is an empty dictionary.</para>
<para>The asset info dictionary is used to annotate prims representing the root-prims of assets (generally organized as models) with various data related to asset management. For example, asset name, root layer identifier, asset version etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a99305c665e0c209304be5d7ad769e7e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetCustomData</definition>
        <argsstring>(const std::string &amp;name, const VtValue &amp;value)</argsstring>
        <name>SetCustomData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a custom data entry for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>value</computeroutput> is empty, then this removes the given custom data entry. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a3c2de13b36f263e83c5ec47f4b2f99ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetAssetInfo</definition>
        <argsstring>(const std::string &amp;name, const VtValue &amp;value)</argsstring>
        <name>SetAssetInfo</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a asset info entry for this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>value</computeroutput> is empty, then this removes the given asset info entry.</para>
<para><simplesect kind="see"><para><ref refid="class_sdf_prim_spec_1ad4760909f0cdc5d9ec133f0607ec72b7" kindref="member">GetAssetInfo()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a41866528f3540dadd0d471ba695b78df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
        <definition>SDF_API SdfSpecifier GetSpecifier</definition>
        <argsstring>() const</argsstring>
        <name>GetSpecifier</name>
        <briefdescription>
<para>Returns the spec specifier (def, over or class). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ac45758ee9813381b21e33e4e384d4f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetSpecifier</definition>
        <argsstring>(SdfSpecifier value)</argsstring>
        <name>SetSpecifier</name>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the spec specifier (def or over). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="533" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a5d9b89f530d37a530813620413217032" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="usd_2sdf_2types_8h_1ac344342016ac8137d2b63163bda14de0" kindref="member">SdfPermission</ref></type>
        <definition>SDF_API SdfPermission GetPermission</definition>
        <argsstring>() const</argsstring>
        <name>GetPermission</name>
        <briefdescription>
<para>Returns the prim&apos;s permission restriction. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for permission is SdfPermissionPublic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a8d4c331826b506be9dd6a3c92a4ef684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetPermission</definition>
        <argsstring>(SdfPermission value)</argsstring>
        <name>SetPermission</name>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1ac344342016ac8137d2b63163bda14de0" kindref="member">SdfPermission</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the prim&apos;s permission restriction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a129deef81265236916146cf4029a8a76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>SDF_API VtDictionary GetPrefixSubstitutions</definition>
        <argsstring>() const</argsstring>
        <name>GetPrefixSubstitutions</name>
        <briefdescription>
<para>Returns the prefixSubstitutions dictionary for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for prefixSubstitutions is an empty <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a6a214ee1b98161d2556207655da0d1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetPrefixSubstitutions</definition>
        <argsstring>(const VtDictionary &amp;prefixSubstitutions)</argsstring>
        <name>SetPrefixSubstitutions</name>
        <param>
          <type>const <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> &amp;</type>
          <declname>prefixSubstitutions</declname>
        </param>
        <briefdescription>
<para>Sets the <computeroutput>prefixSubstitutions</computeroutput> dictionary for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1afae2d460bc21f1be89244cabdb61ce8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>SDF_API VtDictionary GetSuffixSubstitutions</definition>
        <argsstring>() const</argsstring>
        <name>GetSuffixSubstitutions</name>
        <briefdescription>
<para>Returns the suffixSubstitutions dictionary for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
<para>The default value for suffixSubstitutions is an empty <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1af9d826a73c38e1dc5680a1969bedfaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetSuffixSubstitutions</definition>
        <argsstring>(const VtDictionary &amp;suffixSubstitutions)</argsstring>
        <name>SetSuffixSubstitutions</name>
        <param>
          <type>const <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> &amp;</type>
          <declname>suffixSubstitutions</declname>
        </param>
        <briefdescription>
<para>Sets the <computeroutput>suffixSubstitutions</computeroutput> dictionary for this prim spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a480003e9b19d88e2e959ec5a6c4620eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetInstanceable</definition>
        <argsstring>(bool instanceable)</argsstring>
        <name>SetInstanceable</name>
        <param>
          <type>bool</type>
          <declname>instanceable</declname>
        </param>
        <briefdescription>
<para>Sets the value for the prim&apos;s instanceable flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a901a3dca73d1f3a97f025d6652f76598" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool GetInstanceable</definition>
        <argsstring>() const</argsstring>
        <name>GetInstanceable</name>
        <briefdescription>
<para>Returns the value for the prim&apos;s instanceable flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a68eb0e617c67e2cda8410d480acb916f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasInstanceable</definition>
        <argsstring>() const</argsstring>
        <name>HasInstanceable</name>
        <briefdescription>
<para>Returns true if this prim spec has a value authored for its instanceable flag, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a756961262abb32c06695ea1bb4b6fc34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearInstanceable</definition>
        <argsstring>()</argsstring>
        <name>ClearInstanceable</name>
        <briefdescription>
<para>Clears the value for the prim&apos;s instanceable flag. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="580" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Payloads</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a0828b99d54da330ba8b7ac659f738725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_editor_proxy" kindref="compound">SdfPayloadsProxy</ref></type>
        <definition>SDF_API SdfPayloadsProxy GetPayloadList</definition>
        <argsstring>() const</argsstring>
        <name>GetPayloadList</name>
        <briefdescription>
<para>Returns a proxy for the prim&apos;s payloads. </para>
        </briefdescription>
        <detaileddescription>
<para>Payloads for this prim may be modified through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1adbdfd248280805e773d7653d8ac8a295" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasPayloads</definition>
        <argsstring>() const</argsstring>
        <name>HasPayloads</name>
        <briefdescription>
<para>Returns true if this prim has payloads set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a3e02d5333c71be6016e601097acdc39d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearPayloadList</definition>
        <argsstring>()</argsstring>
        <name>ClearPayloadList</name>
        <briefdescription>
<para>Clears the payloads for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="598" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Inherits</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1ab37fd1d2becbd4895780cef9358e8743" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_editor_proxy" kindref="compound">SdfInheritsProxy</ref></type>
        <definition>SDF_API SdfInheritsProxy GetInheritPathList</definition>
        <argsstring>() const</argsstring>
        <name>GetInheritPathList</name>
        <briefdescription>
<para>Returns a proxy for the prim&apos;s inherit paths. </para>
        </briefdescription>
        <detaileddescription>
<para>Inherit paths for this prim may be modified through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a1a76e2745e132db8f6c622033836e84a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasInheritPaths</definition>
        <argsstring>() const</argsstring>
        <name>HasInheritPaths</name>
        <briefdescription>
<para>Returns true if this prim has inherit paths set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="612" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a0c40d8311f0f8cca4cd18321ccd08def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearInheritPathList</definition>
        <argsstring>()</argsstring>
        <name>ClearInheritPathList</name>
        <briefdescription>
<para>Clears the inherit paths for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="616" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Specializes</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a2b424d6590d356a6a0a49a6297bfb5e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_editor_proxy" kindref="compound">SdfSpecializesProxy</ref></type>
        <definition>SDF_API SdfSpecializesProxy GetSpecializesList</definition>
        <argsstring>() const</argsstring>
        <name>GetSpecializesList</name>
        <briefdescription>
<para>Returns a proxy for the prim&apos;s specializes paths. </para>
        </briefdescription>
        <detaileddescription>
<para>Specializes for this prim may be modified through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1afede362813c13c81c8cee598efef3268" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasSpecializes</definition>
        <argsstring>() const</argsstring>
        <name>HasSpecializes</name>
        <briefdescription>
<para>Returns true if this prim has specializes set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="630" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a22c44def15d36de5258025c9ee60cfef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearSpecializesList</definition>
        <argsstring>()</argsstring>
        <name>ClearSpecializesList</name>
        <briefdescription>
<para>Clears the specializes for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="634" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>References</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a52fecb4bb8322078258269bf24c6625c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_editor_proxy" kindref="compound">SdfReferencesProxy</ref></type>
        <definition>SDF_API SdfReferencesProxy GetReferenceList</definition>
        <argsstring>() const</argsstring>
        <name>GetReferenceList</name>
        <briefdescription>
<para>Returns a proxy for the prim&apos;s references. </para>
        </briefdescription>
        <detaileddescription>
<para>References for this prim may be modified through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a17b5318c78f69d4e6fc6f6e2e99a685c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasReferences</definition>
        <argsstring>() const</argsstring>
        <name>HasReferences</name>
        <briefdescription>
<para>Returns true if this prim has references set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="648" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aa640114e83414da9b488983301403c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearReferenceList</definition>
        <argsstring>()</argsstring>
        <name>ClearReferenceList</name>
        <briefdescription>
<para>Clears the references for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="652" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Variants</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1ae683a0f28ce00eabd675df8c017857ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_list_editor_proxy" kindref="compound">SdfVariantSetNamesProxy</ref></type>
        <definition>SDF_API SdfVariantSetNamesProxy GetVariantSetNameList</definition>
        <argsstring>() const</argsstring>
        <name>GetVariantSetNameList</name>
        <briefdescription>
<para>Returns a proxy for the prim&apos;s variant sets. </para>
        </briefdescription>
        <detaileddescription>
<para>Variant sets for this prim may be modified through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="662" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a7bba6bd01b535b0b3741f0d9c5b42080" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasVariantSetNames</definition>
        <argsstring>() const</argsstring>
        <name>HasVariantSetNames</name>
        <briefdescription>
<para>Returns true if this prim has variant sets set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="666" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1aea1cc311e6f381f64a5e890b42a22f63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::vector&lt; std::string &gt;</type>
        <definition>SDF_API std::vector&lt;std::string&gt; GetVariantNames</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>GetVariantNames</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns list of variant names for the given variant set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1ad3268652b0a34e3faa085f3e3886fde8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSetsProxy</type>
        <definition>SDF_API SdfVariantSetsProxy GetVariantSets</definition>
        <argsstring>() const</argsstring>
        <name>GetVariantSets</name>
        <briefdescription>
<para>Returns the variant sets. </para>
        </briefdescription>
        <detaileddescription>
<para>The result maps variant set names to variant sets. Variant sets may be removed through the proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a8b578a561ceafc7c7cb32fbd4aa078f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveVariantSet</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>RemoveVariantSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes the variant set with the given <emphasis>name</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the set&apos;s name should probably also be removed from the variant set names list. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a6d894c8d3224cc70666bd913624e31a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfVariantSelectionProxy</ref></type>
        <definition>SDF_API SdfVariantSelectionProxy GetVariantSelections</definition>
        <argsstring>() const</argsstring>
        <name>GetVariantSelections</name>
        <briefdescription>
<para>Returns an editable map whose keys are variant set names and whose values are the variants selected for each set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a6cca40afd5d26f355f66002e3bbedd96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetVariantSelection</definition>
        <argsstring>(const std::string &amp;variantSetName, const std::string &amp;variantName)</argsstring>
        <name>SetVariantSelection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variantSetName</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>variantName</declname>
        </param>
        <briefdescription>
<para>Sets the variant selected for the given variant set. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>variantName</computeroutput> is empty, then this removes the variant selection opinion for the variant set <computeroutput>variantSetName</computeroutput>. To explicitly set the variant selection to be empty, use BlockVariantSelection instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="697" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a50efa0a1dd8546f1926841d72277b131" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void BlockVariantSelection</definition>
        <argsstring>(const std::string &amp;variantSetName)</argsstring>
        <name>BlockVariantSelection</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>variantSetName</declname>
        </param>
        <briefdescription>
<para>Blocks the variant selected for the given variant set by setting the variant selection to empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="703" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Relocates</header>
      <memberdef kind="function" id="class_sdf_prim_spec_1a0eebc34241eb811ca727c499e66ee7f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfRelocatesMapProxy</ref></type>
        <definition>SDF_API SdfRelocatesMapProxy GetRelocates</definition>
        <argsstring>() const</argsstring>
        <name>GetRelocates</name>
        <briefdescription>
<para>Get an editing proxy for the map of namespace relocations specified on this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The map of namespace relocation paths is editable in-place via this editing proxy. Individual source-target pairs can be added, removed, or altered using common map operations.</para>
<para>The map is organized as target <computeroutput><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></computeroutput> indexed by source <computeroutput><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></computeroutput>. Key and value paths are stored as absolute regardless of how they&apos;re added. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="720" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1abddc944bc03bd40c28e6b9b1d70ed852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void SetRelocates</definition>
        <argsstring>(const SdfRelocatesMap &amp;newMap)</argsstring>
        <name>SetRelocates</name>
        <param>
          <type>const <ref refid="usd_2sdf_2types_8h_1aed39354ce0865bb4ce3d4e6f50346a60" kindref="member">SdfRelocatesMap</ref> &amp;</type>
          <declname>newMap</declname>
        </param>
        <briefdescription>
<para>Set the entire map of namespace relocations specified on this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Use the editing proxy for modifying single paths in the map. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="725" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1afe5b58ee3c4eb6aa79c26f3c9faf468e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool HasRelocates</definition>
        <argsstring>() const</argsstring>
        <name>HasRelocates</name>
        <briefdescription>
<para>Returns true if this prim has any relocates opinion, including that there should be no relocates (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>an empty map). An empty map (no relocates) does not mean the same thing as a missing map (no opinion). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="732" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a8b6a29158aaf7619e6e89483c648a4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void ClearRelocates</definition>
        <argsstring>()</argsstring>
        <name>ClearRelocates</name>
        <briefdescription>
<para>Clears the relocates opinion for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="736" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_prim_spec_1accbf706cef886c99734316ddd8778e7c" prot="public" static="no">
        <type><ref refid="class_sdf_children_view" kindref="compound">SdfPrimSpecView</ref></type>
        <definition>typedef SdfPrimSpecView NameChildrenView</definition>
        <argsstring></argsstring>
        <name>NameChildrenView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="79" column="1" bodyfile="pxr/usd/sdf/primSpec.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_prim_spec_1a77ee89d9ba90dc4a88e796570f78d564" prot="public" static="no">
        <type><ref refid="class_sdf_children_view" kindref="compound">SdfPropertySpecView</ref></type>
        <definition>typedef SdfPropertySpecView PropertySpecView</definition>
        <argsstring></argsstring>
        <name>PropertySpecView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="80" column="1" bodyfile="pxr/usd/sdf/primSpec.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_prim_spec_1ad7ffe34eab46a7c514167f34a611e1f7" prot="public" static="no">
        <type><ref refid="class_sdf_children_view" kindref="compound">SdfAttributeSpecView</ref></type>
        <definition>typedef SdfAttributeSpecView AttributeSpecView</definition>
        <argsstring></argsstring>
        <name>AttributeSpecView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="81" column="1" bodyfile="pxr/usd/sdf/primSpec.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_prim_spec_1ad2d8809f6c8695ca36d33b9faf5e818d" prot="public" static="no">
        <type><ref refid="class_sdf_children_view" kindref="compound">SdfRelationshipSpecView</ref></type>
        <definition>typedef SdfRelationshipSpecView RelationshipSpecView</definition>
        <argsstring></argsstring>
        <name>RelationshipSpecView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="82" column="1" bodyfile="pxr/usd/sdf/primSpec.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdf_prim_spec_1a531cf2d5fa541ba63a142a04f9ec2bb6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SDF_DECLARE_SPEC</definition>
        <argsstring>(SdfPrimSpec, SdfSpec)</argsstring>
        <name>SDF_DECLARE_SPEC</name>
        <param>
          <type><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></type>
        </param>
        <param>
          <type><ref refid="class_sdf_spec" kindref="compound">SdfSpec</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a2dd66456be5daa2844ab5d5fb4e8e40a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _IsPseudoRoot</definition>
        <argsstring>() const</argsstring>
        <name>_IsPseudoRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="742" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_prim_spec_1a9a893f5b24973a8fe60641bed9914576" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _ValidateEdit</definition>
        <argsstring>(const TfToken &amp;key) const</argsstring>
        <name>_ValidateEdit</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="751" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_sdf_prim_spec_1a99211f84a0b651d446336be15da782dd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SdfPrimSpecHandle</type>
        <definition>static SdfPrimSpecHandle _New</definition>
        <argsstring>(const SdfPrimSpecHandle &amp;parentPrim, const TfToken &amp;name, SdfSpecifier spec, const TfToken &amp;typeName)</argsstring>
        <name>_New</name>
        <param>
          <type>const SdfPrimSpecHandle &amp;</type>
          <declname>parentPrim</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a18e79a065a46596da11ad51b2c85cad7" kindref="member">SdfSpecifier</ref></type>
          <declname>spec</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/primSpec.h" line="755" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a prim description in an <ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref> object. </para>
    </briefdescription>
    <detaileddescription>
<para>Every <ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref> object is defined in a layer. It is identified by its path (<ref refid="class_sdf_path" kindref="compound">SdfPath</ref> class) in the namespace hierarchy of its layer. SdfPrimSpecs can be created using the <ref refid="class_sdf_prim_spec_1a3f62dadcfac6417147c5267d3b3df1d6" kindref="member">New()</ref> method as children of either the containing <ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref> itself (for &quot;root level&quot; prims), or as children of other <ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref> objects to extend a hierarchy. The helper function <ref refid="prim_spec_8h_1a930dfe5b3e742f4e8b057ceb1ec09cd9" kindref="member">SdfCreatePrimInLayer()</ref> can be used to quickly create a hierarchy of primSpecs.</para>
<para><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref> objects have properties of two general types: attributes (containing values) and relationships (different types of connections to other prims and attributes). Attributes are represented by the <ref refid="class_sdf_attribute_spec" kindref="compound">SdfAttributeSpec</ref> class and relationships by the <ref refid="class_sdf_relationship_spec" kindref="compound">SdfRelationshipSpec</ref> class. Each prim has its own namespace of properties. Properties are stored and accessed by their name.</para>
<para><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref> objects have a typeName, permission restriction, and they reference and inherit prim paths. Permission restrictions control which other layers may refer to, or express opinions about a prim. See the SdfPermission class for more information.</para>
<para><itemizedlist>
<listitem><para>Insert doc about references and inherits here. </para>
</listitem>
<listitem><para>Should have validate... methods for name, children, properties </para>
</listitem>
</itemizedlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5142">
        <label>SdfSpec</label>
        <link refid="class_sdf_spec"/>
      </node>
      <node id="5141">
        <label>SdfPrimSpec</label>
        <link refid="class_sdf_prim_spec"/>
        <childnode refid="5142" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5144">
        <label>SdfSpec</label>
        <link refid="class_sdf_spec"/>
      </node>
      <node id="5143">
        <label>SdfPrimSpec</label>
        <link refid="class_sdf_prim_spec"/>
        <childnode refid="5144" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/primSpec.h" line="75" column="1" bodyfile="pxr/usd/sdf/primSpec.h" bodystart="74" bodyend="758"/>
    <listofallmembers>
      <member refid="class_sdf_spec_1ab3d82252ced8ce99c5118e47df91751e" prot="protected" virt="non-virtual"><scope>SdfPrimSpec</scope><name>_DeleteSpec</name></member>
      <member refid="class_sdf_prim_spec_1a2dd66456be5daa2844ab5d5fb4e8e40a" prot="private" virt="non-virtual"><scope>SdfPrimSpec</scope><name>_IsPseudoRoot</name></member>
      <member refid="class_sdf_spec_1aeff28b3237b8bdc8278510dfa4b354ee" prot="protected" virt="non-virtual"><scope>SdfPrimSpec</scope><name>_MoveSpec</name></member>
      <member refid="class_sdf_prim_spec_1a99211f84a0b651d446336be15da782dd" prot="private" virt="non-virtual"><scope>SdfPrimSpec</scope><name>_New</name></member>
      <member refid="class_sdf_prim_spec_1a9a893f5b24973a8fe60641bed9914576" prot="private" virt="non-virtual"><scope>SdfPrimSpec</scope><name>_ValidateEdit</name></member>
      <member refid="class_sdf_prim_spec_1a6bf438fae54d0b5cf2f50a6a8d111975" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ApplyNameChildrenOrder</name></member>
      <member refid="class_sdf_prim_spec_1a9f26d32c753a82018c9e42c167eac307" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ApplyPropertyOrder</name></member>
      <member refid="class_sdf_prim_spec_1ad7ffe34eab46a7c514167f34a611e1f7" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>AttributeSpecView</name></member>
      <member refid="class_sdf_prim_spec_1a50efa0a1dd8546f1926841d72277b131" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>BlockVariantSelection</name></member>
      <member refid="class_sdf_prim_spec_1a8d3b6e7e600320a58351d2f74554a94c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>CanSetName</name></member>
      <member refid="class_sdf_prim_spec_1ae27afdaa2306ce34705b584cc8bcdce3" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearActive</name></member>
      <member refid="class_sdf_spec_1a51b947731f02f1359b9820d33aa9b8d0" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearField</name></member>
      <member refid="class_sdf_spec_1ad5a0d94f0ac661acb29d7490eb15d6d6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearInfo</name></member>
      <member refid="class_sdf_prim_spec_1a0c40d8311f0f8cca4cd18321ccd08def" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearInheritPathList</name></member>
      <member refid="class_sdf_prim_spec_1a756961262abb32c06695ea1bb4b6fc34" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearInstanceable</name></member>
      <member refid="class_sdf_prim_spec_1a5d6e42b7e9fc0250349f73fac4d94308" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearKind</name></member>
      <member refid="class_sdf_prim_spec_1a3e02d5333c71be6016e601097acdc39d" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearPayloadList</name></member>
      <member refid="class_sdf_prim_spec_1aa640114e83414da9b488983301403c1b" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearReferenceList</name></member>
      <member refid="class_sdf_prim_spec_1a8b6a29158aaf7619e6e89483c648a4c6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearRelocates</name></member>
      <member refid="class_sdf_prim_spec_1a22c44def15d36de5258025c9ee60cfef" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ClearSpecializesList</name></member>
      <member refid="class_sdf_prim_spec_1ac3a9e288b6b8bae8a8c68b7c519cefca" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetActive</name></member>
      <member refid="class_sdf_prim_spec_1ad4760909f0cdc5d9ec133f0607ec72b7" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetAssetInfo</name></member>
      <member refid="class_sdf_prim_spec_1af1c5339316f766006e7560d048d8942d" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetAttributeAtPath</name></member>
      <member refid="class_sdf_prim_spec_1a6b7fff6a55224630c14ba5cd87ade35e" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetAttributes</name></member>
      <member refid="class_sdf_prim_spec_1aa09e2580406e4e30598f2a316ef029b1" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetComment</name></member>
      <member refid="class_sdf_prim_spec_1ade086cf82f9dd9c876ee3fd194b6f1bc" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetCustomData</name></member>
      <member refid="class_sdf_prim_spec_1a5f4c1bc9f2f793b24014551075d7cb6b" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetDocumentation</name></member>
      <member refid="class_sdf_spec_1a1da119c3713ec401ca578a6faa6eac9a" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetFallbackForInfo</name></member>
      <member refid="class_sdf_spec_1a2ba08d83b8a934187f2a792367066fa6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetField</name></member>
      <member refid="class_sdf_spec_1a07f67495ca10863568306887212430f9" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetFieldAs</name></member>
      <member refid="class_sdf_prim_spec_1a73b83447b66d61cd900b2e8c4f0868ca" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetHidden</name></member>
      <member refid="class_sdf_spec_1a623889e0a6c749418e10f23169f92c5b" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetInfo</name></member>
      <member refid="class_sdf_prim_spec_1ab37fd1d2becbd4895780cef9358e8743" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetInheritPathList</name></member>
      <member refid="class_sdf_prim_spec_1a901a3dca73d1f3a97f025d6652f76598" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetInstanceable</name></member>
      <member refid="class_sdf_prim_spec_1a487d7c7f6aaba871e0ac8262dbd073af" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetKind</name></member>
      <member refid="class_sdf_spec_1a3fefae0b234ef14d141c83d6448f8656" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetLayer</name></member>
      <member refid="class_sdf_spec_1a52b21d3d611186ff336ad54292b0301a" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetMetaDataDisplayGroup</name></member>
      <member refid="class_sdf_spec_1ad2c2ea35643e325dacbc0bd8a3646b35" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetMetaDataInfoKeys</name></member>
      <member refid="class_sdf_prim_spec_1a204344d110d2bb74928f43d2c1fe0047" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetName</name></member>
      <member refid="class_sdf_prim_spec_1ad66b5eac156110ca576d90e40a37d740" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetNameChildren</name></member>
      <member refid="class_sdf_prim_spec_1a4cd96e2436f94bcd9164d68009d4c643" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetNameChildrenOrder</name></member>
      <member refid="class_sdf_prim_spec_1a3bf6b9e0eea4388d894d140ba88d003f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetNameParent</name></member>
      <member refid="class_sdf_prim_spec_1a47aa0e00415f1058634b714d1e430d9c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetNameRoot</name></member>
      <member refid="class_sdf_prim_spec_1a320078c8c86baa76a237c2233d55a730" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetNameToken</name></member>
      <member refid="class_sdf_prim_spec_1a5089c9ab8a6f017f42478cced843ed9b" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetObjectAtPath</name></member>
      <member refid="class_sdf_spec_1a58e8463c104969bf41bb7c79605d9532" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPath</name></member>
      <member refid="class_sdf_prim_spec_1a0828b99d54da330ba8b7ac659f738725" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPayloadList</name></member>
      <member refid="class_sdf_prim_spec_1a5d9b89f530d37a530813620413217032" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPermission</name></member>
      <member refid="class_sdf_prim_spec_1aa430e2e4657e7043764dae08dc7a4e4c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPrefix</name></member>
      <member refid="class_sdf_prim_spec_1a129deef81265236916146cf4029a8a76" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPrefixSubstitutions</name></member>
      <member refid="class_sdf_prim_spec_1aac316794c73d357ce70f76a2685ba4ff" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPrimAtPath</name></member>
      <member refid="class_sdf_prim_spec_1a861b43ad798a853510376fe35ac2ac87" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetProperties</name></member>
      <member refid="class_sdf_prim_spec_1a99e14d808472bdd3ab56f688bc426ad1" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPropertyAtPath</name></member>
      <member refid="class_sdf_prim_spec_1a9cdb8321a85e0a455306289e4d38b488" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetPropertyOrder</name></member>
      <member refid="class_sdf_prim_spec_1a91bfcb2bb51bcc557059b67c99ff1ab3" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetRealNameParent</name></member>
      <member refid="class_sdf_prim_spec_1a52fecb4bb8322078258269bf24c6625c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetReferenceList</name></member>
      <member refid="class_sdf_prim_spec_1adbd32bec164f916fe95dc13744576402" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetRelationshipAtPath</name></member>
      <member refid="class_sdf_prim_spec_1a8044f9041dfafdeba8998c0faf89e6bd" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetRelationships</name></member>
      <member refid="class_sdf_prim_spec_1a0eebc34241eb811ca727c499e66ee7f0" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetRelocates</name></member>
      <member refid="class_sdf_spec_1a3bd6905e6ee12562d4702db19fe6cc1f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSchema</name></member>
      <member refid="class_sdf_prim_spec_1a2b424d6590d356a6a0a49a6297bfb5e2" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSpecializesList</name></member>
      <member refid="class_sdf_prim_spec_1a41866528f3540dadd0d471ba695b78df" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSpecifier</name></member>
      <member refid="class_sdf_spec_1a5f9f08741402342a8edf57244fe8c738" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSpecType</name></member>
      <member refid="class_sdf_prim_spec_1ab0afe06c8843e972dff682c3f7868ac9" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSuffix</name></member>
      <member refid="class_sdf_prim_spec_1afae2d460bc21f1be89244cabdb61ce8a" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSuffixSubstitutions</name></member>
      <member refid="class_sdf_prim_spec_1af72eac4916d1a00c08f27a4694835112" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSymmetricPeer</name></member>
      <member refid="class_sdf_prim_spec_1a7b13ede56ab5ee26f285da2280167a31" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSymmetryArguments</name></member>
      <member refid="class_sdf_prim_spec_1a5792f900b1a0fdb1314aa793af4e7df8" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetSymmetryFunction</name></member>
      <member refid="class_sdf_spec_1a7761385927d3f2e1d80af674b32d3ebc" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetTypeForInfo</name></member>
      <member refid="class_sdf_prim_spec_1acbdee8cae242dda2f7841b94d6d5df5a" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetTypeName</name></member>
      <member refid="class_sdf_prim_spec_1aea1cc311e6f381f64a5e890b42a22f63" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetVariantNames</name></member>
      <member refid="class_sdf_prim_spec_1a6d894c8d3224cc70666bd913624e31a8" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetVariantSelections</name></member>
      <member refid="class_sdf_prim_spec_1ae683a0f28ce00eabd675df8c017857ff" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetVariantSetNameList</name></member>
      <member refid="class_sdf_prim_spec_1ad3268652b0a34e3faa085f3e3886fde8" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>GetVariantSets</name></member>
      <member refid="class_sdf_prim_spec_1aff7a86ea6b7d711710485c43c49a8875" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasActive</name></member>
      <member refid="class_sdf_spec_1a0eb9c97beea5e2f59323cbda9669d566" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasField</name></member>
      <member refid="class_sdf_spec_1a428b01e709e5bace4d3e7e23ad683d30" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasField</name></member>
      <member refid="class_sdf_spec_1afafc521cdaa2ed6513d41be2fa433993" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasInfo</name></member>
      <member refid="class_sdf_prim_spec_1a1a76e2745e132db8f6c622033836e84a" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasInheritPaths</name></member>
      <member refid="class_sdf_prim_spec_1a68eb0e617c67e2cda8410d480acb916f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasInstanceable</name></member>
      <member refid="class_sdf_prim_spec_1afff9b6f7514d4ddadf5b07e1b043e9a0" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasKind</name></member>
      <member refid="class_sdf_prim_spec_1adb6d45b960d1f908db1f25f15851880e" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasNameChildrenOrder</name></member>
      <member refid="class_sdf_prim_spec_1adbdfd248280805e773d7653d8ac8a295" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasPayloads</name></member>
      <member refid="class_sdf_prim_spec_1aaf236624368b29310b0403a9c791f7e4" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasPropertyOrder</name></member>
      <member refid="class_sdf_prim_spec_1a17b5318c78f69d4e6fc6f6e2e99a685c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasReferences</name></member>
      <member refid="class_sdf_prim_spec_1afe5b58ee3c4eb6aa79c26f3c9faf468e" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasRelocates</name></member>
      <member refid="class_sdf_prim_spec_1afede362813c13c81c8cee598efef3268" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasSpecializes</name></member>
      <member refid="class_sdf_prim_spec_1a7bba6bd01b535b0b3741f0d9c5b42080" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>HasVariantSetNames</name></member>
      <member refid="class_sdf_prim_spec_1ac8259a5c7fa384112d767b3263a333b8" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>InsertInNameChildrenOrder</name></member>
      <member refid="class_sdf_prim_spec_1a5f242e404c7fd55c1cd8d6d225790842" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>InsertInPropertyOrder</name></member>
      <member refid="class_sdf_prim_spec_1a967784274eb761e4074c6f8f2d12bbb5" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>InsertNameChild</name></member>
      <member refid="class_sdf_prim_spec_1a23cf7d2cffe392e9bfce504d0038d94e" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>InsertProperty</name></member>
      <member refid="class_sdf_spec_1a10e3f6a477185399b6d64d26a213f32a" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>IsDormant</name></member>
      <member refid="class_sdf_spec_1a22b46c26c417cc6153e59cbe921d9ebd" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>IsInert</name></member>
      <member refid="class_sdf_prim_spec_1aaf39d3b7953761651981a821ce934211" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>IsValidName</name></member>
      <member refid="class_sdf_spec_1a7b34aca00921a15ba8d5ad48c4561e1c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ListFields</name></member>
      <member refid="class_sdf_spec_1af43fb14c1d6cec17f913c3846119f716" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>ListInfoKeys</name></member>
      <member refid="class_sdf_prim_spec_1accbf706cef886c99734316ddd8778e7c" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>NameChildrenView</name></member>
      <member refid="class_sdf_prim_spec_1a3f62dadcfac6417147c5267d3b3df1d6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>New</name></member>
      <member refid="class_sdf_prim_spec_1a65a4bc9d09b3adf0e338bd97b37e3a72" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>New</name></member>
      <member refid="class_sdf_spec_1a48650684eb4cc0ef195716de825a0a58" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_spec_1aa51d7b0726a78b7f679b5f22d68ef7df" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>operator=</name></member>
      <member refid="class_sdf_spec_1a103a094590f42b07266c293b02ef099f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>operator==</name></member>
      <member refid="class_sdf_spec_1a794044e16b8357b4fd1cd87438ed361f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>PermissionToEdit</name></member>
      <member refid="class_sdf_prim_spec_1a77ee89d9ba90dc4a88e796570f78d564" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>PropertySpecView</name></member>
      <member refid="class_sdf_prim_spec_1ad2d8809f6c8695ca36d33b9faf5e818d" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RelationshipSpecView</name></member>
      <member refid="class_sdf_prim_spec_1a7043fc74d15548fe472194cce1b23916" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveFromNameChildrenOrder</name></member>
      <member refid="class_sdf_prim_spec_1ab41f9b86a615fd6a2ef218285fd90fdc" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveFromNameChildrenOrderByIndex</name></member>
      <member refid="class_sdf_prim_spec_1a33f88def74ce8df58433ae2ed88edaef" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveFromPropertyOrder</name></member>
      <member refid="class_sdf_prim_spec_1a4de80105398cd1b2ae4cf10945c325f9" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveFromPropertyOrderByIndex</name></member>
      <member refid="class_sdf_prim_spec_1a16ea103f106fc15250ae7f5e8777e849" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveNameChild</name></member>
      <member refid="class_sdf_prim_spec_1aeb2dcaf19bf51b7dccda4d0bae2f5088" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveProperty</name></member>
      <member refid="class_sdf_prim_spec_1a8b578a561ceafc7c7cb32fbd4aa078f6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>RemoveVariantSet</name></member>
      <member refid="class_sdf_prim_spec_1a531cf2d5fa541ba63a142a04f9ec2bb6" prot="private" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SDF_DECLARE_SPEC</name></member>
      <member refid="class_sdf_prim_spec_1a42b9a499c6433fe5525799bfd4ee3317" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetActive</name></member>
      <member refid="class_sdf_prim_spec_1a3c2de13b36f263e83c5ec47f4b2f99ce" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetAssetInfo</name></member>
      <member refid="class_sdf_prim_spec_1a9d2550c83c8f19b23cf3485a75e16681" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetComment</name></member>
      <member refid="class_sdf_prim_spec_1a99305c665e0c209304be5d7ad769e7e7" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetCustomData</name></member>
      <member refid="class_sdf_prim_spec_1a0df7b9ada95628ee04032e00e48e7417" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetDocumentation</name></member>
      <member refid="class_sdf_spec_1a5b619246ffb0f1c56631529fa65e0435" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetField</name></member>
      <member refid="class_sdf_spec_1a3fc0276ed2f39480d00a61b888bd8434" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetField</name></member>
      <member refid="class_sdf_prim_spec_1a33854bd790c06e0cc959b70a2511cfb9" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetHidden</name></member>
      <member refid="class_sdf_spec_1ac24a378f12ee3162c6f0173d001b11c0" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetInfo</name></member>
      <member refid="class_sdf_spec_1a860957d1b7800d7e930b53fe5b19ba86" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetInfoDictionaryValue</name></member>
      <member refid="class_sdf_prim_spec_1a480003e9b19d88e2e959ec5a6c4620eb" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetInstanceable</name></member>
      <member refid="class_sdf_prim_spec_1aeee2b294eb217e52cad48c962ee334c4" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetKind</name></member>
      <member refid="class_sdf_prim_spec_1aa1f241d28f26488867a276eca6d54405" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetName</name></member>
      <member refid="class_sdf_prim_spec_1a863df355db6d3445cefaf9aeacac14f7" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetNameChildren</name></member>
      <member refid="class_sdf_prim_spec_1a075d97cf9dbaf781b86e52a6d6643248" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetNameChildrenOrder</name></member>
      <member refid="class_sdf_prim_spec_1a8d4c331826b506be9dd6a3c92a4ef684" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetPermission</name></member>
      <member refid="class_sdf_prim_spec_1a61b9d7858d930e1f8219ecfcfeaf193b" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetPrefix</name></member>
      <member refid="class_sdf_prim_spec_1a6a214ee1b98161d2556207655da0d1a3" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetPrefixSubstitutions</name></member>
      <member refid="class_sdf_prim_spec_1aaaf5de5dc16e39f6c490e6a7468ccca7" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetProperties</name></member>
      <member refid="class_sdf_prim_spec_1ae4dc2817b7cbeb144bae0c5790982586" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetPropertyOrder</name></member>
      <member refid="class_sdf_prim_spec_1abddc944bc03bd40c28e6b9b1d70ed852" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetRelocates</name></member>
      <member refid="class_sdf_prim_spec_1ac45758ee9813381b21e33e4e384d4f43" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetSpecifier</name></member>
      <member refid="class_sdf_prim_spec_1ab56b19de2727e437c05484300330b0c6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetSuffix</name></member>
      <member refid="class_sdf_prim_spec_1af9d826a73c38e1dc5680a1969bedfaf6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetSuffixSubstitutions</name></member>
      <member refid="class_sdf_prim_spec_1af11cd8834441d94496bf4cce983559d6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetSymmetricPeer</name></member>
      <member refid="class_sdf_prim_spec_1a46e788e0e01bb8ff6d716d6dbcdc5e65" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetSymmetryArgument</name></member>
      <member refid="class_sdf_prim_spec_1a490d4304afe7b9b0cd2cfc9ef05be93f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetSymmetryFunction</name></member>
      <member refid="class_sdf_prim_spec_1a3aca24b636ad7cb9ebc1046b1616660f" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetTypeName</name></member>
      <member refid="class_sdf_prim_spec_1a6cca40afd5d26f355f66002e3bbedd96" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>SetVariantSelection</name></member>
      <member refid="class_sdf_spec_1a38c4971735cfa7f91c1618d441622ccc" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>WriteToStream</name></member>
      <member refid="class_sdf_spec_1acd7d1eec1135fa492866bd844b2694d6" prot="public" virt="non-virtual"><scope>SdfPrimSpec</scope><name>~SdfSpec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
