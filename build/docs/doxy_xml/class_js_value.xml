<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_js_value" kind="class" language="C++" prot="public">
    <compoundname>JsValue</compoundname>
    <includes refid="js_2value_8h" local="no">value.h</includes>
    <innerclass refid="struct_js_value_1_1___invalid_type_helper" prot="private">JsValue::_InvalidTypeHelper</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a090410291b4f648633e2cf139798b482" prot="public">
          <name>ObjectType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a1a61178bfe6eb8f88743e31e8ca00bac" prot="public">
          <name>ArrayType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a83ccab8dfcfc3a9e8656224313fb61f3" prot="public">
          <name>StringType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7aa88110ed81e59e1aff06824ac66a905d" prot="public">
          <name>BoolType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a343ecf747eb322c130395153ac60fcfe" prot="public">
          <name>IntType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a759f01f2bd7745a2ff248c9d9fa7ca39" prot="public">
          <name>RealType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a619c7690fe4c6f221b1e0730948c466a" prot="public">
          <name>NullType</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Type held by this JSON value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="65" column="1" bodyfile="pxr/base/js/value.h" bodystart="65" bodyend="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_js_value_1ac7b5241c8037e8fe0f2267e1b6f944c0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; _Holder &gt;</type>
        <definition>std::shared_ptr&lt;_Holder&gt; _holder</definition>
        <argsstring></argsstring>
        <name>_holder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="270" column="1" bodyfile="pxr/base/js/value.h" bodystart="269" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_js_value_1aeab57dd4a440d3de49e83b487ad4ac4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>()</argsstring>
        <name>JsValue</name>
        <briefdescription>
<para>Constructs a null value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a2e7f6da054fa54a8e92c5185e1ca4215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(const JsObject &amp;value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>const JsObject &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a9ef57a6026ca2670f22f5a853f0a53e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(JsObject &amp;&amp;value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>JsObject &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given object rvalue reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a446e4a839e2c30f19399d4f21e0041b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(const JsArray &amp;value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>const JsArray &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a9b0510b520919d15397896a39fec2784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(JsArray &amp;&amp;value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>JsArray &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given array rvalue reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ac0419b543abca4d94b0c6f9b84129353" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(const char *value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given char array as a std::string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a31ff42bbe6a45127d9ee31f961af4947" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given std::string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a4fc52153d487bc9f164b2bf390b0a3da" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(std::string &amp;&amp;value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>std::string &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding the given std::string rvalue reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a9259bc20b6a57ba0d8c4463ead01d8e6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(bool value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding a bool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a2b081a5231877f0d83d30a5c1fd5d825" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(int value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding a signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a0669490ec3f645b4789b63772fe32e78" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(int64_t value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>int64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding a 64-bit signed integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a748b8680a7b7bda468e4e2a964d289df" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(uint64_t value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding a 64-bit unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a8eeadb13968f4e75bfeff5ac7fc500ba" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsValue</definition>
        <argsstring>(double value)</argsstring>
        <name>JsValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Constructs a value holding a double. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a43e479f66e0cb3f87c591a90f5e745a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API const JsObject &amp;</type>
        <definition>JS_API const JsObject&amp; GetJsObject</definition>
        <argsstring>() const</argsstring>
        <name>GetJsObject</name>
        <briefdescription>
<para>Returns the object held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding an object, this method raises a coding error and an empty object is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a03244c292435edbb6c2f36e6ab59a423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API const JsArray &amp;</type>
        <definition>JS_API const JsArray&amp; GetJsArray</definition>
        <argsstring>() const</argsstring>
        <name>GetJsArray</name>
        <briefdescription>
<para>Returns the array held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding an array, this method raises a coding error and an empty array is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a83dddc5abb4512372df955e54c3111ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API const std::string &amp;</type>
        <definition>JS_API const std::string&amp; GetString</definition>
        <argsstring>() const</argsstring>
        <name>GetString</name>
        <briefdescription>
<para>Returns the string held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding a string, this method raises a coding error and an empty string is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ab5f5e590539b2b7a1214d6d7119c7896" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool GetBool</definition>
        <argsstring>() const</argsstring>
        <name>GetBool</name>
        <briefdescription>
<para>Returns the bool held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding a bool, this method raises a coding error and false is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1adf213be89fbf135b490749a5f871966e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API int</type>
        <definition>JS_API int GetInt</definition>
        <argsstring>() const</argsstring>
        <name>GetInt</name>
        <briefdescription>
<para>Returns the integer held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding an int, this method raises a coding error and zero is returned. If the value is holding a 64-bit integer larger than the platform int may hold, the value is truncated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a0453440e79ab4acfb5345452b0927490" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API int64_t</type>
        <definition>JS_API int64_t GetInt64</definition>
        <argsstring>() const</argsstring>
        <name>GetInt64</name>
        <briefdescription>
<para>Returns the 64-bit integer held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding a 64-bit integer, this method raises a coding error and zero is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a6c17db1172eb2cd3674138c8ae691647" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API uint64_t</type>
        <definition>JS_API uint64_t GetUInt64</definition>
        <argsstring>() const</argsstring>
        <name>GetUInt64</name>
        <briefdescription>
<para>Returns the 64-bit unsigned integer held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding a 64-bit unsigned integer, this method raises a coding error and zero is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a6a5b1377733a61b28f6c4fa2f5753e8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API double</type>
        <definition>JS_API double GetReal</definition>
        <argsstring>() const</argsstring>
        <name>GetReal</name>
        <briefdescription>
<para>Returns the double held by this value. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding a double, this method raises a coding error and zero is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a36242f5633618ded6f04a59ca40cdf43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename ReturnType</type>
            <defval>typename std::conditional&lt;                  std::is_same&lt;T, JsObject&gt;::value ||                   std::is_same&lt;T, JsArray&gt;::value ||                   std::is_same&lt;T, std::string&gt;::value,                  const T&amp;, T&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>ReturnType</type>
        <definition>ReturnType Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
<para>Returns the value corresponding to the C++ type specified in the template parameter if it is holding such a value. </para>
        </briefdescription>
        <detaileddescription>
<para>Calling this function with C++ type T is equivalent to calling the specific Get function above that returns a value or reference to a type T.</para>
<para>If a value corresponding to the C++ type is not being held, this method raises a coding error. See Get functions above for default value returned in this case. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="167" column="1" bodyfile="pxr/base/js/value.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a85aecdbd96f937ea4de3bbb1d1d59172" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt; T &gt; GetArrayOf</definition>
        <argsstring>() const</argsstring>
        <name>GetArrayOf</name>
        <briefdescription>
<para>Returns a vector holding the elements of this value&apos;s array that correspond to the C++ type specified as the template parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>If this value is not holding an array, an empty vector is returned. If any of the array&apos;s elements does not correspond to the C++ type, it is replaced with the default value used by the Get functions above. In both cases, a coding error will be raised. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="178" column="1" bodyfile="pxr/base/js/value.h" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a5bdb02b78aa2cd9dce8bed57dce3f6dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API <ref refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">Type</ref></type>
        <definition>JS_API Type GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Returns the type of this value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a5c39e220d5f809adcea52436df3be76e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API std::string</type>
        <definition>JS_API std::string GetTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
<para>Returns a display name for the type of this value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a5bc1718c0004fafc198346caf5aabb9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsObject</definition>
        <argsstring>() const</argsstring>
        <name>IsObject</name>
        <briefdescription>
<para>Returns true if this value is holding an object type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1af680b745b382da48a71a5bd335ce9f89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsArray</definition>
        <argsstring>() const</argsstring>
        <name>IsArray</name>
        <briefdescription>
<para>Returns true if this value is holding an array type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1aea32878742d99acecad7896bb86d7851" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsString</definition>
        <argsstring>() const</argsstring>
        <name>IsString</name>
        <briefdescription>
<para>Returns true if this value is holding a string type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ac7e8d10c1e9e27156ee8e61fbe914acd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsBool</definition>
        <argsstring>() const</argsstring>
        <name>IsBool</name>
        <briefdescription>
<para>Returns true if this value is holding a boolean type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a2eb721b8b068ccfd1cfc31f6ad7c64f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsInt</definition>
        <argsstring>() const</argsstring>
        <name>IsInt</name>
        <briefdescription>
<para>Returns true if this value is holding an integer type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a366abf93db8abae7e55b3f4f566fdfc7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsReal</definition>
        <argsstring>() const</argsstring>
        <name>IsReal</name>
        <briefdescription>
<para>Returns true if this value is holding a real type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a53df780b4da2704309069dd050fc9fe0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsUInt64</definition>
        <argsstring>() const</argsstring>
        <name>IsUInt64</name>
        <briefdescription>
<para>Returns true if this value is holding a 64-bit unsigned integer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a7152c172b8551a1e222bf446ce7689fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Is</definition>
        <argsstring>() const</argsstring>
        <name>Is</name>
        <briefdescription>
<para>Returns true if this value is holding a type that corresponds to the C++ type specified as the template parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="210" column="1" bodyfile="pxr/base/js/value.h" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ad34718fb8f3109b7ee870650ae8dedbf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool IsArrayOf</definition>
        <argsstring>() const</argsstring>
        <name>IsArrayOf</name>
        <briefdescription>
<para>Returns true if this value is holding an array whose elements all correspond to the C++ type specified as the template parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="217" column="1" bodyfile="pxr/base/js/value.h" bodystart="284" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1aae6197b6fab8556550c186b7db92e29e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool IsNull</definition>
        <argsstring>() const</argsstring>
        <name>IsNull</name>
        <briefdescription>
<para>Returns true if this value is null, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1aabd30c0d0bce461ad1e71ba902a0c38f" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Evaluates to true if this value is not null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1abdf8fe8be79561bc06da12021d891b32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool operator==</definition>
        <argsstring>(const JsValue &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_js_value" kindref="compound">JsValue</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true of both values hold the same type and the underlying held values are equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a6ebd67c200f5e252e4cb9dce0b1545e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool operator!=</definition>
        <argsstring>(const JsValue &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_js_value" kindref="compound">JsValue</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if values are of different type, or the underlying held values are not equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="231" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_js_value_1a689c7c92b92c921d727363f23e975756" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T _Get</definition>
        <argsstring>(T *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>T *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="238" column="1" bodyfile="pxr/base/js/value.h" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a176f90081e4cbbbf5e75f650ec78abb6" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const JsObject &amp;</type>
        <definition>const JsObject&amp; _Get</definition>
        <argsstring>(JsObject *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>JsObject *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="244" column="1" bodyfile="pxr/base/js/value.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ab77f9e69cc396c3ec0f7426720a7c9b4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const JsArray &amp;</type>
        <definition>const JsArray&amp; _Get</definition>
        <argsstring>(JsArray *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>JsArray *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="245" column="1" bodyfile="pxr/base/js/value.h" bodystart="245" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ae18890247dead084edf660ab59242631" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; _Get</definition>
        <argsstring>(std::string *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>std::string *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="246" column="1" bodyfile="pxr/base/js/value.h" bodystart="246" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ad74f30254cce82e00c474dcd26f54af8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Get</definition>
        <argsstring>(bool *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>bool *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="247" column="1" bodyfile="pxr/base/js/value.h" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a7f6f52bf7ede4ba5bfa27603c3b4869d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int _Get</definition>
        <argsstring>(int *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="248" column="1" bodyfile="pxr/base/js/value.h" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ac3783ef7d92cf22a085d1dbf89100ddc" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t _Get</definition>
        <argsstring>(int64_t *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>int64_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="249" column="1" bodyfile="pxr/base/js/value.h" bodystart="249" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a70911b1963f9a764b1f5ed54d56c4fe4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t _Get</definition>
        <argsstring>(uint64_t *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>uint64_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="250" column="1" bodyfile="pxr/base/js/value.h" bodystart="250" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a37eca31405af940923795de8a313e1c4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double _Get</definition>
        <argsstring>(double *) const</argsstring>
        <name>_Get</name>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="251" column="1" bodyfile="pxr/base/js/value.h" bodystart="251" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1ab36e0aee9ff3d124cc95b9de1b1ce564" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(T *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>T *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="254" column="1" bodyfile="pxr/base/js/value.h" bodystart="254" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1aa731b102b35f759e3b27ed4bbffdf014" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(JsObject *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>JsObject *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="260" column="1" bodyfile="pxr/base/js/value.h" bodystart="260" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a5aaf75c1e74683da988853180aa1fdc1" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(JsArray *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>JsArray *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="261" column="1" bodyfile="pxr/base/js/value.h" bodystart="261" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a16179dcd795688c9abea6d24eaac1292" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(std::string *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>std::string *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="262" column="1" bodyfile="pxr/base/js/value.h" bodystart="262" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a1524c42f0ea9fd565976d7ff7b937890" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(bool *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>bool *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="263" column="1" bodyfile="pxr/base/js/value.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1afa60b4f599f2ab4210f37956691a12ba" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(int *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="264" column="1" bodyfile="pxr/base/js/value.h" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a6212205fd4e71adcc03dbeeff1e5dbc1" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(int64_t *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>int64_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="265" column="1" bodyfile="pxr/base/js/value.h" bodystart="265" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1a15dae3be9258865d906a9c931e62ddf4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(uint64_t *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>uint64_t *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="266" column="1" bodyfile="pxr/base/js/value.h" bodystart="266" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_js_value_1aebed5356af3ef05df8d75a830beb6ae0" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Is</definition>
        <argsstring>(double *) const</argsstring>
        <name>_Is</name>
        <param>
          <type>double *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/value.h" line="267" column="1" bodyfile="pxr/base/js/value.h" bodystart="267" bodyend="267"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A discriminated union type for JSON values. </para>
    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_js_value" kindref="compound">JsValue</ref> may contain one of the following types:</para>
<para><itemizedlist>
<listitem><para>JsObject, a dictionary type </para>
</listitem>
<listitem><para>JsArray, a vector type </para>
</listitem>
<listitem><para>std::string </para>
</listitem>
<listitem><para>bool </para>
</listitem>
<listitem><para>int64_t </para>
</listitem>
<listitem><para>uint64_t </para>
</listitem>
<listitem><para>double </para>
</listitem>
<listitem><para>null </para>
</listitem>
</itemizedlist>
</para>
    </detaileddescription>
    <location file="pxr/base/js/value.h" line="62" column="1" bodyfile="pxr/base/js/value.h" bodystart="61" bodyend="271"/>
    <listofallmembers>
      <member refid="class_js_value_1a689c7c92b92c921d727363f23e975756" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1a176f90081e4cbbbf5e75f650ec78abb6" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1ab77f9e69cc396c3ec0f7426720a7c9b4" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1ae18890247dead084edf660ab59242631" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1ad74f30254cce82e00c474dcd26f54af8" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1a7f6f52bf7ede4ba5bfa27603c3b4869d" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1ac3783ef7d92cf22a085d1dbf89100ddc" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1a70911b1963f9a764b1f5ed54d56c4fe4" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1a37eca31405af940923795de8a313e1c4" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Get</name></member>
      <member refid="class_js_value_1ac7b5241c8037e8fe0f2267e1b6f944c0" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_holder</name></member>
      <member refid="class_js_value_1ab36e0aee9ff3d124cc95b9de1b1ce564" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1aa731b102b35f759e3b27ed4bbffdf014" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1a5aaf75c1e74683da988853180aa1fdc1" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1a16179dcd795688c9abea6d24eaac1292" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1a1524c42f0ea9fd565976d7ff7b937890" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1afa60b4f599f2ab4210f37956691a12ba" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1a6212205fd4e71adcc03dbeeff1e5dbc1" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1a15dae3be9258865d906a9c931e62ddf4" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1aebed5356af3ef05df8d75a830beb6ae0" prot="private" virt="non-virtual"><scope>JsValue</scope><name>_Is</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a1a61178bfe6eb8f88743e31e8ca00bac" prot="public" virt="non-virtual"><scope>JsValue</scope><name>ArrayType</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7aa88110ed81e59e1aff06824ac66a905d" prot="public" virt="non-virtual"><scope>JsValue</scope><name>BoolType</name></member>
      <member refid="class_js_value_1a36242f5633618ded6f04a59ca40cdf43" prot="public" virt="non-virtual"><scope>JsValue</scope><name>Get</name></member>
      <member refid="class_js_value_1a85aecdbd96f937ea4de3bbb1d1d59172" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetArrayOf</name></member>
      <member refid="class_js_value_1ab5f5e590539b2b7a1214d6d7119c7896" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetBool</name></member>
      <member refid="class_js_value_1adf213be89fbf135b490749a5f871966e" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetInt</name></member>
      <member refid="class_js_value_1a0453440e79ab4acfb5345452b0927490" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetInt64</name></member>
      <member refid="class_js_value_1a03244c292435edbb6c2f36e6ab59a423" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetJsArray</name></member>
      <member refid="class_js_value_1a43e479f66e0cb3f87c591a90f5e745a0" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetJsObject</name></member>
      <member refid="class_js_value_1a6a5b1377733a61b28f6c4fa2f5753e8e" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetReal</name></member>
      <member refid="class_js_value_1a83dddc5abb4512372df955e54c3111ac" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetString</name></member>
      <member refid="class_js_value_1a5bdb02b78aa2cd9dce8bed57dce3f6dc" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetType</name></member>
      <member refid="class_js_value_1a5c39e220d5f809adcea52436df3be76e" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetTypeName</name></member>
      <member refid="class_js_value_1a6c17db1172eb2cd3674138c8ae691647" prot="public" virt="non-virtual"><scope>JsValue</scope><name>GetUInt64</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a343ecf747eb322c130395153ac60fcfe" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IntType</name></member>
      <member refid="class_js_value_1a7152c172b8551a1e222bf446ce7689fd" prot="public" virt="non-virtual"><scope>JsValue</scope><name>Is</name></member>
      <member refid="class_js_value_1af680b745b382da48a71a5bd335ce9f89" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsArray</name></member>
      <member refid="class_js_value_1ad34718fb8f3109b7ee870650ae8dedbf" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsArrayOf</name></member>
      <member refid="class_js_value_1ac7e8d10c1e9e27156ee8e61fbe914acd" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsBool</name></member>
      <member refid="class_js_value_1a2eb721b8b068ccfd1cfc31f6ad7c64f5" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsInt</name></member>
      <member refid="class_js_value_1aae6197b6fab8556550c186b7db92e29e" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsNull</name></member>
      <member refid="class_js_value_1a5bc1718c0004fafc198346caf5aabb9b" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsObject</name></member>
      <member refid="class_js_value_1a366abf93db8abae7e55b3f4f566fdfc7" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsReal</name></member>
      <member refid="class_js_value_1aea32878742d99acecad7896bb86d7851" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsString</name></member>
      <member refid="class_js_value_1a53df780b4da2704309069dd050fc9fe0" prot="public" virt="non-virtual"><scope>JsValue</scope><name>IsUInt64</name></member>
      <member refid="class_js_value_1aeab57dd4a440d3de49e83b487ad4ac4e" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a2e7f6da054fa54a8e92c5185e1ca4215" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a9ef57a6026ca2670f22f5a853f0a53e3" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a446e4a839e2c30f19399d4f21e0041b9" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a9b0510b520919d15397896a39fec2784" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1ac0419b543abca4d94b0c6f9b84129353" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a31ff42bbe6a45127d9ee31f961af4947" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a4fc52153d487bc9f164b2bf390b0a3da" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a9259bc20b6a57ba0d8c4463ead01d8e6" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a2b081a5231877f0d83d30a5c1fd5d825" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a0669490ec3f645b4789b63772fe32e78" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a748b8680a7b7bda468e4e2a964d289df" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a8eeadb13968f4e75bfeff5ac7fc500ba" prot="public" virt="non-virtual"><scope>JsValue</scope><name>JsValue</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a619c7690fe4c6f221b1e0730948c466a" prot="public" virt="non-virtual"><scope>JsValue</scope><name>NullType</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a090410291b4f648633e2cf139798b482" prot="public" virt="non-virtual"><scope>JsValue</scope><name>ObjectType</name></member>
      <member refid="class_js_value_1aabd30c0d0bce461ad1e71ba902a0c38f" prot="public" virt="non-virtual"><scope>JsValue</scope><name>operator bool</name></member>
      <member refid="class_js_value_1a6ebd67c200f5e252e4cb9dce0b1545e0" prot="public" virt="non-virtual"><scope>JsValue</scope><name>operator!=</name></member>
      <member refid="class_js_value_1abdf8fe8be79561bc06da12021d891b32" prot="public" virt="non-virtual"><scope>JsValue</scope><name>operator==</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a759f01f2bd7745a2ff248c9d9fa7ca39" prot="public" virt="non-virtual"><scope>JsValue</scope><name>RealType</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7a83ccab8dfcfc3a9e8656224313fb61f3" prot="public" virt="non-virtual"><scope>JsValue</scope><name>StringType</name></member>
      <member refid="class_js_value_1a1d1cfd8ffb84e947f82999c682b666a7" prot="public" virt="non-virtual"><scope>JsValue</scope><name>Type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
