<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_static_tokens_8h" kind="file" language="C++">
    <compoundname>pyStaticTokens.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes local="no">locale</includes>
    <includes refid="static_tokens_8h" local="yes">pxr/base/tf/staticTokens.h</includes>
    <includes refid="preprocessor_utils_lite_8h" local="yes">pxr/base/tf/preprocessorUtilsLite.h</includes>
    <includes local="no">boost/python/class.hpp</includes>
    <includes local="no">boost/python/scope.hpp</includes>
    <incdepgraph>
      <node id="72555">
        <label>locale</label>
      </node>
      <node id="72561">
        <label>atomic</label>
      </node>
      <node id="72559">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72560" relation="include">
        </childnode>
        <childnode refid="72557" relation="include">
        </childnode>
        <childnode refid="72561" relation="include">
        </childnode>
        <childnode refid="72562" relation="include">
        </childnode>
      </node>
      <node id="72575">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="72576" relation="include">
        </childnode>
        <childnode refid="72577" relation="include">
        </childnode>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72558" relation="include">
        </childnode>
        <childnode refid="72578" relation="include">
        </childnode>
      </node>
      <node id="72565">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="72558" relation="include">
        </childnode>
      </node>
      <node id="72577">
        <label>cstdint</label>
      </node>
      <node id="72592">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="72558" relation="include">
        </childnode>
      </node>
      <node id="72579">
        <label>cmath</label>
      </node>
      <node id="72573">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72568" relation="include">
        </childnode>
        <childnode refid="72574" relation="include">
        </childnode>
        <childnode refid="72575" relation="include">
        </childnode>
        <childnode refid="72580" relation="include">
        </childnode>
        <childnode refid="72581" relation="include">
        </childnode>
      </node>
      <node id="72600">
        <label>boost/python/scope.hpp</label>
      </node>
      <node id="72591">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72592" relation="include">
        </childnode>
        <childnode refid="72577" relation="include">
        </childnode>
        <childnode refid="72562" relation="include">
        </childnode>
        <childnode refid="72581" relation="include">
        </childnode>
      </node>
      <node id="72583">
        <label>string</label>
      </node>
      <node id="72553">
        <label>pxr/base/tf/pyStaticTokens.h</label>
        <link refid="py_static_tokens_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72555" relation="include">
        </childnode>
        <childnode refid="72556" relation="include">
        </childnode>
        <childnode refid="72557" relation="include">
        </childnode>
        <childnode refid="72599" relation="include">
        </childnode>
        <childnode refid="72600" relation="include">
        </childnode>
      </node>
      <node id="72567">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72565" relation="include">
        </childnode>
      </node>
      <node id="72584">
        <label>map</label>
      </node>
      <node id="72576">
        <label>cinttypes</label>
      </node>
      <node id="72554">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="72590">
        <label>unordered_set</label>
      </node>
      <node id="72571">
        <label>stddef.h</label>
      </node>
      <node id="72568">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72558" relation="include">
        </childnode>
      </node>
      <node id="72557">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="72558" relation="include">
        </childnode>
      </node>
      <node id="72598">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="72578">
        <label>sys/types.h</label>
      </node>
      <node id="72563">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72564" relation="include">
        </childnode>
        <childnode refid="72566" relation="include">
        </childnode>
        <childnode refid="72572" relation="include">
        </childnode>
        <childnode refid="72589" relation="include">
        </childnode>
        <childnode refid="72591" relation="include">
        </childnode>
        <childnode refid="72561" relation="include">
        </childnode>
        <childnode refid="72593" relation="include">
        </childnode>
        <childnode refid="72583" relation="include">
        </childnode>
        <childnode refid="72588" relation="include">
        </childnode>
        <childnode refid="72586" relation="include">
        </childnode>
      </node>
      <node id="72574">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72558" relation="include">
        </childnode>
        <childnode refid="72575" relation="include">
        </childnode>
        <childnode refid="72579" relation="include">
        </childnode>
      </node>
      <node id="72588">
        <label>vector</label>
      </node>
      <node id="72564">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="72565" relation="include">
        </childnode>
      </node>
      <node id="72581">
        <label>utility</label>
      </node>
      <node id="72594">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="72558">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="72556">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72557" relation="include">
        </childnode>
        <childnode refid="72559" relation="include">
        </childnode>
        <childnode refid="72563" relation="include">
        </childnode>
        <childnode refid="72588" relation="include">
        </childnode>
        <childnode refid="72594" relation="include">
        </childnode>
        <childnode refid="72595" relation="include">
        </childnode>
        <childnode refid="72596" relation="include">
        </childnode>
        <childnode refid="72597" relation="include">
        </childnode>
        <childnode refid="72598" relation="include">
        </childnode>
      </node>
      <node id="72560">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="72558" relation="include">
        </childnode>
      </node>
      <node id="72572">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72573" relation="include">
        </childnode>
        <childnode refid="72564" relation="include">
        </childnode>
        <childnode refid="72582" relation="include">
        </childnode>
        <childnode refid="72583" relation="include">
        </childnode>
        <childnode refid="72584" relation="include">
        </childnode>
        <childnode refid="72585" relation="include">
        </childnode>
        <childnode refid="72586" relation="include">
        </childnode>
        <childnode refid="72587" relation="include">
        </childnode>
        <childnode refid="72562" relation="include">
        </childnode>
        <childnode refid="72581" relation="include">
        </childnode>
        <childnode refid="72588" relation="include">
        </childnode>
      </node>
      <node id="72580">
        <label>math.h</label>
      </node>
      <node id="72593">
        <label>iosfwd</label>
      </node>
      <node id="72569">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72564" relation="include">
        </childnode>
        <childnode refid="72570" relation="include">
        </childnode>
        <childnode refid="72571" relation="include">
        </childnode>
      </node>
      <node id="72566">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72567" relation="include">
        </childnode>
        <childnode refid="72564" relation="include">
        </childnode>
        <childnode refid="72568" relation="include">
        </childnode>
        <childnode refid="72560" relation="include">
        </childnode>
        <childnode refid="72569" relation="include">
        </childnode>
        <childnode refid="72571" relation="include">
        </childnode>
      </node>
      <node id="72595">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="72597">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="72562">
        <label>type_traits</label>
      </node>
      <node id="72586">
        <label>set</label>
      </node>
      <node id="72570">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="72558" relation="include">
        </childnode>
      </node>
      <node id="72582">
        <label>cstring</label>
      </node>
      <node id="72585">
        <label>memory</label>
      </node>
      <node id="72589">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="72554" relation="include">
        </childnode>
        <childnode refid="72558" relation="include">
        </childnode>
        <childnode refid="72590" relation="include">
        </childnode>
      </node>
      <node id="72587">
        <label>typeindex</label>
      </node>
      <node id="72599">
        <label>boost/python/class.hpp</label>
      </node>
      <node id="72596">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class___tf_py_wrap_static_token" prot="public">_TfPyWrapStaticToken</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="py_static_tokens_8h_1aeead2359507dd0de6ac1c4df996565a3" prot="public" static="no">
        <name>TF_PY_WRAP_PUBLIC_TOKENS</name>
        <param><defname>name</defname></param>
        <param><defname>key</defname></param>
        <param><defname>seq</defname></param>
        <briefdescription>
<para>Macro to wrap static tokens defined with <computeroutput>TF_DEFINE_PUBLIC_TOKENS</computeroutput> to Python. </para>
        </briefdescription>
        <detaileddescription>
<para>It creates a class of name <computeroutput>name</computeroutput> in the current scope containing just the tokens in <computeroutput>seq</computeroutput> in the static tokens named by <computeroutput>key</computeroutput>. Arrays are not wrapped but their components are. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="50" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1a5808fce949c13e01e5b8377694f9ceb5" prot="public" static="no">
        <name>TF_PY_WRAP_PUBLIC_TOKENS_IN_CURRENT_SCOPE</name>
        <param><defname>key</defname></param>
        <param><defname>seq</defname></param>
        <briefdescription>
<para>Macro to wrap static tokens defined with <computeroutput>TF_DEFINE_PUBLIC_TOKENS</computeroutput> to Python. </para>
        </briefdescription>
        <detaileddescription>
<para>This wraps tokens in <computeroutput>seq</computeroutput> in the static tokens named by <computeroutput>key</computeroutput> as attributes on the current boost python scope. Arrays are not wrapped but their components are. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="61" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1af7874d26beaa622504ab28d19406a41a" prot="public" static="no">
        <name>_TF_PY_TOKENS_WRAP_ATTR_MEMBER</name>
        <param><defname>r</defname></param>
        <param><defname>key</defname></param>
        <param><defname>name</defname></param>
        <initializer>boost::python::scope().attr(                                            \
        TF_PP_STRINGIZE(name)) = key-&gt;name.GetString();</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="82" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1a0da67a46e08a1783f932d083b5b590d6" prot="public" static="no">
        <name>_TF_PY_TOKENS_WRAP_MEMBER</name>
        <param><defname>r</defname></param>
        <param><defname>key</defname></param>
        <param><defname>name</defname></param>
        <initializer>.add_static_property(TF_PP_STRINGIZE(name),                             \
        boost::python::make_function(_TfPyWrapStaticToken((&amp;key-&gt;name)),    \
            boost::python::return_value_policy&lt;                             \
                boost::python::return_by_value&gt;(),                          \
            boost::mpl::vector1&lt;std::string&gt;()))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="86" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1ae093293a403f614a8f85f3d485855116" prot="public" static="no">
        <name>_TF_PY_TOKENS_EXPAND</name>
        <param><defname>seq</defname></param>
        <initializer>BOOST_PP_SEQ_FILTER(_TF_TOKENS_IS_NOT_ARRAY, ~, seq)                    \
    _TF_TOKENS_EXPAND_ARRAY_ELEMENTS(seq)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="93" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1a30aac1c9b9255e9b7804459960201494" prot="public" static="no">
        <name>_TF_PY_TOKENS_WRAP_ELEMENT</name>
        <param><defname>r</defname></param>
        <param><defname>key</defname></param>
        <param><defname>elem</defname></param>
        <initializer>_TF_PY_TOKENS_WRAP_MEMBER(r, key, _TF_PY_TOKEN_GET_ELEM(elem))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="98" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1add10768275c7aba24b9d861125456df0" prot="public" static="no">
        <name>_TF_PY_TOKENS_WRAP_ATTR_ELEMENT</name>
        <param><defname>r</defname></param>
        <param><defname>key</defname></param>
        <param><defname>elem</defname></param>
        <initializer>_TF_PY_TOKENS_WRAP_ATTR_MEMBER(r, key, _TF_PY_TOKEN_GET_ELEM(elem))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="101" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1a0f08cd1a104cc2db6c7f1ebedc70137b" prot="public" static="no">
        <name>_TF_PY_TOKEN_GET_ELEM</name>
        <param><defname>elem</defname></param>
        <initializer>_TF_PP_IFF(<ref refid="group__group__tf___preprocessor_1gae21a9d22731d5a20df47ba583bc337cd" kindref="member">TF_PP_IS_TUPLE</ref>(elem),                                        \
        TF_PP_TUPLE_ELEM(0, elem), elem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="104" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1a67962bbc4a4895d02830ae787b973919" prot="public" static="no">
        <name>_TF_PY_TOKENS_WRAP_SEQ</name>
        <param><defname>key</defname></param>
        <param><defname>seq</defname></param>
        <initializer>BOOST_PP_SEQ_FOR_EACH(_TF_PY_TOKENS_WRAP_ELEMENT, key, seq)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="109" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="py_static_tokens_8h_1a56a33079cb9cfdfca0a32468bbade3e2" prot="public" static="no">
        <name>_TF_PY_TOKENS_WRAP_ATTR_SEQ</name>
        <param><defname>key</defname></param>
        <param><defname>seq</defname></param>
        <initializer>BOOST_PP_SEQ_FOR_EACH(_TF_PY_TOKENS_WRAP_ATTR_ELEMENT, key, seq)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyStaticTokens.h" line="112" column="9" bodyfile="pxr/base/tf/pyStaticTokens.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_PY_STATIC_TOKENS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_PY_STATIC_TOKENS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;locale&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="static_tokens_8h" kindref="compound">pxr/base/tf/staticTokens.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/preprocessorUtilsLite.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/class.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/scope.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>Should<sp/>wrap<sp/>token<sp/>arrays<sp/>to<sp/>Python.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="py_static_tokens_8h_1aeead2359507dd0de6ac1c4df996565a3" refkind="member"><highlight class="preprocessor">#define<sp/>TF_PY_WRAP_PUBLIC_TOKENS(name,<sp/>key,<sp/>seq)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>boost::python::class_&lt;_TF_TOKENS_STRUCT_NAME(key),<sp/>boost::noncopyable&gt;(<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>boost::python::no_init)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TF_PY_TOKENS_WRAP_SEQ(key,<sp/>_TF_PY_TOKENS_EXPAND(seq))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="py_static_tokens_8h_1a5808fce949c13e01e5b8377694f9ceb5" refkind="member"><highlight class="preprocessor">#define<sp/>TF_PY_WRAP_PUBLIC_TOKENS_IN_CURRENT_SCOPE(key,<sp/>seq)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_TF_PY_TOKENS_WRAP_ATTR_SEQ(key,<sp/>_TF_PY_TOKENS_EXPAND(seq))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>return<sp/>a<sp/>static<sp/>token<sp/>as<sp/>a<sp/>string.<sp/><sp/>We<sp/>wrap<sp/>tokens<sp/>as<sp/>Python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>strings<sp/>and<sp/>for<sp/>some<sp/>reason<sp/>simply<sp/>wrapping<sp/>the<sp/>token<sp/>using<sp/>def_readonly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bypasses<sp/>to-Python<sp/>conversion,<sp/>leading<sp/>to<sp/>the<sp/>error<sp/>that<sp/>there&apos;s<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Python<sp/>type<sp/>for<sp/>the<sp/>C++<sp/>TfToken<sp/>type.<sp/><sp/>So<sp/>we<sp/>wrap<sp/>this<sp/>functor<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_TfPyWrapStaticToken<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>_TfPyWrapStaticToken(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>*<sp/>token)<sp/>:<sp/>_token(token)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>operator()()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="73"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_token-&gt;GetString();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>*<sp/>_token;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>macros<sp/>to<sp/>add<sp/>a<sp/>single<sp/>data<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_WRAP_ATTR_MEMBER(r,<sp/>key,<sp/>name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>boost::python::scope().attr(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_PP_STRINGIZE(name))<sp/>=<sp/>key-&gt;name.GetString();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_WRAP_MEMBER(r,<sp/>key,<sp/>name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>.add_static_property(TF_PP_STRINGIZE(name),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::make_function(_TfPyWrapStaticToken((&amp;key-&gt;name)),<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::return_value_policy&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::return_by_value&gt;(),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::mpl::vector1&lt;std::string&gt;()))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_EXPAND(seq)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="94"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BOOST_PP_SEQ_FILTER(_TF_TOKENS_IS_NOT_ARRAY,<sp/>~,<sp/>seq)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_TF_TOKENS_EXPAND_ARRAY_ELEMENTS(seq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>macros<sp/>to<sp/>wrap<sp/>a<sp/>single<sp/>element<sp/>in<sp/>a<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_WRAP_ELEMENT(r,<sp/>key,<sp/>elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_TF_PY_TOKENS_WRAP_MEMBER(r,<sp/>key,<sp/>_TF_PY_TOKEN_GET_ELEM(elem))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_WRAP_ATTR_ELEMENT(r,<sp/>key,<sp/>elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_TF_PY_TOKENS_WRAP_ATTR_MEMBER(r,<sp/>key,<sp/>_TF_PY_TOKEN_GET_ELEM(elem))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKEN_GET_ELEM(elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_TF_PP_IFF(TF_PP_IS_TUPLE(elem),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TF_PP_TUPLE_ELEM(0,<sp/>elem),<sp/>elem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Private<sp/>macros<sp/>to<sp/>wrap<sp/>a<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_WRAP_SEQ(key,<sp/>seq)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BOOST_PP_SEQ_FOR_EACH(_TF_PY_TOKENS_WRAP_ELEMENT,<sp/>key,<sp/>seq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_TF_PY_TOKENS_WRAP_ATTR_SEQ(key,<sp/>seq)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>BOOST_PP_SEQ_FOR_EACH(_TF_PY_TOKENS_WRAP_ATTR_ELEMENT,<sp/>key,<sp/>seq)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_PY_STATIC_TOKENS_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pyStaticTokens.h"/>
  </compounddef>
</doxygen>
