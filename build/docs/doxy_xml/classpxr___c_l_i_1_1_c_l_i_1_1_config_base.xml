<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kind="class" language="C++" prot="public">
    <compoundname>pxr_CLI::CLI::ConfigBase</compoundname>
    <basecompoundref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config" prot="public" virt="non-virtual">Config</basecompoundref>
    <derivedcompoundref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_i_n_i" prot="public" virt="non-virtual">ConfigINI</derivedcompoundref>
    <includes refid="_c_l_i11_8h" local="no">CLI11.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a32fee0528b065ec8a17773f54b861b06" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char commentChar</definition>
        <argsstring></argsstring>
        <name>commentChar</name>
        <initializer>= &apos;#&apos;</initializer>
        <briefdescription>
<para>the character used for comments </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2715" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2715" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a0730bd934921aaf3b925bc04a6a7df7b" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char arrayStart</definition>
        <argsstring></argsstring>
        <name>arrayStart</name>
        <initializer>= &apos;[&apos;</initializer>
        <briefdescription>
<para>the character used to start an array &apos;\0&apos; is a default to not use </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2717" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2717" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a56eaf0de3392849b4b85e7fa191bf54d" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char arrayEnd</definition>
        <argsstring></argsstring>
        <name>arrayEnd</name>
        <initializer>= &apos;]&apos;</initializer>
        <briefdescription>
<para>the character used to end an array &apos;\0&apos; is a default to not use </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2719" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2719" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a360531fdf0529252ca32fe16010bab62" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char arraySeparator</definition>
        <argsstring></argsstring>
        <name>arraySeparator</name>
        <initializer>= &apos;,&apos;</initializer>
        <briefdescription>
<para>the character used to separate elements in an array </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2721" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2721" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a8ec511c53144b5b018f54731b848a0a8" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char valueDelimiter</definition>
        <argsstring></argsstring>
        <name>valueDelimiter</name>
        <initializer>= &apos;=&apos;</initializer>
        <briefdescription>
<para>the character used separate the name from the value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2723" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2723" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a09c4bad7bea1c7e375578549516290d2" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char stringQuote</definition>
        <argsstring></argsstring>
        <name>stringQuote</name>
        <initializer>= &apos;&quot;&apos;</initializer>
        <briefdescription>
<para>the character to use around strings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2725" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2725" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1af45bfe80a0bc1056d4ad8dea158cbcc0" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char characterQuote</definition>
        <argsstring></argsstring>
        <name>characterQuote</name>
        <initializer>= &apos;\&apos;&apos;</initializer>
        <briefdescription>
<para>the character to use around single characters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2727" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2727" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ae1c67a53ed3001f295015cd67a1fc2d9" prot="protected" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t maximumLayers</definition>
        <argsstring></argsstring>
        <name>maximumLayers</name>
        <initializer>{255}</initializer>
        <briefdescription>
<para>the maximum number of layers to allow </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2729" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2729" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ac36c1192b8a349efc6db0f23e2fc8d08" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char parentSeparatorChar</definition>
        <argsstring></argsstring>
        <name>parentSeparatorChar</name>
        <initializer>{&apos;.&apos;}</initializer>
        <briefdescription>
<para>the separator used to separator parent layers </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2731" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a7fe2b0d58bb559eb374bc2ae45037d53" prot="protected" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t configIndex</definition>
        <argsstring></argsstring>
        <name>configIndex</name>
        <initializer>{-1}</initializer>
        <briefdescription>
<para>Specify the configuration index to use for arrayed sections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2733" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1af6f95790111f7b908e19486613bbd3cf" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string configSection</definition>
        <argsstring></argsstring>
        <name>configSection</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>Specify the configuration section that should be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2735" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2735" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a68e8309bd884ec5c3f5d6b3aef9f45d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>CLI11_INLINE std::string to_config</definition>
        <argsstring>(const App *, bool default_also, bool write_description, std::string prefix) const override</argsstring>
        <name>to_config</name>
        <reimplements refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1a674e4c2422004c18b774b2f86118dad1">to_config</reimplements>
        <param>
          <type>const <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_app" kindref="compound">App</ref> *</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>bool</type>
        </param>
        <param>
          <type>std::string</type>
        </param>
        <briefdescription>
<para>Convert an app into a configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2739" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="9289" bodyend="9380"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1acf1889b875cdb9fad67171a49d9f2b7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="structpxr___c_l_i_1_1_c_l_i_1_1_config_item" kindref="compound">ConfigItem</ref> &gt;</type>
        <definition>std::vector&lt; ConfigItem &gt; from_config</definition>
        <argsstring>(std::istream &amp;input) const override</argsstring>
        <name>from_config</name>
        <reimplements refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ac7e260f45c15a40b134f6661e5949111">from_config</reimplements>
        <param>
          <type>std::istream &amp;</type>
        </param>
        <briefdescription>
<para>Convert a configuration into an app. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2741" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="9156" bodyend="9286"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a47d2894014f584682180dbcc8ff084a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* comment</definition>
        <argsstring>(char cchar)</argsstring>
        <name>comment</name>
        <param>
          <type>char</type>
          <declname>cchar</declname>
        </param>
        <briefdescription>
<para>Specify the configuration for comment characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2743" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2743" bodyend="2746"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a608fee7482f7975a4a4968b224375742" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* arrayBounds</definition>
        <argsstring>(char aStart, char aEnd)</argsstring>
        <name>arrayBounds</name>
        <param>
          <type>char</type>
          <declname>aStart</declname>
        </param>
        <param>
          <type>char</type>
          <declname>aEnd</declname>
        </param>
        <briefdescription>
<para>Specify the start and end characters for an array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2748" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2748" bodyend="2752"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1abe7f4f0fd42a2252fe370be8d8510260" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* arrayDelimiter</definition>
        <argsstring>(char aSep)</argsstring>
        <name>arrayDelimiter</name>
        <param>
          <type>char</type>
          <declname>aSep</declname>
        </param>
        <briefdescription>
<para>Specify the delimiter character for an array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2754" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2754" bodyend="2757"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ab3b2f065ed2cab7114096938d339e0a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* valueSeparator</definition>
        <argsstring>(char vSep)</argsstring>
        <name>valueSeparator</name>
        <param>
          <type>char</type>
          <declname>vSep</declname>
        </param>
        <briefdescription>
<para>Specify the delimiter between a name and value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2759" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2759" bodyend="2762"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1af4df40996b95ed0e542aaff5a2d24306" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* quoteCharacter</definition>
        <argsstring>(char qString, char qChar)</argsstring>
        <name>quoteCharacter</name>
        <param>
          <type>char</type>
          <declname>qString</declname>
        </param>
        <param>
          <type>char</type>
          <declname>qChar</declname>
        </param>
        <briefdescription>
<para>Specify the quote characters used around strings and characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2764" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2764" bodyend="2768"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ac9f571eb38875d9dab5d9e6ffc2eeb68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* maxLayers</definition>
        <argsstring>(uint8_t layers)</argsstring>
        <name>maxLayers</name>
        <param>
          <type>uint8_t</type>
          <declname>layers</declname>
        </param>
        <briefdescription>
<para>Specify the maximum number of parents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2770" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2770" bodyend="2773"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a23417fbb46e9ba5fb4aba4df1f0279f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* parentSeparator</definition>
        <argsstring>(char sep)</argsstring>
        <name>parentSeparator</name>
        <param>
          <type>char</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
<para>Specify the separator to use for parent layers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2775" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2775" bodyend="2778"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a0fbb14c49708f901cb2593982c96cd7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string &amp;</type>
        <definition>std::string&amp; sectionRef</definition>
        <argsstring>()</argsstring>
        <name>sectionRef</name>
        <briefdescription>
<para>get a reference to the configuration section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2780" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2780" bodyend="2780"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a3d6e885af4c46f01fd2d3238713588cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CLI11_NODISCARD const std::string &amp;</type>
        <definition>CLI11_NODISCARD const std::string&amp; section</definition>
        <argsstring>() const</argsstring>
        <name>section</name>
        <briefdescription>
<para>get the section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2782" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2782" bodyend="2782"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ab0698c545cb5c794e9f73e96d7adfed6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* section</definition>
        <argsstring>(const std::string &amp;sectionName)</argsstring>
        <name>section</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>sectionName</declname>
        </param>
        <briefdescription>
<para>specify a particular section of the configuration file to use </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2784" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2784" bodyend="2787"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a270698d13598673909cced8762bd6865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int16_t &amp;</type>
        <definition>int16_t&amp; indexRef</definition>
        <argsstring>()</argsstring>
        <name>indexRef</name>
        <briefdescription>
<para>get a reference to the configuration index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2790" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2790" bodyend="2790"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1abc1edb8388dbe006f1f86b21f43d7973" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>CLI11_NODISCARD int16_t</type>
        <definition>CLI11_NODISCARD int16_t index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <briefdescription>
<para>get the section index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2792" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2792" bodyend="2792"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a47a9148b9fd0a7077e5c85321f125046" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base" kindref="compound">ConfigBase</ref> *</type>
        <definition>ConfigBase* index</definition>
        <argsstring>(int16_t sectionIndex)</argsstring>
        <name>index</name>
        <param>
          <type>int16_t</type>
          <declname>sectionIndex</declname>
        </param>
        <briefdescription>
<para>specify a particular index in the section to use (-1) for all sections to use </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2794" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2794" bodyend="2797"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This converter works with INI/TOML files; to write INI files use <ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_i_n_i" kindref="compound">ConfigINI</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1030">
        <label>ConfigINI</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_i_n_i"/>
        <childnode refid="1028" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1028">
        <label>ConfigBase</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base"/>
        <childnode refid="1029" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1029">
        <label>Config</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1031">
        <label>ConfigBase</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base"/>
        <childnode refid="1032" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1032">
        <label>Config</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_config"/>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="2712" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="2712" bodyend="2798"/>
    <listofallmembers>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a608fee7482f7975a4a4968b224375742" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>arrayBounds</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1abe7f4f0fd42a2252fe370be8d8510260" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>arrayDelimiter</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a56eaf0de3392849b4b85e7fa191bf54d" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>arrayEnd</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a360531fdf0529252ca32fe16010bab62" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>arraySeparator</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a0730bd934921aaf3b925bc04a6a7df7b" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>arrayStart</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1af45bfe80a0bc1056d4ad8dea158cbcc0" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>characterQuote</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a47d2894014f584682180dbcc8ff084a6" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>comment</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a32fee0528b065ec8a17773f54b861b06" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>commentChar</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a7fe2b0d58bb559eb374bc2ae45037d53" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>configIndex</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1af6f95790111f7b908e19486613bbd3cf" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>configSection</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1acf1889b875cdb9fad67171a49d9f2b7c" prot="public" virt="virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>from_config</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1acb65d998c2d9f242c2ac9f721a0ea404" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>from_file</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1abc1edb8388dbe006f1f86b21f43d7973" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>index</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a47a9148b9fd0a7077e5c85321f125046" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>index</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a270698d13598673909cced8762bd6865" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>indexRef</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ab2ec0ff0df22066b4d745774730ae23c" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>items</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ae1c67a53ed3001f295015cd67a1fc2d9" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>maximumLayers</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ac9f571eb38875d9dab5d9e6ffc2eeb68" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>maxLayers</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a23417fbb46e9ba5fb4aba4df1f0279f9" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>parentSeparator</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ac36c1192b8a349efc6db0f23e2fc8d08" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>parentSeparatorChar</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1af4df40996b95ed0e542aaff5a2d24306" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>quoteCharacter</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a3d6e885af4c46f01fd2d3238713588cd" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>section</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ab0698c545cb5c794e9f73e96d7adfed6" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>section</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a0fbb14c49708f901cb2593982c96cd7e" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>sectionRef</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a09c4bad7bea1c7e375578549516290d2" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>stringQuote</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a68e8309bd884ec5c3f5d6b3aef9f45d0" prot="public" virt="virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>to_config</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1a349cdd2c788d04b2622aa92684fc7f6b" prot="public" virt="virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>to_flag</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1a8ec511c53144b5b018f54731b848a0a8" prot="protected" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>valueDelimiter</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_base_1ab3b2f065ed2cab7114096938d339e0a2" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>valueSeparator</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_config_1ad01a581f2bafd1a64c82c9cd177bf871" prot="public" virt="virtual"><scope>pxr_CLI::CLI::ConfigBase</scope><name>~Config</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
