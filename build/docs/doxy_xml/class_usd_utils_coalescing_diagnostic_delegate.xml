<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_utils_coalescing_diagnostic_delegate" kind="class" language="C++" prot="public">
    <compoundname>UsdUtilsCoalescingDiagnosticDelegate</compoundname>
    <basecompoundref refid="class_tf_diagnostic_mgr_1_1_delegate" prot="public" virt="non-virtual">TfDiagnosticMgr::Delegate</basecompoundref>
    <includes refid="coalescing_diagnostic_delegate_8h" local="no">coalescingDiagnosticDelegate.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_utils_coalescing_diagnostic_delegate_1a16192dc943d96970059b39be73f62a9b" prot="private" static="no" mutable="no">
        <type>tbb::concurrent_queue&lt; <ref refid="class_tf_diagnostic_base" kindref="compound">TfDiagnosticBase</ref> * &gt;</type>
        <definition>tbb::concurrent_queue&lt;TfDiagnosticBase*&gt; _diagnostics</definition>
        <argsstring></argsstring>
        <name>_diagnostics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="130" column="1" bodyfile="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a26bf9a8e41e44eafae5d838067387b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API</type>
        <definition>USDUTILS_API UsdUtilsCoalescingDiagnosticDelegate</definition>
        <argsstring>()</argsstring>
        <name>UsdUtilsCoalescingDiagnosticDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a79d1f11795a254a39759c9f5643b3cb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDUTILS_API</type>
        <definition>virtual USDUTILS_API ~UsdUtilsCoalescingDiagnosticDelegate</definition>
        <argsstring>()</argsstring>
        <name>~UsdUtilsCoalescingDiagnosticDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a6d98216c7d46cc31da20159cedb4f395" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDUTILS_API void</type>
        <definition>virtual USDUTILS_API void IssueError</definition>
        <argsstring>(const TfError &amp;) override</argsstring>
        <name>IssueError</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1a4a71214af7408a829d79b0127648516e">IssueError</reimplements>
        <param>
          <type>const <ref refid="class_tf_error" kindref="compound">TfError</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Methods that implement the interface provided in <ref refid="class_tf_diagnostic_mgr_1_1_delegate" kindref="compound">TfDiagnosticMgr::Delegate</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a001692b1a33e3b779ab4cd8242531dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDUTILS_API void</type>
        <definition>virtual USDUTILS_API void IssueStatus</definition>
        <argsstring>(const TfStatus &amp;) override</argsstring>
        <name>IssueStatus</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1a3f80bd49fe9478472ef37ed5ca10befc">IssueStatus</reimplements>
        <param>
          <type>const <ref refid="class_tf_status" kindref="compound">TfStatus</ref> &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput><ref refid="group__group__tf___diagnostic_1ga97dfb3da2a7be92953eda1e4ad268301" kindref="member">TF_STATUS()</ref></computeroutput> is issued. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a47eb2866d94d1a99f2a89b0eb73f34c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDUTILS_API void</type>
        <definition>virtual USDUTILS_API void IssueWarning</definition>
        <argsstring>(const TfWarning &amp;) override</argsstring>
        <name>IssueWarning</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1aa28e6dcae9b9131fb358a8706c841ea9">IssueWarning</reimplements>
        <param>
          <type>const <ref refid="class_tf_warning" kindref="compound">TfWarning</ref> &amp;</type>
          <declname>warning</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput>TF_WARNING()</computeroutput> is issued. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a5fc87e363ed1b7e48616d63b687f6cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDUTILS_API void</type>
        <definition>virtual USDUTILS_API void IssueFatalError</definition>
        <argsstring>(const TfCallContext &amp;, const std::string &amp;) override</argsstring>
        <name>IssueFatalError</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1ac4ef12d57756fe3a5de89de7cfa8f866">IssueFatalError</reimplements>
        <param>
          <type>const TfCallContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput>TF_FATAL_ERROR</computeroutput> is issued (or a failed <computeroutput>TF_AXIOM</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1af2b8cabc4b1112bd5c6ea96a56b79972" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API void</type>
        <definition>USDUTILS_API void DumpCoalescedDiagnostics</definition>
        <argsstring>(std::ostream &amp;ostr)</argsstring>
        <name>DumpCoalescedDiagnostics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <briefdescription>
<para>Print all pending diagnostics in a coalesced form to <computeroutput>ostr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method clears the pending diagnostics. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a1d6bb4eb4cbe90cfa3f6289f2278e699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API void</type>
        <definition>USDUTILS_API void DumpUncoalescedDiagnostics</definition>
        <argsstring>(std::ostream &amp;ostr)</argsstring>
        <name>DumpUncoalescedDiagnostics</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <briefdescription>
<para>Print all pending diagnostics without any coalescing to <computeroutput>ostr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method clears the pending diagnostics. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a801170c728a7090af766342a7e1d39d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API <ref refid="coalescing_diagnostic_delegate_8h_1ad2e44bb8524bc676b6170e2f399977b8" kindref="member">UsdUtilsCoalescingDiagnosticDelegateVector</ref></type>
        <definition>USDUTILS_API UsdUtilsCoalescingDiagnosticDelegateVector TakeCoalescedDiagnostics</definition>
        <argsstring>()</argsstring>
        <name>TakeCoalescedDiagnostics</name>
        <briefdescription>
<para>Get all pending diagnostics in a coalesced form. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method clears the pending diagnostics. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_coalescing_diagnostic_delegate_1a553cdae866b053e5aa1808ac7b2e29c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API std::vector&lt; std::unique_ptr&lt; <ref refid="class_tf_diagnostic_base" kindref="compound">TfDiagnosticBase</ref> &gt; &gt;</type>
        <definition>USDUTILS_API std::vector&lt;std::unique_ptr&lt;TfDiagnosticBase&gt; &gt; TakeUncoalescedDiagnostics</definition>
        <argsstring>()</argsstring>
        <name>TakeUncoalescedDiagnostics</name>
        <briefdescription>
<para>Get all pending diagnostics without any coalescing. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method clears the pending diagnostics. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class which collects warnings and statuses from the Tf diagnostic manager system in a thread safe manner. </para>
    </briefdescription>
    <detaileddescription>
<para>This class allows clients to get both the unfiltered results, as well as a compressed view which deduplicates diagnostic events by their source line number, function and file from which they occurred. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8437">
        <label>UsdUtilsCoalescingDiagnosticDelegate</label>
        <link refid="class_usd_utils_coalescing_diagnostic_delegate"/>
        <childnode refid="8438" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8438">
        <label>Delegate</label>
        <link refid="class_tf_diagnostic_mgr_1_1_delegate"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8439">
        <label>UsdUtilsCoalescingDiagnosticDelegate</label>
        <link refid="class_usd_utils_coalescing_diagnostic_delegate"/>
        <childnode refid="8440" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8440">
        <label>Delegate</label>
        <link refid="class_tf_diagnostic_mgr_1_1_delegate"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" line="84" column="1" bodyfile="pxr/usd/usdUtils/coalescingDiagnosticDelegate.h" bodystart="84" bodyend="131"/>
    <listofallmembers>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a16192dc943d96970059b39be73f62a9b" prot="private" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>_diagnostics</name></member>
      <member refid="class_tf_diagnostic_mgr_1_1_delegate_1a88dcc2a1d6c3096c3382b9f3590a4ebc" prot="protected" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>_UnhandledAbort</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1af2b8cabc4b1112bd5c6ea96a56b79972" prot="public" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>DumpCoalescedDiagnostics</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a1d6bb4eb4cbe90cfa3f6289f2278e699" prot="public" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>DumpUncoalescedDiagnostics</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a6d98216c7d46cc31da20159cedb4f395" prot="public" virt="virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>IssueError</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a5fc87e363ed1b7e48616d63b687f6cd7" prot="public" virt="virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>IssueFatalError</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a001692b1a33e3b779ab4cd8242531dc2" prot="public" virt="virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>IssueStatus</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a47eb2866d94d1a99f2a89b0eb73f34c2" prot="public" virt="virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>IssueWarning</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a801170c728a7090af766342a7e1d39d8" prot="public" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>TakeCoalescedDiagnostics</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a553cdae866b053e5aa1808ac7b2e29c0" prot="public" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>TakeUncoalescedDiagnostics</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a26bf9a8e41e44eafae5d838067387b68" prot="public" virt="non-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>UsdUtilsCoalescingDiagnosticDelegate</name></member>
      <member refid="class_tf_diagnostic_mgr_1_1_delegate_1ae96b831195b4f58f2755dd6c5d6c99b4" prot="public" virt="pure-virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>~Delegate</name></member>
      <member refid="class_usd_utils_coalescing_diagnostic_delegate_1a79d1f11795a254a39759c9f5643b3cb2" prot="public" virt="virtual"><scope>UsdUtilsCoalescingDiagnosticDelegate</scope><name>~UsdUtilsCoalescingDiagnosticDelegate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
