<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec3i" kind="class" language="C++" prot="public">
    <compoundname>GfVec3i</compoundname>
    <includes refid="vec3i_8h" local="no">vec3i.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec3i_1ad79cf4c4486794ed5c5c6801eacaa5d9" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="64" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec3i_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="65" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec3i_1ac0d47cbea0f99a36c283c8a0ac147bce" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _data[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="246" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec3i_1a222456ed032b72f4abd3dd9b3b2f1038" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec3i</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec3i</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a487fbda697dddfb67a02d9b21b44c720" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec3i</definition>
        <argsstring>(int value)</argsstring>
        <name>GfVec3i</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="71" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1abad6c496cd001217e4d9ebb355fbc8f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec3i</definition>
        <argsstring>(int s0, int s1, int s2)</argsstring>
        <name>GfVec3i</name>
        <param>
          <type>int</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="77" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a8d35c1d271118865103fc434ca5da1b1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec3i</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec3i</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="84" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a6559a51322687e74f92bd6351cbd2991" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
        <definition>GfVec3i&amp; Set</definition>
        <argsstring>(int s0, int s1, int s2)</argsstring>
        <name>Set</name>
        <param>
          <type>int</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="118" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="118" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a982f71481f57b7d5d3be4e28da91963a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
        <definition>GfVec3i&amp; Set</definition>
        <argsstring>(int const *a)</argsstring>
        <name>Set</name>
        <param>
          <type>int const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="126" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a9dd2c1a64aeebed0e9016f216e643221" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  *</type>
        <definition>int const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="131" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1aa6a02d6a1bdf6fe74b108cef3813f51b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int *</type>
        <definition>int* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="132" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a286912c871e807202c774b8bf846204b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  *</type>
        <definition>int const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="133" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a4ab6ea6ecc83201af9fecc0cd482699f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  &amp;</type>
        <definition>int const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="136" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a224b8817bcef347f0379a493cf3028c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="137" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a84f75fe6af8042f606b57a44fb51ef12" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec3i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="145" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1abd48b6cfca45800d7e2b914ef40653f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec3i const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="150" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a34b8031e6e165c02b00c1ed3366e7d30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec3d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a44aeb62774052a6326b510f694451d5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec3f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a0d386c45ad577ea8c46a8dc895d6a9c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec3h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1acd6ed4c19add8e5fa01b2c7b940af44e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="166" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a8a5a72133167bc3be7bf34161eebabaf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
        <definition>GfVec3i&amp; operator+=</definition>
        <argsstring>(GfVec3i const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="171" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="171" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a53a1918158ad1f6208aa3bc3666af4b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
        <definition>GfVec3i&amp; operator-=</definition>
        <argsstring>(GfVec3i const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="182" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="182" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1ab42df598ed2173ff11b7875ac1a1824a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
        <definition>GfVec3i&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="193" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1ae67551ed3c5086b9343cc9a9255e3c30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="199" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a6c0acae105aefe6dd742339860d4b315" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> &amp;</type>
        <definition>GfVec3i&amp; operator/=</definition>
        <argsstring>(int s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="207" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="207" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a6df9a9d45e9cb773446878782e4751b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i operator/</definition>
        <argsstring>(int s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="213" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a5714bc282e2151d609fd3b63a8096395" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int operator *</definition>
        <argsstring>(GfVec3i const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="218" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1aa07f67453629508cf3424e55b5e5b275" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i GetProjection</definition>
        <argsstring>(GfVec3i const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="226" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a8252f36aa0432d26ad79a6e8a23072a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i GetComplement</definition>
        <argsstring>(GfVec3i const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="235" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1adcc0a137316b687ed2b04ad3d8403991" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="240" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="240" bodyend="242"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec3i_1a848151682cd2809fd4b187bc618a4110" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>static GfVec3i XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="90" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a906542da8ca6c5aca4cd083d918b13c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>static GfVec3i YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="96" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a6242b6f12883e09d9812f9c9325e391e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>static GfVec3i ZAxis</definition>
        <argsstring>()</argsstring>
        <name>ZAxis</name>
        <briefdescription>
<para>Create a unit vector along the Z-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="102" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3i_1a987a753c6e54be11af8b433d4d53faab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>static GfVec3i Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 3. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="110" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="110" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec3i_1a833b71d50d0418875ac7482a0660ac84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec3i const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="140" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec3i_1a897eff949eeb9588ec741858632eda68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i operator+</definition>
        <argsstring>(GfVec3i const &amp;l, GfVec3i const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="177" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec3i_1a2fbbc3bdc8f829580a1ec4f6de3fc4e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i operator-</definition>
        <argsstring>(GfVec3i const &amp;l, GfVec3i const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="188" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec3i_1a31503df7422de696276bcbe38d83099e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i operator *</definition>
        <argsstring>(double s, GfVec3i const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3i.h" line="202" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="202" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 3 int components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 3 components of type <computeroutput>int</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec3i.h" line="61" column="1" bodyfile="pxr/base/gf/vec3i.h" bodystart="60" bodyend="247"/>
    <listofallmembers>
      <member refid="class_gf_vec3i_1ac0d47cbea0f99a36c283c8a0ac147bce" prot="private" virt="non-virtual"><scope>GfVec3i</scope><name>_data</name></member>
      <member refid="class_gf_vec3i_1a987a753c6e54be11af8b433d4d53faab" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>Axis</name></member>
      <member refid="class_gf_vec3i_1a9dd2c1a64aeebed0e9016f216e643221" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>data</name></member>
      <member refid="class_gf_vec3i_1aa6a02d6a1bdf6fe74b108cef3813f51b" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>data</name></member>
      <member refid="class_gf_vec3i_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>dimension</name></member>
      <member refid="class_gf_vec3i_1a286912c871e807202c774b8bf846204b" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GetArray</name></member>
      <member refid="class_gf_vec3i_1a8252f36aa0432d26ad79a6e8a23072a9" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec3i_1adcc0a137316b687ed2b04ad3d8403991" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec3i_1aa07f67453629508cf3424e55b5e5b275" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec3i_1a222456ed032b72f4abd3dd9b3b2f1038" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GfVec3i</name></member>
      <member refid="class_gf_vec3i_1a487fbda697dddfb67a02d9b21b44c720" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GfVec3i</name></member>
      <member refid="class_gf_vec3i_1abad6c496cd001217e4d9ebb355fbc8f8" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GfVec3i</name></member>
      <member refid="class_gf_vec3i_1a8d35c1d271118865103fc434ca5da1b1" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>GfVec3i</name></member>
      <member refid="class_gf_vec3i_1a833b71d50d0418875ac7482a0660ac84" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>hash_value</name></member>
      <member refid="class_gf_vec3i_1ae67551ed3c5086b9343cc9a9255e3c30" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator *</name></member>
      <member refid="class_gf_vec3i_1a31503df7422de696276bcbe38d83099e" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator *</name></member>
      <member refid="class_gf_vec3i_1a5714bc282e2151d609fd3b63a8096395" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator *</name></member>
      <member refid="class_gf_vec3i_1ab42df598ed2173ff11b7875ac1a1824a" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator *=</name></member>
      <member refid="class_gf_vec3i_1abd48b6cfca45800d7e2b914ef40653f5" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator!=</name></member>
      <member refid="class_gf_vec3i_1a897eff949eeb9588ec741858632eda68" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator+</name></member>
      <member refid="class_gf_vec3i_1a8a5a72133167bc3be7bf34161eebabaf" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator+=</name></member>
      <member refid="class_gf_vec3i_1acd6ed4c19add8e5fa01b2c7b940af44e" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator-</name></member>
      <member refid="class_gf_vec3i_1a2fbbc3bdc8f829580a1ec4f6de3fc4e8" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator-</name></member>
      <member refid="class_gf_vec3i_1a53a1918158ad1f6208aa3bc3666af4b6" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator-=</name></member>
      <member refid="class_gf_vec3i_1a6df9a9d45e9cb773446878782e4751b2" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator/</name></member>
      <member refid="class_gf_vec3i_1a6c0acae105aefe6dd742339860d4b315" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator/=</name></member>
      <member refid="class_gf_vec3i_1a84f75fe6af8042f606b57a44fb51ef12" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator==</name></member>
      <member refid="class_gf_vec3i_1a34b8031e6e165c02b00c1ed3366e7d30" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator==</name></member>
      <member refid="class_gf_vec3i_1a44aeb62774052a6326b510f694451d5e" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator==</name></member>
      <member refid="class_gf_vec3i_1a0d386c45ad577ea8c46a8dc895d6a9c9" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator==</name></member>
      <member refid="class_gf_vec3i_1a4ab6ea6ecc83201af9fecc0cd482699f" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator[]</name></member>
      <member refid="class_gf_vec3i_1a224b8817bcef347f0379a493cf3028c4" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>operator[]</name></member>
      <member refid="class_gf_vec3i_1ad79cf4c4486794ed5c5c6801eacaa5d9" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec3i_1a6559a51322687e74f92bd6351cbd2991" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>Set</name></member>
      <member refid="class_gf_vec3i_1a982f71481f57b7d5d3be4e28da91963a" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>Set</name></member>
      <member refid="class_gf_vec3i_1a848151682cd2809fd4b187bc618a4110" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>XAxis</name></member>
      <member refid="class_gf_vec3i_1a906542da8ca6c5aca4cd083d918b13c8" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>YAxis</name></member>
      <member refid="class_gf_vec3i_1a6242b6f12883e09d9812f9c9325e391e" prot="public" virt="non-virtual"><scope>GfVec3i</scope><name>ZAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
