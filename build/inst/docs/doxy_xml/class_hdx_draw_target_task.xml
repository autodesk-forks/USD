<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_draw_target_task" kind="class" language="C++" prot="public">
    <compoundname>HdxDrawTargetTask</compoundname>
    <basecompoundref prot="public" virt="non-virtual">HdTask</basecompoundref>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hdx_draw_target_task_1a92d1e15e595b360de661a5f54c1308cc" prot="private" static="no">
        <type>std::vector&lt; _RenderPassInfo &gt;</type>
        <definition>using _RenderPassInfoVector =  std::vector&lt;_RenderPassInfo&gt;</definition>
        <argsstring></argsstring>
        <name>_RenderPassInfoVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="80" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_draw_target_task_1abf8fea42f9e6e3c782edc9c4ad390ddb" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned _currentDrawTargetSetVersion</definition>
        <argsstring></argsstring>
        <name>_currentDrawTargetSetVersion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="101" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1ad1637a8bd506208405df07e31072a072" prot="private" static="no" mutable="no">
        <type>_RenderPassInfoVector</type>
        <definition>_RenderPassInfoVector _renderPassesInfo</definition>
        <argsstring></argsstring>
        <name>_renderPassesInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="102" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a374ddd71960bddbe4a01e054cbc33a6a" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GfVec4f _overrideColor</definition>
        <argsstring></argsstring>
        <name>_overrideColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="109" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a932508f50243bfdfdf1f5c3812012786" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GfVec4f _wireframeColor</definition>
        <argsstring></argsstring>
        <name>_wireframeColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="110" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a451459d83f8cce551055b83056ef0d5d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _enableLighting</definition>
        <argsstring></argsstring>
        <name>_enableLighting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="111" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a568ec7fc714141771eab1da5922ab09f" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float _alphaThreshold</definition>
        <argsstring></argsstring>
        <name>_alphaThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="112" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1af204098936f564ab24932f1a33a6462b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _depthBiasUseDefault</definition>
        <argsstring></argsstring>
        <name>_depthBiasUseDefault</name>
        <briefdescription>
<para>Polygon Offset State. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="115" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a4eea0df5f98ad3efb90cbb1a36be1afa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _depthBiasEnable</definition>
        <argsstring></argsstring>
        <name>_depthBiasEnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="116" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a5dccaa4271b7eeb4e67928b8f472a6cf" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float _depthBiasConstantFactor</definition>
        <argsstring></argsstring>
        <name>_depthBiasConstantFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="117" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a13a331d77028a2ef88d10edfed1db01b" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float _depthBiasSlopeFactor</definition>
        <argsstring></argsstring>
        <name>_depthBiasSlopeFactor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="118" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a7f9688a0ba63e9543e670368ac8b13bb" prot="private" static="no" mutable="no">
        <type>HdCompareFunction</type>
        <definition>HdCompareFunction _depthFunc</definition>
        <argsstring></argsstring>
        <name>_depthFunc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="120" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a0d10aa0ce3116bd56034c5e4cbcb3c5b" prot="private" static="no" mutable="no">
        <type>HdCullStyle</type>
        <definition>HdCullStyle _cullStyle</definition>
        <argsstring></argsstring>
        <name>_cullStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="123" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1a9425f5aaa36a8bad0ac7b261ccf95a2c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _enableSampleAlphaToCoverage</definition>
        <argsstring></argsstring>
        <name>_enableSampleAlphaToCoverage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="126" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_draw_target_task_1ab4240dbb25786ef0d69778ecf3ed6ca1" prot="private" static="no" mutable="no">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _renderTags</definition>
        <argsstring></argsstring>
        <name>_renderTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="127" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_draw_target_task_1ae7e246eaa14e8dcf48c6f2fa8530cecc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxDrawTargetTask</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdxDrawTargetTask</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1ab794cac9b8b86b3ab84c8b7997bf3dd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API ~HdxDrawTargetTask</definition>
        <argsstring>() override</argsstring>
        <name>~HdxDrawTargetTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1a65601d5e0b6d93e1df6b6618c5c040e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Sync</definition>
        <argsstring>(HdSceneDelegate *delegate, HdTaskContext *ctx, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Sync the render pass resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Prepare</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex) override</argsstring>
        <name>Prepare</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
<para>Prepare the tasks resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Execute</definition>
        <argsstring>(HdTaskContext *ctx) override</argsstring>
        <name>Execute</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Execute render pass task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1a4866840907139a2339b5eeb0d5fd8bce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>HDX_API const TfTokenVector&amp; GetRenderTags</definition>
        <argsstring>() const override</argsstring>
        <name>GetRenderTags</name>
        <briefdescription>
<para>Collect Render Tags used by the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_hdx_draw_target_task_1a6e5677991b6eb60e5ca5f5ebd92f3f3f" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_RenderPassInfoVector</type>
        <definition>static _RenderPassInfoVector _ComputeRenderPassInfos</definition>
        <argsstring>(HdRenderIndex *renderIndex)</argsstring>
        <name>_ComputeRenderPassInfos</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1a0c7a45224930cc67a8e4bb6e08518d1c" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_CameraInfo</type>
        <definition>static _CameraInfo _ComputeCameraInfo</definition>
        <argsstring>(const HdRenderIndex &amp;renderIndex, const HdStDrawTarget *drawTarget)</argsstring>
        <name>_ComputeCameraInfo</name>
        <param>
          <type>const <ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> &amp;</type>
          <declname>renderIndex</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_st_draw_target" kindref="compound">HdStDrawTarget</ref> *</type>
          <declname>drawTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1a25b771284fda15dc49953b49de8fef89" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _UpdateLightingContext</definition>
        <argsstring>(const _CameraInfo &amp;cameraInfo, GlfSimpleLightingContextConstRefPtr const &amp;srcContext, GlfSimpleLightingContextRefPtr const &amp;ctx)</argsstring>
        <name>_UpdateLightingContext</name>
        <param>
          <type>const _CameraInfo &amp;</type>
          <declname>cameraInfo</declname>
        </param>
        <param>
          <type>GlfSimpleLightingContextConstRefPtr const &amp;</type>
          <declname>srcContext</declname>
        </param>
        <param>
          <type>GlfSimpleLightingContextRefPtr const &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1ac3651ddb7e8ca5059dc3e9f84d20d097" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _UpdateRenderPass</definition>
        <argsstring>(_RenderPassInfo *info)</argsstring>
        <name>_UpdateRenderPass</name>
        <param>
          <type>_RenderPassInfo *</type>
          <declname>info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="98" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_draw_target_task_1a1fe1b3ee1936b985a4b3218e4c066b74" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _UpdateRenderPassState</definition>
        <argsstring>(const HdRenderIndex &amp;renderIndex, const _CameraInfo &amp;cameraInfo, HdStSimpleLightingShaderSharedPtr const &amp;lightingShader, const HdStDrawTargetRenderPassState *srcState, HdStRenderPassStateSharedPtr const &amp;state) const</argsstring>
        <name>_UpdateRenderPassState</name>
        <param>
          <type>const <ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> &amp;</type>
          <declname>renderIndex</declname>
        </param>
        <param>
          <type>const _CameraInfo &amp;</type>
          <declname>cameraInfo</declname>
        </param>
        <param>
          <type>HdStSimpleLightingShaderSharedPtr const &amp;</type>
          <declname>lightingShader</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_st_draw_target_render_pass_state" kindref="compound">HdStDrawTargetRenderPassState</ref> *</type>
          <declname>srcState</declname>
        </param>
        <param>
          <type>HdStRenderPassStateSharedPtr const &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1afab2f1b947dc718905817788f9be737f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxDrawTargetTask</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxDrawTargetTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1aa6c0c9a6a7293022d5455223b86bd632" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxDrawTargetTask</definition>
        <argsstring>(const HdxDrawTargetTask &amp;)=delete</argsstring>
        <name>HdxDrawTargetTask</name>
        <param>
          <type>const HdxDrawTargetTask &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_draw_target_task_1a80cad0b1a033852c245616d60b5211eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdxDrawTargetTask &amp;</type>
        <definition>HdxDrawTargetTask&amp; operator=</definition>
        <argsstring>(const HdxDrawTargetTask &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const HdxDrawTargetTask &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/drawTargetTask.h" line="131" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/hdx/drawTargetTask.h" line="50" column="1" bodyfile="pxr/imaging/hdx/drawTargetTask.h" bodystart="49" bodyend="132"/>
    <listofallmembers>
      <member refid="class_hdx_draw_target_task_1a568ec7fc714141771eab1da5922ab09f" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_alphaThreshold</name></member>
      <member refid="class_hdx_draw_target_task_1a0c7a45224930cc67a8e4bb6e08518d1c" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_ComputeCameraInfo</name></member>
      <member refid="class_hdx_draw_target_task_1a6e5677991b6eb60e5ca5f5ebd92f3f3f" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_ComputeRenderPassInfos</name></member>
      <member refid="class_hdx_draw_target_task_1a0d10aa0ce3116bd56034c5e4cbcb3c5b" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_cullStyle</name></member>
      <member refid="class_hdx_draw_target_task_1abf8fea42f9e6e3c782edc9c4ad390ddb" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_currentDrawTargetSetVersion</name></member>
      <member refid="class_hdx_draw_target_task_1a5dccaa4271b7eeb4e67928b8f472a6cf" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_depthBiasConstantFactor</name></member>
      <member refid="class_hdx_draw_target_task_1a4eea0df5f98ad3efb90cbb1a36be1afa" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_depthBiasEnable</name></member>
      <member refid="class_hdx_draw_target_task_1a13a331d77028a2ef88d10edfed1db01b" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_depthBiasSlopeFactor</name></member>
      <member refid="class_hdx_draw_target_task_1af204098936f564ab24932f1a33a6462b" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_depthBiasUseDefault</name></member>
      <member refid="class_hdx_draw_target_task_1a7f9688a0ba63e9543e670368ac8b13bb" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_depthFunc</name></member>
      <member refid="class_hdx_draw_target_task_1a451459d83f8cce551055b83056ef0d5d" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_enableLighting</name></member>
      <member refid="class_hdx_draw_target_task_1a9425f5aaa36a8bad0ac7b261ccf95a2c" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_enableSampleAlphaToCoverage</name></member>
      <member refid="class_hd_task_1ab4beed642380f0353cf158cef16c4f32" prot="protected" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_GetDriver</name></member>
      <member refid="class_hd_task_1a2ceca911620546c6b245d903f9ec5f78" prot="protected" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_GetTaskContextData</name></member>
      <member refid="class_hd_task_1a50bb64fcb3404805df436ad9e12ddd3c" prot="protected" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_GetTaskParams</name></member>
      <member refid="class_hd_task_1a7db1af254e4af3fbffc974c19968a6e7" prot="protected" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_GetTaskRenderTags</name></member>
      <member refid="class_hd_task_1a6f03b9a9e34350db200b0a7f252eaf8e" prot="protected" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_HasTaskContextData</name></member>
      <member refid="class_hdx_draw_target_task_1a374ddd71960bddbe4a01e054cbc33a6a" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_overrideColor</name></member>
      <member refid="class_hdx_draw_target_task_1ad1637a8bd506208405df07e31072a072" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_renderPassesInfo</name></member>
      <member refid="class_hdx_draw_target_task_1a92d1e15e595b360de661a5f54c1308cc" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_RenderPassInfoVector</name></member>
      <member refid="class_hdx_draw_target_task_1ab4240dbb25786ef0d69778ecf3ed6ca1" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_renderTags</name></member>
      <member refid="class_hdx_draw_target_task_1a25b771284fda15dc49953b49de8fef89" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_UpdateLightingContext</name></member>
      <member refid="class_hdx_draw_target_task_1ac3651ddb7e8ca5059dc3e9f84d20d097" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_UpdateRenderPass</name></member>
      <member refid="class_hdx_draw_target_task_1a1fe1b3ee1936b985a4b3218e4c066b74" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_UpdateRenderPassState</name></member>
      <member refid="class_hdx_draw_target_task_1a932508f50243bfdfdf1f5c3812012786" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>_wireframeColor</name></member>
      <member refid="class_hdx_draw_target_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>Execute</name></member>
      <member refid="class_hd_task_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>GetId</name></member>
      <member refid="class_hd_task_1ade051cd8ff53a108b7e6c27be99a5e3a" prot="public" virt="virtual"><scope>HdxDrawTargetTask</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hdx_draw_target_task_1a4866840907139a2339b5eeb0d5fd8bce" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>GetRenderTags</name></member>
      <member refid="class_hd_task_1a3df864dcce7538c1b130b105af7c2406" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>HdTask</name></member>
      <member refid="class_hdx_draw_target_task_1ae7e246eaa14e8dcf48c6f2fa8530cecc" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>HdxDrawTargetTask</name></member>
      <member refid="class_hdx_draw_target_task_1afab2f1b947dc718905817788f9be737f" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>HdxDrawTargetTask</name></member>
      <member refid="class_hdx_draw_target_task_1aa6c0c9a6a7293022d5455223b86bd632" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>HdxDrawTargetTask</name></member>
      <member refid="class_hdx_draw_target_task_1a80cad0b1a033852c245616d60b5211eb" prot="private" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>operator=</name></member>
      <member refid="class_hdx_draw_target_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>Prepare</name></member>
      <member refid="class_hdx_draw_target_task_1a65601d5e0b6d93e1df6b6618c5c040e0" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>Sync</name></member>
      <member refid="class_hd_task_1a08a2f7cc6d3767c8081f5098bd113d66" prot="public" virt="virtual"><scope>HdxDrawTargetTask</scope><name>~HdTask</name></member>
      <member refid="class_hdx_draw_target_task_1ab794cac9b8b86b3ab84c8b7997bf3dd2" prot="public" virt="non-virtual"><scope>HdxDrawTargetTask</scope><name>~HdxDrawTargetTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
