<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="converter_8h" kind="file" language="C++">
    <compoundname>converter.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="js_2value_8h" local="yes">pxr/base/js/value.h</includes>
    <includes refid="base_2tf_2diagnostic_8h" local="yes">pxr/base/tf/diagnostic.h</includes>
    <incdepgraph>
      <node id="43682">
        <label>locale</label>
      </node>
      <node id="43684">
        <label>stdarg.h</label>
      </node>
      <node id="43660">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="43661" relation="include">
        </childnode>
      </node>
      <node id="43667">
        <label>cstdint</label>
      </node>
      <node id="43681">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43676" relation="include">
        </childnode>
        <childnode refid="43675" relation="include">
        </childnode>
        <childnode refid="43661" relation="include">
        </childnode>
        <childnode refid="43682" relation="include">
        </childnode>
        <childnode refid="43683" relation="include">
        </childnode>
        <childnode refid="43664" relation="include">
        </childnode>
      </node>
      <node id="43656">
        <label>pxr/base/js/converter.h</label>
        <link refid="converter_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43658" relation="include">
        </childnode>
        <childnode refid="43670" relation="include">
        </childnode>
      </node>
      <node id="43664">
        <label>string</label>
      </node>
      <node id="43675">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43660" relation="include">
        </childnode>
      </node>
      <node id="43663">
        <label>map</label>
      </node>
      <node id="43657">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="43680">
        <label>stddef.h</label>
      </node>
      <node id="43677">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43661" relation="include">
        </childnode>
      </node>
      <node id="43658">
        <label>pxr/base/js/value.h</label>
        <link refid="js_2value_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43659" relation="include">
        </childnode>
        <childnode refid="43662" relation="include">
        </childnode>
        <childnode refid="43666" relation="include">
        </childnode>
        <childnode refid="43667" relation="include">
        </childnode>
        <childnode refid="43668" relation="include">
        </childnode>
        <childnode refid="43664" relation="include">
        </childnode>
        <childnode refid="43669" relation="include">
        </childnode>
        <childnode refid="43665" relation="include">
        </childnode>
      </node>
      <node id="43683">
        <label>any</label>
      </node>
      <node id="43659">
        <label>pxr/base/js/api.h</label>
        <link refid="base_2js_2api_8h_source"/>
        <childnode refid="43660" relation="include">
        </childnode>
      </node>
      <node id="43665">
        <label>vector</label>
      </node>
      <node id="43676">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="43660" relation="include">
        </childnode>
      </node>
      <node id="43671">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43672" relation="include">
        </childnode>
        <childnode refid="43673" relation="include">
        </childnode>
        <childnode refid="43664" relation="include">
        </childnode>
      </node>
      <node id="43661">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="43662">
        <label>pxr/base/js/types.h</label>
        <link refid="base_2js_2types_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43663" relation="include">
        </childnode>
        <childnode refid="43664" relation="include">
        </childnode>
        <childnode refid="43665" relation="include">
        </childnode>
      </node>
      <node id="43678">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="43661" relation="include">
        </childnode>
      </node>
      <node id="43679">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43676" relation="include">
        </childnode>
        <childnode refid="43673" relation="include">
        </childnode>
        <childnode refid="43680" relation="include">
        </childnode>
      </node>
      <node id="43674">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43675" relation="include">
        </childnode>
        <childnode refid="43676" relation="include">
        </childnode>
        <childnode refid="43677" relation="include">
        </childnode>
        <childnode refid="43678" relation="include">
        </childnode>
        <childnode refid="43679" relation="include">
        </childnode>
        <childnode refid="43680" relation="include">
        </childnode>
      </node>
      <node id="43669">
        <label>type_traits</label>
      </node>
      <node id="43672">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="43660" relation="include">
        </childnode>
      </node>
      <node id="43673">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="43661" relation="include">
        </childnode>
      </node>
      <node id="43666">
        <label>algorithm</label>
      </node>
      <node id="43668">
        <label>memory</label>
      </node>
      <node id="43670">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="43657" relation="include">
        </childnode>
        <childnode refid="43671" relation="include">
        </childnode>
        <childnode refid="43674" relation="include">
        </childnode>
        <childnode refid="43676" relation="include">
        </childnode>
        <childnode refid="43678" relation="include">
        </childnode>
        <childnode refid="43681" relation="include">
        </childnode>
        <childnode refid="43680" relation="include">
        </childnode>
        <childnode refid="43684" relation="include">
        </childnode>
        <childnode refid="43664" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_js_value_type_converter" prot="public">JsValueTypeConverter</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="converter_8h_1a18c83b54603acaa05d0cfd1788b9febe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ValueType</type>
          </param>
          <param>
            <type>class MapType</type>
          </param>
        </templateparamlist>
        <type>ValueType</type>
        <definition>ValueType JsConvertToContainerType</definition>
        <argsstring>(const JsValue &amp;value)</argsstring>
        <name>JsConvertToContainerType</name>
        <param>
          <type>const <ref refid="class_js_value" kindref="compound">JsValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>value</computeroutput> converted recursively to the template and map types given by the <computeroutput>ValueType</computeroutput> and <computeroutput>MapType</computeroutput> parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_js_value_type_converter" kindref="compound">JsValueTypeConverter</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/converter.h" line="139" column="1" bodyfile="pxr/base/js/converter.h" bodystart="139" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_JS_CONVERTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_JS_CONVERTER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="js_2value_8h" kindref="compound">pxr/base/js/value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2diagnostic_8h" kindref="compound">pxr/base/tf/diagnostic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>\c<sp/>JsValue<sp/>\p<sp/>value<sp/>holding<sp/>an<sp/>\c<sp/>int<sp/>value<sp/>to<sp/>a<sp/>\c<sp/>ValueType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>holding<sp/>an<sp/>\c<sp/>int64_t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseInt64<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Js_ValueToInt<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueType<sp/>Apply(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_js_value" kindref="compound">JsValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.<ref refid="class_js_value_1a53df780b4da2704309069dd050fc9fe0" kindref="member">IsUInt64</ref>()<sp/>?</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType(value.<ref refid="class_js_value_1a6c17db1172eb2cd3674138c8ae691647" kindref="member">GetUInt64</ref>())<sp/>:<sp/>ValueType(value.<ref refid="class_js_value_1a0453440e79ab4acfb5345452b0927490" kindref="member">GetInt64</ref>());</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal">};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Converts<sp/>a<sp/>\c<sp/>JsValue<sp/>\p<sp/>value<sp/>holding<sp/>an<sp/>\c<sp/>int<sp/>value<sp/>to<sp/>a<sp/>\c<sp/>ValueType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>holding<sp/>an<sp/>\c<sp/>int.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Js_ValueToInt&lt;ValueType,<sp/>MapType,<sp/>false&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueType<sp/>Apply(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_js_value" kindref="compound">JsValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType(value.<ref refid="class_js_value_1adf213be89fbf135b490749a5f871966e" kindref="member">GetInt</ref>());</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseInt64<sp/>=<sp/>true&gt;</highlight></codeline>
<codeline lineno="79" refid="class_js_value_type_converter" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_js_value_type_converter" kindref="compound">JsValueTypeConverter</ref></highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;ValueType&gt;<sp/>VectorType;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="86" refid="class_js_value_type_converter_1a443a2ddd4c15b2c621eb5426a65ad7da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueType<sp/><ref refid="class_js_value_type_converter_1a443a2ddd4c15b2c621eb5426a65ad7da" kindref="member">Convert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_js_value" kindref="compound">JsValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ToValueType(value);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ValueType<sp/>_ToValueType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_js_value" kindref="compound">JsValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value.<ref refid="class_js_value_1a5bdb02b78aa2cd9dce8bed57dce3f6dc" kindref="member">GetType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::ObjectType:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType(_ObjectToMap(value.<ref refid="class_js_value_1a43e479f66e0cb3f87c591a90f5e745a0" kindref="member">GetJsObject</ref>()));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::ArrayType:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType(_ArrayToVector(value.<ref refid="class_js_value_1a03244c292435edbb6c2f36e6ab59a423" kindref="member">GetJsArray</ref>()));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::BoolType:</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType(value.<ref refid="class_js_value_1ab5f5e590539b2b7a1214d6d7119c7896" kindref="member">GetBool</ref>());</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::StringType:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType(value.<ref refid="class_js_value_1a83dddc5abb4512372df955e54c3111ac" kindref="member">GetString</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::RealType:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType(value.<ref refid="class_js_value_1a6a5b1377733a61b28f6c4fa2f5753e8e" kindref="member">GetReal</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::IntType:</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Js_ValueToInt&lt;ValueType,<sp/>MapType,<sp/>UseInt64&gt;::Apply(value);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>JsValue::NullType:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1ga8265ac46fd87777ee25efaf4a3290bbe" kindref="member">TF_CODING_ERROR</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>value<sp/>type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ValueType();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MapType<sp/>_ObjectToMap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JsObject&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MapType<sp/>result;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>p<sp/>:<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[p.first]<sp/>=<sp/>_ToValueType(p.second);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>VectorType<sp/>_ArrayToVector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JsArray&amp;<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VectorType<sp/>result;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.reserve(array.size());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>value<sp/>:<sp/>array)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(_ToValueType(value));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ValueType,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>MapType&gt;</highlight></codeline>
<codeline lineno="139" refid="converter_8h_1a18c83b54603acaa05d0cfd1788b9febe" refkind="member"><highlight class="normal">ValueType<sp/><ref refid="converter_8h_1a18c83b54603acaa05d0cfd1788b9febe" kindref="member">JsConvertToContainerType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_js_value" kindref="compound">JsValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_js_value_type_converter_1a443a2ddd4c15b2c621eb5426a65ad7da" kindref="member">JsValueTypeConverter&lt;ValueType, MapType&gt;::Convert</ref>(value);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_JS_CONVERTER_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/js/converter.h"/>
  </compounddef>
</doxygen>
