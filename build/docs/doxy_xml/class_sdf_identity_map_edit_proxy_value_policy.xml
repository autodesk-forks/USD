<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_identity_map_edit_proxy_value_policy" kind="class" language="C++" prot="public">
    <compoundname>SdfIdentityMapEditProxyValuePolicy</compoundname>
    <includes refid="map_edit_proxy_8h" local="no">mapEditProxy.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_identity_map_edit_proxy_value_policy_1a685b7a70f0ae1f2881cf8937d951c3b1" prot="public" static="no">
        <type>T</type>
        <definition>typedef T Type</definition>
        <argsstring></argsstring>
        <name>Type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="64" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_identity_map_edit_proxy_value_policy_1a4a22cdc65e2aa2fea83f2e9f4cd69104" prot="public" static="no">
        <type>Type::key_type</type>
        <definition>typedef Type::key_type key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="65" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_identity_map_edit_proxy_value_policy_1a3cc15ef27a27a0c6a87da32dcc94840c" prot="public" static="no">
        <type>Type::mapped_type</type>
        <definition>typedef Type::mapped_type mapped_type</definition>
        <argsstring></argsstring>
        <name>mapped_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="66" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_identity_map_edit_proxy_value_policy_1a94631bee195912115c57d27724060db9" prot="public" static="no">
        <type>Type::value_type</type>
        <definition>typedef Type::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="67" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_sdf_identity_map_edit_proxy_value_policy_1a3e5edea1b284d7ca3eaed462c8376287" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Type &amp;</type>
        <definition>static const Type&amp; CanonicalizeType</definition>
        <argsstring>(const SdfSpecHandle &amp;, const Type &amp;x)</argsstring>
        <name>CanonicalizeType</name>
        <param>
          <type>const SdfSpecHandle &amp;</type>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Canonicalize an entire <computeroutput>Type</computeroutput> object. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>Type</computeroutput> must be convertible to the type of <computeroutput>x</computeroutput>. The return value must be convertible to a <computeroutput>Type</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="72" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_identity_map_edit_proxy_value_policy_1a48e2c6bae6bb4b384e335f8e83620ec1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const key_type &amp;</type>
        <definition>static const key_type&amp; CanonicalizeKey</definition>
        <argsstring>(const SdfSpecHandle &amp;, const key_type &amp;x)</argsstring>
        <name>CanonicalizeKey</name>
        <param>
          <type>const SdfSpecHandle &amp;</type>
        </param>
        <param>
          <type>const key_type &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Canonicalize a key. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>key_type</computeroutput> must be convertible to the type of <computeroutput>x</computeroutput>. The return value must be convertible to a <computeroutput>key_type</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="79" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_identity_map_edit_proxy_value_policy_1a148593aaa3f63bc4bafdab2b1cfe42f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const mapped_type &amp;</type>
        <definition>static const mapped_type&amp; CanonicalizeValue</definition>
        <argsstring>(const SdfSpecHandle &amp;, const mapped_type &amp;x)</argsstring>
        <name>CanonicalizeValue</name>
        <param>
          <type>const SdfSpecHandle &amp;</type>
        </param>
        <param>
          <type>const mapped_type &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Canonicalize a value. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>mapped_type</computeroutput> must be convertible to the type of <computeroutput>x</computeroutput>. The return value must be convertible to a <computeroutput>mapped_type</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="87" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_identity_map_edit_proxy_value_policy_1a885879b9789eed6c5aba54bcaab29547" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>static const value_type&amp; CanonicalizePair</definition>
        <argsstring>(const SdfSpecHandle &amp;, const value_type &amp;x)</argsstring>
        <name>CanonicalizePair</name>
        <param>
          <type>const SdfSpecHandle &amp;</type>
        </param>
        <param>
          <type>const value_type &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Canonicalize a key/value pair. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>value_type</computeroutput> must be convertible to the type of <computeroutput>x</computeroutput>. The return value must be convertible to a <computeroutput>value_type</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/mapEditProxy.h" line="96" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="96" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A value policy for <computeroutput><ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfMapEditProxy</ref></computeroutput> that does nothing. </para>
    </briefdescription>
    <detaileddescription>
<para>A <computeroutput><ref refid="class_sdf_map_edit_proxy" kindref="compound">SdfMapEditProxy</ref></computeroutput> value policy converts incoming keys and values into a canonical form used for storage. This is useful if you have a key where multiple values are equivalent for the purposes of the map but don&apos;t compare equal and you can store any one of the equivalent values. Note that the policy is only used on inputs to the map proxy; it&apos;s never used when returning keys or values from the proxy. </para>
    </detaileddescription>
    <location file="pxr/usd/sdf/mapEditProxy.h" line="62" column="1" bodyfile="pxr/usd/sdf/mapEditProxy.h" bodystart="62" bodyend="101"/>
    <listofallmembers>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a48e2c6bae6bb4b384e335f8e83620ec1" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>CanonicalizeKey</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a885879b9789eed6c5aba54bcaab29547" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>CanonicalizePair</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a3e5edea1b284d7ca3eaed462c8376287" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>CanonicalizeType</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a148593aaa3f63bc4bafdab2b1cfe42f0" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>CanonicalizeValue</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a4a22cdc65e2aa2fea83f2e9f4cd69104" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>key_type</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a3cc15ef27a27a0c6a87da32dcc94840c" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>mapped_type</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a685b7a70f0ae1f2881cf8937d951c3b1" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>Type</name></member>
      <member refid="class_sdf_identity_map_edit_proxy_value_policy_1a94631bee195912115c57d27724060db9" prot="public" virt="non-virtual"><scope>SdfIdentityMapEditProxyValuePolicy</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
