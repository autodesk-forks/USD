<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="filesystem_discovery_helpers_8h" kind="file" language="C++">
    <compoundname>filesystemDiscoveryHelpers.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2ndr_2api_8h" local="yes">pxr/usd/ndr/api.h</includes>
    <includes refid="usd_2ndr_2declare_8h" local="yes">pxr/usd/ndr/declare.h</includes>
    <includes refid="node_discovery_result_8h" local="yes">pxr/usd/ndr/nodeDiscoveryResult.h</includes>
    <includes local="no">functional</includes>
    <incdepgraph>
      <node id="158910">
        <label>atomic</label>
      </node>
      <node id="158891">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="158892" relation="include">
        </childnode>
        <childnode refid="158893" relation="include">
        </childnode>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158877" relation="include">
        </childnode>
        <childnode refid="158894" relation="include">
        </childnode>
      </node>
      <node id="158914">
        <label>functional</label>
      </node>
      <node id="158876">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="158877" relation="include">
        </childnode>
      </node>
      <node id="158893">
        <label>cstdint</label>
      </node>
      <node id="158909">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="158877" relation="include">
        </childnode>
      </node>
      <node id="158873">
        <label>pxr/usd/ndr/filesystemDiscoveryHelpers.h</label>
        <link refid="filesystem_discovery_helpers_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158875" relation="include">
        </childnode>
        <childnode refid="158878" relation="include">
        </childnode>
        <childnode refid="158913" relation="include">
        </childnode>
        <childnode refid="158914" relation="include">
        </childnode>
      </node>
      <node id="158895">
        <label>cmath</label>
      </node>
      <node id="158889">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158883" relation="include">
        </childnode>
        <childnode refid="158890" relation="include">
        </childnode>
        <childnode refid="158891" relation="include">
        </childnode>
        <childnode refid="158896" relation="include">
        </childnode>
        <childnode refid="158897" relation="include">
        </childnode>
      </node>
      <node id="158908">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158909" relation="include">
        </childnode>
        <childnode refid="158893" relation="include">
        </childnode>
        <childnode refid="158904" relation="include">
        </childnode>
        <childnode refid="158897" relation="include">
        </childnode>
      </node>
      <node id="158899">
        <label>string</label>
      </node>
      <node id="158882">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158876" relation="include">
        </childnode>
      </node>
      <node id="158900">
        <label>map</label>
      </node>
      <node id="158892">
        <label>cinttypes</label>
      </node>
      <node id="158874">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="158907">
        <label>unordered_set</label>
      </node>
      <node id="158875">
        <label>pxr/usd/ndr/api.h</label>
        <link refid="usd_2ndr_2api_8h_source"/>
        <childnode refid="158876" relation="include">
        </childnode>
      </node>
      <node id="158887">
        <label>stddef.h</label>
      </node>
      <node id="158883">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158877" relation="include">
        </childnode>
      </node>
      <node id="158894">
        <label>sys/types.h</label>
      </node>
      <node id="158913">
        <label>pxr/usd/ndr/nodeDiscoveryResult.h</label>
        <link refid="node_discovery_result_8h_source"/>
        <childnode refid="158878" relation="include">
        </childnode>
      </node>
      <node id="158879">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158880" relation="include">
        </childnode>
        <childnode refid="158881" relation="include">
        </childnode>
        <childnode refid="158888" relation="include">
        </childnode>
        <childnode refid="158906" relation="include">
        </childnode>
        <childnode refid="158908" relation="include">
        </childnode>
        <childnode refid="158910" relation="include">
        </childnode>
        <childnode refid="158911" relation="include">
        </childnode>
        <childnode refid="158899" relation="include">
        </childnode>
        <childnode refid="158905" relation="include">
        </childnode>
        <childnode refid="158902" relation="include">
        </childnode>
      </node>
      <node id="158890">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158877" relation="include">
        </childnode>
        <childnode refid="158891" relation="include">
        </childnode>
        <childnode refid="158895" relation="include">
        </childnode>
      </node>
      <node id="158905">
        <label>vector</label>
      </node>
      <node id="158880">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="158876" relation="include">
        </childnode>
      </node>
      <node id="158897">
        <label>utility</label>
      </node>
      <node id="158877">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="158884">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="158877" relation="include">
        </childnode>
      </node>
      <node id="158888">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158889" relation="include">
        </childnode>
        <childnode refid="158880" relation="include">
        </childnode>
        <childnode refid="158898" relation="include">
        </childnode>
        <childnode refid="158899" relation="include">
        </childnode>
        <childnode refid="158900" relation="include">
        </childnode>
        <childnode refid="158901" relation="include">
        </childnode>
        <childnode refid="158902" relation="include">
        </childnode>
        <childnode refid="158903" relation="include">
        </childnode>
        <childnode refid="158904" relation="include">
        </childnode>
        <childnode refid="158897" relation="include">
        </childnode>
        <childnode refid="158905" relation="include">
        </childnode>
      </node>
      <node id="158896">
        <label>math.h</label>
      </node>
      <node id="158911">
        <label>iosfwd</label>
      </node>
      <node id="158885">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158880" relation="include">
        </childnode>
        <childnode refid="158886" relation="include">
        </childnode>
        <childnode refid="158887" relation="include">
        </childnode>
      </node>
      <node id="158912">
        <label>unordered_map</label>
      </node>
      <node id="158881">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158882" relation="include">
        </childnode>
        <childnode refid="158880" relation="include">
        </childnode>
        <childnode refid="158883" relation="include">
        </childnode>
        <childnode refid="158884" relation="include">
        </childnode>
        <childnode refid="158885" relation="include">
        </childnode>
        <childnode refid="158887" relation="include">
        </childnode>
      </node>
      <node id="158878">
        <label>pxr/usd/ndr/declare.h</label>
        <link refid="usd_2ndr_2declare_8h"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158875" relation="include">
        </childnode>
        <childnode refid="158879" relation="include">
        </childnode>
        <childnode refid="158901" relation="include">
        </childnode>
        <childnode refid="158899" relation="include">
        </childnode>
        <childnode refid="158912" relation="include">
        </childnode>
        <childnode refid="158907" relation="include">
        </childnode>
        <childnode refid="158905" relation="include">
        </childnode>
      </node>
      <node id="158904">
        <label>type_traits</label>
      </node>
      <node id="158902">
        <label>set</label>
      </node>
      <node id="158886">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="158877" relation="include">
        </childnode>
      </node>
      <node id="158898">
        <label>cstring</label>
      </node>
      <node id="158901">
        <label>memory</label>
      </node>
      <node id="158906">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="158874" relation="include">
        </childnode>
        <childnode refid="158877" relation="include">
        </childnode>
        <childnode refid="158907" relation="include">
        </childnode>
      </node>
      <node id="158903">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_ndr_discovery_uri" prot="public">NdrDiscoveryUri</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="filesystem_discovery_helpers_8h_1aa133864941b8fb3d3a0a44758bb8819c" prot="public" static="no">
        <type>std::function&lt; bool(const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;identifier, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *family, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *name, NdrVersion *version)&gt;</type>
        <definition>using NdrParseIdentifierFn =  std::function&lt; bool (const TfToken &amp;identifier, TfToken *family, TfToken *name, NdrVersion *version)&gt;</definition>
        <argsstring></argsstring>
        <name>NdrParseIdentifierFn</name>
        <briefdescription>
<para>Type of a function that can be used to parse a discovery result&apos;s identifier into its family, name, and version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscoveryHelpers.h" line="50" column="1" bodyfile="pxr/usd/ndr/filesystemDiscoveryHelpers.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="filesystem_discovery_helpers_8h_1a3c70b3b18985fbc47407412b4c61c524" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_ndr_discovery_uri" kindref="compound">NdrDiscoveryUri</ref> &gt;</type>
        <definition>using NdrDiscoveryUriVec =  std::vector&lt;NdrDiscoveryUri&gt;</definition>
        <argsstring></argsstring>
        <name>NdrDiscoveryUriVec</name>
        <briefdescription>
<para>A vector of URI/resolved URI structs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscoveryHelpers.h" line="119" column="1" bodyfile="pxr/usd/ndr/filesystemDiscoveryHelpers.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="filesystem_discovery_helpers_8h_1aa9511324cdab5dccbb4367c143086fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API bool</type>
        <definition>NDR_API bool NdrFsHelpersSplitShaderIdentifier</definition>
        <argsstring>(const TfToken &amp;identifier, TfToken *family, TfToken *name, NdrVersion *version)</argsstring>
        <name>NdrFsHelpersSplitShaderIdentifier</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> *</type>
          <declname>family</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>NdrVersion *</type>
          <declname>version</declname>
        </param>
        <briefdescription>
<para>Given a shader&apos;s <computeroutput>identifier</computeroutput> token, computes the corresponding <ref refid="class_ndr_node" kindref="compound">NdrNode</ref>&apos;s family name, implementation name and shader version (as NdrVersion). </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para><computeroutput>family</computeroutput> is the prefix of <computeroutput>identifier</computeroutput> up to and not including the first underscore.</para>
</listitem><listitem><para><computeroutput>version</computeroutput> is the suffix of <computeroutput>identifier</computeroutput> comprised of one or two integers representing the major and minor version numbers.</para>
</listitem><listitem><para><computeroutput>name</computeroutput> is the string we get by joining <emphasis>family</emphasis> with everything that&apos;s in between <emphasis>family</emphasis> and <emphasis>version</emphasis> with an underscore.</para>
</listitem></itemizedlist>
</para>
<para>Returns true if <computeroutput>identifier</computeroutput> is valid and was successfully split into the different components.</para>
<para><simplesect kind="note"><para>The python version of this function returns a tuple containing (famiyName, implementationName, version). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscoveryHelpers.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="filesystem_discovery_helpers_8h_1a235c530023a4e18615c54baffb809bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API NdrNodeDiscoveryResultVec</type>
        <definition>NDR_API NdrNodeDiscoveryResultVec NdrFsHelpersDiscoverNodes</definition>
        <argsstring>(const NdrStringVec &amp;searchPaths, const NdrStringVec &amp;allowedExtensions, bool followSymlinks=true, const NdrDiscoveryPluginContext *context=nullptr, const NdrParseIdentifierFn &amp;parseIdentifierFn=NdrFsHelpersSplitShaderIdentifier)</argsstring>
        <name>NdrFsHelpersDiscoverNodes</name>
        <param>
          <type>const NdrStringVec &amp;</type>
          <declname>searchPaths</declname>
        </param>
        <param>
          <type>const NdrStringVec &amp;</type>
          <declname>allowedExtensions</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>followSymlinks</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="class_ndr_discovery_plugin_context" kindref="compound">NdrDiscoveryPluginContext</ref> *</type>
          <declname>context</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>const <ref refid="filesystem_discovery_helpers_8h_1aa133864941b8fb3d3a0a44758bb8819c" kindref="member">NdrParseIdentifierFn</ref> &amp;</type>
          <declname>parseIdentifierFn</declname>
          <defval><ref refid="filesystem_discovery_helpers_8h_1aa9511324cdab5dccbb4367c143086fdb" kindref="member">NdrFsHelpersSplitShaderIdentifier</ref></defval>
        </param>
        <briefdescription>
<para>Returns a vector of discovery results that have been found while walking the given search paths. </para>
        </briefdescription>
        <detaileddescription>
<para>Each path in <computeroutput>searchPaths</computeroutput> is walked recursively, optionally following symlinks if <computeroutput>followSymlinks</computeroutput> is true, looking for files that match one of the provided <computeroutput>allowedExtensions</computeroutput>. These files are represented in the discovery results that are returned.</para>
<para>The identifier for each discovery result is the base name of the represented file with the extension removed. The <computeroutput>parseIdentifierFn</computeroutput> is used to parse the family, name, and version from the identifier that will set in the file&apos;s discovery result. By default, NdrFsHelpersSplitShaderIdentifier is used to parse the identifier, but the family/name/version parsing behavior can be changed by passing a custom parseIdentifierFn. Any identifiers that cannot be parsed by whatever the parseIdentifierFn will be considered invalid and not added as a discovery result. Note that the version for every discovery result returned by this function will be naively marked as being default even if multiple versions with the same name are found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscoveryHelpers.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="filesystem_discovery_helpers_8h_1af174984b37cc06795958af4e0c371371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API <ref refid="filesystem_discovery_helpers_8h_1a3c70b3b18985fbc47407412b4c61c524" kindref="member">NdrDiscoveryUriVec</ref></type>
        <definition>NDR_API NdrDiscoveryUriVec NdrFsHelpersDiscoverFiles</definition>
        <argsstring>(const NdrStringVec &amp;searchPaths, const NdrStringVec &amp;allowedExtensions, bool followSymlinks=true)</argsstring>
        <name>NdrFsHelpersDiscoverFiles</name>
        <param>
          <type>const NdrStringVec &amp;</type>
          <declname>searchPaths</declname>
        </param>
        <param>
          <type>const NdrStringVec &amp;</type>
          <declname>allowedExtensions</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>followSymlinks</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a vector of discovered URIs (as both the unresolved URI and the resolved URI) that are found while walking the given search paths. </para>
        </briefdescription>
        <detaileddescription>
<para>Each path in <computeroutput>searchPaths</computeroutput> is walked recursively, optionally following symlinks if <computeroutput>followSymlinks</computeroutput> is true, looking for files that match one of the provided <computeroutput>allowedExtensions</computeroutput>. These files&apos; unresolved and resolved URIs are returned in the result vector.</para>
<para>This is an alternative to NdrFsHelpersDiscoverNodes for discovery plugins that want to search for files that are not meant to be returned by discovery themselves, but can be parsed to generate the discovery results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/filesystemDiscoveryHelpers.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides utilities that the default filesystem discovery plugin uses. </para>
    </briefdescription>
    <detaileddescription>
<para>If a custom filesystem discovery plugin is needed, these can be used to fill in a large chunk of the functionality. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2018<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_NDR_FILESYSTEM_DISCOVERY_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_NDR_FILESYSTEM_DISCOVERY_HELPERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/ndr/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="usd_2ndr_2declare_8h" kindref="compound">pxr/usd/ndr/declare.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/ndr/nodeDiscoveryResult.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ndr_discovery_plugin_context" kindref="compound">NdrDiscoveryPluginContext</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"></codeline>
<codeline lineno="50"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="filesystem_discovery_helpers_8h_1aa133864941b8fb3d3a0a44758bb8819c" kindref="member">NdrParseIdentifierFn</ref><sp/>=<sp/>std::function&lt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>&amp;identifier,<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>*family,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>*name,</highlight></codeline>
<codeline lineno="54" refid="filesystem_discovery_helpers_8h_1aa133864941b8fb3d3a0a44758bb8819c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NdrVersion<sp/>*version)&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">NDR_API<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><ref refid="filesystem_discovery_helpers_8h_1aa9511324cdab5dccbb4367c143086fdb" kindref="member">NdrFsHelpersSplitShaderIdentifier</ref>(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>&amp;identifier,<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>*family,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>*name,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>NdrVersion<sp/>*version);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">NDR_API</highlight></codeline>
<codeline lineno="100"><highlight class="normal">NdrNodeDiscoveryResultVec</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><ref refid="filesystem_discovery_helpers_8h_1a235c530023a4e18615c54baffb809bd2" kindref="member">NdrFsHelpersDiscoverNodes</ref>(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NdrStringVec&amp;<sp/>searchPaths,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NdrStringVec&amp;<sp/>allowedExtensions,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>followSymlinks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ndr_discovery_plugin_context" kindref="compound">NdrDiscoveryPluginContext</ref>*<sp/>context<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="filesystem_discovery_helpers_8h_1aa133864941b8fb3d3a0a44758bb8819c" kindref="member">NdrParseIdentifierFn</ref><sp/>&amp;parseIdentifierFn<sp/>=<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filesystem_discovery_helpers_8h_1aa9511324cdab5dccbb4367c143086fdb" kindref="member">NdrFsHelpersSplitShaderIdentifier</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="struct_ndr_discovery_uri" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ndr_discovery_uri" kindref="compound">NdrDiscoveryUri</ref><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>uri;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>resolvedUri;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="filesystem_discovery_helpers_8h_1a3c70b3b18985fbc47407412b4c61c524" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="filesystem_discovery_helpers_8h_1a3c70b3b18985fbc47407412b4c61c524" kindref="member">NdrDiscoveryUriVec</ref><sp/>=<sp/>std::vector&lt;NdrDiscoveryUri&gt;;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">NDR_API</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="filesystem_discovery_helpers_8h_1a3c70b3b18985fbc47407412b4c61c524" kindref="member">NdrDiscoveryUriVec</ref></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><ref refid="filesystem_discovery_helpers_8h_1af174984b37cc06795958af4e0c371371" kindref="member">NdrFsHelpersDiscoverFiles</ref>(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NdrStringVec&amp;<sp/>searchPaths,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NdrStringVec&amp;<sp/>allowedExtensions,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>followSymlinks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_USD_NDR_FILESYSTEM_DISCOVERY_HELPERS_H</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/ndr/filesystemDiscoveryHelpers.h"/>
  </compounddef>
</doxygen>
