<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_children_view_8h" kind="file" language="C++">
    <compoundname>pyChildrenView.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="children_view_8h" local="yes">pxr/usd/sdf/childrenView.h</includes>
    <includes refid="demangle_8h" local="yes">pxr/base/arch/demangle.h</includes>
    <includes refid="base_2tf_2py_utils_8h" local="yes">pxr/base/tf/pyUtils.h</includes>
    <includes refid="string_utils_8h" local="yes">pxr/base/tf/stringUtils.h</includes>
    <includes local="no">boost/python.hpp</includes>
    <incdepgraph>
      <node id="185176">
        <label>list</label>
      </node>
      <node id="185098">
        <label>locale</label>
      </node>
      <node id="185122">
        <label>atomic</label>
      </node>
      <node id="185134">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185135" relation="include">
        </childnode>
        <childnode refid="185122" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
      </node>
      <node id="185100">
        <label>stdarg.h</label>
      </node>
      <node id="185105">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="185106" relation="include">
        </childnode>
        <childnode refid="185107" relation="include">
        </childnode>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185108" relation="include">
        </childnode>
      </node>
      <node id="185169">
        <label>functional</label>
      </node>
      <node id="185151">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185152" relation="include">
        </childnode>
      </node>
      <node id="185078">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="185079" relation="include">
        </childnode>
      </node>
      <node id="185153">
        <label>pxr/base/tf/iterator.h</label>
        <link refid="base_2tf_2iterator_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185091" relation="include">
        </childnode>
        <childnode refid="185154" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
      </node>
      <node id="185132">
        <label>pxr/usd/sdf/pool.h</label>
        <link refid="pool_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185082" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185133" relation="include">
        </childnode>
        <childnode refid="185088" relation="include">
        </childnode>
        <childnode refid="185134" relation="include">
        </childnode>
        <childnode refid="185136" relation="include">
        </childnode>
        <childnode refid="185122" relation="include">
        </childnode>
        <childnode refid="185137" relation="include">
        </childnode>
      </node>
      <node id="185130">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="185154">
        <label>iterator</label>
      </node>
      <node id="185107">
        <label>cstdint</label>
      </node>
      <node id="185118">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185091" relation="include">
        </childnode>
        <childnode refid="185102" relation="include">
        </childnode>
        <childnode refid="185119" relation="include">
        </childnode>
        <childnode refid="185120" relation="include">
        </childnode>
        <childnode refid="185123" relation="include">
        </childnode>
        <childnode refid="185124" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185085" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185125" relation="include">
        </childnode>
      </node>
      <node id="185128">
        <label>pxr/base/tf/declarePtrs.h</label>
        <link refid="declare_ptrs_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185129" relation="include">
        </childnode>
        <childnode refid="185118" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185097">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185092" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185098" relation="include">
        </childnode>
        <childnode refid="185099" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
      </node>
      <node id="185133">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="185079" relation="include">
        </childnode>
      </node>
      <node id="185109">
        <label>cmath</label>
      </node>
      <node id="185103">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185094" relation="include">
        </childnode>
        <childnode refid="185104" relation="include">
        </childnode>
        <childnode refid="185105" relation="include">
        </childnode>
        <childnode refid="185110" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
      </node>
      <node id="185166">
        <label>boost/python/handle.hpp</label>
      </node>
      <node id="185158">
        <label>pxr/usd/sdf/pathNode.h</label>
        <link refid="path_node_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185159" relation="include">
        </childnode>
        <childnode refid="185140" relation="include">
        </childnode>
        <childnode refid="185160" relation="include">
        </childnode>
        <childnode refid="185130" relation="include">
        </childnode>
      </node>
      <node id="185136">
        <label>tbb/concurrent_queue.h</label>
      </node>
      <node id="185120">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185121" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
      </node>
      <node id="185143">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185133" relation="include">
        </childnode>
        <childnode refid="185107" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
      </node>
      <node id="185175">
        <label>cstdarg</label>
      </node>
      <node id="185084">
        <label>string</label>
      </node>
      <node id="185159">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185114" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
      </node>
      <node id="185092">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185078" relation="include">
        </childnode>
      </node>
      <node id="185167">
        <label>boost/python/object.hpp</label>
      </node>
      <node id="185113">
        <label>map</label>
      </node>
      <node id="185106">
        <label>cinttypes</label>
      </node>
      <node id="185138">
        <label>pxr/usd/sdf/tokens.h</label>
        <link refid="usd_2sdf_2tokens_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185139" relation="include">
        </childnode>
      </node>
      <node id="185075">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="185142">
        <label>unordered_set</label>
      </node>
      <node id="185082">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185083" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185085" relation="include">
        </childnode>
        <childnode refid="185086" relation="include">
        </childnode>
      </node>
      <node id="185157">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="185078" relation="include">
        </childnode>
      </node>
      <node id="185077">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="185078" relation="include">
        </childnode>
      </node>
      <node id="185096">
        <label>stddef.h</label>
      </node>
      <node id="185094">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
      </node>
      <node id="185135">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="185079" relation="include">
        </childnode>
      </node>
      <node id="185074">
        <label>pxr/usd/sdf/pyChildrenView.h</label>
        <link refid="py_children_view_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185076" relation="include">
        </childnode>
        <childnode refid="185082" relation="include">
        </childnode>
        <childnode refid="185162" relation="include">
        </childnode>
        <childnode refid="185173" relation="include">
        </childnode>
        <childnode refid="185178" relation="include">
        </childnode>
      </node>
      <node id="185165">
        <label>pxr/base/tf/pyInterpreter.h</label>
        <link refid="py_interpreter_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185166" relation="include">
        </childnode>
        <childnode refid="185167" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
      </node>
      <node id="185121">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185105" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185122" relation="include">
        </childnode>
      </node>
      <node id="185123">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185085" relation="include">
        </childnode>
      </node>
      <node id="185127">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
      </node>
      <node id="185163">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="185133" relation="include">
        </childnode>
        <childnode refid="185098" relation="include">
        </childnode>
        <childnode refid="185164" relation="include">
        </childnode>
      </node>
      <node id="185081">
        <label>pxr/usd/sdf/declareHandles.h</label>
        <link refid="declare_handles_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185082" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185088" relation="include">
        </childnode>
        <childnode refid="185101" relation="include">
        </childnode>
        <childnode refid="185128" relation="include">
        </childnode>
        <childnode refid="185115" relation="include">
        </childnode>
        <childnode refid="185085" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
        <childnode refid="185130" relation="include">
        </childnode>
      </node>
      <node id="185149">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="185131">
        <label>pxr/usd/sdf/path.h</label>
        <link refid="path_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185132" relation="include">
        </childnode>
        <childnode refid="185138" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185150" relation="include">
        </childnode>
        <childnode refid="185140" relation="include">
        </childnode>
        <childnode refid="185156" relation="include">
        </childnode>
        <childnode refid="185130" relation="include">
        </childnode>
        <childnode refid="185155" relation="include">
        </childnode>
        <childnode refid="185154" relation="include">
        </childnode>
        <childnode refid="185115" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
        <childnode refid="185158" relation="include">
        </childnode>
      </node>
      <node id="185099">
        <label>any</label>
      </node>
      <node id="185170">
        <label>boost/python/dict.hpp</label>
      </node>
      <node id="185108">
        <label>sys/types.h</label>
      </node>
      <node id="185101">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185088" relation="include">
        </childnode>
        <childnode refid="185102" relation="include">
        </childnode>
        <childnode refid="185118" relation="include">
        </childnode>
        <childnode refid="185126" relation="include">
        </childnode>
        <childnode refid="185082" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
      </node>
      <node id="185174">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185082" relation="include">
        </childnode>
        <childnode refid="185102" relation="include">
        </childnode>
        <childnode refid="185135" relation="include">
        </childnode>
        <childnode refid="185123" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185144" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185085" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185085">
        <label>typeinfo</label>
      </node>
      <node id="185080">
        <label>pxr/usd/sdf/children.h</label>
        <link refid="children_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185081" relation="include">
        </childnode>
        <childnode refid="185131" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185129">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185119" relation="include">
        </childnode>
        <childnode refid="185118" relation="include">
        </childnode>
        <childnode refid="185103" relation="include">
        </childnode>
        <childnode refid="185126" relation="include">
        </childnode>
        <childnode refid="185101" relation="include">
        </childnode>
        <childnode refid="185125" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
      </node>
      <node id="185178">
        <label>boost/python.hpp</label>
      </node>
      <node id="185140">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185091" relation="include">
        </childnode>
        <childnode refid="185102" relation="include">
        </childnode>
        <childnode refid="185141" relation="include">
        </childnode>
        <childnode refid="185143" relation="include">
        </childnode>
        <childnode refid="185122" relation="include">
        </childnode>
        <childnode refid="185144" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
        <childnode refid="185115" relation="include">
        </childnode>
      </node>
      <node id="185160">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185122" relation="include">
        </childnode>
        <childnode refid="185161" relation="include">
        </childnode>
        <childnode refid="185107" relation="include">
        </childnode>
        <childnode refid="185144" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185104">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185105" relation="include">
        </childnode>
        <childnode refid="185109" relation="include">
        </childnode>
      </node>
      <node id="185117">
        <label>vector</label>
      </node>
      <node id="185093">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="185078" relation="include">
        </childnode>
      </node>
      <node id="185168">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185163" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
      </node>
      <node id="185171">
        <label>boost/python/extract.hpp</label>
      </node>
      <node id="185076">
        <label>pxr/usd/sdf/childrenView.h</label>
        <link refid="children_view_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185077" relation="include">
        </childnode>
        <childnode refid="185080" relation="include">
        </childnode>
        <childnode refid="185153" relation="include">
        </childnode>
        <childnode refid="185155" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185111">
        <label>utility</label>
      </node>
      <node id="185177">
        <label>sstream</label>
      </node>
      <node id="185089">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185083" relation="include">
        </childnode>
        <childnode refid="185090" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
      </node>
      <node id="185119">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
      </node>
      <node id="185145">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="185079">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="185156">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185157" relation="include">
        </childnode>
        <childnode refid="185135" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
      </node>
      <node id="185139">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185135" relation="include">
        </childnode>
        <childnode refid="185134" relation="include">
        </childnode>
        <childnode refid="185140" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
        <childnode refid="185145" relation="include">
        </childnode>
        <childnode refid="185146" relation="include">
        </childnode>
        <childnode refid="185147" relation="include">
        </childnode>
        <childnode refid="185148" relation="include">
        </childnode>
        <childnode refid="185149" relation="include">
        </childnode>
      </node>
      <node id="185087">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="185079" relation="include">
        </childnode>
      </node>
      <node id="185102">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185103" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185112" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185113" relation="include">
        </childnode>
        <childnode refid="185114" relation="include">
        </childnode>
        <childnode refid="185115" relation="include">
        </childnode>
        <childnode refid="185086" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185110">
        <label>math.h</label>
      </node>
      <node id="185173">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185092" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185105" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185174" relation="include">
        </childnode>
        <childnode refid="185175" relation="include">
        </childnode>
        <childnode refid="185112" relation="include">
        </childnode>
        <childnode refid="185176" relation="include">
        </childnode>
        <childnode refid="185115" relation="include">
        </childnode>
        <childnode refid="185177" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185116" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
      </node>
      <node id="185162">
        <label>pxr/base/tf/pyUtils.h</label>
        <link refid="base_2tf_2py_utils_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185118" relation="include">
        </childnode>
        <childnode refid="185129" relation="include">
        </childnode>
        <childnode refid="185091" relation="include">
        </childnode>
        <childnode refid="185135" relation="include">
        </childnode>
        <childnode refid="185163" relation="include">
        </childnode>
        <childnode refid="185165" relation="include">
        </childnode>
        <childnode refid="185168" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185169" relation="include">
        </childnode>
        <childnode refid="185085" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
        <childnode refid="185117" relation="include">
        </childnode>
        <childnode refid="185170" relation="include">
        </childnode>
        <childnode refid="185171" relation="include">
        </childnode>
        <childnode refid="185166" relation="include">
        </childnode>
        <childnode refid="185167" relation="include">
        </childnode>
        <childnode refid="185172" relation="include">
        </childnode>
      </node>
      <node id="185144">
        <label>iosfwd</label>
      </node>
      <node id="185161">
        <label>cstdlib</label>
      </node>
      <node id="185095">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185090" relation="include">
        </childnode>
        <childnode refid="185096" relation="include">
        </childnode>
      </node>
      <node id="185164">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="185125">
        <label>cstddef</label>
      </node>
      <node id="185124">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185114" relation="include">
        </childnode>
      </node>
      <node id="185152">
        <label>unordered_map</label>
      </node>
      <node id="185091">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185092" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185094" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185095" relation="include">
        </childnode>
        <childnode refid="185096" relation="include">
        </childnode>
      </node>
      <node id="185146">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="185137">
        <label>thread</label>
      </node>
      <node id="185150">
        <label>pxr/base/tf/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185103" relation="include">
        </childnode>
        <childnode refid="185151" relation="include">
        </childnode>
        <childnode refid="185141" relation="include">
        </childnode>
        <childnode refid="185153" relation="include">
        </childnode>
        <childnode refid="185155" relation="include">
        </childnode>
        <childnode refid="185154" relation="include">
        </childnode>
        <childnode refid="185113" relation="include">
        </childnode>
        <childnode refid="185115" relation="include">
        </childnode>
        <childnode refid="185111" relation="include">
        </childnode>
      </node>
      <node id="185148">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="185116">
        <label>type_traits</label>
      </node>
      <node id="185115">
        <label>set</label>
      </node>
      <node id="185172">
        <label>boost/python/type_id.hpp</label>
      </node>
      <node id="185083">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="185078" relation="include">
        </childnode>
      </node>
      <node id="185090">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="185079" relation="include">
        </childnode>
      </node>
      <node id="185155">
        <label>algorithm</label>
      </node>
      <node id="185112">
        <label>cstring</label>
      </node>
      <node id="185126">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185127" relation="include">
        </childnode>
        <childnode refid="185118" relation="include">
        </childnode>
        <childnode refid="185122" relation="include">
        </childnode>
      </node>
      <node id="185114">
        <label>memory</label>
      </node>
      <node id="185088">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185089" relation="include">
        </childnode>
        <childnode refid="185091" relation="include">
        </childnode>
        <childnode refid="185093" relation="include">
        </childnode>
        <childnode refid="185087" relation="include">
        </childnode>
        <childnode refid="185097" relation="include">
        </childnode>
        <childnode refid="185096" relation="include">
        </childnode>
        <childnode refid="185100" relation="include">
        </childnode>
        <childnode refid="185084" relation="include">
        </childnode>
      </node>
      <node id="185141">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="185075" relation="include">
        </childnode>
        <childnode refid="185079" relation="include">
        </childnode>
        <childnode refid="185142" relation="include">
        </childnode>
      </node>
      <node id="185086">
        <label>typeindex</label>
      </node>
      <node id="185147">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_sdf_py_wrap_children_view" prot="public">SdfPyWrapChildrenView</innerclass>
    <innerclass refid="struct_sdf_py_wrap_children_view_1_1___extract_item" prot="private">SdfPyWrapChildrenView::_ExtractItem</innerclass>
    <innerclass refid="struct_sdf_py_wrap_children_view_1_1___extract_key" prot="private">SdfPyWrapChildrenView::_ExtractKey</innerclass>
    <innerclass refid="struct_sdf_py_wrap_children_view_1_1___extract_value" prot="private">SdfPyWrapChildrenView::_ExtractValue</innerclass>
    <innerclass refid="class_sdf_py_wrap_children_view_1_1___iterator" prot="private">SdfPyWrapChildrenView::_Iterator</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_SDF_PY_CHILDREN_VIEW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_SDF_PY_CHILDREN_VIEW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="children_view_8h" kindref="compound">pxr/usd/sdf/childrenView.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="demangle_8h" kindref="compound">pxr/base/arch/demangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2py_utils_8h" kindref="compound">pxr/base/tf/pyUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string_utils_8h" kindref="compound">pxr/base/tf/stringUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>_View&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SdfPyWrapChildrenView<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>_View<sp/>View;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>View::ChildPolicy<sp/>ChildPolicy;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>View::Predicate<sp/>Predicate;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>View::key_type<sp/>key_type;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>View::value_type<sp/>value_type;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>View::const_iterator<sp/>const_iterator;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>SdfPyWrapChildrenView&lt;View&gt;<sp/>This;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>SdfPyWrapChildrenView()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TfPyWrapOnce&lt;View&gt;(&amp;This::_Wrap);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ExtractItem<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>const_iterator&amp;<sp/>i)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::make_tuple(x.key(i),<sp/>*i);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ExtractKey<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>const_iterator&amp;<sp/>i)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object(x.key(i));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ExtractValue<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>const_iterator&amp;<sp/>i)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object(*i);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_Iterator<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Iterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::python::object&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_object(object),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_owner(boost::python::extract&lt;const<sp/>View&amp;&gt;(object)),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cur(_owner.begin()),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_end(_owner.end())</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Iterator&lt;E&gt;<sp/>GetCopy()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::object<sp/>GetNext()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_cur<sp/>==<sp/>_end)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_2tf_2py_utils_8h_1a273f9be81ea5c786d03b1189d39f1af8" kindref="member">TfPyThrowStopIteration</ref>(</highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>ChildrenProxy<sp/>iteration&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::object<sp/>result<sp/>=<sp/>E::Get(_owner,<sp/>_cur);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_cur;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::object<sp/>_object;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>_owner;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>_cur;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>_end;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Wrap()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/>_GetName();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>Using<sp/>the<sp/>value<sp/>iterator<sp/>for<sp/>the<sp/>__iter__<sp/>method<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>consistent<sp/>with<sp/>Python<sp/>dicts<sp/>(which<sp/>iterate<sp/>over<sp/>keys).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>However,<sp/>we&apos;re<sp/>emulating<sp/>TfPyKeyedVector,<sp/>which<sp/>iterates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>over<sp/>values<sp/>as<sp/>a<sp/>vector<sp/>would.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scope<sp/>thisScope<sp/>=</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;View&gt;(name.c_str(),<sp/>no_init)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__repr__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetRepr)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__len__&quot;</highlight><highlight class="normal">,<sp/>&amp;View::size)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetItemByKey)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__getitem__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetItemByIndex)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;get&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_PyGet)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__contains__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_HasKey)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__contains__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_HasValue)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/>&amp;This::_GetValueIterator)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;items&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetItemIterator)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;keys&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetKeyIterator)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;values&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_GetValueIterator)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_FindIndexByKey)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal">,<sp/>&amp;This::_FindIndexByValue)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;_Iterator&lt;_ExtractItem&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Iterator&quot;</highlight><highlight class="normal">).c_str(),<sp/>no_init)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::template<sp/>_Iterator&lt;_ExtractItem&gt;::GetCopy)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::template<sp/>_Iterator&lt;_ExtractItem&gt;::GetNext)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;_Iterator&lt;_ExtractKey&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_KeyIterator&quot;</highlight><highlight class="normal">).c_str(),<sp/>no_init)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::template<sp/>_Iterator&lt;_ExtractKey&gt;::GetCopy)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::template<sp/>_Iterator&lt;_ExtractKey&gt;::GetNext)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>class_&lt;_Iterator&lt;_ExtractValue&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((name<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_ValueIterator&quot;</highlight><highlight class="normal">).c_str(),<sp/>no_init)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__iter__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::template<sp/>_Iterator&lt;_ExtractValue&gt;::GetCopy)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(</highlight><highlight class="stringliteral">&quot;__next__&quot;</highlight><highlight class="normal">,<sp/>&amp;This::template<sp/>_Iterator&lt;_ExtractValue&gt;::GetNext)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>_GetName()</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ChildrenView_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArchGetDemangled&lt;ChildPolicy&gt;()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ArchGetDemangled&lt;Predicate&gt;();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;::&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(name,<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/>_GetRepr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>result(</highlight><highlight class="stringliteral">&quot;{&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>x.empty())<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>i<sp/>=<sp/>x.begin(),<sp/>n<sp/>=<sp/>x.end();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="base_2tf_2py_utils_8h_1adf73f4221c9b96206ee651ccb9901360" kindref="member">TfPyRepr</ref>(x.key(i))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="base_2tf_2py_utils_8h_1adf73f4221c9b96206ee651ccb9901360" kindref="member">TfPyRepr</ref>(*i);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++i<sp/>!=<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="base_2tf_2py_utils_8h_1adf73f4221c9b96206ee651ccb9901360" kindref="member">TfPyRepr</ref>(x.key(i))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="base_2tf_2py_utils_8h_1adf73f4221c9b96206ee651ccb9901360" kindref="member">TfPyRepr</ref>(*i);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;}&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type<sp/>_GetItemByKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>key)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>i<sp/>=<sp/>x.find(key);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>x.end())<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_2tf_2py_utils_8h_1a08b6c0e5b16e3f01cd762e67b8a66732" kindref="member">TfPyThrowIndexError</ref>(<ref refid="base_2tf_2py_utils_8h_1adf73f4221c9b96206ee651ccb9901360" kindref="member">TfPyRepr</ref>(key));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_type();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*i;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type<sp/>_GetItemByIndex(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>x.size())<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="base_2tf_2py_utils_8h_1a08b6c0e5b16e3f01cd762e67b8a66732" kindref="member">TfPyThrowIndexError</ref>(</highlight><highlight class="stringliteral">&quot;list<sp/>index<sp/>out<sp/>of<sp/>range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x[index];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>_PyGet(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>key)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>i<sp/>=<sp/>x.find(key);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>x.end()<sp/>?<sp/>boost::python::object()<sp/>:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::object(*i);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_HasKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>key)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.find(key)<sp/>!=<sp/>x.end();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_HasValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type&amp;<sp/>value)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.find(value)<sp/>!=<sp/>x.end();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>_Iterator&lt;_ExtractItem&gt;<sp/>_GetItemIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::python::object&amp;<sp/>x)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Iterator&lt;_ExtractItem&gt;(x);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>_Iterator&lt;_ExtractKey&gt;<sp/>_GetKeyIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::python::object&amp;<sp/>x)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Iterator&lt;_ExtractKey&gt;(x);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>_Iterator&lt;_ExtractValue&gt;<sp/>_GetValueIterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::python::object&amp;<sp/>x)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Iterator&lt;_ExtractValue&gt;(x);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>E&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::list<sp/>_Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::list<sp/>result;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(const_iterator<sp/>i<sp/>=<sp/>x.begin(),<sp/>n<sp/>=<sp/>x.end();<sp/>i<sp/>!=<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.append(E::Get(x,<sp/>i));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_FindIndexByKey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>key)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>std::distance(x.begin(),<sp/>x.find(key));</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>x.size()<sp/>?<sp/>-1<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_FindIndexByValue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>View&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type&amp;<sp/>value)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>std::distance(x.begin(),<sp/>x.find(value));</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>==<sp/>x.size()<sp/>?<sp/>-1<sp/>:<sp/>i;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal">};</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_USD_SDF_PY_CHILDREN_VIEW_H</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/sdf/pyChildrenView.h"/>
  </compounddef>
</doxygen>
