<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848" kind="struct" language="C++" prot="public">
    <compoundname>TfTypeFunctions&lt; Ptr&lt; const T &gt;, std::enable_if_t&lt; std::is_base_of&lt; TfWeakPtrFacadeBase, Ptr&lt; const T &gt; &gt;::value &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>Ptr</declname>
        <defname>Ptr</defname>
      </param>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a249966907c3fc21ffb26c12c3919809a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>static const T* GetRawPtr</definition>
        <argsstring>(const Ptr&lt; const T &gt; &amp;t)</argsstring>
        <name>GetRawPtr</name>
        <param>
          <type>const Ptr&lt; const T &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/weakPtrFacade.h" line="403" column="1" bodyfile="pxr/base/tf/weakPtrFacade.h" bodystart="403" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a0e6f0bd8275c3d8ffd6100804c484c84" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Ptr&lt; const T &gt;</type>
        <definition>static Ptr&lt;const T&gt; ConstructFromRawPtr</definition>
        <argsstring>(const T *ptr)</argsstring>
        <name>ConstructFromRawPtr</name>
        <param>
          <type>const T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/weakPtrFacade.h" line="407" column="1" bodyfile="pxr/base/tf/weakPtrFacade.h" bodystart="407" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a00d7829272640cdde2c8df99fbf04b1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsNull</definition>
        <argsstring>(const Ptr&lt; const T &gt; &amp;t)</argsstring>
        <name>IsNull</name>
        <param>
          <type>const Ptr&lt; const T &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/weakPtrFacade.h" line="411" column="1" bodyfile="pxr/base/tf/weakPtrFacade.h" bodystart="411" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a4fbea45137874b190325e21b2e1d4245" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Class_Object_MUST_Be_Passed_By_Address</definition>
        <argsstring>()</argsstring>
        <name>Class_Object_MUST_Be_Passed_By_Address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/weakPtrFacade.h" line="415" column="1" bodyfile="pxr/base/tf/weakPtrFacade.h" bodystart="415" bodyend="415"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/weakPtrFacade.h" line="402" column="1" bodyfile="pxr/base/tf/weakPtrFacade.h" bodystart="398" bodyend="416"/>
    <listofallmembers>
      <member refid="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a4fbea45137874b190325e21b2e1d4245" prot="public" virt="non-virtual"><scope>TfTypeFunctions&lt; Ptr&lt; const T &gt;, std::enable_if_t&lt; std::is_base_of&lt; TfWeakPtrFacadeBase, Ptr&lt; const T &gt; &gt;::value &gt; &gt;</scope><name>Class_Object_MUST_Be_Passed_By_Address</name></member>
      <member refid="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a0e6f0bd8275c3d8ffd6100804c484c84" prot="public" virt="non-virtual"><scope>TfTypeFunctions&lt; Ptr&lt; const T &gt;, std::enable_if_t&lt; std::is_base_of&lt; TfWeakPtrFacadeBase, Ptr&lt; const T &gt; &gt;::value &gt; &gt;</scope><name>ConstructFromRawPtr</name></member>
      <member refid="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a249966907c3fc21ffb26c12c3919809a" prot="public" virt="non-virtual"><scope>TfTypeFunctions&lt; Ptr&lt; const T &gt;, std::enable_if_t&lt; std::is_base_of&lt; TfWeakPtrFacadeBase, Ptr&lt; const T &gt; &gt;::value &gt; &gt;</scope><name>GetRawPtr</name></member>
      <member refid="struct_tf_type_functions_3_01_ptr_3_01const_01_t_01_4_00_01std_1_1enable__if__t_3_01std_1_1is__baadb51f1345e6432336fb16acefb9848_1a00d7829272640cdde2c8df99fbf04b1c" prot="public" virt="non-virtual"><scope>TfTypeFunctions&lt; Ptr&lt; const T &gt;, std::enable_if_t&lt; std::is_base_of&lt; TfWeakPtrFacadeBase, Ptr&lt; const T &gt; &gt;::value &gt; &gt;</scope><name>IsNull</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
