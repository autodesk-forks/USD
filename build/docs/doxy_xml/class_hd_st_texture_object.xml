<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_texture_object" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HdStTextureObject</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; HdStTextureObject &gt;</basecompoundref>
    <derivedcompoundref refid="class_hd_st_field_texture_object" prot="public" virt="non-virtual">HdStFieldTextureObject</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_ptex_texture_object" prot="public" virt="non-virtual">HdStPtexTextureObject</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_udim_texture_object" prot="public" virt="non-virtual">HdStUdimTextureObject</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_uv_texture_object" prot="public" virt="non-virtual">HdStUvTextureObject</derivedcompoundref>
    <includes refid="texture_object_8h" local="no">textureObject.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_texture_object_1adb60a16d04cae3b821fac19f5285f72e" prot="private" static="no" mutable="no">
        <type>HdSt_TextureObjectRegistry *const</type>
        <definition>HdSt_TextureObjectRegistry* const _textureObjectRegistry</definition>
        <argsstring></argsstring>
        <name>_textureObjectRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="146" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_object_1a3b28b2489354746fe0312d30c82f3e41" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref></type>
        <definition>const HdStTextureIdentifier _textureId</definition>
        <argsstring></argsstring>
        <name>_textureId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="147" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_object_1ab830b0cb8af3219be130741962a9bac1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _targetMemory</definition>
        <argsstring></argsstring>
        <name>_targetMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="148" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_texture_object_1a9b0c375568692c0b631a211b92fb3fbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
        <definition>const HdStTextureIdentifier&amp; GetTextureIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>GetTextureIdentifier</name>
        <briefdescription>
<para>Get texture identifier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="65" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a1604cec087550d6968d8050060ef414f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetTargetMemory</definition>
        <argsstring>() const</argsstring>
        <name>GetTargetMemory</name>
        <briefdescription>
<para>Get the target memory for the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="69" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a6ded25aed3b249789c7d7ea438be2076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void SetTargetMemory</definition>
        <argsstring>(size_t)</argsstring>
        <name>SetTargetMemory</name>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
<para>Set the target memory (in bytes). </para>
        </briefdescription>
        <detaileddescription>
<para>When uploading the texture to the GPU, it will be downsampled to meet this target memory. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a83d17ce2f1f540385d21e9f81b3dae76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HDST_API bool</type>
        <definition>virtual HDST_API bool IsValid</definition>
        <argsstring>() const =0</argsstring>
        <name>IsValid</name>
        <reimplementedby refid="class_hd_st_udim_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9">IsValid</reimplementedby>
        <reimplementedby refid="class_hd_st_ptex_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9">IsValid</reimplementedby>
        <reimplementedby refid="class_hd_st_dynamic_uv_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9">IsValid</reimplementedby>
        <reimplementedby refid="class_hd_st_field_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9">IsValid</reimplementedby>
        <briefdescription>
<para>Is texture valid? Only correct after commit phase. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g., no file at given file path. Consulted by clients to determine whether to use the fallback value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a78a9450bcebcd13da2e1b124fe241a2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HDST_API HdTextureType</type>
        <definition>virtual HDST_API HdTextureType GetTextureType</definition>
        <argsstring>() const =0</argsstring>
        <name>GetTextureType</name>
        <reimplementedby refid="class_hd_st_udim_texture_object_1a719fe828133e23597e11ebc9b664529a">GetTextureType</reimplementedby>
        <reimplementedby refid="class_hd_st_ptex_texture_object_1a719fe828133e23597e11ebc9b664529a">GetTextureType</reimplementedby>
        <reimplementedby refid="class_hd_st_uv_texture_object_1a35b02f34208ef57a2e23cb5c85a9733d">GetTextureType</reimplementedby>
        <reimplementedby refid="class_hd_st_field_texture_object_1a719fe828133e23597e11ebc9b664529a">GetTextureType</reimplementedby>
        <briefdescription>
<para>Get texture type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a17729686cf8e982e36553a33d4c1ee7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API</type>
        <definition>virtual HDST_API ~HdStTextureObject</definition>
        <argsstring>()</argsstring>
        <name>~HdStTextureObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_texture_object_1a91c3c2ce5a3fe4bee791c2b2e539a436" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStTextureObject</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId, HdSt_TextureObjectRegistry *textureObjectRegistry)</argsstring>
        <name>HdStTextureObject</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>HdSt_TextureObjectRegistry *</type>
          <declname>textureObjectRegistry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1aecf3efc41bd50e8e4598620301ca7890" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
        <definition>HDST_API HdStResourceRegistry* _GetResourceRegistry</definition>
        <argsstring>() const</argsstring>
        <name>_GetResourceRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a5a7b6bc152ae4b062a7aa5f10e7d1bab" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_hgi" kindref="compound">Hgi</ref> *</type>
        <definition>HDST_API Hgi* _GetHgi</definition>
        <argsstring>() const</argsstring>
        <name>_GetHgi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a6ecfd8fb0c62f45e1a8978fb53a025f9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API std::string</type>
        <definition>HDST_API std::string _GetDebugName</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId) const</argsstring>
        <name>_GetDebugName</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a0328339184490ba78de07142381a31ce" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool _GetPremultiplyAlpha</definition>
        <argsstring>(const HdStSubtextureIdentifier *const subId) const</argsstring>
        <name>_GetPremultiplyAlpha</name>
        <param>
          <type>const <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> *const</type>
          <declname>subId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1aab2a86741f445fd5c73d0707912e8d11" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_hio_image_1ac1059a5d68d55a93cf748cc3cc11ba48" kindref="member">HioImage::SourceColorSpace</ref></type>
        <definition>HDST_API HioImage::SourceColorSpace _GetSourceColorSpace</definition>
        <argsstring>(const HdStSubtextureIdentifier *const subId) const</argsstring>
        <name>_GetSourceColorSpace</name>
        <param>
          <type>const <ref refid="class_hd_st_subtexture_identifier" kindref="compound">HdStSubtextureIdentifier</ref> *const</type>
          <declname>subId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a53f612f5be05577bafd37e4ca630aba8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HDST_API void</type>
        <definition>virtual HDST_API void _Load</definition>
        <argsstring>()=0</argsstring>
        <name>_Load</name>
        <reimplementedby refid="class_hd_st_udim_texture_object_1a113afdb59ba5d85e64ff870aeae4a575">_Load</reimplementedby>
        <reimplementedby refid="class_hd_st_ptex_texture_object_1a113afdb59ba5d85e64ff870aeae4a575">_Load</reimplementedby>
        <reimplementedby refid="class_hd_st_dynamic_uv_texture_object_1a113afdb59ba5d85e64ff870aeae4a575">_Load</reimplementedby>
        <reimplementedby refid="class_hd_st_field_texture_object_1a113afdb59ba5d85e64ff870aeae4a575">_Load</reimplementedby>
        <briefdescription>
<para>Load texture to CPU (thread-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1af9c7ea62423805492df6200fa37b0452" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HDST_API void</type>
        <definition>virtual HDST_API void _Commit</definition>
        <argsstring>()=0</argsstring>
        <name>_Commit</name>
        <reimplementedby refid="class_hd_st_udim_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698">_Commit</reimplementedby>
        <reimplementedby refid="class_hd_st_ptex_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698">_Commit</reimplementedby>
        <reimplementedby refid="class_hd_st_dynamic_uv_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698">_Commit</reimplementedby>
        <reimplementedby refid="class_hd_st_field_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698">_Commit</reimplementedby>
        <briefdescription>
<para>Commit texture to GPU (not thread-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a498f50b8bbbe346da6e294b0551ae51f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _AdjustTotalTextureMemory</definition>
        <argsstring>(int64_t memDiff)</argsstring>
        <name>_AdjustTotalTextureMemory</name>
        <param>
          <type>int64_t</type>
          <declname>memDiff</declname>
        </param>
        <briefdescription>
<para>Add signed number to total texture memory amount maintained by registry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a4bb9e349d6ac5c6cb101c3b76c444909" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _AddToTotalTextureMemory</definition>
        <argsstring>(const HgiTextureHandle &amp;texture)</argsstring>
        <name>_AddToTotalTextureMemory</name>
        <param>
          <type>const HgiTextureHandle &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Compute memory of texture and add to total texture memory amount maintained by registry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_object_1a656982d9323adc3d53decc0dcc731c35" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _SubtractFromTotalTextureMemory</definition>
        <argsstring>(const HgiTextureHandle &amp;texture)</argsstring>
        <name>_SubtractFromTotalTextureMemory</name>
        <param>
          <type>const HgiTextureHandle &amp;</type>
          <declname>texture</declname>
        </param>
        <briefdescription>
<para>Compute memory of texture and subtract to total texture memory amount maintained by registry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for a texture object. </para>
    </briefdescription>
    <detaileddescription>
<para>The actual GPU resources will be allocated during the commit phase. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3344">
        <label>HdStFieldTextureObject</label>
        <link refid="class_hd_st_field_texture_object"/>
        <childnode refid="3343" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3343">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
      <node id="3345">
        <label>HdStPtexTextureObject</label>
        <link refid="class_hd_st_ptex_texture_object"/>
        <childnode refid="3343" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3347">
        <label>HdStUvTextureObject</label>
        <link refid="class_hd_st_uv_texture_object"/>
        <childnode refid="3343" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3348">
        <label>HdStDynamicUvTextureObject</label>
        <link refid="class_hd_st_dynamic_uv_texture_object"/>
        <childnode refid="3347" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3346">
        <label>HdStUdimTextureObject</label>
        <link refid="class_hd_st_udim_texture_object"/>
        <childnode refid="3343" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/imaging/hdSt/textureObject.h" line="60" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="58" bodyend="149"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_object_1a4bb9e349d6ac5c6cb101c3b76c444909" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_AddToTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1a498f50b8bbbe346da6e294b0551ae51f" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_AdjustTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1af9c7ea62423805492df6200fa37b0452" prot="protected" virt="pure-virtual"><scope>HdStTextureObject</scope><name>_Commit</name></member>
      <member refid="class_hd_st_texture_object_1a6ecfd8fb0c62f45e1a8978fb53a025f9" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_GetDebugName</name></member>
      <member refid="class_hd_st_texture_object_1a5a7b6bc152ae4b062a7aa5f10e7d1bab" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_GetHgi</name></member>
      <member refid="class_hd_st_texture_object_1a0328339184490ba78de07142381a31ce" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_GetPremultiplyAlpha</name></member>
      <member refid="class_hd_st_texture_object_1aecf3efc41bd50e8e4598620301ca7890" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_GetResourceRegistry</name></member>
      <member refid="class_hd_st_texture_object_1aab2a86741f445fd5c73d0707912e8d11" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_GetSourceColorSpace</name></member>
      <member refid="class_hd_st_texture_object_1a53f612f5be05577bafd37e4ca630aba8" prot="protected" virt="pure-virtual"><scope>HdStTextureObject</scope><name>_Load</name></member>
      <member refid="class_hd_st_texture_object_1a656982d9323adc3d53decc0dcc731c35" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>_SubtractFromTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1ab830b0cb8af3219be130741962a9bac1" prot="private" virt="non-virtual"><scope>HdStTextureObject</scope><name>_targetMemory</name></member>
      <member refid="class_hd_st_texture_object_1a3b28b2489354746fe0312d30c82f3e41" prot="private" virt="non-virtual"><scope>HdStTextureObject</scope><name>_textureId</name></member>
      <member refid="class_hd_st_texture_object_1adb60a16d04cae3b821fac19f5285f72e" prot="private" virt="non-virtual"><scope>HdStTextureObject</scope><name>_textureObjectRegistry</name></member>
      <member refid="class_hd_st_texture_object_1a1604cec087550d6968d8050060ef414f" prot="public" virt="non-virtual"><scope>HdStTextureObject</scope><name>GetTargetMemory</name></member>
      <member refid="class_hd_st_texture_object_1a9b0c375568692c0b631a211b92fb3fbc" prot="public" virt="non-virtual"><scope>HdStTextureObject</scope><name>GetTextureIdentifier</name></member>
      <member refid="class_hd_st_texture_object_1a78a9450bcebcd13da2e1b124fe241a2b" prot="public" virt="pure-virtual"><scope>HdStTextureObject</scope><name>GetTextureType</name></member>
      <member refid="class_hd_st_texture_object_1a91c3c2ce5a3fe4bee791c2b2e539a436" prot="protected" virt="non-virtual"><scope>HdStTextureObject</scope><name>HdStTextureObject</name></member>
      <member refid="class_hd_st_texture_object_1a83d17ce2f1f540385d21e9f81b3dae76" prot="public" virt="pure-virtual"><scope>HdStTextureObject</scope><name>IsValid</name></member>
      <member refid="class_hd_st_texture_object_1a6ded25aed3b249789c7d7ea438be2076" prot="public" virt="non-virtual"><scope>HdStTextureObject</scope><name>SetTargetMemory</name></member>
      <member refid="class_hd_st_texture_object_1a17729686cf8e982e36553a33d4c1ee7c" prot="public" virt="virtual"><scope>HdStTextureObject</scope><name>~HdStTextureObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
