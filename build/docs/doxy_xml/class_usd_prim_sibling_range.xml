<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_prim_sibling_range" kind="class" language="C++" prot="public">
    <compoundname>UsdPrimSiblingRange</compoundname>
    <includes refid="prim_8h" local="no">prim.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_usd_prim_sibling_range_1a23bbbcfae8d55947f2f4b9a34b985f90" prot="public" static="no">
        <type><ref refid="class_usd_prim_sibling_iterator" kindref="compound">UsdPrimSiblingIterator</ref></type>
        <definition>typedef UsdPrimSiblingIterator iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Iterator type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2386" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_sibling_range_1ae916f05103b5bc8576d352c269d21709" prot="public" static="no">
        <type><ref refid="class_usd_prim_sibling_iterator" kindref="compound">UsdPrimSiblingIterator</ref></type>
        <definition>typedef UsdPrimSiblingIterator const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Const iterator type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2388" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_sibling_range_1ad319fc54a93a2c7058c70e40428ed2e2" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>Iterator difference type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2390" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_sibling_range_1aac03fcf05950c2c26b7e7d82a5cd6cb5" prot="public" static="no">
        <type><ref refid="class_usd_prim" kindref="compound">iterator::value_type</ref></type>
        <definition>typedef iterator::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Iterator value_type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2392" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_sibling_range_1a6e997adfc98892497219c84757d0bd6b" prot="public" static="no">
        <type><ref refid="class_usd_prim" kindref="compound">iterator::reference</ref></type>
        <definition>typedef iterator::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Iterator reference_type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2394" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2394" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_prim_sibling_range_1af0fd8c68745720f67d30822497b95a6c" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim_sibling_range_1a23bbbcfae8d55947f2f4b9a34b985f90" kindref="member">iterator</ref></type>
        <definition>iterator _begin</definition>
        <argsstring></argsstring>
        <name>_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2492" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_sibling_range_1a9be12e0f5a73536c636d14ce32f65a86" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim_sibling_range_1a23bbbcfae8d55947f2f4b9a34b985f90" kindref="member">iterator</ref></type>
        <definition>iterator _end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2493" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2493" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a42adbc6761dfeecc5d144b9ee2d22047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdPrimSiblingRange</definition>
        <argsstring>()=default</argsstring>
        <name>UsdPrimSiblingRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a602da6a0f5c2e2d2fca15aee5e47e525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPrimSiblingRange</definition>
        <argsstring>(UsdPrimSiblingIterator begin, UsdPrimSiblingIterator end)</argsstring>
        <name>UsdPrimSiblingRange</name>
        <param>
          <type><ref refid="class_usd_prim_sibling_iterator" kindref="compound">UsdPrimSiblingIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="class_usd_prim_sibling_iterator" kindref="compound">UsdPrimSiblingIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Construct with a pair of iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2399" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2399" bodyend="2401"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range_1a23bbbcfae8d55947f2f4b9a34b985f90" kindref="member">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>First iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2404" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2404" bodyend="2404"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a39112ae08f6ffc7ee58c6aa79772e094" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range_1ae916f05103b5bc8576d352c269d21709" kindref="member">const_iterator</ref></type>
        <definition>const_iterator cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
<para>First iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2407" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2407" bodyend="2407"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a68b688a51bd0cf6fb5bc2cba292209a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range_1a23bbbcfae8d55947f2f4b9a34b985f90" kindref="member">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Past-the-end iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2410" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2410" bodyend="2410"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a93791e61ab486b4022c389d634b4facc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range_1ae916f05103b5bc8576d352c269d21709" kindref="member">const_iterator</ref></type>
        <definition>const_iterator cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
<para>Past-the-end iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2413" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2413" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Return !empty(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2416" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2416" bodyend="2416"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1aa7d28c185ba27ff6d022f849c2117422" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool equal</definition>
        <argsstring>(const UsdPrimSiblingRange &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality compare. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2419" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2419" bodyend="2421"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a0223179d7f3b9d4f4c047c503c9a721a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range_1a6e997adfc98892497219c84757d0bd6b" kindref="member">reference</ref></type>
        <definition>reference front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
<para>Return *begin(). This range must not be empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2424" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2424" bodyend="2427"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a6cc9779d4db75d696f72b0d2b26237bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
        <definition>UsdPrimSiblingRange&amp; advance_begin</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>advance_begin</name>
        <param>
          <type><ref refid="class_usd_prim_sibling_range_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Advance this range&apos;s begin iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2430" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2430" bodyend="2433"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1abd12d3604624821df0f8f3ad979b1f01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
        <definition>UsdPrimSiblingRange&amp; advance_end</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>advance_end</name>
        <param>
          <type><ref refid="class_usd_prim_sibling_range_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Advance this range&apos;s end iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2436" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2436" bodyend="2439"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_sibling_range_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Return <ref refid="class_usd_prim_sibling_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" kindref="member">begin()</ref> == <ref refid="class_usd_prim_sibling_range_1a68b688a51bd0cf6fb5bc2cba292209a8" kindref="member">end()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2442" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2442" bodyend="2442"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_prim_sibling_range_1ae6511db7691da627cacccc90139e169e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdPrimSiblingRange &amp;lhs, const UsdPrimSiblingRange &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2446" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2446" bodyend="2449"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_sibling_range_1a8e40fb784177f8d21dfedb0f69abd467" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdPrimSiblingRange &amp;lhs, const ForwardRange &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2453" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2453" bodyend="2463"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_sibling_range_1aa26e05d382d6d6a195b9ad4e7e6400e3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const ForwardRange &amp;lhs, const UsdPrimSiblingRange &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2467" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2467" bodyend="2470"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_sibling_range_1ad55ec336dbc3b9fabde3943f022f22ee" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdPrimSiblingRange &amp;lhs, const UsdPrimSiblingRange &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2473" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2473" bodyend="2476"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_sibling_range_1aa6225eef677c3f35eff57609a9d7f268" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const ForwardRange &amp;lhs, const UsdPrimSiblingRange &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2480" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2480" bodyend="2483"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_sibling_range_1a756a5b238871b6ea5745af4870dacfe0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdPrimSiblingRange &amp;lhs, const ForwardRange &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_prim_sibling_range" kindref="compound">UsdPrimSiblingRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2487" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2487" bodyend="2490"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Forward iterator range of sibling <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> s. </para>
    </briefdescription>
    <detaileddescription>
<para>This range type contains a pair of <ref refid="class_usd_prim_sibling_iterator" kindref="compound">UsdPrimSiblingIterator</ref> s, denoting a half-open range of <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> siblings. It provides a subset of container-like API, such as <ref refid="class_usd_prim_sibling_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" kindref="member">begin()</ref>, <ref refid="class_usd_prim_sibling_range_1a68b688a51bd0cf6fb5bc2cba292209a8" kindref="member">end()</ref>, <ref refid="class_usd_prim_sibling_range_1a0223179d7f3b9d4f4c047c503c9a721a" kindref="member">front()</ref>, <ref refid="class_usd_prim_sibling_range_1a644718bb2fb240de962dc3c9a1fdf0dc" kindref="member">empty()</ref>, etc. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/prim.h" line="2383" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2383" bodyend="2494"/>
    <listofallmembers>
      <member refid="class_usd_prim_sibling_range_1af0fd8c68745720f67d30822497b95a6c" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>_begin</name></member>
      <member refid="class_usd_prim_sibling_range_1a9be12e0f5a73536c636d14ce32f65a86" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>_end</name></member>
      <member refid="class_usd_prim_sibling_range_1a6cc9779d4db75d696f72b0d2b26237bc" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>advance_begin</name></member>
      <member refid="class_usd_prim_sibling_range_1abd12d3604624821df0f8f3ad979b1f01" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>advance_end</name></member>
      <member refid="class_usd_prim_sibling_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>begin</name></member>
      <member refid="class_usd_prim_sibling_range_1a39112ae08f6ffc7ee58c6aa79772e094" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>cbegin</name></member>
      <member refid="class_usd_prim_sibling_range_1a93791e61ab486b4022c389d634b4facc" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>cend</name></member>
      <member refid="class_usd_prim_sibling_range_1ae916f05103b5bc8576d352c269d21709" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>const_iterator</name></member>
      <member refid="class_usd_prim_sibling_range_1ad319fc54a93a2c7058c70e40428ed2e2" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>difference_type</name></member>
      <member refid="class_usd_prim_sibling_range_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>empty</name></member>
      <member refid="class_usd_prim_sibling_range_1a68b688a51bd0cf6fb5bc2cba292209a8" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>end</name></member>
      <member refid="class_usd_prim_sibling_range_1aa7d28c185ba27ff6d022f849c2117422" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>equal</name></member>
      <member refid="class_usd_prim_sibling_range_1a0223179d7f3b9d4f4c047c503c9a721a" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>front</name></member>
      <member refid="class_usd_prim_sibling_range_1a23bbbcfae8d55947f2f4b9a34b985f90" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>iterator</name></member>
      <member refid="class_usd_prim_sibling_range_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator bool</name></member>
      <member refid="class_usd_prim_sibling_range_1ad55ec336dbc3b9fabde3943f022f22ee" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_sibling_range_1aa6225eef677c3f35eff57609a9d7f268" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_sibling_range_1a756a5b238871b6ea5745af4870dacfe0" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_sibling_range_1ae6511db7691da627cacccc90139e169e" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator==</name></member>
      <member refid="class_usd_prim_sibling_range_1a8e40fb784177f8d21dfedb0f69abd467" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator==</name></member>
      <member refid="class_usd_prim_sibling_range_1aa26e05d382d6d6a195b9ad4e7e6400e3" prot="private" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>operator==</name></member>
      <member refid="class_usd_prim_sibling_range_1a6e997adfc98892497219c84757d0bd6b" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>reference</name></member>
      <member refid="class_usd_prim_sibling_range_1a42adbc6761dfeecc5d144b9ee2d22047" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>UsdPrimSiblingRange</name></member>
      <member refid="class_usd_prim_sibling_range_1a602da6a0f5c2e2d2fca15aee5e47e525" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>UsdPrimSiblingRange</name></member>
      <member refid="class_usd_prim_sibling_range_1aac03fcf05950c2c26b7e7d82a5cd6cb5" prot="public" virt="non-virtual"><scope>UsdPrimSiblingRange</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
