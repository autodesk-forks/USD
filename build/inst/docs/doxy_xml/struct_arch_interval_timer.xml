<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_arch_interval_timer" kind="struct" language="C++" prot="public">
    <compoundname>ArchIntervalTimer</compoundname>
    <includes refid="timing_8h" local="no">timing.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_arch_interval_timer_1a6fadbe5bb545f2b4064782ac0b634fee" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _started</definition>
        <argsstring></argsstring>
        <name>_started</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="221" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_arch_interval_timer_1a7cbc64138b8eeb0a0e188a0725bfff65" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _startLow</definition>
        <argsstring></argsstring>
        <name>_startLow</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="222" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_arch_interval_timer_1a89753e60cd47a5b55effd4852c763474" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _startHigh</definition>
        <argsstring></argsstring>
        <name>_startHigh</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="222" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_arch_interval_timer_1a535105091cbe2ff65ffd1559ea18f488" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ArchIntervalTimer</definition>
        <argsstring>(bool start=true)</argsstring>
        <name>ArchIntervalTimer</name>
        <param>
          <type>bool</type>
          <declname>start</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Construct a timer and start timing if <computeroutput>start</computeroutput> is true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="169" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="169" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="struct_arch_interval_timer_1a07aaf1227e4d645f15e0a964f54ef291" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <briefdescription>
<para>Start the timer, or reset the start time if it has already been started. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="177" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="177" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="struct_arch_interval_timer_1a5d7014f7445fa148ba0dc16b95e4d968" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsStarted</definition>
        <argsstring>() const</argsstring>
        <name>IsStarted</name>
        <briefdescription>
<para>Return true if this timer is started. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="188" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="struct_arch_interval_timer_1a12629a45d95f98948e63cfd2e0bbf313" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t GetStartTicks</definition>
        <argsstring>() const</argsstring>
        <name>GetStartTicks</name>
        <briefdescription>
<para>Return this timer&apos;s start time, or 0 if it hasn&apos;t been started. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="193" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="struct_arch_interval_timer_1a03e87755125140a146070849e5ee1a0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t GetCurrentTicks</definition>
        <argsstring>()</argsstring>
        <name>GetCurrentTicks</name>
        <briefdescription>
<para>Read and return the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="198" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="struct_arch_interval_timer_1a31b3fc6f83a220c5f2bf819a9d0b4376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t GetElapsedTicks</definition>
        <argsstring>()</argsstring>
        <name>GetElapsedTicks</name>
        <briefdescription>
<para>Read the current time and return the difference between it and the start time. </para>
        </briefdescription>
        <detaileddescription>
<para>If the timer was not started, return 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/timing.h" line="204" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="204" bodyend="219"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple timer class for measuring an interval of time using the ArchTickTimer facilities. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/arch/timing.h" line="167" column="1" bodyfile="pxr/base/arch/timing.h" bodystart="166" bodyend="223"/>
    <listofallmembers>
      <member refid="struct_arch_interval_timer_1a6fadbe5bb545f2b4064782ac0b634fee" prot="private" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>_started</name></member>
      <member refid="struct_arch_interval_timer_1a89753e60cd47a5b55effd4852c763474" prot="private" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>_startHigh</name></member>
      <member refid="struct_arch_interval_timer_1a7cbc64138b8eeb0a0e188a0725bfff65" prot="private" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>_startLow</name></member>
      <member refid="struct_arch_interval_timer_1a535105091cbe2ff65ffd1559ea18f488" prot="public" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>ArchIntervalTimer</name></member>
      <member refid="struct_arch_interval_timer_1a03e87755125140a146070849e5ee1a0e" prot="public" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>GetCurrentTicks</name></member>
      <member refid="struct_arch_interval_timer_1a31b3fc6f83a220c5f2bf819a9d0b4376" prot="public" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>GetElapsedTicks</name></member>
      <member refid="struct_arch_interval_timer_1a12629a45d95f98948e63cfd2e0bbf313" prot="public" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>GetStartTicks</name></member>
      <member refid="struct_arch_interval_timer_1a5d7014f7445fa148ba0dc16b95e4d968" prot="public" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>IsStarted</name></member>
      <member refid="struct_arch_interval_timer_1a07aaf1227e4d645f15e0a964f54ef291" prot="public" virt="non-virtual"><scope>ArchIntervalTimer</scope><name>Start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
