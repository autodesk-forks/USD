<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_texture_handle" kind="class" language="C++" prot="public">
    <compoundname>HdStTextureHandle</compoundname>
    <includes refid="texture_handle_8h" local="no">textureHandle.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_texture_handle_1a23f9cf6a9fa08c2884d3d5928f4635ea" prot="private" static="no" mutable="no">
        <type>HdStTextureObjectSharedPtr</type>
        <definition>HdStTextureObjectSharedPtr _textureObject</definition>
        <argsstring></argsstring>
        <name>_textureObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="117" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_handle_1a7b6d08e85a8f0756a0d7caf54f0dc1d7" prot="private" static="no" mutable="no">
        <type>HdStSamplerObjectSharedPtr</type>
        <definition>HdStSamplerObjectSharedPtr _samplerObject</definition>
        <argsstring></argsstring>
        <name>_samplerObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="118" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_handle_1af678ba8596e48de5af21d26c91d0fcdb" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_sampler_parameters" kindref="compound">HdSamplerParameters</ref></type>
        <definition>HdSamplerParameters _samplerParams</definition>
        <argsstring></argsstring>
        <name>_samplerParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="119" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_handle_1a877cfb08fc38578f361b9c1da02d00a6" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _memoryRequest</definition>
        <argsstring></argsstring>
        <name>_memoryRequest</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="120" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_handle_1afb44638a59e337424c164bdd78a82bcb" prot="private" static="no" mutable="no">
        <type>HdStShaderCodePtr</type>
        <definition>HdStShaderCodePtr _shaderCode</definition>
        <argsstring></argsstring>
        <name>_shaderCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="121" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_texture_handle_1a97a1d1c518ddbbba252d0945b5bd9985" prot="private" static="no" mutable="no">
        <type>HdSt_TextureHandleRegistry *</type>
        <definition>HdSt_TextureHandleRegistry* _textureHandleRegistry</definition>
        <argsstring></argsstring>
        <name>_textureHandleRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="122" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_texture_handle_1addaac4c1e4d5501492c7050955a6491d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStTextureHandle</definition>
        <argsstring>(HdStTextureObjectSharedPtr const &amp;textureObject, const HdSamplerParameters &amp;samplerParams, size_t memoryRequest, HdStShaderCodePtr const &amp;shaderCode, HdSt_TextureHandleRegistry *textureHandleRegistry)</argsstring>
        <name>HdStTextureHandle</name>
        <param>
          <type>HdStTextureObjectSharedPtr const &amp;</type>
          <declname>textureObject</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_sampler_parameters" kindref="compound">HdSamplerParameters</ref> &amp;</type>
          <declname>samplerParams</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>memoryRequest</declname>
        </param>
        <param>
          <type>HdStShaderCodePtr const &amp;</type>
          <declname>shaderCode</declname>
        </param>
        <param>
          <type>HdSt_TextureHandleRegistry *</type>
          <declname>textureHandleRegistry</declname>
        </param>
        <briefdescription>
<para>See <ref refid="class_hd_st_resource_registry_1aca726a511db9a2b74038bffedb4fe580" kindref="member">HdStResourceRegistry::AllocateTextureHandle</ref> for details. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1a01478042bcb71860f2e006217044bc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStTextureHandle</definition>
        <argsstring>()</argsstring>
        <name>~HdStTextureHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1a4810febba71e38df262790b0c8612b3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStTextureObjectSharedPtr const  &amp;</type>
        <definition>HdStTextureObjectSharedPtr const&amp; GetTextureObject</definition>
        <argsstring>() const</argsstring>
        <name>GetTextureObject</name>
        <briefdescription>
<para>Get texture object. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be accessed after commit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="78" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1aa79dc61f5b7928f8bf55f1f267209880" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStSamplerObjectSharedPtr const  &amp;</type>
        <definition>HdStSamplerObjectSharedPtr const&amp; GetSamplerObject</definition>
        <argsstring>() const</argsstring>
        <name>GetSamplerObject</name>
        <briefdescription>
<para>Get sampler object. </para>
        </briefdescription>
        <detaileddescription>
<para>Can be accessed after commit. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="85" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1af6a21aeb970f90821290a6b33de12e45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_hd_sampler_parameters" kindref="compound">HdSamplerParameters</ref> const  &amp;</type>
        <definition>HdSamplerParameters const&amp; GetSamplerParameters</definition>
        <argsstring>() const</argsstring>
        <name>GetSamplerParameters</name>
        <briefdescription>
<para>Get sampler parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="91" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1a8fd5b6cafb007b93403113fbd5f9cc42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetMemoryRequest</definition>
        <argsstring>() const</argsstring>
        <name>GetMemoryRequest</name>
        <briefdescription>
<para>Get how much memory this handle requested for the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="97" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1aada7d94a90a539eb41bd5d394074b3e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStShaderCodePtr const  &amp;</type>
        <definition>HdStShaderCodePtr const&amp; GetShaderCode</definition>
        <argsstring>() const</argsstring>
        <name>GetShaderCode</name>
        <briefdescription>
<para>Get the shader code associated with this handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="103" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1aa75749fdf560a9c0fc3ab121ff0263c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void ReallocateSamplerIfNecessary</definition>
        <argsstring>()</argsstring>
        <name>ReallocateSamplerIfNecessary</name>
        <briefdescription>
<para>Allocate sampler for this handle (not thread-safe). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_handle_1a9f597eae71e8aff9b68e4eaaa9205aec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool UseBindlessHandles</definition>
        <argsstring>() const</argsstring>
        <name>UseBindlessHandles</name>
        <briefdescription>
<para>Get whether bindless texture handles are enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureHandle.h" line="114" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a texture and sampler that will be allocated and loaded from a texture file during commit, possibly a texture sampler handle and a memory request. </para>
    </briefdescription>
    <detaileddescription>
<para>It is intended for <ref refid="class_hd_st_shader_code" kindref="compound">HdStShaderCode</ref> and <ref refid="class_hd_st_shader_code_1a7f54ea8b13462f62034e2143d600b668" kindref="member">HdStShaderCode::AddResourcesFromTextures()</ref> is called whenever the underlying texture and sampler gets allocated and (re-)loaded so that the shader code can react to, e.g., changing texture sampler handle for bindless or changing texture metadata such as a field bounding box for volumes. </para>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/textureHandle.h" line="61" column="1" bodyfile="pxr/imaging/hdSt/textureHandle.h" bodystart="60" bodyend="123"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_handle_1a877cfb08fc38578f361b9c1da02d00a6" prot="private" virt="non-virtual"><scope>HdStTextureHandle</scope><name>_memoryRequest</name></member>
      <member refid="class_hd_st_texture_handle_1a7b6d08e85a8f0756a0d7caf54f0dc1d7" prot="private" virt="non-virtual"><scope>HdStTextureHandle</scope><name>_samplerObject</name></member>
      <member refid="class_hd_st_texture_handle_1af678ba8596e48de5af21d26c91d0fcdb" prot="private" virt="non-virtual"><scope>HdStTextureHandle</scope><name>_samplerParams</name></member>
      <member refid="class_hd_st_texture_handle_1afb44638a59e337424c164bdd78a82bcb" prot="private" virt="non-virtual"><scope>HdStTextureHandle</scope><name>_shaderCode</name></member>
      <member refid="class_hd_st_texture_handle_1a97a1d1c518ddbbba252d0945b5bd9985" prot="private" virt="non-virtual"><scope>HdStTextureHandle</scope><name>_textureHandleRegistry</name></member>
      <member refid="class_hd_st_texture_handle_1a23f9cf6a9fa08c2884d3d5928f4635ea" prot="private" virt="non-virtual"><scope>HdStTextureHandle</scope><name>_textureObject</name></member>
      <member refid="class_hd_st_texture_handle_1a8fd5b6cafb007b93403113fbd5f9cc42" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>GetMemoryRequest</name></member>
      <member refid="class_hd_st_texture_handle_1aa79dc61f5b7928f8bf55f1f267209880" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>GetSamplerObject</name></member>
      <member refid="class_hd_st_texture_handle_1af6a21aeb970f90821290a6b33de12e45" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>GetSamplerParameters</name></member>
      <member refid="class_hd_st_texture_handle_1aada7d94a90a539eb41bd5d394074b3e4" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>GetShaderCode</name></member>
      <member refid="class_hd_st_texture_handle_1a4810febba71e38df262790b0c8612b3b" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>GetTextureObject</name></member>
      <member refid="class_hd_st_texture_handle_1addaac4c1e4d5501492c7050955a6491d" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>HdStTextureHandle</name></member>
      <member refid="class_hd_st_texture_handle_1aa75749fdf560a9c0fc3ab121ff0263c6" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>ReallocateSamplerIfNecessary</name></member>
      <member refid="class_hd_st_texture_handle_1a9f597eae71e8aff9b68e4eaaa9205aec" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>UseBindlessHandles</name></member>
      <member refid="class_hd_st_texture_handle_1a01478042bcb71860f2e006217044bc43" prot="public" virt="non-virtual"><scope>HdStTextureHandle</scope><name>~HdStTextureHandle</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
