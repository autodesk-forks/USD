<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_variable_expression_1_1_result" kind="class" language="C++" prot="public">
    <compoundname>SdfVariableExpression::Result</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_sdf_variable_expression_1_1_result_1abd5e37b648a0aad51008d3104f0d2a67" prot="public" static="no" mutable="no">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
<para>The result of evaluating the expression. </para>
        </briefdescription>
        <detaileddescription>
<para>This value may be empty if the expression yielded no value. It may also be empty if errors occurred during evaluation. In this case, the errors field will be populated with error messages.</para>
<para>If the value is not empty, it will contain one of the supported types listed in the class documentation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variableExpression.h" line="152" column="1" bodyfile="pxr/usd/sdf/variableExpression.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_variable_expression_1_1_result_1ab435535da04d06647ca6d6f972d8ba5f" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; errors</definition>
        <argsstring></argsstring>
        <name>errors</name>
        <briefdescription>
<para>Errors encountered while evaluating the expression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variableExpression.h" line="155" column="1" bodyfile="pxr/usd/sdf/variableExpression.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_variable_expression_1_1_result_1ab7cc8f0cffe4aa93c16c84e720552b03" prot="public" static="no" mutable="no">
        <type>std::unordered_set&lt; std::string &gt;</type>
        <definition>std::unordered_set&lt;std::string&gt; usedVariables</definition>
        <argsstring></argsstring>
        <name>usedVariables</name>
        <briefdescription>
<para>Set of variables that were used while evaluating the expression. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, for an expression like <computeroutput>&quot;example_${VAR}_expression&quot;</computeroutput>, this set will contain &quot;VAR&quot;.</para>
<para>This set will also contain variables from subexpressions. In the above example, if the value of &quot;VAR&quot; was another expression like <computeroutput>&quot;sub_${SUBVAR}_expression&quot;</computeroutput>, this set will contain both &quot;VAR&quot; and &quot;SUBVAR&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variableExpression.h" line="165" column="1" bodyfile="pxr/usd/sdf/variableExpression.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4945">
        <label>VtValue</label>
        <link refid="class_vt_value"/>
      </node>
      <node id="4944">
        <label>SdfVariableExpression::Result</label>
        <childnode refid="4945" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/variableExpression.h" line="143" column="1" bodyfile="pxr/usd/sdf/variableExpression.h" bodystart="142" bodyend="166"/>
    <listofallmembers>
      <member refid="class_sdf_variable_expression_1_1_result_1ab435535da04d06647ca6d6f972d8ba5f" prot="public" virt="non-virtual"><scope>SdfVariableExpression::Result</scope><name>errors</name></member>
      <member refid="class_sdf_variable_expression_1_1_result_1ab7cc8f0cffe4aa93c16c84e720552b03" prot="public" virt="non-virtual"><scope>SdfVariableExpression::Result</scope><name>usedVariables</name></member>
      <member refid="class_sdf_variable_expression_1_1_result_1abd5e37b648a0aad51008d3104f0d2a67" prot="public" virt="non-virtual"><scope>SdfVariableExpression::Result</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
