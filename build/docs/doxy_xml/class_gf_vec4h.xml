<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec4h" kind="class" language="C++" prot="public">
    <compoundname>GfVec4h</compoundname>
    <includes refid="vec4h_8h" local="no">vec4h.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec4h_1a512284adad2afc1cb29997cf585d965d" prot="public" static="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>typedef GfHalf ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="67" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec4h_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="68" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec4h_1ae90d8034b96ceec4912f88fe3bf39597" prot="private" static="no" mutable="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf _data[4]</definition>
        <argsstring>[4]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="297" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec4h_1a88b8583b2e37faddc73761e2d77113f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec4h</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec4h</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1afa83279a3cb852f314ada6352e98b451" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec4h</definition>
        <argsstring>(GfHalf value)</argsstring>
        <name>GfVec4h</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="74" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a80f69c5078361eeeb23fd47822bbe010" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec4h</definition>
        <argsstring>(GfHalf s0, GfHalf s1, GfHalf s2, GfHalf s3)</argsstring>
        <name>GfVec4h</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s2</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s3</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="80" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a49cc8a5ee529599127dabf98f3e348f8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec4h</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec4h</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="87" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a54b4d7601526be129531be3ef2816a52" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec4h</definition>
        <argsstring>(class GfVec4d const &amp;other)</argsstring>
        <name>GfVec4h</name>
        <param>
          <type>class <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="93" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="314" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1adeaaa10828b64ba2358e2f89d60b18c1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec4h</definition>
        <argsstring>(class GfVec4f const &amp;other)</argsstring>
        <name>GfVec4h</name>
        <param>
          <type>class <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="96" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="322" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a197eb840de644a2e5a90e51b9f4f38df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec4h</definition>
        <argsstring>(class GfVec4i const &amp;other)</argsstring>
        <name>GfVec4h</name>
        <param>
          <type>class <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="99" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="330" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a15ba4f011b7b506631f62b22259032bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
        <definition>GfVec4h&amp; Set</definition>
        <argsstring>(GfHalf s0, GfHalf s1, GfHalf s2, GfHalf s3)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s2</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s3</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="136" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a734e1cba744eec3132b4456490d3f076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
        <definition>GfVec4h&amp; Set</definition>
        <argsstring>(GfHalf const *a)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="145" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1afafdbc3262e85ed2a72eb36060b3fc5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  *</type>
        <definition>GfHalf const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="150" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a78cb19ccdc85588f4f9097d1f0f65eff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> *</type>
        <definition>GfHalf* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="151" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a2353a58d92a73f16541a2732c5025c25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  *</type>
        <definition>GfHalf const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="152" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a07e409d151715c0f1050f6c59701013b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  &amp;</type>
        <definition>GfHalf const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="155" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a90770070a228360ab6d6ebccbc7034fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> &amp;</type>
        <definition>GfHalf&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="156" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1aebfb383da83c7bbb424bcc2414777643" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec4h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="164" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="164" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a0de49554dd50a5974077302c786b1ef1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec4h const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="170" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1ac9cbbd2aefba28cd463be1ee540dbfe8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec4d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a9a4518928605b221a8f5dd83e13e7405" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec4f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1ab1f13844e9a83b254e5880f8e6544cb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec4i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a4b8962829a0e748b89d1920eb0fd3522" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="186" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="186" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a4870d07ba8fa1bf6000c14a5f15fa1df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
        <definition>GfVec4h&amp; operator+=</definition>
        <argsstring>(GfVec4h const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="191" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="191" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a3cc7a33383e02e54f88ba3adf0c81605" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
        <definition>GfVec4h&amp; operator-=</definition>
        <argsstring>(GfVec4h const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="203" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="203" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1ae6a5a0c762cb0f76056e23290eea4574" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
        <definition>GfVec4h&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="215" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="215" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1acd1aaaf343ef7127793c96b3a9906705" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="222" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1af9e2721f2f89bf8d45a3b1f73eaa88b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
        <definition>GfVec4h&amp; operator/=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="231" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="231" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1adb9f994559853d577a9ce621a5405344" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h operator/</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="237" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1ab62473e7c36954f5c8fa4cc0c64db1fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf operator *</definition>
        <argsstring>(GfVec4h const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="242" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="242" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1ae90cc97e59c13f098975c2f202312737" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h GetProjection</definition>
        <argsstring>(GfVec4h const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="250" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="250" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a1b9071cab8276f4eb7218521490546e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h GetComplement</definition>
        <argsstring>(GfVec4h const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="259" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a98273f3be3eaaafbf30c3ef142e6c570" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="264" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLength</definition>
        <argsstring>() const</argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="269" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="269" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a865d492c9cd8cd8c0334f92b77b012e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf Normalize</definition>
        <argsstring>(GfHalf eps=0.001)</argsstring>
        <name>Normalize</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
<para>Normalizes the vector in place to unit length, returning the length before normalization. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length of the vector is smaller than <computeroutput>eps</computeroutput>, then the vector is set to vector/<computeroutput>eps</computeroutput>. The original length of the vector is returned. See also <ref refid="vec2d_8h_1aba4a21e52a2e2d5a01caaa5021d46e17" kindref="member">GfNormalize()</ref>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="281" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="281" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1addce1e3a199a1c4ca1729ac96abb4432" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h GetNormalized</definition>
        <argsstring>(GfHalf eps=0.001) const</argsstring>
        <name>GetNormalized</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="289" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="289" bodyend="293"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec4h_1ae33b4bbf8ebdbc6112bc6e982c27db6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>static GfVec4h XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="102" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a389e75d14ccc7a940ea883a380e28d3b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>static GfVec4h YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="108" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a1dc847a59897fe9a14a974a66f4fabfd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>static GfVec4h ZAxis</definition>
        <argsstring>()</argsstring>
        <name>ZAxis</name>
        <briefdescription>
<para>Create a unit vector along the Z-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="114" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1a3ab2a0c6e5ec99914ba1e9f49ffcb3aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>static GfVec4h WAxis</definition>
        <argsstring>()</argsstring>
        <name>WAxis</name>
        <briefdescription>
<para>Create a unit vector along the W-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="120" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="120" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec4h_1aef1d8fbcbfa72d2d802bb88c35f4afa4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>static GfVec4h Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 4. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="128" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="128" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec4h_1a8bdf4b02373dc1a40bc5cb56ad4cfa98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec4h const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="159" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec4h_1a28bca3b8dfcbae172cb39ef5efb18375" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h operator+</definition>
        <argsstring>(GfVec4h const &amp;l, GfVec4h const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="198" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec4h_1ac0aac76eac64c478981e0f91c0bd5274" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h operator-</definition>
        <argsstring>(GfVec4h const &amp;l, GfVec4h const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="210" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec4h_1ad7ee5505934c6ad75f807908567a020a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GfVec4h operator *</definition>
        <argsstring>(double s, GfVec4h const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec4h.h" line="225" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="225" bodyend="227"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 4 GfHalf components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 4 components of type <computeroutput>GfHalf</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec4h.h" line="64" column="1" bodyfile="pxr/base/gf/vec4h.h" bodystart="63" bodyend="298"/>
    <listofallmembers>
      <member refid="class_gf_vec4h_1ae90d8034b96ceec4912f88fe3bf39597" prot="private" virt="non-virtual"><scope>GfVec4h</scope><name>_data</name></member>
      <member refid="class_gf_vec4h_1aef1d8fbcbfa72d2d802bb88c35f4afa4" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>Axis</name></member>
      <member refid="class_gf_vec4h_1afafdbc3262e85ed2a72eb36060b3fc5b" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>data</name></member>
      <member refid="class_gf_vec4h_1a78cb19ccdc85588f4f9097d1f0f65eff" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>data</name></member>
      <member refid="class_gf_vec4h_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>dimension</name></member>
      <member refid="class_gf_vec4h_1a2353a58d92a73f16541a2732c5025c25" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GetArray</name></member>
      <member refid="class_gf_vec4h_1a1b9071cab8276f4eb7218521490546e8" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec4h_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GetLength</name></member>
      <member refid="class_gf_vec4h_1a98273f3be3eaaafbf30c3ef142e6c570" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec4h_1addce1e3a199a1c4ca1729ac96abb4432" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GetNormalized</name></member>
      <member refid="class_gf_vec4h_1ae90cc97e59c13f098975c2f202312737" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec4h_1a88b8583b2e37faddc73761e2d77113f2" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1afa83279a3cb852f314ada6352e98b451" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1a80f69c5078361eeeb23fd47822bbe010" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1a49cc8a5ee529599127dabf98f3e348f8" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1a54b4d7601526be129531be3ef2816a52" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1adeaaa10828b64ba2358e2f89d60b18c1" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1a197eb840de644a2e5a90e51b9f4f38df" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>GfVec4h</name></member>
      <member refid="class_gf_vec4h_1a8bdf4b02373dc1a40bc5cb56ad4cfa98" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>hash_value</name></member>
      <member refid="class_gf_vec4h_1a865d492c9cd8cd8c0334f92b77b012e3" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>Normalize</name></member>
      <member refid="class_gf_vec4h_1acd1aaaf343ef7127793c96b3a9906705" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator *</name></member>
      <member refid="class_gf_vec4h_1ad7ee5505934c6ad75f807908567a020a" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator *</name></member>
      <member refid="class_gf_vec4h_1ab62473e7c36954f5c8fa4cc0c64db1fc" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator *</name></member>
      <member refid="class_gf_vec4h_1ae6a5a0c762cb0f76056e23290eea4574" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator *=</name></member>
      <member refid="class_gf_vec4h_1a0de49554dd50a5974077302c786b1ef1" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator!=</name></member>
      <member refid="class_gf_vec4h_1a28bca3b8dfcbae172cb39ef5efb18375" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator+</name></member>
      <member refid="class_gf_vec4h_1a4870d07ba8fa1bf6000c14a5f15fa1df" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator+=</name></member>
      <member refid="class_gf_vec4h_1a4b8962829a0e748b89d1920eb0fd3522" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator-</name></member>
      <member refid="class_gf_vec4h_1ac0aac76eac64c478981e0f91c0bd5274" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator-</name></member>
      <member refid="class_gf_vec4h_1a3cc7a33383e02e54f88ba3adf0c81605" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator-=</name></member>
      <member refid="class_gf_vec4h_1adb9f994559853d577a9ce621a5405344" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator/</name></member>
      <member refid="class_gf_vec4h_1af9e2721f2f89bf8d45a3b1f73eaa88b5" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator/=</name></member>
      <member refid="class_gf_vec4h_1aebfb383da83c7bbb424bcc2414777643" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator==</name></member>
      <member refid="class_gf_vec4h_1ac9cbbd2aefba28cd463be1ee540dbfe8" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator==</name></member>
      <member refid="class_gf_vec4h_1a9a4518928605b221a8f5dd83e13e7405" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator==</name></member>
      <member refid="class_gf_vec4h_1ab1f13844e9a83b254e5880f8e6544cb7" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator==</name></member>
      <member refid="class_gf_vec4h_1a07e409d151715c0f1050f6c59701013b" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator[]</name></member>
      <member refid="class_gf_vec4h_1a90770070a228360ab6d6ebccbc7034fc" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>operator[]</name></member>
      <member refid="class_gf_vec4h_1a512284adad2afc1cb29997cf585d965d" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec4h_1a15ba4f011b7b506631f62b22259032bf" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>Set</name></member>
      <member refid="class_gf_vec4h_1a734e1cba744eec3132b4456490d3f076" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>Set</name></member>
      <member refid="class_gf_vec4h_1a3ab2a0c6e5ec99914ba1e9f49ffcb3aa" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>WAxis</name></member>
      <member refid="class_gf_vec4h_1ae33b4bbf8ebdbc6112bc6e982c27db6f" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>XAxis</name></member>
      <member refid="class_gf_vec4h_1a389e75d14ccc7a940ea883a380e28d3b" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>YAxis</name></member>
      <member refid="class_gf_vec4h_1a1dc847a59897fe9a14a974a66f4fabfd" prot="public" virt="non-virtual"><scope>GfVec4h</scope><name>ZAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
