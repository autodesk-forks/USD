//
// Copyright 2021 Pixar
//
// Licensed under the Apache License, Version 2.0 (the "Apache License")
// with the following modification; you may not use this file except in
// compliance with the Apache License and the following modification to it:
// Section 6. Trademarks. is deleted and replaced with:
//
// 6. Trademarks. This License does not grant permission to use the trade
//    names, trademarks, service marks, or product names of the Licensor
//    and its affiliates, except as required to comply with Section 4(c) of
//    the License and to reproduce the content of the NOTICE file.
//
// You may obtain a copy of the Apache License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the Apache License with the above modification is
// distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied. See the Apache License for the specific
// language governing permissions and limitations under the Apache License.
//
////////////////////////////////////////////////////////////////////////
// This file is generated by a script.  Do not edit directly.  Edit the
// schema.template.h file to make changes.

#ifndef PXR_IMAGING_HD_EXT_COMPUTATION_PRIMVAR_SCHEMA_H
#define PXR_IMAGING_HD_EXT_COMPUTATION_PRIMVAR_SCHEMA_H

#include "pxr/imaging/hd/primvarSchema.h"


PXR_NAMESPACE_OPEN_SCOPE

//-----------------------------------------------------------------------------

#define HDEXTCOMPUTATIONPRIMVAR_SCHEMA_TOKENS \
    (interpolation) \
    (role) \
    (sourceComputation) \
    (sourceComputationOutputName) \
    (valueType) \

TF_DECLARE_PUBLIC_TOKENS(HdExtComputationPrimvarSchemaTokens,
    HDEXTCOMPUTATIONPRIMVAR_SCHEMA_TOKENS);

//-----------------------------------------------------------------------------

class HdExtComputationPrimvarSchema : public HdSchema
{
public:
    HdExtComputationPrimvarSchema(HdContainerDataSourceHandle container)
    : HdSchema(container) {}

    //ACCESSORS

    HdTokenDataSourceHandle GetInterpolation();
    HdTokenDataSourceHandle GetRole();
    HdPathDataSourceHandle GetSourceComputation();
    HdTokenDataSourceHandle GetSourceComputationOutputName();
    HdTupleTypeDataSourceHandle GetValueType();

    // RETRIEVING AND CONSTRUCTING

    static HdContainerDataSourceHandle
    BuildRetained(
        const HdTokenDataSourceHandle &interpolation,
        const HdTokenDataSourceHandle &role,
        const HdPathDataSourceHandle &sourceComputation,
        const HdTokenDataSourceHandle &sourceComputationOutputName,
        const HdTupleTypeDataSourceHandle &valueType
    );

    class Builder
    {
    public:
        Builder &SetInterpolation(
            const HdTokenDataSourceHandle &interpolation);
        Builder &SetRole(
            const HdTokenDataSourceHandle &role);
        Builder &SetSourceComputation(
            const HdPathDataSourceHandle &sourceComputation);
        Builder &SetSourceComputationOutputName(
            const HdTokenDataSourceHandle &sourceComputationOutputName);
        Builder &SetValueType(
            const HdTupleTypeDataSourceHandle &valueType);

        HdContainerDataSourceHandle Build();

    private:
        HdTokenDataSourceHandle _interpolation;
        HdTokenDataSourceHandle _role;
        HdPathDataSourceHandle _sourceComputation;
        HdTokenDataSourceHandle _sourceComputationOutputName;
        HdTupleTypeDataSourceHandle _valueType;
    };

    // these return statically allocated instances for the common cases.
    static HdTokenDataSourceHandle BuildInterpolationDataSource(
            TfToken interpolation) {
        return HdPrimvarSchema::BuildInterpolationDataSource(interpolation);
    }

    static HdTokenDataSourceHandle BuildRoleDataSource(TfToken role) {
        return HdPrimvarSchema::BuildRoleDataSource(role);
    }


};

PXR_NAMESPACE_CLOSE_SCOPE

#endif