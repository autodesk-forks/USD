<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_property_index" kind="class" language="C++" prot="public">
    <compoundname>PcpPropertyIndex</compoundname>
    <includes refid="property_index_8h" local="no">propertyIndex.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_pcp_property_index_1a7b8a02949ce85cf8bc524d07c1cda1f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class PcpPropertyIterator</definition>
        <argsstring></argsstring>
        <name>PcpPropertyIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="104" column="1" bodyfile="pxr/usd/pcp/propertyIndex.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pcp_property_index_1a8d7355e57913b1fa3c2b0e22b7f74f40" prot="private" static="no" mutable="no">
        <type>std::vector&lt; Pcp_PropertyInfo &gt;</type>
        <definition>std::vector&lt;Pcp_PropertyInfo&gt; _propertyStack</definition>
        <argsstring></argsstring>
        <name>_propertyStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="109" column="1" bodyfile="pxr/usd/pcp/propertyIndex.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_property_index_1a66f940131be4626a3dc47fe8ca70f4d4" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; PcpErrorVector &gt;</type>
        <definition>std::unique_ptr&lt;PcpErrorVector&gt; _localErrors</definition>
        <argsstring></argsstring>
        <name>_localErrors</name>
        <briefdescription>
<para>List of errors local to this property, encountered during computation. </para>
        </briefdescription>
        <detaileddescription>
<para>NULL if no errors were found (the expected common case). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="113" column="1" bodyfile="pxr/usd/pcp/propertyIndex.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_property_index_1a8aaa8d06f7a3b4cf89943db1f9168653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpPropertyIndex</definition>
        <argsstring>()</argsstring>
        <name>PcpPropertyIndex</name>
        <briefdescription>
<para>Construct an empty property index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_property_index_1ad16c391605f6ce0eeddb205eb0e5bc91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpPropertyIndex</definition>
        <argsstring>(const PcpPropertyIndex &amp;rhs)</argsstring>
        <name>PcpPropertyIndex</name>
        <param>
          <type>const <ref refid="class_pcp_property_index" kindref="compound">PcpPropertyIndex</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy-construct a property index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_property_index_1acaf1292f23adbe8278b0a3669e1efe6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API void</type>
        <definition>PCP_API void Swap</definition>
        <argsstring>(PcpPropertyIndex &amp;index)</argsstring>
        <name>Swap</name>
        <param>
          <type><ref refid="class_pcp_property_index" kindref="compound">PcpPropertyIndex</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Swap the contents of this property index with <computeroutput>index</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_property_index_1a23055e9a75bfa1af8ea4462f232b3ab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Returns true if this property index contains no opinions, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_property_index_1adf728ac6c35dd06467fe339940152e14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API PcpPropertyRange</type>
        <definition>PCP_API PcpPropertyRange GetPropertyRange</definition>
        <argsstring>(bool localOnly=false) const</argsstring>
        <name>GetPropertyRange</name>
        <param>
          <type>bool</type>
          <declname>localOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns range of iterators that encompasses properties in this index&apos;s property stack. </para>
        </briefdescription>
        <detaileddescription>
<para>By default, this returns a range encompassing all properties in the index. If <computeroutput>localOnly</computeroutput> is specified, the range will only include properties from local nodes in its owning prim&apos;s graph. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_property_index_1a91f65b03ae904c26c54630aef3eb53a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>PcpErrorVector</type>
        <definition>PcpErrorVector GetLocalErrors</definition>
        <argsstring>() const</argsstring>
        <name>GetLocalErrors</name>
        <briefdescription>
<para>Return the list of errors local to this property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="95" column="1" bodyfile="pxr/usd/pcp/propertyIndex.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_property_index_1ac1d1ce886825527f68883a8e3006b174" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API size_t</type>
        <definition>PCP_API size_t GetNumLocalSpecs</definition>
        <argsstring>() const</argsstring>
        <name>GetNumLocalSpecs</name>
        <briefdescription>
<para>Returns the number of local properties in this prim index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/propertyIndex.h" line="101" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_pcp_property_index" kindref="compound">PcpPropertyIndex</ref> is an index of all sites in scene description that contribute opinions to a specific property, under composition semantics. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/pcp/propertyIndex.h" line="66" column="1" bodyfile="pxr/usd/pcp/propertyIndex.h" bodystart="65" bodyend="114"/>
    <listofallmembers>
      <member refid="class_pcp_property_index_1a66f940131be4626a3dc47fe8ca70f4d4" prot="private" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>_localErrors</name></member>
      <member refid="class_pcp_property_index_1a8d7355e57913b1fa3c2b0e22b7f74f40" prot="private" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>_propertyStack</name></member>
      <member refid="class_pcp_property_index_1a91f65b03ae904c26c54630aef3eb53a3" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>GetLocalErrors</name></member>
      <member refid="class_pcp_property_index_1ac1d1ce886825527f68883a8e3006b174" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>GetNumLocalSpecs</name></member>
      <member refid="class_pcp_property_index_1adf728ac6c35dd06467fe339940152e14" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>GetPropertyRange</name></member>
      <member refid="class_pcp_property_index_1a23055e9a75bfa1af8ea4462f232b3ab1" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>IsEmpty</name></member>
      <member refid="class_pcp_property_index_1a8aaa8d06f7a3b4cf89943db1f9168653" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>PcpPropertyIndex</name></member>
      <member refid="class_pcp_property_index_1ad16c391605f6ce0eeddb205eb0e5bc91" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>PcpPropertyIndex</name></member>
      <member refid="class_pcp_property_index_1a7b8a02949ce85cf8bc524d07c1cda1f3" prot="private" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>PcpPropertyIterator</name></member>
      <member refid="class_pcp_property_index_1acaf1292f23adbe8278b0a3669e1efe6d" prot="public" virt="non-virtual"><scope>PcpPropertyIndex</scope><name>Swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
