<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_material_network" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStMaterialNetwork</compoundname>
    <includes refid="material_network_8h" local="no">materialNetwork.h</includes>
    <innerclass refid="struct_hd_st_material_network_1_1_texture_descriptor" prot="public">HdStMaterialNetwork::TextureDescriptor</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_st_material_network_1a4fccb95252ce52c3c5514147d6d72a41" prot="public" static="no">
        <type>std::vector&lt; TextureDescriptor &gt;</type>
        <definition>using TextureDescriptorVector =  std::vector&lt;TextureDescriptor&gt;</definition>
        <argsstring></argsstring>
        <name>TextureDescriptorVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="106" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_material_network_1a25b7c5f2be06279b7629babddffc24e0" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _materialTag</definition>
        <argsstring></argsstring>
        <name>_materialTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="112" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a7e142f0e1ed5b317942e1dee2a292f8c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _fragmentSource</definition>
        <argsstring></argsstring>
        <name>_fragmentSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="113" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a613d17bab0967d73cd382e90b39eaaf7" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _volumeSource</definition>
        <argsstring></argsstring>
        <name>_volumeSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="114" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a1b93cc3fe99d10ed628eed544f9d6262" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _geometrySource</definition>
        <argsstring></argsstring>
        <name>_geometrySource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="115" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a3a18282c2d71b3e809d516020cdd1e1e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _displacementSource</definition>
        <argsstring></argsstring>
        <name>_displacementSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="116" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a568a976d825ff9e3efaf98e7a52527b0" prot="private" static="no" mutable="no">
        <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>VtDictionary _materialMetadata</definition>
        <argsstring></argsstring>
        <name>_materialMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="117" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a87c96ed34840195abc5447f9ca1b0185" prot="private" static="no" mutable="no">
        <type>HdSt_MaterialParamVector</type>
        <definition>HdSt_MaterialParamVector _materialParams</definition>
        <argsstring></argsstring>
        <name>_materialParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="118" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1ac7173a2a8f574e4c70e65c0a6adf8733" prot="private" static="no" mutable="no">
        <type>TextureDescriptorVector</type>
        <definition>TextureDescriptorVector _textureDescriptors</definition>
        <argsstring></argsstring>
        <name>_textureDescriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="119" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1aa0829a6da48a5174625382afea59c307" prot="private" static="no" mutable="no">
        <type>HioGlslfxSharedPtr</type>
        <definition>HioGlslfxSharedPtr _surfaceGfx</definition>
        <argsstring></argsstring>
        <name>_surfaceGfx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="120" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_material_network_1a48fb835d9c511f1c70f6feb6d8aac0aa" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _surfaceGfxHash</definition>
        <argsstring></argsstring>
        <name>_surfaceGfxHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="121" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_material_network_1a0b2ef2b45a33f3f4785fc870b3141252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStMaterialNetwork</definition>
        <argsstring>()</argsstring>
        <name>HdStMaterialNetwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1a722716ccee54a357d01ad0878d871755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStMaterialNetwork</definition>
        <argsstring>()</argsstring>
        <name>~HdStMaterialNetwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1a65815bc1d66787a254bb7054d2a58242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void ProcessMaterialNetwork</definition>
        <argsstring>(SdfPath const &amp;materialId, HdMaterialNetworkMap const &amp;hdNetworkMap, HdStResourceRegistry *resourceRegistry)</argsstring>
        <name>ProcessMaterialNetwork</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> const &amp;</type>
          <declname>hdNetworkMap</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <briefdescription>
<para>Process a material network topology and extract all the information we need from it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1a2da0d66c389b1903eb6887c4e1f764da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>HDST_API TfToken const&amp; GetMaterialTag</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1a11669eb49be971fb41746478edb929c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API std::string const  &amp;</type>
        <definition>HDST_API std::string const&amp; GetFragmentCode</definition>
        <argsstring>() const</argsstring>
        <name>GetFragmentCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1adcbe818b27438c1bab44098080141167" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API std::string const  &amp;</type>
        <definition>HDST_API std::string const&amp; GetVolumeCode</definition>
        <argsstring>() const</argsstring>
        <name>GetVolumeCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1acb2fc44288cb4f40e8801a529d07aaf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API std::string const  &amp;</type>
        <definition>HDST_API std::string const&amp; GetGeometryCode</definition>
        <argsstring>() const</argsstring>
        <name>GetGeometryCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1abbf5694760ac3c8d4d8119018f0bf52a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API std::string const  &amp;</type>
        <definition>HDST_API std::string const&amp; GetDisplacementCode</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplacementCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1a34f0df88b625a191583b0936cb4b0f2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const  &amp;</type>
        <definition>HDST_API VtDictionary const&amp; GetMetadata</definition>
        <argsstring>() const</argsstring>
        <name>GetMetadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1af2024960e3c3e7a66319670e8349973f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdSt_MaterialParamVector const  &amp;</type>
        <definition>HDST_API HdSt_MaterialParamVector const&amp; GetMaterialParams</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_material_network_1aef5414ddd6d3986a8949c78c9f812ee6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API TextureDescriptorVector const  &amp;</type>
        <definition>HDST_API TextureDescriptorVector const&amp; GetTextureDescriptors</definition>
        <argsstring>() const</argsstring>
        <name>GetTextureDescriptors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/materialNetwork.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helps HdStMaterial process a Hydra material network into shader source code and parameters values. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/materialNetwork.h" line="45" column="1" bodyfile="pxr/imaging/hdSt/materialNetwork.h" bodystart="44" bodyend="122"/>
    <listofallmembers>
      <member refid="class_hd_st_material_network_1a3a18282c2d71b3e809d516020cdd1e1e" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_displacementSource</name></member>
      <member refid="class_hd_st_material_network_1a7e142f0e1ed5b317942e1dee2a292f8c" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_fragmentSource</name></member>
      <member refid="class_hd_st_material_network_1a1b93cc3fe99d10ed628eed544f9d6262" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_geometrySource</name></member>
      <member refid="class_hd_st_material_network_1a568a976d825ff9e3efaf98e7a52527b0" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_materialMetadata</name></member>
      <member refid="class_hd_st_material_network_1a87c96ed34840195abc5447f9ca1b0185" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_materialParams</name></member>
      <member refid="class_hd_st_material_network_1a25b7c5f2be06279b7629babddffc24e0" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_materialTag</name></member>
      <member refid="class_hd_st_material_network_1aa0829a6da48a5174625382afea59c307" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_surfaceGfx</name></member>
      <member refid="class_hd_st_material_network_1a48fb835d9c511f1c70f6feb6d8aac0aa" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_surfaceGfxHash</name></member>
      <member refid="class_hd_st_material_network_1ac7173a2a8f574e4c70e65c0a6adf8733" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_textureDescriptors</name></member>
      <member refid="class_hd_st_material_network_1a613d17bab0967d73cd382e90b39eaaf7" prot="private" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>_volumeSource</name></member>
      <member refid="class_hd_st_material_network_1abbf5694760ac3c8d4d8119018f0bf52a" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetDisplacementCode</name></member>
      <member refid="class_hd_st_material_network_1a11669eb49be971fb41746478edb929c7" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetFragmentCode</name></member>
      <member refid="class_hd_st_material_network_1acb2fc44288cb4f40e8801a529d07aaf7" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetGeometryCode</name></member>
      <member refid="class_hd_st_material_network_1af2024960e3c3e7a66319670e8349973f" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetMaterialParams</name></member>
      <member refid="class_hd_st_material_network_1a2da0d66c389b1903eb6887c4e1f764da" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetMaterialTag</name></member>
      <member refid="class_hd_st_material_network_1a34f0df88b625a191583b0936cb4b0f2b" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetMetadata</name></member>
      <member refid="class_hd_st_material_network_1aef5414ddd6d3986a8949c78c9f812ee6" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetTextureDescriptors</name></member>
      <member refid="class_hd_st_material_network_1adcbe818b27438c1bab44098080141167" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>GetVolumeCode</name></member>
      <member refid="class_hd_st_material_network_1a0b2ef2b45a33f3f4785fc870b3141252" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>HdStMaterialNetwork</name></member>
      <member refid="class_hd_st_material_network_1a65815bc1d66787a254bb7054d2a58242" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>ProcessMaterialNetwork</name></member>
      <member refid="class_hd_st_material_network_1a4fccb95252ce52c3c5514147d6d72a41" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>TextureDescriptorVector</name></member>
      <member refid="class_hd_st_material_network_1a722716ccee54a357d01ad0878d871755" prot="public" virt="non-virtual"><scope>HdStMaterialNetwork</scope><name>~HdStMaterialNetwork</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
