<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_dispatch_buffer" kind="class" language="C++" prot="public">
    <compoundname>HdStDispatchBuffer</compoundname>
    <basecompoundref refid="class_hd_buffer_array" prot="public" virt="non-virtual">HdBufferArray</basecompoundref>
    <includes refid="dispatch_buffer_8h" local="no">dispatchBuffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_dispatch_buffer_1a33c5de4dfb2c30c6b2539a97affea45d" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
        <definition>HdStResourceRegistry* _resourceRegistry</definition>
        <argsstring></argsstring>
        <name>_resourceRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="166" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_dispatch_buffer_1a83852750be9a651f15936176472dd5c0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _count</definition>
        <argsstring></argsstring>
        <name>_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="167" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_dispatch_buffer_1a2fce979822ce67b8cdae42de658dd3b5" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int _commandNumUints</definition>
        <argsstring></argsstring>
        <name>_commandNumUints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="168" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_dispatch_buffer_1aee41a79a9661a18a810e9371d37e9b30" prot="private" static="no" mutable="no">
        <type>HdStBufferResourceNamedList</type>
        <definition>HdStBufferResourceNamedList _resourceList</definition>
        <argsstring></argsstring>
        <name>_resourceList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="169" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_dispatch_buffer_1a49db8f9c9fb08a0b97e14c2a71121228" prot="private" static="no" mutable="no">
        <type>HdStBufferResourceSharedPtr</type>
        <definition>HdStBufferResourceSharedPtr _entireResource</definition>
        <argsstring></argsstring>
        <name>_entireResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="170" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_dispatch_buffer_1a27fca16dfd31b8efd46b62e56869a2e9" prot="private" static="no" mutable="no">
        <type>HdStBufferArrayRangeSharedPtr</type>
        <definition>HdStBufferArrayRangeSharedPtr _bar</definition>
        <argsstring></argsstring>
        <name>_bar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="171" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1abc8e725d39a4dc5d5bb2a199f356e7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStDispatchBuffer</definition>
        <argsstring>(HdStResourceRegistry *resourceRegistry, TfToken const &amp;role, int count, unsigned int commandNumUints)</argsstring>
        <name>HdStDispatchBuffer</name>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>role</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>commandNumUints</declname>
        </param>
        <briefdescription>
<para>Constructor. commandNumUints is given in how many integers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a7bfe520912d4117105e7f11386c293c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStDispatchBuffer</definition>
        <argsstring>() override</argsstring>
        <name>~HdStDispatchBuffer</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a21ec3a0ef9e7ec97a96b219a44e0ce0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void CopyData</definition>
        <argsstring>(std::vector&lt; uint32_t &gt; const &amp;data)</argsstring>
        <name>CopyData</name>
        <param>
          <type>std::vector&lt; uint32_t &gt; const &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Update entire buffer data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a9cb798b55fdc0986034fe7002d7a0de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AddBufferResourceView</definition>
        <argsstring>(TfToken const &amp;name, HdTupleType tupleType, int offset)</argsstring>
        <name>AddBufferResourceView</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref></type>
          <declname>tupleType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Add an interleaved view to this buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a1a8e6ea8f7576186d25447059bf09a70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetCount</definition>
        <argsstring>() const</argsstring>
        <name>GetCount</name>
        <briefdescription>
<para>Returns the dispatch count. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="115" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1ad9419d40c25a46ad12795eb58d7a9c71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int GetCommandNumUints</definition>
        <argsstring>() const</argsstring>
        <name>GetCommandNumUints</name>
        <briefdescription>
<para>Returns the number of uints in a single draw command. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="118" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1ae0ce990295d02d56c53b40e0bdffa20c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStBufferArrayRangeSharedPtr</type>
        <definition>HdStBufferArrayRangeSharedPtr GetBufferArrayRange</definition>
        <argsstring>() const</argsstring>
        <name>GetBufferArrayRange</name>
        <briefdescription>
<para>Returns a bar which locates all interleaved resources of the entire buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="122" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a4ceed5d05beb2e466cf8581bef63bf79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStBufferResourceSharedPtr</type>
        <definition>HdStBufferResourceSharedPtr GetEntireResource</definition>
        <argsstring>() const</argsstring>
        <name>GetEntireResource</name>
        <briefdescription>
<para>Returns entire buffer as a single <ref refid="class_hd_st_buffer_resource" kindref="compound">HdStBufferResource</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="127" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a5f9010b31b42a68ebc2a665049a416f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool GarbageCollect</definition>
        <argsstring>() override</argsstring>
        <name>GarbageCollect</name>
        <reimplements refid="class_hd_buffer_array_1a0cb377d7abe60cfcc5b697ff6ef76e1f">GarbageCollect</reimplements>
        <briefdescription>
<para>Performs compaction if necessary and returns true if it becomes empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a2c4f0a949b3dcdc858fe96a73e5cfea9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Reallocate</definition>
        <argsstring>(std::vector&lt; HdBufferArrayRangeSharedPtr &gt; const &amp;, HdBufferArraySharedPtr const &amp;) override</argsstring>
        <name>Reallocate</name>
        <reimplements refid="class_hd_buffer_array_1a29d764a790a44bd5874a6193f1e8df78">Reallocate</reimplements>
        <param>
          <type>std::vector&lt; HdBufferArrayRangeSharedPtr &gt; const &amp;</type>
          <declname>ranges</declname>
        </param>
        <param>
          <type>HdBufferArraySharedPtr const &amp;</type>
          <declname>curRangeOwner</declname>
        </param>
        <briefdescription>
<para>Performs reallocation. </para>
        </briefdescription>
        <detaileddescription>
<para>After reallocation, the buffer will contain the specified <emphasis>ranges</emphasis>. If these ranges are currently held by a different buffer array instance, then their data will be copied from the specified <emphasis>curRangeOwner</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a6a48d7fbd02ba4c98eda7e7fa1a716ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void DebugDump</definition>
        <argsstring>(std::ostream &amp;out) const override</argsstring>
        <name>DebugDump</name>
        <reimplements refid="class_hd_buffer_array_1a1d73c3578ae8bc963a88e8ec7eacda20">DebugDump</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Debug output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a1b7cdfe73a61d84ffc3ae6aee4b02b43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStBufferResourceSharedPtr</type>
        <definition>HDST_API HdStBufferResourceSharedPtr GetResource</definition>
        <argsstring>() const</argsstring>
        <name>GetResource</name>
        <briefdescription>
<para>Returns the GPU resource. </para>
        </briefdescription>
        <detaileddescription>
<para>If the buffer array contains more than one resource, this method raises a coding error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a0f2cf5809b72fb98c9cbcadfe55d881f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStBufferResourceSharedPtr</type>
        <definition>HDST_API HdStBufferResourceSharedPtr GetResource</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>GetResource</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named GPU resource. </para>
        </briefdescription>
        <detaileddescription>
<para>This method returns the first found resource. In HDST_SAFE_MODE it checks all underlying GPU buffers in _resourceMap and raises a coding error if there are more than one GPU buffers exist. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a6d80d7e988d465733c7cb35ee7bc3d62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStBufferResourceNamedList const  &amp;</type>
        <definition>HdStBufferResourceNamedList const&amp; GetResources</definition>
        <argsstring>() const</argsstring>
        <name>GetResources</name>
        <briefdescription>
<para>Returns the list of all named GPU resources for this bufferArray. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="155" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="155" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_dispatch_buffer_1a058421d2ac66a88c81a5d2858de6d97e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStBufferResourceSharedPtr</type>
        <definition>HDST_API HdStBufferResourceSharedPtr _AddResource</definition>
        <argsstring>(TfToken const &amp;name, HdTupleType tupleType, int offset, int stride)</argsstring>
        <name>_AddResource</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref></type>
          <declname>tupleType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride</declname>
        </param>
        <briefdescription>
<para>Adds a new, named GPU resource and returns it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="160" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A VBO of a simple array of unsigned integers. </para>
    </briefdescription>
    <detaileddescription>
<para>This buffer is used to prepare data on the GPU for indirect dispatch i.e. to be consumed by MultiDrawIndirect or DispatchComputeIndirect. At the same time, interleaved subsets of the array are bound in several different ways to provide additional data interface to shaders.</para>
<para>For each binding, we define &apos;BufferResourceView&apos; on top of the uint array. <ref refid="class_hd_buffer_array" kindref="compound">HdBufferArray</ref> aggregates those views and HdResourceBinder binds them with specified binding method and interleaved offset.</para>
<para>Example: DrawElements + Instance culling : 14 integers for each drawitem <verbatim>                      BufferResourceViews    BufferResourceViews
                         for draw               for cull
</verbatim></para>
<para>+-<mdash/>draw item 0-<mdash/>+-------------------------<mdash/>&gt; destination buffer | count | <ndash/>+ | instanceCount | | | first | |-<mdash/>&gt; MDI dispatch | baseVertex | | | baseInstance | <ndash/>+----------------------<mdash/>&gt; drawitem index | cullCount | -<mdash/>+ | cullInstanceCount | |---------------------<mdash/>&gt; MDI dispatch | cullFirstVertex | | | cullBaseInstance | -<mdash/>+ | modelDC | <ndash/>+ | constantDC | |-<mdash/>&gt; DrawingCoord0 ----<mdash/>&gt; DrawingCoord0 | elementDC | | | primitiveDC | <ndash/>+ | fvarDC | <ndash/>+ | instanceIndexDC | |-<mdash/>&gt; DrawingCoord1 ----<mdash/>&gt; DrawingCoord1 | shaderDC | <ndash/>+ | (instanceDC[0]) | <ndash/>+ | (instanceDC[1]) | |-<mdash/>&gt; DrawingCoordI ----<mdash/>&gt; DrawingCoordI | (instanceDC[2]) | | | ... | <ndash/>+ +-<mdash/>draw item 1-<mdash/>+ | count | | instanceCount | | ... |</para>
<para>XXX: it would be better to generalize this class not only for dispatch buffer, if we see other similar use-cases. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3097">
        <label>HdBufferArray</label>
        <link refid="class_hd_buffer_array"/>
      </node>
      <node id="3096">
        <label>HdStDispatchBuffer</label>
        <link refid="class_hd_st_dispatch_buffer"/>
        <childnode refid="3097" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3099">
        <label>HdBufferArray</label>
        <link refid="class_hd_buffer_array"/>
      </node>
      <node id="3098">
        <label>HdStDispatchBuffer</label>
        <link refid="class_hd_st_dispatch_buffer"/>
        <childnode refid="3099" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/dispatchBuffer.h" line="92" column="1" bodyfile="pxr/imaging/hdSt/dispatchBuffer.h" bodystart="91" bodyend="172"/>
    <listofallmembers>
      <member refid="class_hd_st_dispatch_buffer_1a058421d2ac66a88c81a5d2858de6d97e" prot="protected" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_AddResource</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a27fca16dfd31b8efd46b62e56869a2e9" prot="private" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_bar</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a2fce979822ce67b8cdae42de658dd3b5" prot="private" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_commandNumUints</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a83852750be9a651f15936176472dd5c0" prot="private" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_count</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a49db8f9c9fb08a0b97e14c2a71121228" prot="private" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_entireResource</name></member>
      <member refid="class_hd_buffer_array_1a93c02d15df4b0808858bcddff0fdde69" prot="protected" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_needsReallocation</name></member>
      <member refid="class_hd_st_dispatch_buffer_1aee41a79a9661a18a810e9371d37e9b30" prot="private" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_resourceList</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a33c5de4dfb2c30c6b2539a97affea45d" prot="private" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_resourceRegistry</name></member>
      <member refid="class_hd_buffer_array_1a7317a6d3d67ebefe2abf4c8d965f7ce7" prot="protected" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_SetMaxNumRanges</name></member>
      <member refid="class_hd_buffer_array_1ad5fadff5878adff3580c953edf55c102" prot="protected" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>_SetRangeList</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a9cb798b55fdc0986034fe7002d7a0de4" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>AddBufferResourceView</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a21ec3a0ef9e7ec97a96b219a44e0ce0f" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>CopyData</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a6a48d7fbd02ba4c98eda7e7fa1a716ed" prot="public" virt="virtual"><scope>HdStDispatchBuffer</scope><name>DebugDump</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a5f9010b31b42a68ebc2a665049a416f2" prot="public" virt="virtual"><scope>HdStDispatchBuffer</scope><name>GarbageCollect</name></member>
      <member refid="class_hd_st_dispatch_buffer_1ae0ce990295d02d56c53b40e0bdffa20c" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetBufferArrayRange</name></member>
      <member refid="class_hd_st_dispatch_buffer_1ad9419d40c25a46ad12795eb58d7a9c71" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetCommandNumUints</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a1a8e6ea8f7576186d25447059bf09a70" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetCount</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a4ceed5d05beb2e466cf8581bef63bf79" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetEntireResource</name></member>
      <member refid="class_hd_buffer_array_1a397a08148e24f14f877445e6156c3fa2" prot="public" virt="virtual"><scope>HdStDispatchBuffer</scope><name>GetMaxNumElements</name></member>
      <member refid="class_hd_buffer_array_1abe22f4d5dc3fe18c11c7574230ad9f65" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetRange</name></member>
      <member refid="class_hd_buffer_array_1add00eb5e4d61e76656a7e34a1cc1fae5" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetRangeCount</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a1b7cdfe73a61d84ffc3ae6aee4b02b43" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetResource</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a0f2cf5809b72fb98c9cbcadfe55d881f" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetResource</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a6d80d7e988d465733c7cb35ee7bc3d62" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetResources</name></member>
      <member refid="class_hd_buffer_array_1aafbf8ee2945b8aea41e3627e502d6ec2" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetRole</name></member>
      <member refid="class_hd_buffer_array_1ab41a2692243892966815fba28c1f65bb" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetUsageHint</name></member>
      <member refid="class_hd_buffer_array_1ac13a730dc150777d7cb405148add123a" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>GetVersion</name></member>
      <member refid="class_hd_buffer_array_1af8b5995437a5e708eeda464350543f16" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>HdBufferArray</name></member>
      <member refid="class_hd_st_dispatch_buffer_1abc8e725d39a4dc5d5bb2a199f356e7ae" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>HdStDispatchBuffer</name></member>
      <member refid="class_hd_buffer_array_1a9566dc2cfe7a59933ec5b0157b9e680e" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>IncrementVersion</name></member>
      <member refid="class_hd_buffer_array_1a5eef7725fbdaff5123abd7ba4bb4aa86" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>IsImmutable</name></member>
      <member refid="class_hd_buffer_array_1a8774936bd0385297a3f1b113ffe761e2" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>NeedsReallocation</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a2c4f0a949b3dcdc858fe96a73e5cfea9" prot="public" virt="virtual"><scope>HdStDispatchBuffer</scope><name>Reallocate</name></member>
      <member refid="class_hd_buffer_array_1aa54b967fa38e565cff9275b60807b47b" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>RemoveUnusedRanges</name></member>
      <member refid="class_hd_buffer_array_1ac742e2a16bddc249a1a795ec9d04fa1a" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>TryAssignRange</name></member>
      <member refid="class_hd_buffer_array_1a20450a4e20aacd9ee223e6a47eadfe92" prot="public" virt="virtual"><scope>HdStDispatchBuffer</scope><name>~HdBufferArray</name></member>
      <member refid="class_hd_st_dispatch_buffer_1a7bfe520912d4117105e7f11386c293c8" prot="public" virt="non-virtual"><scope>HdStDispatchBuffer</scope><name>~HdStDispatchBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
