<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_material_network2_interface" kind="class" language="C++" prot="public">
    <compoundname>HdMaterialNetwork2Interface</compoundname>
    <basecompoundref refid="class_hd_material_network_interface" prot="public" virt="non-virtual">HdMaterialNetworkInterface</basecompoundref>
    <includes refid="material_network2_interface_8h" local="no">materialNetwork2Interface.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_material_network2_interface_1aac32fe21cae1b304e564ed38adcfe406" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _materialPrimPath</definition>
        <argsstring></argsstring>
        <name>_materialPrimPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="150" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_material_network2_interface_1a8e9ffa3bc91e1427a5588055bcc2a04b" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref> *</type>
        <definition>HdMaterialNetwork2* _materialNetwork</definition>
        <argsstring></argsstring>
        <name>_materialNetwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="151" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_material_network2_interface_1a26fa05b661fbe08d3e031c1ccc87c26f" prot="private" static="no" mutable="yes">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _lastAccessedNodeName</definition>
        <argsstring></argsstring>
        <name>_lastAccessedNodeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="152" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_material_network2_interface_1aece00d2970541d3134be09d68579225c" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> *</type>
        <definition>HdMaterialNode2* _lastAccessedNode</definition>
        <argsstring></argsstring>
        <name>_lastAccessedNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="153" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_material_network2_interface_1ad269c312eff19e8e5b6daae984a30e87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdMaterialNetwork2Interface</definition>
        <argsstring>(const SdfPath &amp;materialPrimPath, HdMaterialNetwork2 *materialNetwork)</argsstring>
        <name>HdMaterialNetwork2Interface</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>materialPrimPath</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref> *</type>
          <declname>materialNetwork</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="44" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="44" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a95ac71a80db2f333914ceae5d35066a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>HD_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>HD_API SdfPath GetMaterialPrimPath</definition>
        <argsstring>() const override</argsstring>
        <name>GetMaterialPrimPath</name>
        <reimplements refid="class_hd_material_network_interface_1a0101bd55c26f4e543301448f3bf795fa">GetMaterialPrimPath</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="53" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a6cd1384e3b97c8d3a1b9e20be1b091f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>HD_API std::string</type>
        <definition>HD_API std::string GetModelAssetName</definition>
        <argsstring>() const override</argsstring>
        <name>GetModelAssetName</name>
        <reimplements refid="class_hd_material_network_interface_1a0031ff9f7829a27e030998a10901fdee">GetModelAssetName</reimplements>
        <briefdescription>
<para>Returns the nearest enclosing model asset name, as described by the model schema, or empty string if none is available. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="58" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a7ec07a9456800aaf12b7db258785e319" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>HD_API TfTokenVector GetNodeNames</definition>
        <argsstring>() const override</argsstring>
        <name>GetNodeNames</name>
        <reimplements refid="class_hd_material_network_interface_1a5fd06b354c55e37c38dc8521115c53df">GetNodeNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a4ae699ccb44f1ae4c12167dc72cb7b73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>HD_API TfToken GetNodeType</definition>
        <argsstring>(const TfToken &amp;nodeName) const override</argsstring>
        <name>GetNodeType</name>
        <reimplements refid="class_hd_material_network_interface_1a424e58dd7794d77c514999f5db321766">GetNodeType</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1ad703ede911c94051d9513f387c5f140b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>HD_API TfTokenVector GetNodeTypeInfoKeys</definition>
        <argsstring>(const TfToken &amp;nodeName) const override</argsstring>
        <name>GetNodeTypeInfoKeys</name>
        <reimplements refid="class_hd_material_network_interface_1acf5e6c0d545f86dbc2036af0634fd019">GetNodeTypeInfoKeys</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
<para>Node type info is a collection of data related to the node type, often used to determine the node type. </para>
        </briefdescription>
        <detaileddescription>
<para>For now, we only have getters for this, as we aren&apos;t really intending on mutating this in any filter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1aeb2a4bc95637b96af990777013fba5ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>HD_API VtValue GetNodeTypeInfoValue</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;key) const override</argsstring>
        <name>GetNodeTypeInfoValue</name>
        <reimplements refid="class_hd_material_network_interface_1a52e8eb5bd7ef5aaf81c3ffc49ceee913">GetNodeTypeInfoValue</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1ac7a393509eae21e25577d08c3136ae53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>HD_API TfTokenVector GetAuthoredNodeParameterNames</definition>
        <argsstring>(const TfToken &amp;nodeName) const override</argsstring>
        <name>GetAuthoredNodeParameterNames</name>
        <reimplements refid="class_hd_material_network_interface_1a3a8a4d56cb9b471058aa291b0349658e">GetAuthoredNodeParameterNames</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1acbf1e7d97345c2c4a0175aeb0c699ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>HD_API VtValue GetNodeParameterValue</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;paramName) const override</argsstring>
        <name>GetNodeParameterValue</name>
        <reimplements refid="class_hd_material_network_interface_1a52b031fc3b4d2feb203afa78e5473733">GetNodeParameterValue</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a5c9acb1177038064e50e7397b218e6fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API NodeParamData</type>
        <definition>HD_API NodeParamData GetNodeParameterData</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;paramName) const override</argsstring>
        <name>GetNodeParameterData</name>
        <reimplements refid="class_hd_material_network_interface_1ab13ae2bdd3f7a1a3b2831c54099ecf36">GetNodeParameterData</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a2307af2ef1e1244adda25a33d47c2897" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>HD_API TfTokenVector GetNodeInputConnectionNames</definition>
        <argsstring>(const TfToken &amp;nodeName) const override</argsstring>
        <name>GetNodeInputConnectionNames</name>
        <reimplements refid="class_hd_material_network_interface_1a188e7ec5fb039cb744db202b28cb093f">GetNodeInputConnectionNames</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1af3f77436373bf0eb20b13300818c7f46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_tf_small_vector" kindref="compound">InputConnectionVector</ref></type>
        <definition>HD_API InputConnectionVector GetNodeInputConnection</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;inputName) const override</argsstring>
        <name>GetNodeInputConnection</name>
        <reimplements refid="class_hd_material_network_interface_1ab09028c64280b21f2bbda1e0a291923d">GetNodeInputConnection</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>inputName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a8f10cf1b0df209c88df4445321ae9606" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void DeleteNode</definition>
        <argsstring>(const TfToken &amp;nodeName) override</argsstring>
        <name>DeleteNode</name>
        <reimplements refid="class_hd_material_network_interface_1aaa6965805078ffb458b5ad27c7a95498">DeleteNode</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1ac74b68479d957b8ebd21b28f87461e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetNodeType</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;nodeType) override</argsstring>
        <name>SetNodeType</name>
        <reimplements refid="class_hd_material_network_interface_1ac7bcb6a035430248f613f093ee894586">SetNodeType</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a1948f2eee3493ff89b4dd035b8a1bd9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetNodeParameterValue</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;paramName, const VtValue &amp;value) override</argsstring>
        <name>SetNodeParameterValue</name>
        <reimplements refid="class_hd_material_network_interface_1ae9d9bfc8c7682d4c35577cb885878400">SetNodeParameterValue</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a8d71687d66c349358eed782a37ba0fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetNodeParameterData</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;paramName, const NodeParamData &amp;paramData) override</argsstring>
        <name>SetNodeParameterData</name>
        <reimplements refid="class_hd_material_network_interface_1abc9b87a102bb0f1e66e14a9b091ee430">SetNodeParameterData</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type>const NodeParamData &amp;</type>
          <declname>paramData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a1847b3fee522257f7b949e9aedca0929" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void DeleteNodeParameter</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;paramName) override</argsstring>
        <name>DeleteNodeParameter</name>
        <reimplements refid="class_hd_material_network_interface_1aa0745d2a77259a012c7938bd5dd79e63">DeleteNodeParameter</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a86645a4aacbe8d2efd7ab2d1e1491cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetNodeInputConnection</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;inputName, const InputConnectionVector &amp;connections) override</argsstring>
        <name>SetNodeInputConnection</name>
        <reimplements refid="class_hd_material_network_interface_1a88eaf537100bb6d68b3d79cdb39bc7e1">SetNodeInputConnection</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>inputName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_small_vector" kindref="compound">InputConnectionVector</ref> &amp;</type>
          <declname>connections</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1ab88545381f8f3b1abc35e57f8b107edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void DeleteNodeInputConnection</definition>
        <argsstring>(const TfToken &amp;nodeName, const TfToken &amp;inputName) override</argsstring>
        <name>DeleteNodeInputConnection</name>
        <reimplements refid="class_hd_material_network_interface_1a54df68cc21fdb558f435d3c90a84b20a">DeleteNodeInputConnection</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>inputName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a452e12e29d5be3eccf99d106cee95044" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>HD_API TfTokenVector GetTerminalNames</definition>
        <argsstring>() const override</argsstring>
        <name>GetTerminalNames</name>
        <reimplements refid="class_hd_material_network_interface_1a260db40b35870cb8fb6f8eed4c4a8326">GetTerminalNames</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 Terminal query &amp; mutation </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1acf379aab71ee3df2fe7419be20a70f0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API InputConnectionResult</type>
        <definition>HD_API InputConnectionResult GetTerminalConnection</definition>
        <argsstring>(const TfToken &amp;terminalName) const override</argsstring>
        <name>GetTerminalConnection</name>
        <reimplements refid="class_hd_material_network_interface_1a385eddb4a6a5241ef88d9735548b4ee6">GetTerminalConnection</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>terminalName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1aa9fe096ae74f3cc87896c26e7fda988d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void DeleteTerminal</definition>
        <argsstring>(const TfToken &amp;terminalName) override</argsstring>
        <name>DeleteTerminal</name>
        <reimplements refid="class_hd_material_network_interface_1a65bc9497aca3bd530a4c03e54b9fd1f9">DeleteTerminal</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>terminalName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1aaf31ada81a5ed85784da0b0138b39226" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetTerminalConnection</definition>
        <argsstring>(const TfToken &amp;terminalName, const InputConnection &amp;connection) override</argsstring>
        <name>SetTerminalConnection</name>
        <reimplements refid="class_hd_material_network_interface_1ae122bb4a937dfa61a61f6d30d1664f8c">SetTerminalConnection</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>terminalName</declname>
        </param>
        <param>
          <type>const InputConnection &amp;</type>
          <declname>connection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_material_network2_interface_1a394e81ebf2417f8ca4eb823691aa5d0a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> *</type>
        <definition>HdMaterialNode2* _GetNode</definition>
        <argsstring>(const TfToken &amp;nodeName) const</argsstring>
        <name>_GetNode</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_material_network2_interface_1a049e5e0cfb98063b71e68be2874ffbdf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> *</type>
        <definition>HdMaterialNode2* _GetOrCreateNode</definition>
        <argsstring>(const TfToken &amp;nodeName) const</argsstring>
        <name>_GetOrCreateNode</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="156" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements <ref refid="class_hd_material_network_interface" kindref="compound">HdMaterialNetworkInterface</ref> interface backed by an <ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref> <ndash/> which is useful for implementing material filtering functions without being tied to the legacy data model. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2209">
        <label>HdMaterialNetwork2Interface</label>
        <link refid="class_hd_material_network2_interface"/>
        <childnode refid="2210" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2210">
        <label>HdMaterialNetworkInterface</label>
        <link refid="class_hd_material_network_interface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2211">
        <label>HdMaterialNetwork2Interface</label>
        <link refid="class_hd_material_network2_interface"/>
        <childnode refid="2212" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2212">
        <label>HdMaterialNetworkInterface</label>
        <link refid="class_hd_material_network_interface"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/materialNetwork2Interface.h" line="41" column="1" bodyfile="pxr/imaging/hd/materialNetwork2Interface.h" bodystart="39" bodyend="158"/>
    <listofallmembers>
      <member refid="class_hd_material_network2_interface_1a394e81ebf2417f8ca4eb823691aa5d0a" prot="private" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>_GetNode</name></member>
      <member refid="class_hd_material_network2_interface_1a049e5e0cfb98063b71e68be2874ffbdf" prot="private" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>_GetOrCreateNode</name></member>
      <member refid="class_hd_material_network2_interface_1aece00d2970541d3134be09d68579225c" prot="private" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>_lastAccessedNode</name></member>
      <member refid="class_hd_material_network2_interface_1a26fa05b661fbe08d3e031c1ccc87c26f" prot="private" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>_lastAccessedNodeName</name></member>
      <member refid="class_hd_material_network2_interface_1a8e9ffa3bc91e1427a5588055bcc2a04b" prot="private" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>_materialNetwork</name></member>
      <member refid="class_hd_material_network2_interface_1aac32fe21cae1b304e564ed38adcfe406" prot="private" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>_materialPrimPath</name></member>
      <member refid="class_hd_material_network2_interface_1a8f10cf1b0df209c88df4445321ae9606" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>DeleteNode</name></member>
      <member refid="class_hd_material_network2_interface_1ab88545381f8f3b1abc35e57f8b107edd" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>DeleteNodeInputConnection</name></member>
      <member refid="class_hd_material_network2_interface_1a1847b3fee522257f7b949e9aedca0929" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>DeleteNodeParameter</name></member>
      <member refid="class_hd_material_network2_interface_1aa9fe096ae74f3cc87896c26e7fda988d" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>DeleteTerminal</name></member>
      <member refid="class_hd_material_network2_interface_1ac7a393509eae21e25577d08c3136ae53" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetAuthoredNodeParameterNames</name></member>
      <member refid="class_hd_material_network2_interface_1a95ac71a80db2f333914ceae5d35066a9" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetMaterialPrimPath</name></member>
      <member refid="class_hd_material_network2_interface_1a6cd1384e3b97c8d3a1b9e20be1b091f5" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetModelAssetName</name></member>
      <member refid="class_hd_material_network2_interface_1af3f77436373bf0eb20b13300818c7f46" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeInputConnection</name></member>
      <member refid="class_hd_material_network2_interface_1a2307af2ef1e1244adda25a33d47c2897" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeInputConnectionNames</name></member>
      <member refid="class_hd_material_network2_interface_1a7ec07a9456800aaf12b7db258785e319" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeNames</name></member>
      <member refid="class_hd_material_network2_interface_1a5c9acb1177038064e50e7397b218e6fb" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeParameterData</name></member>
      <member refid="class_hd_material_network2_interface_1acbf1e7d97345c2c4a0175aeb0c699ba1" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeParameterValue</name></member>
      <member refid="class_hd_material_network2_interface_1a4ae699ccb44f1ae4c12167dc72cb7b73" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeType</name></member>
      <member refid="class_hd_material_network2_interface_1ad703ede911c94051d9513f387c5f140b" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeTypeInfoKeys</name></member>
      <member refid="class_hd_material_network2_interface_1aeb2a4bc95637b96af990777013fba5ae" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetNodeTypeInfoValue</name></member>
      <member refid="class_hd_material_network2_interface_1acf379aab71ee3df2fe7419be20a70f0b" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetTerminalConnection</name></member>
      <member refid="class_hd_material_network2_interface_1a452e12e29d5be3eccf99d106cee95044" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>GetTerminalNames</name></member>
      <member refid="class_hd_material_network2_interface_1ad269c312eff19e8e5b6daae984a30e87" prot="public" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>HdMaterialNetwork2Interface</name></member>
      <member refid="class_hd_material_network_interface_1abff3986e4f64b5d6e46e25bea29b8dae" prot="public" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>InputConnectionResult</name></member>
      <member refid="class_hd_material_network_interface_1ae5d022ea3f4769910081a06cc8eea222" prot="public" virt="non-virtual"><scope>HdMaterialNetwork2Interface</scope><name>InputConnectionVector</name></member>
      <member refid="class_hd_material_network2_interface_1a86645a4aacbe8d2efd7ab2d1e1491cff" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>SetNodeInputConnection</name></member>
      <member refid="class_hd_material_network2_interface_1a8d71687d66c349358eed782a37ba0fda" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>SetNodeParameterData</name></member>
      <member refid="class_hd_material_network2_interface_1a1948f2eee3493ff89b4dd035b8a1bd9f" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>SetNodeParameterValue</name></member>
      <member refid="class_hd_material_network2_interface_1ac74b68479d957b8ebd21b28f87461e6b" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>SetNodeType</name></member>
      <member refid="class_hd_material_network2_interface_1aaf31ada81a5ed85784da0b0138b39226" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>SetTerminalConnection</name></member>
      <member refid="class_hd_material_network_interface_1a558498fa215bc46261a1f38745a4f87f" prot="public" virt="virtual"><scope>HdMaterialNetwork2Interface</scope><name>~HdMaterialNetworkInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
