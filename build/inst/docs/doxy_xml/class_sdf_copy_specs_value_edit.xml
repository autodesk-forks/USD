<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_copy_specs_value_edit" kind="class" language="C++" prot="public">
    <compoundname>SdfCopySpecsValueEdit</compoundname>
    <includes refid="copy_utils_8h" local="no">copyUtils.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_copy_specs_value_edit_1ae8a067b253b581929eca72107d0b229b" prot="public" static="no">
        <type>std::function&lt; void(const SdfLayerHandle &amp;, const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;)&gt;</type>
        <definition>using EditFunction =  std::function&lt;void(const SdfLayerHandle&amp;, const SdfPath&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>EditFunction</name>
        <briefdescription>
<para>Callback to apply a scene description edit to the specified layer and spec path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/copyUtils.h" line="121" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sdf_copy_specs_value_edit_1a1d6a36350336443ae61ddfae22e39d7c" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_copy_specs_value_edit_1ae8a067b253b581929eca72107d0b229b" kindref="member">EditFunction</ref></type>
        <definition>EditFunction _edit</definition>
        <argsstring></argsstring>
        <name>_edit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/copyUtils.h" line="133" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_copy_specs_value_edit_1a9346ef42ff9ba9e46a428a02253cd1c5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfCopySpecsValueEdit</definition>
        <argsstring>(const EditFunction &amp;edit)</argsstring>
        <name>SdfCopySpecsValueEdit</name>
        <param>
          <type>const <ref refid="class_sdf_copy_specs_value_edit_1ae8a067b253b581929eca72107d0b229b" kindref="member">EditFunction</ref> &amp;</type>
          <declname>edit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/copyUtils.h" line="124" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_copy_specs_value_edit_1a4d1997d2e997917ca08fd57e2a795d4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_sdf_copy_specs_value_edit_1ae8a067b253b581929eca72107d0b229b" kindref="member">EditFunction</ref> &amp;</type>
        <definition>const EditFunction&amp; GetEditFunction</definition>
        <argsstring>() const</argsstring>
        <name>GetEditFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/copyUtils.h" line="125" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_copy_specs_value_edit_1a960dad6d716e0ca2acd7879a8ebc47a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const SdfCopySpecsValueEdit &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_sdf_copy_specs_value_edit" kindref="compound">SdfCopySpecsValueEdit</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para><ref refid="class_sdf_copy_specs_value_edit" kindref="compound">SdfCopySpecsValueEdit</ref> objects are not comparable, but must provide operator== to be stored in a <ref refid="class_vt_value" kindref="compound">VtValue</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/copyUtils.h" line="129" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_copy_specs_value_edit_1a6db950a8200f407d4eb4a0e85a842564" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const SdfCopySpecsValueEdit &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_sdf_copy_specs_value_edit" kindref="compound">SdfCopySpecsValueEdit</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/copyUtils.h" line="130" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="130" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value containing an editing operation for SdfCopySpecs. </para>
    </briefdescription>
    <detaileddescription>
<para>The SdfShouldCopyValueFn callback allows users to return a value to copy into the destination spec via the <computeroutput>valueToCopy</computeroutput> parameter. However, there may be cases where it would be more efficient to perform incremental edits using specific <ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref> API instead.</para>
<para>To accommodate this, consumers may provide a callback that applies a scene description edit in <computeroutput>valueToCopy</computeroutput> via an <ref refid="class_sdf_copy_specs_value_edit" kindref="compound">SdfCopySpecsValueEdit</ref> object. </para>
    </detaileddescription>
    <location file="pxr/usd/sdf/copyUtils.h" line="117" column="1" bodyfile="pxr/usd/sdf/copyUtils.h" bodystart="116" bodyend="134"/>
    <listofallmembers>
      <member refid="class_sdf_copy_specs_value_edit_1a1d6a36350336443ae61ddfae22e39d7c" prot="private" virt="non-virtual"><scope>SdfCopySpecsValueEdit</scope><name>_edit</name></member>
      <member refid="class_sdf_copy_specs_value_edit_1ae8a067b253b581929eca72107d0b229b" prot="public" virt="non-virtual"><scope>SdfCopySpecsValueEdit</scope><name>EditFunction</name></member>
      <member refid="class_sdf_copy_specs_value_edit_1a4d1997d2e997917ca08fd57e2a795d4a" prot="public" virt="non-virtual"><scope>SdfCopySpecsValueEdit</scope><name>GetEditFunction</name></member>
      <member refid="class_sdf_copy_specs_value_edit_1a6db950a8200f407d4eb4a0e85a842564" prot="public" virt="non-virtual"><scope>SdfCopySpecsValueEdit</scope><name>operator!=</name></member>
      <member refid="class_sdf_copy_specs_value_edit_1a960dad6d716e0ca2acd7879a8ebc47a5" prot="public" virt="non-virtual"><scope>SdfCopySpecsValueEdit</scope><name>operator==</name></member>
      <member refid="class_sdf_copy_specs_value_edit_1a9346ef42ff9ba9e46a428a02253cd1c5" prot="public" virt="non-virtual"><scope>SdfCopySpecsValueEdit</scope><name>SdfCopySpecsValueEdit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
