<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_site" kind="class" language="C++" prot="public">
    <compoundname>PcpSite</compoundname>
    <includes refid="pcp_2site_8h" local="no">site.h</includes>
    <innerclass refid="struct_pcp_site_1_1_hash" prot="public">PcpSite::Hash</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pcp_site_1a5a81e12d7dfa025e23fb6a9c98652911" prot="public" static="no" mutable="no">
        <type><ref refid="class_pcp_layer_stack_identifier" kindref="compound">PcpLayerStackIdentifier</ref></type>
        <definition>PcpLayerStackIdentifier layerStackIdentifier</definition>
        <argsstring></argsstring>
        <name>layerStackIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="48" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_site_1a5c7d0fcc3e99fce68af2ad2d3d0b74c7" prot="public" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="49" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_site_1a6cc8a91d73a67e977e87310a1008c53a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpSite</definition>
        <argsstring>()</argsstring>
        <name>PcpSite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1a64a372352418f6ccf20d591c4db64a12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpSite</definition>
        <argsstring>(const PcpLayerStackIdentifier &amp;, const SdfPath &amp;path)</argsstring>
        <name>PcpSite</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_identifier" kindref="compound">PcpLayerStackIdentifier</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1a349f7ce478c4e8b2f3b99130b27d11c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpSite</definition>
        <argsstring>(const PcpLayerStackPtr &amp;, const SdfPath &amp;path)</argsstring>
        <name>PcpSite</name>
        <param>
          <type>const PcpLayerStackPtr &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1aa01cf041affd8e31016f7cad537087ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpSite</definition>
        <argsstring>(const SdfLayerHandle &amp;, const SdfPath &amp;path)</argsstring>
        <name>PcpSite</name>
        <param>
          <type>const SdfLayerHandle &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1af8e07deda1f92acd210771c2c1673c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpSite</definition>
        <argsstring>(const PcpLayerStackSite &amp;)</argsstring>
        <name>PcpSite</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1a98bddc94c5d49dbc754bde0b54ed17e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool operator==</definition>
        <argsstring>(const PcpSite &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_pcp_site" kindref="compound">PcpSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1a660afbc5e639ff138049cd6fd4b2f9af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const PcpSite &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_pcp_site" kindref="compound">PcpSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="66" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1a0388d37b88113384687d8f55e03ef927" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool operator&lt;</definition>
        <argsstring>(const PcpSite &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_pcp_site" kindref="compound">PcpSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1ab4a662597190bd2caabd6ce1c0212498" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const PcpSite &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_pcp_site" kindref="compound">PcpSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="73" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1a440c988eed427a3d078e993c5d68e305" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const PcpSite &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_pcp_site" kindref="compound">PcpSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="77" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_site_1ad3979504d195365afd258a4e7370e89f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const PcpSite &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_pcp_site" kindref="compound">PcpSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="81" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="81" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A site specifies a path in a layer stack of scene description. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4782">
        <label>PcpSite</label>
        <link refid="class_pcp_site"/>
        <childnode refid="4783" relation="usage">
          <edgelabel>layerStackIdentifier</edgelabel>
        </childnode>
        <childnode refid="4786" relation="usage">
          <edgelabel>path</edgelabel>
        </childnode>
      </node>
      <node id="4786">
        <label>SdfPath</label>
        <link refid="class_sdf_path"/>
      </node>
      <node id="4785">
        <label>ArResolverContext</label>
        <link refid="class_ar_resolver_context"/>
      </node>
      <node id="4783">
        <label>PcpLayerStackIdentifier</label>
        <link refid="class_pcp_layer_stack_identifier"/>
        <childnode refid="4784" relation="usage">
          <edgelabel>expressionVariablesOverrideSource</edgelabel>
        </childnode>
        <childnode refid="4785" relation="usage">
          <edgelabel>pathResolverContext</edgelabel>
        </childnode>
      </node>
      <node id="4784">
        <label>PcpExpressionVariablesSource</label>
        <link refid="class_pcp_expression_variables_source"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/pcp/site.h" line="46" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="45" bodyend="89"/>
    <listofallmembers>
      <member refid="class_pcp_site_1a5a81e12d7dfa025e23fb6a9c98652911" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>layerStackIdentifier</name></member>
      <member refid="class_pcp_site_1a660afbc5e639ff138049cd6fd4b2f9af" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>operator!=</name></member>
      <member refid="class_pcp_site_1a0388d37b88113384687d8f55e03ef927" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>operator&lt;</name></member>
      <member refid="class_pcp_site_1ab4a662597190bd2caabd6ce1c0212498" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>operator&lt;=</name></member>
      <member refid="class_pcp_site_1a98bddc94c5d49dbc754bde0b54ed17e4" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>operator==</name></member>
      <member refid="class_pcp_site_1a440c988eed427a3d078e993c5d68e305" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>operator&gt;</name></member>
      <member refid="class_pcp_site_1ad3979504d195365afd258a4e7370e89f" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>operator&gt;=</name></member>
      <member refid="class_pcp_site_1a5c7d0fcc3e99fce68af2ad2d3d0b74c7" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>path</name></member>
      <member refid="class_pcp_site_1a6cc8a91d73a67e977e87310a1008c53a" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>PcpSite</name></member>
      <member refid="class_pcp_site_1a64a372352418f6ccf20d591c4db64a12" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>PcpSite</name></member>
      <member refid="class_pcp_site_1a349f7ce478c4e8b2f3b99130b27d11c7" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>PcpSite</name></member>
      <member refid="class_pcp_site_1aa01cf041affd8e31016f7cad537087ef" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>PcpSite</name></member>
      <member refid="class_pcp_site_1af8e07deda1f92acd210771c2c1673c17" prot="public" virt="non-virtual"><scope>PcpSite</scope><name>PcpSite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
