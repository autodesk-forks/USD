<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_inbetween_shape" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelInbetweenShape</compoundname>
    <includes refid="inbetween_shape_8h" local="no">inbetweenShape.h</includes>
      <sectiondef kind="user-defined">
      <header>UsdAttribute API</header>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1aa7de176ee0f6bf8890f1812e93e43ce7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator UsdAttribute const &amp;</definition>
        <argsstring>() const</argsstring>
        <name>operator UsdAttribute const &amp;</name>
        <briefdescription>
<para>Allow <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> to auto-convert to <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref>, so you can pass a <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> to any function that accepts a <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> or const-ref thereto. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="125" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a1d68bd302d71917d30a1ff9e4e30d220" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> const  &amp;</type>
        <definition>UsdAttribute const&amp; GetAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetAttr</name>
        <briefdescription>
<para>Explicit <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> extractor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="128" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a87fbe0030c0fbb6307ee434664f1142f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsDefined</definition>
        <argsstring>() const</argsstring>
        <name>IsDefined</name>
        <briefdescription>
<para>Return true if the wrapped <ref refid="class_usd_property_1a409637b99e0b5b487b9e7d1d2016dbfc" kindref="member">UsdAttribute::IsDefined()</ref>, and in addition the attribute is identified as an Inbetween. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="132" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><anchor id="class_usd_skel_inbetween_shape_1UsdSkelInbetweenShape_bool"/>Return true if this Inbetween is valid for querying and authoring values and metadata, which is identically equivalent to <ref refid="class_usd_skel_inbetween_shape_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">IsDefined()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="138" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a5e23d83933dafa8a3ae391258ef24642" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdSkelInbetweenShape &amp;o) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="142" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1aca44c1ea2c1a815589c7bca10df7c42e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdSkelInbetweenShape &amp;o) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="146" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="146" bodyend="148"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_skel_inbetween_shape_1a18d4b0b2cc5ee1cb8652a89103f50b8e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSkelBlendShape</definition>
        <argsstring></argsstring>
        <name>UsdSkelBlendShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="153" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_skel_inbetween_shape_1a5264980b5cd3db34a397bfda54c1b566" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>UsdAttribute _attr</definition>
        <argsstring></argsstring>
        <name>_attr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="195" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a09ca29398cd03068fa372696bde8b465" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdSkelInbetweenShape</definition>
        <argsstring>()</argsstring>
        <name>UsdSkelInbetweenShape</name>
        <briefdescription>
<para>Default constructor returns an invalid inbetween shape. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="54" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1af14d279d347c3b01b25743678fdb1d14" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelInbetweenShape</definition>
        <argsstring>(const UsdAttribute &amp;attr)</argsstring>
        <name>UsdSkelInbetweenShape</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Speculative constructor that will produce a valid <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> when <computeroutput>attr</computeroutput> already represents an attribute that is an Inbetween, and produces an <emphasis>invalid</emphasis> Inbetween otherwise (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_skel_inbetween_shape_1UsdSkelInbetweenShape_bool" kindref="member">operator bool()</ref> will return false).</para>
<para>Calling <computeroutput>UsdSkelInbetweenShape::IsInbetween(attr)</computeroutput> will return the same truth value as this constructor, but if you plan to subsequently use the Inbetween anyways, just use this constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1ae5cac972754e06c164b89bf6ebd94643" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetWeight</definition>
        <argsstring>(float *weight) const</argsstring>
        <name>GetWeight</name>
        <param>
          <type>float *</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Return the location at which the shape is applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1af8cfbc60879da7992a07aa50ff593246" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool SetWeight</definition>
        <argsstring>(float weight) const</argsstring>
        <name>SetWeight</name>
        <param>
          <type>float</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
<para>Set the location at which the shape is applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a40e433d77516568450f3194509793010" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool HasAuthoredWeight</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredWeight</name>
        <briefdescription>
<para>Has a weight value been explicitly authored on this shape? </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_skel_inbetween_shape_1ae5cac972754e06c164b89bf6ebd94643" kindref="member">GetWeight()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a2034f926ed3ef9acfdf49e03b7e5357c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetOffsets</definition>
        <argsstring>(VtVec3fArray *offsets) const</argsstring>
        <name>GetOffsets</name>
        <param>
          <type>VtVec3fArray *</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
<para>Get the point offsets corresponding to this shape. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a84a454b42c83cb29d51104e36787b93f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool SetOffsets</definition>
        <argsstring>(const VtVec3fArray &amp;offsets) const</argsstring>
        <name>SetOffsets</name>
        <param>
          <type>const VtVec3fArray &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
<para>Set the point offsets corresponding to this shape. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a0c2949794ef2956e83f628e8b2274aed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetNormalOffsetsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetNormalOffsetsAttr</name>
        <briefdescription>
<para>Returns a valid normal offsets attribute if the shape has normal offsets. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns an invalid attribute otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a22429040904a08cef276b6d4ea49137f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateNormalOffsetsAttr</definition>
        <argsstring>(const VtValue &amp;defaultValue=VtValue()) const</argsstring>
        <name>CreateNormalOffsetsAttr</name>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns the existing normal offsets attribute if the shape has normal offsets, or creates a new one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1aabd627500c8de6500e0aab4eedb993ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetNormalOffsets</definition>
        <argsstring>(VtVec3fArray *offsets) const</argsstring>
        <name>GetNormalOffsets</name>
        <param>
          <type>VtVec3fArray *</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
<para>Get the normal offsets authored for this shape. </para>
        </briefdescription>
        <detaileddescription>
<para>Normal offsets are optional, and may be left unspecified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a3bfa1946dbbd9e930ad119179eae1d19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool SetNormalOffsets</definition>
        <argsstring>(const VtVec3fArray &amp;offsets) const</argsstring>
        <name>SetNormalOffsets</name>
        <param>
          <type>const VtVec3fArray &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
<para>Set the normal offsets authored for this shape. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a7ee91c86b0fb5e8943480abcb10a0ea7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>static USDSKEL_API bool IsInbetween</definition>
        <argsstring>(const UsdAttribute &amp;attr)</argsstring>
        <name>IsInbetween</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Test whether a given <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> represents a valid Inbetween, which implies that creating a <ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref> from the attribute will succeed. </para>
        </briefdescription>
        <detaileddescription>
<para>Succes implies that <computeroutput>attr.IsDefined()</computeroutput> is true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a69f799c94338b29d11902c77a9565c82" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsValidInbetweenName</definition>
        <argsstring>(const std::string &amp;name, bool quiet=false)</argsstring>
        <name>_IsValidInbetweenName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quiet</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Validate that the given <computeroutput>name</computeroutput> is a valid attribute name for an inbetween. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a73a0a13bcf8259a8226abcef5a65300d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsNamespaced</definition>
        <argsstring>(const TfToken &amp;name)</argsstring>
        <name>_IsNamespaced</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Validate that the given <computeroutput>name</computeroutput> contains the inbetweens namespace. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not validate <computeroutput>name</computeroutput> as a legal property identifier. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a224ed1e54875e4366010b843042b2f73" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>static TfToken _MakeNamespaced</definition>
        <argsstring>(const TfToken &amp;name, bool quiet=false)</argsstring>
        <name>_MakeNamespaced</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>quiet</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Return <computeroutput>name</computeroutput> prepended with the proper inbetween namespace, if it is not already prefixed. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not validate <computeroutput>name</computeroutput> as a legal property identifier, but will verify that <computeroutput>name</computeroutput> contains no reserved keywords, and will return an empty <ref refid="class_tf_token" kindref="compound">TfToken</ref> if it does. If <computeroutput>quiet</computeroutput> is true, the verification will be silent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1ae14c47bba6916bf6daf6484bc7f30236" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>static const TfToken&amp; _GetNamespacePrefix</definition>
        <argsstring>()</argsstring>
        <name>_GetNamespacePrefix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a22ca764b0e331fe545d30c41711c6a46" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>static const TfToken&amp; _GetNormalOffsetsSuffix</definition>
        <argsstring>()</argsstring>
        <name>_GetNormalOffsetsSuffix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1ae657e317f445dc713bb2f229f7c57ea0" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_skel_inbetween_shape" kindref="compound">UsdSkelInbetweenShape</ref></type>
        <definition>static UsdSkelInbetweenShape _Create</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;name)</argsstring>
        <name>_Create</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Factory for UsdBlendShape&apos;s use, so that we can encapsulate the logic of what discriminates an Inbetween in this class, while preserving the pattern that attributes can only be created via their container objects. </para>
        </briefdescription>
        <detaileddescription>
<para>The name of the created attribute may or may not be the specified <computeroutput>attrName</computeroutput>, due to the possible need to apply property namespacing.</para>
<para><simplesect kind="return"><para>an invalid Inbetween if we failed to create a valid attribute, o ra valid Inbetween otherwise. It is not an error to create over an existing, compatible attribute.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a935381d7c7100b583fdcdb0e10dae9e6" kindref="member">UsdPrim::CreateAttribute()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="192" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_skel_inbetween_shape_1a218d2f11870e666d30dad8720487faae" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>UsdAttribute _GetNormalOffsetsAttr</definition>
        <argsstring>(bool create) const</argsstring>
        <name>_GetNormalOffsetsAttr</name>
        <param>
          <type>bool</type>
          <declname>create</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/inbetweenShape.h" line="177" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Schema wrapper for <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> for authoring and introspecting attributes that serve as inbetween shapes of a <ref refid="class_usd_skel_blend_shape" kindref="compound">UsdSkelBlendShape</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Inbetween shapes allow an explicit shape to be specified when the blendshape to which it&apos;s bound is evaluated at a certain weight. For example, rather than performing piecewise linear interpolation between a primary shape and the rest shape at weight 0.5, an inbetween shape could be defined at the weight. For weight values greater than 0.5, a shape would then be resolved by linearly interpolating between the inbetween shape and the primary shape, while for weight values less than or equal to 0.5, the shape is resolved by linearly interpolating between the inbetween shape and the primary shape. </para>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/inbetweenShape.h" line="51" column="1" bodyfile="pxr/usd/usdSkel/inbetweenShape.h" bodystart="50" bodyend="196"/>
    <listofallmembers>
      <member refid="class_usd_skel_inbetween_shape_1a5264980b5cd3db34a397bfda54c1b566" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_attr</name></member>
      <member refid="class_usd_skel_inbetween_shape_1ae657e317f445dc713bb2f229f7c57ea0" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_Create</name></member>
      <member refid="class_usd_skel_inbetween_shape_1ae14c47bba6916bf6daf6484bc7f30236" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_GetNamespacePrefix</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a218d2f11870e666d30dad8720487faae" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_GetNormalOffsetsAttr</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a22ca764b0e331fe545d30c41711c6a46" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_GetNormalOffsetsSuffix</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a73a0a13bcf8259a8226abcef5a65300d" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_IsNamespaced</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a69f799c94338b29d11902c77a9565c82" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_IsValidInbetweenName</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a224ed1e54875e4366010b843042b2f73" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>_MakeNamespaced</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a22429040904a08cef276b6d4ea49137f" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>CreateNormalOffsetsAttr</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a1d68bd302d71917d30a1ff9e4e30d220" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>GetAttr</name></member>
      <member refid="class_usd_skel_inbetween_shape_1aabd627500c8de6500e0aab4eedb993ba" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>GetNormalOffsets</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a0c2949794ef2956e83f628e8b2274aed" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>GetNormalOffsetsAttr</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a2034f926ed3ef9acfdf49e03b7e5357c" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>GetOffsets</name></member>
      <member refid="class_usd_skel_inbetween_shape_1ae5cac972754e06c164b89bf6ebd94643" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>GetWeight</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a40e433d77516568450f3194509793010" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>HasAuthoredWeight</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a87fbe0030c0fbb6307ee434664f1142f" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>IsDefined</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a7ee91c86b0fb5e8943480abcb10a0ea7" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>IsInbetween</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>operator bool</name></member>
      <member refid="class_usd_skel_inbetween_shape_1aa7de176ee0f6bf8890f1812e93e43ce7" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>operator UsdAttribute const &amp;</name></member>
      <member refid="class_usd_skel_inbetween_shape_1aca44c1ea2c1a815589c7bca10df7c42e" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>operator!=</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a5e23d83933dafa8a3ae391258ef24642" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>operator==</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a3bfa1946dbbd9e930ad119179eae1d19" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>SetNormalOffsets</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a84a454b42c83cb29d51104e36787b93f" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>SetOffsets</name></member>
      <member refid="class_usd_skel_inbetween_shape_1af8cfbc60879da7992a07aa50ff593246" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>SetWeight</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a18d4b0b2cc5ee1cb8652a89103f50b8e" prot="private" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>UsdSkelBlendShape</name></member>
      <member refid="class_usd_skel_inbetween_shape_1a09ca29398cd03068fa372696bde8b465" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>UsdSkelInbetweenShape</name></member>
      <member refid="class_usd_skel_inbetween_shape_1af14d279d347c3b01b25743678fdb1d14" prot="public" virt="non-virtual"><scope>UsdSkelInbetweenShape</scope><name>UsdSkelInbetweenShape</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
