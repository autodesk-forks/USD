<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_children_view_1_1___inner_iterator" kind="class" language="C++" prot="private">
    <compoundname>SdfChildrenView::_InnerIterator</compoundname>
    <innerclass refid="class_sdf_children_view_1_1___inner_iterator_1_1___ptr_proxy" prot="private">SdfChildrenView::_InnerIterator::_PtrProxy</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdf_children_view_1_1___inner_iterator_1a8806ca091813ced0b0658fedaa448357" prot="public" static="no">
        <type>std::random_access_iterator_tag</type>
        <definition>using iterator_category =  std::random_access_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="253" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_children_view_1_1___inner_iterator_1a7b9b18f68f23e6eeb6b6aff541776d90" prot="public" static="no">
        <type>SdfChildrenView::value_type</type>
        <definition>using value_type =  SdfChildrenView::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="254" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_children_view_1_1___inner_iterator_1ad22bd40cacb993e9bf49cf10e7ef245a" prot="public" static="no">
        <type>value_type</type>
        <definition>using reference =  value_type</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="255" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_children_view_1_1___inner_iterator_1a43aae23301e40e6834a080a920395b72" prot="public" static="no">
        <type>_PtrProxy</type>
        <definition>using pointer =  _PtrProxy</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="256" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_sdf_children_view_1_1___inner_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="257" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_sdf_children_view_1_1___inner_iterator_1a89e7f61a0e97d9b43f59f5ffc52e2aa5" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_sdf_children_view" kindref="compound">This</ref> *</type>
        <definition>const This* _owner</definition>
        <argsstring></argsstring>
        <name>_owner</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="376" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_children_view_1_1___inner_iterator_1a29da2ac74d983de0ddeb219cf0752f69" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _pos</definition>
        <argsstring></argsstring>
        <name>_pos</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="377" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ab028a244988e8a91f3a847d378e6676a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_InnerIterator</definition>
        <argsstring>()=default</argsstring>
        <name>_InnerIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a7b17d32b22d5dc2401113822dfeb4a3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>_InnerIterator</definition>
        <argsstring>(const This *owner, const size_t &amp;pos)</argsstring>
        <name>_InnerIterator</name>
        <param>
          <type>const <ref refid="class_sdf_children_view" kindref="compound">This</ref> *</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="260" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="260" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="263" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="264" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="264" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a923464d743d395bcd695133aa8d876c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator[]</definition>
        <argsstring>(const difference_type index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const difference_type</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="265" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="265" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1aeb5645988ad9e0b8b2ba06f927385059" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type operator-</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="271" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1aa15b93a98fd0237a602de607adc0cb0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator &amp;</type>
        <definition>_InnerIterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="275" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a0c1f18da7d96bcc5dd934ee40da86670" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator &amp;</type>
        <definition>_InnerIterator&amp; operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="280" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a3873182524c20a3cf07fb7ab1ecd80d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator</type>
        <definition>_InnerIterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="285" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a4d3e8e8b196008ada90042a17091fe15" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator</type>
        <definition>_InnerIterator operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="291" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="291" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a53d451242e08bc489bbd213ad7fc8891" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator</type>
        <definition>_InnerIterator operator+</definition>
        <argsstring>(const difference_type increment) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const difference_type</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="297" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="297" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ab567d02686092b7f27bec2f3e4154f57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator</type>
        <definition>_InnerIterator operator-</definition>
        <argsstring>(const difference_type decrement) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const difference_type</type>
          <declname>decrement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="303" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="303" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1aeaf48a00dee1872860d8f907758047d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator &amp;</type>
        <definition>_InnerIterator&amp; operator+=</definition>
        <argsstring>(const difference_type increment)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const difference_type</type>
          <declname>increment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="309" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ab7a35bed8b1933517445d0828986acfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_InnerIterator &amp;</type>
        <definition>_InnerIterator&amp; operator-=</definition>
        <argsstring>(const difference_type decrement)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const difference_type</type>
          <declname>decrement</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="314" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="314" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a37127f5bc7fb18b87d86101989147617" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="319" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="319" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ac9922e393b44efa15eac4849859fa10a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="323" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ad568ed62f0c209522b2dbb34f8cb33a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="327" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a4e3a8c62498bbd1b3b585f1052766d09" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="332" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="332" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ad51471d8670c71e791dec432544ca859" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="337" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1aef10100d52b1b4685f53f61a3f038ced" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="342" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="342" bodyend="345"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1afbda5def72ca573e3af2660546cb35f8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference dereference</definition>
        <argsstring>() const</argsstring>
        <name>dereference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="349" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1a3720156290d2cd504429b567ebfa1d32" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool equal</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="354" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="354" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1aeb2624c7a86b765725fd80cd426e147d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="359" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="359" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1af998f1201f6ff5160003144e5818b8ba" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void decrement</definition>
        <argsstring>()</argsstring>
        <name>decrement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="363" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="363" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1ae3915a223e99ebf2c6a054bea20cdae0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void advance</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>advance</name>
        <param>
          <type>difference_type</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="367" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="367" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_children_view_1_1___inner_iterator_1af5a82f3f939e1598207201f7eeee5d25" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>difference_type</type>
        <definition>difference_type distance_to</definition>
        <argsstring>(const _InnerIterator &amp;other) const</argsstring>
        <name>distance_to</name>
        <param>
          <type>const _InnerIterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/childrenView.h" line="371" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="371" bodyend="373"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/sdf/childrenView.h" line="242" column="1" bodyfile="pxr/usd/sdf/childrenView.h" bodystart="242" bodyend="378"/>
    <listofallmembers>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ab028a244988e8a91f3a847d378e6676a" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>_InnerIterator</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a7b17d32b22d5dc2401113822dfeb4a3b" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>_InnerIterator</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a89e7f61a0e97d9b43f59f5ffc52e2aa5" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>_owner</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a29da2ac74d983de0ddeb219cf0752f69" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>_pos</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ae3915a223e99ebf2c6a054bea20cdae0" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>advance</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1af998f1201f6ff5160003144e5818b8ba" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>decrement</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1afbda5def72ca573e3af2660546cb35f8" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>dereference</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>difference_type</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1af5a82f3f939e1598207201f7eeee5d25" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>distance_to</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a3720156290d2cd504429b567ebfa1d32" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>equal</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1aeb2624c7a86b765725fd80cd426e147d" prot="private" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>increment</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a8806ca091813ced0b0658fedaa448357" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>iterator_category</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator *</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ac9922e393b44efa15eac4849859fa10a" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator!=</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a53d451242e08bc489bbd213ad7fc8891" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator+</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1aa15b93a98fd0237a602de607adc0cb0c" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator++</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a3873182524c20a3cf07fb7ab1ecd80d8" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator++</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1aeaf48a00dee1872860d8f907758047d2" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator+=</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1aeb5645988ad9e0b8b2ba06f927385059" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator-</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ab567d02686092b7f27bec2f3e4154f57" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator-</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a0c1f18da7d96bcc5dd934ee40da86670" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator--</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a4d3e8e8b196008ada90042a17091fe15" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator--</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ab7a35bed8b1933517445d0828986acfc" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator-=</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator-&gt;</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ad568ed62f0c209522b2dbb34f8cb33a3" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a4e3a8c62498bbd1b3b585f1052766d09" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator&lt;=</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a37127f5bc7fb18b87d86101989147617" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator==</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ad51471d8670c71e791dec432544ca859" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator&gt;</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1aef10100d52b1b4685f53f61a3f038ced" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator&gt;=</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a923464d743d395bcd695133aa8d876c5" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>operator[]</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a43aae23301e40e6834a080a920395b72" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>pointer</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1ad22bd40cacb993e9bf49cf10e7ef245a" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>reference</name></member>
      <member refid="class_sdf_children_view_1_1___inner_iterator_1a7b9b18f68f23e6eeb6b6aff541776d90" prot="public" virt="non-virtual"><scope>SdfChildrenView::_InnerIterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
