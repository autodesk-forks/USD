<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec2i" kind="class" language="C++" prot="public">
    <compoundname>GfVec2i</compoundname>
    <includes refid="vec2i_8h" local="no">vec2i.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec2i_1ad79cf4c4486794ed5c5c6801eacaa5d9" prot="public" static="no">
        <type>int</type>
        <definition>typedef int ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="64" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec2i_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="65" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec2i_1a8df692a22025cccfe314b80edb14e5fe" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _data[2]</definition>
        <argsstring>[2]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="234" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec2i_1abf6a341ab51e7740c0e7db974f02c395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec2i</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec2i</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a78e51402953bc8cc7b2f87447adc1ec1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec2i</definition>
        <argsstring>(int value)</argsstring>
        <name>GfVec2i</name>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="71" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a872a44b4129b57889377a24cd7d4d2b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec2i</definition>
        <argsstring>(int s0, int s1)</argsstring>
        <name>GfVec2i</name>
        <param>
          <type>int</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="77" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a978029aa94b82a232657f7e6e526aa24" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec2i</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec2i</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="84" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a8f63c1569bc16b99763102c55b9fe24a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>GfVec2i&amp; Set</definition>
        <argsstring>(int s0, int s1)</argsstring>
        <name>Set</name>
        <param>
          <type>int</type>
          <declname>s0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s1</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="112" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a6cac2c9a19b15df75fb9503e2182ef13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>GfVec2i&amp; Set</definition>
        <argsstring>(int const *a)</argsstring>
        <name>Set</name>
        <param>
          <type>int const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="119" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a9dd2c1a64aeebed0e9016f216e643221" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  *</type>
        <definition>int const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="124" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1aa6a02d6a1bdf6fe74b108cef3813f51b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int *</type>
        <definition>int* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="125" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a286912c871e807202c774b8bf846204b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  *</type>
        <definition>int const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="126" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a4ab6ea6ecc83201af9fecc0cd482699f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int const  &amp;</type>
        <definition>int const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="129" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a224b8817bcef347f0379a493cf3028c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int &amp;</type>
        <definition>int&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="130" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a2ae536b0c8b32bd1d88324b52d1261c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec2i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="138" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a2745707b9d725b6bbf2e3c1e34250c2d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec2i const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="142" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1abe23630d3b474e98bea0560d19f88768" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1aaea9ce7b70f26ad1dcbf9a73d5518dc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a3a8e084cab21fe1eafa8a07947e7410e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec2h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec2h" kindref="compound">GfVec2h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a42425e22062db5f58896a1f4f3324a70" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="158" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1ab8123d7a578265cd22b14b8865f9f9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>GfVec2i&amp; operator+=</definition>
        <argsstring>(GfVec2i const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="163" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1ac202dd6ced4290651a48854184b7d337" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>GfVec2i&amp; operator-=</definition>
        <argsstring>(GfVec2i const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="173" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="173" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1addbea067f1758585c998213cc7b323ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>GfVec2i&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="183" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="183" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a94d35a235a18592490d1efc91d24c36f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="188" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1abc037c321c5bed68f4d825022544c23a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>GfVec2i&amp; operator/=</definition>
        <argsstring>(int s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="196" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1ae51fa77cd317c9faa43e8660e911e77d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i operator/</definition>
        <argsstring>(int s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="201" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a2889175e01f65efb90fee80098deda48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int operator *</definition>
        <argsstring>(GfVec2i const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="206" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1acbd64fdf7ee3048ca1e8b06818ef3c86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i GetProjection</definition>
        <argsstring>(GfVec2i const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="214" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a33734e924dfb5b29df2b37fc30ef6074" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i GetComplement</definition>
        <argsstring>(GfVec2i const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="223" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1adcc0a137316b687ed2b04ad3d8403991" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="228" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="228" bodyend="230"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec2i_1a21cab6d0ae1ce6aa2f029f47826a1e94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>static GfVec2i XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="90" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a507d2f22e85832ed23a5d67016b9a93a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>static GfVec2i YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="96" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec2i_1a716e4d33332efc4860f33d0ea63d691c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>static GfVec2i Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 2. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="104" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="104" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec2i_1a74ec4e107f6dfa39d5fbfb905de7d26e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec2i const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="133" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2i_1a12cc746c4deea811d3f6cca3d74240a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i operator+</definition>
        <argsstring>(GfVec2i const &amp;l, GfVec2i const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="168" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2i_1acd76baf6db4a1bd6c2eef1241ee91121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i operator-</definition>
        <argsstring>(GfVec2i const &amp;l, GfVec2i const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="178" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec2i_1ab2f50326dc94fe79d70ae93e015a22c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i operator *</definition>
        <argsstring>(double s, GfVec2i const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec2i.h" line="191" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="191" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 2 int components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 2 components of type <computeroutput>int</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec2i.h" line="61" column="1" bodyfile="pxr/base/gf/vec2i.h" bodystart="60" bodyend="235"/>
    <listofallmembers>
      <member refid="class_gf_vec2i_1a8df692a22025cccfe314b80edb14e5fe" prot="private" virt="non-virtual"><scope>GfVec2i</scope><name>_data</name></member>
      <member refid="class_gf_vec2i_1a716e4d33332efc4860f33d0ea63d691c" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>Axis</name></member>
      <member refid="class_gf_vec2i_1a9dd2c1a64aeebed0e9016f216e643221" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>data</name></member>
      <member refid="class_gf_vec2i_1aa6a02d6a1bdf6fe74b108cef3813f51b" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>data</name></member>
      <member refid="class_gf_vec2i_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>dimension</name></member>
      <member refid="class_gf_vec2i_1a286912c871e807202c774b8bf846204b" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GetArray</name></member>
      <member refid="class_gf_vec2i_1a33734e924dfb5b29df2b37fc30ef6074" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec2i_1adcc0a137316b687ed2b04ad3d8403991" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec2i_1acbd64fdf7ee3048ca1e8b06818ef3c86" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec2i_1abf6a341ab51e7740c0e7db974f02c395" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GfVec2i</name></member>
      <member refid="class_gf_vec2i_1a78e51402953bc8cc7b2f87447adc1ec1" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GfVec2i</name></member>
      <member refid="class_gf_vec2i_1a872a44b4129b57889377a24cd7d4d2b4" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GfVec2i</name></member>
      <member refid="class_gf_vec2i_1a978029aa94b82a232657f7e6e526aa24" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>GfVec2i</name></member>
      <member refid="class_gf_vec2i_1a74ec4e107f6dfa39d5fbfb905de7d26e" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>hash_value</name></member>
      <member refid="class_gf_vec2i_1a94d35a235a18592490d1efc91d24c36f" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator *</name></member>
      <member refid="class_gf_vec2i_1ab2f50326dc94fe79d70ae93e015a22c7" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator *</name></member>
      <member refid="class_gf_vec2i_1a2889175e01f65efb90fee80098deda48" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator *</name></member>
      <member refid="class_gf_vec2i_1addbea067f1758585c998213cc7b323ee" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator *=</name></member>
      <member refid="class_gf_vec2i_1a2745707b9d725b6bbf2e3c1e34250c2d" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator!=</name></member>
      <member refid="class_gf_vec2i_1a12cc746c4deea811d3f6cca3d74240a6" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator+</name></member>
      <member refid="class_gf_vec2i_1ab8123d7a578265cd22b14b8865f9f9d9" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator+=</name></member>
      <member refid="class_gf_vec2i_1a42425e22062db5f58896a1f4f3324a70" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator-</name></member>
      <member refid="class_gf_vec2i_1acd76baf6db4a1bd6c2eef1241ee91121" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator-</name></member>
      <member refid="class_gf_vec2i_1ac202dd6ced4290651a48854184b7d337" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator-=</name></member>
      <member refid="class_gf_vec2i_1ae51fa77cd317c9faa43e8660e911e77d" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator/</name></member>
      <member refid="class_gf_vec2i_1abc037c321c5bed68f4d825022544c23a" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator/=</name></member>
      <member refid="class_gf_vec2i_1a2ae536b0c8b32bd1d88324b52d1261c4" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator==</name></member>
      <member refid="class_gf_vec2i_1abe23630d3b474e98bea0560d19f88768" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator==</name></member>
      <member refid="class_gf_vec2i_1aaea9ce7b70f26ad1dcbf9a73d5518dc8" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator==</name></member>
      <member refid="class_gf_vec2i_1a3a8e084cab21fe1eafa8a07947e7410e" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator==</name></member>
      <member refid="class_gf_vec2i_1a4ab6ea6ecc83201af9fecc0cd482699f" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator[]</name></member>
      <member refid="class_gf_vec2i_1a224b8817bcef347f0379a493cf3028c4" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>operator[]</name></member>
      <member refid="class_gf_vec2i_1ad79cf4c4486794ed5c5c6801eacaa5d9" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec2i_1a8f63c1569bc16b99763102c55b9fe24a" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>Set</name></member>
      <member refid="class_gf_vec2i_1a6cac2c9a19b15df75fb9503e2182ef13" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>Set</name></member>
      <member refid="class_gf_vec2i_1a21cab6d0ae1ce6aa2f029f47826a1e94" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>XAxis</name></member>
      <member refid="class_gf_vec2i_1a507d2f22e85832ed23a5d67016b9a93a" prot="public" virt="non-virtual"><scope>GfVec2i</scope><name>YAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
