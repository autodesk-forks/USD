<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="gamma_8h" kind="file" language="C++">
    <compoundname>gamma.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2gf_2api_8h" local="yes">pxr/base/gf/api.h</includes>
    <incdepgraph>
      <node id="26242">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="26243" relation="include">
        </childnode>
      </node>
      <node id="26240">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="26239">
        <label>pxr/base/gf/gamma.h</label>
        <link refid="gamma_8h"/>
        <childnode refid="26240" relation="include">
        </childnode>
        <childnode refid="26241" relation="include">
        </childnode>
      </node>
      <node id="26241">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="26242" relation="include">
        </childnode>
      </node>
      <node id="26243">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>GF_API GfVec3f GfApplyGamma</definition>
        <argsstring>(const GfVec3f &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Return a new vector with each component of <computeroutput>v</computeroutput> raised to the power <computeroutput>gamma</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1af0b09aa6fa1da8a6881393315a5e897e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref></type>
        <definition>GF_API GfVec3d GfApplyGamma</definition>
        <argsstring>(const GfVec3d &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Return a new vector with each component of <computeroutput>v</computeroutput> raised to the power <computeroutput>gamma</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a98543efd7a63d941ddccbc7913da6322" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GF_API GfVec3h GfApplyGamma</definition>
        <argsstring>(const GfVec3h &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a0a66a58f7c866a19c15711dc8e6a700d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GF_API GfVec4f GfApplyGamma</definition>
        <argsstring>(const GfVec4f &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Return a new vector with the first three components of <computeroutput>v</computeroutput> raised to the power <computeroutput>gamma</computeroutput> and the fourth component unchanged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1ad8b8b8b59a80d660c70a6fe8c0ab2b73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GF_API GfVec4d GfApplyGamma</definition>
        <argsstring>(const GfVec4d &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Return a new vector with the first three components of <computeroutput>v</computeroutput> raised to the power <computeroutput>gamma</computeroutput> and the fourth component unchanged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a0b7261bf414aa5471dc40debeeb7041a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GF_API GfVec4h GfApplyGamma</definition>
        <argsstring>(const GfVec4h &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a1a31b74d54422ab1dcc59088c66594cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API float</type>
        <definition>GF_API float GfApplyGamma</definition>
        <argsstring>(const float &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const float &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Return a new float raised to the power <computeroutput>gamma</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1abcaa83ad5e2685dd9a8169b0844183d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API unsigned char</type>
        <definition>GF_API unsigned char GfApplyGamma</definition>
        <argsstring>(const unsigned char &amp;v, double gamma)</argsstring>
        <name>GfApplyGamma</name>
        <param>
          <type>const unsigned char &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
<para>Return a new char raised to the power <computeroutput>gamma</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a0e03087b9ff4e18c100298a467367114" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API double</type>
        <definition>GF_API double GfGetDisplayGamma</definition>
        <argsstring>()</argsstring>
        <name>GfGetDisplayGamma</name>
        <briefdescription>
<para>Return the system display gamma. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>GF_API GfVec3f GfConvertLinearToDisplay</definition>
        <argsstring>(const GfVec3f &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Given a vec, <computeroutput>v</computeroutput>, representing an energy-linear RGB(A) color, return a vec of the same type converted to the system&apos;s display gamma. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1ab6e681aef948695958384899b13a12dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref></type>
        <definition>GF_API GfVec3d GfConvertLinearToDisplay</definition>
        <argsstring>(const GfVec3d &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a4060dd1999160e43104949e60fbfbd11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GF_API GfVec3h GfConvertLinearToDisplay</definition>
        <argsstring>(const GfVec3h &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a11eb693a7c54f3a42133e1e29097d69c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GF_API GfVec4f GfConvertLinearToDisplay</definition>
        <argsstring>(const GfVec4f &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1ae26564f2cf5cc4f1f1dae69c46abb2ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GF_API GfVec4d GfConvertLinearToDisplay</definition>
        <argsstring>(const GfVec4d &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a3682391dcd04a87e2e316b744568e04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GF_API GfVec4h GfConvertLinearToDisplay</definition>
        <argsstring>(const GfVec4h &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a4f4efb3ee7cf1bc46f06b351878d9ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API float</type>
        <definition>GF_API float GfConvertLinearToDisplay</definition>
        <argsstring>(const float &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const float &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a469333598a079b9241c6f1cfa7de882c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API unsigned char</type>
        <definition>GF_API unsigned char GfConvertLinearToDisplay</definition>
        <argsstring>(const unsigned char &amp;v)</argsstring>
        <name>GfConvertLinearToDisplay</name>
        <param>
          <type>const unsigned char &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>GF_API GfVec3f GfConvertDisplayToLinear</definition>
        <argsstring>(const GfVec3f &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Given a vec, <computeroutput>v</computeroutput>, representing an RGB(A) color in the system&apos;s display gamma space, return an energy-linear vec of the same type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1ae969ff44291053c52174172c69c95c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref></type>
        <definition>GF_API GfVec3d GfConvertDisplayToLinear</definition>
        <argsstring>(const GfVec3d &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a3de966a2f98b5e1c3e60f48991c7af2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GF_API GfVec3h GfConvertDisplayToLinear</definition>
        <argsstring>(const GfVec3h &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a7c27dc02706b16fdc84c77b5ad925852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GF_API GfVec4f GfConvertDisplayToLinear</definition>
        <argsstring>(const GfVec4f &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a6562eb2bf8010ca440995ef80adbecaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>GF_API GfVec4d GfConvertDisplayToLinear</definition>
        <argsstring>(const GfVec4d &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a3ec1b9626f26ca694563a87f6227c4a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref></type>
        <definition>GF_API GfVec4h GfConvertDisplayToLinear</definition>
        <argsstring>(const GfVec4h &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const <ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1a6e1e7bf6b719180def9c5e7320a6a465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API float</type>
        <definition>GF_API float GfConvertDisplayToLinear</definition>
        <argsstring>(const float &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const float &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="gamma_8h_1ae7a01f550696157042b4908fa4ceff46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API unsigned char</type>
        <definition>GF_API unsigned char GfConvertDisplayToLinear</definition>
        <argsstring>(const unsigned char &amp;v)</argsstring>
        <name>GfConvertDisplayToLinear</name>
        <param>
          <type>const unsigned char &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/gamma.h" line="102" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utilities to map colors between gamma spaces. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_GF_GAMMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_GF_GAMMA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/gf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1adf6ef088a2a3d268f8edae2103a2780b" kindref="member">GfApplyGamma</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gamma);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">GF_API</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1a0e03087b9ff4e18c100298a467367114" kindref="member">GfGetDisplayGamma</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="86"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">GF_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;v);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">GF_API<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1a3f25b29b07f0cd4db4127648e05389a8" kindref="member">GfConvertLinearToDisplay</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;v);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">GF_API<sp/><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4h" kindref="compound">GfVec4h</ref><sp/>&amp;v);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">GF_API<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;v);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">GF_API<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="gamma_8h_1acde877f5b898de21f5fd03928b9ad49c" kindref="member">GfConvertDisplayToLinear</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;v);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_GF_GAMMA_H<sp/></highlight></codeline>
    </programlisting>
    <location file="pxr/base/gf/gamma.h"/>
  </compounddef>
</doxygen>
