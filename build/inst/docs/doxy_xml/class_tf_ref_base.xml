<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_ref_base" kind="class" language="C++" prot="public">
    <compoundname>TfRefBase</compoundname>
    <derivedcompoundref refid="class_garch_g_l_platform_debug_context" prot="public" virt="non-virtual">GarchGLPlatformDebugContext</derivedcompoundref>
    <derivedcompoundref refid="class_glf_binding_map" prot="public" virt="non-virtual">GlfBindingMap</derivedcompoundref>
    <derivedcompoundref refid="class_glf_draw_target" prot="public" virt="non-virtual">GlfDrawTarget</derivedcompoundref>
    <derivedcompoundref refid="class_glf_draw_target_1_1_attachments_container" prot="public" virt="non-virtual">GlfDrawTarget::AttachmentsContainer</derivedcompoundref>
    <derivedcompoundref refid="class_glf_simple_lighting_context" prot="public" virt="non-virtual">GlfSimpleLightingContext</derivedcompoundref>
    <derivedcompoundref refid="class_glf_simple_shadow_array" prot="public" virt="non-virtual">GlfSimpleShadowArray</derivedcompoundref>
    <derivedcompoundref refid="class_glf_texture" prot="public" virt="non-virtual">GlfTexture</derivedcompoundref>
    <derivedcompoundref refid="class_glf_uniform_block" prot="public" virt="non-virtual">GlfUniformBlock</derivedcompoundref>
    <derivedcompoundref refid="class_hd_scene_index_base" prot="public" virt="non-virtual">HdSceneIndexBase</derivedcompoundref>
    <derivedcompoundref refid="class_hdsi_prim_managing_scene_index_observer" prot="public" virt="non-virtual">HdsiPrimManagingSceneIndexObserver</derivedcompoundref>
    <derivedcompoundref refid="class_ndr_discovery_plugin" prot="public" virt="non-virtual">NdrDiscoveryPlugin</derivedcompoundref>
    <derivedcompoundref refid="class_ndr_discovery_plugin_context" prot="public" virt="non-virtual">NdrDiscoveryPluginContext</derivedcompoundref>
    <derivedcompoundref refid="class_pcp_layer_stack" prot="public" virt="non-virtual">PcpLayerStack</derivedcompoundref>
    <derivedcompoundref refid="class_sdf_abstract_data" prot="public" virt="non-virtual">SdfAbstractData</derivedcompoundref>
    <derivedcompoundref refid="class_sdf_file_format" prot="public" virt="non-virtual">SdfFileFormat</derivedcompoundref>
    <derivedcompoundref refid="class_sdf_layer" prot="public" virt="non-virtual">SdfLayer</derivedcompoundref>
    <derivedcompoundref refid="class_sdf_layer_state_delegate_base" prot="public" virt="non-virtual">SdfLayerStateDelegateBase</derivedcompoundref>
    <derivedcompoundref refid="class_sdf_layer_tree" prot="public" virt="non-virtual">SdfLayerTree</derivedcompoundref>
    <derivedcompoundref refid="class_tf_simple_ref_base" prot="public" virt="non-virtual">TfSimpleRefBase</derivedcompoundref>
    <derivedcompoundref refid="class_trace_aggregate_node" prot="public" virt="non-virtual">TraceAggregateNode</derivedcompoundref>
    <derivedcompoundref refid="class_trace_aggregate_tree" prot="public" virt="non-virtual">TraceAggregateTree</derivedcompoundref>
    <derivedcompoundref refid="class_trace_event_node" prot="public" virt="non-virtual">TraceEventNode</derivedcompoundref>
    <derivedcompoundref refid="class_trace_event_tree" prot="public" virt="non-virtual">TraceEventTree</derivedcompoundref>
    <derivedcompoundref refid="class_trace_reporter_base" prot="public" virt="non-virtual">TraceReporterBase</derivedcompoundref>
    <derivedcompoundref refid="class_usd_stage" prot="public" virt="non-virtual">UsdStage</derivedcompoundref>
    <includes refid="ref_base_8h" local="no">refBase.h</includes>
    <innerclass refid="struct_tf_ref_base_1_1_unique_changed_listener" prot="public">TfRefBase::UniqueChangedListener</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* UniqueChangedFuncPtr) (TfRefBase const *, bool)</definition>
        <argsstring>)(TfRefBase const *, bool)</argsstring>
        <name>UniqueChangedFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="74" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_ref_base_1a5e0dea385aef06bf277190dbc228e0d5" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_ref_count" kindref="compound">TfRefCount</ref></type>
        <definition>TfRefCount _refCount</definition>
        <argsstring></argsstring>
        <name>_refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="110" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_ref_base_1a608325b7cfd3df034e0dcb96efbfb3c6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _shouldInvokeUniqueChangedListener</definition>
        <argsstring></argsstring>
        <name>_shouldInvokeUniqueChangedListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="111" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_tf_ref_base_1a908e985f33bdffc6f0d2ca34293412ef" prot="private" static="yes" mutable="no">
        <type>UniqueChangedListener</type>
        <definition>UniqueChangedListener _uniqueChangedListener</definition>
        <argsstring></argsstring>
        <name>_uniqueChangedListener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="113" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_ref_base_1a4dde82568da13e4198f0c1d6289a766a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class TfRefPtr</definition>
        <argsstring></argsstring>
        <name>TfRefPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="114" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_tf_ref_base_1a69de997c5321ae19cd28fa7970c8c0a7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>friend <ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt; T &gt;</type>
        <definition>TfRefPtr&lt;T&gt; TfCreateRefPtrFromProtectedWeakPtr</definition>
        <argsstring>(TfWeakPtr&lt; T &gt; const &amp;)</argsstring>
        <name>TfCreateRefPtrFromProtectedWeakPtr</name>
        <param>
          <type><ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref>&lt; T &gt; const &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
<para>Thread-safe creation of a Tf ref pointer from a Tf weak pointer. </para>
        </briefdescription>
        <detaileddescription>
<para>This is thread-safe in the sense that the result will be either a ref pointer to a live object with non-zero ref-count, or a NULL ref pointer. However, this depends on the client to provide a guarantee to protect the pointed-to object.</para>
<para>Specifically, the caller must guarantee that the <ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref> part of the pointed-to object is not destroyed during this call. It is fine if the destruction process for the object begins (due to the ref-count going to zero as another thread drops the last ref) as long as the <ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref> portion is not destroyed. If object destruction begins because the ref-count goes to zero before this call completes, this function will reliably return a NULL ref pointer.</para>
<para>Note that this is not a general mechanism for safely converting weak pointers to ref pointers, because it relies on the type T to provide the above guarantee. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="119" column="1" bodyfile="pxr/base/tf/weakPtr.h" bodystart="277" bodyend="291"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfRefBase</definition>
        <argsstring>()</argsstring>
        <name>TfRefBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="81" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetCurrentCount</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentCount</name>
        <briefdescription>
<para>Return the current reference count of this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="84" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsUnique</definition>
        <argsstring>() const</argsstring>
        <name>IsUnique</name>
        <briefdescription>
<para>Return true if only one <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> points to this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="89" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_ref_count" kindref="compound">TfRefCount</ref> &amp;</type>
        <definition>const TfRefCount&amp; GetRefCount</definition>
        <argsstring>() const</argsstring>
        <name>GetRefCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="93" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetShouldInvokeUniqueChangedListener</definition>
        <argsstring>(bool shouldCall)</argsstring>
        <name>SetShouldInvokeUniqueChangedListener</name>
        <param>
          <type>bool</type>
          <declname>shouldCall</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="97" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="97" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>static TF_API void SetUniqueChangedListener</definition>
        <argsstring>(UniqueChangedListener listener)</argsstring>
        <name>SetUniqueChangedListener</name>
        <param>
          <type>UniqueChangedListener</type>
          <declname>listener</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="101" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TF_API</type>
        <definition>virtual TF_API ~TfRefBase</definition>
        <argsstring>()</argsstring>
        <name>~TfRefBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/refBase.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Enable a concrete base class for use with <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>You should be familiar with the <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> type before reading further.</para>
<para>A class (but not an interface class) is enabled for reference counting via the <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput> type by publicly deriving from <computeroutput><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref></computeroutput>.</para>
<para>For example, <programlisting><codeline><highlight class="normal">#include<sp/>&quot;pxr/base/tf/refPtr.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">class<sp/>Simple<sp/>:<sp/>public<sp/>TfRefBase<sp/>{</highlight></codeline>
<codeline><highlight class="normal">public:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TfRefPtr&lt;Simple&gt;<sp/>New()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>TfCreateRefPtr(new<sp/>Simple);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">private:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Simple();</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting></para>
<para>The class <computeroutput>Simple</computeroutput> can now only be manipulated in terms of a <computeroutput>TfRefPtr&lt;Simple&gt;</computeroutput>.</para>
<para>To disable the cost of the &quot;unique changed&quot; system, derive from <ref refid="class_tf_simple_ref_base" kindref="compound">TfSimpleRefBase</ref> instead. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5591">
        <label>TraceReporterBase</label>
        <link refid="class_trace_reporter_base"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5583">
        <label>SdfLayerStateDelegateBase</label>
        <link refid="class_sdf_layer_state_delegate_base"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5563">
        <label>UsdImagingSelectionSceneIndex</label>
        <link refid="class_usd_imaging_selection_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5560">
        <label>UsdImagingRenderSettingsFlatteningSceneIndex</label>
        <link refid="class_usd_imaging_render_settings_flattening_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5541">
        <label>HdSingleInputFilteringSceneIndexBase</label>
        <link refid="class_hd_single_input_filtering_scene_index_base"/>
        <childnode refid="5539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5572">
        <label>NdrDiscoveryPluginContext</label>
        <link refid="class_ndr_discovery_plugin_context"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5568">
        <label>HdLegacyPrimSceneIndex</label>
        <link refid="class_hd_legacy_prim_scene_index"/>
        <childnode refid="5567" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5546">
        <label>HdsiCoordSysPrimSceneIndex</label>
        <link refid="class_hdsi_coord_sys_prim_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5578">
        <label>UsdUsdaFileFormat</label>
        <link refid="class_usd_usda_file_format"/>
        <childnode refid="5577" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5556">
        <label>HdsiRenderSettingsFilteringSceneIndex</label>
        <link refid="class_hdsi_render_settings_filtering_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5582">
        <label>SdfLayer</label>
        <link refid="class_sdf_layer"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5564">
        <label>UsdImagingUnloadedDrawModeSceneIndex</label>
        <link refid="class_usd_imaging_unloaded_draw_mode_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5570">
        <label>NdrDiscoveryPlugin</label>
        <link refid="class_ndr_discovery_plugin"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5573">
        <label>PcpLayerStack</label>
        <link refid="class_pcp_layer_stack"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5562">
        <label>UsdImagingRootOverridesSceneIndex</label>
        <link refid="class_usd_imaging_root_overrides_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5574">
        <label>SdfAbstractData</label>
        <link refid="class_sdf_abstract_data"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5579">
        <label>UsdUsdcFileFormat</label>
        <link refid="class_usd_usdc_file_format"/>
        <childnode refid="5576" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5580">
        <label>UsdUsdFileFormat</label>
        <link refid="class_usd_usd_file_format"/>
        <childnode refid="5576" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5547">
        <label>HdSiExtComputationPrimvarPruningSceneIndex</label>
        <link refid="class_hd_si_ext_computation_primvar_pruning_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5534">
        <label>GlfDrawTarget</label>
        <link refid="class_glf_draw_target"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5535">
        <label>AttachmentsContainer</label>
        <link refid="class_glf_draw_target_1_1_attachments_container"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5590">
        <label>TraceEventTree</label>
        <link refid="class_trace_event_tree"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5592">
        <label>TraceReporter</label>
        <link refid="class_trace_reporter"/>
        <childnode refid="5591" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5544">
        <label>HdMaterialFilteringSceneIndexBase</label>
        <link refid="class_hd_material_filtering_scene_index_base"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5587">
        <label>TraceAggregateNode</label>
        <link refid="class_trace_aggregate_node"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5558">
        <label>UsdImagingDrawModeSceneIndex</label>
        <link refid="class_usd_imaging_draw_mode_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5584">
        <label>SdfSimpleLayerStateDelegate</label>
        <link refid="class_sdf_simple_layer_state_delegate"/>
        <childnode refid="5583" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5550">
        <label>HdsiMaterialBindingResolvingSceneIndex</label>
        <link refid="class_hdsi_material_binding_resolving_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5567">
        <label>HdRetainedSceneIndex</label>
        <link refid="class_hd_retained_scene_index"/>
        <childnode refid="5538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5576">
        <label>SdfFileFormat</label>
        <link refid="class_sdf_file_format"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5540">
        <label>HdMergingSceneIndex</label>
        <link refid="class_hd_merging_scene_index"/>
        <childnode refid="5539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5581">
        <label>UsdUsdzFileFormat</label>
        <link refid="class_usd_usdz_file_format"/>
        <childnode refid="5576" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5557">
        <label>HdsiSceneGlobalsSceneIndex</label>
        <link refid="class_hdsi_scene_globals_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5559">
        <label>UsdImagingExtentResolvingSceneIndex</label>
        <link refid="class_usd_imaging_extent_resolving_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5577">
        <label>SdfTextFileFormat</label>
        <link refid="class_sdf_text_file_format"/>
        <childnode refid="5576" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5548">
        <label>HdsiImplicitSurfaceSceneIndex</label>
        <link refid="class_hdsi_implicit_surface_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5549">
        <label>HdsiLegacyDisplayStyleOverrideSceneIndex</label>
        <link refid="class_hdsi_legacy_display_style_override_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5545">
        <label>HdPrefixingSceneIndex</label>
        <link refid="class_hd_prefixing_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5561">
        <label>UsdImagingRerootingSceneIndex</label>
        <link refid="class_usd_imaging_rerooting_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5554">
        <label>HdsiPrimTypeNoticeBatchingSceneIndex</label>
        <link refid="class_hdsi_prim_type_notice_batching_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5589">
        <label>TraceEventNode</label>
        <link refid="class_trace_event_node"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5575">
        <label>SdfData</label>
        <link refid="class_sdf_data"/>
        <childnode refid="5574" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5542">
        <label>HdFlatteningSceneIndex</label>
        <link refid="class_hd_flattening_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5536">
        <label>GlfTexture</label>
        <link refid="class_glf_texture"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5552">
        <label>HdsiNurbsApproximatingSceneIndex</label>
        <link refid="class_hdsi_nurbs_approximating_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5585">
        <label>SdfLayerTree</label>
        <link refid="class_sdf_layer_tree"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5586">
        <label>TfSimpleRefBase</label>
        <link refid="class_tf_simple_ref_base"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5553">
        <label>HdsiPinnedCurveExpandingSceneIndex</label>
        <link refid="class_hdsi_pinned_curve_expanding_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5593">
        <label>UsdStage</label>
        <link refid="class_usd_stage"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5539">
        <label>HdFilteringSceneIndexBase</label>
        <link refid="class_hd_filtering_scene_index_base"/>
        <childnode refid="5538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5588">
        <label>TraceAggregateTree</label>
        <link refid="class_trace_aggregate_tree"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5543">
        <label>HdGpGenerativeProceduralResolvingSceneIndex</label>
        <link refid="class_hd_gp_generative_procedural_resolving_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5565">
        <label>UsdImagingNiPrototypePropagatingSceneIndex</label>
        <link refid="class_usd_imaging_ni_prototype_propagating_scene_index"/>
        <childnode refid="5539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5569">
        <label>HdsiPrimManagingSceneIndexObserver</label>
        <link refid="class_hdsi_prim_managing_scene_index_observer"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5571">
        <label>_NdrFilesystemDiscoveryPlugin</label>
        <link refid="class___ndr_filesystem_discovery_plugin"/>
        <childnode refid="5570" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5566">
        <label>UsdImagingPiPrototypePropagatingSceneIndex</label>
        <link refid="class_usd_imaging_pi_prototype_propagating_scene_index"/>
        <childnode refid="5539" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5532">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
      <node id="5537">
        <label>GlfUniformBlock</label>
        <link refid="class_glf_uniform_block"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5538">
        <label>HdSceneIndexBase</label>
        <link refid="class_hd_scene_index_base"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5555">
        <label>HdsiPrimTypePruningSceneIndex</label>
        <link refid="class_hdsi_prim_type_pruning_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5533">
        <label>GarchGLPlatformDebugContext</label>
        <link refid="class_garch_g_l_platform_debug_context"/>
        <childnode refid="5532" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5551">
        <label>HdsiMaterialPrimvarTransferSceneIndex</label>
        <link refid="class_hdsi_material_primvar_transfer_scene_index"/>
        <childnode refid="5541" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/base/tf/refBase.h" line="71" column="1" bodyfile="pxr/base/tf/refBase.h" bodystart="71" bodyend="120"/>
    <listofallmembers>
      <member refid="class_tf_ref_base_1a5e0dea385aef06bf277190dbc228e0d5" prot="private" virt="non-virtual"><scope>TfRefBase</scope><name>_refCount</name></member>
      <member refid="class_tf_ref_base_1a608325b7cfd3df034e0dcb96efbfb3c6" prot="private" virt="non-virtual"><scope>TfRefBase</scope><name>_shouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a908e985f33bdffc6f0d2ca34293412ef" prot="private" virt="non-virtual"><scope>TfRefBase</scope><name>_uniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>GetCurrentCount</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>GetRefCount</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>IsUnique</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a69de997c5321ae19cd28fa7970c8c0a7" prot="private" virt="non-virtual"><scope>TfRefBase</scope><name>TfCreateRefPtrFromProtectedWeakPtr</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>TfRefBase</name></member>
      <member refid="class_tf_ref_base_1a4dde82568da13e4198f0c1d6289a766a" prot="private" virt="non-virtual"><scope>TfRefBase</scope><name>TfRefPtr</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>TfRefBase</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>TfRefBase</scope><name>~TfRefBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
