<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="robin__set_8h" kind="file" language="C++">
    <compoundname>robin_set.h</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">functional</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes refid="robin__hash_8h" local="yes">robin_hash.h</includes>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includedby refid="usd_2pcp_2types_8h" local="yes">pxr/usd/pcp/types.h</includedby>
    <incdepgraph>
      <node id="68295">
        <label>functional</label>
      </node>
      <node id="68307">
        <label>limits</label>
      </node>
      <node id="68306">
        <label>iterator</label>
      </node>
      <node id="68304">
        <label>cstdint</label>
      </node>
      <node id="68300">
        <label>robin_hash.h</label>
        <link refid="robin__hash_8h_source"/>
        <childnode refid="68301" relation="include">
        </childnode>
        <childnode refid="68302" relation="include">
        </childnode>
        <childnode refid="68303" relation="include">
        </childnode>
        <childnode refid="68294" relation="include">
        </childnode>
        <childnode refid="68304" relation="include">
        </childnode>
        <childnode refid="68305" relation="include">
        </childnode>
        <childnode refid="68306" relation="include">
        </childnode>
        <childnode refid="68307" relation="include">
        </childnode>
        <childnode refid="68297" relation="include">
        </childnode>
        <childnode refid="68308" relation="include">
        </childnode>
        <childnode refid="68309" relation="include">
        </childnode>
        <childnode refid="68298" relation="include">
        </childnode>
        <childnode refid="68299" relation="include">
        </childnode>
        <childnode refid="68310" relation="include">
        </childnode>
        <childnode refid="68311" relation="include">
        </childnode>
        <childnode refid="68315" relation="include">
        </childnode>
      </node>
      <node id="68303">
        <label>cmath</label>
      </node>
      <node id="68302">
        <label>cassert</label>
      </node>
      <node id="68308">
        <label>stdexcept</label>
      </node>
      <node id="68315">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="68305">
        <label>exception</label>
      </node>
      <node id="68293">
        <label>pxr/base/tf/pxrTslRobinMap/robin_set.h</label>
        <link refid="robin__set_8h"/>
        <childnode refid="68294" relation="include">
        </childnode>
        <childnode refid="68295" relation="include">
        </childnode>
        <childnode refid="68296" relation="include">
        </childnode>
        <childnode refid="68297" relation="include">
        </childnode>
        <childnode refid="68298" relation="include">
        </childnode>
        <childnode refid="68299" relation="include">
        </childnode>
        <childnode refid="68300" relation="include">
        </childnode>
        <childnode refid="68315" relation="include">
        </childnode>
      </node>
      <node id="68314">
        <label>ratio</label>
      </node>
      <node id="68309">
        <label>tuple</label>
      </node>
      <node id="68310">
        <label>vector</label>
      </node>
      <node id="68299">
        <label>utility</label>
      </node>
      <node id="68312">
        <label>array</label>
      </node>
      <node id="68311">
        <label>robin_growth_policy.h</label>
        <link refid="robin__growth__policy_8h_source"/>
        <childnode refid="68301" relation="include">
        </childnode>
        <childnode refid="68312" relation="include">
        </childnode>
        <childnode refid="68313" relation="include">
        </childnode>
        <childnode refid="68303" relation="include">
        </childnode>
        <childnode refid="68294" relation="include">
        </childnode>
        <childnode refid="68304" relation="include">
        </childnode>
        <childnode refid="68306" relation="include">
        </childnode>
        <childnode refid="68307" relation="include">
        </childnode>
        <childnode refid="68314" relation="include">
        </childnode>
        <childnode refid="68308" relation="include">
        </childnode>
        <childnode refid="68315" relation="include">
        </childnode>
        <childnode refid="68316" relation="include">
        </childnode>
      </node>
      <node id="68316">
        <label>iostream</label>
      </node>
      <node id="68294">
        <label>cstddef</label>
      </node>
      <node id="68313">
        <label>climits</label>
      </node>
      <node id="68298">
        <label>type_traits</label>
      </node>
      <node id="68301">
        <label>algorithm</label>
      </node>
      <node id="68297">
        <label>memory</label>
      </node>
      <node id="68296">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="68331">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="68474">
        <label>pxr/usd/usdGeom/pointBased.h</label>
        <link refid="point_based_8h"/>
        <childnode refid="68475" relation="include">
        </childnode>
        <childnode refid="68479" relation="include">
        </childnode>
        <childnode refid="68480" relation="include">
        </childnode>
        <childnode refid="68481" relation="include">
        </childnode>
      </node>
      <node id="68422">
        <label>pxr/usd/usdGeom/visibilityAPI.h</label>
        <link refid="visibility_a_p_i_8h"/>
      </node>
      <node id="68363">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="68505">
        <label>pxr/usd/usd/primRange.h</label>
        <link refid="prim_range_8h_source"/>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68464">
        <label>pxr/usd/usdGeom/xformable.h</label>
        <link refid="xformable_8h"/>
        <childnode refid="68465" relation="include">
        </childnode>
        <childnode refid="68492" relation="include">
        </childnode>
        <childnode refid="68495" relation="include">
        </childnode>
        <childnode refid="68462" relation="include">
        </childnode>
        <childnode refid="68423" relation="include">
        </childnode>
        <childnode refid="68340" relation="include">
        </childnode>
        <childnode refid="68335" relation="include">
        </childnode>
        <childnode refid="68448" relation="include">
        </childnode>
        <childnode refid="68496" relation="include">
        </childnode>
        <childnode refid="68446" relation="include">
        </childnode>
        <childnode refid="68497" relation="include">
        </childnode>
        <childnode refid="68409" relation="include">
        </childnode>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68471">
        <label>pxr/usd/usdGeom/cylinder.h</label>
        <link refid="usd_2usd_geom_2cylinder_8h"/>
      </node>
      <node id="68342">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="68409">
        <label>pxr/usdImaging/usdImaging/dataSourcePrim.h</label>
        <link refid="data_source_prim_8h_source"/>
        <childnode refid="68410" relation="include">
        </childnode>
        <childnode refid="68411" relation="include">
        </childnode>
        <childnode refid="68419" relation="include">
        </childnode>
        <childnode refid="68408" relation="include">
        </childnode>
        <childnode refid="68420" relation="include">
        </childnode>
        <childnode refid="68421" relation="include">
        </childnode>
      </node>
      <node id="68429">
        <label>pxr/usd/usdLux/shapingAPI.h</label>
        <link refid="shaping_a_p_i_8h"/>
      </node>
      <node id="68321">
        <label>pxr/usd/pcp/cache.h</label>
        <link refid="pcp_2cache_8h_source"/>
        <childnode refid="68322" relation="include">
        </childnode>
        <childnode refid="68323" relation="include">
        </childnode>
      </node>
      <node id="68504">
        <label>pxr/usd/usd/primCompositionQuery.h</label>
        <link refid="prim_composition_query_8h"/>
      </node>
      <node id="68537">
        <label>pxr/usd/usdShade/types.h</label>
        <link refid="usd_2usd_shade_2types_8h_source"/>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68535" relation="include">
        </childnode>
        <childnode refid="68536" relation="include">
        </childnode>
        <childnode refid="68538" relation="include">
        </childnode>
      </node>
      <node id="68575">
        <label>pxr/usd/pcp/pyUtils.h</label>
        <link refid="usd_2pcp_2py_utils_8h_source"/>
      </node>
      <node id="68527">
        <label>pxr/usd/usdShade/shader.h</label>
        <link refid="shader_8h"/>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68350" relation="include">
        </childnode>
      </node>
      <node id="68571">
        <label>pxr/usd/usd/resolver.h</label>
        <link refid="usd_2resolver_8h_source"/>
      </node>
      <node id="68430">
        <label>pxr/usd/usdLux/volumeLightAPI.h</label>
        <link refid="volume_light_a_p_i_8h"/>
      </node>
      <node id="68402">
        <label>pxr/usd/usd/modelAPI.h</label>
        <link refid="model_a_p_i_8h"/>
      </node>
      <node id="68336">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="68403">
        <label>pxr/usd/usdGeom/modelAPI.h</label>
        <link refid="eom_2model_a_p_i_8h"/>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68570">
        <label>pxr/usd/pcp/iterator.h</label>
        <link refid="usd_2pcp_2iterator_8h_source"/>
        <childnode refid="68562" relation="include">
        </childnode>
        <childnode refid="68565" relation="include">
        </childnode>
        <childnode refid="68571" relation="include">
        </childnode>
      </node>
      <node id="68384">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="68385" relation="include">
        </childnode>
        <childnode refid="68386" relation="include">
        </childnode>
        <childnode refid="68387" relation="include">
        </childnode>
        <childnode refid="68388" relation="include">
        </childnode>
      </node>
      <node id="68515">
        <label>pxr/usd/usdPhysics/fixedJoint.h</label>
        <link refid="fixed_joint_8h"/>
      </node>
      <node id="68553">
        <label>pxr/usdImaging/usdImaging/lightAPIAdapter.h</label>
        <link refid="light_a_p_i_adapter_8h_source"/>
      </node>
      <node id="68494">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="68382">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="68443">
        <label>pxr/usd/usdShade/connectableAPI.h</label>
        <link refid="connectable_a_p_i_8h"/>
        <childnode refid="68444" relation="include">
        </childnode>
        <childnode refid="68445" relation="include">
        </childnode>
        <childnode refid="68419" relation="include">
        </childnode>
      </node>
      <node id="68563">
        <label>pxr/usd/usd/resolveTarget.h</label>
        <link refid="resolve_target_8h_source"/>
        <childnode refid="68460" relation="include">
        </childnode>
      </node>
      <node id="68456">
        <label>pxr/usd/usd/collectionPredicateLibrary.h</label>
        <link refid="collection_predicate_library_8h"/>
      </node>
      <node id="68449">
        <label>pxr/usd/usdSkel/bindingAPI.h</label>
        <link refid="binding_a_p_i_8h"/>
      </node>
      <node id="68405">
        <label>pxr/usd/usdGeom/primvarsAPI.h</label>
        <link refid="primvars_a_p_i_8h"/>
        <childnode refid="68406" relation="include">
        </childnode>
        <childnode refid="68407" relation="include">
        </childnode>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68480">
        <label>pxr/usd/usdGeom/nurbsPatch.h</label>
        <link refid="nurbs_patch_8h"/>
      </node>
      <node id="68566">
        <label>pxr/usd/pcp/targetIndex.h</label>
        <link refid="target_index_8h_source"/>
      </node>
      <node id="68516">
        <label>pxr/usd/usdPhysics/prismaticJoint.h</label>
        <link refid="prismatic_joint_8h"/>
      </node>
      <node id="68373">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="68374" relation="include">
        </childnode>
        <childnode refid="68375" relation="include">
        </childnode>
        <childnode refid="68376" relation="include">
        </childnode>
        <childnode refid="68377" relation="include">
        </childnode>
        <childnode refid="68378" relation="include">
        </childnode>
        <childnode refid="68379" relation="include">
        </childnode>
        <childnode refid="68380" relation="include">
        </childnode>
        <childnode refid="68381" relation="include">
        </childnode>
        <childnode refid="68382" relation="include">
        </childnode>
        <childnode refid="68383" relation="include">
        </childnode>
      </node>
      <node id="68344">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="68497">
        <label>pxr/usd/usdVol/fieldBase.h</label>
        <link refid="field_base_8h"/>
        <childnode refid="68498" relation="include">
        </childnode>
      </node>
      <node id="68434">
        <label>pxr/usd/usdPhysics/driveAPI.h</label>
        <link refid="drive_a_p_i_8h"/>
      </node>
      <node id="68368">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="68463">
        <label>pxr/usd/usdGeom/xformOp.h</label>
        <link refid="xform_op_8h"/>
        <childnode refid="68464" relation="include">
        </childnode>
        <childnode refid="68423" relation="include">
        </childnode>
      </node>
      <node id="68526">
        <label>pxr/usd/usdShade/nodeGraph.h</label>
        <link refid="node_graph_8h"/>
        <childnode refid="68444" relation="include">
        </childnode>
      </node>
      <node id="68425">
        <label>pxr/usd/usdLux/lightListAPI.h</label>
        <link refid="light_list_a_p_i_8h"/>
      </node>
      <node id="68327">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="68328" relation="include">
        </childnode>
        <childnode refid="68340" relation="include">
        </childnode>
        <childnode refid="68342" relation="include">
        </childnode>
        <childnode refid="68343" relation="include">
        </childnode>
        <childnode refid="68344" relation="include">
        </childnode>
        <childnode refid="68345" relation="include">
        </childnode>
        <childnode refid="68400" relation="include">
        </childnode>
        <childnode refid="68401" relation="include">
        </childnode>
      </node>
      <node id="68457">
        <label>pxr/usd/usd/notice.h</label>
        <link refid="usd_2usd_2notice_8h_source"/>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68458" relation="include">
        </childnode>
      </node>
      <node id="68325">
        <label>pxr/usd/usd/clipsAPI.h</label>
        <link refid="clips_a_p_i_8h"/>
        <childnode refid="68326" relation="include">
        </childnode>
      </node>
      <node id="68385">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="68380">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="68440">
        <label>pxr/usd/usdPhysics/rigidBodyAPI.h</label>
        <link refid="rigid_body_a_p_i_8h"/>
      </node>
      <node id="68374">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="68396">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="68404">
        <label>pxr/usd/usdGeom/motionAPI.h</label>
        <link refid="motion_a_p_i_8h"/>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68477">
        <label>pxr/usd/usdGeom/hermiteCurves.h</label>
        <link refid="hermite_curves_8h"/>
      </node>
      <node id="68339">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="68572">
        <label>pxr/usd/usd/editTarget.h</label>
        <link refid="edit_target_8h_source"/>
        <childnode refid="68573" relation="include">
        </childnode>
        <childnode refid="68574" relation="include">
        </childnode>
        <childnode refid="68323" relation="include">
        </childnode>
        <childnode refid="68546" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
      </node>
      <node id="68518">
        <label>pxr/usd/usdPhysics/sphericalJoint.h</label>
        <link refid="spherical_joint_8h"/>
      </node>
      <node id="68495">
        <label>pxr/usd/usdGeom/xform.h</label>
        <link refid="xform_8h"/>
      </node>
      <node id="68400">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="68523">
        <label>pxr/usd/usdRender/settings.h</label>
        <link refid="settings_8h"/>
      </node>
      <node id="68411">
        <label>pxr/usdImaging/usdImaging/dataSourceGprim.h</label>
        <link refid="data_source_gprim_8h_source"/>
        <childnode refid="68412" relation="include">
        </childnode>
        <childnode refid="68413" relation="include">
        </childnode>
        <childnode refid="68414" relation="include">
        </childnode>
        <childnode refid="68415" relation="include">
        </childnode>
        <childnode refid="68416" relation="include">
        </childnode>
        <childnode refid="68417" relation="include">
        </childnode>
        <childnode refid="68418" relation="include">
        </childnode>
      </node>
      <node id="68358">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="68328">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="68329" relation="include">
        </childnode>
        <childnode refid="68335" relation="include">
        </childnode>
      </node>
      <node id="68367">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="68333">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="68538">
        <label>pxr/usd/usdShade/utils.h</label>
        <link refid="usd_2usd_shade_2utils_8h_source"/>
        <childnode refid="68535" relation="include">
        </childnode>
        <childnode refid="68536" relation="include">
        </childnode>
      </node>
      <node id="68568">
        <label>pxr/usd/pcp/node.h</label>
        <link refid="pcp_2node_8h_source"/>
        <childnode refid="68319" relation="include">
        </childnode>
        <childnode refid="68561" relation="include">
        </childnode>
        <childnode refid="68569" relation="include">
        </childnode>
        <childnode refid="68567" relation="include">
        </childnode>
        <childnode refid="68570" relation="include">
        </childnode>
        <childnode refid="68562" relation="include">
        </childnode>
        <childnode refid="68565" relation="include">
        </childnode>
        <childnode refid="68572" relation="include">
        </childnode>
        <childnode refid="68504" relation="include">
        </childnode>
        <childnode refid="68558" relation="include">
        </childnode>
        <childnode refid="68571" relation="include">
        </childnode>
        <childnode refid="68563" relation="include">
        </childnode>
      </node>
      <node id="68506">
        <label>pxr/usd/usd/property.h</label>
        <link refid="usd_2property_8h_source"/>
        <childnode refid="68507" relation="include">
        </childnode>
        <childnode refid="68542" relation="include">
        </childnode>
      </node>
      <node id="68376">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="68391">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="68475">
        <label>pxr/usd/usdGeom/curves.h</label>
        <link refid="curves_8h"/>
        <childnode refid="68476" relation="include">
        </childnode>
        <childnode refid="68477" relation="include">
        </childnode>
        <childnode refid="68478" relation="include">
        </childnode>
      </node>
      <node id="68455">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="68327" relation="include">
        </childnode>
      </node>
      <node id="68379">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="68329">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="68330" relation="include">
        </childnode>
        <childnode refid="68331" relation="include">
        </childnode>
        <childnode refid="68332" relation="include">
        </childnode>
        <childnode refid="68333" relation="include">
        </childnode>
        <childnode refid="68334" relation="include">
        </childnode>
      </node>
      <node id="68428">
        <label>pxr/usd/usdLux/shadowAPI.h</label>
        <link refid="shadow_a_p_i_8h"/>
      </node>
      <node id="68507">
        <label>pxr/usd/usd/attribute.h</label>
        <link refid="attribute_8h_source"/>
        <childnode refid="68460" relation="include">
        </childnode>
        <childnode refid="68508" relation="include">
        </childnode>
        <childnode refid="68532" relation="include">
        </childnode>
        <childnode refid="68533" relation="include">
        </childnode>
        <childnode refid="68463" relation="include">
        </childnode>
        <childnode refid="68535" relation="include">
        </childnode>
        <childnode refid="68536" relation="include">
        </childnode>
        <childnode refid="68537" relation="include">
        </childnode>
        <childnode refid="68538" relation="include">
        </childnode>
        <childnode refid="68539" relation="include">
        </childnode>
        <childnode refid="68534" relation="include">
        </childnode>
        <childnode refid="68540" relation="include">
        </childnode>
        <childnode refid="68501" relation="include">
        </childnode>
        <childnode refid="68541" relation="include">
        </childnode>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68350" relation="include">
        </childnode>
      </node>
      <node id="68337">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="68542">
        <label>pxr/usd/usd/relationship.h</label>
        <link refid="relationship_8h_source"/>
        <childnode refid="68508" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68534" relation="include">
        </childnode>
        <childnode refid="68543" relation="include">
        </childnode>
      </node>
      <node id="68341">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="68421">
        <label>pxr/usdImaging/usdVolImaging/dataSourceFieldAsset.h</label>
        <link refid="data_source_field_asset_8h_source"/>
      </node>
      <node id="68486">
        <label>pxr/usd/usdSkel/root.h</label>
        <link refid="root_8h"/>
      </node>
      <node id="68567">
        <label>pxr/usd/pcp/instanceKey.h</label>
        <link refid="instance_key_8h_source"/>
      </node>
      <node id="68438">
        <label>pxr/usd/usdPhysics/materialAPI.h</label>
        <link refid="usd_physics_2material_a_p_i_8h"/>
      </node>
      <node id="68433">
        <label>pxr/usd/usdPhysics/collisionAPI.h</label>
        <link refid="collision_a_p_i_8h"/>
      </node>
      <node id="68564">
        <label>pxr/usd/pcp/layerStack.h</label>
        <link refid="layer_stack_8h"/>
      </node>
      <node id="68556">
        <label>pxr/usdImaging/usdImaging/dataSourceUsdPrimInfo.h</label>
        <link refid="data_source_usd_prim_info_8h_source"/>
      </node>
      <node id="68461">
        <label>pxr/usd/usdGeom/bboxCache.h</label>
        <link refid="bbox_cache_8h_source"/>
        <childnode refid="68403" relation="include">
        </childnode>
      </node>
      <node id="68401">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68350" relation="include">
        </childnode>
      </node>
      <node id="68502">
        <label>pxr/usd/usd/inherits.h</label>
        <link refid="inherits_8h_source"/>
      </node>
      <node id="68395">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="68352">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="68448">
        <label>pxr/usd/usdLux/pluginLight.h</label>
        <link refid="plugin_light_8h"/>
      </node>
      <node id="68383">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="68351">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="68492">
        <label>pxr/usd/usdGeom/camera.h</label>
        <link refid="usd_2usd_geom_2camera_8h"/>
        <childnode refid="68493" relation="include">
        </childnode>
        <childnode refid="68494" relation="include">
        </childnode>
        <childnode refid="68410" relation="include">
        </childnode>
      </node>
      <node id="68334">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="68548">
        <label>pxr/usd/usdSkel/skeletonQuery.h</label>
        <link refid="skeleton_query_8h"/>
        <childnode refid="68398" relation="include">
        </childnode>
      </node>
      <node id="68364">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="68435">
        <label>pxr/usd/usdPhysics/filteredPairsAPI.h</label>
        <link refid="filtered_pairs_a_p_i_8h"/>
      </node>
      <node id="68317">
        <label>pxr/base/tf/pxrTslRobinMap/robin_set.h</label>
        <link refid="robin__set_8h"/>
        <childnode refid="68318" relation="include">
        </childnode>
      </node>
      <node id="68445">
        <label>pxr/usd/usdShade/shaderDefUtils.h</label>
        <link refid="shader_def_utils_8h_source"/>
      </node>
      <node id="68354">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="68389">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="68510">
        <label>pxr/usd/usdGeom/imageable.h</label>
        <link refid="imageable_8h"/>
        <childnode refid="68403" relation="include">
        </childnode>
        <childnode refid="68511" relation="include">
        </childnode>
        <childnode refid="68512" relation="include">
        </childnode>
        <childnode refid="68464" relation="include">
        </childnode>
        <childnode refid="68513" relation="include">
        </childnode>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68442">
        <label>pxr/usd/usdRi/splineAPI.h</label>
        <link refid="spline_a_p_i_8h"/>
      </node>
      <node id="68531">
        <label>pxr/usd/usdUI/backdrop.h</label>
        <link refid="backdrop_8h"/>
      </node>
      <node id="68517">
        <label>pxr/usd/usdPhysics/revoluteJoint.h</label>
        <link refid="revolute_joint_8h"/>
      </node>
      <node id="68451">
        <label>pxr/usd/usdUI/sceneGraphPrimAPI.h</label>
        <link refid="scene_graph_prim_a_p_i_8h"/>
      </node>
      <node id="68319">
        <label>pxr/usd/pcp/arc.h</label>
        <link refid="arc_8h_source"/>
      </node>
      <node id="68522">
        <label>pxr/usd/usdRender/product.h</label>
        <link refid="product_8h"/>
      </node>
      <node id="68503">
        <label>pxr/usd/usd/payloads.h</label>
        <link refid="payloads_8h_source"/>
      </node>
      <node id="68441">
        <label>pxr/usd/usdRi/materialAPI.h</label>
        <link refid="usd_ri_2material_a_p_i_8h"/>
      </node>
      <node id="68436">
        <label>pxr/usd/usdPhysics/limitAPI.h</label>
        <link refid="limit_a_p_i_8h"/>
      </node>
      <node id="68562">
        <label>pxr/usd/pcp/primIndex.h</label>
        <link refid="prim_index_8h_source"/>
        <childnode refid="68321" relation="include">
        </childnode>
        <childnode refid="68504" relation="include">
        </childnode>
        <childnode refid="68563" relation="include">
        </childnode>
      </node>
      <node id="68330">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="68501">
        <label>pxr/usdImaging/usdImaging/dataSourceAttribute.h</label>
        <link refid="data_source_attribute_8h_source"/>
        <childnode refid="68407" relation="include">
        </childnode>
      </node>
      <node id="68476">
        <label>pxr/usd/usdGeom/basisCurves.h</label>
        <link refid="usd_2usd_geom_2basis_curves_8h"/>
        <childnode refid="68412" relation="include">
        </childnode>
      </node>
      <node id="68361">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="68462">
        <label>pxr/usd/usdGeom/xformCache.h</label>
        <link refid="xform_cache_8h_source"/>
        <childnode refid="68461" relation="include">
        </childnode>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68359" relation="include">
        </childnode>
      </node>
      <node id="68372">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="68338">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="68485">
        <label>pxr/usd/usdProc/generativeProcedural.h</label>
        <link refid="usd_2usd_proc_2generative_procedural_8h"/>
      </node>
      <node id="68381">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="68375">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="68544">
        <label>pxr/usd/usd/references.h</label>
        <link refid="references_8h_source"/>
        <childnode refid="68508" relation="include">
        </childnode>
      </node>
      <node id="68348">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="68410">
        <label>pxr/usdImaging/usdImaging/dataSourceCamera.h</label>
        <link refid="data_source_camera_8h_source"/>
      </node>
      <node id="68340">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="68341" relation="include">
        </childnode>
      </node>
      <node id="68569">
        <label>pxr/usd/pcp/dynamicFileFormatContext.h</label>
        <link refid="dynamic_file_format_context_8h_source"/>
      </node>
      <node id="68555">
        <label>pxr/usdImaging/usdImaging/dataSourceStageGlobals.h</label>
        <link refid="data_source_stage_globals_8h_source"/>
        <childnode refid="68501" relation="include">
        </childnode>
        <childnode refid="68412" relation="include">
        </childnode>
        <childnode refid="68410" relation="include">
        </childnode>
        <childnode refid="68411" relation="include">
        </childnode>
        <childnode refid="68419" relation="include">
        </childnode>
        <childnode refid="68413" relation="include">
        </childnode>
        <childnode refid="68416" relation="include">
        </childnode>
        <childnode refid="68409" relation="include">
        </childnode>
        <childnode refid="68407" relation="include">
        </childnode>
        <childnode refid="68543" relation="include">
        </childnode>
        <childnode refid="68420" relation="include">
        </childnode>
        <childnode refid="68417" relation="include">
        </childnode>
        <childnode refid="68418" relation="include">
        </childnode>
        <childnode refid="68458" relation="include">
        </childnode>
        <childnode refid="68421" relation="include">
        </childnode>
      </node>
      <node id="68525">
        <label>pxr/usd/usdRender/var.h</label>
        <link refid="var_8h"/>
      </node>
      <node id="68541">
        <label>pxr/usdImaging/usdImaging/dataSourceAttributeColorSpace.h</label>
        <link refid="data_source_attribute_color_space_8h_source"/>
      </node>
      <node id="68371">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="68532">
        <label>pxr/usd/usdGeom/constraintTarget.h</label>
        <link refid="constraint_target_8h_source"/>
        <childnode refid="68403" relation="include">
        </childnode>
      </node>
      <node id="68356">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="68357" relation="include">
        </childnode>
        <childnode refid="68358" relation="include">
        </childnode>
      </node>
      <node id="68369">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="68439">
        <label>pxr/usd/usdPhysics/meshCollisionAPI.h</label>
        <link refid="mesh_collision_a_p_i_8h"/>
      </node>
      <node id="68479">
        <label>pxr/usd/usdGeom/mesh.h</label>
        <link refid="usd_2usd_geom_2mesh_8h"/>
        <childnode refid="68413" relation="include">
        </childnode>
      </node>
      <node id="68416">
        <label>pxr/usdImaging/usdImaging/dataSourcePoints.h</label>
        <link refid="data_source_points_8h_source"/>
      </node>
      <node id="68524">
        <label>pxr/usd/usdRender/spec.h</label>
        <link refid="usd_render_2spec_8h"/>
      </node>
      <node id="68530">
        <label>pxr/usd/usdSkel/blendShapeQuery.h</label>
        <link refid="blend_shape_query_8h"/>
        <childnode refid="68398" relation="include">
        </childnode>
      </node>
      <node id="68473">
        <label>pxr/usd/usdGeom/plane.h</label>
        <link refid="usd_2usd_geom_2plane_8h"/>
      </node>
      <node id="68465">
        <label>pxr/usd/usdGeom/boundable.h</label>
        <link refid="boundable_8h"/>
        <childnode refid="68466" relation="include">
        </childnode>
        <childnode refid="68484" relation="include">
        </childnode>
        <childnode refid="68329" relation="include">
        </childnode>
        <childnode refid="68485" relation="include">
        </childnode>
        <childnode refid="68486" relation="include">
        </childnode>
        <childnode refid="68487" relation="include">
        </childnode>
        <childnode refid="68409" relation="include">
        </childnode>
      </node>
      <node id="68415">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsPatch.h</label>
        <link refid="data_source_nurbs_patch_8h_source"/>
      </node>
      <node id="68452">
        <label>pxr/usd/usd/flattenUtils.h</label>
        <link refid="flatten_utils_8h"/>
      </node>
      <node id="68499">
        <label>pxr/usd/usdVol/field3DAsset.h</label>
        <link refid="field3_d_asset_8h"/>
      </node>
      <node id="68350">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="68351" relation="include">
        </childnode>
        <childnode refid="68352" relation="include">
        </childnode>
        <childnode refid="68353" relation="include">
        </childnode>
        <childnode refid="68354" relation="include">
        </childnode>
        <childnode refid="68355" relation="include">
        </childnode>
        <childnode refid="68356" relation="include">
        </childnode>
        <childnode refid="68359" relation="include">
        </childnode>
        <childnode refid="68363" relation="include">
        </childnode>
        <childnode refid="68372" relation="include">
        </childnode>
        <childnode refid="68373" relation="include">
        </childnode>
        <childnode refid="68384" relation="include">
        </childnode>
        <childnode refid="68389" relation="include">
        </childnode>
        <childnode refid="68364" relation="include">
        </childnode>
        <childnode refid="68365" relation="include">
        </childnode>
        <childnode refid="68366" relation="include">
        </childnode>
        <childnode refid="68368" relation="include">
        </childnode>
        <childnode refid="68369" relation="include">
        </childnode>
        <childnode refid="68390" relation="include">
        </childnode>
        <childnode refid="68391" relation="include">
        </childnode>
        <childnode refid="68392" relation="include">
        </childnode>
        <childnode refid="68393" relation="include">
        </childnode>
        <childnode refid="68370" relation="include">
        </childnode>
        <childnode refid="68371" relation="include">
        </childnode>
        <childnode refid="68394" relation="include">
        </childnode>
        <childnode refid="68395" relation="include">
        </childnode>
        <childnode refid="68396" relation="include">
        </childnode>
        <childnode refid="68397" relation="include">
        </childnode>
        <childnode refid="68398" relation="include">
        </childnode>
        <childnode refid="68399" relation="include">
        </childnode>
      </node>
      <node id="68407">
        <label>pxr/usdImaging/usdImaging/dataSourcePrimvars.h</label>
        <link refid="data_source_primvars_8h_source"/>
        <childnode refid="68408" relation="include">
        </childnode>
        <childnode refid="68409" relation="include">
        </childnode>
      </node>
      <node id="68511">
        <label>pxr/usd/usdGeom/scope.h</label>
        <link refid="scope_8h"/>
      </node>
      <node id="68450">
        <label>pxr/usd/usdUI/nodeGraphNodeAPI.h</label>
        <link refid="node_graph_node_a_p_i_8h"/>
      </node>
      <node id="68320">
        <label>pxr/usd/pcp/errors.h</label>
        <link refid="pcp_2errors_8h_source"/>
        <childnode refid="68321" relation="include">
        </childnode>
        <childnode refid="68561" relation="include">
        </childnode>
        <childnode refid="68564" relation="include">
        </childnode>
        <childnode refid="68562" relation="include">
        </childnode>
        <childnode refid="68565" relation="include">
        </childnode>
        <childnode refid="68566" relation="include">
        </childnode>
      </node>
      <node id="68513">
        <label>pxr/usd/usdPhysics/joint.h</label>
        <link refid="joint_8h"/>
        <childnode refid="68514" relation="include">
        </childnode>
        <childnode refid="68515" relation="include">
        </childnode>
        <childnode refid="68516" relation="include">
        </childnode>
        <childnode refid="68517" relation="include">
        </childnode>
        <childnode refid="68518" relation="include">
        </childnode>
      </node>
      <node id="68427">
        <label>pxr/usd/usdLux/meshLightAPI.h</label>
        <link refid="mesh_light_a_p_i_8h"/>
      </node>
      <node id="68394">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="68322">
        <label>pxr/usd/pcp/namespaceEdits.h</label>
        <link refid="namespace_edits_8h_source"/>
      </node>
      <node id="68547">
        <label>pxr/usd/usdSkel/animQuery.h</label>
        <link refid="anim_query_8h"/>
        <childnode refid="68491" relation="include">
        </childnode>
        <childnode refid="68548" relation="include">
        </childnode>
      </node>
      <node id="68529">
        <label>pxr/usd/usdSkel/blendShape.h</label>
        <link refid="blend_shape_8h"/>
        <childnode refid="68530" relation="include">
        </childnode>
      </node>
      <node id="68357">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="68349">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="68520">
        <label>pxr/usd/usdRender/denoisePass.h</label>
        <link refid="denoise_pass_8h"/>
      </node>
      <node id="68561">
        <label>pxr/usd/pcp/composeSite.h</label>
        <link refid="compose_site_8h"/>
        <childnode refid="68562" relation="include">
        </childnode>
      </node>
      <node id="68423">
        <label>pxr/usd/usdGeom/xformCommonAPI.h</label>
        <link refid="xform_common_a_p_i_8h"/>
      </node>
      <node id="68413">
        <label>pxr/usdImaging/usdImaging/dataSourceMesh.h</label>
        <link refid="data_source_mesh_8h_source"/>
      </node>
      <node id="68536">
        <label>pxr/usd/usdShade/output.h</label>
        <link refid="output_8h_source"/>
        <childnode refid="68328" relation="include">
        </childnode>
        <childnode refid="68340" relation="include">
        </childnode>
        <childnode refid="68428" relation="include">
        </childnode>
        <childnode refid="68429" relation="include">
        </childnode>
        <childnode refid="68441" relation="include">
        </childnode>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68527" relation="include">
        </childnode>
      </node>
      <node id="68534">
        <label>pxr/usd/usdSkel/skinningQuery.h</label>
        <link refid="skinning_query_8h"/>
        <childnode refid="68488" relation="include">
        </childnode>
      </node>
      <node id="68323">
        <label>pxr/usd/usd/stage.h</label>
        <link refid="stage_8h"/>
        <childnode refid="68324" relation="include">
        </childnode>
        <childnode refid="68325" relation="include">
        </childnode>
        <childnode refid="68327" relation="include">
        </childnode>
        <childnode refid="68452" relation="include">
        </childnode>
        <childnode refid="68402" relation="include">
        </childnode>
        <childnode refid="68453" relation="include">
        </childnode>
        <childnode refid="68454" relation="include">
        </childnode>
        <childnode refid="68558" relation="include">
        </childnode>
        <childnode refid="68509" relation="include">
        </childnode>
        <childnode refid="68476" relation="include">
        </childnode>
        <childnode refid="68465" relation="include">
        </childnode>
        <childnode refid="68492" relation="include">
        </childnode>
        <childnode refid="68467" relation="include">
        </childnode>
        <childnode refid="68468" relation="include">
        </childnode>
        <childnode refid="68469" relation="include">
        </childnode>
        <childnode refid="68470" relation="include">
        </childnode>
        <childnode refid="68475" relation="include">
        </childnode>
        <childnode refid="68471" relation="include">
        </childnode>
        <childnode refid="68472" relation="include">
        </childnode>
        <childnode refid="68466" relation="include">
        </childnode>
        <childnode refid="68477" relation="include">
        </childnode>
        <childnode refid="68510" relation="include">
        </childnode>
        <childnode refid="68479" relation="include">
        </childnode>
        <childnode refid="68403" relation="include">
        </childnode>
        <childnode refid="68404" relation="include">
        </childnode>
        <childnode refid="68478" relation="include">
        </childnode>
        <childnode refid="68480" relation="include">
        </childnode>
        <childnode refid="68473" relation="include">
        </childnode>
        <childnode refid="68474" relation="include">
        </childnode>
        <childnode refid="68484" relation="include">
        </childnode>
        <childnode refid="68481" relation="include">
        </childnode>
        <childnode refid="68405" relation="include">
        </childnode>
        <childnode refid="68511" relation="include">
        </childnode>
        <childnode refid="68482" relation="include">
        </childnode>
        <childnode refid="68512" relation="include">
        </childnode>
        <childnode refid="68422" relation="include">
        </childnode>
        <childnode refid="68495" relation="include">
        </childnode>
        <childnode refid="68464" relation="include">
        </childnode>
        <childnode refid="68423" relation="include">
        </childnode>
        <childnode refid="68424" relation="include">
        </childnode>
        <childnode refid="68329" relation="include">
        </childnode>
        <childnode refid="68330" relation="include">
        </childnode>
        <childnode refid="68331" relation="include">
        </childnode>
        <childnode refid="68336" relation="include">
        </childnode>
        <childnode refid="68337" relation="include">
        </childnode>
        <childnode refid="68338" relation="include">
        </childnode>
        <childnode refid="68339" relation="include">
        </childnode>
        <childnode refid="68328" relation="include">
        </childnode>
        <childnode refid="68340" relation="include">
        </childnode>
        <childnode refid="68425" relation="include">
        </childnode>
        <childnode refid="68426" relation="include">
        </childnode>
        <childnode refid="68427" relation="include">
        </childnode>
        <childnode refid="68335" relation="include">
        </childnode>
        <childnode refid="68448" relation="include">
        </childnode>
        <childnode refid="68341" relation="include">
        </childnode>
        <childnode refid="68332" relation="include">
        </childnode>
        <childnode refid="68333" relation="include">
        </childnode>
        <childnode refid="68428" relation="include">
        </childnode>
        <childnode refid="68429" relation="include">
        </childnode>
        <childnode refid="68334" relation="include">
        </childnode>
        <childnode refid="68430" relation="include">
        </childnode>
        <childnode refid="68431" relation="include">
        </childnode>
        <childnode refid="68496" relation="include">
        </childnode>
        <childnode refid="68432" relation="include">
        </childnode>
        <childnode refid="68433" relation="include">
        </childnode>
        <childnode refid="68342" relation="include">
        </childnode>
        <childnode refid="68514" relation="include">
        </childnode>
        <childnode refid="68434" relation="include">
        </childnode>
        <childnode refid="68435" relation="include">
        </childnode>
        <childnode refid="68515" relation="include">
        </childnode>
        <childnode refid="68513" relation="include">
        </childnode>
        <childnode refid="68436" relation="include">
        </childnode>
        <childnode refid="68437" relation="include">
        </childnode>
        <childnode refid="68438" relation="include">
        </childnode>
        <childnode refid="68439" relation="include">
        </childnode>
        <childnode refid="68516" relation="include">
        </childnode>
        <childnode refid="68517" relation="include">
        </childnode>
        <childnode refid="68440" relation="include">
        </childnode>
        <childnode refid="68519" relation="include">
        </childnode>
        <childnode refid="68518" relation="include">
        </childnode>
        <childnode refid="68485" relation="include">
        </childnode>
        <childnode refid="68520" relation="include">
        </childnode>
        <childnode refid="68343" relation="include">
        </childnode>
        <childnode refid="68522" relation="include">
        </childnode>
        <childnode refid="68523" relation="include">
        </childnode>
        <childnode refid="68521" relation="include">
        </childnode>
        <childnode refid="68524" relation="include">
        </childnode>
        <childnode refid="68525" relation="include">
        </childnode>
        <childnode refid="68441" relation="include">
        </childnode>
        <childnode refid="68344" relation="include">
        </childnode>
        <childnode refid="68442" relation="include">
        </childnode>
        <childnode refid="68406" relation="include">
        </childnode>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68446" relation="include">
        </childnode>
        <childnode refid="68444" relation="include">
        </childnode>
        <childnode refid="68345" relation="include">
        </childnode>
        <childnode refid="68447" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68527" relation="include">
        </childnode>
        <childnode refid="68528" relation="include">
        </childnode>
        <childnode refid="68449" relation="include">
        </childnode>
        <childnode refid="68529" relation="include">
        </childnode>
        <childnode refid="68486" relation="include">
        </childnode>
        <childnode refid="68487" relation="include">
        </childnode>
        <childnode refid="68531" relation="include">
        </childnode>
        <childnode refid="68450" relation="include">
        </childnode>
        <childnode refid="68451" relation="include">
        </childnode>
        <childnode refid="68400" relation="include">
        </childnode>
        <childnode refid="68559" relation="include">
        </childnode>
        <childnode refid="68560" relation="include">
        </childnode>
        <childnode refid="68499" relation="include">
        </childnode>
        <childnode refid="68498" relation="include">
        </childnode>
        <childnode refid="68497" relation="include">
        </childnode>
        <childnode refid="68500" relation="include">
        </childnode>
        <childnode refid="68483" relation="include">
        </childnode>
        <childnode refid="68493" relation="include">
        </childnode>
        <childnode refid="68494" relation="include">
        </childnode>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68458" relation="include">
        </childnode>
      </node>
      <node id="68453">
        <label>pxr/usd/usd/namespaceEditor.h</label>
        <link refid="namespace_editor_8h"/>
      </node>
      <node id="68386">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="68472">
        <label>pxr/usd/usdGeom/cylinder_1.h</label>
        <link refid="cylinder__1_8h"/>
      </node>
      <node id="68550">
        <label>pxr/usdImaging/usdImaging/collectionAPIAdapter.h</label>
        <link refid="collection_a_p_i_adapter_8h_source"/>
      </node>
      <node id="68444">
        <label>pxr/usd/usdShade/material.h</label>
        <link refid="usd_2usd_shade_2material_8h"/>
        <childnode refid="68441" relation="include">
        </childnode>
        <childnode refid="68345" relation="include">
        </childnode>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68543">
        <label>pxr/usdImaging/usdImaging/dataSourceRelationship.h</label>
        <link refid="data_source_relationship_8h_source"/>
      </node>
      <node id="68392">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="68574">
        <label>pxr/usd/usd/pyEditContext.h</label>
        <link refid="py_edit_context_8h_source"/>
      </node>
      <node id="68399">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="68557">
        <label>pxr/usdImaging/usdviewq/utils.h</label>
        <link refid="usd_imaging_2usdviewq_2utils_8h_source"/>
      </node>
      <node id="68431">
        <label>pxr/usd/usdMedia/assetPreviewsAPI.h</label>
        <link refid="asset_previews_a_p_i_8h"/>
      </node>
      <node id="68387">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="68419">
        <label>pxr/usdImaging/usdImaging/dataSourceMaterial.h</label>
        <link refid="data_source_material_8h_source"/>
      </node>
      <node id="68509">
        <label>pxr/usd/usd/typed.h</label>
        <link refid="typed_8h"/>
        <childnode refid="68510" relation="include">
        </childnode>
        <childnode refid="68512" relation="include">
        </childnode>
        <childnode refid="68342" relation="include">
        </childnode>
        <childnode refid="68519" relation="include">
        </childnode>
        <childnode refid="68520" relation="include">
        </childnode>
        <childnode refid="68343" relation="include">
        </childnode>
        <childnode refid="68521" relation="include">
        </childnode>
        <childnode refid="68525" relation="include">
        </childnode>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68527" relation="include">
        </childnode>
        <childnode refid="68528" relation="include">
        </childnode>
        <childnode refid="68529" relation="include">
        </childnode>
        <childnode refid="68531" relation="include">
        </childnode>
      </node>
      <node id="68482">
        <label>pxr/usd/usdGeom/sphere.h</label>
        <link refid="usd_2usd_geom_2sphere_8h"/>
        <childnode refid="68347" relation="include">
        </childnode>
      </node>
      <node id="68467">
        <label>pxr/usd/usdGeom/capsule.h</label>
        <link refid="capsule_8h"/>
      </node>
      <node id="68426">
        <label>pxr/usd/usdLux/listAPI.h</label>
        <link refid="list_a_p_i_8h"/>
      </node>
      <node id="68533">
        <label>pxr/usd/usdGeom/primvar.h</label>
        <link refid="primvar_8h_source"/>
        <childnode refid="68510" relation="include">
        </childnode>
        <childnode refid="68405" relation="include">
        </childnode>
        <childnode refid="68449" relation="include">
        </childnode>
        <childnode refid="68534" relation="include">
        </childnode>
        <childnode refid="68407" relation="include">
        </childnode>
      </node>
      <node id="68432">
        <label>pxr/usd/usdPhysics/articulationRootAPI.h</label>
        <link refid="articulation_root_a_p_i_8h"/>
      </node>
      <node id="68420">
        <label>pxr/usdImaging/usdImaging/dataSourceRenderPrims.h</label>
        <link refid="data_source_render_prims_8h_source"/>
      </node>
      <node id="68458">
        <label>pxr/usdImaging/usdImaging/stageSceneIndex.h</label>
        <link refid="stage_scene_index_8h_source"/>
      </node>
      <node id="68493">
        <label>pxr/usdImaging/usdAppUtils/camera.h</label>
        <link refid="usd_imaging_2usd_app_utils_2camera_8h"/>
      </node>
      <node id="68519">
        <label>pxr/usd/usdPhysics/scene.h</label>
        <link refid="scene_8h"/>
      </node>
      <node id="68370">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="68360">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="68496">
        <label>pxr/usd/usdMedia/spatialAudio.h</label>
        <link refid="spatial_audio_8h"/>
      </node>
      <node id="68326">
        <label>pxr/usd/usdUtils/stitchClips.h</label>
        <link refid="stitch_clips_8h"/>
      </node>
      <node id="68353">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="68406">
        <label>pxr/usd/usdRi/statementsAPI.h</label>
        <link refid="statements_a_p_i_8h"/>
      </node>
      <node id="68393">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="68389" relation="include">
        </childnode>
      </node>
      <node id="68388">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="68424">
        <label>pxr/usd/usdHydra/generativeProceduralAPI.h</label>
        <link refid="generative_procedural_a_p_i_8h"/>
      </node>
      <node id="68552">
        <label>pxr/usdImaging/usdImaging/geomModelAPIAdapter.h</label>
        <link refid="geom_model_a_p_i_adapter_8h_source"/>
      </node>
      <node id="68560">
        <label>pxr/usd/usdUtils/introspection.h</label>
        <link refid="introspection_8h"/>
      </node>
      <node id="68459">
        <label>pxr/usd/usd/prim.h</label>
        <link refid="prim_8h"/>
        <childnode refid="68324" relation="include">
        </childnode>
        <childnode refid="68460" relation="include">
        </childnode>
        <childnode refid="68325" relation="include">
        </childnode>
        <childnode refid="68327" relation="include">
        </childnode>
        <childnode refid="68456" relation="include">
        </childnode>
        <childnode refid="68502" relation="include">
        </childnode>
        <childnode refid="68402" relation="include">
        </childnode>
        <childnode refid="68503" relation="include">
        </childnode>
        <childnode refid="68504" relation="include">
        </childnode>
        <childnode refid="68505" relation="include">
        </childnode>
        <childnode refid="68506" relation="include">
        </childnode>
        <childnode refid="68544" relation="include">
        </childnode>
        <childnode refid="68508" relation="include">
        </childnode>
        <childnode refid="68545" relation="include">
        </childnode>
        <childnode refid="68509" relation="include">
        </childnode>
        <childnode refid="68546" relation="include">
        </childnode>
        <childnode refid="68476" relation="include">
        </childnode>
        <childnode refid="68465" relation="include">
        </childnode>
        <childnode refid="68492" relation="include">
        </childnode>
        <childnode refid="68467" relation="include">
        </childnode>
        <childnode refid="68468" relation="include">
        </childnode>
        <childnode refid="68469" relation="include">
        </childnode>
        <childnode refid="68470" relation="include">
        </childnode>
        <childnode refid="68475" relation="include">
        </childnode>
        <childnode refid="68471" relation="include">
        </childnode>
        <childnode refid="68472" relation="include">
        </childnode>
        <childnode refid="68466" relation="include">
        </childnode>
        <childnode refid="68477" relation="include">
        </childnode>
        <childnode refid="68510" relation="include">
        </childnode>
        <childnode refid="68479" relation="include">
        </childnode>
        <childnode refid="68403" relation="include">
        </childnode>
        <childnode refid="68404" relation="include">
        </childnode>
        <childnode refid="68478" relation="include">
        </childnode>
        <childnode refid="68480" relation="include">
        </childnode>
        <childnode refid="68473" relation="include">
        </childnode>
        <childnode refid="68474" relation="include">
        </childnode>
        <childnode refid="68484" relation="include">
        </childnode>
        <childnode refid="68481" relation="include">
        </childnode>
        <childnode refid="68405" relation="include">
        </childnode>
        <childnode refid="68511" relation="include">
        </childnode>
        <childnode refid="68482" relation="include">
        </childnode>
        <childnode refid="68512" relation="include">
        </childnode>
        <childnode refid="68422" relation="include">
        </childnode>
        <childnode refid="68495" relation="include">
        </childnode>
        <childnode refid="68464" relation="include">
        </childnode>
        <childnode refid="68462" relation="include">
        </childnode>
        <childnode refid="68423" relation="include">
        </childnode>
        <childnode refid="68424" relation="include">
        </childnode>
        <childnode refid="68329" relation="include">
        </childnode>
        <childnode refid="68330" relation="include">
        </childnode>
        <childnode refid="68331" relation="include">
        </childnode>
        <childnode refid="68336" relation="include">
        </childnode>
        <childnode refid="68337" relation="include">
        </childnode>
        <childnode refid="68338" relation="include">
        </childnode>
        <childnode refid="68339" relation="include">
        </childnode>
        <childnode refid="68328" relation="include">
        </childnode>
        <childnode refid="68340" relation="include">
        </childnode>
        <childnode refid="68425" relation="include">
        </childnode>
        <childnode refid="68426" relation="include">
        </childnode>
        <childnode refid="68427" relation="include">
        </childnode>
        <childnode refid="68335" relation="include">
        </childnode>
        <childnode refid="68448" relation="include">
        </childnode>
        <childnode refid="68341" relation="include">
        </childnode>
        <childnode refid="68332" relation="include">
        </childnode>
        <childnode refid="68333" relation="include">
        </childnode>
        <childnode refid="68428" relation="include">
        </childnode>
        <childnode refid="68429" relation="include">
        </childnode>
        <childnode refid="68334" relation="include">
        </childnode>
        <childnode refid="68430" relation="include">
        </childnode>
        <childnode refid="68431" relation="include">
        </childnode>
        <childnode refid="68496" relation="include">
        </childnode>
        <childnode refid="68432" relation="include">
        </childnode>
        <childnode refid="68433" relation="include">
        </childnode>
        <childnode refid="68342" relation="include">
        </childnode>
        <childnode refid="68514" relation="include">
        </childnode>
        <childnode refid="68434" relation="include">
        </childnode>
        <childnode refid="68435" relation="include">
        </childnode>
        <childnode refid="68515" relation="include">
        </childnode>
        <childnode refid="68513" relation="include">
        </childnode>
        <childnode refid="68436" relation="include">
        </childnode>
        <childnode refid="68437" relation="include">
        </childnode>
        <childnode refid="68438" relation="include">
        </childnode>
        <childnode refid="68439" relation="include">
        </childnode>
        <childnode refid="68516" relation="include">
        </childnode>
        <childnode refid="68517" relation="include">
        </childnode>
        <childnode refid="68440" relation="include">
        </childnode>
        <childnode refid="68519" relation="include">
        </childnode>
        <childnode refid="68518" relation="include">
        </childnode>
        <childnode refid="68485" relation="include">
        </childnode>
        <childnode refid="68520" relation="include">
        </childnode>
        <childnode refid="68343" relation="include">
        </childnode>
        <childnode refid="68522" relation="include">
        </childnode>
        <childnode refid="68523" relation="include">
        </childnode>
        <childnode refid="68521" relation="include">
        </childnode>
        <childnode refid="68524" relation="include">
        </childnode>
        <childnode refid="68525" relation="include">
        </childnode>
        <childnode refid="68441" relation="include">
        </childnode>
        <childnode refid="68344" relation="include">
        </childnode>
        <childnode refid="68442" relation="include">
        </childnode>
        <childnode refid="68406" relation="include">
        </childnode>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68446" relation="include">
        </childnode>
        <childnode refid="68444" relation="include">
        </childnode>
        <childnode refid="68345" relation="include">
        </childnode>
        <childnode refid="68447" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68527" relation="include">
        </childnode>
        <childnode refid="68528" relation="include">
        </childnode>
        <childnode refid="68547" relation="include">
        </childnode>
        <childnode refid="68449" relation="include">
        </childnode>
        <childnode refid="68529" relation="include">
        </childnode>
        <childnode refid="68491" relation="include">
        </childnode>
        <childnode refid="68486" relation="include">
        </childnode>
        <childnode refid="68487" relation="include">
        </childnode>
        <childnode refid="68548" relation="include">
        </childnode>
        <childnode refid="68534" relation="include">
        </childnode>
        <childnode refid="68531" relation="include">
        </childnode>
        <childnode refid="68450" relation="include">
        </childnode>
        <childnode refid="68451" relation="include">
        </childnode>
        <childnode refid="68499" relation="include">
        </childnode>
        <childnode refid="68498" relation="include">
        </childnode>
        <childnode refid="68497" relation="include">
        </childnode>
        <childnode refid="68500" relation="include">
        </childnode>
        <childnode refid="68483" relation="include">
        </childnode>
        <childnode refid="68549" relation="include">
        </childnode>
        <childnode refid="68419" relation="include">
        </childnode>
        <childnode refid="68409" relation="include">
        </childnode>
        <childnode refid="68555" relation="include">
        </childnode>
        <childnode refid="68556" relation="include">
        </childnode>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68348" relation="include">
        </childnode>
        <childnode refid="68350" relation="include">
        </childnode>
        <childnode refid="68346" relation="include">
        </childnode>
        <childnode refid="68557" relation="include">
        </childnode>
      </node>
      <node id="68332">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="68412">
        <label>pxr/usdImaging/usdImaging/dataSourceBasisCurves.h</label>
        <link refid="data_source_basis_curves_8h_source"/>
      </node>
      <node id="68378">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="68347">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="68348" relation="include">
        </childnode>
        <childnode refid="68349" relation="include">
        </childnode>
      </node>
      <node id="68540">
        <label>pxr/usd/usdUtils/sparseValueWriter.h</label>
        <link refid="sparse_value_writer_8h"/>
      </node>
      <node id="68551">
        <label>pxr/usdImaging/usdImaging/coordSysAPIAdapter.h</label>
        <link refid="coord_sys_a_p_i_adapter_8h_source"/>
      </node>
      <node id="68565">
        <label>pxr/usd/pcp/propertyIndex.h</label>
        <link refid="property_index_8h_source"/>
        <childnode refid="68321" relation="include">
        </childnode>
      </node>
      <node id="68414">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsCurves.h</label>
        <link refid="data_source_nurbs_curves_8h_source"/>
      </node>
      <node id="68546">
        <label>pxr/usd/usd/variantSets.h</label>
        <link refid="variant_sets_8h_source"/>
        <childnode refid="68444" relation="include">
        </childnode>
      </node>
      <node id="68535">
        <label>pxr/usd/usdShade/input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="68328" relation="include">
        </childnode>
        <childnode refid="68340" relation="include">
        </childnode>
        <childnode refid="68428" relation="include">
        </childnode>
        <childnode refid="68429" relation="include">
        </childnode>
        <childnode refid="68441" relation="include">
        </childnode>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68526" relation="include">
        </childnode>
        <childnode refid="68527" relation="include">
        </childnode>
      </node>
      <node id="68512">
        <label>pxr/usd/usdGeom/subset.h</label>
        <link refid="subset_8h"/>
        <childnode refid="68444" relation="include">
        </childnode>
        <childnode refid="68345" relation="include">
        </childnode>
      </node>
      <node id="68324">
        <label>pxr/usd/usd/apiSchemaBase.h</label>
        <link refid="api_schema_base_8h"/>
        <childnode refid="68325" relation="include">
        </childnode>
        <childnode refid="68327" relation="include">
        </childnode>
        <childnode refid="68402" relation="include">
        </childnode>
        <childnode refid="68403" relation="include">
        </childnode>
        <childnode refid="68404" relation="include">
        </childnode>
        <childnode refid="68405" relation="include">
        </childnode>
        <childnode refid="68422" relation="include">
        </childnode>
        <childnode refid="68423" relation="include">
        </childnode>
        <childnode refid="68424" relation="include">
        </childnode>
        <childnode refid="68328" relation="include">
        </childnode>
        <childnode refid="68425" relation="include">
        </childnode>
        <childnode refid="68426" relation="include">
        </childnode>
        <childnode refid="68427" relation="include">
        </childnode>
        <childnode refid="68428" relation="include">
        </childnode>
        <childnode refid="68429" relation="include">
        </childnode>
        <childnode refid="68430" relation="include">
        </childnode>
        <childnode refid="68431" relation="include">
        </childnode>
        <childnode refid="68432" relation="include">
        </childnode>
        <childnode refid="68433" relation="include">
        </childnode>
        <childnode refid="68434" relation="include">
        </childnode>
        <childnode refid="68435" relation="include">
        </childnode>
        <childnode refid="68436" relation="include">
        </childnode>
        <childnode refid="68437" relation="include">
        </childnode>
        <childnode refid="68438" relation="include">
        </childnode>
        <childnode refid="68439" relation="include">
        </childnode>
        <childnode refid="68440" relation="include">
        </childnode>
        <childnode refid="68441" relation="include">
        </childnode>
        <childnode refid="68344" relation="include">
        </childnode>
        <childnode refid="68442" relation="include">
        </childnode>
        <childnode refid="68406" relation="include">
        </childnode>
        <childnode refid="68443" relation="include">
        </childnode>
        <childnode refid="68446" relation="include">
        </childnode>
        <childnode refid="68345" relation="include">
        </childnode>
        <childnode refid="68447" relation="include">
        </childnode>
        <childnode refid="68449" relation="include">
        </childnode>
        <childnode refid="68450" relation="include">
        </childnode>
        <childnode refid="68451" relation="include">
        </childnode>
      </node>
      <node id="68460">
        <label>pxr/usd/usd/attributeQuery.h</label>
        <link refid="attribute_query_8h_source"/>
        <childnode refid="68461" relation="include">
        </childnode>
        <childnode refid="68462" relation="include">
        </childnode>
        <childnode refid="68463" relation="include">
        </childnode>
        <childnode refid="68501" relation="include">
        </childnode>
      </node>
      <node id="68468">
        <label>pxr/usd/usdGeom/capsule_1.h</label>
        <link refid="capsule__1_8h"/>
      </node>
      <node id="68521">
        <label>pxr/usd/usdRender/settingsBase.h</label>
        <link refid="settings_base_8h"/>
        <childnode refid="68522" relation="include">
        </childnode>
        <childnode refid="68523" relation="include">
        </childnode>
        <childnode refid="68524" relation="include">
        </childnode>
      </node>
      <node id="68491">
        <label>pxr/usd/usdSkel/cache.h</label>
        <link refid="usd_skel_2cache_8h"/>
        <childnode refid="68398" relation="include">
        </childnode>
      </node>
      <node id="68466">
        <label>pxr/usd/usdGeom/gprim.h</label>
        <link refid="usd_2usd_geom_2gprim_8h"/>
        <childnode refid="68467" relation="include">
        </childnode>
        <childnode refid="68468" relation="include">
        </childnode>
        <childnode refid="68469" relation="include">
        </childnode>
        <childnode refid="68470" relation="include">
        </childnode>
        <childnode refid="68471" relation="include">
        </childnode>
        <childnode refid="68472" relation="include">
        </childnode>
        <childnode refid="68473" relation="include">
        </childnode>
        <childnode refid="68474" relation="include">
        </childnode>
        <childnode refid="68482" relation="include">
        </childnode>
        <childnode refid="68483" relation="include">
        </childnode>
      </node>
      <node id="68539">
        <label>pxr/usd/usdSkel/inbetweenShape.h</label>
        <link refid="inbetween_shape_8h_source"/>
        <childnode refid="68529" relation="include">
        </childnode>
        <childnode refid="68530" relation="include">
        </childnode>
      </node>
      <node id="68490">
        <label>pxr/usd/usdSkel/utils.h</label>
        <link refid="usd_2usd_skel_2utils_8h"/>
      </node>
      <node id="68446">
        <label>pxr/usd/usdShade/coordSysAPI.h</label>
        <link refid="coord_sys_a_p_i_8h"/>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68366">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="68418">
        <label>pxr/usdImaging/usdImaging/dataSourceVolume.h</label>
        <link refid="data_source_volume_8h_source"/>
      </node>
      <node id="68345">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68454">
        <label>pxr/usd/usd/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="68455" relation="include">
        </childnode>
        <childnode refid="68456" relation="include">
        </childnode>
        <childnode refid="68457" relation="include">
        </childnode>
        <childnode refid="68459" relation="include">
        </childnode>
        <childnode refid="68506" relation="include">
        </childnode>
      </node>
      <node id="68559">
        <label>pxr/usd/usdUtils/flattenLayerStack.h</label>
        <link refid="flatten_layer_stack_8h"/>
      </node>
      <node id="68489">
        <label>pxr/usd/usdSkel/bakeSkinning.h</label>
        <link refid="bake_skinning_8h_source"/>
        <childnode refid="68490" relation="include">
        </childnode>
      </node>
      <node id="68483">
        <label>pxr/usd/usdVol/volume.h</label>
        <link refid="usd_2usd_vol_2volume_8h"/>
        <childnode refid="68418" relation="include">
        </childnode>
        <childnode refid="68371" relation="include">
        </childnode>
      </node>
      <node id="68417">
        <label>pxr/usdImaging/usdImaging/dataSourceSchemaBased.h</label>
        <link refid="data_source_schema_based_8h_source"/>
      </node>
      <node id="68318">
        <label>pxr/usd/pcp/types.h</label>
        <link refid="usd_2pcp_2types_8h"/>
        <childnode refid="68319" relation="include">
        </childnode>
        <childnode refid="68320" relation="include">
        </childnode>
        <childnode refid="68567" relation="include">
        </childnode>
        <childnode refid="68568" relation="include">
        </childnode>
        <childnode refid="68562" relation="include">
        </childnode>
        <childnode refid="68575" relation="include">
        </childnode>
      </node>
      <node id="68469">
        <label>pxr/usd/usdGeom/cone.h</label>
        <link refid="usd_2usd_geom_2cone_8h"/>
      </node>
      <node id="68365">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="68481">
        <label>pxr/usd/usdGeom/points.h</label>
        <link refid="usd_2usd_geom_2points_8h"/>
      </node>
      <node id="68500">
        <label>pxr/usd/usdVol/openVDBAsset.h</label>
        <link refid="open_v_d_b_asset_8h"/>
      </node>
      <node id="68484">
        <label>pxr/usd/usdGeom/pointInstancer.h</label>
        <link refid="point_instancer_8h"/>
        <childnode refid="68461" relation="include">
        </childnode>
        <childnode refid="68408" relation="include">
        </childnode>
        <childnode refid="68346" relation="include">
        </childnode>
      </node>
      <node id="68528">
        <label>pxr/usd/usdSkel/animation.h</label>
        <link refid="animation_8h"/>
      </node>
      <node id="68408">
        <label>pxr/usdImaging/usdImaging/dataSourcePointInstancer.h</label>
        <link refid="data_source_point_instancer_8h_source"/>
      </node>
      <node id="68390">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="68377">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="68346">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="68347" relation="include">
        </childnode>
        <childnode refid="68350" relation="include">
        </childnode>
      </node>
      <node id="68359">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="68351" relation="include">
        </childnode>
        <childnode refid="68360" relation="include">
        </childnode>
        <childnode refid="68361" relation="include">
        </childnode>
        <childnode refid="68354" relation="include">
        </childnode>
        <childnode refid="68362" relation="include">
        </childnode>
        <childnode refid="68363" relation="include">
        </childnode>
        <childnode refid="68364" relation="include">
        </childnode>
        <childnode refid="68365" relation="include">
        </childnode>
        <childnode refid="68366" relation="include">
        </childnode>
        <childnode refid="68367" relation="include">
        </childnode>
        <childnode refid="68368" relation="include">
        </childnode>
        <childnode refid="68369" relation="include">
        </childnode>
        <childnode refid="68370" relation="include">
        </childnode>
        <childnode refid="68371" relation="include">
        </childnode>
      </node>
      <node id="68335">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="68336" relation="include">
        </childnode>
        <childnode refid="68337" relation="include">
        </childnode>
        <childnode refid="68338" relation="include">
        </childnode>
        <childnode refid="68339" relation="include">
        </childnode>
      </node>
      <node id="68514">
        <label>pxr/usd/usdPhysics/distanceJoint.h</label>
        <link refid="distance_joint_8h"/>
      </node>
      <node id="68545">
        <label>pxr/usd/usd/specializes.h</label>
        <link refid="specializes_8h_source"/>
      </node>
      <node id="68478">
        <label>pxr/usd/usdGeom/nurbsCurves.h</label>
        <link refid="nurbs_curves_8h"/>
      </node>
      <node id="68487">
        <label>pxr/usd/usdSkel/skeleton.h</label>
        <link refid="skeleton_8h"/>
        <childnode refid="68488" relation="include">
        </childnode>
        <childnode refid="68449" relation="include">
        </childnode>
        <childnode refid="68398" relation="include">
        </childnode>
      </node>
      <node id="68362">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="68498">
        <label>pxr/usd/usdVol/fieldAsset.h</label>
        <link refid="field_asset_8h"/>
        <childnode refid="68499" relation="include">
        </childnode>
        <childnode refid="68500" relation="include">
        </childnode>
      </node>
      <node id="68558">
        <label>pxr/usd/usd/resolveInfo.h</label>
        <link refid="resolve_info_8h"/>
        <childnode refid="68507" relation="include">
        </childnode>
        <childnode refid="68460" relation="include">
        </childnode>
      </node>
      <node id="68398">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="68355">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="68470">
        <label>pxr/usd/usdGeom/cube.h</label>
        <link refid="cube_8h"/>
        <childnode refid="68347" relation="include">
        </childnode>
      </node>
      <node id="68437">
        <label>pxr/usd/usdPhysics/massAPI.h</label>
        <link refid="mass_a_p_i_8h"/>
      </node>
      <node id="68488">
        <label>pxr/usd/usdSkel/binding.h</label>
        <link refid="usd_2usd_skel_2binding_8h"/>
        <childnode refid="68489" relation="include">
        </childnode>
        <childnode refid="68491" relation="include">
        </childnode>
        <childnode refid="68398" relation="include">
        </childnode>
      </node>
      <node id="68554">
        <label>pxr/usdImaging/usdImaging/materialBindingAPIAdapter.h</label>
        <link refid="material_binding_a_p_i_adapter_8h_source"/>
      </node>
      <node id="68343">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="68447">
        <label>pxr/usd/usdShade/nodeDefAPI.h</label>
        <link refid="node_def_a_p_i_8h"/>
        <childnode refid="68448" relation="include">
        </childnode>
        <childnode refid="68341" relation="include">
        </childnode>
      </node>
      <node id="68573">
        <label>pxr/usd/usd/editContext.h</label>
        <link refid="edit_context_8h_source"/>
        <childnode refid="68574" relation="include">
        </childnode>
      </node>
      <node id="68397">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
      <node id="68549">
        <label>pxr/usdImaging/usdImaging/apiSchemaAdapter.h</label>
        <link refid="api_schema_adapter_8h"/>
        <childnode refid="68550" relation="include">
        </childnode>
        <childnode refid="68551" relation="include">
        </childnode>
        <childnode refid="68552" relation="include">
        </childnode>
        <childnode refid="68553" relation="include">
        </childnode>
        <childnode refid="68554" relation="include">
        </childnode>
      </node>
      <node id="68508">
        <label>pxr/usd/usd/schemaBase.h</label>
        <link refid="schema_base_8h_source"/>
        <childnode refid="68324" relation="include">
        </childnode>
        <childnode refid="68509" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpxr__tsl_1_1robin__set" prot="public">pxr_tsl::robin_set</innerclass>
    <innerclass refid="classpxr__tsl_1_1robin__set_1_1_key_select" prot="private">pxr_tsl::robin_set::KeySelect</innerclass>
    <innernamespace refid="namespacepxr__tsl">pxr_tsl</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>PXR_TSL_ROBIN_SET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_TSL_ROBIN_SET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;robin_hash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pixar<sp/>modification,<sp/>modify<sp/>namespace<sp/>for<sp/>isolation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacepxr__tsl" kindref="compound">pxr_tsl</ref><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Hash<sp/>=<sp/>std::hash&lt;Key&gt;,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>KeyEqual<sp/>=<sp/>std::equal_to&lt;Key&gt;,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>std::allocator&lt;Key&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StoreHash<sp/>=<sp/>false,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>GrowthPolicy<sp/>=<sp/>pxr_tsl::rh::power_of_two_growth_policy&lt;2&gt;&gt;</highlight></codeline>
<codeline lineno="95" refid="classpxr__tsl_1_1robin__set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>has_is_transparent<sp/>=<sp/>pxr_tsl::detail_robin_hash::has_is_transparent&lt;U&gt;;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KeySelect<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>key_type<sp/>=<sp/>Key;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>key_type&amp;<sp/>operator()(Key&amp;<sp/>key)<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash" kindref="compound">ht</ref><sp/>=<sp/><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash" kindref="compound">detail_robin_hash::robin_hash</ref>&lt;Key,<sp/>KeySelect,<sp/>void,<sp/>Hash,<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocator,<sp/>StoreHash,<sp/>GrowthPolicy&gt;;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>key_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::key_type;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>value_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::value_type;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>size_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::size_type;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>difference_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::difference_type;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hasher<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::hasher;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>key_equal<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::key_equal;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>allocator_type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::allocator_type;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>reference<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::reference;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_reference<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::const_reference;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>pointer<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::pointer;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_pointer<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::const_pointer;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::iterator;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_iterator<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ht::const_iterator;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Constructors</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>()<sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(ht::DEFAULT_INIT_BUCKETS_SIZE)<sp/>{}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(size_type<sp/>bucket_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hash&amp;<sp/>hash<sp/>=<sp/>Hash(),</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyEqual&amp;<sp/>equal<sp/>=<sp/>KeyEqual(),</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc<sp/>=<sp/>Allocator())</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_ht(bucket_count,<sp/>hash,<sp/>equal,<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(size_type<sp/>bucket_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(bucket_count,<sp/>Hash(),<sp/>KeyEqual(),<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(size_type<sp/>bucket_count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hash&amp;<sp/>hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(bucket_count,<sp/>hash,<sp/>KeyEqual(),<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(ht::DEFAULT_INIT_BUCKETS_SIZE,<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIt&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(InputIt<sp/>first,<sp/>InputIt<sp/>last,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>bucket_count<sp/>=<sp/>ht::DEFAULT_INIT_BUCKETS_SIZE,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hash&amp;<sp/>hash<sp/>=<sp/>Hash(),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyEqual&amp;<sp/>equal<sp/>=<sp/>KeyEqual(),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc<sp/>=<sp/>Allocator())</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(bucket_count,<sp/>hash,<sp/>equal,<sp/>alloc)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>insert(first,<sp/>last);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIt&gt;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(InputIt<sp/>first,<sp/>InputIt<sp/>last,<sp/>size_type<sp/>bucket_count,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(first,<sp/>last,<sp/>bucket_count,<sp/>Hash(),<sp/>KeyEqual(),<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIt&gt;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(InputIt<sp/>first,<sp/>InputIt<sp/>last,<sp/>size_type<sp/>bucket_count,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hash&amp;<sp/>hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(first,<sp/>last,<sp/>bucket_count,<sp/>hash,<sp/>KeyEqual(),<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(std::initializer_list&lt;value_type&gt;<sp/>init,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_type<sp/>bucket_count<sp/>=<sp/>ht::DEFAULT_INIT_BUCKETS_SIZE,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hash&amp;<sp/>hash<sp/>=<sp/>Hash(),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>KeyEqual&amp;<sp/>equal<sp/>=<sp/>KeyEqual(),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc<sp/>=<sp/>Allocator())</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(init.begin(),<sp/>init.end(),<sp/>bucket_count,<sp/>hash,<sp/>equal,<sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(std::initializer_list&lt;value_type&gt;<sp/>init,<sp/>size_type<sp/>bucket_count,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(init.begin(),<sp/>init.end(),<sp/>bucket_count,<sp/>Hash(),<sp/>KeyEqual(),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(std::initializer_list&lt;value_type&gt;<sp/>init,<sp/>size_type<sp/>bucket_count,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Hash&amp;<sp/>hash,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Allocator&amp;<sp/>alloc)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>(init.begin(),<sp/>init.end(),<sp/>bucket_count,<sp/>hash,<sp/>KeyEqual(),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alloc)<sp/>{}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>&amp;<sp/>operator=(std::initializer_list&lt;value_type&gt;<sp/>ilist)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ht.clear();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ht.reserve(ilist.size());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ht.insert(ilist.begin(),<sp/>ilist.end());</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>allocator_type<sp/>get_allocator()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.get_allocator();<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Iterators</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>iterator<sp/>begin()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.begin();<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>const_iterator<sp/>begin()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.begin();<sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>const_iterator<sp/>cbegin()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.cbegin();<sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>iterator<sp/>end()<sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.end();<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>const_iterator<sp/>end()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.end();<sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>const_iterator<sp/>cend()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.cend();<sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Capacity</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.empty();<sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>size_type<sp/>size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.size();<sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>size_type<sp/>max_size()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.max_size();<sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Modifiers</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>noexcept<sp/>{<sp/>m_ht.clear();<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>bool&gt;<sp/>insert(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.insert(value);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>bool&gt;<sp/>insert(value_type&amp;&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.insert(std::move(value));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>iterator<sp/>insert(const_iterator<sp/>hint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.insert_hint(hint,<sp/>value);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>iterator<sp/>insert(const_iterator<sp/>hint,<sp/>value_type&amp;&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.insert_hint(hint,<sp/>std::move(value));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>InputIt&gt;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(InputIt<sp/>first,<sp/>InputIt<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ht.insert(first,<sp/>last);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(std::initializer_list&lt;value_type&gt;<sp/>ilist)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ht.insert(ilist.begin(),<sp/>ilist.end());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="248" refid="classpxr__tsl_1_1robin__set_1a3266031b8b423571de004ddf5bcddd24" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>bool&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1a3266031b8b423571de004ddf5bcddd24" kindref="member">emplace</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.emplace(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="260" refid="classpxr__tsl_1_1robin__set_1aaa893704f6fe9989f1ada11c2c503886" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1aaa893704f6fe9989f1ada11c2c503886" kindref="member">emplace_hint</ref>(const_iterator<sp/>hint,<sp/>Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.emplace_hint(hint,<sp/>std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>iterator<sp/>erase(iterator<sp/>pos)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(pos);<sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>iterator<sp/>erase(const_iterator<sp/>pos)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(pos);<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>iterator<sp/>erase(const_iterator<sp/>first,<sp/>const_iterator<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(first,<sp/>last);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>size_type<sp/>erase(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>key)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(key);<sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="classpxr__tsl_1_1robin__set_1aa0f50653fc58cc15e1ecdddf42078e74" refkind="member"><highlight class="normal"><sp/><sp/>size_type<sp/><ref refid="classpxr__tsl_1_1robin__set_1aa0f50653fc58cc15e1ecdddf42078e74" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>key_type&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="288" refid="classpxr__tsl_1_1robin__set_1adcb30fce010ea21568f9b6056af45b81" refkind="member"><highlight class="normal"><sp/><sp/>size_type<sp/><ref refid="classpxr__tsl_1_1robin__set_1adcb30fce010ea21568f9b6056af45b81" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(key);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="302" refid="classpxr__tsl_1_1robin__set_1ae666d3fa05f9584e01e4e733ea7def05" refkind="member"><highlight class="normal"><sp/><sp/>size_type<sp/><ref refid="classpxr__tsl_1_1robin__set_1ae666d3fa05f9584e01e4e733ea7def05" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.<ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1af7659d9799f06df763bf397101941dd7" kindref="member">erase</ref>(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(<ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>&amp;<sp/>other)<sp/>{<sp/>other.m_ht.swap(m_ht);<sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Lookup</highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>size_type<sp/>count(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.count(key);<sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="classpxr__tsl_1_1robin__set_1a4eefd88b96cf835514fd765dfff0498b" refkind="member"><highlight class="normal"><sp/><sp/>size_type<sp/><ref refid="classpxr__tsl_1_1robin__set_1a4eefd88b96cf835514fd765dfff0498b" kindref="member">count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.count(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="330" refid="classpxr__tsl_1_1robin__set_1ab9302b6142f9037bb489e6717e0af56b" refkind="member"><highlight class="normal"><sp/><sp/>size_type<sp/><ref refid="classpxr__tsl_1_1robin__set_1ab9302b6142f9037bb489e6717e0af56b" kindref="member">count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.count(key);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="344" refid="classpxr__tsl_1_1robin__set_1af9a9f3a334c8e885cb68883e252d87d9" refkind="member"><highlight class="normal"><sp/><sp/>size_type<sp/><ref refid="classpxr__tsl_1_1robin__set_1af9a9f3a334c8e885cb68883e252d87d9" kindref="member">count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.count(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>iterator<sp/>find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key);<sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="classpxr__tsl_1_1robin__set_1aa3d4e52e5fcbace902503a645524760a" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1aa3d4e52e5fcbace902503a645524760a" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>const_iterator<sp/>find(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key);<sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="classpxr__tsl_1_1robin__set_1a1e129b22f90474ce92d6b2b837554cc1" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1a1e129b22f90474ce92d6b2b837554cc1" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="376" refid="classpxr__tsl_1_1robin__set_1ae482efbeca6bc4c4661659f855e05e30" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1ae482efbeca6bc4c4661659f855e05e30" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="390" refid="classpxr__tsl_1_1robin__set_1aab7e6161d9e44421a88e1127ac703b7e" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1aab7e6161d9e44421a88e1127ac703b7e" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="400" refid="classpxr__tsl_1_1robin__set_1a900919d13db42a973b642182c837af6f" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1a900919d13db42a973b642182c837af6f" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="414" refid="classpxr__tsl_1_1robin__set_1a1c65830a6989831a96514c7dc75613cb" refkind="member"><highlight class="normal"><sp/><sp/>const_iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1a1c65830a6989831a96514c7dc75613cb" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.find(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>contains(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.contains(key);<sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="classpxr__tsl_1_1robin__set_1a0f5822954e3c2e3debe2db48740892a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set_1a0f5822954e3c2e3debe2db48740892a7" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.contains(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="437" refid="classpxr__tsl_1_1robin__set_1ab1eb6dff57572f9e6e2360c7ca6bd456" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set_1ab1eb6dff57572f9e6e2360c7ca6bd456" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.contains(key);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="451" refid="classpxr__tsl_1_1robin__set_1a43904eb84db5090ff895ee1d90b3b154" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set_1a43904eb84db5090ff895ee1d90b3b154" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.contains(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>iterator&gt;<sp/>equal_range(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="classpxr__tsl_1_1robin__set_1ac580a1eb1053b5412102ad2d5d6489ca" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>iterator&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1ac580a1eb1053b5412102ad2d5d6489ca" kindref="member">equal_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>precalculated_hash)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>std::pair&lt;const_iterator,<sp/>const_iterator&gt;<sp/>equal_range(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="classpxr__tsl_1_1robin__set_1a7211f6328ab446351332e327503ceb5b" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;const_iterator,<sp/>const_iterator&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1a7211f6328ab446351332e327503ceb5b" kindref="member">equal_range</ref>(</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="489" refid="classpxr__tsl_1_1robin__set_1a063fa547f1200f2f9c464099c28a3366" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>iterator&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1a063fa547f1200f2f9c464099c28a3366" kindref="member">equal_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="503" refid="classpxr__tsl_1_1robin__set_1a31955f79a9c3cf5b27bd738f633bcb28" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;iterator,<sp/>iterator&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1a31955f79a9c3cf5b27bd738f633bcb28" kindref="member">equal_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>precalculated_hash)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="514" refid="classpxr__tsl_1_1robin__set_1aab526ba688ea72265ac0f2b21801474b" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;const_iterator,<sp/>const_iterator&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1aab526ba688ea72265ac0f2b21801474b" kindref="member">equal_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">K,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">KE<sp/>=<sp/>KeyEqual,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;has_is_transparent&lt;KE&gt;::value&gt;::type*<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="524" refid="classpxr__tsl_1_1robin__set_1a5e2535eea8e61800b2682356b3530f53" refkind="member"><highlight class="normal"><sp/><sp/>std::pair&lt;const_iterator,<sp/>const_iterator&gt;<sp/><ref refid="classpxr__tsl_1_1robin__set_1a5e2535eea8e61800b2682356b3530f53" kindref="member">equal_range</ref>(</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>K&amp;<sp/>key,<sp/>std::size_t<sp/>precalculated_hash)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.equal_range(key,<sp/>precalculated_hash);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Bucket<sp/>interface</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>size_type<sp/>bucket_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.bucket_count();<sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/>size_type<sp/>max_bucket_count()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.max_bucket_count();<sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Hash<sp/>policy</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>load_factor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.load_factor();<sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>min_load_factor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.min_load_factor();<sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>max_load_factor()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.max_load_factor();<sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="552" refid="classpxr__tsl_1_1robin__set_1a4899ac5f6e805d6796166b308a190988" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set_1a4899ac5f6e805d6796166b308a190988" kindref="member">min_load_factor</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ml)<sp/>{<sp/>m_ht.min_load_factor(ml);<sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>max_load_factor(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>ml)<sp/>{<sp/>m_ht.max_load_factor(ml);<sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>rehash(size_type<sp/>count_)<sp/>{<sp/>m_ht.rehash(count_);<sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(size_type<sp/>count_)<sp/>{<sp/>m_ht.reserve(count_);<sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Observers</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/>hasher<sp/>hash_function()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.hash_function();<sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>key_equal<sp/>key_eq()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.key_eq();<sp/>}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Other</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="classpxr__tsl_1_1robin__set_1aa9a08d0e44e9e00fe05e2dfe467a98b5" refkind="member"><highlight class="normal"><sp/><sp/>iterator<sp/><ref refid="classpxr__tsl_1_1robin__set_1aa9a08d0e44e9e00fe05e2dfe467a98b5" kindref="member">mutable_iterator</ref>(const_iterator<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ht.mutable_iterator(pos);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lhs.size()<sp/>!=<sp/>rhs.size())<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>element_lhs<sp/>:<sp/>lhs)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it_element_rhs<sp/>=<sp/>rhs.find(element_lhs);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_element_rhs<sp/>==<sp/>rhs.cend())<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializer&gt;</highlight></codeline>
<codeline lineno="604" refid="classpxr__tsl_1_1robin__set_1afaa50020d576b4292bdd62f16869fb97" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set_1afaa50020d576b4292bdd62f16869fb97" kindref="member">serialize</ref>(Serializer&amp;<sp/>serializer)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ht.serialize(serializer);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Deserializer&gt;</highlight></codeline>
<codeline lineno="635" refid="classpxr__tsl_1_1robin__set_1ac60836d1c4297b34019f9ab162bb3b3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref><sp/><ref refid="classpxr__tsl_1_1robin__set_1ac60836d1c4297b34019f9ab162bb3b3b" kindref="member">deserialize</ref>(Deserializer&amp;<sp/>deserializer,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hash_compatible<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref><sp/>set(0);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>set.m_ht.deserialize(deserializer,<sp/>hash_compatible);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpxr__tsl_1_1robin__set" kindref="compound">robin_set</ref>&amp;<sp/>rhs)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!operator==(lhs,<sp/>rhs);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>swap(robin_set&amp;<sp/>lhs,<sp/>robin_set&amp;<sp/>rhs)<sp/>{<sp/>lhs.swap(rhs);<sp/>}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/>ht<sp/>m_ht;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">};</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Key,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Hash<sp/>=<sp/>std::hash&lt;Key&gt;,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>KeyEqual<sp/>=<sp/>std::equal_to&lt;Key&gt;,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>std::allocator&lt;Key&gt;,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StoreHash<sp/>=<sp/>false&gt;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacepxr__tsl_1af4e10aa025ebb3de06d853ab1961aad3" kindref="member">robin_pg_set</ref><sp/>=<sp/>robin_set&lt;Key,<sp/>Hash,<sp/>KeyEqual,<sp/>Allocator,<sp/>StoreHash,</highlight></codeline>
<codeline lineno="661" refid="namespacepxr__tsl_1af4e10aa025ebb3de06d853ab1961aad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpxr__tsl_1_1rh_1_1prime__growth__policy" kindref="compound">pxr_tsl::rh::prime_growth_policy</ref>&gt;;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>namespace<sp/>pxr_tsl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pxrTslRobinMap/robin_set.h"/>
  </compounddef>
</doxygen>
