<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_geom_imageable_1_1_purpose_info" kind="struct" language="C++" prot="public">
    <compoundname>UsdGeomImageable::PurposeInfo</compoundname>
    <includes refid="imageable_8h" local="no">imageable.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_usd_geom_imageable_1_1_purpose_info_1a822007dae71eae11b61a07eb275fb906" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken purpose</definition>
        <argsstring></argsstring>
        <name>purpose</name>
        <briefdescription>
<para>The computed purpose. </para>
        </briefdescription>
        <detaileddescription>
<para>An empty purpose indicates that this represents a purpose that hasn&apos;t been computed yet. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="408" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_geom_imageable_1_1_purpose_info_1a63a785994415244e9a44f0c4b2acffbf" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isInheritable</definition>
        <argsstring></argsstring>
        <name>isInheritable</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether this purpose should be inherited by namespace children that do not have their own authored purpose value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="412" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_geom_imageable_1_1_purpose_info_1ab9812c1ab5da3f56f1b621d99b453236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr PurposeInfo</definition>
        <argsstring>()=default</argsstring>
        <name>PurposeInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="401" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_geom_imageable_1_1_purpose_info_1a62e7bc02be6922ad9f7222f42bdf4d8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PurposeInfo</definition>
        <argsstring>(const TfToken &amp;purpose_, bool isInheritable_)</argsstring>
        <name>PurposeInfo</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>purpose_</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInheritable_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="403" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="403" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_geom_imageable_1_1_purpose_info_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns true if this represents a purpose that has been computed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="415" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="415" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_geom_imageable_1_1_purpose_info_1a35a435b45768056110effdefcdceca90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const PurposeInfo &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_usd_geom_imageable_1_1_purpose_info" kindref="compound">PurposeInfo</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="417" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="417" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_geom_imageable_1_1_purpose_info_1a1cf6c14d4776835b84ed2a60e3c801a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const PurposeInfo &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_usd_geom_imageable_1_1_purpose_info" kindref="compound">PurposeInfo</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="421" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="421" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_geom_imageable_1_1_purpose_info_1ad2e35d962f4058ba57193d64d3ed02e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; GetInheritablePurpose</definition>
        <argsstring>() const</argsstring>
        <name>GetInheritablePurpose</name>
        <briefdescription>
<para>Returns the purpose if it&apos;s inheritable, returns empty if it is not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/imageable.h" line="426" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="426" bodyend="429"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Value type containing information about a prim&apos;s computed effective purpose as well as storing whether the prim&apos;s purpose value can be inherited by namespace children if necessary. </para>
    </briefdescription>
    <detaileddescription>
<para>This provides the purpose information necessary for efficiently computing and caching the purposes of a hierarchy of prims. <simplesect kind="see"><para><ref refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" kindref="member">GetPurposeAttr()</ref>, <ref refid="usd_geom_page_front_1UsdGeom_ImageablePurpose" kindref="member">Imageable Purpose</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4861">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="4860">
        <label>UsdGeomImageable::PurposeInfo</label>
        <link refid="struct_usd_geom_imageable_1_1_purpose_info"/>
        <childnode refid="4861" relation="usage">
          <edgelabel>purpose</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdGeom/imageable.h" line="400" column="1" bodyfile="pxr/usd/usdGeom/imageable.h" bodystart="400" bodyend="430"/>
    <listofallmembers>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1ad2e35d962f4058ba57193d64d3ed02e2" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>GetInheritablePurpose</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1a63a785994415244e9a44f0c4b2acffbf" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>isInheritable</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>operator bool</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1a1cf6c14d4776835b84ed2a60e3c801a8" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>operator!=</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1a35a435b45768056110effdefcdceca90" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>operator==</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1a822007dae71eae11b61a07eb275fb906" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>purpose</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1ab9812c1ab5da3f56f1b621d99b453236" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>PurposeInfo</name></member>
      <member refid="struct_usd_geom_imageable_1_1_purpose_info_1a62e7bc02be6922ad9f7222f42bdf4d8b" prot="public" virt="non-virtual"><scope>UsdGeomImageable::PurposeInfo</scope><name>PurposeInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
