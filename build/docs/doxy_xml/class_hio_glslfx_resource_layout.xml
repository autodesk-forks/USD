<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hio_glslfx_resource_layout" kind="class" language="C++" prot="public">
    <compoundname>HioGlslfxResourceLayout</compoundname>
    <includes refid="glslfx_resource_layout_8h" local="no">glslfxResourceLayout.h</includes>
    <innerclass refid="struct_hio_glslfx_resource_layout_1_1_element" prot="public">HioGlslfxResourceLayout::Element</innerclass>
    <innerclass refid="struct_hio_glslfx_resource_layout_1_1_member" prot="public">HioGlslfxResourceLayout::Member</innerclass>
    <innerclass refid="struct_hio_glslfx_resource_layout_1_1_texture_element" prot="public">HioGlslfxResourceLayout::TextureElement</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_hio_glslfx_resource_layout_1a72932cf7c55b92c58da07ea888f87862" prot="public" static="no" strong="yes">
        <type></type>
        <name>InOut</name>
        <enumvalue id="class_hio_glslfx_resource_layout_1a72932cf7c55b92c58da07ea888f87862ab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1a72932cf7c55b92c58da07ea888f87862aac04830315200aab05c0ccc09d9665b5" prot="public">
          <name>STAGE_IN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1a72932cf7c55b92c58da07ea888f87862a4a005c2029b3c220d266f335dba9a289" prot="public">
          <name>STAGE_OUT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifies whether a resource element is a shader input, a shader output (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>an input or output variable or input or output interface block), or neither (i.e. a buffer or texture). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="86" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="86" bodyend="90"/>
      </memberdef>
      <memberdef kind="enum" id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5b" prot="public" static="no" strong="yes">
        <type></type>
        <name>Kind</name>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5bab50339a10e1de285ac99d4c3990b8693" prot="public">
          <name>NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5baecc2e9c313faddb07e7da223c1dc5c3f" prot="public">
          <name>VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5ba4d34f53389ed7f28ca91fc31ea360a66" prot="public">
          <name>BLOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5ba7dc966fcbff1d4b9d70a70b2b2f8f06b" prot="public">
          <name>QUALIFIER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5baff73f603cefa69645c21ab65055a32e8" prot="public">
          <name>UNIFORM_VALUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5ba828b25832098239cccba1a04013f4202" prot="public">
          <name>UNIFORM_BLOCK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5ba9243d7aecdb29ce4029183f830cf8b8a" prot="public">
          <name>UNIFORM_BLOCK_CONSTANT_PARAMS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5bacef18489f94b028408662646a9969639" prot="public">
          <name>BUFFER_READ_ONLY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5ba3b55a9332985b0aff1d2b501dc3b4a25" prot="public">
          <name>BUFFER_READ_WRITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifies the kind of resource element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="93" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="class_hio_glslfx_resource_layout_1a65468556d79304b3a4bfc464cc12e549" prot="public" static="no" strong="yes">
        <type></type>
        <name>TextureType</name>
        <enumvalue id="class_hio_glslfx_resource_layout_1a65468556d79304b3a4bfc464cc12e549a3f92f542bd9ec48f912b9350e22736ac" prot="public">
          <name>TEXTURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1a65468556d79304b3a4bfc464cc12e549a99ac33efe3b7932228bebda0c9f4eabf" prot="public">
          <name>SHADOW_TEXTURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_resource_layout_1a65468556d79304b3a4bfc464cc12e549afbb1c3e149b021a91b662f85b400ebda" prot="public">
          <name>ARRAY_TEXTURE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Specifies the type of a texture element. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="151" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="151" bodyend="155"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_resource_layout_1a88d85f250e9e3ab22f79213f08239253" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_hio_glslfx_resource_layout_1_1_member" kindref="compound">Member</ref> &gt;</type>
        <definition>using MemberVector =  std::vector&lt;Member&gt;</definition>
        <argsstring></argsstring>
        <name>MemberVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="118" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_resource_layout_1a5bb556912da8b583c23b1d5f70c8ddf3" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_hio_glslfx_resource_layout_1_1_element" kindref="compound">Element</ref> &gt;</type>
        <definition>using ElementVector =  std::vector&lt;Element&gt;</definition>
        <argsstring></argsstring>
        <name>ElementVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="148" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_resource_layout_1a93581e24960d062f5c13f13bea5b1df0" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_hio_glslfx_resource_layout_1_1_texture_element" kindref="compound">TextureElement</ref> &gt;</type>
        <definition>using TextureElementVector =  std::vector&lt;TextureElement&gt;</definition>
        <argsstring></argsstring>
        <name>TextureElementVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="179" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hio_glslfx_resource_layout_1aea18e850fe5e3f508bfbbd15c4d2961f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HioGlslfxResourceLayout</definition>
        <argsstring>()</argsstring>
        <name>HioGlslfxResourceLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_resource_layout_1ae12e60e2aaafee87b91b33a4c6cf757f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~HioGlslfxResourceLayout</definition>
        <argsstring>()</argsstring>
        <name>~HioGlslfxResourceLayout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="182" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hio_glslfx_resource_layout_1afc027d6f3626ee513f761fa9a1676441" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API void</type>
        <definition>static HIO_API void ParseLayout</definition>
        <argsstring>(ElementVector *result, TfToken const &amp;shaderStage, VtDictionary const &amp;layoutDict)</argsstring>
        <name>ParseLayout</name>
        <param>
          <type>ElementVector *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderStage</declname>
        </param>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>layoutDict</declname>
        </param>
        <briefdescription>
<para>Parses GLSLFX resource layout elements from the specified <emphasis>layoutDict</emphasis> and appends the parsed elements to <emphasis>result</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The resource layout for stages in a shader pipeline. </para>
    </briefdescription>
    <detaileddescription>
<para>The main geometric shader pipelines for meshes, curves, points, volumes, as well as compute shaders for subdivision refinement, etc. are expressed as GLSL source code and aspects of the main shader pipeline that are generated at runtime also are expressed as GLSL source code.</para>
<para>This class provides an intermediate representation for shader resources that are needed to provide access to external data like buffers and textures and also interstage data like input and output variables and input and output interface blocks.</para>
<para>A method is provided to parse resource data from <ref refid="class_hio_glslfx" kindref="compound">HioGlslfx</ref> resource layout dictionaries so that resource layout definitions can continue to be authored alongside related GLSL shader source.</para>
<para>The dictionary layouts have been designed to match the concepts and syntax used by GLSL. </para>
    </detaileddescription>
    <location file="pxr/imaging/hio/glslfxResourceLayout.h" line="81" column="1" bodyfile="pxr/imaging/hio/glslfxResourceLayout.h" bodystart="80" bodyend="191"/>
    <listofallmembers>
      <member refid="class_hio_glslfx_resource_layout_1a5bb556912da8b583c23b1d5f70c8ddf3" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>ElementVector</name></member>
      <member refid="class_hio_glslfx_resource_layout_1aea18e850fe5e3f508bfbbd15c4d2961f" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>HioGlslfxResourceLayout</name></member>
      <member refid="class_hio_glslfx_resource_layout_1a72932cf7c55b92c58da07ea888f87862" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>InOut</name></member>
      <member refid="class_hio_glslfx_resource_layout_1aa10c9e8951b8ccf714a59ec321bdac5b" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>Kind</name></member>
      <member refid="class_hio_glslfx_resource_layout_1a88d85f250e9e3ab22f79213f08239253" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>MemberVector</name></member>
      <member refid="class_hio_glslfx_resource_layout_1afc027d6f3626ee513f761fa9a1676441" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>ParseLayout</name></member>
      <member refid="class_hio_glslfx_resource_layout_1a93581e24960d062f5c13f13bea5b1df0" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>TextureElementVector</name></member>
      <member refid="class_hio_glslfx_resource_layout_1a65468556d79304b3a4bfc464cc12e549" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>TextureType</name></member>
      <member refid="class_hio_glslfx_resource_layout_1ae12e60e2aaafee87b91b33a4c6cf757f" prot="public" virt="non-virtual"><scope>HioGlslfxResourceLayout</scope><name>~HioGlslfxResourceLayout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
