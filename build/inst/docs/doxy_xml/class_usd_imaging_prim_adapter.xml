<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_imaging_prim_adapter" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>UsdImagingPrimAdapter</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::enable_shared_from_this&lt; UsdImagingPrimAdapter &gt;</basecompoundref>
    <derivedcompoundref refid="class_usd_imaging_camera_adapter" prot="public" virt="non-virtual">UsdImagingCameraAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_coord_sys_adapter" prot="public" virt="non-virtual">UsdImagingCoordSysAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_draw_mode_adapter" prot="public" virt="non-virtual">UsdImagingDrawModeAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_field_adapter" prot="public" virt="non-virtual">UsdImagingFieldAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_gprim_adapter" prot="public" virt="non-virtual">UsdImagingGprimAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_instance_adapter" prot="public" virt="non-virtual">UsdImagingInstanceAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_light_adapter" prot="public" virt="non-virtual">UsdImagingLightAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_light_filter_adapter" prot="public" virt="non-virtual">UsdImagingLightFilterAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_material_adapter" prot="public" virt="non-virtual">UsdImagingMaterialAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_point_instancer_adapter" prot="public" virt="non-virtual">UsdImagingPointInstancerAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_render_product_adapter" prot="public" virt="non-virtual">UsdImagingRenderProductAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_render_settings_adapter" prot="public" virt="non-virtual">UsdImagingRenderSettingsAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_render_var_adapter" prot="public" virt="non-virtual">UsdImagingRenderVarAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_imaging_represented_by_ancestor_prim_adapter" prot="public" virt="non-virtual">UsdImagingRepresentedByAncestorPrimAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_proc_imaging_generative_procedural_adapter" prot="public" virt="non-virtual">UsdProcImagingGenerativeProceduralAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_pxr_imaging_display_filter_adapter" prot="public" virt="non-virtual">UsdRiPxrImagingDisplayFilterAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_pxr_imaging_integrator_adapter" prot="public" virt="non-virtual">UsdRiPxrImagingIntegratorAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_pxr_imaging_sample_filter_adapter" prot="public" virt="non-virtual">UsdRiPxrImagingSampleFilterAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_skel_imaging_skeleton_adapter" prot="public" virt="non-virtual">UsdSkelImagingSkeletonAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_usd_skel_imaging_skel_root_adapter" prot="public" virt="non-virtual">UsdSkelImagingSkelRootAdapter</derivedcompoundref>
    <includes refid="prim_adapter_8h" local="no">primAdapter.h</includes>
      <sectiondef kind="user-defined">
      <header>Scene Index Support</header>
      <memberdef kind="enum" id="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917bea" prot="public" static="no" strong="no">
        <type></type>
        <name>PopulationMode</name>
        <enumvalue id="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917beaab9c0aa7f313e3633b21f8282c5928d0c" prot="public">
          <name>RepresentsSelf</name>
          <briefdescription>
<para>The adapter is responsible only for USD prims of its registered type. </para>
          </briefdescription>
          <detaileddescription>
<para>Any descendent USD prims are managed independently. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917beaa9ecca1ce1365a76ac60bf226b0162503" prot="public">
          <name>RepresentsSelfAndDescendents</name>
          <briefdescription>
<para>The adapter is responsible for USD prims of its registered type as well as any descendents of those prims. </para>
          </briefdescription>
          <detaileddescription>
<para>No population occurs for descendent prims. USD changes to descendent prims whose own PopulationMode is set to RepresentedByAncestor will be send to this adapter. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917beaaa9b4a5a614848b1570cada05749804b3" prot="public">
          <name>RepresentedByAncestor</name>
          <briefdescription>
<para>Changes to prims of this adapter&apos;s registered type are sent to the first ancestor prim whose adapter&apos;s PopulationMode value is RepresentsSelfAndDescendents. </para>
          </briefdescription>
          <detaileddescription>
<para>This value alone does not prevent population as it is expected that such prims appear beneath another prim whose own PopulationMode value prevents descendents from being populated. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="109" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="108" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a97d810a59c6a92894b3a06c8269813f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>virtual USDIMAGING_API TfTokenVector GetImagingSubprims</definition>
        <argsstring>(UsdPrim const &amp;prim)</argsstring>
        <name>GetImagingSubprims</name>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_open_v_d_b_asset_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field3_d_asset_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_distant_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_disk_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_rect_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_portal_light_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a13f369f91041c8212c97b2835ef6c3f5">GetImagingSubprims</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a9c918ff284690b5e1e7a4462505395b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>virtual USDIMAGING_API TfToken GetImagingSubprimType</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;subprim)</argsstring>
        <name>GetImagingSubprimType</name>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_open_v_d_b_asset_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field3_d_asset_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_distant_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_disk_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_rect_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_portal_light_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ae32bf9ad6dbb4c3a7d727a292ee36622">GetImagingSubprimType</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>subprim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a7d97704fab05ae2bc0113b929d654e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdContainerDataSourceHandle</type>
        <definition>virtual USDIMAGING_API HdContainerDataSourceHandle GetImagingSubprimData</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;subprim, const UsdImagingDataSourceStageGlobals &amp;stageGlobals)</argsstring>
        <name>GetImagingSubprimData</name>
        <reimplementedby refid="class_usd_imaging_light_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_open_v_d_b_asset_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field3_d_asset_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1afa0539852542759f97427556c3908efd">GetImagingSubprimData</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>subprim</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_data_source_stage_globals" kindref="compound">UsdImagingDataSourceStageGlobals</ref> &amp;</type>
          <declname>stageGlobals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a3a6ff93d3e73829732dd6bb14306b6ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref></type>
        <definition>virtual USDIMAGING_API HdDataSourceLocatorSet InvalidateImagingSubprim</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;subprim, TfTokenVector const &amp;properties, UsdImagingPropertyInvalidationType invalidationType)</argsstring>
        <name>InvalidateImagingSubprim</name>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ad20399577931e87fa678b1354b0ccb5d">InvalidateImagingSubprim</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>subprim</declname>
        </param>
        <param>
          <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> const &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>UsdImagingPropertyInvalidationType</type>
          <declname>invalidationType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a29d07ca94ee9e2dc77b7698d213ab8eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917bea" kindref="member">PopulationMode</ref></type>
        <definition>virtual USDIMAGING_API PopulationMode GetPopulationMode</definition>
        <argsstring>()</argsstring>
        <name>GetPopulationMode</name>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1a315ee3fc9a04f7835c1ff1faae0a57a7">GetPopulationMode</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a304b1b61fb7aa94da8291da402bf0972">GetPopulationMode</reimplementedby>
        <briefdescription>
<para>Returns the prim&apos;s behavior with regard to population and invalidation. </para>
        </briefdescription>
        <detaileddescription>
<para>See PopulationMode for possible values. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1acd5f73f97a79bae704bdbe07abc34719" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref></type>
        <definition>virtual USDIMAGING_API HdDataSourceLocatorSet InvalidateImagingSubprimFromDescendent</definition>
        <argsstring>(UsdPrim const &amp;prim, UsdPrim const &amp;descendentPrim, TfToken const &amp;subprim, TfTokenVector const &amp;properties, UsdImagingPropertyInvalidationType invalidationType)</argsstring>
        <name>InvalidateImagingSubprimFromDescendent</name>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a13a738f6ca3aee2e63ee29b7debfa980">InvalidateImagingSubprimFromDescendent</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>descendentPrim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>subprim</declname>
        </param>
        <param>
          <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> const &amp;</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>UsdImagingPropertyInvalidationType</type>
          <declname>invalidationType</declname>
        </param>
        <briefdescription>
<para>This is called (for each result of GetImagingSubprims) when this adapter&apos;s GetScope() result is RepresentsSelfAndDescendents and USD properties have changed on a descendent prim whose adapter&apos;s GetScope() result is RepresentedByAncestor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Initialization</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a47890dbd73ea260bc7709f1bdf410a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>virtual SdfPath Populate</definition>
        <argsstring>(UsdPrim const &amp;prim, UsdImagingIndexProxy *index, UsdImagingInstancerContext const *instancerContext=nullptr)=0</argsstring>
        <name>Populate</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ac00a7b3d584fd24111a9a5d4b4bff2c1">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a2999f7fad7211a008c81619c8b297c6b">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plane_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_rod_light_filter_adapter_1a55fcd62b75c8e20d214d5f144bbe20d7">Populate</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_int_mult_light_filter_adapter_1a55fcd62b75c8e20d214d5f144bbe20d7">Populate</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_barn_light_filter_adapter_1a55fcd62b75c8e20d214d5f144bbe20d7">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_portal_light_adapter_1a2a195f8f351dbb09f0f918d9fad96d6e">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_filter_adapter_1a2a195f8f351dbb09f0f918d9fad96d6e">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_geometry_light_adapter_1a2a195f8f351dbb09f0f918d9fad96d6e">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_light_adapter_1a2a195f8f351dbb09f0f918d9fad96d6e">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_hermite_curves_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1ab57fde6ce3eaef441950e783580192a9">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_distant_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_disk_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_rect_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1a60b4cfb30757b55e578756374d9b07ad">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1ab0933984c27f73dc2275b3b36f745050">Populate</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1ab0933984c27f73dc2275b3b36f745050">Populate</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1ab0933984c27f73dc2275b3b36f745050">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1a7f0beaaab38105bbf7d73f5361319d74">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1aaabf5ce71660911040c3bb9efd533a96">Populate</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ac00a7b3d584fd24111a9a5d4b4bff2c1">Populate</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> const *</type>
          <declname>instancerContext</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Called to populate the RenderIndex for this <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>The adapter is expected to create one or more prims in the render index using the given proxy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ad040936f7afba2447770f49c7c6c28b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool ShouldCullChildren</definition>
        <argsstring>() const</argsstring>
        <name>ShouldCullChildren</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a48122c5fafba311add03b6ff90274fcd">ShouldCullChildren</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a3da6051b8628262e8e7dcaa5f1dd0550">ShouldCullChildren</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a48122c5fafba311add03b6ff90274fcd">ShouldCullChildren</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1af073155cf25e7e85112e10ea00bbcea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool ShouldIgnoreNativeInstanceSubtrees</definition>
        <argsstring>() const</argsstring>
        <name>ShouldIgnoreNativeInstanceSubtrees</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aea5091e52d06638c414072478efb1bf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool IsInstancerAdapter</definition>
        <argsstring>() const</argsstring>
        <name>IsInstancerAdapter</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ae57ecb128adf0388f4977a2555ed0ffa">IsInstancerAdapter</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ae57ecb128adf0388f4977a2555ed0ffa">IsInstancerAdapter</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a49e80ece601561d1e995eae94e08c2d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool CanPopulateUsdInstance</definition>
        <argsstring>() const</argsstring>
        <name>CanPopulateUsdInstance</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a3f92d6f2757c1464c9b6691654071108">CanPopulateUsdInstance</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a0c15fd7ac042f6c64570ad805bdd3922" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>static USDIMAGING_API bool ShouldCullSubtree</definition>
        <argsstring>(UsdPrim const &amp;prim)</argsstring>
        <name>ShouldCullSubtree</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="162" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parallel Setup and Resolve</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a564bb6d6d7410a6ddb531b84ed4acab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void TrackVariability</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, HdDirtyBits *timeVaryingBits, UsdImagingInstancerContext const *instancerContext=nullptr) const =0</argsstring>
        <name>TrackVariability</name>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1a56e932b8d6d862184df5333cd4681b6a">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1ac8d407486fcb304ddd13fcf07d01df8a">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_hermite_curves_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plane_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1ac8d407486fcb304ddd13fcf07d01df8a">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1adcc895d453b2f831bac168e5d56da210">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1adcc895d453b2f831bac168e5d56da210">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1ac8d407486fcb304ddd13fcf07d01df8a">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1a28352e8135f199c4a40b4ba1d0cb3b93">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1a28352e8135f199c4a40b4ba1d0cb3b93">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1a28352e8135f199c4a40b4ba1d0cb3b93">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1ac8d407486fcb304ddd13fcf07d01df8a">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1a51200fbc2c8ab1553bdfff84d5d16055">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1ac8d407486fcb304ddd13fcf07d01df8a">TrackVariability</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1adcc895d453b2f831bac168e5d56da210">TrackVariability</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>timeVaryingBits</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> const *</type>
          <declname>instancerContext</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>For the given <computeroutput>prim</computeroutput>, variability is detected and stored in <computeroutput>timeVaryingBits</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Initial values are cached into the value cache.</para>
<para>This method is expected to be called from multiple threads. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ab8a29444fdb073be8376f740382a292b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void UpdateForTime</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time, HdDirtyBits requestedBits, UsdImagingInstancerContext const *instancerContext=nullptr) const =0</argsstring>
        <name>UpdateForTime</name>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1a55e19bed01f00d6a0750b55b8bcbecb9">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1a8d2fb4dec45bc70adb1f379235940fba">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a8d2fb4dec45bc70adb1f379235940fba">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a81abe807121a4fa33867a79dc469c5c6">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1a81abe807121a4fa33867a79dc469c5c6">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a8d2fb4dec45bc70adb1f379235940fba">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1a8a5cf1fa559eb49db650753ac08a3502">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1a8a5cf1fa559eb49db650753ac08a3502">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1a8a5cf1fa559eb49db650753ac08a3502">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1a8d2fb4dec45bc70adb1f379235940fba">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1a13db6a77e6691cde81a4f129ab438970">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a81abe807121a4fa33867a79dc469c5c6">UpdateForTime</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a8d2fb4dec45bc70adb1f379235940fba">UpdateForTime</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>requestedBits</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> const *</type>
          <declname>instancerContext</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Populates the <computeroutput>cache</computeroutput> for the given <computeroutput>prim</computeroutput>, <computeroutput>time</computeroutput> and <computeroutput>requestedBits</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This method is expected to be called from multiple threads. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="231" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Change Processing</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a9d96a026e6d752efad10e7d56ba1ea97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdDirtyBits</type>
        <definition>virtual USDIMAGING_API HdDirtyBits ProcessPrimChange</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfTokenVector const &amp;changedFields)</argsstring>
        <name>ProcessPrimChange</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> const &amp;</type>
          <declname>changedFields</declname>
        </param>
        <briefdescription>
<para>Returns a bit mask of attributes to be updated, or HdChangeTracker::AllDirty if the entire prim must be resynchronized. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>changedFields</computeroutput> contains a list of changed scene description fields for this prim. This may be empty in certain cases, like the addition of an inert prim spec for the given <computeroutput>prim</computeroutput>.</para>
<para>The default implementation returns HdChangeTracker::AllDirty if any of the changed fields are plugin metadata fields, HdChangeTracker::Clean otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a032673f9da38a14ae35d8bbda16df9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HdDirtyBits</type>
        <definition>virtual HdDirtyBits ProcessPropertyChange</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;propertyName)=0</argsstring>
        <name>ProcessPropertyChange</name>
        <reimplementedby refid="class_usd_imaging_plane_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_hermite_curves_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1a8d0e1512d1b079122bf363fdbd42e470">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a6e88560112376f9f147a6bacde6aadbf">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a0b4a6287fcc5644d750195a1f70fa152">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a6d596e4e51cfba3e62dbecb034672813">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1a3f6d88973f301b7ffb6570269b0729de">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1a3f6d88973f301b7ffb6570269b0729de">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1a3f6d88973f301b7ffb6570269b0729de">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a6d596e4e51cfba3e62dbecb034672813">ProcessPropertyChange</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1abae20c4262e9c1d678a18779b61a3323">ProcessPropertyChange</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>propertyName</declname>
        </param>
        <briefdescription>
<para>Returns a bit mask of attributes to be updated, or HdChangeTracker::AllDirty if the entire prim must be resynchronized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a00e21d912fefbaad864599c7d92aaa0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void ProcessPrimResync</definition>
        <argsstring>(SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>ProcessPrimResync</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a7a9497b15df5d49ca712190029c28942">ProcessPrimResync</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a7ad92b96e500919268108636de99f22a">ProcessPrimResync</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a7ad92b96e500919268108636de99f22a">ProcessPrimResync</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a7a9497b15df5d49ca712190029c28942">ProcessPrimResync</reimplementedby>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>When a PrimResync event occurs, the prim may have been deleted entirely, adapter plug-ins should override this method to free any per-prim state that was accumulated in the adapter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a5d4629b8ec9799c383091adc5b58355f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void ProcessPrimRemoval</definition>
        <argsstring>(SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>ProcessPrimRemoval</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1aedebe9f6b973ec0595412cc2ff67effc">ProcessPrimRemoval</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ab82bf9ff9b978a420044c9fa754abca6">ProcessPrimRemoval</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ab82bf9ff9b978a420044c9fa754abca6">ProcessPrimRemoval</reimplementedby>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes all associated Rprims and dependencies from the render index without scheduling them for repopulation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a7a1f10e2d4e33fefdd519e29122fbbad" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void MarkDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, HdDirtyBits dirty, UsdImagingIndexProxy *index)=0</argsstring>
        <name>MarkDirty</name>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1a9cdfe15e0557f867bf64a6bc9a59f934">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a84b6f5474e1e65efa92ed3785d61cdf3">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a76126633edeb5c4c2410f621b42d6666">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1ada8c5e61fa278ec9262958957a60deee">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1ada8c5e61fa278ec9262958957a60deee">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1ada8c5e61fa278ec9262958957a60deee">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a4c5157b1bf35440dc261f14a22e14025">MarkDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a76126633edeb5c4c2410f621b42d6666">MarkDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>dirty</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aaf29cda887c2c78eac0de3009b45f732" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkRefineLevelDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkRefineLevelDirty</name>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a95916ba692f5f8f7e81e3d5aa9094dfe">MarkRefineLevelDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1aa6f35e8ba6ed501ab63269dc7d51819b">MarkRefineLevelDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1aa6f35e8ba6ed501ab63269dc7d51819b">MarkRefineLevelDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac3badad44051bfbe691511b0755e4993" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkReprDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkReprDirty</name>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1aec199d2339cd5c15b5dca75fc86db672">MarkReprDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ab33f3872d17b1fcb3ff1acede36fb1ec">MarkReprDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ab33f3872d17b1fcb3ff1acede36fb1ec">MarkReprDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="288" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a6dc902aab72315e6866b051ff730d572" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkCullStyleDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkCullStyleDirty</name>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1aebb843f9d22e17b6e541d7be22a8b578">MarkCullStyleDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a8bd707ddc7ffa48d75b4983bd1d46b20">MarkCullStyleDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a8bd707ddc7ffa48d75b4983bd1d46b20">MarkCullStyleDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a4c0720f4006fd3d5ee29f7049f936e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkRenderTagDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkRenderTagDirty</name>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1ab8d520e71f0ebf51e6dd054ed2b90a3d">MarkRenderTagDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ab64642b87f65a3af272f36b70fc09fd7">MarkRenderTagDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ab64642b87f65a3af272f36b70fc09fd7">MarkRenderTagDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a88bd811ca89b2b7da3ef723eef09212f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkTransformDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkTransformDirty</name>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1a533a36c6b7278745c4498e3b1a224dcc">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a533a36c6b7278745c4498e3b1a224dcc">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a533a36c6b7278745c4498e3b1a224dcc">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a533a36c6b7278745c4498e3b1a224dcc">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1ac576499e74a6e2ddef2ca81f54395c66">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1a533a36c6b7278745c4498e3b1a224dcc">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1aa7ce7e03cc2ecda18b5eb13f2942425e">MarkTransformDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1aa7ce7e03cc2ecda18b5eb13f2942425e">MarkTransformDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aab5388d7d7073516840f7ab70bf03439" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkVisibilityDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkVisibilityDirty</name>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1a23c0ed68a2e68b81fcfa7715d2e05c86">MarkVisibilityDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a23c0ed68a2e68b81fcfa7715d2e05c86">MarkVisibilityDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a23c0ed68a2e68b81fcfa7715d2e05c86">MarkVisibilityDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a23c0ed68a2e68b81fcfa7715d2e05c86">MarkVisibilityDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a97af0af6fe122d3604b6fdac4e630184">MarkVisibilityDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1acf03e2e02997b547b63805b83dc47330">MarkVisibilityDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1acf03e2e02997b547b63805b83dc47330">MarkVisibilityDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1acaed74cb6f80f49bab0a64af6c19dbac" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkMaterialDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkMaterialDirty</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a5b743df91122f2a18d0f9a2f2519ec42">MarkMaterialDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a15ccba008492031a968435c23b54fe12">MarkMaterialDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a5b743df91122f2a18d0f9a2f2519ec42">MarkMaterialDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a7fcc3bc9e33cf6ed87113a26aff381a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkLightParamsDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkLightParamsDirty</name>
        <reimplementedby refid="class_usd_imaging_light_adapter_1ac86be7cea5f75d81149c038d5dc62cba">MarkLightParamsDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a52d2bbb7a676b30a40daaf27453dcaab">MarkLightParamsDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aa843c9a1a329aa7bfe6b8390c9149631" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkWindowPolicyDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkWindowPolicyDirty</name>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1a978f72cc4974711a4ad5bb5080f511d5">MarkWindowPolicyDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="323" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aded37fdba6a4f9b10f6dabb147c65e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void MarkCollectionsDirty</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)</argsstring>
        <name>MarkCollectionsDirty</name>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a31d105e91d29194e1af015e3c0238fe3">MarkCollectionsDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a31d105e91d29194e1af015e3c0238fe3">MarkCollectionsDirty</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a16c24df4ee13f1044d5ea7bbc7881ad6">MarkCollectionsDirty</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="328" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Computations</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a10c5e1d377c4f2e82f2c7bc1de56947b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API void</type>
        <definition>virtual USDIMAGING_API void InvokeComputation</definition>
        <argsstring>(SdfPath const &amp;cachePath, HdExtComputationContext *context)</argsstring>
        <name>InvokeComputation</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_hd_ext_computation_context" kindref="compound">HdExtComputationContext</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="336" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Instancing</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a0fa5f7c6b0c0928b0881f68227e13659" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API std::vector&lt; <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; &gt;</type>
        <definition>virtual USDIMAGING_API std::vector&lt;VtArray&lt;TfToken&gt; &gt; GetInstanceCategories</definition>
        <argsstring>(UsdPrim const &amp;prim)</argsstring>
        <name>GetInstanceCategories</name>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a472ae1d6a94b40463e9c17ad394b6612">GetInstanceCategories</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Return an array of the categories used by each instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a55fd9868660b92f4f47f68d7c6843888" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>virtual USDIMAGING_API GfMatrix4d GetInstancerTransform</definition>
        <argsstring>(UsdPrim const &amp;instancerPrim, SdfPath const &amp;instancerPath, UsdTimeCode time) const</argsstring>
        <name>GetInstancerTransform</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ad025c4dfca7328b5a2ea8715ccd9b0fd">GetInstancerTransform</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ad025c4dfca7328b5a2ea8715ccd9b0fd">GetInstancerTransform</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>instancerPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerPath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Get the instancer transform for the given prim. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_hd_scene_delegate_1a5aab8b5764cea69054ec3299899a87c0" kindref="member">HdSceneDelegate::GetInstancerTransform()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac6327a595c00ab00b7a7769230c190a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API size_t</type>
        <definition>virtual USDIMAGING_API size_t SampleInstancerTransform</definition>
        <argsstring>(UsdPrim const &amp;instancerPrim, SdfPath const &amp;instancerPath, UsdTimeCode time, size_t maxNumSamples, float *sampleTimes, GfMatrix4d *sampleValues)</argsstring>
        <name>SampleInstancerTransform</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a58f314c30f96fd682afeafa742f4d8f5">SampleInstancerTransform</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1aef10e570398e5715df1aee403893c710">SampleInstancerTransform</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>instancerPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerPath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxNumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sampleTimes</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>sampleValues</declname>
        </param>
        <briefdescription>
<para>Sample the instancer transform for the given prim. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_hd_scene_delegate_1ab1498ca73626e7be29ddc569f0275139" kindref="member">HdSceneDelegate::SampleInstancerTransform()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ad3ef49ded4b9ace510159215eb86b18d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>virtual USDIMAGING_API SdfPath GetInstancerId</definition>
        <argsstring>(UsdPrim const &amp;usdPrim, SdfPath const &amp;cachePath) const</argsstring>
        <name>GetInstancerId</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a5eaea042c619f43c1d4c9820d89a7655">GetInstancerId</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a5eaea042c619f43c1d4c9820d89a7655">GetInstancerId</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>usdPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <briefdescription>
<para>Return the instancerId for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a53f5a6c348355d522433952567f5a08b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API SdfPathVector</type>
        <definition>virtual USDIMAGING_API SdfPathVector GetInstancerPrototypes</definition>
        <argsstring>(UsdPrim const &amp;usdPrim, SdfPath const &amp;cachePath) const</argsstring>
        <name>GetInstancerPrototypes</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1af0b5cfc2ea17352badc26a9662035454">GetInstancerPrototypes</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1af0b5cfc2ea17352badc26a9662035454">GetInstancerPrototypes</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>usdPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <briefdescription>
<para>Return the list of known prototypes of this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a1a8cf9a322dd77daae259e9b341532f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API size_t</type>
        <definition>virtual USDIMAGING_API size_t SamplePrimvar</definition>
        <argsstring>(UsdPrim const &amp;usdPrim, SdfPath const &amp;cachePath, TfToken const &amp;key, UsdTimeCode time, size_t maxNumSamples, float *sampleTimes, VtValue *sampleValues, VtIntArray *sampleIndices)</argsstring>
        <name>SamplePrimvar</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a35d67df1f59204464b0249f4241bae59">SamplePrimvar</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a35d67df1f59204464b0249f4241bae59">SamplePrimvar</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>usdPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxNumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sampleTimes</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>sampleValues</declname>
        </param>
        <param>
          <type>VtIntArray *</type>
          <declname>sampleIndices</declname>
        </param>
        <briefdescription>
<para>Sample the primvar for the given prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If *sampleIndices is not nullptr and the primvar has indices, it will sample the unflattened primvar and set *sampleIndices to the primvar&apos;s sampled indices. <simplesect kind="see"><para><ref refid="class_hd_scene_delegate_1a487bdb0dc9804e6e42d3e0e7262bb592" kindref="member">HdSceneDelegate::SamplePrimvar()</ref> and <ref refid="class_hd_scene_delegate_1a0664f6c5132d8c113383e4f7bdc2eb7e" kindref="member">HdSceneDelegate::SampleIndexedPrimvar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aba8d3e6328aba30da93752716429e171" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref></type>
        <definition>virtual USDIMAGING_API PxOsdSubdivTags GetSubdivTags</definition>
        <argsstring>(UsdPrim const &amp;usdPrim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetSubdivTags</name>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1ab471c5075a2df5f868de06d5ab90f3cc">GetSubdivTags</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a1d3109b5952413cfea55b41f358786e7">GetSubdivTags</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a1d3109b5952413cfea55b41f358786e7">GetSubdivTags</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>usdPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Get the subdiv tags for this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="397" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Nested instancing support</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a17e78ca5666d58cf15318316cc337200" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>virtual USDIMAGING_API GfMatrix4d GetRelativeInstancerTransform</definition>
        <argsstring>(SdfPath const &amp;instancerPath, SdfPath const &amp;protoInstancerPath, UsdTimeCode time) const</argsstring>
        <name>GetRelativeInstancerTransform</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a8d2756ad1b8045302c2295234e9a9a21">GetRelativeInstancerTransform</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a169b808932015b23a12b74cfcbcba72f">GetRelativeInstancerTransform</reimplementedby>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerPath</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>protoInstancerPath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Returns the transform of <computeroutput>protoInstancerPath</computeroutput> relative to <computeroutput>instancerPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>instancerPath</computeroutput> must be managed by this adapter. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="412" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Selection</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1afe88b2303da555cb22d4bcb94ea72333" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>virtual USDIMAGING_API SdfPath GetScenePrimPath</definition>
        <argsstring>(SdfPath const &amp;cachePath, int instanceIndex, HdInstancerContext *instancerCtx) const</argsstring>
        <name>GetScenePrimPath</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ae60bad8e351dcf22e6b0cd438f1e2051">GetScenePrimPath</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ae60bad8e351dcf22e6b0cd438f1e2051">GetScenePrimPath</reimplementedby>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>instanceIndex</declname>
        </param>
        <param>
          <type>HdInstancerContext *</type>
          <declname>instancerCtx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000147"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Call and implement GetScenePrimPaths instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="423" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ae7efe8724b8f44578192f7708a8eeaf2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API SdfPathVector</type>
        <definition>virtual USDIMAGING_API SdfPathVector GetScenePrimPaths</definition>
        <argsstring>(SdfPath const &amp;cachePath, std::vector&lt; int &gt; const &amp;instanceIndices, std::vector&lt; HdInstancerContext &gt; *instancerCtxs) const</argsstring>
        <name>GetScenePrimPaths</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ad4ad7653bfdc1de9c92f8867e8e5320d">GetScenePrimPaths</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ad4ad7653bfdc1de9c92f8867e8e5320d">GetScenePrimPaths</reimplementedby>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>std::vector&lt; int &gt; const &amp;</type>
          <declname>instanceIndices</declname>
        </param>
        <param>
          <type>std::vector&lt; HdInstancerContext &gt; *</type>
          <declname>instancerCtxs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a64d3d2d6f49ba3cdda8f7b224527b2f3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool PopulateSelection</definition>
        <argsstring>(HdSelection::HighlightMode const &amp;highlightMode, SdfPath const &amp;cachePath, UsdPrim const &amp;usdPrim, int const hydraInstanceIndex, VtIntArray const &amp;parentInstanceIndices, HdSelectionSharedPtr const &amp;result) const</argsstring>
        <name>PopulateSelection</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a766b5c7fc1015b62eac45cb1f921591c">PopulateSelection</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a766b5c7fc1015b62eac45cb1f921591c">PopulateSelection</reimplementedby>
        <param>
          <type><ref refid="class_hd_selection_1a98fbf004fcd9b83c51b34f506ed59a7e" kindref="member">HdSelection::HighlightMode</ref> const &amp;</type>
          <declname>highlightMode</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>usdPrim</declname>
        </param>
        <param>
          <type>int const</type>
          <declname>hydraInstanceIndex</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>parentInstanceIndices</declname>
        </param>
        <param>
          <type>HdSelectionSharedPtr const &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="458" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Volume field information</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ad82a481b63f24cfbd7a3e5243ae24d2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdVolumeFieldDescriptorVector</type>
        <definition>virtual USDIMAGING_API HdVolumeFieldDescriptorVector GetVolumeFieldDescriptors</definition>
        <argsstring>(UsdPrim const &amp;usdPrim, SdfPath const &amp;id, UsdTimeCode time) const</argsstring>
        <name>GetVolumeFieldDescriptors</name>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1ab5319a6aaa024c7879484d1fa2f49834">GetVolumeFieldDescriptors</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ab5319a6aaa024c7879484d1fa2f49834">GetVolumeFieldDescriptors</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ab5319a6aaa024c7879484d1fa2f49834">GetVolumeFieldDescriptors</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>usdPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="472" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Light Params</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a02ce9a5aa4feb6412e586f0e2168ec02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual USDIMAGING_API VtValue GetLightParamValue</definition>
        <argsstring>(const UsdPrim &amp;prim, const SdfPath &amp;cachePath, const TfToken &amp;paramName, UsdTimeCode time) const</argsstring>
        <name>GetLightParamValue</name>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1ad6ac9c37afacd1fb8009a7e298fbbe2b">GetLightParamValue</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a8533ec0ab785fd91a10983c5d2c2218d">GetLightParamValue</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a8533ec0ab785fd91a10983c5d2c2218d">GetLightParamValue</reimplementedby>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>paramName</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="481" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utilities</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aa99d4b06c897e99845f200b1f5221d74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>USDIMAGING_API GfMatrix4d GetRootTransform</definition>
        <argsstring>() const</argsstring>
        <name>GetRootTransform</name>
        <briefdescription>
<para>The root transform provided by the delegate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a0a99170a4c02337f67756e421333445e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API void</type>
        <definition>USDIMAGING_API void SetDelegate</definition>
        <argsstring>(UsdImagingDelegate *delegate)</argsstring>
        <name>SetDelegate</name>
        <param>
          <type><ref refid="class_usd_imaging_delegate" kindref="compound">UsdImagingDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <briefdescription>
<para>A thread-local XformCache provided by the delegate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="497" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a25c765b37e08f2a3b69bd991e78f70d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool IsChildPath</definition>
        <argsstring>(SdfPath const &amp;path) const</argsstring>
        <name>IsChildPath</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a877656d784ee6ce523e213f1b5ec2cfb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool GetVisible</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetVisible</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a3641720281d94d4dc1a918db6a8ed409">GetVisible</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a44e11f0758876f080701ee556582b119">GetVisible</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Returns true if the given prim is visible, taking into account inherited visibility values. </para>
        </briefdescription>
        <detaileddescription>
<para>Inherited values are strongest, Usd has no notion of &quot;super vis/invis&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aab0ac7f12f08a58b9ddcdfbcd17052ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>virtual USDIMAGING_API TfToken GetPurpose</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;instanceInheritablePurpose) const</argsstring>
        <name>GetPurpose</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a872ff5f5c60036dc01ea88ed26057cd2">GetPurpose</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a872ff5f5c60036dc01ea88ed26057cd2">GetPurpose</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>instanceInheritablePurpose</declname>
        </param>
        <briefdescription>
<para>Returns the purpose token for <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If a non-empty <computeroutput>instanceInheritablePurpose</computeroutput> is specified and the prim doesn&apos;t have an explicitly authored or inherited purpose, it may inherit the instancer&apos;s purpose if the instance has an explicit purpose. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a5a5dfa57577eb2b2098eeaba659c6791" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDIMAGING_API TfToken GetInheritablePurpose</definition>
        <argsstring>(UsdPrim const &amp;prim) const</argsstring>
        <name>GetInheritablePurpose</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Returns the purpose token for <computeroutput>prim</computeroutput>, but only if it is inheritable by child prims (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>it is an explicitly authored purpose on the prim itself or one of the prim&apos;s ancestors), otherwise it returns the empty token. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a03804796b195bbea3a0c6ad6bc0c2360" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>virtual USDIMAGING_API GfMatrix4d GetTransform</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time, bool ignoreRootTransform=false) const</argsstring>
        <name>GetTransform</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1af315e7cce8eb6863d58364cccfe91112">GetTransform</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1aed6f8d990a3addf199a6c161821bd1bc">GetTransform</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1aed6f8d990a3addf199a6c161821bd1bc">GetTransform</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoreRootTransform</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Fetches the transform for the given prim at the given time from a pre-computed cache of prim transforms. </para>
        </briefdescription>
        <detaileddescription>
<para>Requesting transforms at incoherent times is currently inefficient. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a32a6d8299c04a2faed8a3b738d97571f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API size_t</type>
        <definition>virtual USDIMAGING_API size_t SampleTransform</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time, size_t maxNumSamples, float *sampleTimes, GfMatrix4d *sampleValues)</argsstring>
        <name>SampleTransform</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a9ec40e9e548998240045149472803fc4">SampleTransform</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a9ec40e9e548998240045149472803fc4">SampleTransform</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxNumSamples</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sampleTimes</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>sampleValues</declname>
        </param>
        <briefdescription>
<para>Samples the transform for the given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="539" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a027f6f1384b2dad97d3ecb09d77722d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual USDIMAGING_API VtValue Get</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;key, UsdTimeCode time, VtIntArray *outIndices) const</argsstring>
        <name>Get</name>
        <reimplementedby refid="class_usd_imaging_open_v_d_b_asset_adapter_1ade7639de00d808b2f1e491e7130e3886">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field3_d_asset_adapter_1ade7639de00d808b2f1e491e7130e3886">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1a5de6ea53dbea04f91f0c264b11dc2a62">Get</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1a5de6ea53dbea04f91f0c264b11dc2a62">Get</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1a5de6ea53dbea04f91f0c264b11dc2a62">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1ae0800d51fef78a8872b8b47614c8e7ea">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1aa4e361794eab684b95e6f4302d5a7375">Get</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1aa4e361794eab684b95e6f4302d5a7375">Get</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>VtIntArray *</type>
          <declname>outIndices</declname>
        </param>
        <briefdescription>
<para>Gets the value of the parameter named key for the given prim (which has the given cache path) and given time. </para>
        </briefdescription>
        <detaileddescription>
<para>If outIndices is not nullptr and the value has indices, it will return the unflattened value and set outIndices to the value&apos;s associated indices. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a0508903536e217a3bc4e7a1a5aa4bd6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdCullStyle</type>
        <definition>virtual USDIMAGING_API HdCullStyle GetCullStyle</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetCullStyle</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a8a7ea2df366f19249462a299d9042467">GetCullStyle</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a4cbb2c6ca72466c432b42ee037ea3878">GetCullStyle</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a4cbb2c6ca72466c432b42ee037ea3878">GetCullStyle</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Gets the cullstyle of a specific path in the scene graph. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="559" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a010e0778482a42b42ba165166efabc84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>USDIMAGING_API SdfPath GetMaterialUsdPath</definition>
        <argsstring>(UsdPrim const &amp;prim) const</argsstring>
        <name>GetMaterialUsdPath</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Gets the material path for the given prim, walking up namespace if necessary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="566" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac9e7c449efbe05d779fd800879f5bc6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDIMAGING_API TfToken GetModelDrawMode</definition>
        <argsstring>(UsdPrim const &amp;prim)</argsstring>
        <name>GetModelDrawMode</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Gets the model:drawMode attribute for the given prim, walking up the namespace if necessary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a0a25f3037820bfb13128772e75a53398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="struct_hd_model_draw_mode" kindref="compound">HdModelDrawMode</ref></type>
        <definition>USDIMAGING_API HdModelDrawMode GetFullModelDrawMode</definition>
        <argsstring>(UsdPrim const &amp;prim)</argsstring>
        <name>GetFullModelDrawMode</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Gets the model draw mode object for the given prim, walking up the namespace if necessary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a4db7b2d4a6c25e03a8c01b9e8bbde42e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; VtIntArray &gt;</type>
        <definition>USDIMAGING_API VtArray&lt;VtIntArray&gt; GetPerPrototypeIndices</definition>
        <argsstring>(UsdPrim const &amp;prim, UsdTimeCode time) const</argsstring>
        <name>GetPerPrototypeIndices</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Computes the per-prototype instance indices for a <ref refid="class_usd_geom_point_instancer" kindref="compound">UsdGeomPointInstancer</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>XXX: This needs to be defined on the base class, to have access to the delegate, but it&apos;s a clear violation of abstraction. This call is only legal for prims of type <ref refid="class_usd_geom_point_instancer" kindref="compound">UsdGeomPointInstancer</ref>; in other cases, the returned array will be empty and the computation will issue errors. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a9f4cb1953174726c7783f94d604574d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual USDIMAGING_API VtValue GetTopology</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetTopology</name>
        <reimplementedby refid="class_usd_imaging_plane_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_hermite_curves_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a79542addf653d4d9578958f6808cb028">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ab6953d8bc3583677afcc79f23a82b287">GetTopology</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ab6953d8bc3583677afcc79f23a82b287">GetTopology</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Gets the topology object of a specific Usd prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If the adapter is a mesh it will return an <ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref>, if it is of type basis curves, it will return an <ref refid="class_hd_basis_curves_topology" kindref="compound">HdBasisCurvesTopology</ref>. If the adapter does not have a topology, it returns an empty <ref refid="class_vt_value" kindref="compound">VtValue</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ab030573ca777994e9d3494b2a0a22d19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref></type>
        <definition>virtual USDIMAGING_API GfRange3d GetExtent</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetExtent</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a35e5235d8bcb305a6922e83462d62fe5">GetExtent</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a35e5235d8bcb305a6922e83462d62fe5">GetExtent</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a220adabe0a9afe20e879f16da86de8ad">GetExtent</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a220adabe0a9afe20e879f16da86de8ad">GetExtent</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Reads the extent from the given prim. </para>
        </briefdescription>
        <detaileddescription>
<para>If the extent is not authored, an empty <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> is returned, the extent will not be computed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1add2f0a29b507bb61258c6880b09d0ace" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API bool</type>
        <definition>virtual USDIMAGING_API bool GetDoubleSided</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetDoubleSided</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a705343d079385a004bb4b6d4714f819c">GetDoubleSided</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1a705343d079385a004bb4b6d4714f819c">GetDoubleSided</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a0d3f5ca3b13877b0dfbe1333d2de1241">GetDoubleSided</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a15f47cf531923be913dea6875ad0a83e">GetDoubleSided</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Reads double-sided from the given prim. If not authored, returns false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ad6db080e66e56d11a4fda944cd094876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>virtual USDIMAGING_API SdfPath GetMaterialId</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetMaterialId</name>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1ae9c252cb3717b01d8841d651744660bc">GetMaterialId</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1ae9c252cb3717b01d8841d651744660bc">GetMaterialId</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a7e3bdd61171532cc3833acf810bff7db">GetMaterialId</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a7e3bdd61171532cc3833acf810bff7db">GetMaterialId</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a287e074e3fc5afba11c21c71e32280a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual USDIMAGING_API VtValue GetMaterialResource</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, UsdTimeCode time) const</argsstring>
        <name>GetMaterialResource</name>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1a26d74c9ffb4aa47e75a79e12f05e2d61">GetMaterialResource</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a26d74c9ffb4aa47e75a79e12f05e2d61">GetMaterialResource</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a26d74c9ffb4aa47e75a79e12f05e2d61">GetMaterialResource</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a26d74c9ffb4aa47e75a79e12f05e2d61">GetMaterialResource</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1af90c3ed54e7ab8d6d63bdc1d8723c391">GetMaterialResource</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1af90c3ed54e7ab8d6d63bdc1d8723c391">GetMaterialResource</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="615" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>ExtComputations</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1afd979399c4fba8f6ef13cd29cb9772d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>virtual USDIMAGING_API const TfTokenVector&amp; GetExtComputationSceneInputNames</definition>
        <argsstring>(SdfPath const &amp;cachePath) const</argsstring>
        <name>GetExtComputationSceneInputNames</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a7887a2a631e90852e31119192a251e43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdExtComputationInputDescriptorVector</type>
        <definition>virtual USDIMAGING_API HdExtComputationInputDescriptorVector GetExtComputationInputs</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, const UsdImagingInstancerContext *instancerContext) const</argsstring>
        <name>GetExtComputationInputs</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a89bfd745fc83281d5d0aa86b3e705e71">GetExtComputationInputs</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a89bfd745fc83281d5d0aa86b3e705e71">GetExtComputationInputs</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> *</type>
          <declname>instancerContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a09b590cd10756109c787c30629a04001" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdExtComputationOutputDescriptorVector</type>
        <definition>virtual USDIMAGING_API HdExtComputationOutputDescriptorVector GetExtComputationOutputs</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, const UsdImagingInstancerContext *instancerContext) const</argsstring>
        <name>GetExtComputationOutputs</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a6c5f913a5dbc1dffa62d3bddc1bbc57a">GetExtComputationOutputs</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a6c5f913a5dbc1dffa62d3bddc1bbc57a">GetExtComputationOutputs</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> *</type>
          <declname>instancerContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a0fd121398cba7fe07b09fcbe26becadb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API HdExtComputationPrimvarDescriptorVector</type>
        <definition>virtual USDIMAGING_API HdExtComputationPrimvarDescriptorVector GetExtComputationPrimvars</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, HdInterpolation interpolation, const UsdImagingInstancerContext *instancerContext) const</argsstring>
        <name>GetExtComputationPrimvars</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ae84dbd510d992edb3f2463539be3d0f2">GetExtComputationPrimvars</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ae84dbd510d992edb3f2463539be3d0f2">GetExtComputationPrimvars</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> *</type>
          <declname>instancerContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="642" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aeec2cbd8f3454a6af348ffab21693d8c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual USDIMAGING_API VtValue GetExtComputationInput</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;name, UsdTimeCode time, const UsdImagingInstancerContext *instancerContext) const</argsstring>
        <name>GetExtComputationInput</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1ad6c2c55aca084d325bd52f92a95414e2">GetExtComputationInput</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1ad6c2c55aca084d325bd52f92a95414e2">GetExtComputationInput</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> *</type>
          <declname>instancerContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="650" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a1900bbbbb7697bf97616311e7adf489f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API size_t</type>
        <definition>virtual USDIMAGING_API size_t SampleExtComputationInput</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;name, UsdTimeCode time, const UsdImagingInstancerContext *instancerContext, size_t maxSampleCount, float *sampleTimes, VtValue *sampleValues)</argsstring>
        <name>SampleExtComputationInput</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> *</type>
          <declname>instancerContext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxSampleCount</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>sampleTimes</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>sampleValues</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="659" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1acaafa264485326b418baa4cf7d673b84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API std::string</type>
        <definition>virtual USDIMAGING_API std::string GetExtComputationKernel</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, const UsdImagingInstancerContext *instancerContext) const</argsstring>
        <name>GetExtComputationKernel</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a2b0adc1187f2d54a953b74363816ab52">GetExtComputationKernel</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a2b0adc1187f2d54a953b74363816ab52">GetExtComputationKernel</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_instancer_context" kindref="compound">UsdImagingInstancerContext</ref> *</type>
          <declname>instancerContext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ae4a1289b2c77df83b10d93c79dfd0098" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual USDIMAGING_API VtValue GetInstanceIndices</definition>
        <argsstring>(UsdPrim const &amp;instancerPrim, SdfPath const &amp;instancerCachePath, SdfPath const &amp;prototypeCachePath, UsdTimeCode time) const</argsstring>
        <name>GetInstanceIndices</name>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1a21403349c6066e6479d5ca3cb5ef567b">GetInstanceIndices</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1a21403349c6066e6479d5ca3cb5ef567b">GetInstanceIndices</reimplementedby>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>instancerPrim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerCachePath</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>prototypeCachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="678" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Render Index Compatibility</header>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aaf7a4e61284ae49548aba3d401ee7959" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool IsSupported</definition>
        <argsstring>(UsdImagingIndexProxy const *index) const</argsstring>
        <name>IsSupported</name>
        <reimplementedby refid="class_usd_ri_pxr_imaging_rod_light_filter_adapter_1a850dd6e24ae08f06018997a6c035e711">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_int_mult_light_filter_adapter_1a850dd6e24ae08f06018997a6c035e711">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_barn_light_filter_adapter_1a850dd6e24ae08f06018997a6c035e711">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_portal_light_adapter_1a176c265bdd7917db0ba47a916d06d135">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_filter_adapter_1a176c265bdd7917db0ba47a916d06d135">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plane_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_geometry_light_adapter_1a176c265bdd7917db0ba47a916d06d135">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_light_adapter_1a176c265bdd7917db0ba47a916d06d135">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_hermite_curves_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1aad6dcee6db56006032c55bb6e0e6e4d7">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_rect_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_distant_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_disk_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_volume_adapter_1a20c218b2bc9f1db09fcbc9ea28bfccd1">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1a1361aa4085c01953dd584d782b96ea76">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1a1361aa4085c01953dd584d782b96ea76">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1a1361aa4085c01953dd584d782b96ea76">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_patch_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_points_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_nurbs_curves_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_basis_curves_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cube_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_mesh_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cone_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_capsule_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1aa1a8ff544dc6d85dadaad5d002943dda">IsSupported</reimplementedby>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> const *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns true if the adapter can be populated into the target index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="688" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="688" bodyend="690"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utilties</header>
      <memberdef kind="typedef" id="class_usd_imaging_prim_adapter_1a27b7ddad94c5cbf034f76019217d6b7b" prot="protected" static="no">
        <type>UsdImagingPrimvarDescCache::Key</type>
        <definition>using Keys =  UsdImagingPrimvarDescCache::Key</definition>
        <argsstring></argsstring>
        <name>Keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="704" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_prim_adapter_1a361803277d587114ba55b3b3d65c8922" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_imaging_delegate" kindref="compound">UsdImagingDelegate</ref> *</type>
        <definition>UsdImagingDelegate* _delegate</definition>
        <argsstring></argsstring>
        <name>_delegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="929" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="929" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aab6eddbe0eda35428bc78128ff40cc02" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>static USDIMAGING_API UsdAttribute LookupLightParamAttribute</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;paramName)</argsstring>
        <name>LookupLightParamAttribute</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
<para>Provides to paramName-&gt;<ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> value mappings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a85e468fc9b3e3be2022693f05c1c14a5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T _Get</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;attrToken, UsdTimeCode time) const</argsstring>
        <name>_Get</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>attrToken</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="707" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="707" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a542974a9ca4f49b5c19ff19b21169c97" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void _GetPtr</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;key, UsdTimeCode time, T *out) const</argsstring>
        <name>_GetPtr</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="715" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="715" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a43f3131277ab8b4fc36d3c1cacbad7dc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_usd_imaging_primvar_desc_cache" kindref="compound">UsdImagingPrimvarDescCache</ref> *</type>
        <definition>USDIMAGING_API UsdImagingPrimvarDescCache* _GetPrimvarDescCache</definition>
        <argsstring>() const</argsstring>
        <name>_GetPrimvarDescCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="721" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a48011ca4f223cae29c3d57f7b8fb770a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>UsdImaging_NonlinearSampleCountCache *</type>
        <definition>UsdImaging_NonlinearSampleCountCache* _GetNonlinearSampleCountCache</definition>
        <argsstring>() const</argsstring>
        <name>_GetNonlinearSampleCountCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a4a6dc0e184f3440bbb259fdc3bd0eff4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>UsdImaging_BlurScaleCache *</type>
        <definition>UsdImaging_BlurScaleCache* _GetBlurScaleCache</definition>
        <argsstring>() const</argsstring>
        <name>_GetBlurScaleCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aa68e47438cb74938a29953400a17338a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>USDIMAGING_API UsdPrim _GetPrim</definition>
        <argsstring>(SdfPath const &amp;usdPath) const</argsstring>
        <name>_GetPrim</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>usdPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="730" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ae2e4abe6a7402aa004567519eefb8d33" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API const UsdImagingPrimAdapterSharedPtr &amp;</type>
        <definition>USDIMAGING_API const UsdImagingPrimAdapterSharedPtr&amp; _GetPrimAdapter</definition>
        <argsstring>(UsdPrim const &amp;prim, bool ignoreInstancing=false) const</argsstring>
        <name>_GetPrimAdapter</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoreInstancing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="738" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac5dbdbd13022f791e2e4cfe70d13ed17" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API const UsdImagingPrimAdapterSharedPtr &amp;</type>
        <definition>USDIMAGING_API const UsdImagingPrimAdapterSharedPtr&amp; _GetAdapter</definition>
        <argsstring>(TfToken const &amp;adapterKey) const</argsstring>
        <name>_GetAdapter</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>adapterKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="742" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aa7123e837e8f6eea4640e40424c0c84c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>USDIMAGING_API SdfPath _GetPrimPathFromInstancerChain</definition>
        <argsstring>(SdfPathVector const &amp;instancerChain) const</argsstring>
        <name>_GetPrimPathFromInstancerChain</name>
        <param>
          <type>SdfPathVector const &amp;</type>
          <declname>instancerChain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="751" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a2825aa3fa72d5bd449e410402ad50135" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
        <definition>USDIMAGING_API UsdTimeCode _GetTimeWithOffset</definition>
        <argsstring>(float offset) const</argsstring>
        <name>_GetTimeWithOffset</name>
        <param>
          <type>float</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="755" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a2de0e5cdcc41dbb9238933b82e2696ad" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>USDIMAGING_API SdfPath _ConvertCachePathToIndexPath</definition>
        <argsstring>(SdfPath const &amp;cachePath) const</argsstring>
        <name>_ConvertCachePathToIndexPath</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="759" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a15ea1d11cbaf4a977a455dcd26a608ab" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>USDIMAGING_API SdfPath _ConvertIndexPathToCachePath</definition>
        <argsstring>(SdfPath const &amp;indexPath) const</argsstring>
        <name>_ConvertIndexPathToCachePath</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>indexPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="763" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a83eece817ea0079ea7dcc20f7db351a2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDIMAGING_API TfToken _GetMaterialBindingPurpose</definition>
        <argsstring>() const</argsstring>
        <name>_GetMaterialBindingPurpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="767" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a32f3e8c45035ceca12ac6bee61f94a83" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USDIMAGING_API TfTokenVector _GetMaterialRenderContexts</definition>
        <argsstring>() const</argsstring>
        <name>_GetMaterialRenderContexts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="771" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a7c459b18bede439f52ba5438760b1533" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USDIMAGING_API TfTokenVector _GetRenderSettingsNamespaces</definition>
        <argsstring>() const</argsstring>
        <name>_GetRenderSettingsNamespaces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="776" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ae0e8c8231d7bdf1104e0da2c97613bba" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _GetSceneMaterialsEnabled</definition>
        <argsstring>() const</argsstring>
        <name>_GetSceneMaterialsEnabled</name>
        <briefdescription>
<para>Returns whether custom shading of prims is enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="780" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac8519b98a3c896a54ab4cfe1a7752ed1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _GetSceneLightsEnabled</definition>
        <argsstring>() const</argsstring>
        <name>_GetSceneLightsEnabled</name>
        <briefdescription>
<para>Returns whether lights found in the usdscene are enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a7a2c563d8c6cfa3915c823aeaff218a2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _IsPrimvarFilteringNeeded</definition>
        <argsstring>() const</argsstring>
        <name>_IsPrimvarFilteringNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aa687978f45ad0c4229a7f86267e4c44d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USDIMAGING_API TfTokenVector _GetShaderSourceTypes</definition>
        <argsstring>() const</argsstring>
        <name>_GetShaderSourceTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="793" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a586ff49ca9dfe35016879b147debcc30" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _IsInInvisedPaths</definition>
        <argsstring>(SdfPath const &amp;usdPath) const</argsstring>
        <name>_IsInInvisedPaths</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>usdPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a80079dbd18b49e2870b93f2d78e8cf52" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _IsVarying</definition>
        <argsstring>(UsdPrim prim, TfToken const &amp;attrName, HdDirtyBits dirtyFlag, TfToken const &amp;perfToken, HdDirtyBits *dirtyFlags, bool isInherited, bool *exists=nullptr) const</argsstring>
        <name>_IsVarying</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>dirtyFlag</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>perfToken</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyFlags</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isInherited</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>exists</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a958f1a296ddaf054bd82a56b2ad53856" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _IsTransformVarying</definition>
        <argsstring>(UsdPrim prim, HdDirtyBits dirtyFlag, TfToken const &amp;perfToken, HdDirtyBits *dirtyFlags) const</argsstring>
        <name>_IsTransformVarying</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
          <declname>prim</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>dirtyFlag</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>perfToken</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="822" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a9df1d3d6df8daf3273562b695a1ca163" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API void</type>
        <definition>USDIMAGING_API void _MergePrimvar</definition>
        <argsstring>(HdPrimvarDescriptorVector *vec, TfToken const &amp;name, HdInterpolation interp, TfToken const &amp;role=TfToken(), bool indexed=false) const</argsstring>
        <name>_MergePrimvar</name>
        <param>
          <type>HdPrimvarDescriptorVector *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>interp</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>role</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>indexed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="830" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a538e24c3cbcf79a976246260e73114ac" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API void</type>
        <definition>USDIMAGING_API void _RemovePrimvar</definition>
        <argsstring>(HdPrimvarDescriptorVector *vec, TfToken const &amp;name) const</argsstring>
        <name>_RemovePrimvar</name>
        <param>
          <type>HdPrimvarDescriptorVector *</type>
          <declname>vec</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="839" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a3acd62abeb5877876c6fb3187bb5b768" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API void</type>
        <definition>USDIMAGING_API void _ComputeAndMergePrimvar</definition>
        <argsstring>(UsdPrim const &amp;prim, UsdGeomPrimvar const &amp;primvar, UsdTimeCode time, HdPrimvarDescriptorVector *primvarDescs, HdInterpolation *interpOverride=nullptr) const</argsstring>
        <name>_ComputeAndMergePrimvar</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref> const &amp;</type>
          <declname>primvar</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>HdPrimvarDescriptorVector *</type>
          <declname>primvarDescs</declname>
        </param>
        <param>
          <type>HdInterpolation *</type>
          <declname>interpOverride</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="848" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ab3bfd2ee8af3862060a225e884e5636d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API HdDirtyBits</type>
        <definition>USDIMAGING_API HdDirtyBits _ProcessNonPrefixedPrimvarPropertyChange</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;propertyName, TfToken const &amp;primvarName, HdInterpolation const &amp;primvarInterp, HdDirtyBits valueChangeDirtyBit=HdChangeTracker::DirtyPrimvar) const</argsstring>
        <name>_ProcessNonPrefixedPrimvarPropertyChange</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>propertyName</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>primvarName</declname>
        </param>
        <param>
          <type>HdInterpolation const &amp;</type>
          <declname>primvarInterp</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>valueChangeDirtyBit</declname>
          <defval>HdChangeTracker::DirtyPrimvar</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a36d6a9b05886771562a4403123837419" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API HdDirtyBits</type>
        <definition>USDIMAGING_API HdDirtyBits _ProcessPrefixedPrimvarPropertyChange</definition>
        <argsstring>(UsdPrim const &amp;prim, SdfPath const &amp;cachePath, TfToken const &amp;propertyName, HdDirtyBits valueChangeDirtyBit=HdChangeTracker::DirtyPrimvar, bool inherited=true) const</argsstring>
        <name>_ProcessPrefixedPrimvarPropertyChange</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>propertyName</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>valueChangeDirtyBit</declname>
          <defval>HdChangeTracker::DirtyPrimvar</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>inherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="880" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac6d7e37fabd76c2275b5e1798b4defae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void _RemovePrim</definition>
        <argsstring>(SdfPath const &amp;cachePath, UsdImagingIndexProxy *index)=0</argsstring>
        <name>_RemovePrim</name>
        <reimplementedby refid="class_usd_ri_pxr_imaging_rod_light_filter_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_int_mult_light_filter_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_barn_light_filter_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_filter_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_geometry_light_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_cylinder_light_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_portal_light_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_plugin_light_adapter_1a5d136fea22d0522a84ba84838483577c">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_rect_light_adapter_1a5d6f207898cec00bc3984cd88ad2f13a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_distant_light_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_disk_light_adapter_1ac61fe20c7d5b4035ca7fd07dfe206d6a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_sphere_light_adapter_1a5d6f207898cec00bc3984cd88ad2f13a">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light_adapter_1a4a4c634021714719fb088052877e833f">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_represented_by_ancestor_prim_adapter_1a8008373cc3570b50559dc92e01d18257">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_dome_light__1_adapter_1a4a4c634021714719fb088052877e833f">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_filter_adapter_1a66cb9ab09a07036658a36fb2a8265f0e">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_field_adapter_1a66cb9ab09a07036658a36fb2a8265f0e">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_sample_filter_adapter_1adcb6be8a2e6083755248ac8cf11762d7">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_integrator_adapter_1adcb6be8a2e6083755248ac8cf11762d7">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_ri_pxr_imaging_display_filter_adapter_1adcb6be8a2e6083755248ac8cf11762d7">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_settings_adapter_1a66cb9ab09a07036658a36fb2a8265f0e">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_var_adapter_1a66cb9ab09a07036658a36fb2a8265f0e">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_render_product_adapter_1a66cb9ab09a07036658a36fb2a8265f0e">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_camera_adapter_1a8008373cc3570b50559dc92e01d18257">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_material_adapter_1a9cb5874ef7af1b5ddec73b0520c7de19">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_draw_mode_adapter_1a66cb9ab09a07036658a36fb2a8265f0e">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_light_adapter_1a8008373cc3570b50559dc92e01d18257">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_gprim_adapter_1aa1b33cbd4d6a6b540338e11148ad58b8">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_point_instancer_adapter_1acaff99fffb1485b95eb67bbbd6fe0eb3">_RemovePrim</reimplementedby>
        <reimplementedby refid="class_usd_imaging_instance_adapter_1acaff99fffb1485b95eb67bbbd6fe0eb3">_RemovePrim</reimplementedby>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cachePath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a07f13ae7d84ef3eaa4e068bb7c1faa05" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API void</type>
        <definition>USDIMAGING_API void _ResyncDependents</definition>
        <argsstring>(SdfPath const &amp;usdPath, UsdImagingIndexProxy *index)</argsstring>
        <name>_ResyncDependents</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>usdPath</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_index_proxy" kindref="compound">UsdImagingIndexProxy</ref> *</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="894" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a73278b6161cdd80f42c29eb9e02f78b6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API UsdImaging_CollectionCache &amp;</type>
        <definition>USDIMAGING_API UsdImaging_CollectionCache&amp; _GetCollectionCache</definition>
        <argsstring>() const</argsstring>
        <name>_GetCollectionCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a5c7dd739b7f935439753d3265de878ff" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API UsdStageRefPtr</type>
        <definition>USDIMAGING_API UsdStageRefPtr _GetStage</definition>
        <argsstring>() const</argsstring>
        <name>_GetStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="901" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ad447349f414e2fb89ee5a1616cfdaff2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API UsdImaging_CoordSysBindingStrategy::value_type</type>
        <definition>USDIMAGING_API UsdImaging_CoordSysBindingStrategy::value_type _GetCoordSysBindings</definition>
        <argsstring>(UsdPrim const &amp;prim) const</argsstring>
        <name>_GetCoordSysBindings</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a116a317fc39016f97e01470fd4fc94a2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API UsdImaging_InheritedPrimvarStrategy::value_type</type>
        <definition>USDIMAGING_API UsdImaging_InheritedPrimvarStrategy::value_type _GetInheritedPrimvars</definition>
        <argsstring>(UsdPrim const &amp;prim) const</argsstring>
        <name>_GetInheritedPrimvars</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="909" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ae9865af51540eb195b1886fe2193d32b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>USDIMAGING_API UsdGeomPrimvar _GetInheritedPrimvar</definition>
        <argsstring>(UsdPrim const &amp;prim, TfToken const &amp;primvarName) const</argsstring>
        <name>_GetInheritedPrimvar</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>primvarName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1aaf638c38cf7cba1408dff12452dd6153" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API <ref refid="class_gf_interval" kindref="compound">GfInterval</ref></type>
        <definition>USDIMAGING_API GfInterval _GetCurrentTimeSamplingInterval</definition>
        <argsstring>()</argsstring>
        <name>_GetCurrentTimeSamplingInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="917" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1af364ee3f863c71feee279754dc6551a0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API Usd_PrimFlagsConjunction</type>
        <definition>USDIMAGING_API Usd_PrimFlagsConjunction _GetDisplayPredicate</definition>
        <argsstring>() const</argsstring>
        <name>_GetDisplayPredicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a166c993b978c0e3db9278942b3dfd89c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API Usd_PrimFlagsConjunction</type>
        <definition>USDIMAGING_API Usd_PrimFlagsConjunction _GetDisplayPredicateForPrototypes</definition>
        <argsstring>() const</argsstring>
        <name>_GetDisplayPredicateForPrototypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="923" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a65141f4159be9e19c82a362855f90b08" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>USDIMAGING_API bool _DoesDelegateSupportCoordSys</definition>
        <argsstring>() const</argsstring>
        <name>_DoesDelegateSupportCoordSys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="926" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a8149a5f3eccd74a0f57fabe68253398d" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGING_API bool</type>
        <definition>static USDIMAGING_API bool _HasPrimvarsPrefix</definition>
        <argsstring>(TfToken const &amp;propertyName)</argsstring>
        <name>_HasPrimvarsPrefix</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>propertyName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="857" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1ac7642794311da3960e71f8a2994058bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdImagingPrimAdapter</definition>
        <argsstring>()</argsstring>
        <name>UsdImagingPrimAdapter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="73" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_prim_adapter_1a8cfb397e864d736c7f30e4f4d55b2668" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDIMAGING_API</type>
        <definition>virtual USDIMAGING_API ~UsdImagingPrimAdapter</definition>
        <argsstring>()</argsstring>
        <name>~UsdImagingPrimAdapter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="77" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all PrimAdapters. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7274">
        <label>UsdImagingNurbsCurvesAdapter</label>
        <link refid="class_usd_imaging_nurbs_curves_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7265">
        <label>UsdImagingOpenVDBAssetAdapter</label>
        <link refid="class_usd_imaging_open_v_d_b_asset_adapter"/>
        <childnode refid="7263" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7289">
        <label>UsdImagingPortalLightAdapter</label>
        <link refid="class_usd_imaging_portal_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7284">
        <label>UsdImagingDistantLightAdapter</label>
        <link refid="class_usd_imaging_distant_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7271">
        <label>UsdImagingCylinderAdapter</label>
        <link refid="class_usd_imaging_cylinder_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7261">
        <label>UsdImagingCameraAdapter</label>
        <link refid="class_usd_imaging_camera_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7294">
        <label>UsdRiPxrImagingBarnLightFilterAdapter</label>
        <link refid="class_usd_ri_pxr_imaging_barn_light_filter_adapter"/>
        <childnode refid="7292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7267">
        <label>UsdImagingBasisCurvesAdapter</label>
        <link refid="class_usd_imaging_basis_curves_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7287">
        <label>UsdImagingGeometryLightAdapter</label>
        <link refid="class_usd_imaging_geometry_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7297">
        <label>UsdImagingMaterialAdapter</label>
        <link refid="class_usd_imaging_material_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7301">
        <label>UsdImagingRenderVarAdapter</label>
        <link refid="class_usd_imaging_render_var_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7280">
        <label>UsdImagingInstanceAdapter</label>
        <link refid="class_usd_imaging_instance_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7288">
        <label>UsdImagingPluginLightAdapter</label>
        <link refid="class_usd_imaging_plugin_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7266">
        <label>UsdImagingGprimAdapter</label>
        <link refid="class_usd_imaging_gprim_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7298">
        <label>UsdImagingPointInstancerAdapter</label>
        <link refid="class_usd_imaging_point_instancer_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7263">
        <label>UsdImagingFieldAdapter</label>
        <link refid="class_usd_imaging_field_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7278">
        <label>UsdImagingSphereAdapter</label>
        <link refid="class_usd_imaging_sphere_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7285">
        <label>UsdImagingDomeLight_1Adapter</label>
        <link refid="class_usd_imaging_dome_light__1_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7283">
        <label>UsdImagingDiskLightAdapter</label>
        <link refid="class_usd_imaging_disk_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7286">
        <label>UsdImagingDomeLightAdapter</label>
        <link refid="class_usd_imaging_dome_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7270">
        <label>UsdImagingCubeAdapter</label>
        <link refid="class_usd_imaging_cube_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7269">
        <label>UsdImagingConeAdapter</label>
        <link refid="class_usd_imaging_cone_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7305">
        <label>UsdRiPxrImagingIntegratorAdapter</label>
        <link refid="class_usd_ri_pxr_imaging_integrator_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7291">
        <label>UsdImagingSphereLightAdapter</label>
        <link refid="class_usd_imaging_sphere_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7299">
        <label>UsdImagingRenderProductAdapter</label>
        <link refid="class_usd_imaging_render_product_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7303">
        <label>UsdImagingShaderAdapter</label>
        <link refid="class_usd_imaging_shader_adapter"/>
        <childnode refid="7302" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7306">
        <label>UsdRiPxrImagingSampleFilterAdapter</label>
        <link refid="class_usd_ri_pxr_imaging_sample_filter_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7272">
        <label>UsdImagingHermiteCurvesAdapter</label>
        <link refid="class_usd_imaging_hermite_curves_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7277">
        <label>UsdImagingPointsAdapter</label>
        <link refid="class_usd_imaging_points_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7302">
        <label>UsdImagingRepresentedByAncestorPrimAdapter</label>
        <link refid="class_usd_imaging_represented_by_ancestor_prim_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7296">
        <label>UsdRiPxrImagingRodLightFilterAdapter</label>
        <link refid="class_usd_ri_pxr_imaging_rod_light_filter_adapter"/>
        <childnode refid="7292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7260">
        <label>UsdImagingPrimAdapter</label>
        <link refid="class_usd_imaging_prim_adapter"/>
      </node>
      <node id="7292">
        <label>UsdImagingLightFilterAdapter</label>
        <link refid="class_usd_imaging_light_filter_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7279">
        <label>UsdImagingVolumeAdapter</label>
        <link refid="class_usd_imaging_volume_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7264">
        <label>UsdImagingField3DAssetAdapter</label>
        <link refid="class_usd_imaging_field3_d_asset_adapter"/>
        <childnode refid="7263" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7293">
        <label>UsdImagingPluginLightFilterAdapter</label>
        <link refid="class_usd_imaging_plugin_light_filter_adapter"/>
        <childnode refid="7292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7281">
        <label>UsdImagingLightAdapter</label>
        <link refid="class_usd_imaging_light_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7275">
        <label>UsdImagingNurbsPatchAdapter</label>
        <link refid="class_usd_imaging_nurbs_patch_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7273">
        <label>UsdImagingMeshAdapter</label>
        <link refid="class_usd_imaging_mesh_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7290">
        <label>UsdImagingRectLightAdapter</label>
        <link refid="class_usd_imaging_rect_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7295">
        <label>UsdRiPxrImagingIntMultLightFilterAdapter</label>
        <link refid="class_usd_ri_pxr_imaging_int_mult_light_filter_adapter"/>
        <childnode refid="7292" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7268">
        <label>UsdImagingCapsuleAdapter</label>
        <link refid="class_usd_imaging_capsule_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7304">
        <label>UsdRiPxrImagingDisplayFilterAdapter</label>
        <link refid="class_usd_ri_pxr_imaging_display_filter_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7300">
        <label>UsdImagingRenderSettingsAdapter</label>
        <link refid="class_usd_imaging_render_settings_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7282">
        <label>UsdImagingCylinderLightAdapter</label>
        <link refid="class_usd_imaging_cylinder_light_adapter"/>
        <childnode refid="7281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7276">
        <label>UsdImagingPlaneAdapter</label>
        <link refid="class_usd_imaging_plane_adapter"/>
        <childnode refid="7266" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7262">
        <label>UsdImagingDrawModeAdapter</label>
        <link refid="class_usd_imaging_draw_mode_adapter"/>
        <childnode refid="7260" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/usdImaging/usdImaging/primAdapter.h" line="70" column="1" bodyfile="pxr/usdImaging/usdImaging/primAdapter.h" bodystart="68" bodyend="930"/>
    <listofallmembers>
      <member refid="class_usd_imaging_prim_adapter_1a3acd62abeb5877876c6fb3187bb5b768" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_ComputeAndMergePrimvar</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a2de0e5cdcc41dbb9238933b82e2696ad" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_ConvertCachePathToIndexPath</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a15ea1d11cbaf4a977a455dcd26a608ab" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_ConvertIndexPathToCachePath</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a361803277d587114ba55b3b3d65c8922" prot="private" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_delegate</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a65141f4159be9e19c82a362855f90b08" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_DoesDelegateSupportCoordSys</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a85e468fc9b3e3be2022693f05c1c14a5" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_Get</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac5dbdbd13022f791e2e4cfe70d13ed17" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetAdapter</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a4a6dc0e184f3440bbb259fdc3bd0eff4" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetBlurScaleCache</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a73278b6161cdd80f42c29eb9e02f78b6" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetCollectionCache</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ad447349f414e2fb89ee5a1616cfdaff2" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetCoordSysBindings</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aaf638c38cf7cba1408dff12452dd6153" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetCurrentTimeSamplingInterval</name></member>
      <member refid="class_usd_imaging_prim_adapter_1af364ee3f863c71feee279754dc6551a0" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetDisplayPredicate</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a166c993b978c0e3db9278942b3dfd89c" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetDisplayPredicateForPrototypes</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ae9865af51540eb195b1886fe2193d32b" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetInheritedPrimvar</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a116a317fc39016f97e01470fd4fc94a2" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetInheritedPrimvars</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a83eece817ea0079ea7dcc20f7db351a2" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetMaterialBindingPurpose</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a32f3e8c45035ceca12ac6bee61f94a83" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetMaterialRenderContexts</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a48011ca4f223cae29c3d57f7b8fb770a" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetNonlinearSampleCountCache</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aa68e47438cb74938a29953400a17338a" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetPrim</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ae2e4abe6a7402aa004567519eefb8d33" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetPrimAdapter</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aa7123e837e8f6eea4640e40424c0c84c" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetPrimPathFromInstancerChain</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a43f3131277ab8b4fc36d3c1cacbad7dc" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetPrimvarDescCache</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a542974a9ca4f49b5c19ff19b21169c97" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetPtr</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a7c459b18bede439f52ba5438760b1533" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetRenderSettingsNamespaces</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac8519b98a3c896a54ab4cfe1a7752ed1" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetSceneLightsEnabled</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ae0e8c8231d7bdf1104e0da2c97613bba" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetSceneMaterialsEnabled</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aa687978f45ad0c4229a7f86267e4c44d" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetShaderSourceTypes</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a5c7dd739b7f935439753d3265de878ff" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetStage</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a2825aa3fa72d5bd449e410402ad50135" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_GetTimeWithOffset</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a8149a5f3eccd74a0f57fabe68253398d" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_HasPrimvarsPrefix</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a586ff49ca9dfe35016879b147debcc30" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_IsInInvisedPaths</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a7a2c563d8c6cfa3915c823aeaff218a2" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_IsPrimvarFilteringNeeded</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a958f1a296ddaf054bd82a56b2ad53856" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_IsTransformVarying</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a80079dbd18b49e2870b93f2d78e8cf52" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_IsVarying</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a9df1d3d6df8daf3273562b695a1ca163" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_MergePrimvar</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ab3bfd2ee8af3862060a225e884e5636d" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_ProcessNonPrefixedPrimvarPropertyChange</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a36d6a9b05886771562a4403123837419" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_ProcessPrefixedPrimvarPropertyChange</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac6d7e37fabd76c2275b5e1798b4defae" prot="protected" virt="pure-virtual"><scope>UsdImagingPrimAdapter</scope><name>_RemovePrim</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a538e24c3cbcf79a976246260e73114ac" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_RemovePrimvar</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a07f13ae7d84ef3eaa4e068bb7c1faa05" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>_ResyncDependents</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a49e80ece601561d1e995eae94e08c2d4" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>CanPopulateUsdInstance</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a027f6f1384b2dad97d3ecb09d77722d6" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>Get</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a0508903536e217a3bc4e7a1a5aa4bd6d" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetCullStyle</name></member>
      <member refid="class_usd_imaging_prim_adapter_1add2f0a29b507bb61258c6880b09d0ace" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetDoubleSided</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aeec2cbd8f3454a6af348ffab21693d8c" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtComputationInput</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a7887a2a631e90852e31119192a251e43" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtComputationInputs</name></member>
      <member refid="class_usd_imaging_prim_adapter_1acaafa264485326b418baa4cf7d673b84" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtComputationKernel</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a09b590cd10756109c787c30629a04001" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtComputationOutputs</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a0fd121398cba7fe07b09fcbe26becadb" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtComputationPrimvars</name></member>
      <member refid="class_usd_imaging_prim_adapter_1afd979399c4fba8f6ef13cd29cb9772d2" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtComputationSceneInputNames</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ab030573ca777994e9d3494b2a0a22d19" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetExtent</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a0a25f3037820bfb13128772e75a53398" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>GetFullModelDrawMode</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a7d97704fab05ae2bc0113b929d654e60" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetImagingSubprimData</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a97d810a59c6a92894b3a06c8269813f1" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetImagingSubprims</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a9c918ff284690b5e1e7a4462505395b2" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetImagingSubprimType</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a5a5dfa57577eb2b2098eeaba659c6791" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>GetInheritablePurpose</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a0fa5f7c6b0c0928b0881f68227e13659" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetInstanceCategories</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ae4a1289b2c77df83b10d93c79dfd0098" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetInstanceIndices</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ad3ef49ded4b9ace510159215eb86b18d" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetInstancerId</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a53f5a6c348355d522433952567f5a08b" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetInstancerPrototypes</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a55fd9868660b92f4f47f68d7c6843888" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetInstancerTransform</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a02ce9a5aa4feb6412e586f0e2168ec02" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetLightParamValue</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ad6db080e66e56d11a4fda944cd094876" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetMaterialId</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a287e074e3fc5afba11c21c71e32280a2" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetMaterialResource</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a010e0778482a42b42ba165166efabc84" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>GetMaterialUsdPath</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac9e7c449efbe05d779fd800879f5bc6c" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>GetModelDrawMode</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a4db7b2d4a6c25e03a8c01b9e8bbde42e" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>GetPerPrototypeIndices</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a29d07ca94ee9e2dc77b7698d213ab8eb" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetPopulationMode</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aab0ac7f12f08a58b9ddcdfbcd17052ff" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetPurpose</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a17e78ca5666d58cf15318316cc337200" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetRelativeInstancerTransform</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aa99d4b06c897e99845f200b1f5221d74" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>GetRootTransform</name></member>
      <member refid="class_usd_imaging_prim_adapter_1afe88b2303da555cb22d4bcb94ea72333" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetScenePrimPath</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ae7efe8724b8f44578192f7708a8eeaf2" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetScenePrimPaths</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aba8d3e6328aba30da93752716429e171" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetSubdivTags</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a9f4cb1953174726c7783f94d604574d1" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetTopology</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a03804796b195bbea3a0c6ad6bc0c2360" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetTransform</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a877656d784ee6ce523e213f1b5ec2cfb" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetVisible</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ad82a481b63f24cfbd7a3e5243ae24d2b" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>GetVolumeFieldDescriptors</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a3a6ff93d3e73829732dd6bb14306b6ec" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>InvalidateImagingSubprim</name></member>
      <member refid="class_usd_imaging_prim_adapter_1acd5f73f97a79bae704bdbe07abc34719" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>InvalidateImagingSubprimFromDescendent</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a10c5e1d377c4f2e82f2c7bc1de56947b" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>InvokeComputation</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a25c765b37e08f2a3b69bd991e78f70d7" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>IsChildPath</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aea5091e52d06638c414072478efb1bf9" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>IsInstancerAdapter</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aaf7a4e61284ae49548aba3d401ee7959" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>IsSupported</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a27b7ddad94c5cbf034f76019217d6b7b" prot="protected" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>Keys</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aab6eddbe0eda35428bc78128ff40cc02" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>LookupLightParamAttribute</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aded37fdba6a4f9b10f6dabb147c65e53" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkCollectionsDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a6dc902aab72315e6866b051ff730d572" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkCullStyleDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a7a1f10e2d4e33fefdd519e29122fbbad" prot="public" virt="pure-virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a7fcc3bc9e33cf6ed87113a26aff381a7" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkLightParamsDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1acaed74cb6f80f49bab0a64af6c19dbac" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkMaterialDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aaf29cda887c2c78eac0de3009b45f732" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkRefineLevelDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a4c0720f4006fd3d5ee29f7049f936e33" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkRenderTagDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac3badad44051bfbe691511b0755e4993" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkReprDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a88bd811ca89b2b7da3ef723eef09212f" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkTransformDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aab5388d7d7073516840f7ab70bf03439" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkVisibilityDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1aa843c9a1a329aa7bfe6b8390c9149631" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>MarkWindowPolicyDirty</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a47890dbd73ea260bc7709f1bdf410a79" prot="public" virt="pure-virtual"><scope>UsdImagingPrimAdapter</scope><name>Populate</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a64d3d2d6f49ba3cdda8f7b224527b2f3" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>PopulateSelection</name></member>
      <member refid="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917bea" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>PopulationMode</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a9d96a026e6d752efad10e7d56ba1ea97" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>ProcessPrimChange</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a5d4629b8ec9799c383091adc5b58355f" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>ProcessPrimRemoval</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a00e21d912fefbaad864599c7d92aaa0b" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>ProcessPrimResync</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a032673f9da38a14ae35d8bbda16df9b9" prot="public" virt="pure-virtual"><scope>UsdImagingPrimAdapter</scope><name>ProcessPropertyChange</name></member>
      <member refid="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917beaaa9b4a5a614848b1570cada05749804b3" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>RepresentedByAncestor</name></member>
      <member refid="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917beaab9c0aa7f313e3633b21f8282c5928d0c" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>RepresentsSelf</name></member>
      <member refid="class_usd_imaging_prim_adapter_1afcd92dc44db39ae8bc2279976a917beaa9ecca1ce1365a76ac60bf226b0162503" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>RepresentsSelfAndDescendents</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a1900bbbbb7697bf97616311e7adf489f" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>SampleExtComputationInput</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac6327a595c00ab00b7a7769230c190a2" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>SampleInstancerTransform</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a1a8cf9a322dd77daae259e9b341532f7" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>SamplePrimvar</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a32a6d8299c04a2faed8a3b738d97571f" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>SampleTransform</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a0a99170a4c02337f67756e421333445e" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>SetDelegate</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ad040936f7afba2447770f49c7c6c28b2" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>ShouldCullChildren</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a0c15fd7ac042f6c64570ad805bdd3922" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>ShouldCullSubtree</name></member>
      <member refid="class_usd_imaging_prim_adapter_1af073155cf25e7e85112e10ea00bbcea0" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>ShouldIgnoreNativeInstanceSubtrees</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a564bb6d6d7410a6ddb531b84ed4acab1" prot="public" virt="pure-virtual"><scope>UsdImagingPrimAdapter</scope><name>TrackVariability</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ab8a29444fdb073be8376f740382a292b" prot="public" virt="pure-virtual"><scope>UsdImagingPrimAdapter</scope><name>UpdateForTime</name></member>
      <member refid="class_usd_imaging_prim_adapter_1ac7642794311da3960e71f8a2994058bb" prot="public" virt="non-virtual"><scope>UsdImagingPrimAdapter</scope><name>UsdImagingPrimAdapter</name></member>
      <member refid="class_usd_imaging_prim_adapter_1a8cfb397e864d736c7f30e4f4d55b2668" prot="public" virt="virtual"><scope>UsdImagingPrimAdapter</scope><name>~UsdImagingPrimAdapter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
