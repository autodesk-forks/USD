<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_geom_boundable" kind="class" language="C++" prot="public">
    <compoundname>UsdGeomBoundable</compoundname>
    <basecompoundref refid="class_usd_geom_xformable" prot="public" virt="non-virtual">UsdGeomXformable</basecompoundref>
    <derivedcompoundref refid="class_usd_geom_gprim" prot="public" virt="non-virtual">UsdGeomGprim</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_point_instancer" prot="public" virt="non-virtual">UsdGeomPointInstancer</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_boundable_light_base" prot="public" virt="non-virtual">UsdLuxBoundableLightBase</derivedcompoundref>
    <derivedcompoundref refid="class_usd_proc_generative_procedural" prot="public" virt="non-virtual">UsdProcGenerativeProcedural</derivedcompoundref>
    <derivedcompoundref refid="class_usd_skel_root" prot="public" virt="non-virtual">UsdSkelRoot</derivedcompoundref>
    <derivedcompoundref refid="class_usd_skel_skeleton" prot="public" virt="non-virtual">UsdSkelSkeleton</derivedcompoundref>
    <includes refid="boundable_8h" local="no">boundable.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_geom_boundable_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741a033ea5f40e4407ad16629e9a769ac9c1" kindref="member">UsdSchemaKind::AbstractTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="88" column="1" bodyfile="pxr/usd/usdGeom/boundable.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_geom_boundable_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="141" column="1" bodyfile="pxr/usd/usdGeom/boundable.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_geom_boundable_1a93364dd184714cc86a93a4e6c943f54f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomBoundable</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdGeomBoundable</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_geom_boundable_1af0c22f5ebc2dad00101664ca4b1ec743" kindref="member">UsdGeomBoundable::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="94" column="1" bodyfile="pxr/usd/usdGeom/boundable.h" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1acddb485259d4c8d3c0fdb9445b85a19e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomBoundable</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdGeomBoundable</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="102" column="1" bodyfile="pxr/usd/usdGeom/boundable.h" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1af5dfc6e58452966f10c6f8d0a771c346" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API</type>
        <definition>virtual USDGEOM_API ~UsdGeomBoundable</definition>
        <argsstring>()</argsstring>
        <name>~UsdGeomBoundable</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1abecc87b5433fec139295a78b439b0531" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetExtentAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetExtentAttr</name>
        <briefdescription>
<para>Extent is a three dimensional range measuring the geometric extent of the authored gprim in its own local space (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>its own transform not applied), <emphasis>without</emphasis> accounting for any shader-induced displacement. If <bold>any</bold> extent value has been authored for a given Boundable, then it should be authored at every timeSample at which geometry-affecting properties are authored, to ensure correct evaluation via <ref refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" kindref="member">ComputeExtent()</ref>. If <bold>no</bold> extent value has been authored, then <ref refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" kindref="member">ComputeExtent()</ref> will call the Boundable&apos;s registered ComputeExtentFunction(), which may be expensive, which is why we strongly encourage proper authoring of extent. <simplesect kind="see"><para><ref refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" kindref="member">ComputeExtent()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_geom_boundable_1UsdGeom_Boundable_Extent" kindref="member">Why Extent and not Bounds ?</ref>.</para>
</simplesect>
An authored extent on a prim which has children is expected to include the extent of all children, as they will be pruned from BBox computation during traversal.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float3[] extent</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;GfVec3f&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float3Array   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1a20dfcd57796694016d7d852e798458d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateExtentAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateExtentAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_boundable_1abecc87b5433fec139295a78b439b0531" kindref="member">GetExtentAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool ComputeExtent</definition>
        <argsstring>(const UsdTimeCode &amp;time, VtVec3fArray *extent)</argsstring>
        <name>ComputeExtent</name>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>If an extent is authored on this boundable, it queries the <computeroutput>extent</computeroutput> from the extent attribute, otherwise if ComputeExtentFunction is registered for the boundable&apos;s type, it computes the <computeroutput>extent</computeroutput> at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true when extent is successfully populated, false otherwise.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_geom_boundable_1a413c9eb5b4e1d8fddd627cf33ed4a106" kindref="member">ComputeExtentFromPlugins</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="boundable_compute_extent_8h_1aee4aefca4a62c9ea3a22c9c71d91b0ef" kindref="member">UsdGeomRegisterComputeExtentFunction</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="209" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_geom_boundable_1ae40ae43320babff8a254a3a8107a255a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDGEOM_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1af0c22f5ebc2dad00101664ca4b1ec743" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref></type>
        <definition>static USDGEOM_API UsdGeomBoundable Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdGeomBoundable(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1a413c9eb5b4e1d8fddd627cf33ed4a106" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool ComputeExtentFromPlugins</definition>
        <argsstring>(const UsdGeomBoundable &amp;boundable, const UsdTimeCode &amp;time, VtVec3fArray *extent)</argsstring>
        <name>ComputeExtentFromPlugins</name>
        <param>
          <type>const <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref> &amp;</type>
          <declname>boundable</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>Compute the extent for the Boundable prim <computeroutput>boundable</computeroutput> at time <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If successful, populates <computeroutput>extent</computeroutput> with the result and returns <computeroutput>true</computeroutput>, otherwise returns <computeroutput>false</computeroutput>.</para>
<para>The extent computation is based on the concrete type of the prim represented by <computeroutput>boundable</computeroutput>. Plugins that provide a Boundable prim type may implement and register an extent computation for that type using <ref refid="boundable_compute_extent_8h_1aee4aefca4a62c9ea3a22c9c71d91b0ef" kindref="member">UsdGeomRegisterComputeExtentFunction</ref>. ComputeExtentFromPlugins will use this function to compute extents for all prims of that type. If no function has been registered for a prim type, but a function has been registered for one of its base types, that function will be used instead.</para>
<para><simplesect kind="note"><para>This function may load plugins in order to access the extent computation for a prim type. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1a7fa34cebf9339958ad25099dd635c9c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool ComputeExtentFromPlugins</definition>
        <argsstring>(const UsdGeomBoundable &amp;boundable, const UsdTimeCode &amp;time, const GfMatrix4d &amp;transform, VtVec3fArray *extent)</argsstring>
        <name>ComputeExtentFromPlugins</name>
        <param>
          <type>const <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref> &amp;</type>
          <declname>boundable</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Computes the extent as if the matrix <computeroutput>transform</computeroutput> was first applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="234" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_geom_boundable_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDGEOM_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_typed_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <reimplementedby refid="class_usd_geom_point_based_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_boundable_light_base_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_gprim_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_sphere_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_disk_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_portal_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_cylinder_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_sphere_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cube_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_rect_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_skeleton_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_root_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_points_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder__1_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cone_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule__1_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_vol_volume_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_plane_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_proc_generative_procedural_1a69f2b85c953c2cadf65f80ac0d4781af">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_patch_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_mesh_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_point_instancer_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="137" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_geom_boundable_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDGEOM_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_boundable_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_geom_boundable_1a1e6b9f0da5624212c58019b749c21286" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDGEOM_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_typed_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <reimplementedby refid="class_usd_geom_point_based_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_boundable_light_base_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_gprim_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_sphere_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_disk_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_portal_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_cylinder_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_sphere_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cube_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_rect_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_skeleton_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_root_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_points_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder__1_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cone_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule__1_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_vol_volume_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_plane_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_proc_generative_procedural_1a66ed99efc245a0752bc7439dc47a593e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_patch_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_mesh_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_point_instancer_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/boundable.h" line="149" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Boundable introduces the ability for a prim to persistently cache a rectilinear, local-space, extent. </para>
    </briefdescription>
    <detaileddescription>
<sect1 id="class_usd_geom_boundable_1UsdGeom_Boundable_Extent">
<title>Why Extent and not Bounds ?</title>
<para>Boundable introduces the notion of &quot;extent&quot;, which is a cached computation of a prim&apos;s local-space 3D range for its resolved attributes <bold>at the layer and time in which extent is authored</bold>. We have found that with composed scene description, attempting to cache pre-computed bounds at interior prims in a scene graph is very fragile, given the ease with which one can author a single attribute in a stronger layer that can invalidate many authored caches - or with which a re-published, referenced asset can do the same.</para>
<para>Therefore, we limit to precomputing (generally) leaf-prim extent, which avoids the need to read in large point arrays to compute bounds, and provides <ref refid="class_usd_geom_b_box_cache" kindref="compound">UsdGeomBBoxCache</ref> the means to efficiently compute and (session-only) cache intermediate bounds. You are free to compute and author intermediate bounds into your scenes, of course, which may work well if you have sufficient locks on your pipeline to guarantee that once authored, the geometry and transforms upon which they are based will remain unchanged, or if accuracy of the bounds is not an ironclad requisite.</para>
<para>When intermediate bounds are authored on Boundable parents, the child prims will be pruned from BBox computation; the authored extent is expected to incorporate all child bounds. </para>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="6084">
        <label>UsdGeomCylinder</label>
        <link refid="class_usd_geom_cylinder"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6092">
        <label>UsdGeomMesh</label>
        <link refid="class_usd_geom_mesh"/>
        <childnode refid="6087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6103">
        <label>UsdLuxSphereLight</label>
        <link refid="class_usd_lux_sphere_light"/>
        <childnode refid="6098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6106">
        <label>UsdSkelSkeleton</label>
        <link refid="class_usd_skel_skeleton"/>
        <childnode refid="6074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6089">
        <label>UsdGeomBasisCurves</label>
        <link refid="class_usd_geom_basis_curves"/>
        <childnode refid="6088" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6098">
        <label>UsdLuxBoundableLightBase</label>
        <link refid="class_usd_lux_boundable_light_base"/>
        <childnode refid="6074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6082">
        <label>UsdGeomCone</label>
        <link refid="class_usd_geom_cone"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6081">
        <label>UsdGeomCapsule_1</label>
        <link refid="class_usd_geom_capsule__1"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6097">
        <label>UsdGeomPointInstancer</label>
        <link refid="class_usd_geom_point_instancer"/>
        <childnode refid="6074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6085">
        <label>UsdGeomCylinder_1</label>
        <link refid="class_usd_geom_cylinder__1"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6100">
        <label>UsdLuxDiskLight</label>
        <link refid="class_usd_lux_disk_light"/>
        <childnode refid="6098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6076">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="6077" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6095">
        <label>UsdGeomSphere</label>
        <link refid="class_usd_geom_sphere"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6099">
        <label>UsdLuxCylinderLight</label>
        <link refid="class_usd_lux_cylinder_light"/>
        <childnode refid="6098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6088">
        <label>UsdGeomCurves</label>
        <link refid="class_usd_geom_curves"/>
        <childnode refid="6087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6096">
        <label>UsdVolVolume</label>
        <link refid="class_usd_vol_volume"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6079">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="6074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6087">
        <label>UsdGeomPointBased</label>
        <link refid="class_usd_geom_point_based"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6077">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6086">
        <label>UsdGeomPlane</label>
        <link refid="class_usd_geom_plane"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6083">
        <label>UsdGeomCube</label>
        <link refid="class_usd_geom_cube"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6093">
        <label>UsdGeomNurbsPatch</label>
        <link refid="class_usd_geom_nurbs_patch"/>
        <childnode refid="6087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6091">
        <label>UsdGeomNurbsCurves</label>
        <link refid="class_usd_geom_nurbs_curves"/>
        <childnode refid="6088" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6094">
        <label>UsdGeomPoints</label>
        <link refid="class_usd_geom_points"/>
        <childnode refid="6087" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6078">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6090">
        <label>UsdGeomHermiteCurves</label>
        <link refid="class_usd_geom_hermite_curves"/>
        <childnode refid="6088" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6102">
        <label>UsdLuxRectLight</label>
        <link refid="class_usd_lux_rect_light"/>
        <childnode refid="6098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6101">
        <label>UsdLuxPortalLight</label>
        <link refid="class_usd_lux_portal_light"/>
        <childnode refid="6098" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6104">
        <label>UsdProcGenerativeProcedural</label>
        <link refid="class_usd_proc_generative_procedural"/>
        <childnode refid="6074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6074">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="6075" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6105">
        <label>UsdSkelRoot</label>
        <link refid="class_usd_skel_root"/>
        <childnode refid="6074" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6080">
        <label>UsdGeomCapsule</label>
        <link refid="class_usd_geom_capsule"/>
        <childnode refid="6079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6075">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="6076" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6109">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="6110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6110">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6111" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6111">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6107">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="6108" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6108">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="6109" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdGeom/boundable.h" line="83" column="1" bodyfile="pxr/usd/usdGeom/boundable.h" bodystart="82" bodyend="239"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_geom_boundable_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" virt="virtual"><scope>UsdGeomBoundable</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdGeomBoundable</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_geom_boundable_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_geom_boundable_1a1e6b9f0da5624212c58019b749c21286" prot="private" virt="virtual"><scope>UsdGeomBoundable</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdGeomBoundable</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_geom_boundable_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_xformable_1a8b0d6e551f3705724405ddf6795756a7" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddOrientOp</name></member>
      <member refid="class_usd_geom_xformable_1ac01badf7416ca43636d9e479bc47da33" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1aba511327f305e9a8b3f8941e244c8992" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1a63ffbff66e60a314adac3380d533469f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4af9af5dc523e80fce81a88014edef19" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1ac7235be9524c6eb1a906f3247f9833f0" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1a353b43cb6f6d04b2db5b68c057d0494f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a9c089e1932ce91477becbc1f01bdfb02" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a6dd6174a48238d6a9564128f43362ce2" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a5938bf453b0f07bfaf80d121b916d720" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a4f84556fa9b1fab0432b8c4342e98045" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddScaleOp</name></member>
      <member refid="class_usd_geom_xformable_1a0fd59cb1cdd089e0d93fa755fb0da268" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1a782fe5d36ac6657235b80741d47a8b1f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddTranslateOp</name></member>
      <member refid="class_usd_geom_xformable_1ad6dfc740dcec052482489647af9ed36b" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>AddXformOp</name></member>
      <member refid="class_usd_geom_xformable_1a10a241711290631508cfc349ad4ab64d" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ClearXformOpOrder</name></member>
      <member refid="class_usd_geom_imageable_1a1174d9985088dd364f6a56925073fe76" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeEffectiveVisibility</name></member>
      <member refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_boundable_1a413c9eb5b4e1d8fddd627cf33ed4a106" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_boundable_1a7fa34cebf9339958ad25099dd635c9c7" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_imageable_1a503f6d39abbd1b62c3c55f227461334d" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeLocalBound</name></member>
      <member refid="class_usd_geom_imageable_1a8e3fb09253ba63d63921f665d63cd270" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeLocalToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1a4313664fa692f724da56cc254bce70fc" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeParentToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1ad5a114f3776eb75edc651e8c2d67f8ff" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a1aa2ea4240e7e12f11122d7ff8ad7f90" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputePurpose</name></member>
      <member refid="class_usd_geom_imageable_1a2a7d61f7af1a02e095e6a8abcf8e641f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a00c5620a09313aa39cb0d79f492b340f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a54086b2386d22b1de4aaeb5b3005533d" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeUntransformedBound</name></member>
      <member refid="class_usd_geom_imageable_1ac0bfa1554d9b57303c14f71d084c578d" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeVisibility</name></member>
      <member refid="class_usd_geom_imageable_1ae616043b0f7fbc631ef9e5c784132a6c" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>ComputeWorldBound</name></member>
      <member refid="class_usd_geom_boundable_1a20dfcd57796694016d7d852e798458d8" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>CreateExtentAttr</name></member>
      <member refid="class_usd_geom_imageable_1aafc2e3aa91cf892f7937cc46a2351472" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>CreateProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1a3f4f6685ac7cef1d8ef94c44586b84bc" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>CreatePurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a96d4959f4d99367dfa3a79a3371e278a" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>CreateVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a03e49a63dc0bed6c97cee6bbc10aa182" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>CreateXformOpOrderAttr</name></member>
      <member refid="class_usd_geom_boundable_1af0c22f5ebc2dad00101664ca4b1ec743" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>Get</name></member>
      <member refid="class_usd_geom_boundable_1abecc87b5433fec139295a78b439b0531" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetExtentAttr</name></member>
      <member refid="class_usd_geom_xformable_1a9a04ccb1ba8aa16e8cc1e878c2c92969" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1a3bdae958563500cfdf2b4f3bcf34c465" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1ad0838e193af826f5bbde3c274e9839ce" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_imageable_1ac7d41ddd5b5d274785f4a109a7cebad5" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetOrderedPurposeTokens</name></member>
      <member refid="class_usd_geom_xformable_1a5e7cd1ac98925aa41af4f83d1efe6375" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetOrderedXformOps</name></member>
      <member refid="class_usd_geom_xformable_1a618c9b0ad5f39a8ebfc7f8e1b9319e5f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetOrientOp</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_imageable_1a5be4a4143e2b9f89f9bea44d27639a92" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetPurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a2dfc306cddf0c522d39ba477e91ec161" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetPurposeVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a6d16bc5455344e131683d91e14ab62db" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1adbc1cc0684aad279a9f7954cce0ad083" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1a8b871424ffaff814ec4595b406198e12" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1aeabbd1a4b1e09254ddf700bfc1d83790" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a9846b234308946bb9f91e1520f97de05" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1a803cfbc1fe2750bf9c5aadd83bd50a4c" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1aa244d99dd6e7f5abecc57f8ece422c93" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a478e11c424f265543b333a00fb4268d0" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a12311efeb62f64b39a02a1c001169ec6" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4ac8cec6efb64e0cbdd4b7a72f71c7f3" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a2029e0b90a0684a9a8c31e62aa98d317" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetScaleOp</name></member>
      <member refid="class_usd_geom_boundable_1ae40ae43320babff8a254a3a8107a255a" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_geom_xformable_1a0384cb87a595fa56c29463ff4fe73015" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1ab855f0ea37793df1f22d2bce3d68caff" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1a64d8dabfbe974503daf5e8f2057424f7" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a582133c4e08813d891690f58497d4add" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a0b425fbfdfe0f254add07f904ab231aa" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1ab81f8a9eb062d2c726dbb8303188408c" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetTranslateOp</name></member>
      <member refid="class_usd_geom_imageable_1a943eddc325190bd67789407400f122b7" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1ab153aead880eebecaf2138706c4bdbf2" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetXformOp</name></member>
      <member refid="class_usd_geom_xformable_1af8533621f9f141dfd016711171433caf" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>GetXformOpOrderAttr</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_geom_xformable_1adb444654a8443f3413213cc526ee6c1a" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>IsTransformationAffectedByAttrNamed</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>IsTyped</name></member>
      <member refid="class_usd_geom_imageable_1a91eda805326fd94cc9910cfaeb4ac4a0" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>MakeInvisible</name></member>
      <member refid="class_usd_geom_xformable_1a97e5c56a739490600e4e7e37b3953a08" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>MakeMatrixXform</name></member>
      <member refid="class_usd_geom_imageable_1a3fd30c76b787e7e32180c1b454b971c7" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>MakeVisible</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>operator bool</name></member>
      <member refid="class_usd_geom_boundable_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_imageable_1a6b808012a6a5bc9df34e794ff82bb6f0" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a8c0c8b7faa4056a7267c586b2ffc0bd8" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_xformable_1a99c4c768f58d6375edad8c9c7cb4bee2" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>SetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1a4b6dd6e51eb84725c763d064c4f9f3ba" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>SetXformOpOrder</name></member>
      <member refid="class_usd_geom_xformable_1aca0c1f0eb2639bd9e126f5e6a16e856f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_xformable_1a43e63cb240ddb36f550b3c86a22252c6" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_boundable_1a93364dd184714cc86a93a4e6c943f54f" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_boundable_1acddb485259d4c8d3c0fdb9445b85a19e" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_imageable_1a00ea23bdac8d751c2b97dc8fe5cd7f73" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_imageable_1a912f3e5572536e0492914fe251446bc9" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1adf53f566e1d4a6ff2c4e6e90590b0510" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_geom_xformable_1a4f5550d15c8a43ef4ac30a063f96d0cd" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_geom_boundable_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdGeomBoundable</scope><name>UsdTyped</name></member>
      <member refid="class_usd_geom_boundable_1af5dfc6e58452966f10c6f8d0a771c346" prot="public" virt="virtual"><scope>UsdGeomBoundable</scope><name>~UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_imageable_1acbd981c2779c70ec4c3fd5d8cc610925" prot="public" virt="virtual"><scope>UsdGeomBoundable</scope><name>~UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1a8c8f037aa67ff544aea009f0881ed530" prot="public" virt="virtual"><scope>UsdGeomBoundable</scope><name>~UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdGeomBoundable</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdGeomBoundable</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
