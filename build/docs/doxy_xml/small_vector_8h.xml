<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="small_vector_8h" kind="file" language="C++">
    <compoundname>smallVector.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">iterator</includes>
    <includes local="no">limits</includes>
    <includes local="no">memory</includes>
    <includes local="no">new</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="ostream_methods_8h" local="yes">pxr/base/tf/ostreamMethods.h</includedby>
    <includedby refid="change_list_8h" local="yes">pxr/usd/sdf/changeList.h</includedby>
    <includedby refid="usd_2usd_shade_2types_8h" local="yes">pxr/usd/usdShade/types.h</includedby>
    <includedby refid="usd_2usd_shade_2utils_8h" local="yes">pxr/usd/usdShade/utils.h</includedby>
    <includedby refid="data_source_locator_8h" local="yes">pxr/imaging/hd/dataSourceLocator.h</includedby>
    <includedby refid="material_network_interface_8h" local="yes">pxr/imaging/hd/materialNetworkInterface.h</includedby>
    <includedby refid="retained_data_source_8h" local="yes">pxr/imaging/hd/retainedDataSource.h</includedby>
    <includedby refid="time_sample_array_8h" local="yes">pxr/imaging/hd/timeSampleArray.h</includedby>
    <incdepgraph>
      <node id="77901">
        <label>limits</label>
      </node>
      <node id="77893">
        <label>pxr/base/tf/smallVector.h</label>
        <link refid="small_vector_8h"/>
        <childnode refid="77894" relation="include">
        </childnode>
        <childnode refid="77895" relation="include">
        </childnode>
        <childnode refid="77896" relation="include">
        </childnode>
        <childnode refid="77897" relation="include">
        </childnode>
        <childnode refid="77898" relation="include">
        </childnode>
        <childnode refid="77899" relation="include">
        </childnode>
        <childnode refid="77900" relation="include">
        </childnode>
        <childnode refid="77901" relation="include">
        </childnode>
        <childnode refid="77902" relation="include">
        </childnode>
        <childnode refid="77903" relation="include">
        </childnode>
        <childnode refid="77904" relation="include">
        </childnode>
      </node>
      <node id="77900">
        <label>iterator</label>
      </node>
      <node id="77897">
        <label>cstdint</label>
      </node>
      <node id="77894">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="77903">
        <label>new</label>
      </node>
      <node id="77898">
        <label>cstdlib</label>
      </node>
      <node id="77896">
        <label>cstddef</label>
      </node>
      <node id="77904">
        <label>type_traits</label>
      </node>
      <node id="77895">
        <label>algorithm</label>
      </node>
      <node id="77902">
        <label>memory</label>
      </node>
      <node id="77899">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="78340">
        <label>pxr/imaging/hd/rendererPluginRegistry.h</label>
        <link refid="renderer_plugin_registry_8h_source"/>
      </node>
      <node id="77918">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="78274">
        <label>pxr/imaging/hdx/renderSetupTask.h</label>
        <link refid="render_setup_task_8h_source"/>
        <childnode refid="78275" relation="include">
        </childnode>
        <childnode refid="78278" relation="include">
        </childnode>
        <childnode refid="78279" relation="include">
        </childnode>
        <childnode refid="78265" relation="include">
        </childnode>
      </node>
      <node id="78061">
        <label>pxr/usd/usdGeom/pointBased.h</label>
        <link refid="point_based_8h"/>
        <childnode refid="78062" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78068" relation="include">
        </childnode>
      </node>
      <node id="78009">
        <label>pxr/usd/usdGeom/visibilityAPI.h</label>
        <link refid="visibility_a_p_i_8h"/>
      </node>
      <node id="77950">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="78148">
        <label>pxr/imaging/hd/dataSourceLocator.h</label>
        <link refid="data_source_locator_8h_source"/>
        <childnode refid="78149" relation="include">
        </childnode>
        <childnode refid="78154" relation="include">
        </childnode>
        <childnode refid="78373" relation="include">
        </childnode>
        <childnode refid="78231" relation="include">
        </childnode>
        <childnode refid="78328" relation="include">
        </childnode>
        <childnode refid="78348" relation="include">
        </childnode>
        <childnode refid="78374" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
      </node>
      <node id="78092">
        <label>pxr/usd/usd/primRange.h</label>
        <link refid="prim_range_8h_source"/>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="77906">
        <label>pxr/base/tf/ostreamMethods.h</label>
        <link refid="ostream_methods_8h"/>
      </node>
      <node id="78051">
        <label>pxr/usd/usdGeom/xformable.h</label>
        <link refid="xformable_8h"/>
        <childnode refid="78052" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78049" relation="include">
        </childnode>
        <childnode refid="78010" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
        <childnode refid="77922" relation="include">
        </childnode>
        <childnode refid="78035" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78033" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78160">
        <label>pxr/imaging/hd/coneSchema.h</label>
        <link refid="cone_schema_8h_source"/>
      </node>
      <node id="78058">
        <label>pxr/usd/usdGeom/cylinder.h</label>
        <link refid="usd_2usd_geom_2cylinder_8h"/>
      </node>
      <node id="78342">
        <label>pxr/imaging/hdEmbree/renderDelegate.h</label>
        <link refid="mbree_2render_delegate_8h_source"/>
      </node>
      <node id="78277">
        <label>pxr/imaging/hdx/oitVolumeRenderTask.h</label>
        <link refid="oit_volume_render_task_8h_source"/>
      </node>
      <node id="78319">
        <label>pxr/imaging/hd/flattenedMaterialBindingsDataSourceProvider.h</label>
        <link refid="flattened_material_bindings_data_source_provider_8h_source"/>
      </node>
      <node id="78298">
        <label>pxr/imaging/hdsi/coordSysPrimSceneIndex.h</label>
        <link refid="coord_sys_prim_scene_index_8h_source"/>
      </node>
      <node id="78213">
        <label>pxr/imaging/hd/sphereSchema.h</label>
        <link refid="sphere_schema_8h_source"/>
      </node>
      <node id="78162">
        <label>pxr/imaging/hd/coordSysSchema.h</label>
        <link refid="coord_sys_schema_8h_source"/>
      </node>
      <node id="78226">
        <label>pxr/usdImaging/usdImaging/modelSchema.h</label>
        <link refid="model_schema_8h_source"/>
      </node>
      <node id="77929">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="78200">
        <label>pxr/imaging/hdx/pickFromRenderBufferTask.h</label>
        <link refid="pick_from_render_buffer_task_8h_source"/>
      </node>
      <node id="77996">
        <label>pxr/usdImaging/usdImaging/dataSourcePrim.h</label>
        <link refid="data_source_prim_8h_source"/>
        <childnode refid="77997" relation="include">
        </childnode>
        <childnode refid="77998" relation="include">
        </childnode>
        <childnode refid="78006" relation="include">
        </childnode>
        <childnode refid="77995" relation="include">
        </childnode>
        <childnode refid="78007" relation="include">
        </childnode>
        <childnode refid="78008" relation="include">
        </childnode>
      </node>
      <node id="78016">
        <label>pxr/usd/usdLux/shapingAPI.h</label>
        <link refid="shaping_a_p_i_8h"/>
      </node>
      <node id="77905">
        <label>pxr/base/tf/smallVector.h</label>
        <link refid="small_vector_8h"/>
        <childnode refid="77906" relation="include">
        </childnode>
        <childnode refid="77907" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
        <childnode refid="78125" relation="include">
        </childnode>
        <childnode refid="78148" relation="include">
        </childnode>
        <childnode refid="78376" relation="include">
        </childnode>
        <childnode refid="78347" relation="include">
        </childnode>
        <childnode refid="78380" relation="include">
        </childnode>
      </node>
      <node id="78328">
        <label>pxr/imaging/hd/invalidatableContainerDataSource.h</label>
        <link refid="invalidatable_container_data_source_8h_source"/>
      </node>
      <node id="78377">
        <label>pxr/imaging/hd/materialNetwork2Interface.h</label>
        <link refid="material_network2_interface_8h_source"/>
      </node>
      <node id="78168">
        <label>pxr/imaging/hd/extComputationOutputSchema.h</label>
        <link refid="ext_computation_output_schema_8h_source"/>
      </node>
      <node id="78091">
        <label>pxr/usd/usd/primCompositionQuery.h</label>
        <link refid="prim_composition_query_8h"/>
      </node>
      <node id="78212">
        <label>pxr/imaging/hd/selectionSchema.h</label>
        <link refid="selection_schema_8h_source"/>
      </node>
      <node id="78124">
        <label>pxr/usd/usdShade/types.h</label>
        <link refid="usd_2usd_shade_2types_8h_source"/>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78122" relation="include">
        </childnode>
        <childnode refid="78123" relation="include">
        </childnode>
        <childnode refid="78125" relation="include">
        </childnode>
      </node>
      <node id="78285">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="78279" relation="include">
        </childnode>
      </node>
      <node id="78114">
        <label>pxr/usd/usdShade/shader.h</label>
        <link refid="shader_8h"/>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="77937" relation="include">
        </childnode>
      </node>
      <node id="78153">
        <label>pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h</label>
        <link refid="ni_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="78017">
        <label>pxr/usd/usdLux/volumeLightAPI.h</label>
        <link refid="volume_light_a_p_i_8h"/>
      </node>
      <node id="77989">
        <label>pxr/usd/usd/modelAPI.h</label>
        <link refid="model_a_p_i_8h"/>
      </node>
      <node id="77923">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="78326">
        <label>pxr/usdImaging/usdImaging/flattenedModelDataSourceProvider.h</label>
        <link refid="flattened_model_data_source_provider_8h_source"/>
      </node>
      <node id="78302">
        <label>pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h</label>
        <link refid="material_binding_resolving_scene_index_8h_source"/>
      </node>
      <node id="78215">
        <label>pxr/imaging/hd/subdivisionTagsSchema.h</label>
        <link refid="subdivision_tags_schema_8h_source"/>
        <childnode refid="78174" relation="include">
        </childnode>
        <childnode refid="78216" relation="include">
        </childnode>
      </node>
      <node id="77990">
        <label>pxr/usd/usdGeom/modelAPI.h</label>
        <link refid="eom_2model_a_p_i_8h"/>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78334">
        <label>pxr/imaging/hd/rendererPlugin.h</label>
        <link refid="renderer_plugin_8h_source"/>
        <childnode refid="78335" relation="include">
        </childnode>
        <childnode refid="78336" relation="include">
        </childnode>
        <childnode refid="78337" relation="include">
        </childnode>
      </node>
      <node id="78297">
        <label>pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h</label>
        <link refid="generative_procedural_resolving_scene_index_8h_source"/>
      </node>
      <node id="77971">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="77972" relation="include">
        </childnode>
        <childnode refid="77973" relation="include">
        </childnode>
        <childnode refid="77974" relation="include">
        </childnode>
        <childnode refid="77975" relation="include">
        </childnode>
      </node>
      <node id="78324">
        <label>pxr/imaging/hd/flattenedXformDataSourceProvider.h</label>
        <link refid="flattened_xform_data_source_provider_8h_source"/>
      </node>
      <node id="78276">
        <label>pxr/imaging/hdx/oitRenderTask.h</label>
        <link refid="oit_render_task_8h_source"/>
      </node>
      <node id="78356">
        <label>pxr/imaging/hdPrman/renderTerminalOutputInvalidatingSceneIndexPlugin.h</label>
        <link refid="render_terminal_output_invalidating_scene_index_plugin_8h_source"/>
      </node>
      <node id="78102">
        <label>pxr/usd/usdPhysics/fixedJoint.h</label>
        <link refid="fixed_joint_8h"/>
      </node>
      <node id="78140">
        <label>pxr/usdImaging/usdImaging/lightAPIAdapter.h</label>
        <link refid="light_a_p_i_adapter_8h_source"/>
      </node>
      <node id="78244">
        <label>pxr/imaging/hdSt/basisCurves.h</label>
        <link refid="imaging_2hd_st_2basis_curves_8h_source"/>
      </node>
      <node id="78081">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="78278">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="78175">
        <label>pxr/imaging/hd/imageShaderSchema.h</label>
        <link refid="image_shader_schema_8h_source"/>
      </node>
      <node id="78187">
        <label>pxr/imaging/hd/materialConnectionSchema.h</label>
        <link refid="material_connection_schema_8h_source"/>
      </node>
      <node id="77969">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="78030">
        <label>pxr/usd/usdShade/connectableAPI.h</label>
        <link refid="connectable_a_p_i_8h"/>
        <childnode refid="78031" relation="include">
        </childnode>
        <childnode refid="78032" relation="include">
        </childnode>
        <childnode refid="78006" relation="include">
        </childnode>
      </node>
      <node id="78281">
        <label>pxr/imaging/hdx/shadowTask.h</label>
        <link refid="shadow_task_8h_source"/>
        <childnode refid="78279" relation="include">
        </childnode>
      </node>
      <node id="78193">
        <label>pxr/imaging/hd/sampleFilterSchema.h</label>
        <link refid="sample_filter_schema_8h_source"/>
      </node>
      <node id="78043">
        <label>pxr/usd/usd/collectionPredicateLibrary.h</label>
        <link refid="collection_predicate_library_8h"/>
      </node>
      <node id="78036">
        <label>pxr/usd/usdSkel/bindingAPI.h</label>
        <link refid="binding_a_p_i_8h"/>
      </node>
      <node id="77992">
        <label>pxr/usd/usdGeom/primvarsAPI.h</label>
        <link refid="primvars_a_p_i_8h"/>
        <childnode refid="77993" relation="include">
        </childnode>
        <childnode refid="77994" relation="include">
        </childnode>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78346">
        <label>pxr/imaging/hdSt/renderParam.h</label>
        <link refid="hd_st_2render_param_8h_source"/>
      </node>
      <node id="78067">
        <label>pxr/usd/usdGeom/nurbsPatch.h</label>
        <link refid="nurbs_patch_8h"/>
      </node>
      <node id="78103">
        <label>pxr/usd/usdPhysics/prismaticJoint.h</label>
        <link refid="prismatic_joint_8h"/>
      </node>
      <node id="78336">
        <label>pxr/imaging/hdPrmanLoader/rendererPlugin.h</label>
        <link refid="rman_loader_2renderer_plugin_8h_source"/>
      </node>
      <node id="78266">
        <label>pxr/imaging/hd/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="78264" relation="include">
        </childnode>
        <childnode refid="78267" relation="include">
        </childnode>
        <childnode refid="78268" relation="include">
        </childnode>
        <childnode refid="78269" relation="include">
        </childnode>
        <childnode refid="78270" relation="include">
        </childnode>
        <childnode refid="78199" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="77960">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="77961" relation="include">
        </childnode>
        <childnode refid="77962" relation="include">
        </childnode>
        <childnode refid="77963" relation="include">
        </childnode>
        <childnode refid="77964" relation="include">
        </childnode>
        <childnode refid="77965" relation="include">
        </childnode>
        <childnode refid="77966" relation="include">
        </childnode>
        <childnode refid="77967" relation="include">
        </childnode>
        <childnode refid="77968" relation="include">
        </childnode>
        <childnode refid="77969" relation="include">
        </childnode>
        <childnode refid="77970" relation="include">
        </childnode>
      </node>
      <node id="77931">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="78361">
        <label>pxr/imaging/hd/sceneIndexPluginRegistry.h</label>
        <link refid="scene_index_plugin_registry_8h_source"/>
      </node>
      <node id="78178">
        <label>pxr/imaging/hd/instanceIndicesSchema.h</label>
        <link refid="instance_indices_schema_8h_source"/>
      </node>
      <node id="78157">
        <label>pxr/imaging/hd/basisCurvesSchema.h</label>
        <link refid="basis_curves_schema_8h_source"/>
      </node>
      <node id="78084">
        <label>pxr/usd/usdVol/fieldBase.h</label>
        <link refid="field_base_8h"/>
        <childnode refid="78085" relation="include">
        </childnode>
      </node>
      <node id="78021">
        <label>pxr/usd/usdPhysics/driveAPI.h</label>
        <link refid="drive_a_p_i_8h"/>
      </node>
      <node id="77955">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="78050">
        <label>pxr/usd/usdGeom/xformOp.h</label>
        <link refid="xform_op_8h"/>
        <childnode refid="78051" relation="include">
        </childnode>
        <childnode refid="78010" relation="include">
        </childnode>
      </node>
      <node id="78113">
        <label>pxr/usd/usdShade/nodeGraph.h</label>
        <link refid="node_graph_8h"/>
        <childnode refid="78031" relation="include">
        </childnode>
      </node>
      <node id="78012">
        <label>pxr/usd/usdLux/lightListAPI.h</label>
        <link refid="light_list_a_p_i_8h"/>
      </node>
      <node id="77914">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="77915" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
        <childnode refid="77929" relation="include">
        </childnode>
        <childnode refid="77930" relation="include">
        </childnode>
        <childnode refid="77931" relation="include">
        </childnode>
        <childnode refid="77932" relation="include">
        </childnode>
        <childnode refid="77987" relation="include">
        </childnode>
        <childnode refid="77988" relation="include">
        </childnode>
      </node>
      <node id="78311">
        <label>pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h</label>
        <link refid="extent_resolving_scene_index_8h_source"/>
      </node>
      <node id="78363">
        <label>pxr/imaging/hdGp/generativeProceduralPlugin.h</label>
        <link refid="generative_procedural_plugin_8h_source"/>
        <childnode refid="78364" relation="include">
        </childnode>
      </node>
      <node id="78371">
        <label>pxr/usdImaging/usdImaging/dataSourceStage.h</label>
        <link refid="data_source_stage_8h_source"/>
      </node>
      <node id="78254">
        <label>pxr/imaging/hdSt/volume.h</label>
        <link refid="imaging_2hd_st_2volume_8h_source"/>
      </node>
      <node id="78191">
        <label>pxr/imaging/hd/displayFilterSchema.h</label>
        <link refid="display_filter_schema_8h_source"/>
      </node>
      <node id="78044">
        <label>pxr/usd/usd/notice.h</label>
        <link refid="usd_2usd_2notice_8h_source"/>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="78045" relation="include">
        </childnode>
      </node>
      <node id="78183">
        <label>pxr/imaging/hd/cameraSchema.h</label>
        <link refid="camera_schema_8h_source"/>
      </node>
      <node id="77912">
        <label>pxr/usd/usd/clipsAPI.h</label>
        <link refid="clips_a_p_i_8h"/>
        <childnode refid="77913" relation="include">
        </childnode>
      </node>
      <node id="78360">
        <label>pxr/imaging/hdSt/nurbsApproximatingSceneIndexPlugin.h</label>
        <link refid="nurbs_approximating_scene_index_plugin_8h_source"/>
      </node>
      <node id="77972">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="77967">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="78359">
        <label>pxr/imaging/hdSt/implicitSurfaceSceneIndexPlugin.h</label>
        <link refid="implicit_surface_scene_index_plugin_8h_source"/>
      </node>
      <node id="78325">
        <label>pxr/usdImaging/usdImaging/flattenedGeomModelDataSourceProvider.h</label>
        <link refid="flattened_geom_model_data_source_provider_8h_source"/>
      </node>
      <node id="78306">
        <label>pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h</label>
        <link refid="prim_type_notice_batching_scene_index_8h"/>
      </node>
      <node id="78027">
        <label>pxr/usd/usdPhysics/rigidBodyAPI.h</label>
        <link refid="rigid_body_a_p_i_8h"/>
      </node>
      <node id="78218">
        <label>pxr/imaging/hd/visibilitySchema.h</label>
        <link refid="visibility_schema_8h_source"/>
      </node>
      <node id="78235">
        <label>pxr/imaging/hd/mergingSceneIndex.h</label>
        <link refid="merging_scene_index_8h_source"/>
        <childnode refid="78236" relation="include">
        </childnode>
      </node>
      <node id="78255">
        <label>pxr/imaging/hdPrman/cone.h</label>
        <link refid="imaging_2hd_prman_2cone_8h_source"/>
      </node>
      <node id="77961">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="77983">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="77991">
        <label>pxr/usd/usdGeom/motionAPI.h</label>
        <link refid="motion_a_p_i_8h"/>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78064">
        <label>pxr/usd/usdGeom/hermiteCurves.h</label>
        <link refid="hermite_curves_8h"/>
      </node>
      <node id="77926">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="78290">
        <label>pxr/imaging/hdx/visualizeAovTask.h</label>
        <link refid="visualize_aov_task_8h_source"/>
      </node>
      <node id="78105">
        <label>pxr/usd/usdPhysics/sphericalJoint.h</label>
        <link refid="spherical_joint_8h"/>
      </node>
      <node id="78082">
        <label>pxr/usd/usdGeom/xform.h</label>
        <link refid="xform_8h"/>
      </node>
      <node id="77987">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="78190">
        <label>pxr/imaging/hd/materialNodeSchema.h</label>
        <link refid="material_node_schema_8h_source"/>
        <childnode refid="78191" relation="include">
        </childnode>
        <childnode refid="78192" relation="include">
        </childnode>
        <childnode refid="78193" relation="include">
        </childnode>
      </node>
      <node id="78259">
        <label>pxr/imaging/hdPrman/sphere.h</label>
        <link refid="imaging_2hd_prman_2sphere_8h_source"/>
      </node>
      <node id="78110">
        <label>pxr/usd/usdRender/settings.h</label>
        <link refid="settings_8h"/>
      </node>
      <node id="78378">
        <label>pxr/imaging/hdPrman/matfiltConvertPreviewMaterial.h</label>
        <link refid="matfilt_convert_preview_material_8h_source"/>
      </node>
      <node id="77998">
        <label>pxr/usdImaging/usdImaging/dataSourceGprim.h</label>
        <link refid="data_source_gprim_8h_source"/>
        <childnode refid="77999" relation="include">
        </childnode>
        <childnode refid="78000" relation="include">
        </childnode>
        <childnode refid="78001" relation="include">
        </childnode>
        <childnode refid="78002" relation="include">
        </childnode>
        <childnode refid="78003" relation="include">
        </childnode>
        <childnode refid="78004" relation="include">
        </childnode>
        <childnode refid="78005" relation="include">
        </childnode>
      </node>
      <node id="77945">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="77915">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="77916" relation="include">
        </childnode>
        <childnode refid="77922" relation="include">
        </childnode>
      </node>
      <node id="77954">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="78358">
        <label>pxr/imaging/hdSt/dependencySceneIndexPlugin.h</label>
        <link refid="dependency_scene_index_plugin_8h_source"/>
      </node>
      <node id="78282">
        <label>pxr/imaging/hdx/simpleLightTask.h</label>
        <link refid="simple_light_task_8h_source"/>
      </node>
      <node id="77920">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="78373">
        <label>pxr/imaging/hd/dirtyBitsTranslator.h</label>
        <link refid="dirty_bits_translator_8h_source"/>
      </node>
      <node id="78262">
        <label>pxr/imaging/hd/task.h</label>
        <link refid="task_8h_source"/>
        <childnode refid="78263" relation="include">
        </childnode>
        <childnode refid="78266" relation="include">
        </childnode>
        <childnode refid="78271" relation="include">
        </childnode>
        <childnode refid="78272" relation="include">
        </childnode>
        <childnode refid="78273" relation="include">
        </childnode>
        <childnode refid="78199" relation="include">
        </childnode>
        <childnode refid="78274" relation="include">
        </childnode>
        <childnode refid="78280" relation="include">
        </childnode>
        <childnode refid="78281" relation="include">
        </childnode>
        <childnode refid="78282" relation="include">
        </childnode>
        <childnode refid="78283" relation="include">
        </childnode>
        <childnode refid="78279" relation="include">
        </childnode>
      </node>
      <node id="78264">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="78125">
        <label>pxr/usd/usdShade/utils.h</label>
        <link refid="usd_2usd_shade_2utils_8h_source"/>
        <childnode refid="78122" relation="include">
        </childnode>
        <childnode refid="78123" relation="include">
        </childnode>
      </node>
      <node id="78364">
        <label>pxr/imaging/hdGp/generativeProceduralPluginRegistry.h</label>
        <link refid="generative_procedural_plugin_registry_8h_source"/>
      </node>
      <node id="78308">
        <label>pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h</label>
        <link refid="render_settings_filtering_scene_index_8h_source"/>
      </node>
      <node id="78217">
        <label>pxr/imaging/hd/systemSchema.h</label>
        <link refid="system_schema_8h_source"/>
      </node>
      <node id="78093">
        <label>pxr/usd/usd/property.h</label>
        <link refid="usd_2property_8h_source"/>
        <childnode refid="78094" relation="include">
        </childnode>
        <childnode refid="78129" relation="include">
        </childnode>
      </node>
      <node id="77963">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="78300">
        <label>pxr/imaging/hdsi/implicitSurfaceSceneIndex.h</label>
        <link refid="implicit_surface_scene_index_8h_source"/>
      </node>
      <node id="78287">
        <label>pxr/imaging/hdx/colorCorrectionTask.h</label>
        <link refid="color_correction_task_8h_source"/>
        <childnode refid="78279" relation="include">
        </childnode>
      </node>
      <node id="78310">
        <label>pxr/usdImaging/usdImaging/drawModeSceneIndex.h</label>
        <link refid="draw_mode_scene_index_8h_source"/>
      </node>
      <node id="78205">
        <label>pxr/imaging/hd/purposeSchema.h</label>
        <link refid="purpose_schema_8h_source"/>
      </node>
      <node id="77978">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="78062">
        <label>pxr/usd/usdGeom/curves.h</label>
        <link refid="curves_8h"/>
        <childnode refid="78063" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
      </node>
      <node id="78042">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="77914" relation="include">
        </childnode>
      </node>
      <node id="77966">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="78195">
        <label>pxr/imaging/hd/nurbsCurvesSchema.h</label>
        <link refid="nurbs_curves_schema_8h_source"/>
      </node>
      <node id="78372">
        <label>pxr/usdImaging/usdImaging/flattenedDataSourceProviders.h</label>
        <link refid="usd_imaging_2usd_imaging_2flattened_data_source_providers_8h_source"/>
      </node>
      <node id="77916">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="77917" relation="include">
        </childnode>
        <childnode refid="77918" relation="include">
        </childnode>
        <childnode refid="77919" relation="include">
        </childnode>
        <childnode refid="77920" relation="include">
        </childnode>
        <childnode refid="77921" relation="include">
        </childnode>
      </node>
      <node id="78015">
        <label>pxr/usd/usdLux/shadowAPI.h</label>
        <link refid="shadow_a_p_i_8h"/>
      </node>
      <node id="78094">
        <label>pxr/usd/usd/attribute.h</label>
        <link refid="attribute_8h_source"/>
        <childnode refid="78047" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78119" relation="include">
        </childnode>
        <childnode refid="78120" relation="include">
        </childnode>
        <childnode refid="78050" relation="include">
        </childnode>
        <childnode refid="78122" relation="include">
        </childnode>
        <childnode refid="78123" relation="include">
        </childnode>
        <childnode refid="78124" relation="include">
        </childnode>
        <childnode refid="78125" relation="include">
        </childnode>
        <childnode refid="78126" relation="include">
        </childnode>
        <childnode refid="78121" relation="include">
        </childnode>
        <childnode refid="78127" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78128" relation="include">
        </childnode>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="77937" relation="include">
        </childnode>
      </node>
      <node id="77924">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="78129">
        <label>pxr/usd/usd/relationship.h</label>
        <link refid="relationship_8h_source"/>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78121" relation="include">
        </childnode>
        <childnode refid="78130" relation="include">
        </childnode>
      </node>
      <node id="77928">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="78243">
        <label>pxr/imaging/hdPrman/basisCurves.h</label>
        <link refid="imaging_2hd_prman_2basis_curves_8h_source"/>
      </node>
      <node id="78008">
        <label>pxr/usdImaging/usdVolImaging/dataSourceFieldAsset.h</label>
        <link refid="data_source_field_asset_8h_source"/>
      </node>
      <node id="78353">
        <label>pxr/imaging/hdGp/sceneIndexPlugin.h</label>
        <link refid="p_2scene_index_plugin_8h_source"/>
      </node>
      <node id="78073">
        <label>pxr/usd/usdSkel/root.h</label>
        <link refid="root_8h"/>
      </node>
      <node id="78202">
        <label>pxr/imaging/hd/extComputationPrimvarSchema.h</label>
        <link refid="ext_computation_primvar_schema_8h_source"/>
        <childnode refid="78203" relation="include">
        </childnode>
      </node>
      <node id="78025">
        <label>pxr/usd/usdPhysics/materialAPI.h</label>
        <link refid="usd_physics_2material_a_p_i_8h"/>
      </node>
      <node id="78020">
        <label>pxr/usd/usdPhysics/collisionAPI.h</label>
        <link refid="collision_a_p_i_8h"/>
      </node>
      <node id="78265">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="78081" relation="include">
        </childnode>
      </node>
      <node id="78368">
        <label>pxr/imaging/hd/selectionsSchema.h</label>
        <link refid="selections_schema_8h_source"/>
      </node>
      <node id="78198">
        <label>pxr/imaging/hd/primOriginSchema.h</label>
        <link refid="prim_origin_schema_8h_source"/>
        <childnode refid="78199" relation="include">
        </childnode>
      </node>
      <node id="78186">
        <label>pxr/imaging/hd/materialBindingsSchema.h</label>
        <link refid="material_bindings_schema_8h_source"/>
      </node>
      <node id="78143">
        <label>pxr/usdImaging/usdImaging/dataSourceUsdPrimInfo.h</label>
        <link refid="data_source_usd_prim_info_8h_source"/>
      </node>
      <node id="78048">
        <label>pxr/usd/usdGeom/bboxCache.h</label>
        <link refid="bbox_cache_8h_source"/>
        <childnode refid="77990" relation="include">
        </childnode>
      </node>
      <node id="77988">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="77937" relation="include">
        </childnode>
      </node>
      <node id="78089">
        <label>pxr/usd/usd/inherits.h</label>
        <link refid="inherits_8h_source"/>
      </node>
      <node id="77982">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="78291">
        <label>pxr/imaging/hd/unitTestDelegate.h</label>
        <link refid="unit_test_delegate_8h_source"/>
        <childnode refid="78264" relation="include">
        </childnode>
      </node>
      <node id="78245">
        <label>pxr/imaging/hd/mesh.h</label>
        <link refid="imaging_2hd_2mesh_8h_source"/>
        <childnode refid="78246" relation="include">
        </childnode>
        <childnode refid="78247" relation="include">
        </childnode>
        <childnode refid="78248" relation="include">
        </childnode>
      </node>
      <node id="78305">
        <label>pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h</label>
        <link refid="pinned_curve_expanding_scene_index_8h_source"/>
      </node>
      <node id="77939">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="78203">
        <label>pxr/imaging/hd/extComputationPrimvarsSchema.h</label>
        <link refid="ext_computation_primvars_schema_8h_source"/>
      </node>
      <node id="78234">
        <label>pxr/imaging/hd/materialFilteringSceneIndexBase.h</label>
        <link refid="material_filtering_scene_index_base_8h_source"/>
      </node>
      <node id="78321">
        <label>pxr/imaging/hd/flattenedPrimvarsDataSourceProvider.h</label>
        <link refid="flattened_primvars_data_source_provider_8h_source"/>
      </node>
      <node id="78173">
        <label>pxr/imaging/hd/geomSubsetsSchema.h</label>
        <link refid="geom_subsets_schema_8h_source"/>
        <childnode refid="78157" relation="include">
        </childnode>
        <childnode refid="78174" relation="include">
        </childnode>
      </node>
      <node id="78035">
        <label>pxr/usd/usdLux/pluginLight.h</label>
        <link refid="plugin_light_8h"/>
      </node>
      <node id="77970">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="78182">
        <label>pxr/imaging/hd/lensDistortionSchema.h</label>
        <link refid="lens_distortion_schema_8h_source"/>
        <childnode refid="78183" relation="include">
        </childnode>
      </node>
      <node id="77938">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="78166">
        <label>pxr/imaging/hd/dependenciesSchema.h</label>
        <link refid="dependencies_schema_8h_source"/>
      </node>
      <node id="78079">
        <label>pxr/usd/usdGeom/camera.h</label>
        <link refid="usd_2usd_geom_2camera_8h"/>
        <childnode refid="78080" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
        <childnode refid="77997" relation="include">
        </childnode>
      </node>
      <node id="77921">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="78135">
        <label>pxr/usd/usdSkel/skeletonQuery.h</label>
        <link refid="skeleton_query_8h"/>
        <childnode refid="77985" relation="include">
        </childnode>
      </node>
      <node id="78174">
        <label>pxr/imaging/hd/meshSchema.h</label>
        <link refid="mesh_schema_8h_source"/>
      </node>
      <node id="77951">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="78167">
        <label>pxr/imaging/hd/extComputationInputComputationSchema.h</label>
        <link refid="ext_computation_input_computation_schema_8h_source"/>
      </node>
      <node id="78220">
        <label>pxr/imaging/hd/volumeFieldSchema.h</label>
        <link refid="volume_field_schema_8h_source"/>
      </node>
      <node id="78251">
        <label>pxr/imaging/hdSt/points.h</label>
        <link refid="imaging_2hd_st_2points_8h_source"/>
      </node>
      <node id="78152">
        <label>pxr/imaging/hd/dataSourceHash.h</label>
        <link refid="data_source_hash_8h_source"/>
        <childnode refid="78153" relation="include">
        </childnode>
      </node>
      <node id="78022">
        <label>pxr/usd/usdPhysics/filteredPairsAPI.h</label>
        <link refid="filtered_pairs_a_p_i_8h"/>
      </node>
      <node id="78032">
        <label>pxr/usd/usdShade/shaderDefUtils.h</label>
        <link refid="shader_def_utils_8h_source"/>
      </node>
      <node id="78230">
        <label>pxr/usdImaging/usdImaging/usdRenderVarSchema.h</label>
        <link refid="usd_render_var_schema_8h_source"/>
      </node>
      <node id="77941">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="78177">
        <label>pxr/imaging/hd/instancedBySchema.h</label>
        <link refid="instanced_by_schema_8h_source"/>
      </node>
      <node id="77976">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="78170">
        <label>pxr/imaging/hd/extentSchema.h</label>
        <link refid="extent_schema_8h_source"/>
        <childnode refid="78171" relation="include">
        </childnode>
      </node>
      <node id="78228">
        <label>pxr/usdImaging/usdImaging/usdRenderProductSchema.h</label>
        <link refid="usd_render_product_schema_8h_source"/>
      </node>
      <node id="78150">
        <label>pxr/imaging/hd/containerDataSourceEditor.h</label>
        <link refid="container_data_source_editor_8h_source"/>
        <childnode refid="78151" relation="include">
        </childnode>
      </node>
      <node id="78192">
        <label>pxr/imaging/hd/integratorSchema.h</label>
        <link refid="integrator_schema_8h_source"/>
      </node>
      <node id="78097">
        <label>pxr/usd/usdGeom/imageable.h</label>
        <link refid="imageable_8h"/>
        <childnode refid="77990" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78051" relation="include">
        </childnode>
        <childnode refid="78100" relation="include">
        </childnode>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78267">
        <label>pxr/imaging/hd/unitTestNullRenderPass.h</label>
        <link refid="unit_test_null_render_pass_8h_source"/>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="78029">
        <label>pxr/usd/usdRi/splineAPI.h</label>
        <link refid="spline_a_p_i_8h"/>
      </node>
      <node id="78201">
        <label>pxr/imaging/hd/primvarSchema.h</label>
        <link refid="primvar_schema_8h_source"/>
        <childnode refid="78202" relation="include">
        </childnode>
        <childnode refid="78204" relation="include">
        </childnode>
      </node>
      <node id="78118">
        <label>pxr/usd/usdUI/backdrop.h</label>
        <link refid="backdrop_8h"/>
      </node>
      <node id="78209">
        <label>pxr/imaging/hd/renderSettingsSchema.h</label>
        <link refid="render_settings_schema_8h_source"/>
      </node>
      <node id="78104">
        <label>pxr/usd/usdPhysics/revoluteJoint.h</label>
        <link refid="revolute_joint_8h"/>
      </node>
      <node id="78038">
        <label>pxr/usd/usdUI/sceneGraphPrimAPI.h</label>
        <link refid="scene_graph_prim_a_p_i_8h"/>
      </node>
      <node id="78380">
        <label>pxr/imaging/hd/timeSampleArray.h</label>
        <link refid="time_sample_array_8h_source"/>
        <childnode refid="78237" relation="include">
        </childnode>
        <childnode refid="78381" relation="include">
        </childnode>
        <childnode refid="78292" relation="include">
        </childnode>
      </node>
      <node id="78109">
        <label>pxr/usd/usdRender/product.h</label>
        <link refid="product_8h"/>
      </node>
      <node id="78269">
        <label>pxr/imaging/hdSt/imageShaderRenderPass.h</label>
        <link refid="image_shader_render_pass_8h_source"/>
      </node>
      <node id="78090">
        <label>pxr/usd/usd/payloads.h</label>
        <link refid="payloads_8h_source"/>
      </node>
      <node id="78028">
        <label>pxr/usd/usdRi/materialAPI.h</label>
        <link refid="usd_ri_2material_a_p_i_8h"/>
      </node>
      <node id="78023">
        <label>pxr/usd/usdPhysics/limitAPI.h</label>
        <link refid="limit_a_p_i_8h"/>
      </node>
      <node id="78237">
        <label>pxr/imaging/hd/sceneDelegate.h</label>
        <link refid="scene_delegate_8h_source"/>
        <childnode refid="78238" relation="include">
        </childnode>
        <childnode refid="78239" relation="include">
        </childnode>
        <childnode refid="78241" relation="include">
        </childnode>
        <childnode refid="78261" relation="include">
        </childnode>
        <childnode refid="78262" relation="include">
        </childnode>
        <childnode refid="78291" relation="include">
        </childnode>
        <childnode refid="78292" relation="include">
        </childnode>
        <childnode refid="78260" relation="include">
        </childnode>
        <childnode refid="78293" relation="include">
        </childnode>
        <childnode refid="78279" relation="include">
        </childnode>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="78294" relation="include">
        </childnode>
      </node>
      <node id="78185">
        <label>pxr/imaging/hd/materialBindingSchema.h</label>
        <link refid="material_binding_schema_8h_source"/>
        <childnode refid="78186" relation="include">
        </childnode>
      </node>
      <node id="78338">
        <label>pxr/imaging/hd/rendererPluginHandle.h</label>
        <link refid="renderer_plugin_handle_8h_source"/>
        <childnode refid="78339" relation="include">
        </childnode>
      </node>
      <node id="77917">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="78088">
        <label>pxr/usdImaging/usdImaging/dataSourceAttribute.h</label>
        <link refid="data_source_attribute_8h_source"/>
        <childnode refid="77994" relation="include">
        </childnode>
      </node>
      <node id="78365">
        <label>pxr/usdImaging/usdImaging/sceneIndices.h</label>
        <link refid="scene_indices_8h_source"/>
      </node>
      <node id="78295">
        <label>pxr/imaging/hd/noticeBatchingSceneIndex.h</label>
        <link refid="notice_batching_scene_index_8h_source"/>
        <childnode refid="78236" relation="include">
        </childnode>
      </node>
      <node id="78299">
        <label>pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h</label>
        <link refid="ext_computation_primvar_pruning_scene_index_8h_source"/>
      </node>
      <node id="78063">
        <label>pxr/usd/usdGeom/basisCurves.h</label>
        <link refid="usd_2usd_geom_2basis_curves_8h"/>
        <childnode refid="77999" relation="include">
        </childnode>
      </node>
      <node id="77948">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="78049">
        <label>pxr/usd/usdGeom/xformCache.h</label>
        <link refid="xform_cache_8h_source"/>
        <childnode refid="78048" relation="include">
        </childnode>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="77946" relation="include">
        </childnode>
      </node>
      <node id="78322">
        <label>pxr/imaging/hd/flattenedPurposeDataSourceProvider.h</label>
        <link refid="flattened_purpose_data_source_provider_8h_source"/>
      </node>
      <node id="77959">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="77925">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="78351">
        <label>pxr/imaging/hd/legacyPrimSceneIndex.h</label>
        <link refid="legacy_prim_scene_index_8h_source"/>
        <childnode refid="78236" relation="include">
        </childnode>
      </node>
      <node id="78352">
        <label>pxr/imaging/hd/sceneIndexPlugin.h</label>
        <link refid="scene_index_plugin_8h_source"/>
        <childnode refid="78353" relation="include">
        </childnode>
        <childnode refid="78354" relation="include">
        </childnode>
        <childnode refid="78355" relation="include">
        </childnode>
        <childnode refid="78356" relation="include">
        </childnode>
        <childnode refid="78357" relation="include">
        </childnode>
        <childnode refid="78358" relation="include">
        </childnode>
        <childnode refid="78359" relation="include">
        </childnode>
        <childnode refid="78360" relation="include">
        </childnode>
      </node>
      <node id="78210">
        <label>pxr/imaging/hd/renderVarSchema.h</label>
        <link refid="render_var_schema_8h_source"/>
      </node>
      <node id="78072">
        <label>pxr/usd/usdProc/generativeProcedural.h</label>
        <link refid="usd_2usd_proc_2generative_procedural_8h"/>
      </node>
      <node id="78279">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="78169">
        <label>pxr/imaging/hd/extComputationSchema.h</label>
        <link refid="ext_computation_schema_8h_source"/>
      </node>
      <node id="77968">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="78221">
        <label>pxr/imaging/hd/xformSchema.h</label>
        <link refid="xform_schema_8h_source"/>
      </node>
      <node id="78253">
        <label>pxr/imaging/hdPrman/volume.h</label>
        <link refid="imaging_2hd_prman_2volume_8h_source"/>
      </node>
      <node id="77962">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="78131">
        <label>pxr/usd/usd/references.h</label>
        <link refid="references_8h_source"/>
        <childnode refid="78095" relation="include">
        </childnode>
      </node>
      <node id="78161">
        <label>pxr/imaging/hd/coordSysBindingSchema.h</label>
        <link refid="coord_sys_binding_schema_8h_source"/>
      </node>
      <node id="78362">
        <label>pxr/imaging/hdGp/generativeProcedural.h</label>
        <link refid="imaging_2hd_gp_2generative_procedural_8h_source"/>
        <childnode refid="78363" relation="include">
        </childnode>
        <childnode refid="78297" relation="include">
        </childnode>
      </node>
      <node id="77935">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="78159">
        <label>pxr/imaging/hd/categoriesSchema.h</label>
        <link refid="categories_schema_8h_source"/>
      </node>
      <node id="78312">
        <label>pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h</label>
        <link refid="pi_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="77997">
        <label>pxr/usdImaging/usdImaging/dataSourceCamera.h</label>
        <link refid="data_source_camera_8h_source"/>
      </node>
      <node id="78339">
        <label>pxr/imaging/hd/pluginRenderDelegateUniqueHandle.h</label>
        <link refid="plugin_render_delegate_unique_handle_8h_source"/>
        <childnode refid="78265" relation="include">
        </childnode>
      </node>
      <node id="77927">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="77928" relation="include">
        </childnode>
      </node>
      <node id="78367">
        <label>pxr/imaging/hd/vectorSchema.h</label>
        <link refid="vector_schema_8h_source"/>
        <childnode refid="78368" relation="include">
        </childnode>
        <childnode refid="78369" relation="include">
        </childnode>
      </node>
      <node id="78231">
        <label>pxr/imaging/hd/filteringSceneIndex.h</label>
        <link refid="filtering_scene_index_8h_source"/>
        <childnode refid="78232" relation="include">
        </childnode>
        <childnode refid="78233" relation="include">
        </childnode>
        <childnode refid="78234" relation="include">
        </childnode>
        <childnode refid="78235" relation="include">
        </childnode>
        <childnode refid="78295" relation="include">
        </childnode>
        <childnode refid="78296" relation="include">
        </childnode>
        <childnode refid="78297" relation="include">
        </childnode>
        <childnode refid="78298" relation="include">
        </childnode>
        <childnode refid="78299" relation="include">
        </childnode>
        <childnode refid="78300" relation="include">
        </childnode>
        <childnode refid="78301" relation="include">
        </childnode>
        <childnode refid="78302" relation="include">
        </childnode>
        <childnode refid="78303" relation="include">
        </childnode>
        <childnode refid="78304" relation="include">
        </childnode>
        <childnode refid="78305" relation="include">
        </childnode>
        <childnode refid="78306" relation="include">
        </childnode>
        <childnode refid="78307" relation="include">
        </childnode>
        <childnode refid="78308" relation="include">
        </childnode>
        <childnode refid="78309" relation="include">
        </childnode>
        <childnode refid="78310" relation="include">
        </childnode>
        <childnode refid="78311" relation="include">
        </childnode>
        <childnode refid="78153" relation="include">
        </childnode>
        <childnode refid="78312" relation="include">
        </childnode>
        <childnode refid="78313" relation="include">
        </childnode>
        <childnode refid="78314" relation="include">
        </childnode>
        <childnode refid="78315" relation="include">
        </childnode>
        <childnode refid="78316" relation="include">
        </childnode>
        <childnode refid="78317" relation="include">
        </childnode>
      </node>
      <node id="78151">
        <label>pxr/imaging/hd/dataSourceMaterialNetworkInterface.h</label>
        <link refid="data_source_material_network_interface_8h_source"/>
      </node>
      <node id="78142">
        <label>pxr/usdImaging/usdImaging/dataSourceStageGlobals.h</label>
        <link refid="data_source_stage_globals_8h_source"/>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="77999" relation="include">
        </childnode>
        <childnode refid="77997" relation="include">
        </childnode>
        <childnode refid="77998" relation="include">
        </childnode>
        <childnode refid="78006" relation="include">
        </childnode>
        <childnode refid="78000" relation="include">
        </childnode>
        <childnode refid="78003" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
        <childnode refid="77994" relation="include">
        </childnode>
        <childnode refid="78130" relation="include">
        </childnode>
        <childnode refid="78007" relation="include">
        </childnode>
        <childnode refid="78004" relation="include">
        </childnode>
        <childnode refid="78005" relation="include">
        </childnode>
        <childnode refid="78045" relation="include">
        </childnode>
        <childnode refid="78008" relation="include">
        </childnode>
      </node>
      <node id="78112">
        <label>pxr/usd/usdRender/var.h</label>
        <link refid="var_8h"/>
      </node>
      <node id="78128">
        <label>pxr/usdImaging/usdImaging/dataSourceAttributeColorSpace.h</label>
        <link refid="data_source_attribute_color_space_8h_source"/>
      </node>
      <node id="77958">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="78158">
        <label>pxr/imaging/hd/capsuleSchema.h</label>
        <link refid="capsule_schema_8h_source"/>
      </node>
      <node id="78275">
        <label>pxr/imaging/hdx/renderTask.h</label>
        <link refid="render_task_8h_source"/>
        <childnode refid="78276" relation="include">
        </childnode>
        <childnode refid="78277" relation="include">
        </childnode>
      </node>
      <node id="78304">
        <label>pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h</label>
        <link refid="nurbs_approximating_scene_index_8h_source"/>
      </node>
      <node id="78317">
        <label>pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h</label>
        <link refid="unloaded_draw_mode_scene_index_8h_source"/>
      </node>
      <node id="78119">
        <label>pxr/usd/usdGeom/constraintTarget.h</label>
        <link refid="constraint_target_8h_source"/>
        <childnode refid="77990" relation="include">
        </childnode>
      </node>
      <node id="77943">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="77944" relation="include">
        </childnode>
        <childnode refid="77945" relation="include">
        </childnode>
      </node>
      <node id="77956">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="78163">
        <label>pxr/imaging/hd/cubeSchema.h</label>
        <link refid="cube_schema_8h_source"/>
      </node>
      <node id="78026">
        <label>pxr/usd/usdPhysics/meshCollisionAPI.h</label>
        <link refid="mesh_collision_a_p_i_8h"/>
      </node>
      <node id="78224">
        <label>pxr/imaging/hdPrman/rileyRenderTargetSchema.h</label>
        <link refid="riley_render_target_schema_8h_source"/>
      </node>
      <node id="78066">
        <label>pxr/usd/usdGeom/mesh.h</label>
        <link refid="usd_2usd_geom_2mesh_8h"/>
        <childnode refid="78000" relation="include">
        </childnode>
      </node>
      <node id="78003">
        <label>pxr/usdImaging/usdImaging/dataSourcePoints.h</label>
        <link refid="data_source_points_8h_source"/>
      </node>
      <node id="78323">
        <label>pxr/imaging/hd/flattenedVisibilityDataSourceProvider.h</label>
        <link refid="flattened_visibility_data_source_provider_8h_source"/>
      </node>
      <node id="78294">
        <label>pxr/usdImaging/usdImaging/primvarDescCache.h</label>
        <link refid="primvar_desc_cache_8h"/>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="77937" relation="include">
        </childnode>
      </node>
      <node id="78111">
        <label>pxr/usd/usdRender/spec.h</label>
        <link refid="usd_render_2spec_8h"/>
      </node>
      <node id="78117">
        <label>pxr/usd/usdSkel/blendShapeQuery.h</label>
        <link refid="blend_shape_query_8h"/>
        <childnode refid="77985" relation="include">
        </childnode>
      </node>
      <node id="78060">
        <label>pxr/usd/usdGeom/plane.h</label>
        <link refid="usd_2usd_geom_2plane_8h"/>
      </node>
      <node id="78052">
        <label>pxr/usd/usdGeom/boundable.h</label>
        <link refid="boundable_8h"/>
        <childnode refid="78053" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="77916" relation="include">
        </childnode>
        <childnode refid="78072" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
        <childnode refid="78074" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
      </node>
      <node id="78313">
        <label>pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h</label>
        <link refid="render_settings_flattening_scene_index_8h_source"/>
      </node>
      <node id="78002">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsPatch.h</label>
        <link refid="data_source_nurbs_patch_8h_source"/>
      </node>
      <node id="78246">
        <label>pxr/imaging/hdEmbree/mesh.h</label>
        <link refid="imaging_2hd_embree_2mesh_8h_source"/>
      </node>
      <node id="78330">
        <label>pxr/imaging/hd/mapContainerDataSource.h</label>
        <link refid="map_container_data_source_8h_source"/>
      </node>
      <node id="78204">
        <label>pxr/imaging/hd/primvarsSchema.h</label>
        <link refid="primvars_schema_8h_source"/>
      </node>
      <node id="78369">
        <label>pxr/imaging/hd/vectorSchemaTypeDefs.h</label>
        <link refid="vector_schema_type_defs_8h_source"/>
        <childnode refid="78155" relation="include">
        </childnode>
      </node>
      <node id="78039">
        <label>pxr/usd/usd/flattenUtils.h</label>
        <link refid="flatten_utils_8h"/>
      </node>
      <node id="78301">
        <label>pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h</label>
        <link refid="legacy_display_style_override_scene_index_8h_source"/>
      </node>
      <node id="78214">
        <label>pxr/imaging/hd/splitDiopterSchema.h</label>
        <link refid="split_diopter_schema_8h_source"/>
        <childnode refid="78183" relation="include">
        </childnode>
      </node>
      <node id="78189">
        <label>pxr/imaging/hd/materialNodeParameterSchema.h</label>
        <link refid="material_node_parameter_schema_8h_source"/>
      </node>
      <node id="78086">
        <label>pxr/usd/usdVol/field3DAsset.h</label>
        <link refid="field3_d_asset_8h"/>
      </node>
      <node id="77937">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="77938" relation="include">
        </childnode>
        <childnode refid="77939" relation="include">
        </childnode>
        <childnode refid="77940" relation="include">
        </childnode>
        <childnode refid="77941" relation="include">
        </childnode>
        <childnode refid="77942" relation="include">
        </childnode>
        <childnode refid="77943" relation="include">
        </childnode>
        <childnode refid="77946" relation="include">
        </childnode>
        <childnode refid="77950" relation="include">
        </childnode>
        <childnode refid="77959" relation="include">
        </childnode>
        <childnode refid="77960" relation="include">
        </childnode>
        <childnode refid="77971" relation="include">
        </childnode>
        <childnode refid="77976" relation="include">
        </childnode>
        <childnode refid="77951" relation="include">
        </childnode>
        <childnode refid="77952" relation="include">
        </childnode>
        <childnode refid="77953" relation="include">
        </childnode>
        <childnode refid="77955" relation="include">
        </childnode>
        <childnode refid="77956" relation="include">
        </childnode>
        <childnode refid="77977" relation="include">
        </childnode>
        <childnode refid="77978" relation="include">
        </childnode>
        <childnode refid="77979" relation="include">
        </childnode>
        <childnode refid="77980" relation="include">
        </childnode>
        <childnode refid="77957" relation="include">
        </childnode>
        <childnode refid="77958" relation="include">
        </childnode>
        <childnode refid="77981" relation="include">
        </childnode>
        <childnode refid="77982" relation="include">
        </childnode>
        <childnode refid="77983" relation="include">
        </childnode>
        <childnode refid="77984" relation="include">
        </childnode>
        <childnode refid="77985" relation="include">
        </childnode>
        <childnode refid="77986" relation="include">
        </childnode>
      </node>
      <node id="78366">
        <label>pxr/usdImaging/usdviewq/hydraObserver.h</label>
        <link refid="hydra_observer_8h_source"/>
      </node>
      <node id="77994">
        <label>pxr/usdImaging/usdImaging/dataSourcePrimvars.h</label>
        <link refid="data_source_primvars_8h_source"/>
        <childnode refid="77995" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
      </node>
      <node id="78098">
        <label>pxr/usd/usdGeom/scope.h</label>
        <link refid="scope_8h"/>
      </node>
      <node id="78357">
        <label>pxr/imaging/hdSt/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_st_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="78037">
        <label>pxr/usd/usdUI/nodeGraphNodeAPI.h</label>
        <link refid="node_graph_node_a_p_i_8h"/>
      </node>
      <node id="78332">
        <label>pxr/imaging/hd/primDataSourceOverlayCache.h</label>
        <link refid="prim_data_source_overlay_cache_8h_source"/>
      </node>
      <node id="78292">
        <label>pxr/imaging/hdPrman/instancer.h</label>
        <link refid="rman_2instancer_8h_source"/>
        <childnode refid="78258" relation="include">
        </childnode>
      </node>
      <node id="78171">
        <label>pxr/usdImaging/usdImaging/extentsHintSchema.h</label>
        <link refid="extents_hint_schema_8h_source"/>
      </node>
      <node id="78100">
        <label>pxr/usd/usdPhysics/joint.h</label>
        <link refid="joint_8h"/>
        <childnode refid="78101" relation="include">
        </childnode>
        <childnode refid="78102" relation="include">
        </childnode>
        <childnode refid="78103" relation="include">
        </childnode>
        <childnode refid="78104" relation="include">
        </childnode>
        <childnode refid="78105" relation="include">
        </childnode>
      </node>
      <node id="78014">
        <label>pxr/usd/usdLux/meshLightAPI.h</label>
        <link refid="mesh_light_a_p_i_8h"/>
      </node>
      <node id="77981">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="78335">
        <label>pxr/imaging/hdEmbree/rendererPlugin.h</label>
        <link refid="mbree_2renderer_plugin_8h_source"/>
      </node>
      <node id="78134">
        <label>pxr/usd/usdSkel/animQuery.h</label>
        <link refid="anim_query_8h"/>
        <childnode refid="78078" relation="include">
        </childnode>
        <childnode refid="78135" relation="include">
        </childnode>
      </node>
      <node id="78296">
        <label>pxr/imaging/hd/prefixingSceneIndex.h</label>
        <link refid="prefixing_scene_index_8h_source"/>
      </node>
      <node id="78116">
        <label>pxr/usd/usdSkel/blendShape.h</label>
        <link refid="blend_shape_8h"/>
        <childnode refid="78117" relation="include">
        </childnode>
      </node>
      <node id="77944">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="77936">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="78149">
        <label>pxr/imaging/hd/dataSource.h</label>
        <link refid="data_source_8h_source"/>
        <childnode refid="78150" relation="include">
        </childnode>
        <childnode refid="78152" relation="include">
        </childnode>
        <childnode refid="78154" relation="include">
        </childnode>
        <childnode refid="78231" relation="include">
        </childnode>
        <childnode refid="78318" relation="include">
        </childnode>
        <childnode refid="78327" relation="include">
        </childnode>
        <childnode refid="78328" relation="include">
        </childnode>
        <childnode refid="78329" relation="include">
        </childnode>
        <childnode refid="78330" relation="include">
        </childnode>
        <childnode refid="78331" relation="include">
        </childnode>
        <childnode refid="78332" relation="include">
        </childnode>
        <childnode refid="78333" relation="include">
        </childnode>
        <childnode refid="78347" relation="include">
        </childnode>
        <childnode refid="78348" relation="include">
        </childnode>
        <childnode refid="78367" relation="include">
        </childnode>
        <childnode refid="78370" relation="include">
        </childnode>
        <childnode refid="78199" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78128" relation="include">
        </childnode>
        <childnode refid="77999" relation="include">
        </childnode>
        <childnode refid="77997" relation="include">
        </childnode>
        <childnode refid="77998" relation="include">
        </childnode>
        <childnode refid="78006" relation="include">
        </childnode>
        <childnode refid="78000" relation="include">
        </childnode>
        <childnode refid="78003" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
        <childnode refid="78130" relation="include">
        </childnode>
        <childnode refid="78007" relation="include">
        </childnode>
        <childnode refid="78004" relation="include">
        </childnode>
        <childnode refid="78371" relation="include">
        </childnode>
        <childnode refid="78143" relation="include">
        </childnode>
        <childnode refid="78372" relation="include">
        </childnode>
        <childnode refid="78365" relation="include">
        </childnode>
        <childnode refid="78008" relation="include">
        </childnode>
      </node>
      <node id="78107">
        <label>pxr/usd/usdRender/denoisePass.h</label>
        <link refid="denoise_pass_8h"/>
      </node>
      <node id="77908">
        <label>pxr/usd/pcp/changes.h</label>
        <link refid="changes_8h"/>
      </node>
      <node id="78307">
        <label>pxr/imaging/hdsi/primTypePruningSceneIndex.h</label>
        <link refid="prim_type_pruning_scene_index_8h_source"/>
      </node>
      <node id="78010">
        <label>pxr/usd/usdGeom/xformCommonAPI.h</label>
        <link refid="xform_common_a_p_i_8h"/>
      </node>
      <node id="78000">
        <label>pxr/usdImaging/usdImaging/dataSourceMesh.h</label>
        <link refid="data_source_mesh_8h_source"/>
      </node>
      <node id="78123">
        <label>pxr/usd/usdShade/output.h</label>
        <link refid="output_8h_source"/>
        <childnode refid="77915" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
        <childnode refid="78015" relation="include">
        </childnode>
        <childnode refid="78016" relation="include">
        </childnode>
        <childnode refid="78028" relation="include">
        </childnode>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
      </node>
      <node id="78121">
        <label>pxr/usd/usdSkel/skinningQuery.h</label>
        <link refid="skinning_query_8h"/>
        <childnode refid="78075" relation="include">
        </childnode>
      </node>
      <node id="78303">
        <label>pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h</label>
        <link refid="material_primvar_transfer_scene_index_8h_source"/>
      </node>
      <node id="77910">
        <label>pxr/usd/usd/stage.h</label>
        <link refid="stage_8h"/>
        <childnode refid="77911" relation="include">
        </childnode>
        <childnode refid="77912" relation="include">
        </childnode>
        <childnode refid="77914" relation="include">
        </childnode>
        <childnode refid="78039" relation="include">
        </childnode>
        <childnode refid="77989" relation="include">
        </childnode>
        <childnode refid="78040" relation="include">
        </childnode>
        <childnode refid="78041" relation="include">
        </childnode>
        <childnode refid="78145" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
        <childnode refid="78063" relation="include">
        </childnode>
        <childnode refid="78052" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78054" relation="include">
        </childnode>
        <childnode refid="78055" relation="include">
        </childnode>
        <childnode refid="78056" relation="include">
        </childnode>
        <childnode refid="78057" relation="include">
        </childnode>
        <childnode refid="78062" relation="include">
        </childnode>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78053" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="77990" relation="include">
        </childnode>
        <childnode refid="77991" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78068" relation="include">
        </childnode>
        <childnode refid="77992" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78009" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78051" relation="include">
        </childnode>
        <childnode refid="78010" relation="include">
        </childnode>
        <childnode refid="78011" relation="include">
        </childnode>
        <childnode refid="77916" relation="include">
        </childnode>
        <childnode refid="77917" relation="include">
        </childnode>
        <childnode refid="77918" relation="include">
        </childnode>
        <childnode refid="77923" relation="include">
        </childnode>
        <childnode refid="77924" relation="include">
        </childnode>
        <childnode refid="77925" relation="include">
        </childnode>
        <childnode refid="77926" relation="include">
        </childnode>
        <childnode refid="77915" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
        <childnode refid="78012" relation="include">
        </childnode>
        <childnode refid="78013" relation="include">
        </childnode>
        <childnode refid="78014" relation="include">
        </childnode>
        <childnode refid="77922" relation="include">
        </childnode>
        <childnode refid="78035" relation="include">
        </childnode>
        <childnode refid="77928" relation="include">
        </childnode>
        <childnode refid="77919" relation="include">
        </childnode>
        <childnode refid="77920" relation="include">
        </childnode>
        <childnode refid="78015" relation="include">
        </childnode>
        <childnode refid="78016" relation="include">
        </childnode>
        <childnode refid="77921" relation="include">
        </childnode>
        <childnode refid="78017" relation="include">
        </childnode>
        <childnode refid="78018" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78019" relation="include">
        </childnode>
        <childnode refid="78020" relation="include">
        </childnode>
        <childnode refid="77929" relation="include">
        </childnode>
        <childnode refid="78101" relation="include">
        </childnode>
        <childnode refid="78021" relation="include">
        </childnode>
        <childnode refid="78022" relation="include">
        </childnode>
        <childnode refid="78102" relation="include">
        </childnode>
        <childnode refid="78100" relation="include">
        </childnode>
        <childnode refid="78023" relation="include">
        </childnode>
        <childnode refid="78024" relation="include">
        </childnode>
        <childnode refid="78025" relation="include">
        </childnode>
        <childnode refid="78026" relation="include">
        </childnode>
        <childnode refid="78103" relation="include">
        </childnode>
        <childnode refid="78104" relation="include">
        </childnode>
        <childnode refid="78027" relation="include">
        </childnode>
        <childnode refid="78106" relation="include">
        </childnode>
        <childnode refid="78105" relation="include">
        </childnode>
        <childnode refid="78072" relation="include">
        </childnode>
        <childnode refid="78107" relation="include">
        </childnode>
        <childnode refid="77930" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78110" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78111" relation="include">
        </childnode>
        <childnode refid="78112" relation="include">
        </childnode>
        <childnode refid="78028" relation="include">
        </childnode>
        <childnode refid="77931" relation="include">
        </childnode>
        <childnode refid="78029" relation="include">
        </childnode>
        <childnode refid="77993" relation="include">
        </childnode>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78033" relation="include">
        </childnode>
        <childnode refid="78031" relation="include">
        </childnode>
        <childnode refid="77932" relation="include">
        </childnode>
        <childnode refid="78034" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
        <childnode refid="78115" relation="include">
        </childnode>
        <childnode refid="78036" relation="include">
        </childnode>
        <childnode refid="78116" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
        <childnode refid="78074" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78037" relation="include">
        </childnode>
        <childnode refid="78038" relation="include">
        </childnode>
        <childnode refid="77987" relation="include">
        </childnode>
        <childnode refid="78146" relation="include">
        </childnode>
        <childnode refid="78147" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78080" relation="include">
        </childnode>
        <childnode refid="78081" relation="include">
        </childnode>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="78045" relation="include">
        </childnode>
      </node>
      <node id="78309">
        <label>pxr/imaging/hdsi/sceneGlobalsSceneIndex.h</label>
        <link refid="scene_globals_scene_index_8h_source"/>
      </node>
      <node id="78040">
        <label>pxr/usd/usd/namespaceEditor.h</label>
        <link refid="namespace_editor_8h"/>
      </node>
      <node id="77973">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="78261">
        <label>pxr/imaging/hd/sceneIndexAdapterSceneDelegate.h</label>
        <link refid="scene_index_adapter_scene_delegate_8h_source"/>
      </node>
      <node id="78059">
        <label>pxr/usd/usdGeom/cylinder_1.h</label>
        <link refid="cylinder__1_8h"/>
      </node>
      <node id="78137">
        <label>pxr/usdImaging/usdImaging/collectionAPIAdapter.h</label>
        <link refid="collection_a_p_i_adapter_8h_source"/>
      </node>
      <node id="78256">
        <label>pxr/imaging/hdPrman/cylinder.h</label>
        <link refid="imaging_2hd_prman_2cylinder_8h_source"/>
      </node>
      <node id="78270">
        <label>pxr/imaging/hdSt/renderPass.h</label>
        <link refid="t_2render_pass_8h_source"/>
      </node>
      <node id="78184">
        <label>pxr/imaging/hd/lightSchema.h</label>
        <link refid="light_schema_8h_source"/>
      </node>
      <node id="78031">
        <label>pxr/usd/usdShade/material.h</label>
        <link refid="usd_2usd_shade_2material_8h"/>
        <childnode refid="78028" relation="include">
        </childnode>
        <childnode refid="77932" relation="include">
        </childnode>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78252">
        <label>pxr/imaging/hd/volume.h</label>
        <link refid="imaging_2hd_2volume_8h_source"/>
        <childnode refid="78253" relation="include">
        </childnode>
        <childnode refid="78254" relation="include">
        </childnode>
      </node>
      <node id="78242">
        <label>pxr/imaging/hd/basisCurves.h</label>
        <link refid="imaging_2hd_2basis_curves_8h_source"/>
        <childnode refid="78243" relation="include">
        </childnode>
        <childnode refid="78244" relation="include">
        </childnode>
      </node>
      <node id="78130">
        <label>pxr/usdImaging/usdImaging/dataSourceRelationship.h</label>
        <link refid="data_source_relationship_8h_source"/>
      </node>
      <node id="77979">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="77907">
        <label>pxr/usd/sdf/changeList.h</label>
        <link refid="change_list_8h"/>
        <childnode refid="77908" relation="include">
        </childnode>
        <childnode refid="77909" relation="include">
        </childnode>
        <childnode refid="78044" relation="include">
        </childnode>
      </node>
      <node id="77986">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="78144">
        <label>pxr/usdImaging/usdviewq/utils.h</label>
        <link refid="usd_imaging_2usdviewq_2utils_8h_source"/>
      </node>
      <node id="78018">
        <label>pxr/usd/usdMedia/assetPreviewsAPI.h</label>
        <link refid="asset_previews_a_p_i_8h"/>
      </node>
      <node id="77974">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="78249">
        <label>pxr/imaging/hd/points.h</label>
        <link refid="imaging_2hd_2points_8h_source"/>
        <childnode refid="78250" relation="include">
        </childnode>
        <childnode refid="78251" relation="include">
        </childnode>
      </node>
      <node id="78006">
        <label>pxr/usdImaging/usdImaging/dataSourceMaterial.h</label>
        <link refid="data_source_material_8h_source"/>
      </node>
      <node id="78225">
        <label>pxr/usdImaging/usdImaging/geomModelSchema.h</label>
        <link refid="geom_model_schema_8h_source"/>
      </node>
      <node id="78096">
        <label>pxr/usd/usd/typed.h</label>
        <link refid="typed_8h"/>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="77929" relation="include">
        </childnode>
        <childnode refid="78106" relation="include">
        </childnode>
        <childnode refid="78107" relation="include">
        </childnode>
        <childnode refid="77930" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78112" relation="include">
        </childnode>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
        <childnode refid="78115" relation="include">
        </childnode>
        <childnode refid="78116" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
      </node>
      <node id="78350">
        <label>pxr/imaging/hd/retainedSceneIndex.h</label>
        <link refid="retained_scene_index_8h_source"/>
        <childnode refid="78351" relation="include">
        </childnode>
      </node>
      <node id="78179">
        <label>pxr/imaging/hd/instancerTopologySchema.h</label>
        <link refid="instancer_topology_schema_8h_source"/>
      </node>
      <node id="78069">
        <label>pxr/usd/usdGeom/sphere.h</label>
        <link refid="usd_2usd_geom_2sphere_8h"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="78054">
        <label>pxr/usd/usdGeom/capsule.h</label>
        <link refid="capsule_8h"/>
      </node>
      <node id="78013">
        <label>pxr/usd/usdLux/listAPI.h</label>
        <link refid="list_a_p_i_8h"/>
      </node>
      <node id="78284">
        <label>pxr/imaging/hdx/aovInputTask.h</label>
        <link refid="aov_input_task_8h_source"/>
      </node>
      <node id="78120">
        <label>pxr/usd/usdGeom/primvar.h</label>
        <link refid="primvar_8h_source"/>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="77992" relation="include">
        </childnode>
        <childnode refid="78036" relation="include">
        </childnode>
        <childnode refid="78121" relation="include">
        </childnode>
        <childnode refid="77994" relation="include">
        </childnode>
      </node>
      <node id="78019">
        <label>pxr/usd/usdPhysics/articulationRootAPI.h</label>
        <link refid="articulation_root_a_p_i_8h"/>
      </node>
      <node id="78316">
        <label>pxr/usdImaging/usdImaging/selectionSceneIndex.h</label>
        <link refid="selection_scene_index_8h_source"/>
      </node>
      <node id="78236">
        <label>pxr/imaging/hd/renderIndex.h</label>
        <link refid="render_index_8h_source"/>
        <childnode refid="78237" relation="include">
        </childnode>
        <childnode refid="78279" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="78250">
        <label>pxr/imaging/hdPrman/points.h</label>
        <link refid="imaging_2hd_prman_2points_8h_source"/>
      </node>
      <node id="78007">
        <label>pxr/usdImaging/usdImaging/dataSourceRenderPrims.h</label>
        <link refid="data_source_render_prims_8h_source"/>
      </node>
      <node id="78045">
        <label>pxr/usdImaging/usdImaging/stageSceneIndex.h</label>
        <link refid="stage_scene_index_8h_source"/>
      </node>
      <node id="78208">
        <label>pxr/imaging/hd/renderProductSchema.h</label>
        <link refid="render_product_schema_8h_source"/>
      </node>
      <node id="78080">
        <label>pxr/usdImaging/usdAppUtils/camera.h</label>
        <link refid="usd_imaging_2usd_app_utils_2camera_8h"/>
      </node>
      <node id="78341">
        <label>pxr/imaging/hd/unitTestNullRenderDelegate.h</label>
        <link refid="unit_test_null_render_delegate_8h_source"/>
        <childnode refid="78264" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="78238">
        <label>pxr/imaging/hd/extComputation.h</label>
        <link refid="ext_computation_8h_source"/>
        <childnode refid="78239" relation="include">
        </childnode>
        <childnode refid="78240" relation="include">
        </childnode>
      </node>
      <node id="78106">
        <label>pxr/usd/usdPhysics/scene.h</label>
        <link refid="scene_8h"/>
      </node>
      <node id="78188">
        <label>pxr/imaging/hd/materialNetworkSchema.h</label>
        <link refid="material_network_schema_8h_source"/>
      </node>
      <node id="78315">
        <label>pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h</label>
        <link refid="root_overrides_scene_index_8h_source"/>
      </node>
      <node id="78207">
        <label>pxr/imaging/hd/renderCapabilitiesSchema.h</label>
        <link refid="render_capabilities_schema_8h_source"/>
      </node>
      <node id="77957">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="77947">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="78083">
        <label>pxr/usd/usdMedia/spatialAudio.h</label>
        <link refid="spatial_audio_8h"/>
      </node>
      <node id="77913">
        <label>pxr/usd/usdUtils/stitchClips.h</label>
        <link refid="stitch_clips_8h"/>
      </node>
      <node id="77940">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="77993">
        <label>pxr/usd/usdRi/statementsAPI.h</label>
        <link refid="statements_a_p_i_8h"/>
      </node>
      <node id="77980">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="77976" relation="include">
        </childnode>
      </node>
      <node id="78333">
        <label>pxr/imaging/hd/renderDelegate.h</label>
        <link refid="render_delegate_8h_source"/>
        <childnode refid="78334" relation="include">
        </childnode>
        <childnode refid="78338" relation="include">
        </childnode>
        <childnode refid="78340" relation="include">
        </childnode>
        <childnode refid="78341" relation="include">
        </childnode>
        <childnode refid="78342" relation="include">
        </childnode>
        <childnode refid="78343" relation="include">
        </childnode>
        <childnode refid="78344" relation="include">
        </childnode>
        <childnode refid="78345" relation="include">
        </childnode>
        <childnode refid="78346" relation="include">
        </childnode>
      </node>
      <node id="78257">
        <label>pxr/imaging/hdPrman/gprimbase.h</label>
        <link refid="gprimbase_8h_source"/>
        <childnode refid="78258" relation="include">
        </childnode>
      </node>
      <node id="78349">
        <label>pxr/imaging/hd/dataSourceLegacyPrim.h</label>
        <link refid="data_source_legacy_prim_8h_source"/>
      </node>
      <node id="78197">
        <label>pxr/imaging/hd/nurbsPatchSchema.h</label>
        <link refid="nurbs_patch_schema_8h_source"/>
      </node>
      <node id="78154">
        <label>pxr/imaging/hd/dataSourceTypeDefs.h</label>
        <link refid="data_source_type_defs_8h_source"/>
        <childnode refid="78155" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
        <childnode refid="78128" relation="include">
        </childnode>
        <childnode refid="77998" relation="include">
        </childnode>
        <childnode refid="77995" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
        <childnode refid="78130" relation="include">
        </childnode>
      </node>
      <node id="77975">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="78011">
        <label>pxr/usd/usdHydra/generativeProceduralAPI.h</label>
        <link refid="generative_procedural_a_p_i_8h"/>
      </node>
      <node id="78337">
        <label>pxr/imaging/hdStorm/rendererPlugin.h</label>
        <link refid="torm_2renderer_plugin_8h_source"/>
      </node>
      <node id="78288">
        <label>pxr/imaging/hdx/colorizeSelectionTask.h</label>
        <link refid="colorize_selection_task_8h_source"/>
      </node>
      <node id="78199">
        <label>pxr/imaging/hdx/pickTask.h</label>
        <link refid="pick_task_8h_source"/>
        <childnode refid="78200" relation="include">
        </childnode>
      </node>
      <node id="78139">
        <label>pxr/usdImaging/usdImaging/geomModelAPIAdapter.h</label>
        <link refid="geom_model_a_p_i_adapter_8h_source"/>
      </node>
      <node id="78196">
        <label>pxr/imaging/hd/nurbsPatchTrimCurveSchema.h</label>
        <link refid="nurbs_patch_trim_curve_schema_8h_source"/>
        <childnode refid="78197" relation="include">
        </childnode>
      </node>
      <node id="78147">
        <label>pxr/usd/usdUtils/introspection.h</label>
        <link refid="introspection_8h"/>
      </node>
      <node id="78046">
        <label>pxr/usd/usd/prim.h</label>
        <link refid="prim_8h"/>
        <childnode refid="77911" relation="include">
        </childnode>
        <childnode refid="78047" relation="include">
        </childnode>
        <childnode refid="77912" relation="include">
        </childnode>
        <childnode refid="77914" relation="include">
        </childnode>
        <childnode refid="78043" relation="include">
        </childnode>
        <childnode refid="78089" relation="include">
        </childnode>
        <childnode refid="77989" relation="include">
        </childnode>
        <childnode refid="78090" relation="include">
        </childnode>
        <childnode refid="78091" relation="include">
        </childnode>
        <childnode refid="78092" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
        <childnode refid="78131" relation="include">
        </childnode>
        <childnode refid="78095" relation="include">
        </childnode>
        <childnode refid="78132" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
        <childnode refid="78133" relation="include">
        </childnode>
        <childnode refid="78063" relation="include">
        </childnode>
        <childnode refid="78052" relation="include">
        </childnode>
        <childnode refid="78079" relation="include">
        </childnode>
        <childnode refid="78054" relation="include">
        </childnode>
        <childnode refid="78055" relation="include">
        </childnode>
        <childnode refid="78056" relation="include">
        </childnode>
        <childnode refid="78057" relation="include">
        </childnode>
        <childnode refid="78062" relation="include">
        </childnode>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78053" relation="include">
        </childnode>
        <childnode refid="78064" relation="include">
        </childnode>
        <childnode refid="78097" relation="include">
        </childnode>
        <childnode refid="78066" relation="include">
        </childnode>
        <childnode refid="77990" relation="include">
        </childnode>
        <childnode refid="77991" relation="include">
        </childnode>
        <childnode refid="78065" relation="include">
        </childnode>
        <childnode refid="78067" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78071" relation="include">
        </childnode>
        <childnode refid="78068" relation="include">
        </childnode>
        <childnode refid="77992" relation="include">
        </childnode>
        <childnode refid="78098" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78099" relation="include">
        </childnode>
        <childnode refid="78009" relation="include">
        </childnode>
        <childnode refid="78082" relation="include">
        </childnode>
        <childnode refid="78051" relation="include">
        </childnode>
        <childnode refid="78049" relation="include">
        </childnode>
        <childnode refid="78010" relation="include">
        </childnode>
        <childnode refid="78011" relation="include">
        </childnode>
        <childnode refid="77916" relation="include">
        </childnode>
        <childnode refid="77917" relation="include">
        </childnode>
        <childnode refid="77918" relation="include">
        </childnode>
        <childnode refid="77923" relation="include">
        </childnode>
        <childnode refid="77924" relation="include">
        </childnode>
        <childnode refid="77925" relation="include">
        </childnode>
        <childnode refid="77926" relation="include">
        </childnode>
        <childnode refid="77915" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
        <childnode refid="78012" relation="include">
        </childnode>
        <childnode refid="78013" relation="include">
        </childnode>
        <childnode refid="78014" relation="include">
        </childnode>
        <childnode refid="77922" relation="include">
        </childnode>
        <childnode refid="78035" relation="include">
        </childnode>
        <childnode refid="77928" relation="include">
        </childnode>
        <childnode refid="77919" relation="include">
        </childnode>
        <childnode refid="77920" relation="include">
        </childnode>
        <childnode refid="78015" relation="include">
        </childnode>
        <childnode refid="78016" relation="include">
        </childnode>
        <childnode refid="77921" relation="include">
        </childnode>
        <childnode refid="78017" relation="include">
        </childnode>
        <childnode refid="78018" relation="include">
        </childnode>
        <childnode refid="78083" relation="include">
        </childnode>
        <childnode refid="78019" relation="include">
        </childnode>
        <childnode refid="78020" relation="include">
        </childnode>
        <childnode refid="77929" relation="include">
        </childnode>
        <childnode refid="78101" relation="include">
        </childnode>
        <childnode refid="78021" relation="include">
        </childnode>
        <childnode refid="78022" relation="include">
        </childnode>
        <childnode refid="78102" relation="include">
        </childnode>
        <childnode refid="78100" relation="include">
        </childnode>
        <childnode refid="78023" relation="include">
        </childnode>
        <childnode refid="78024" relation="include">
        </childnode>
        <childnode refid="78025" relation="include">
        </childnode>
        <childnode refid="78026" relation="include">
        </childnode>
        <childnode refid="78103" relation="include">
        </childnode>
        <childnode refid="78104" relation="include">
        </childnode>
        <childnode refid="78027" relation="include">
        </childnode>
        <childnode refid="78106" relation="include">
        </childnode>
        <childnode refid="78105" relation="include">
        </childnode>
        <childnode refid="78072" relation="include">
        </childnode>
        <childnode refid="78107" relation="include">
        </childnode>
        <childnode refid="77930" relation="include">
        </childnode>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78110" relation="include">
        </childnode>
        <childnode refid="78108" relation="include">
        </childnode>
        <childnode refid="78111" relation="include">
        </childnode>
        <childnode refid="78112" relation="include">
        </childnode>
        <childnode refid="78028" relation="include">
        </childnode>
        <childnode refid="77931" relation="include">
        </childnode>
        <childnode refid="78029" relation="include">
        </childnode>
        <childnode refid="77993" relation="include">
        </childnode>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78033" relation="include">
        </childnode>
        <childnode refid="78031" relation="include">
        </childnode>
        <childnode refid="77932" relation="include">
        </childnode>
        <childnode refid="78034" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
        <childnode refid="78115" relation="include">
        </childnode>
        <childnode refid="78134" relation="include">
        </childnode>
        <childnode refid="78036" relation="include">
        </childnode>
        <childnode refid="78116" relation="include">
        </childnode>
        <childnode refid="78078" relation="include">
        </childnode>
        <childnode refid="78073" relation="include">
        </childnode>
        <childnode refid="78074" relation="include">
        </childnode>
        <childnode refid="78135" relation="include">
        </childnode>
        <childnode refid="78121" relation="include">
        </childnode>
        <childnode refid="78118" relation="include">
        </childnode>
        <childnode refid="78037" relation="include">
        </childnode>
        <childnode refid="78038" relation="include">
        </childnode>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78085" relation="include">
        </childnode>
        <childnode refid="78084" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
        <childnode refid="78136" relation="include">
        </childnode>
        <childnode refid="78006" relation="include">
        </childnode>
        <childnode refid="77996" relation="include">
        </childnode>
        <childnode refid="78142" relation="include">
        </childnode>
        <childnode refid="78143" relation="include">
        </childnode>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="77935" relation="include">
        </childnode>
        <childnode refid="77937" relation="include">
        </childnode>
        <childnode refid="77933" relation="include">
        </childnode>
        <childnode refid="78144" relation="include">
        </childnode>
      </node>
      <node id="77919">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="78216">
        <label>pxr/imaging/hd/meshTopologySchema.h</label>
        <link refid="mesh_topology_schema_8h_source"/>
        <childnode refid="78174" relation="include">
        </childnode>
      </node>
      <node id="78206">
        <label>pxr/imaging/hd/renderBufferSchema.h</label>
        <link refid="render_buffer_schema_8h_source"/>
      </node>
      <node id="77999">
        <label>pxr/usdImaging/usdImaging/dataSourceBasisCurves.h</label>
        <link refid="data_source_basis_curves_8h_source"/>
      </node>
      <node id="77965">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="78280">
        <label>pxr/imaging/hdx/selectionTask.h</label>
        <link refid="selection_task_8h_source"/>
      </node>
      <node id="77934">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="77935" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="78229">
        <label>pxr/usdImaging/usdImaging/usdRenderSettingsSchema.h</label>
        <link refid="usd_render_settings_schema_8h_source"/>
      </node>
      <node id="78127">
        <label>pxr/usd/usdUtils/sparseValueWriter.h</label>
        <link refid="sparse_value_writer_8h"/>
      </node>
      <node id="78138">
        <label>pxr/usdImaging/usdImaging/coordSysAPIAdapter.h</label>
        <link refid="coord_sys_a_p_i_adapter_8h_source"/>
      </node>
      <node id="78381">
        <label>pxr/imaging/hdPrman/camera.h</label>
        <link refid="imaging_2hd_prman_2camera_8h_source"/>
      </node>
      <node id="78329">
        <label>pxr/imaging/hd/lazyContainerDataSource.h</label>
        <link refid="lazy_container_data_source_8h_source"/>
      </node>
      <node id="78001">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsCurves.h</label>
        <link refid="data_source_nurbs_curves_8h_source"/>
      </node>
      <node id="78133">
        <label>pxr/usd/usd/variantSets.h</label>
        <link refid="variant_sets_8h_source"/>
        <childnode refid="78031" relation="include">
        </childnode>
      </node>
      <node id="78232">
        <label>pxr/imaging/hd/dependencyForwardingSceneIndex.h</label>
        <link refid="dependency_forwarding_scene_index_8h_source"/>
      </node>
      <node id="78318">
        <label>pxr/imaging/hd/flattenedDataSourceProvider.h</label>
        <link refid="flattened_data_source_provider_8h_source"/>
        <childnode refid="78319" relation="include">
        </childnode>
        <childnode refid="78320" relation="include">
        </childnode>
        <childnode refid="78321" relation="include">
        </childnode>
        <childnode refid="78322" relation="include">
        </childnode>
        <childnode refid="78323" relation="include">
        </childnode>
        <childnode refid="78324" relation="include">
        </childnode>
        <childnode refid="78325" relation="include">
        </childnode>
        <childnode refid="78326" relation="include">
        </childnode>
      </node>
      <node id="78320">
        <label>pxr/imaging/hd/flattenedOverlayDataSourceProvider.h</label>
        <link refid="flattened_overlay_data_source_provider_8h_source"/>
      </node>
      <node id="78172">
        <label>pxr/imaging/hd/geomSubsetSchema.h</label>
        <link refid="geom_subset_schema_8h_source"/>
        <childnode refid="78173" relation="include">
        </childnode>
      </node>
      <node id="78374">
        <label>pxr/imaging/hd/sceneIndexObserver.h</label>
        <link refid="scene_index_observer_8h_source"/>
        <childnode refid="78348" relation="include">
        </childnode>
        <childnode refid="78370" relation="include">
        </childnode>
        <childnode refid="78375" relation="include">
        </childnode>
      </node>
      <node id="78122">
        <label>pxr/usd/usdShade/input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="77915" relation="include">
        </childnode>
        <childnode refid="77927" relation="include">
        </childnode>
        <childnode refid="78015" relation="include">
        </childnode>
        <childnode refid="78016" relation="include">
        </childnode>
        <childnode refid="78028" relation="include">
        </childnode>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78113" relation="include">
        </childnode>
        <childnode refid="78114" relation="include">
        </childnode>
      </node>
      <node id="78343">
        <label>pxr/imaging/hdEmbree/renderParam.h</label>
        <link refid="hd_embree_2render_param_8h_source"/>
      </node>
      <node id="78176">
        <label>pxr/imaging/hd/instanceCategoriesSchema.h</label>
        <link refid="instance_categories_schema_8h_source"/>
      </node>
      <node id="78240">
        <label>pxr/imaging/hdSt/extComputation.h</label>
        <link refid="t_2ext_computation_8h_source"/>
      </node>
      <node id="78099">
        <label>pxr/usd/usdGeom/subset.h</label>
        <link refid="subset_8h"/>
        <childnode refid="78031" relation="include">
        </childnode>
        <childnode refid="77932" relation="include">
        </childnode>
      </node>
      <node id="77911">
        <label>pxr/usd/usd/apiSchemaBase.h</label>
        <link refid="api_schema_base_8h"/>
        <childnode refid="77912" relation="include">
        </childnode>
        <childnode refid="77914" relation="include">
        </childnode>
        <childnode refid="77989" relation="include">
        </childnode>
        <childnode refid="77990" relation="include">
        </childnode>
        <childnode refid="77991" relation="include">
        </childnode>
        <childnode refid="77992" relation="include">
        </childnode>
        <childnode refid="78009" relation="include">
        </childnode>
        <childnode refid="78010" relation="include">
        </childnode>
        <childnode refid="78011" relation="include">
        </childnode>
        <childnode refid="77915" relation="include">
        </childnode>
        <childnode refid="78012" relation="include">
        </childnode>
        <childnode refid="78013" relation="include">
        </childnode>
        <childnode refid="78014" relation="include">
        </childnode>
        <childnode refid="78015" relation="include">
        </childnode>
        <childnode refid="78016" relation="include">
        </childnode>
        <childnode refid="78017" relation="include">
        </childnode>
        <childnode refid="78018" relation="include">
        </childnode>
        <childnode refid="78019" relation="include">
        </childnode>
        <childnode refid="78020" relation="include">
        </childnode>
        <childnode refid="78021" relation="include">
        </childnode>
        <childnode refid="78022" relation="include">
        </childnode>
        <childnode refid="78023" relation="include">
        </childnode>
        <childnode refid="78024" relation="include">
        </childnode>
        <childnode refid="78025" relation="include">
        </childnode>
        <childnode refid="78026" relation="include">
        </childnode>
        <childnode refid="78027" relation="include">
        </childnode>
        <childnode refid="78028" relation="include">
        </childnode>
        <childnode refid="77931" relation="include">
        </childnode>
        <childnode refid="78029" relation="include">
        </childnode>
        <childnode refid="77993" relation="include">
        </childnode>
        <childnode refid="78030" relation="include">
        </childnode>
        <childnode refid="78033" relation="include">
        </childnode>
        <childnode refid="77932" relation="include">
        </childnode>
        <childnode refid="78034" relation="include">
        </childnode>
        <childnode refid="78036" relation="include">
        </childnode>
        <childnode refid="78037" relation="include">
        </childnode>
        <childnode refid="78038" relation="include">
        </childnode>
      </node>
      <node id="78156">
        <label>pxr/imaging/hd/basisCurvesTopologySchema.h</label>
        <link refid="basis_curves_topology_schema_8h_source"/>
        <childnode refid="78157" relation="include">
        </childnode>
      </node>
      <node id="78047">
        <label>pxr/usd/usd/attributeQuery.h</label>
        <link refid="attribute_query_8h_source"/>
        <childnode refid="78048" relation="include">
        </childnode>
        <childnode refid="78049" relation="include">
        </childnode>
        <childnode refid="78050" relation="include">
        </childnode>
        <childnode refid="78088" relation="include">
        </childnode>
      </node>
      <node id="78348">
        <label>pxr/imaging/hd/sceneIndex.h</label>
        <link refid="scene_index_8h_source"/>
        <childnode refid="78349" relation="include">
        </childnode>
        <childnode refid="78231" relation="include">
        </childnode>
        <childnode refid="78332" relation="include">
        </childnode>
        <childnode refid="78236" relation="include">
        </childnode>
        <childnode refid="78350" relation="include">
        </childnode>
        <childnode refid="78211" relation="include">
        </childnode>
        <childnode refid="78261" relation="include">
        </childnode>
        <childnode refid="78352" relation="include">
        </childnode>
        <childnode refid="78361" relation="include">
        </childnode>
        <childnode refid="78362" relation="include">
        </childnode>
        <childnode refid="78136" relation="include">
        </childnode>
        <childnode refid="78365" relation="include">
        </childnode>
        <childnode refid="78045" relation="include">
        </childnode>
        <childnode refid="78366" relation="include">
        </childnode>
      </node>
      <node id="78271">
        <label>pxr/imaging/hdx/drawTargetTask.h</label>
        <link refid="draw_target_task_8h_source"/>
      </node>
      <node id="78223">
        <label>pxr/imaging/hdPrman/rileyRenderOutputSchema.h</label>
        <link refid="riley_render_output_schema_8h_source"/>
      </node>
      <node id="78055">
        <label>pxr/usd/usdGeom/capsule_1.h</label>
        <link refid="capsule__1_8h"/>
      </node>
      <node id="78108">
        <label>pxr/usd/usdRender/settingsBase.h</label>
        <link refid="settings_base_8h"/>
        <childnode refid="78109" relation="include">
        </childnode>
        <childnode refid="78110" relation="include">
        </childnode>
        <childnode refid="78111" relation="include">
        </childnode>
      </node>
      <node id="78078">
        <label>pxr/usd/usdSkel/cache.h</label>
        <link refid="usd_skel_2cache_8h"/>
        <childnode refid="77985" relation="include">
        </childnode>
      </node>
      <node id="78053">
        <label>pxr/usd/usdGeom/gprim.h</label>
        <link refid="usd_2usd_geom_2gprim_8h"/>
        <childnode refid="78054" relation="include">
        </childnode>
        <childnode refid="78055" relation="include">
        </childnode>
        <childnode refid="78056" relation="include">
        </childnode>
        <childnode refid="78057" relation="include">
        </childnode>
        <childnode refid="78058" relation="include">
        </childnode>
        <childnode refid="78059" relation="include">
        </childnode>
        <childnode refid="78060" relation="include">
        </childnode>
        <childnode refid="78061" relation="include">
        </childnode>
        <childnode refid="78069" relation="include">
        </childnode>
        <childnode refid="78070" relation="include">
        </childnode>
      </node>
      <node id="78155">
        <label>pxr/imaging/hd/schema.h</label>
        <link refid="imaging_2hd_2schema_8h_source"/>
        <childnode refid="78156" relation="include">
        </childnode>
        <childnode refid="78158" relation="include">
        </childnode>
        <childnode refid="78159" relation="include">
        </childnode>
        <childnode refid="78160" relation="include">
        </childnode>
        <childnode refid="78161" relation="include">
        </childnode>
        <childnode refid="78162" relation="include">
        </childnode>
        <childnode refid="78163" relation="include">
        </childnode>
        <childnode refid="78164" relation="include">
        </childnode>
        <childnode refid="78165" relation="include">
        </childnode>
        <childnode refid="78167" relation="include">
        </childnode>
        <childnode refid="78168" relation="include">
        </childnode>
        <childnode refid="78169" relation="include">
        </childnode>
        <childnode refid="78170" relation="include">
        </childnode>
        <childnode refid="78172" relation="include">
        </childnode>
        <childnode refid="78175" relation="include">
        </childnode>
        <childnode refid="78176" relation="include">
        </childnode>
        <childnode refid="78177" relation="include">
        </childnode>
        <childnode refid="78178" relation="include">
        </childnode>
        <childnode refid="78179" relation="include">
        </childnode>
        <childnode refid="78180" relation="include">
        </childnode>
        <childnode refid="78181" relation="include">
        </childnode>
        <childnode refid="78182" relation="include">
        </childnode>
        <childnode refid="78184" relation="include">
        </childnode>
        <childnode refid="78185" relation="include">
        </childnode>
        <childnode refid="78187" relation="include">
        </childnode>
        <childnode refid="78188" relation="include">
        </childnode>
        <childnode refid="78189" relation="include">
        </childnode>
        <childnode refid="78190" relation="include">
        </childnode>
        <childnode refid="78194" relation="include">
        </childnode>
        <childnode refid="78195" relation="include">
        </childnode>
        <childnode refid="78196" relation="include">
        </childnode>
        <childnode refid="78198" relation="include">
        </childnode>
        <childnode refid="78201" relation="include">
        </childnode>
        <childnode refid="78205" relation="include">
        </childnode>
        <childnode refid="78206" relation="include">
        </childnode>
        <childnode refid="78207" relation="include">
        </childnode>
        <childnode refid="78208" relation="include">
        </childnode>
        <childnode refid="78209" relation="include">
        </childnode>
        <childnode refid="78210" relation="include">
        </childnode>
        <childnode refid="78211" relation="include">
        </childnode>
        <childnode refid="78212" relation="include">
        </childnode>
        <childnode refid="78213" relation="include">
        </childnode>
        <childnode refid="78214" relation="include">
        </childnode>
        <childnode refid="78215" relation="include">
        </childnode>
        <childnode refid="78217" relation="include">
        </childnode>
        <childnode refid="78218" relation="include">
        </childnode>
        <childnode refid="78219" relation="include">
        </childnode>
        <childnode refid="78220" relation="include">
        </childnode>
        <childnode refid="78221" relation="include">
        </childnode>
        <childnode refid="78222" relation="include">
        </childnode>
        <childnode refid="78223" relation="include">
        </childnode>
        <childnode refid="78224" relation="include">
        </childnode>
        <childnode refid="78225" relation="include">
        </childnode>
        <childnode refid="78226" relation="include">
        </childnode>
        <childnode refid="78227" relation="include">
        </childnode>
        <childnode refid="78228" relation="include">
        </childnode>
        <childnode refid="78229" relation="include">
        </childnode>
        <childnode refid="78230" relation="include">
        </childnode>
      </node>
      <node id="78268">
        <label>pxr/imaging/hdEmbree/renderPass.h</label>
        <link refid="mbree_2render_pass_8h_source"/>
      </node>
      <node id="78248">
        <label>pxr/imaging/hdSt/mesh.h</label>
        <link refid="imaging_2hd_st_2mesh_8h_source"/>
      </node>
      <node id="78126">
        <label>pxr/usd/usdSkel/inbetweenShape.h</label>
        <link refid="inbetween_shape_8h_source"/>
        <childnode refid="78116" relation="include">
        </childnode>
        <childnode refid="78117" relation="include">
        </childnode>
      </node>
      <node id="78077">
        <label>pxr/usd/usdSkel/utils.h</label>
        <link refid="usd_2usd_skel_2utils_8h"/>
      </node>
      <node id="78194">
        <label>pxr/imaging/hd/materialSchema.h</label>
        <link refid="material_schema_8h_source"/>
      </node>
      <node id="78033">
        <label>pxr/usd/usdShade/coordSysAPI.h</label>
        <link refid="coord_sys_a_p_i_8h"/>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78272">
        <label>pxr/imaging/hdx/oitBufferAccessor.h</label>
        <link refid="oit_buffer_accessor_8h_source"/>
      </node>
      <node id="78376">
        <label>pxr/imaging/hd/materialNetworkInterface.h</label>
        <link refid="material_network_interface_8h_source"/>
        <childnode refid="78151" relation="include">
        </childnode>
        <childnode refid="78234" relation="include">
        </childnode>
        <childnode refid="78377" relation="include">
        </childnode>
        <childnode refid="78378" relation="include">
        </childnode>
        <childnode refid="78379" relation="include">
        </childnode>
      </node>
      <node id="78222">
        <label>pxr/imaging/hdar/systemSchema.h</label>
        <link refid="r_2system_schema_8h_source"/>
      </node>
      <node id="78370">
        <label>pxr/imaging/hdsi/primManagingSceneIndexObserver.h</label>
        <link refid="prim_managing_scene_index_observer_8h"/>
      </node>
      <node id="78181">
        <label>pxr/imaging/hd/legacyDisplayStyleSchema.h</label>
        <link refid="legacy_display_style_schema_8h_source"/>
      </node>
      <node id="77953">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="78355">
        <label>pxr/imaging/hdPrman/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_prman_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="78344">
        <label>pxr/imaging/hdPrman/renderDelegate.h</label>
        <link refid="rman_2render_delegate_8h_source"/>
      </node>
      <node id="78233">
        <label>pxr/imaging/hd/flatteningSceneIndex.h</label>
        <link refid="flattening_scene_index_8h_source"/>
      </node>
      <node id="78165">
        <label>pxr/imaging/hd/dependencySchema.h</label>
        <link refid="dependency_schema_8h_source"/>
        <childnode refid="78166" relation="include">
        </childnode>
      </node>
      <node id="78005">
        <label>pxr/usdImaging/usdImaging/dataSourceVolume.h</label>
        <link refid="data_source_volume_8h_source"/>
      </node>
      <node id="77932">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78041">
        <label>pxr/usd/usd/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="78042" relation="include">
        </childnode>
        <childnode refid="78043" relation="include">
        </childnode>
        <childnode refid="78044" relation="include">
        </childnode>
        <childnode refid="78046" relation="include">
        </childnode>
        <childnode refid="78093" relation="include">
        </childnode>
      </node>
      <node id="78146">
        <label>pxr/usd/usdUtils/flattenLayerStack.h</label>
        <link refid="flatten_layer_stack_8h"/>
      </node>
      <node id="78076">
        <label>pxr/usd/usdSkel/bakeSkinning.h</label>
        <link refid="bake_skinning_8h_source"/>
        <childnode refid="78077" relation="include">
        </childnode>
      </node>
      <node id="78070">
        <label>pxr/usd/usdVol/volume.h</label>
        <link refid="usd_2usd_vol_2volume_8h"/>
        <childnode refid="78005" relation="include">
        </childnode>
        <childnode refid="77958" relation="include">
        </childnode>
      </node>
      <node id="78004">
        <label>pxr/usdImaging/usdImaging/dataSourceSchemaBased.h</label>
        <link refid="data_source_schema_based_8h_source"/>
      </node>
      <node id="78227">
        <label>pxr/usdImaging/usdImaging/usdPrimInfoSchema.h</label>
        <link refid="usd_prim_info_schema_8h_source"/>
      </node>
      <node id="78263">
        <label>pxr/imaging/hd/engine.h</label>
        <link refid="imaging_2hd_2engine_8h_source"/>
        <childnode refid="78264" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
        <childnode refid="78265" relation="include">
        </childnode>
      </node>
      <node id="78056">
        <label>pxr/usd/usdGeom/cone.h</label>
        <link refid="usd_2usd_geom_2cone_8h"/>
      </node>
      <node id="77952">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="78327">
        <label>pxr/imaging/hd/flattenedDataSourceProviders.h</label>
        <link refid="imaging_2hd_2flattened_data_source_providers_8h_source"/>
      </node>
      <node id="78068">
        <label>pxr/usd/usdGeom/points.h</label>
        <link refid="usd_2usd_geom_2points_8h"/>
      </node>
      <node id="78087">
        <label>pxr/usd/usdVol/openVDBAsset.h</label>
        <link refid="open_v_d_b_asset_8h"/>
      </node>
      <node id="78247">
        <label>pxr/imaging/hdPrman/mesh.h</label>
        <link refid="imaging_2hd_prman_2mesh_8h_source"/>
      </node>
      <node id="78379">
        <label>pxr/imaging/hdPrman/matfiltResolveVstructs.h</label>
        <link refid="matfilt_resolve_vstructs_8h_source"/>
      </node>
      <node id="78071">
        <label>pxr/usd/usdGeom/pointInstancer.h</label>
        <link refid="point_instancer_8h"/>
        <childnode refid="78048" relation="include">
        </childnode>
        <childnode refid="77995" relation="include">
        </childnode>
        <childnode refid="77933" relation="include">
        </childnode>
      </node>
      <node id="78293">
        <label>pxr/imaging/hdx/freeCameraSceneDelegate.h</label>
        <link refid="free_camera_scene_delegate_8h_source"/>
      </node>
      <node id="78115">
        <label>pxr/usd/usdSkel/animation.h</label>
        <link refid="animation_8h"/>
      </node>
      <node id="78331">
        <label>pxr/imaging/hd/overlayContainerDataSource.h</label>
        <link refid="overlay_container_data_source_8h_source"/>
      </node>
      <node id="77909">
        <label>pxr/usd/sdf/notice.h</label>
        <link refid="usd_2sdf_2notice_8h_source"/>
        <childnode refid="77910" relation="include">
        </childnode>
      </node>
      <node id="78164">
        <label>pxr/imaging/hd/cylinderSchema.h</label>
        <link refid="cylinder_schema_8h_source"/>
      </node>
      <node id="77995">
        <label>pxr/usdImaging/usdImaging/dataSourcePointInstancer.h</label>
        <link refid="data_source_point_instancer_8h_source"/>
      </node>
      <node id="77977">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="78347">
        <label>pxr/imaging/hd/retainedDataSource.h</label>
        <link refid="retained_data_source_8h_source"/>
        <childnode refid="78318" relation="include">
        </childnode>
      </node>
      <node id="78286">
        <label>pxr/imaging/hdx/colorChannelTask.h</label>
        <link refid="color_channel_task_8h_source"/>
      </node>
      <node id="77964">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="77933">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="77934" relation="include">
        </childnode>
        <childnode refid="77937" relation="include">
        </childnode>
      </node>
      <node id="77946">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="77938" relation="include">
        </childnode>
        <childnode refid="77947" relation="include">
        </childnode>
        <childnode refid="77948" relation="include">
        </childnode>
        <childnode refid="77941" relation="include">
        </childnode>
        <childnode refid="77949" relation="include">
        </childnode>
        <childnode refid="77950" relation="include">
        </childnode>
        <childnode refid="77951" relation="include">
        </childnode>
        <childnode refid="77952" relation="include">
        </childnode>
        <childnode refid="77953" relation="include">
        </childnode>
        <childnode refid="77954" relation="include">
        </childnode>
        <childnode refid="77955" relation="include">
        </childnode>
        <childnode refid="77956" relation="include">
        </childnode>
        <childnode refid="77957" relation="include">
        </childnode>
        <childnode refid="77958" relation="include">
        </childnode>
      </node>
      <node id="77922">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="77923" relation="include">
        </childnode>
        <childnode refid="77924" relation="include">
        </childnode>
        <childnode refid="77925" relation="include">
        </childnode>
        <childnode refid="77926" relation="include">
        </childnode>
      </node>
      <node id="78101">
        <label>pxr/usd/usdPhysics/distanceJoint.h</label>
        <link refid="distance_joint_8h"/>
      </node>
      <node id="78260">
        <label>pxr/imaging/hdSt/primUtils.h</label>
        <link refid="prim_utils_8h_source"/>
      </node>
      <node id="78258">
        <label>pxr/imaging/hdPrman/gprim.h</label>
        <link refid="imaging_2hd_prman_2gprim_8h_source"/>
        <childnode refid="78243" relation="include">
        </childnode>
        <childnode refid="78255" relation="include">
        </childnode>
        <childnode refid="78256" relation="include">
        </childnode>
        <childnode refid="78247" relation="include">
        </childnode>
        <childnode refid="78250" relation="include">
        </childnode>
        <childnode refid="78259" relation="include">
        </childnode>
        <childnode refid="78253" relation="include">
        </childnode>
      </node>
      <node id="78132">
        <label>pxr/usd/usd/specializes.h</label>
        <link refid="specializes_8h_source"/>
      </node>
      <node id="78065">
        <label>pxr/usd/usdGeom/nurbsCurves.h</label>
        <link refid="nurbs_curves_8h"/>
      </node>
      <node id="78283">
        <label>pxr/imaging/hdx/task.h</label>
        <link refid="_2task_8h_source"/>
        <childnode refid="78284" relation="include">
        </childnode>
        <childnode refid="78285" relation="include">
        </childnode>
        <childnode refid="78286" relation="include">
        </childnode>
        <childnode refid="78287" relation="include">
        </childnode>
        <childnode refid="78288" relation="include">
        </childnode>
        <childnode refid="78200" relation="include">
        </childnode>
        <childnode refid="78289" relation="include">
        </childnode>
        <childnode refid="78275" relation="include">
        </childnode>
        <childnode refid="78278" relation="include">
        </childnode>
        <childnode refid="78290" relation="include">
        </childnode>
      </node>
      <node id="78074">
        <label>pxr/usd/usdSkel/skeleton.h</label>
        <link refid="skeleton_8h"/>
        <childnode refid="78075" relation="include">
        </childnode>
        <childnode refid="78036" relation="include">
        </childnode>
        <childnode refid="77985" relation="include">
        </childnode>
      </node>
      <node id="78219">
        <label>pxr/imaging/hd/volumeFieldBindingSchema.h</label>
        <link refid="volume_field_binding_schema_8h_source"/>
      </node>
      <node id="77949">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="78085">
        <label>pxr/usd/usdVol/fieldAsset.h</label>
        <link refid="field_asset_8h"/>
        <childnode refid="78086" relation="include">
        </childnode>
        <childnode refid="78087" relation="include">
        </childnode>
      </node>
      <node id="78354">
        <label>pxr/imaging/hdPrman/coordSysPrimSceneIndexPlugin.h</label>
        <link refid="coord_sys_prim_scene_index_plugin_8h_source"/>
      </node>
      <node id="78145">
        <label>pxr/usd/usd/resolveInfo.h</label>
        <link refid="resolve_info_8h"/>
        <childnode refid="78094" relation="include">
        </childnode>
        <childnode refid="78047" relation="include">
        </childnode>
      </node>
      <node id="77985">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="78314">
        <label>pxr/usdImaging/usdImaging/rerootingSceneIndex.h</label>
        <link refid="rerooting_scene_index_8h_source"/>
      </node>
      <node id="77942">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="78180">
        <label>pxr/imaging/hd/instanceSchema.h</label>
        <link refid="instance_schema_8h_source"/>
      </node>
      <node id="78057">
        <label>pxr/usd/usdGeom/cube.h</label>
        <link refid="cube_8h"/>
        <childnode refid="77934" relation="include">
        </childnode>
      </node>
      <node id="78289">
        <label>pxr/imaging/hdx/presentTask.h</label>
        <link refid="present_task_8h_source"/>
      </node>
      <node id="78024">
        <label>pxr/usd/usdPhysics/massAPI.h</label>
        <link refid="mass_a_p_i_8h"/>
      </node>
      <node id="78075">
        <label>pxr/usd/usdSkel/binding.h</label>
        <link refid="usd_2usd_skel_2binding_8h"/>
        <childnode refid="78076" relation="include">
        </childnode>
        <childnode refid="78078" relation="include">
        </childnode>
        <childnode refid="77985" relation="include">
        </childnode>
      </node>
      <node id="78141">
        <label>pxr/usdImaging/usdImaging/materialBindingAPIAdapter.h</label>
        <link refid="material_binding_a_p_i_adapter_8h_source"/>
      </node>
      <node id="77930">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="78241">
        <label>pxr/imaging/hd/rprim.h</label>
        <link refid="rprim_8h_source"/>
        <childnode refid="78242" relation="include">
        </childnode>
        <childnode refid="78245" relation="include">
        </childnode>
        <childnode refid="78249" relation="include">
        </childnode>
        <childnode refid="78252" relation="include">
        </childnode>
        <childnode refid="78255" relation="include">
        </childnode>
        <childnode refid="78256" relation="include">
        </childnode>
        <childnode refid="78257" relation="include">
        </childnode>
        <childnode refid="78259" relation="include">
        </childnode>
        <childnode refid="78260" relation="include">
        </childnode>
        <childnode refid="77936" relation="include">
        </childnode>
      </node>
      <node id="78239">
        <label>pxr/imaging/hd/extComputationUtils.h</label>
        <link refid="ext_computation_utils_8h_source"/>
      </node>
      <node id="78034">
        <label>pxr/usd/usdShade/nodeDefAPI.h</label>
        <link refid="node_def_a_p_i_8h"/>
        <childnode refid="78035" relation="include">
        </childnode>
        <childnode refid="77928" relation="include">
        </childnode>
      </node>
      <node id="77984">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
      <node id="78375">
        <label>pxr/imaging/hdx/selectionSceneIndexObserver.h</label>
        <link refid="selection_scene_index_observer_8h_source"/>
      </node>
      <node id="78345">
        <label>pxr/imaging/hdSt/renderDelegate.h</label>
        <link refid="t_2render_delegate_8h_source"/>
      </node>
      <node id="78211">
        <label>pxr/imaging/hd/sceneGlobalsSchema.h</label>
        <link refid="scene_globals_schema_8h_source"/>
      </node>
      <node id="78136">
        <label>pxr/usdImaging/usdImaging/apiSchemaAdapter.h</label>
        <link refid="api_schema_adapter_8h"/>
        <childnode refid="78137" relation="include">
        </childnode>
        <childnode refid="78138" relation="include">
        </childnode>
        <childnode refid="78139" relation="include">
        </childnode>
        <childnode refid="78140" relation="include">
        </childnode>
        <childnode refid="78141" relation="include">
        </childnode>
      </node>
      <node id="78095">
        <label>pxr/usd/usd/schemaBase.h</label>
        <link refid="schema_base_8h_source"/>
        <childnode refid="77911" relation="include">
        </childnode>
        <childnode refid="78096" relation="include">
        </childnode>
      </node>
      <node id="78273">
        <label>pxr/imaging/hdx/oitResolveTask.h</label>
        <link refid="oit_resolve_task_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_tf_small_vector_base" prot="public">TfSmallVectorBase</innerclass>
    <innerclass refid="union_tf_small_vector_base_1_1___data" prot="protected">TfSmallVectorBase::_Data</innerclass>
    <innerclass refid="union_tf_small_vector_base_1_1___data_3_01_u_00_010_01_4" prot="protected">TfSmallVectorBase::_Data&lt; U, 0 &gt;</innerclass>
    <innerclass refid="class_tf_small_vector" prot="public">TfSmallVector</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="small_vector_8h_1a052bcf49efbc3d971fa99dd18f77351a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>uint32_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(TfSmallVector&lt; T, N &gt; &amp;a, TfSmallVector&lt; T, N &gt; &amp;b)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; T, N &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/smallVector.h" line="930" column="1" bodyfile="pxr/base/tf/smallVector.h" bodystart="930" bodyend="933"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_SMALL_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_SMALL_VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;new&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Contains<sp/>parts<sp/>of<sp/>the<sp/>small<sp/>vector<sp/>implementation<sp/>that<sp/>do<sp/>not<sp/>depend<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*all*<sp/>of<sp/>TfSmallVector&apos;s<sp/>template<sp/>parameters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">TfSmallVectorBase</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>size_type<sp/>=<sp/>std::uint32_t;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>difference_type<sp/>=<sp/>std::int32_t;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>local<sp/>capacity<sp/>that<sp/>may<sp/>be<sp/>used<sp/>without<sp/>increasing<sp/>the<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>TfSmallVector.<sp/><sp/>TfSmallVector&lt;T,<sp/>N&gt;<sp/>will<sp/>never<sp/>use<sp/>more<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>capacity<sp/>than<sp/>is<sp/>specified<sp/>by<sp/>N<sp/>but<sp/>clients<sp/>that<sp/>wish<sp/>to<sp/>maximize<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>occupancy<sp/>in<sp/>a<sp/>generic<sp/>way<sp/>can<sp/>compute<sp/>N<sp/>using<sp/>this<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>size_type<sp/>ComputeSerendipitousLocalCapacity()<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(U)<sp/>&lt;=<sp/></highlight><highlight class="keyword">alignof</highlight><highlight class="normal">(_Data&lt;U,<sp/>0&gt;))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_Data&lt;U,<sp/>0&gt;)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>std::uninitialized_copy<sp/>that<sp/>either<sp/>moves<sp/>or<sp/>copies<sp/>entries,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>whether<sp/>the<sp/>type<sp/>is<sp/>move<sp/>constructible<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Iterator<sp/>_UninitializedMove(</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Iterator<sp/>first,<sp/>Iterator<sp/>last,<sp/>Iterator<sp/>dest)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::uninitialized_copy(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_move_iterator(first),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_move_iterator(last),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invokes<sp/>either<sp/>the<sp/>move<sp/>or<sp/>copy<sp/>constructor<sp/>(via<sp/>placement<sp/>new),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>whether<sp/>U<sp/>is<sp/>move<sp/>constructible<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_MoveConstruct(U<sp/>*p,<sp/>U<sp/>*src)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(p)<sp/>U(std::move(*src));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>data<sp/>storage,<sp/>which<sp/>is<sp/>a<sp/>union<sp/>of<sp/>both<sp/>the<sp/>local<sp/>storage,<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>a<sp/>pointer,<sp/>holding<sp/>the<sp/>address<sp/>to<sp/>the<sp/>remote<sp/>storage<sp/>on<sp/>the<sp/>heap,<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">ype<sp/>M<sp/>&gt;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">_Data<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>*GetLocalStorage()<sp/>{<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reinterpret_cast&lt;U<sp/>*&gt;(_local);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>*GetLocalStorage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reinterpret_cast&lt;const<sp/>U<sp/>*&gt;(_local);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>*GetRemoteStorage()<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_remote;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>*GetRemoteStorage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_remote;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRemoteStorage(U<sp/>*p)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_remote<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(U)<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>_local[</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(U)*M];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U*<sp/>_remote;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>N<sp/>==<sp/>0<sp/>the<sp/>_Data<sp/>class<sp/>has<sp/>been<sp/>specialized<sp/>to<sp/>elide<sp/>the<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage<sp/>completely.<sp/>This<sp/>way<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>rely<sp/>on<sp/>compiler-specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>for<sp/>0-sized<sp/>arrays.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">_Data&lt;U,<sp/>0&gt;<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>*GetLocalStorage()<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX:<sp/>Could<sp/>assert<sp/>here.<sp/>Introduce<sp/>dependency<sp/>on<sp/>tf/diagnostic.h?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>*GetLocalStorage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX:<sp/>Could<sp/>assert<sp/>here.<sp/>Introduce<sp/>dependency<sp/>on<sp/>tf/diagnostic.h?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U<sp/>*GetRemoteStorage()<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_remote;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>*GetRemoteStorage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_remote;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRemoteStorage(U<sp/>*p)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_remote<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>U*<sp/>_remote;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>N<sp/>&gt;</highlight></codeline>
<codeline lineno="177" refid="class_tf_small_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TfSmallVectorBase</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>value_type;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T&amp;<sp/>reference;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>const_reference;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>iterator<sp/>=<sp/>T*;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>const_iterator<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;iterator&gt;<sp/>reverse_iterator;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::reverse_iterator&lt;const_iterator&gt;<sp/>const_reverse_iterator;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"></codeline>
<codeline lineno="210" refid="class_tf_small_vector_1a9d49752d9f29dd494b679ab6706e3e20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a9d49752d9f29dd494b679ab6706e3e20" kindref="member">TfSmallVector</ref>()<sp/>:<sp/>_size(0),<sp/>_capacity(N)<sp/>{}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="class_tf_small_vector_1a635fd3eb2447d991562087da2a720457" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a635fd3eb2447d991562087da2a720457" kindref="member">TfSmallVector</ref>(size_type<sp/>n)<sp/>:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity(N)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_InitStorage(n);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*d<sp/>=<sp/><ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(size_type<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(d<sp/>+<sp/>i)<sp/>value_type();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="225" refid="class_tf_small_vector_1a7ac6bb0c31a3224b536159216f3f317d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a7ac6bb0c31a3224b536159216f3f317d" kindref="member">TfSmallVector</ref>(size_type<sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;v)<sp/>:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity(N)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_InitStorage(n);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_fill_n(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>(),<sp/>n,<sp/>v);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_tf_small_vector_1aa4fc0d21f8d878c10b25246f79573063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1aa4fc0d21f8d878c10b25246f79573063" kindref="member">DefaultInitTag</ref><sp/>{<sp/>DefaultInit<sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a9d49752d9f29dd494b679ab6706e3e20" kindref="member">TfSmallVector</ref>(size_type<sp/>n,<sp/><ref refid="class_tf_small_vector_1aa4fc0d21f8d878c10b25246f79573063" kindref="member">DefaultInitTag</ref>)<sp/>:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity(N)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_InitStorage(n);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*d<sp/>=<sp/><ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(size_type<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(d<sp/>+<sp/>i)<sp/>value_type;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_tf_small_vector_1aa75a8797abb88e1b7c98c865c5a4188b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1aa75a8797abb88e1b7c98c865c5a4188b" kindref="member">TfSmallVector</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;rhs)<sp/>:<sp/>_capacity(N)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_InitStorage(rhs.<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_copy(rhs.begin(),<sp/>rhs.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="class_tf_small_vector_1ad609bf16e9ce030bff999484092eb700" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1ad609bf16e9ce030bff999484092eb700" kindref="member">TfSmallVector</ref>(<ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;&amp;rhs)<sp/>:<sp/>_size(0),<sp/>_capacity(N)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rhs<sp/>can<sp/>not<sp/>be<sp/>stored<sp/>locally,<sp/>take<sp/>rhs&apos;s<sp/>remote<sp/>storage<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>rhs<sp/>to<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.size()<sp/>&gt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.SetRemoteStorage(rhs._data.GetRemoteStorage());</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(_capacity,<sp/>rhs._capacity);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rhs<sp/>is<sp/>stored<sp/>locally,<sp/>it&apos;s<sp/>faster<sp/>to<sp/>simply<sp/>move<sp/>the<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>into<sp/>this<sp/>vector&apos;s<sp/>storage,<sp/>destruct<sp/>the<sp/>entries<sp/>at<sp/>rhs,<sp/>and<sp/>swap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sizes.<sp/>Note<sp/>that<sp/>capacities<sp/>will<sp/>be<sp/>the<sp/>same<sp/>in<sp/>this<sp/>case,<sp/>so<sp/>no</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>swap<sp/>those.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UninitializedMove(rhs.begin(),<sp/>rhs.end(),<sp/>begin());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs._Destruct();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(_size,<sp/>rhs._size);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="class_tf_small_vector_1a37f14cf5d6dbbc2f879ef4ef51bab594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a37f14cf5d6dbbc2f879ef4ef51bab594" kindref="member">TfSmallVector</ref>(std::initializer_list&lt;T&gt;<sp/>values)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>(values.begin(),<sp/>values.end())<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_ForwardIterator&gt;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_EnableIfForwardIterator<sp/>=</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ForwardIterator&gt;::iterator_category,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward_iterator_tag</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::value</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ForwardIterator,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>_EnableIfForwardIterator&lt;ForwardIterator&gt;&gt;</highlight></codeline>
<codeline lineno="290" refid="class_tf_small_vector_1a296a340c51d137421b23d330bc5171f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a296a340c51d137421b23d330bc5171f9" kindref="member">TfSmallVector</ref>(ForwardIterator<sp/>first,<sp/>ForwardIterator<sp/>last)<sp/>:<sp/>_capacity(N)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_InitStorage(std::distance(first,<sp/>last));</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_copy(first,<sp/>last,<sp/>begin());</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_tf_small_vector_1a5a466b818d717135144b91d3631c6d95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a5a466b818d717135144b91d3631c6d95" kindref="member">~TfSmallVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Destruct();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FreeStorage();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_tf_small_vector_1a7fabb51d0c3abbcca9d288fddb80ccc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;<ref refid="class_tf_small_vector_1a7fabb51d0c3abbcca9d288fddb80ccc3" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a155d12676aeb736db2be14208ebf4d84" kindref="member">assign</ref>(rhs.begin(),<sp/>rhs.end());</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="class_tf_small_vector_1af1e2075230542376f84110d2bb1a9b15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;<ref refid="class_tf_small_vector_1af1e2075230542376f84110d2bb1a9b15" kindref="member">operator=</ref>(<ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a7fa83c50a503a51a4623759093d1f90a" kindref="member">swap</ref>(rhs);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="323" refid="class_tf_small_vector_1a615337b8540b70e2d0beee0c1df153cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;<ref refid="class_tf_small_vector_1a615337b8540b70e2d0beee0c1df153cd" kindref="member">operator=</ref>(std::initializer_list&lt;T&gt;<sp/>ilist)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a155d12676aeb736db2be14208ebf4d84" kindref="member">assign</ref>(ilist.begin(),<sp/>ilist.end());</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="class_tf_small_vector_1a7fa83c50a503a51a4623759093d1f90a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a7fa83c50a503a51a4623759093d1f90a" kindref="member">swap</ref>(<ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>this<sp/>vector<sp/>and<sp/>rhs<sp/>are<sp/>stored<sp/>locally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_IsLocal()<sp/>&amp;&amp;<sp/>rhs._IsLocal())<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>*smaller<sp/>=<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>&lt;<sp/>rhs.<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>?<sp/>this<sp/>:<sp/>&amp;rhs;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>*larger<sp/>=<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>&lt;<sp/>rhs.<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>?<sp/>&amp;rhs<sp/>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>all<sp/>the<sp/>entries<sp/>up<sp/>to<sp/>the<sp/>size<sp/>of<sp/>the<sp/>smaller<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap_ranges(smaller-&gt;begin(),<sp/>smaller-&gt;end(),<sp/>larger-&gt;begin());</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>tail<sp/>end<sp/>of<sp/>the<sp/>entries,<sp/>and<sp/>destruct<sp/>them<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(size_type<sp/>i<sp/>=<sp/>smaller-&gt;<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>();<sp/>i<sp/>&lt;<sp/>larger-&gt;<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MoveConstruct(smaller-&gt;<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/>i,<sp/>&amp;(*larger)[i]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*larger)[i].~value_type();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>sizes.<sp/>Capacities<sp/>are<sp/>already<sp/>equal<sp/>in<sp/>this<sp/>case.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(smaller-&gt;_size,<sp/>larger-&gt;_size);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>this<sp/>vector<sp/>and<sp/>rhs<sp/>are<sp/>stored<sp/>remotely.<sp/>Simply<sp/>swap<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers,<sp/>as<sp/>well<sp/>as<sp/>size<sp/>and<sp/>capacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_IsLocal()<sp/>&amp;&amp;<sp/>!rhs._IsLocal())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*tmp<sp/>=<sp/>_data.GetRemoteStorage();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.SetRemoteStorage(rhs._data.GetRemoteStorage());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs._data.SetRemoteStorage(tmp);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(_size,<sp/>rhs._size);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(_capacity,<sp/>rhs._capacity);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>this<sp/>vector<sp/>or<sp/>rhs<sp/>is<sp/>stored<sp/>remotely,<sp/>whereas<sp/>the<sp/>other</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>is<sp/>stored<sp/>locally.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>*remote<sp/>=<sp/>_IsLocal()<sp/>?<sp/>&amp;rhs<sp/>:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>*local<sp/>=<sp/><sp/>_IsLocal()<sp/>?<sp/>this<sp/>:<sp/>&amp;rhs;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>remote<sp/>storage.<sp/>We&apos;ll<sp/>be<sp/>overwriting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>value<sp/>below,<sp/>so<sp/>gotta<sp/>retain<sp/>it<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*remoteStorage<sp/>=<sp/>remote-&gt;_GetStorage();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>all<sp/>the<sp/>entries<sp/>from<sp/>the<sp/>vector<sp/>with<sp/>the<sp/>local<sp/>storage,<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>other<sp/>vector&apos;s<sp/>local<sp/>storage.<sp/>This<sp/>will<sp/>overwrite<sp/>the<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>other<sp/>vectors<sp/>remote<sp/>storage.<sp/>Note<sp/>that<sp/>we<sp/>will<sp/>have<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>destruct<sp/>the<sp/>elements<sp/>at<sp/>the<sp/>source&apos;s<sp/>local<sp/>storage.<sp/>The</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>will<sp/>become<sp/>the<sp/>one<sp/>with<sp/>the<sp/>remote<sp/>storage,<sp/>so<sp/>those</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entries<sp/>will<sp/>be<sp/>essentially<sp/>freed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(size_type<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>local-&gt;<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MoveConstruct(</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remote-&gt;_data.GetLocalStorage()<sp/>+<sp/>i,<sp/>&amp;(*local)[i]);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*local)[i].~value_type();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>the<sp/>remote<sp/>storage<sp/>into<sp/>the<sp/>vector<sp/>which<sp/>previously<sp/>had<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>local<sp/>storage.<sp/>It&apos;s<sp/>been<sp/>properly<sp/>cleaned<sp/>up<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local-&gt;_data.SetRemoteStorage(remoteStorage);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Swap<sp/>sizes<sp/>and<sp/>capacities.<sp/>Easy<sp/>peasy.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(remote-&gt;_size,<sp/>local-&gt;_size);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>(remote-&gt;_capacity,<sp/>local-&gt;_capacity);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="396" refid="class_tf_small_vector_1ac9446ed0ef7e2eeaf567b8f1ccbc5328" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="class_tf_small_vector_1ac9446ed0ef7e2eeaf567b8f1ccbc5328" kindref="member">insert</ref>(const_iterator<sp/>it,<sp/>value_type<sp/>&amp;&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Insert(it,<sp/>std::move(v));</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="class_tf_small_vector_1aea0ca2c78c129fe5fdf4acb7d6aa407a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="class_tf_small_vector_1aea0ca2c78c129fe5fdf4acb7d6aa407a" kindref="member">insert</ref>(const_iterator<sp/>it,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Insert(it,<sp/>v);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_tf_small_vector_1a23da367a0d3329900421c2ef531cdd1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="class_tf_small_vector_1a23da367a0d3329900421c2ef531cdd1c" kindref="member">erase</ref>(const_iterator<sp/>it)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a23da367a0d3329900421c2ef531cdd1c" kindref="member">erase</ref>(it,<sp/>it<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_tf_small_vector_1a62aba3bd6820773b969a15c3816dafa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/><ref refid="class_tf_small_vector_1a62aba3bd6820773b969a15c3816dafa0" kindref="member">erase</ref>(const_iterator<sp/>it,<sp/>const_iterator<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*p<sp/>=<sp/>const_cast&lt;value_type<sp/>*&gt;(&amp;*it);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*q<sp/>=<sp/>const_cast&lt;value_type<sp/>*&gt;(&amp;*last);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>removing<sp/>anything,<sp/>bail<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p<sp/>==<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(p);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>num<sp/>=<sp/>std::distance(p,<sp/>q);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>entries<sp/>starting<sp/>at<sp/>last,<sp/>down<sp/>a<sp/>few<sp/>slots<sp/>to<sp/>starting<sp/>a<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*e<sp/>=<sp/><ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(q,<sp/>e,<sp/>p);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destruct<sp/>all<sp/>the<sp/>freed<sp/>up<sp/>slots<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(value_type<sp/>*i<sp/>=<sp/>(e<sp/>-<sp/>num);<sp/>i<sp/>!=<sp/>e;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;~value_type();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bump<sp/>down<sp/>the<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>-=<sp/>num;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>next<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(p);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_tf_small_vector_1a2376d19610c52c54a71ad09f66d1b732" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a2376d19610c52c54a71ad09f66d1b732" kindref="member">reserve</ref>(size_type<sp/>newCapacity)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>reserve<sp/>storage<sp/>if<sp/>the<sp/>new<sp/>capacity<sp/>would<sp/>grow<sp/>past<sp/>the<sp/>local</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage,<sp/>or<sp/>the<sp/>currently<sp/>allocated<sp/>storage.<sp/>We&apos;ll<sp/>grow<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>accommodate<sp/>exactly<sp/>newCapacity<sp/>entries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newCapacity<sp/>&gt;<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GrowStorage(newCapacity);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_tf_small_vector_1a85140508fec5d0c4d1dde0b59e9bdc79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a85140508fec5d0c4d1dde0b59e9bdc79" kindref="member">resize</ref>(size_type<sp/>newSize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;v<sp/>=<sp/>value_type())<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>new<sp/>size<sp/>is<sp/>smaller<sp/>than<sp/>the<sp/>current<sp/>size,<sp/>let<sp/>go<sp/>of<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>entries<sp/>at<sp/>the<sp/>tail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize<sp/>&lt;<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a23da367a0d3329900421c2ef531cdd1c" kindref="member">erase</ref>(const_iterator(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/>newSize),<sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()));<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>lets<sp/>grow<sp/>and<sp/>fill:<sp/>Reserve<sp/>some<sp/>storage,<sp/>fill<sp/>the<sp/>tail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>with<sp/>copies<sp/>of<sp/>v,<sp/>and<sp/>update<sp/>the<sp/>new<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize<sp/>&gt;<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a2376d19610c52c54a71ad09f66d1b732" kindref="member">reserve</ref>(newSize);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_fill(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>(),<sp/><ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/>newSize,<sp/>v);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>=<sp/>newSize;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="class_tf_small_vector_1ac8bb3912a3ce86b15842e79d0b421204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Destruct();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ForwardIterator,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>=<sp/>_EnableIfForwardIterator&lt;ForwardIterator&gt;&gt;</highlight></codeline>
<codeline lineno="484" refid="class_tf_small_vector_1a155d12676aeb736db2be14208ebf4d84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a155d12676aeb736db2be14208ebf4d84" kindref="member">assign</ref>(ForwardIterator<sp/>first,<sp/>ForwardIterator<sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>newSize<sp/>=<sp/>std::distance(first,<sp/>last);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a2376d19610c52c54a71ad09f66d1b732" kindref="member">reserve</ref>(newSize);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_copy(first,<sp/>last,<sp/>begin());</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>=<sp/>newSize;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="class_tf_small_vector_1a2f0a260005e8a3b728300e9b5c95b09e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a2f0a260005e8a3b728300e9b5c95b09e" kindref="member">assign</ref>(std::initializer_list&lt;T&gt;<sp/>ilist)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a155d12676aeb736db2be14208ebf4d84" kindref="member">assign</ref>(ilist.begin(),<sp/>ilist.end());</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args<sp/>&gt;</highlight></codeline>
<codeline lineno="501" refid="class_tf_small_vector_1ac294eba73765b9a72a7399d64e8ecd9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1ac294eba73765b9a72a7399d64e8ecd9a" kindref="member">emplace_back</ref>(Args&amp;&amp;...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>==<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GrowStorage(_NextCapacity());</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>())<sp/>value_type(std::forward&lt;Args&gt;(args)...);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="class_tf_small_vector_1a0122cc465d5dc8382ca3736e78f08fbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a0122cc465d5dc8382ca3736e78f08fbd" kindref="member">push_back</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1ac294eba73765b9a72a7399d64e8ecd9a" kindref="member">emplace_back</ref>(v);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_tf_small_vector_1af77369cc4768d6f03bc6c1c11973dc04" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1af77369cc4768d6f03bc6c1c11973dc04" kindref="member">push_back</ref>(value_type<sp/>&amp;&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1ac294eba73765b9a72a7399d64e8ecd9a" kindref="member">emplace_back</ref>(std::move(v));</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ForwardIterator&gt;</highlight></codeline>
<codeline lineno="525" refid="class_tf_small_vector_1ac24bbe5d512595fce0c3d4fc04cd9857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1ac24bbe5d512595fce0c3d4fc04cd9857" kindref="member">insert</ref>(iterator<sp/>pos,<sp/>ForwardIterator<sp/>first,<sp/>ForwardIterator<sp/>last)</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_convertible&lt;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;ForwardIterator&gt;::iterator_category,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward_iterator_tag&gt;::value,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Input<sp/>Iterators<sp/>not<sp/>supported.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>the<sp/>insert-at-end<sp/>special<sp/>case<sp/>as<sp/>the<sp/>very<sp/>first<sp/>thing<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>we<sp/>give<sp/>the<sp/>compiler<sp/>the<sp/>best<sp/>possible<sp/>opportunity<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eliminate<sp/>the<sp/>general<sp/>case<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>insertAtEnd<sp/>=<sp/>pos<sp/>==<sp/>end();</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numNewElems<sp/>=<sp/>std::distance(first,<sp/>last);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>neededCapacity<sp/>=<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>+<sp/>numNewElems;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>nextCapacity<sp/>=</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(_NextCapacity(),<sp/>neededCapacity);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insertions<sp/>at<sp/>the<sp/>end<sp/>would<sp/>be<sp/>handled<sp/>correctly<sp/>by<sp/>the<sp/>code<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>without<sp/>this<sp/>special<sp/>case.<sp/><sp/>However,<sp/>insert(end(),<sp/>f,<sp/>l)<sp/>is<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extremely<sp/>common<sp/>operation<sp/>so<sp/>we<sp/>provide<sp/>this<sp/>fast<sp/>path<sp/>both<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>unneeded<sp/>work<sp/>and<sp/>to<sp/>make<sp/>it<sp/>easier<sp/>for<sp/>the<sp/>compiler<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eliminate<sp/>dead<sp/>code<sp/>when<sp/>pos<sp/>==<sp/>end().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insertAtEnd)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>reallocation<sp/>here<sp/>is<sp/>not<sp/>a<sp/>simple<sp/>reserve.<sp/><sp/>We<sp/>want<sp/>to<sp/>grow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>storage<sp/>only<sp/>when<sp/>there<sp/>are<sp/>too<sp/>many<sp/>new<sp/>elements<sp/>but<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>desired<sp/>size<sp/>is<sp/>based<sp/>on<sp/>the<sp/>growth<sp/>factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neededCapacity<sp/>&gt;<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GrowStorage(nextCapacity);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_copy(first,<sp/>last,<sp/>end());</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>+=<sp/>numNewElems;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(neededCapacity<sp/>&gt;<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we<sp/>need<sp/>to<sp/>realloc,<sp/>we<sp/>can<sp/>do<sp/>the<sp/>insertion<sp/>by<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>range,<sp/>[begin(),<sp/>pos),<sp/>[first,<sp/>last),<sp/>[pos,<sp/>end()),<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>new<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>posI<sp/>=<sp/>std::distance(begin(),<sp/>pos);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*newStorage<sp/>=<sp/>_Allocate(nextCapacity);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>newPrefixBegin<sp/>=<sp/>iterator(newStorage);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>newPos<sp/>=<sp/>newPrefixBegin<sp/>+<sp/>posI;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>newSuffixBegin<sp/>=<sp/>newPos<sp/>+<sp/>numNewElems;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UninitializedMove(begin(),<sp/>pos,<sp/>newPrefixBegin);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_copy(first,<sp/>last,<sp/>newPos);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UninitializedMove(pos,<sp/>end(),<sp/>newSuffixBegin);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destroy<sp/>old<sp/>data<sp/>and<sp/>set<sp/>up<sp/>this<sp/>new<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Destruct();</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FreeStorage();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.SetRemoteStorage(newStorage);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity<sp/>=<sp/>nextCapacity;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>in-place<sp/>requires<sp/>handling<sp/>four<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>both<sp/>the<sp/>range-to-move<sp/>[pos,<sp/>end())<sp/>and<sp/>the<sp/>range-to-insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[first,<sp/>last),<sp/>there<sp/>are<sp/>two<sp/>subranges:<sp/>the<sp/>subrange<sp/>to<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>subrange<sp/>to<sp/>uinitialized_copy.<sp/><sp/>Note<sp/>that<sp/>only<sp/>three<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>ranges<sp/>may<sp/>be<sp/>non-empty:<sp/>either<sp/>there<sp/>is<sp/>a<sp/>non-empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prefix<sp/>of<sp/>[pos,<sp/>end())<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>copied<sp/>over<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements<sp/>or<sp/>there<sp/>is<sp/>a<sp/>non-empty<sp/>suffix<sp/>of<sp/>[first,<sp/>last)<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>be<sp/>placed<sp/>in<sp/>uninitialized<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numMoveElems<sp/>=<sp/>std::distance(pos,<sp/>end());</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numUninitMoves<sp/>=<sp/>std::min(numNewElems,<sp/>numMoveElems);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numInitMoves<sp/>=<sp/>numMoveElems<sp/>-<sp/>numUninitMoves;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numUninitNews<sp/>=<sp/>numNewElems<sp/>-<sp/>numUninitMoves;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>numInitNews<sp/>=<sp/>numNewElems<sp/>-<sp/>numUninitNews;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>our<sp/>existing<sp/>elements<sp/>out<sp/>of<sp/>the<sp/>way<sp/>of<sp/>new<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>umSrc<sp/>=<sp/>pos<sp/>+<sp/>numInitMoves;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>umDst<sp/>=<sp/>end()<sp/>+<sp/>numUninitNews;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UninitializedMove(umSrc,<sp/>end(),<sp/>umDst);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_backward(pos,<sp/>umSrc,<sp/>umDst);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>new<sp/>elements<sp/>into<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;numInitNews;<sp/>++i,<sp/>++first,<sp/>++pos)<sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pos<sp/>=<sp/>*first;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uninitialized_copy(first,<sp/>last,<sp/>end());</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>+=<sp/>numNewElems;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="class_tf_small_vector_1ae305801fb9ee6c6737eebd7d993e8052" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1ae305801fb9ee6c6737eebd7d993e8052" kindref="member">insert</ref>(iterator<sp/>pos,<sp/>std::initializer_list&lt;T&gt;<sp/>ilist)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1ac9446ed0ef7e2eeaf567b8f1ccbc5328" kindref="member">insert</ref>(pos,<sp/>ilist.begin(),<sp/>ilist.end());</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="class_tf_small_vector_1a058bda4957df6a97b1ea6c9fd783f672" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a058bda4957df6a97b1ea6c9fd783f672" kindref="member">pop_back</ref>()<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1af71e6c1eccbc12e9339c00a86a981a43" kindref="member">back</ref>().~value_type();</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="629" refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_size;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="635" refid="class_tf_small_vector_1a7301058b19a8c321f08487339242c512" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>size_type<sp/><ref refid="class_tf_small_vector_1a7301058b19a8c321f08487339242c512" kindref="member">max_size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::numeric_limits&lt;size_type&gt;::max();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="class_tf_small_vector_1a644718bb2fb240de962dc3c9a1fdf0dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a644718bb2fb240de962dc3c9a1fdf0dc" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="650" refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_capacity;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="class_tf_small_vector_1ab65a26a81fa34dceafc235ee5d4f2fbc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>size_type<sp/><ref refid="class_tf_small_vector_1ab65a26a81fa34dceafc235ee5d4f2fbc" kindref="member">internal_capacity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>begin()<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(_GetStorage());</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_iterator(_GetStorage());</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>cbegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>end()<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(_GetStorage()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_iterator(_GetStorage()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>cend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>reverse_iterator<sp/>rbegin()<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverse_iterator(end());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/>rbegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(end());</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/>crbegin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rbegin();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>reverse_iterator<sp/>rend()<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reverse_iterator(begin());</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/>rend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>const_reverse_iterator(begin());</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reverse_iterator<sp/>crend()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rend();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"></codeline>
<codeline lineno="732" refid="class_tf_small_vector_1a6a48363b4355f6f5b441637774f79a59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="class_tf_small_vector_1a6a48363b4355f6f5b441637774f79a59" kindref="member">front</ref>()<sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*begin();</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="class_tf_small_vector_1a0ae6b4f9719202f7ddb334c16fb03d80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="class_tf_small_vector_1a0ae6b4f9719202f7ddb334c16fb03d80" kindref="member">front</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*begin();</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="744" refid="class_tf_small_vector_1af71e6c1eccbc12e9339c00a86a981a43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="class_tf_small_vector_1af71e6c1eccbc12e9339c00a86a981a43" kindref="member">back</ref>()<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="750" refid="class_tf_small_vector_1a61772c77ad2abfbb296912e7281e154c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="class_tf_small_vector_1a61772c77ad2abfbb296912e7281e154c" kindref="member">back</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="756" refid="class_tf_small_vector_1a131b0b7686faea5305ebc6cdd4f07db6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/><ref refid="class_tf_small_vector_1a131b0b7686faea5305ebc6cdd4f07db6" kindref="member">operator[]</ref>(size_type<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="762" refid="class_tf_small_vector_1aacd570d10fffaa42d68957254ac6e25d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>const_reference<sp/><ref refid="class_tf_small_vector_1aacd570d10fffaa42d68957254ac6e25d" kindref="member">operator[]</ref>(size_type<sp/>i)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>*<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_GetStorage();</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="class_tf_small_vector_1a9aa54a1714b14d44262aaa9d330eb26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>*<ref refid="class_tf_small_vector_1a9aa54a1714b14d44262aaa9d330eb26b" kindref="member">data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_GetStorage();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="780" refid="class_tf_small_vector_1a7d19277e8745059b59f00abc736d3cbf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a7d19277e8745059b59f00abc736d3cbf" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>==<sp/>rhs.<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>&amp;&amp;<sp/>std::equal(begin(),<sp/>end(),<sp/>rhs.begin());</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="class_tf_small_vector_1a5d3589bb84cf743b9423b9ca8f662eac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector_1a5d3589bb84cf743b9423b9ca8f662eac" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_tf_small_vector_1a7d19277e8745059b59f00abc736d3cbf" kindref="member">operator==</ref>(rhs);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>the<sp/>local<sp/>storage<sp/>is<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsLocal()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_capacity<sp/>&lt;=<sp/>N;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>storage,<sp/>which<sp/>is<sp/>either<sp/>local<sp/>or<sp/>remote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>the<sp/>current<sp/>capacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>value_type<sp/>*_GetStorage()<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_IsLocal()<sp/>?<sp/>_data.GetLocalStorage()<sp/>:<sp/>_data.GetRemoteStorage();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>const<sp/>pointer<sp/>to<sp/>the<sp/>storage,<sp/>which<sp/>is<sp/>either<sp/>local<sp/>or<sp/>remote</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>the<sp/>current<sp/>capacity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>value_type<sp/>*_GetStorage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_IsLocal()<sp/>?<sp/>_data.GetLocalStorage()<sp/>:<sp/>_data.GetRemoteStorage();</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>the<sp/>remotely<sp/>allocated<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_FreeStorage()<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_IsLocal())<sp/>{</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(_data.GetRemoteStorage());</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructs<sp/>all<sp/>the<sp/>elements<sp/>stored<sp/>in<sp/>this<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Destruct()<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*b<sp/>=<sp/><ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*e<sp/>=<sp/>b<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(value_type<sp/>*p<sp/>=<sp/>b;<sp/>p<sp/>!=<sp/>e;<sp/>++p)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;~value_type();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>buffer<sp/>on<sp/>the<sp/>heap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>value_type<sp/>*_Allocate(size_type<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;value_type<sp/>*&gt;(malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value_type)<sp/>*<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>vector<sp/>with<sp/>new<sp/>storage,<sp/>updating<sp/>the<sp/>capacity<sp/>and<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_InitStorage(size_type<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref><sp/>&gt;<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.SetRemoteStorage(_Allocate(<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>));</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity<sp/>=<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_size<sp/>=<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grow<sp/>the<sp/>storage<sp/>to<sp/>be<sp/>able<sp/>to<sp/>accommodate<sp/>newCapacity<sp/>entries.<sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>allocates<sp/>remotes<sp/>storage.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_GrowStorage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>newCapacity)<sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*newStorage<sp/>=<sp/>_Allocate(newCapacity);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UninitializedMove(begin(),<sp/>end(),<sp/>iterator(newStorage));</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Destruct();</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FreeStorage();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.SetRemoteStorage(newStorage);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>next<sp/>capacity<sp/>to<sp/>use<sp/>for<sp/>vector<sp/>growth.<sp/>The<sp/>growth<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>is<sp/>1.5.<sp/>A<sp/>constant<sp/>1<sp/>is<sp/>added<sp/>so<sp/>that<sp/>we<sp/>do<sp/>not<sp/>have<sp/>to<sp/>special</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>case<sp/>initial<sp/>capacities<sp/>of<sp/>0<sp/>and<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/>_NextCapacity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>cap<sp/>=<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cap<sp/>+<sp/>(cap<sp/>/<sp/>2)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>the<sp/>value<sp/>v<sp/>at<sp/>iterator<sp/>it.<sp/>We<sp/>use<sp/>this<sp/>method<sp/>that<sp/>takes<sp/>a<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>universal<sp/>reference<sp/>to<sp/>de-duplicate<sp/>the<sp/>logic<sp/>required<sp/>for<sp/>the<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overloads,<sp/>one<sp/>taking<sp/>an<sp/>rvalue<sp/>reference,<sp/>and<sp/>the<sp/>other<sp/>one<sp/>taking<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>const<sp/>reference.<sp/>This<sp/>way,<sp/>we<sp/>can<sp/>take<sp/>the<sp/>most<sp/>optimal<sp/>code<sp/>path<sp/>(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move,<sp/>or<sp/>copy<sp/>without<sp/>making<sp/>redundant<sp/>copies)<sp/>based<sp/>on<sp/>whether<sp/>v<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>rvalue<sp/>reference<sp/>or<sp/>const<sp/>reference.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U<sp/>&gt;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>_Insert(const_iterator<sp/>it,<sp/>U<sp/>&amp;&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*newEntry;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>iterator<sp/>points<sp/>to<sp/>the<sp/>end,<sp/>simply<sp/>push<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>end())<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_small_vector_1a0122cc465d5dc8382ca3736e78f08fbd" kindref="member">push_back</ref>(std::forward&lt;U&gt;(v));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Grow<sp/>the<sp/>remote<sp/>storage,<sp/>if<sp/>we<sp/>need<sp/>to.<sp/>This<sp/>invalidates<sp/>iterators,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>special<sp/>care<sp/>must<sp/>be<sp/>taken<sp/>in<sp/>order<sp/>to<sp/>return<sp/>a<sp/>new,<sp/>valid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>iterator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>()<sp/>==<sp/><ref refid="class_tf_small_vector_1ad0ca5aee30a51753613c75187175e836" kindref="member">capacity</ref>())<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_type<sp/>newCapacity<sp/>=<sp/>_NextCapacity();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*newStorage<sp/>=<sp/>_Allocate(newCapacity);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*i<sp/>=<sp/>const_cast&lt;value_type<sp/>*&gt;(&amp;*it);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*curData<sp/>=<sp/><ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>();</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry<sp/>=<sp/>_UninitializedMove(curData,<sp/>i,<sp/>newStorage);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(newEntry)<sp/>value_type(std::forward&lt;U&gt;(v));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_UninitializedMove(i,<sp/>curData<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>(),<sp/>newEntry<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Destruct();</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FreeStorage();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_data.SetRemoteStorage(newStorage);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_capacity<sp/>=<sp/>newCapacity;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Our<sp/>current<sp/>capacity<sp/>is<sp/>big<sp/>enough<sp/>to<sp/>allow<sp/>us<sp/>to<sp/>simply<sp/>shift</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>elements<sp/>up<sp/>one<sp/>slot<sp/>and<sp/>insert<sp/>v<sp/>at<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>all<sp/>the<sp/>elements<sp/>after<sp/>it<sp/>up<sp/>by<sp/>one<sp/>slot.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry<sp/>=<sp/>const_cast&lt;value_type<sp/>*&gt;(&amp;*it);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type<sp/>*last<sp/>=<sp/>const_cast&lt;value_type<sp/>*&gt;(&amp;<ref refid="class_tf_small_vector_1af71e6c1eccbc12e9339c00a86a981a43" kindref="member">back</ref>());</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_small_vector_1a6bf6a0e59b6079e8c24376c46aa460c3" kindref="member">data</ref>()<sp/>+<sp/><ref refid="class_tf_small_vector_1a60304b65bf89363bcc3165d3cde67f86" kindref="member">size</ref>())<sp/>value_type(std::move(*last));</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move_backward(newEntry,<sp/>last,<sp/>last<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>v<sp/>into<sp/>the<sp/>slot<sp/>at<sp/>the<sp/>supplied<sp/>iterator<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newEntry-&gt;~value_type();</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(newEntry)<sp/>value_type(std::forward&lt;U&gt;(v));</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bump<sp/>size<sp/>and<sp/>return<sp/>an<sp/>iterator<sp/>to<sp/>the<sp/>newly<sp/>inserted<sp/>entry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_size;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator(newEntry);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vector<sp/>storage,<sp/>which<sp/>is<sp/>a<sp/>union<sp/>of<sp/>the<sp/>local<sp/>storage<sp/>and<sp/>a<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>heap<sp/>memory,<sp/>if<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>_Data&lt;value_type,<sp/>N&gt;<sp/>_data;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>size<sp/>of<sp/>the<sp/>vector,<sp/>i.e.<sp/>how<sp/>many<sp/>entries<sp/>it<sp/>contains.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/>_size;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>capacity<sp/>of<sp/>the<sp/>vector,<sp/>i.e.<sp/>how<sp/>big<sp/>the<sp/>currently<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>storage<sp/>space<sp/>is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/>size_type<sp/>_capacity;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">};</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/>u</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">32_t<sp/>N<sp/>&gt;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a3f35583e8095afee271ebad345ec5a19" kindref="member">swap</ref>(<ref refid="class_tf_small_vector" kindref="compound">TfSmallVector&lt;T, N&gt;</ref><sp/>&amp;a,<sp/><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector&lt;T, N&gt;</ref><sp/>&amp;b)</highlight></codeline>
<codeline lineno="931"><highlight class="normal">{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>a.<ref refid="class_tf_small_vector_1a7fa83c50a503a51a4623759093d1f90a" kindref="member">swap</ref>(b);</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/smallVector.h"/>
  </compounddef>
</doxygen>
