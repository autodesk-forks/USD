<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_utils_registered_variant_set" kind="class" language="C++" prot="public">
    <compoundname>UsdUtilsRegisteredVariantSet</compoundname>
    <includes refid="registered_variant_set_8h" local="no">registeredVariantSet.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" prot="public" static="no" strong="yes">
        <type></type>
        <name>SelectionExportPolicy</name>
        <enumvalue id="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9ca6e7b34fa59e1bd229b207892956dc41c" prot="public">
          <name>Never</name>
          <briefdescription>
<para>Never <computeroutput>&quot;never&quot;</computeroutput> </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>    This variantSet selection is meant to remain entirely within an
    application.  This typically represents a &quot;session&quot; variantSelection
    that should not be transmitted down the pipeline. </verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9ca98f0fb56c0a75d98398a57701f407683" prot="public">
          <name>IfAuthored</name>
          <briefdescription>
<para>IfAuthored <computeroutput>&quot;ifAuthored&quot;</computeroutput> </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>    This variantSet selection should be exported if there is an authored
    opinion in the application.  This is only relevant if the
    application is able to distinguish between &quot;default&quot; and &quot;set&quot;
    opinions. </verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9ca68eec46437c384d8dad18d5464ebc35c" prot="public">
          <name>Always</name>
          <briefdescription>
<para>Authored <computeroutput>&quot;authored&quot;</computeroutput> </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>    This variantSet selection should always be exported. </verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>This specifies how the variantSet should be treated during export. </para>
        </briefdescription>
        <detaileddescription>
<para>Note, in the plugInfo.json, the values for these enum&apos;s are lowerCamelCase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="55" column="1" bodyfile="pxr/usd/usdUtils/registeredVariantSet.h" bodystart="55" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_usd_utils_registered_variant_set_1ac673bc430bdc3fdaa09f7becf98ef267" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the variantSet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="49" column="1" bodyfile="pxr/usd/usdUtils/registeredVariantSet.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_utils_registered_variant_set_1afa8ff6f4fd2f9d64414c745f409254f5" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" kindref="member">SelectionExportPolicy</ref></type>
        <definition>const SelectionExportPolicy selectionExportPolicy</definition>
        <argsstring></argsstring>
        <name>selectionExportPolicy</name>
        <briefdescription>
<para>Specifies how to export a variant selection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="83" column="1" bodyfile="pxr/usd/usdUtils/registeredVariantSet.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_usd_utils_registered_variant_set_1ac903d7a77063e9be1943da8874451d83" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool GetSelectionExportPolicyFromString</definition>
        <argsstring>(const std::string &amp;selectionExportPolicyStr, SelectionExportPolicy *selectionExportPolicy)</argsstring>
        <name>GetSelectionExportPolicyFromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>selectionExportPolicyStr</declname>
        </param>
        <param>
          <type><ref refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" kindref="member">SelectionExportPolicy</ref> *</type>
          <declname>selectionExportPolicy</declname>
        </param>
        <briefdescription>
<para>Returns the export policy from the string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="78" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_utils_registered_variant_set_1aae8f6280a1f000eb624236402cf42e52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdUtilsRegisteredVariantSet</definition>
        <argsstring>(const std::string &amp;name, const SelectionExportPolicy &amp;selectionExportPolicy)</argsstring>
        <name>UsdUtilsRegisteredVariantSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" kindref="member">SelectionExportPolicy</ref> &amp;</type>
          <declname>selectionExportPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="85" column="1" bodyfile="pxr/usd/usdUtils/registeredVariantSet.h" bodystart="85" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_utils_registered_variant_set_1a4ce511686cc25f949a9ea4808143b37d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const UsdUtilsRegisteredVariantSet &amp;other) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="struct_usd_utils_registered_variant_set" kindref="compound">UsdUtilsRegisteredVariantSet</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="94" column="1" bodyfile="pxr/usd/usdUtils/registeredVariantSet.h" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that holds information about variantSets that are registered with the pipeline. </para>
    </briefdescription>
    <detaileddescription>
<para>Registered variantSets are known variantSets in a pipeline that may need to be reasoned about by apps during import/export.</para>
<para><simplesect kind="see"><para><ref refid="pipeline_8h_1af8c5904ce00b476edc137bb4ae0e114d" kindref="member">UsdUtilsGetRegisteredVariantSets</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="pxr/usd/usdUtils/registeredVariantSet.h" line="46" column="1" bodyfile="pxr/usd/usdUtils/registeredVariantSet.h" bodystart="45" bodyend="98"/>
    <listofallmembers>
      <member refid="struct_usd_utils_registered_variant_set_1ac903d7a77063e9be1943da8874451d83" prot="public" virt="non-virtual"><scope>UsdUtilsRegisteredVariantSet</scope><name>GetSelectionExportPolicyFromString</name></member>
      <member refid="struct_usd_utils_registered_variant_set_1ac673bc430bdc3fdaa09f7becf98ef267" prot="public" virt="non-virtual"><scope>UsdUtilsRegisteredVariantSet</scope><name>name</name></member>
      <member refid="struct_usd_utils_registered_variant_set_1a4ce511686cc25f949a9ea4808143b37d" prot="public" virt="non-virtual"><scope>UsdUtilsRegisteredVariantSet</scope><name>operator&lt;</name></member>
      <member refid="struct_usd_utils_registered_variant_set_1a2b2b4d4a3287ed9efc76aaa85fb76d9c" prot="public" virt="non-virtual"><scope>UsdUtilsRegisteredVariantSet</scope><name>SelectionExportPolicy</name></member>
      <member refid="struct_usd_utils_registered_variant_set_1afa8ff6f4fd2f9d64414c745f409254f5" prot="public" virt="non-virtual"><scope>UsdUtilsRegisteredVariantSet</scope><name>selectionExportPolicy</name></member>
      <member refid="struct_usd_utils_registered_variant_set_1aae8f6280a1f000eb624236402cf42e52" prot="public" virt="non-virtual"><scope>UsdUtilsRegisteredVariantSet</scope><name>UsdUtilsRegisteredVariantSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
