<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_ar_writable_asset" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ArWritableAsset</compoundname>
    <derivedcompoundref refid="class_ar_filesystem_writable_asset" prot="public" virt="non-virtual">ArFilesystemWritableAsset</derivedcompoundref>
    <includes refid="writable_asset_8h" local="no">writableAsset.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ar_writable_asset_1a9608e7bb5b48e1fc25f024076ba69b91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AR_API</type>
        <definition>virtual AR_API ~ArWritableAsset</definition>
        <argsstring>()</argsstring>
        <name>~ArWritableAsset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/writableAsset.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_writable_asset_1af24cdfcdd2b927e82e5a5c981a0279cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArWritableAsset</definition>
        <argsstring>(const ArWritableAsset &amp;)=delete</argsstring>
        <name>ArWritableAsset</name>
        <param>
          <type>const <ref refid="class_ar_writable_asset" kindref="compound">ArWritableAsset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/writableAsset.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_writable_asset_1a7d69a32e387add8ebbe2563f7c7e9c9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ar_writable_asset" kindref="compound">ArWritableAsset</ref> &amp;</type>
        <definition>ArWritableAsset&amp; operator=</definition>
        <argsstring>(const ArWritableAsset &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_ar_writable_asset" kindref="compound">ArWritableAsset</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/writableAsset.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_writable_asset_1a6dc3a3d77b350f8db1b851686fc7bc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Close</definition>
        <argsstring>()=0</argsstring>
        <name>Close</name>
        <reimplementedby refid="class_ar_filesystem_writable_asset_1af45c1fc9b2832296b667a855838619ad">Close</reimplementedby>
        <briefdescription>
<para>Close this asset, performing any necessary finalization or commits of data that was previously written. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true on success, false otherwise.</para>
<para>If successful, reads to the written asset in the same process should reflect the fully written state by the time this function returns. Also, further calls to any functions on this interface are invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/writableAsset.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_writable_asset_1af524987aa4d90076d67af1a7ab032530" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t Write</definition>
        <argsstring>(const void *buffer, size_t count, size_t offset)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="class_ar_filesystem_writable_asset_1a227bb6047311f04e4e76e9a51b829b2f">Write</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Writes <computeroutput>count</computeroutput> bytes from <computeroutput>buffer</computeroutput> at <computeroutput>offset</computeroutput> from the beginning of the asset. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns number of bytes written, or 0 on error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/writableAsset.h" line="63" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ar_writable_asset_1ae5facd976bb5e1e5644814a4063ddec6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API</type>
        <definition>AR_API ArWritableAsset</definition>
        <argsstring>()</argsstring>
        <name>ArWritableAsset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/writableAsset.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for writing data to an asset. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_ar_resolver_1a91c07b55b6807adb47805ff0037b6c44" kindref="member">ArResolver::OpenAssetForWrite</ref> for how to retrieve instances of this object. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="748">
        <label>ArWritableAsset</label>
        <link refid="class_ar_writable_asset"/>
      </node>
      <node id="749">
        <label>ArFilesystemWritableAsset</label>
        <link refid="class_ar_filesystem_writable_asset"/>
        <childnode refid="748" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/usd/ar/writableAsset.h" line="44" column="1" bodyfile="pxr/usd/ar/writableAsset.h" bodystart="43" bodyend="68"/>
    <listofallmembers>
      <member refid="class_ar_writable_asset_1af24cdfcdd2b927e82e5a5c981a0279cf" prot="public" virt="non-virtual"><scope>ArWritableAsset</scope><name>ArWritableAsset</name></member>
      <member refid="class_ar_writable_asset_1ae5facd976bb5e1e5644814a4063ddec6" prot="protected" virt="non-virtual"><scope>ArWritableAsset</scope><name>ArWritableAsset</name></member>
      <member refid="class_ar_writable_asset_1a6dc3a3d77b350f8db1b851686fc7bc88" prot="public" virt="pure-virtual"><scope>ArWritableAsset</scope><name>Close</name></member>
      <member refid="class_ar_writable_asset_1a7d69a32e387add8ebbe2563f7c7e9c9b" prot="public" virt="non-virtual"><scope>ArWritableAsset</scope><name>operator=</name></member>
      <member refid="class_ar_writable_asset_1af524987aa4d90076d67af1a7ab032530" prot="public" virt="pure-virtual"><scope>ArWritableAsset</scope><name>Write</name></member>
      <member refid="class_ar_writable_asset_1a9608e7bb5b48e1fc25f024076ba69b91" prot="public" virt="virtual"><scope>ArWritableAsset</scope><name>~ArWritableAsset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
