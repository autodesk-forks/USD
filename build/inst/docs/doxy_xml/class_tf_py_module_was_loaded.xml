<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_py_module_was_loaded" kind="class" language="C++" prot="public">
    <compoundname>TfPyModuleWasLoaded</compoundname>
    <basecompoundref refid="class_tf_notice" prot="public" virt="non-virtual">TfNotice</basecompoundref>
    <includes refid="py_module_notice_8h" local="no">pyModuleNotice.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_py_module_was_loaded_1aaf2ed934b37cbbd236fdd1b01a5f5005" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyModuleNotice.h" line="54" column="1" bodyfile="pxr/base/tf/pyModuleNotice.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_py_module_was_loaded_1aded5c5e37ef7a8ec6a5c9c27c2676b74" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfPyModuleWasLoaded</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>TfPyModuleWasLoaded</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyModuleNotice.h" line="45" column="1" bodyfile="pxr/base/tf/pyModuleNotice.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_module_was_loaded_1a45f9b321f5a5279183e6b513572111c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TF_API</type>
        <definition>virtual TF_API ~TfPyModuleWasLoaded</definition>
        <argsstring>()</argsstring>
        <name>~TfPyModuleWasLoaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyModuleNotice.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_module_was_loaded_1a50d621d4bf281bde8f5e7ed2cf954b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string const  &amp;</type>
        <definition>std::string const&amp; GetName</definition>
        <argsstring>()</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Return the name of the module that was loaded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyModuleNotice.h" line="51" column="1" bodyfile="pxr/base/tf/pyModuleNotice.h" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <emphasis><ref refid="class_tf_notice" kindref="compound">TfNotice</ref></emphasis> that is sent when a script module is loaded. </para>
    </briefdescription>
    <detaileddescription>
<para>Since many modules may be loaded at once, listeners are encouraged to defer work triggered by this notice to the end of an application iteration. This, of course, is good practice in general. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5488">
        <label>TfNotice</label>
        <link refid="class_tf_notice"/>
      </node>
      <node id="5487">
        <label>TfPyModuleWasLoaded</label>
        <link refid="class_tf_py_module_was_loaded"/>
        <childnode refid="5488" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5490">
        <label>TfNotice</label>
        <link refid="class_tf_notice"/>
      </node>
      <node id="5489">
        <label>TfPyModuleWasLoaded</label>
        <link refid="class_tf_py_module_was_loaded"/>
        <childnode refid="5490" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/pyModuleNotice.h" line="43" column="1" bodyfile="pxr/base/tf/pyModuleNotice.h" bodystart="43" bodyend="55"/>
    <listofallmembers>
      <member refid="class_tf_py_module_was_loaded_1aaf2ed934b37cbbd236fdd1b01a5f5005" prot="private" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>_name</name></member>
      <member refid="class_tf_py_module_was_loaded_1a50d621d4bf281bde8f5e7ed2cf954b25" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>GetName</name></member>
      <member refid="class_tf_notice_1a32fa7dd9c926ede28304ba0fea5a0a57" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>InsertProbe</name></member>
      <member refid="class_tf_notice_1ae99914824a9e7ee4f109b0aecd927fab" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Keys</name></member>
      <member refid="class_tf_notice_1a68c24dba64e7a7135f62d1bdab33ca7f" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Register</name></member>
      <member refid="class_tf_notice_1af10135651f3124a42f325391ce12e1cb" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Register</name></member>
      <member refid="class_tf_notice_1a179046f55a4cf28983aecdae9e5f5ff5" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Register</name></member>
      <member refid="class_tf_notice_1a8f588ed9ae01d514c51ac36c255a7223" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>RemoveProbe</name></member>
      <member refid="class_tf_notice_1ab183e05189affeabc78270a9c1be4241" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Revoke</name></member>
      <member refid="class_tf_notice_1a5a994f26e22e2b2dfa28e36a11349f7a" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Revoke</name></member>
      <member refid="class_tf_notice_1a02732e32bee22f2efad0b07baa997a80" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Send</name></member>
      <member refid="class_tf_notice_1a3a0aa0bd6d35b4e26e01f932687690e6" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>Send</name></member>
      <member refid="class_tf_notice_1a94b84b1ac443ab812c795a9945bede00" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>SendWithWeakBase</name></member>
      <member refid="class_tf_py_module_was_loaded_1aded5c5e37ef7a8ec6a5c9c27c2676b74" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>TfPyModuleWasLoaded</name></member>
      <member refid="class_tf_notice_1ae0fdf4eb13bcd999def723fade0981bc" prot="public" virt="non-virtual"><scope>TfPyModuleWasLoaded</scope><name>WeakProbePtr</name></member>
      <member refid="class_tf_notice_1ac79079190e565d59be9fc80b94d0341c" prot="public" virt="virtual"><scope>TfPyModuleWasLoaded</scope><name>~TfNotice</name></member>
      <member refid="class_tf_py_module_was_loaded_1a45f9b321f5a5279183e6b513572111c6" prot="public" virt="virtual"><scope>TfPyModuleWasLoaded</scope><name>~TfPyModuleWasLoaded</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
