<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_object" kind="class" language="C++" prot="public">
    <compoundname>UsdObject</compoundname>
    <derivedcompoundref refid="class_usd_prim" prot="public" virt="non-virtual">UsdPrim</derivedcompoundref>
    <derivedcompoundref refid="class_usd_property" prot="public" virt="non-virtual">UsdProperty</derivedcompoundref>
    <includes refid="object_8h" local="no">object.h</includes>
    <innerclass refid="struct_usd_object_1_1___null" prot="protected">UsdObject::_Null</innerclass>
      <sectiondef kind="user-defined">
      <header>Structural and Integrity Info about the Object itself</header>
      <memberdef kind="friend" id="class_usd_object_1a861bba08221bb6d6a57b52d1e1993fc5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdObject &amp;lhs, const UsdObject &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>Return true if <emphasis>lhs</emphasis> and <emphasis>rhs</emphasis> represent the same <ref refid="class_usd_object" kindref="compound">UsdObject</ref>, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="164" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="164" bodyend="169"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_object_1a2088ad6cb5fcc4522049e55e9f2fa3eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdObject &amp;lhs, const UsdObject &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>Return false if <emphasis>lhs</emphasis> and <emphasis>rhs</emphasis> represent the same <ref refid="class_usd_object" kindref="compound">UsdObject</ref>, true otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="173" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_object_1aafd36fe4c0cd410fa8d48560a00afb3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const UsdObject &amp;lhs, const UsdObject &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Less-than operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if <emphasis>lhs</emphasis> &lt; <emphasis>rhs</emphasis>.</para>
<para>This simply compares the paths of the objects. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="180" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_object_1ab4f96ac08a894f8ec8072ee79b718bd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(const UsdObject &amp;obj)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="185" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_object_1aa48399c6827abf3a4ea747345c7c8eae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HashState</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void TfHashAppend</definition>
        <argsstring>(HashState &amp;h, const UsdObject &amp;obj)</argsstring>
        <name>TfHashAppend</name>
        <param>
          <type>HashState &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_object" kindref="compound">UsdObject</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="191" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Return true if this is a valid object, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="143" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="143" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if this object is valid, <computeroutput>false</computeroutput> otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="156" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1acbf11fd10a72dbc827b2f3738d2edfde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API UsdStageWeakPtr</type>
        <definition>USD_API UsdStageWeakPtr GetStage</definition>
        <argsstring>() const</argsstring>
        <name>GetStage</name>
        <briefdescription>
<para>Return the stage that owns the object, and to whose state and lifetime this object&apos;s validity is tied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a936bfb1e341cc81184c64af44763c433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
<para>Return the complete scene path to this object on its <ref refid="class_usd_stage" kindref="compound">UsdStage</ref>, which may (<ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>) or may not (all other subclasses) return a cached result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="203" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="203" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ae980898ec578c6f8082717ceac44a11e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
        <definition>const SdfPath&amp; GetPrimPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPrimPath</name>
        <briefdescription>
<para>Return this object&apos;s path if this object is a prim, otherwise this object&apos;s nearest owning prim&apos;s path. </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_object_1a4ba10e023e7f3f3c93131bc7fc3146b7" kindref="member">GetPrim()</ref>.<ref refid="class_usd_object_1a936bfb1e341cc81184c64af44763c433" kindref="member">GetPath()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="218" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="218" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>UsdPrim GetPrim</definition>
        <argsstring>() const</argsstring>
        <name>GetPrim</name>
        <briefdescription>
<para>Return this object if it is a prim, otherwise return this object&apos;s nearest owning prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="231" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2804" bodyend="2807"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ae57e12beedf10c423e11c5b889343f6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Return the full name of this object, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>the last component of its <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> in namespace.</para>
<para>This is equivalent to, but generally cheaper than, <ref refid="class_usd_object_1a936bfb1e341cc81184c64af44763c433" kindref="member">GetPath()</ref>.GetNameToken() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="238" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aaca099fe79c1bbdd2216e7cb583952a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T As</definition>
        <argsstring>() const</argsstring>
        <name>As</name>
        <briefdescription>
<para>Convert this <ref refid="class_usd_object" kindref="compound">UsdObject</ref> to another object type <computeroutput>T</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Return an invalid <computeroutput>T</computeroutput> instance if this object&apos;s dynamic type is not convertible to <computeroutput>T</computeroutput> or if this object is invalid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="246" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a7152c172b8551a1e222bf446ce7689fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool Is</definition>
        <argsstring>() const</argsstring>
        <name>Is</name>
        <briefdescription>
<para>Return true if this object is convertible to <computeroutput>T</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to but cheaper than: <programlisting><codeline><highlight class="normal">bool(obj.As&lt;T&gt;())</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="257" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aa8476a8039c198245c87e27b0f6b7e78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::string</type>
        <definition>USD_API std::string GetDescription</definition>
        <argsstring>() const</argsstring>
        <name>GetDescription</name>
        <briefdescription>
<para>Return a string that provides a brief summary description of the object. </para>
        </briefdescription>
        <detaileddescription>
<para>This method, along with <ref refid="class_usd_object_1ac532c4b500b1a85ea22217f2c65a70ed" kindref="member">IsValid()</ref>/bool_operator, is always safe to call on a possibly-expired object, and the description will specify whether the object is valid or expired, along with a few other bits of data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="269" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Generic Metadata Access</header>
      <memberdef kind="function" id="class_usd_object_1ad2d76f736733f3ad51aa1ea1df6f4d44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetMetadata</definition>
        <argsstring>(const TfToken &amp;key, T *value) const</argsstring>
        <name>GetMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Resolve the requested metadatum named <computeroutput>key</computeroutput> into <computeroutput>value</computeroutput>, returning true on success. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>false if <computeroutput>key</computeroutput> was not resolvable, or if <computeroutput>value&apos;s</computeroutput> type <computeroutput>T</computeroutput> differed from that of the resolved metadatum.</para>
</simplesect>
<simplesect kind="note"><para>For any composition-related metadata, as enumerated in <ref refid="class_usd_object_1afd698d0849b1a8dd4e9a4bf7608e8754" kindref="member">GetAllMetadata()</ref>, this method will return only the strongest opinion found, not applying the composition rules used by Pcp to process the data. For more processed/composed views of composition data, please refer to the specific interface classes, such as <ref refid="class_usd_references" kindref="compound">UsdReferences</ref>, <ref refid="class_usd_inherits" kindref="compound">UsdInherits</ref>, <ref refid="class_usd_variant_sets" kindref="compound">UsdVariantSets</ref>, etc.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_Metadata" kindref="member">General Metadata in USD</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="296" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="756" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1af114545bd56cd7619e7d4f2f884e4128" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool GetMetadata</definition>
        <argsstring>(const TfToken &amp;key, VtValue *value) const</argsstring>
        <name>GetMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Type-erased access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a1a5325c3bfad050926f03f867a803c03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool SetMetadata</definition>
        <argsstring>(const TfToken &amp;key, const T &amp;value) const</argsstring>
        <name>SetMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set metadatum <computeroutput>key&apos;s</computeroutput> value to <computeroutput>value</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>false if <computeroutput>value&apos;s</computeroutput> type does not match the schema type for <computeroutput>key</computeroutput>.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_Metadata" kindref="member">General Metadata in USD</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="310" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="764" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1abccca1c487755a7f08e6e4b042d39ede" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool SetMetadata</definition>
        <argsstring>(const TfToken &amp;key, const VtValue &amp;value) const</argsstring>
        <name>SetMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="313" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1af75ddb7982a5b5c77f9840e67df94435" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ClearMetadata</definition>
        <argsstring>(const TfToken &amp;key) const</argsstring>
        <name>ClearMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Clears the authored <emphasis>key&apos;s</emphasis> value at the current EditTarget, returning false on error. </para>
        </briefdescription>
        <detaileddescription>
<para>If no value is present, this method is a no-op and returns true. It is considered an error to call ClearMetadata when no spec is present for this <ref refid="class_usd_object" kindref="compound">UsdObject</ref>, i.e. if the object has no presence in the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_Metadata" kindref="member">General Metadata in USD</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="325" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ae2d99fd05dbc39c2d9746fe639c24825" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasMetadata</definition>
        <argsstring>(const TfToken &amp;key) const</argsstring>
        <name>HasMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the <emphasis>key</emphasis> has a meaningful value, that is, if <ref refid="class_usd_object_1ad2d76f736733f3ad51aa1ea1df6f4d44" kindref="member">GetMetadata()</ref> will provide a value, either because it was authored or because a prim&apos;s metadata fallback will be provided. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a37211404a939811e841d90c65cd19999" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredMetadata</definition>
        <argsstring>(const TfToken &amp;key) const</argsstring>
        <name>HasAuthoredMetadata</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns true if the <emphasis>key</emphasis> has an authored value, false if no value was authored or the only value available is a prim&apos;s metadata fallback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aba47c41ec8cc536290c04e219f12589c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath, T *value) const</argsstring>
        <name>GetMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Resolve the requested dictionary sub-element <computeroutput>keyPath</computeroutput> of dictionary-valued metadatum named <computeroutput>key</computeroutput> into <computeroutput>value</computeroutput>, returning true on success. </para>
        </briefdescription>
        <detaileddescription>
<para>If you know you neeed just a small number of elements from a dictionary, accessing them element-wise using this method can be much less expensive than fetching the entire dictionary with GetMetadata(key).</para>
<para><simplesect kind="return"><para>false if <computeroutput>key</computeroutput> was not resolvable, or if <computeroutput>value&apos;s</computeroutput> type <computeroutput>T</computeroutput> differed from that of the resolved metadatum.</para>
</simplesect>
The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path addressing an element in subdictionaries.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__datatypes_1Usd_Dictionary_Type" kindref="member">Dictionary-valued Metadata</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="355" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="772" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a3bdf70a1d4a8754a0cb51cddab11b299" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool GetMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath, VtValue *value) const</argsstring>
        <name>GetMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a7f3b367075ca8d6bba9fbf3636183ff3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool SetMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath, const T &amp;value) const</argsstring>
        <name>SetMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Author <computeroutput>value</computeroutput> to the field identified by <computeroutput>key</computeroutput> and <computeroutput>keyPath</computeroutput> at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries stored in the metadata field at <computeroutput>key</computeroutput>. Return true if the value is authored successfully, false otherwise.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__datatypes_1Usd_Dictionary_Type" kindref="member">Dictionary-valued Metadata</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="370" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="782" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a0c04b54500b5b6d5ef0e8aca66282770" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool SetMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath, const VtValue &amp;value) const</argsstring>
        <name>SetMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1afd756d242f6026a3d7c5606badbf8411" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ClearMetadataByDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath) const</argsstring>
        <name>ClearMetadataByDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Clear any authored value identified by <computeroutput>key</computeroutput> and <computeroutput>keyPath</computeroutput> at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a path in subdictionaries stored in the metadata field at <computeroutput>key</computeroutput>. Return true if the value is cleared successfully, false otherwise.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__datatypes_1Usd_Dictionary_Type" kindref="member">Dictionary-valued Metadata</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a911c19d77fe0552877918517818e7399" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasMetadataDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath) const</argsstring>
        <name>HasMetadataDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return true if there exists any authored or fallback opinion for <computeroutput>key</computeroutput> and <computeroutput>keyPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries stored in the metadata field at <computeroutput>key</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__datatypes_1Usd_Dictionary_Type" kindref="member">Dictionary-valued Metadata</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a20a01b0dd0dd51f9439b6a3a231c76ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredMetadataDictKey</definition>
        <argsstring>(const TfToken &amp;key, const TfToken &amp;keyPath) const</argsstring>
        <name>HasAuthoredMetadataDictKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return true if there exists any authored opinion (excluding fallbacks) for <computeroutput>key</computeroutput> and <computeroutput>keyPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries stored in the metadata field at <computeroutput>key</computeroutput>.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__datatypes_1Usd_Dictionary_Type" kindref="member">Dictionary-valued Metadata</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1afd698d0849b1a8dd4e9a4bf7608e8754" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API UsdMetadataValueMap</type>
        <definition>USD_API UsdMetadataValueMap GetAllMetadata</definition>
        <argsstring>() const</argsstring>
        <name>GetAllMetadata</name>
        <briefdescription>
<para>Resolve and return all metadata (including both authored and fallback values) on this object, sorted lexicographically. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method does not return field keys for composition arcs, such as references, inherits, payloads, sublayers, variants, or primChildren, nor does it return the default value or timeSamples. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="415" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ac81c4a2222e6c4957ed7a540c05e2346" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API UsdMetadataValueMap</type>
        <definition>USD_API UsdMetadataValueMap GetAllAuthoredMetadata</definition>
        <argsstring>() const</argsstring>
        <name>GetAllAuthoredMetadata</name>
        <briefdescription>
<para>Resolve and return all user-authored metadata on this object, sorted lexicographically. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This method does not return field keys for composition arcs, such as references, inherits, payloads, sublayers, variants, or primChildren, nor does it return the default value or timeSamples. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="424" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Core metadata fields</header>
      <memberdef kind="function" id="class_usd_object_1aaccbe79a26ceada03ab81918b30a383e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool IsHidden</definition>
        <argsstring>() const</argsstring>
        <name>IsHidden</name>
        <briefdescription>
<para>Gets the value of the &apos;hidden&apos; metadata field, false if not authored. </para>
        </briefdescription>
        <detaileddescription>
<para>When an object is marked as hidden, it is an indicator to clients who generically display objects (such as GUI widgets) that this object should not be included, unless explicitly asked for. Although this is just a hint and thus up to each application to interpret, we use it primarily as a way of simplifying hierarchy displays, by hiding <emphasis>only</emphasis> the representation of the object itself, <emphasis>not</emphasis> its subtree, instead &quot;pulling up&quot; everything below it one level in the hierarchical nesting.</para>
<para>Note again that this is a hint for UI only - it should not be interpreted by any renderer as making a prim invisible to drawing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a0e3d2a1a0e00d5e4ba2ba8aad555d593" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool SetHidden</definition>
        <argsstring>(bool hidden) const</argsstring>
        <name>SetHidden</name>
        <param>
          <type>bool</type>
          <declname>hidden</declname>
        </param>
        <briefdescription>
<para>Sets the value of the &apos;hidden&apos; metadata field. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_usd_object_1aaccbe79a26ceada03ab81918b30a383e" kindref="member">IsHidden()</ref> for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="455" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a5b6b31dcfcfb34f43f334161522de847" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ClearHidden</definition>
        <argsstring>() const</argsstring>
        <name>ClearHidden</name>
        <briefdescription>
<para>Clears the opinion for &quot;Hidden&quot; at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a904b990143e4b62ac64e3d1ebeaf5bdc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredHidden</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredHidden</name>
        <briefdescription>
<para>Returns true if hidden was explicitly authored and <ref refid="class_usd_object_1ad2d76f736733f3ad51aa1ea1df6f4d44" kindref="member">GetMetadata()</ref> will return a meaningful value for Hidden. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that IsHidden returns a fallback value (false) when hidden is not authored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1abea26b9c6a71883a2d9da4ff64952391" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>USD_API VtDictionary GetCustomData</definition>
        <argsstring>() const</argsstring>
        <name>GetCustomData</name>
        <briefdescription>
<para>Return this object&apos;s composed customData dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para>CustomData is &quot;custom metadata&quot;, a place for applications and users to put uniform data that is entirely dynamic and subject to no schema known to Usd. Unlike metadata like &apos;hidden&apos;, &apos;displayName&apos; etc, which must be declared in code or a data file that is considered part of one&apos;s Usd distribution (e.g. a plugInfo.json file) to be used, customData keys and the datatypes of their corresponding values are ad hoc. No validation will ever be performed that values for the same key in different layers are of the same type - strongest simply wins.</para>
<para>Dictionaries like customData are composed element-wise, and are nestable.</para>
<para>There is no means to query a customData field&apos;s valuetype other than fetching the value and interrogating it. <simplesect kind="see"><para><ref refid="class_usd_object_1a9aebce4a579e9bb24385bac6e4ae3186" kindref="member">GetCustomDataByKey()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a9aebce4a579e9bb24385bac6e4ae3186" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>USD_API VtValue GetCustomDataByKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>GetCustomDataByKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s composed customData dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. This is in general more efficient than composing the entire customData dictionary and then pulling out one sub-element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ac4f24685000b88fbdf783de2b1546995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void SetCustomData</definition>
        <argsstring>(const VtDictionary &amp;customData) const</argsstring>
        <name>SetCustomData</name>
        <param>
          <type>const <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> &amp;</type>
          <declname>customData</declname>
        </param>
        <briefdescription>
<para>Author this object&apos;s customData dictionary to <computeroutput>customData</computeroutput> at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1abdcc93cd6a4dd8ad2bbe2134316ad836" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void SetCustomDataByKey</definition>
        <argsstring>(const TfToken &amp;keyPath, const VtValue &amp;value) const</argsstring>
        <name>SetCustomDataByKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Author the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s customData dictionary at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="507" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a30d686bc90f3d7d6753086a484d86ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void ClearCustomData</definition>
        <argsstring>() const</argsstring>
        <name>ClearCustomData</name>
        <briefdescription>
<para>Clear the authored opinion for this object&apos;s customData dictionary at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>Do nothing if there is no such authored opinion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="513" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a5abc2ea6c40a3b8b9bc60896cfee0c63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void ClearCustomDataByKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>ClearCustomDataByKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Clear the authored opinion identified by <computeroutput>keyPath</computeroutput> in this object&apos;s customData dictionary at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. Do nothing if there is no such authored opinion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ae3d80901c17a644af30bdef5c265580c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasCustomData</definition>
        <argsstring>() const</argsstring>
        <name>HasCustomData</name>
        <briefdescription>
<para>Return true if there are any authored or fallback opinions for this object&apos;s customData dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a2de3d809c116fe60c3646d90dcbba87f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasCustomDataKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>HasCustomDataKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return true if there are any authored or fallback opinions for the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s customData dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1afe9a33d79276073db9dbc712861c3aa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredCustomData</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredCustomData</name>
        <briefdescription>
<para>Return true if there are any authored opinions (excluding fallback) for this object&apos;s customData dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a0b5df6ddc5f201cc3e42709b8949bb9c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredCustomDataKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>HasAuthoredCustomDataKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return true if there are any authored opinions (excluding fallback) for the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s customData dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a568ab5eceb43fd673cad556f30df6619" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>USD_API VtDictionary GetAssetInfo</definition>
        <argsstring>() const</argsstring>
        <name>GetAssetInfo</name>
        <briefdescription>
<para>Return this object&apos;s composed assetInfo dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para>The asset info dictionary is used to annotate objects representing the root-prims of assets (generally organized as models) with various data related to asset management. For example, asset name, root layer identifier, asset version etc.</para>
<para>The elements of this dictionary are composed element-wise, and are nestable.</para>
<para>There is no means to query an assetInfo field&apos;s valuetype other than fetching the value and interrogating it. <simplesect kind="see"><para><ref refid="class_usd_object_1ada201f20c6d4b33ec27fd459703909e9" kindref="member">GetAssetInfoByKey()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ada201f20c6d4b33ec27fd459703909e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>USD_API VtValue GetAssetInfoByKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>GetAssetInfoByKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s composed assetInfo dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. This is in general more efficient than composing the entire assetInfo dictionary than pulling out one sub-element. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1acd1183e9097ec5de924a87b084bb6d08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void SetAssetInfo</definition>
        <argsstring>(const VtDictionary &amp;customData) const</argsstring>
        <name>SetAssetInfo</name>
        <param>
          <type>const <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> &amp;</type>
          <declname>customData</declname>
        </param>
        <briefdescription>
<para>Author this object&apos;s assetInfo dictionary to <computeroutput>assetInfo</computeroutput> at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="573" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a2d4070d8ad13d6880deb6fcdb6679183" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void SetAssetInfoByKey</definition>
        <argsstring>(const TfToken &amp;keyPath, const VtValue &amp;value) const</argsstring>
        <name>SetAssetInfoByKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Author the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s assetInfo dictionary at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a85151085271ffb20e4c642a8a854f786" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void ClearAssetInfo</definition>
        <argsstring>() const</argsstring>
        <name>ClearAssetInfo</name>
        <briefdescription>
<para>Clear the authored opinion for this object&apos;s assetInfo dictionary at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>Do nothing if there is no such authored opinion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aadb1b6b9372e1de8b0cef16a8809de0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void ClearAssetInfoByKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>ClearAssetInfoByKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Clear the authored opinion identified by <computeroutput>keyPath</computeroutput> in this object&apos;s assetInfo dictionary at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. Do nothing if there is no such authored opinion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aac2bfbc79842758d55ad739f471ff437" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAssetInfo</definition>
        <argsstring>() const</argsstring>
        <name>HasAssetInfo</name>
        <briefdescription>
<para>Return true if there are any authored or fallback opinions for this object&apos;s assetInfo dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a4f337c0c1709d3e161a8ff34f46eb7e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAssetInfoKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>HasAssetInfoKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return true if there are any authored or fallback opinions for the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s assetInfo dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1af05106a278e314f85483651af43e8f68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredAssetInfo</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredAssetInfo</name>
        <briefdescription>
<para>Return true if there are any authored opinions (excluding fallback) for this object&apos;s assetInfo dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="609" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a7cc57b254d41d8f09f95b8621f238e49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredAssetInfoKey</definition>
        <argsstring>(const TfToken &amp;keyPath) const</argsstring>
        <name>HasAuthoredAssetInfoKey</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
        </param>
        <briefdescription>
<para>Return true if there are any authored opinions (excluding fallback) for the element identified by <computeroutput>keyPath</computeroutput> in this object&apos;s assetInfo dictionary, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>keyPath</computeroutput> is a &apos;:&apos;-separated path identifying a value in subdictionaries. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="616" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1afbeb96db494ea5fa795d937e532083c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::string</type>
        <definition>USD_API std::string GetDocumentation</definition>
        <argsstring>() const</argsstring>
        <name>GetDocumentation</name>
        <briefdescription>
<para>Return this object&apos;s documentation (metadata). </para>
        </briefdescription>
        <detaileddescription>
<para>This returns the empty string if no documentation has been set. <simplesect kind="see"><para><ref refid="class_usd_object_1a207a3fac40b4bd2dca8e9bce07d398e9" kindref="member">SetDocumentation()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="622" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a207a3fac40b4bd2dca8e9bce07d398e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool SetDocumentation</definition>
        <argsstring>(const std::string &amp;doc) const</argsstring>
        <name>SetDocumentation</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
<para>Sets this object&apos;s documentation (metadata). Returns true on success. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ab84f704415b18a9819918a1a73732f38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ClearDocumentation</definition>
        <argsstring>() const</argsstring>
        <name>ClearDocumentation</name>
        <briefdescription>
<para>Clears this object&apos;s documentation (metadata) in the current EditTarget (only). </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true on success. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ab0e3e800ab9fdaf480b767a225208767" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredDocumentation</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredDocumentation</name>
        <briefdescription>
<para>Returns true if documentation was explicitly authored and <ref refid="class_usd_object_1ad2d76f736733f3ad51aa1ea1df6f4d44" kindref="member">GetMetadata()</ref> will return a meaningful value for documentation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1afea773af9042346906dbd1226d704aeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API std::string</type>
        <definition>USD_API std::string GetDisplayName</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplayName</name>
        <briefdescription>
<para>Return this object&apos;s display name (metadata). </para>
        </briefdescription>
        <detaileddescription>
<para>This returns the empty string if no display name has been set. <simplesect kind="see"><para><ref refid="class_usd_object_1a89d396665875d4d4a88b5ecb0a22acb0" kindref="member">SetDisplayName()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="642" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a89d396665875d4d4a88b5ecb0a22acb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool SetDisplayName</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>SetDisplayName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Sets this object&apos;s display name (metadata). </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true on success.</para>
<para>DisplayName is meant to be a descriptive label, not necessarily an alternate identifier; therefore there is no restriction on which characters can appear in it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="650" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a45f102f292999a4d2c2d5015d54ab9dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ClearDisplayName</definition>
        <argsstring>() const</argsstring>
        <name>ClearDisplayName</name>
        <briefdescription>
<para>Clears this object&apos;s display name (metadata) in the current EditTarget (only). </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true on success. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a6af100fedb961a5952b62a94bc8e725b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasAuthoredDisplayName</definition>
        <argsstring>() const</argsstring>
        <name>HasAuthoredDisplayName</name>
        <briefdescription>
<para>Returns true if displayName was explicitly authored and <ref refid="class_usd_object_1ad2d76f736733f3ad51aa1ea1df6f4d44" kindref="member">GetMetadata()</ref> will return a meaningful value for displayName. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="660" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_object_1ab763ff44a10a7cbf08ec18a4557203e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdStage</definition>
        <argsstring></argsstring>
        <name>UsdStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="740" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_object_1a67fda7f3a2216816d8a5abe49a29d5e7" prot="private" static="no" mutable="no">
        <type><ref refid="object_8h_1ada9a9a926dbc7aa06b0449ed00d11097" kindref="member">UsdObjType</ref></type>
        <definition>UsdObjType _type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="746" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="746" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_object_1ac4bef81070cf2b09f174acc8d3ed638a" prot="private" static="no" mutable="no">
        <type>Usd_PrimDataHandle</type>
        <definition>Usd_PrimDataHandle _prim</definition>
        <argsstring></argsstring>
        <name>_prim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="747" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="747" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_object_1abd8f9a9cb0fc872b6f7f6a8288440c7e" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _proxyPrimPath</definition>
        <argsstring></argsstring>
        <name>_proxyPrimPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="748" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="748" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_object_1aeacc86d2e2b76aace779a67783fccd01" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _propName</definition>
        <argsstring></argsstring>
        <name>_propName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="749" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="749" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_object_1a385fde82261ce94db08ca9b4d53966ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdObject</definition>
        <argsstring>()</argsstring>
        <name>UsdObject</name>
        <briefdescription>
<para>Default constructor produces an invalid object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="135" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="135" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_object_1aa5d32fe69eb9f41ff16222ce8458f67e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char GetNamespaceDelimiter</definition>
        <argsstring>()</argsstring>
        <name>GetNamespaceDelimiter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="667" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="667" bodyend="668"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_object_1a6a803d66faef406cf662d24b01885092" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _GetMetadataImpl</definition>
        <argsstring>(const TfToken &amp;key, T *value, const TfToken &amp;keyPath=TfToken()) const</argsstring>
        <name>_GetMetadataImpl</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="672" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="791" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1ac97b9cf2261449a8b5785dc08a1f2631" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _GetMetadataImpl</definition>
        <argsstring>(const TfToken &amp;key, VtValue *value, const TfToken &amp;keyPath=TfToken()) const</argsstring>
        <name>_GetMetadataImpl</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a811b7dea4bc52dca3783247d5c63bd11" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _SetMetadataImpl</definition>
        <argsstring>(const TfToken &amp;key, const T &amp;value, const TfToken &amp;keyPath=TfToken()) const</argsstring>
        <name>_SetMetadataImpl</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="681" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="801" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a44dd07b26f6a2d737938f9a2c6a33aec" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _SetMetadataImpl</definition>
        <argsstring>(const TfToken &amp;key, const VtValue &amp;value, const TfToken &amp;keyPath=TfToken()) const</argsstring>
        <name>_SetMetadataImpl</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>keyPath</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aa357b30a67c48cb1b00cda9d29535f15" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string _GetObjectDescription</definition>
        <argsstring>(const std::string &amp;preface) const</argsstring>
        <name>_GetObjectDescription</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>preface</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="738" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_object_1a16bdb9fdb779ddaa849433d5c029a2a5" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Derived</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>UsdObject</definition>
        <argsstring>(_Null&lt; Derived &gt;)</argsstring>
        <name>UsdObject</name>
        <param>
          <type>_Null&lt; Derived &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="694" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="694" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1adc7d0f32c2146c7ed23416283a39e991" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdObject</definition>
        <argsstring>(const Usd_PrimDataHandle &amp;prim, const SdfPath &amp;proxyPrimPath)</argsstring>
        <name>UsdObject</name>
        <param>
          <type>const Usd_PrimDataHandle &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>proxyPrimPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="698" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="698" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a2331471890f65208bdef3fa70d77fd16" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdObject</definition>
        <argsstring>(UsdObjType objType, const Usd_PrimDataHandle &amp;prim, const SdfPath &amp;proxyPrimPath, const TfToken &amp;propName)</argsstring>
        <name>UsdObject</name>
        <param>
          <type><ref refid="object_8h_1ada9a9a926dbc7aa06b0449ed00d11097" kindref="member">UsdObjType</ref></type>
          <declname>objType</declname>
        </param>
        <param>
          <type>const Usd_PrimDataHandle &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>proxyPrimPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>propName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="708" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="708" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1aaaa93a1af279c8b5551391a8b45c7bbc" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_stage" kindref="compound">UsdStage</ref> *</type>
        <definition>UsdStage* _GetStage</definition>
        <argsstring>() const</argsstring>
        <name>_GetStage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="721" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="721" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a49fff1f7d23dfc1f95c40ed8bca888f7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="usd_2sdf_2types_8h_1a1393f770f7685f4c58baf0b34679e522" kindref="member">SdfSpecType</ref></type>
        <definition>USD_API SdfSpecType _GetDefiningSpecType</definition>
        <argsstring>() const</argsstring>
        <name>_GetDefiningSpecType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="725" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a476be2b495a6fcc0f03f1b52aa61745d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Usd_PrimDataHandle &amp;</type>
        <definition>const Usd_PrimDataHandle&amp; _Prim</definition>
        <argsstring>() const</argsstring>
        <name>_Prim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="728" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="728" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a0f84e075219fbeb85f40a5533ac6b550" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; _PropName</definition>
        <argsstring>() const</argsstring>
        <name>_PropName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="731" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="731" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_object_1a47e60c6fc1efca5e426fd0b40a049236" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
        <definition>const SdfPath&amp; _ProxyPrimPath</definition>
        <argsstring>() const</argsstring>
        <name>_ProxyPrimPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/object.h" line="734" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="734" bodyend="734"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for Usd scenegraph objects, providing common API. </para>
    </briefdescription>
    <detaileddescription>
<para>The commonality between the three types of scenegraph objects in Usd (<ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>, <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref>, <ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref>) is that they can all have metadata. Other objects in the API (<ref refid="class_usd_references" kindref="compound">UsdReferences</ref>, <ref refid="class_usd_variant_sets" kindref="compound">UsdVariantSets</ref>, etc.) simply <emphasis>are</emphasis> kinds of metadata.</para>
<para><ref refid="class_usd_object" kindref="compound">UsdObject</ref>&apos;s API primarily provides schema for interacting with the metadata common to all the scenegraph objects, as well as generic access to metadata.</para>
<para>section Usd_UsdObject_Lifetime Lifetime Management and Object Validity</para>
<para>Every derived class of <ref refid="class_usd_object" kindref="compound">UsdObject</ref> supports explicit detection of object validity through an <emphasis>explicit-bool</emphasis> operator, so client code should always be able use objects safely, even across edits to the owning <ref refid="class_usd_stage" kindref="compound">UsdStage</ref>. <ref refid="class_usd_object" kindref="compound">UsdObject</ref> classes also perform some level of validity checking upon every use, in order to facilitate debugging of unsafe code, although we reserve the right to activate that behavior only in debug builds, if it becomes compelling to do so for performance reasons. This per-use checking will cause a fatal error upon failing the inline validity check, with an error message describing the namespace location of the dereferenced object on its owning <ref refid="class_usd_stage" kindref="compound">UsdStage</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7714">
        <label>UsdPrim</label>
        <link refid="class_usd_prim"/>
        <childnode refid="7713" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7717">
        <label>UsdRelationship</label>
        <link refid="class_usd_relationship"/>
        <childnode refid="7715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7716">
        <label>UsdAttribute</label>
        <link refid="class_usd_attribute"/>
        <childnode refid="7715" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7715">
        <label>UsdProperty</label>
        <link refid="class_usd_property"/>
        <childnode refid="7713" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7713">
        <label>UsdObject</label>
        <link refid="class_usd_object"/>
      </node>
    </inheritancegraph>
    <location file="pxr/usd/usd/object.h" line="132" column="1" bodyfile="pxr/usd/usd/object.h" bodystart="132" bodyend="751"/>
    <listofallmembers>
      <member refid="class_usd_object_1a49fff1f7d23dfc1f95c40ed8bca888f7" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>_GetDefiningSpecType</name></member>
      <member refid="class_usd_object_1a6a803d66faef406cf662d24b01885092" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_GetMetadataImpl</name></member>
      <member refid="class_usd_object_1ac97b9cf2261449a8b5785dc08a1f2631" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_GetMetadataImpl</name></member>
      <member refid="class_usd_object_1aa357b30a67c48cb1b00cda9d29535f15" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_GetObjectDescription</name></member>
      <member refid="class_usd_object_1aaaa93a1af279c8b5551391a8b45c7bbc" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>_GetStage</name></member>
      <member refid="class_usd_object_1ac4bef81070cf2b09f174acc8d3ed638a" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_prim</name></member>
      <member refid="class_usd_object_1a476be2b495a6fcc0f03f1b52aa61745d" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>_Prim</name></member>
      <member refid="class_usd_object_1aeacc86d2e2b76aace779a67783fccd01" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_propName</name></member>
      <member refid="class_usd_object_1a0f84e075219fbeb85f40a5533ac6b550" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>_PropName</name></member>
      <member refid="class_usd_object_1a47e60c6fc1efca5e426fd0b40a049236" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>_ProxyPrimPath</name></member>
      <member refid="class_usd_object_1abd8f9a9cb0fc872b6f7f6a8288440c7e" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_proxyPrimPath</name></member>
      <member refid="class_usd_object_1a811b7dea4bc52dca3783247d5c63bd11" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_SetMetadataImpl</name></member>
      <member refid="class_usd_object_1a44dd07b26f6a2d737938f9a2c6a33aec" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_SetMetadataImpl</name></member>
      <member refid="class_usd_object_1a67fda7f3a2216816d8a5abe49a29d5e7" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>_type</name></member>
      <member refid="class_usd_object_1aaca099fe79c1bbdd2216e7cb583952a9" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>As</name></member>
      <member refid="class_usd_object_1a85151085271ffb20e4c642a8a854f786" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearAssetInfo</name></member>
      <member refid="class_usd_object_1aadb1b6b9372e1de8b0cef16a8809de0a" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearAssetInfoByKey</name></member>
      <member refid="class_usd_object_1a30d686bc90f3d7d6753086a484d86ed4" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearCustomData</name></member>
      <member refid="class_usd_object_1a5abc2ea6c40a3b8b9bc60896cfee0c63" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearCustomDataByKey</name></member>
      <member refid="class_usd_object_1a45f102f292999a4d2c2d5015d54ab9dc" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearDisplayName</name></member>
      <member refid="class_usd_object_1ab84f704415b18a9819918a1a73732f38" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearDocumentation</name></member>
      <member refid="class_usd_object_1a5b6b31dcfcfb34f43f334161522de847" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearHidden</name></member>
      <member refid="class_usd_object_1af75ddb7982a5b5c77f9840e67df94435" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearMetadata</name></member>
      <member refid="class_usd_object_1afd756d242f6026a3d7c5606badbf8411" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>ClearMetadataByDictKey</name></member>
      <member refid="class_usd_object_1ac81c4a2222e6c4957ed7a540c05e2346" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetAllAuthoredMetadata</name></member>
      <member refid="class_usd_object_1afd698d0849b1a8dd4e9a4bf7608e8754" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetAllMetadata</name></member>
      <member refid="class_usd_object_1a568ab5eceb43fd673cad556f30df6619" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetAssetInfo</name></member>
      <member refid="class_usd_object_1ada201f20c6d4b33ec27fd459703909e9" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetAssetInfoByKey</name></member>
      <member refid="class_usd_object_1abea26b9c6a71883a2d9da4ff64952391" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetCustomData</name></member>
      <member refid="class_usd_object_1a9aebce4a579e9bb24385bac6e4ae3186" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetCustomDataByKey</name></member>
      <member refid="class_usd_object_1aa8476a8039c198245c87e27b0f6b7e78" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetDescription</name></member>
      <member refid="class_usd_object_1afea773af9042346906dbd1226d704aeb" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetDisplayName</name></member>
      <member refid="class_usd_object_1afbeb96db494ea5fa795d937e532083c9" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetDocumentation</name></member>
      <member refid="class_usd_object_1ad2d76f736733f3ad51aa1ea1df6f4d44" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetMetadata</name></member>
      <member refid="class_usd_object_1af114545bd56cd7619e7d4f2f884e4128" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetMetadata</name></member>
      <member refid="class_usd_object_1aba47c41ec8cc536290c04e219f12589c" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetMetadataByDictKey</name></member>
      <member refid="class_usd_object_1a3bdf70a1d4a8754a0cb51cddab11b299" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetMetadataByDictKey</name></member>
      <member refid="class_usd_object_1ae57e12beedf10c423e11c5b889343f6d" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetName</name></member>
      <member refid="class_usd_object_1aa5d32fe69eb9f41ff16222ce8458f67e" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetNamespaceDelimiter</name></member>
      <member refid="class_usd_object_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetPath</name></member>
      <member refid="class_usd_object_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetPrim</name></member>
      <member refid="class_usd_object_1ae980898ec578c6f8082717ceac44a11e" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetPrimPath</name></member>
      <member refid="class_usd_object_1acbf11fd10a72dbc827b2f3738d2edfde" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>GetStage</name></member>
      <member refid="class_usd_object_1aac2bfbc79842758d55ad739f471ff437" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAssetInfo</name></member>
      <member refid="class_usd_object_1a4f337c0c1709d3e161a8ff34f46eb7e5" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAssetInfoKey</name></member>
      <member refid="class_usd_object_1af05106a278e314f85483651af43e8f68" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredAssetInfo</name></member>
      <member refid="class_usd_object_1a7cc57b254d41d8f09f95b8621f238e49" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredAssetInfoKey</name></member>
      <member refid="class_usd_object_1afe9a33d79276073db9dbc712861c3aa0" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredCustomData</name></member>
      <member refid="class_usd_object_1a0b5df6ddc5f201cc3e42709b8949bb9c" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredCustomDataKey</name></member>
      <member refid="class_usd_object_1a6af100fedb961a5952b62a94bc8e725b" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredDisplayName</name></member>
      <member refid="class_usd_object_1ab0e3e800ab9fdaf480b767a225208767" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredDocumentation</name></member>
      <member refid="class_usd_object_1a904b990143e4b62ac64e3d1ebeaf5bdc" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredHidden</name></member>
      <member refid="class_usd_object_1a37211404a939811e841d90c65cd19999" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredMetadata</name></member>
      <member refid="class_usd_object_1a20a01b0dd0dd51f9439b6a3a231c76ef" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasAuthoredMetadataDictKey</name></member>
      <member refid="class_usd_object_1ae3d80901c17a644af30bdef5c265580c" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasCustomData</name></member>
      <member refid="class_usd_object_1a2de3d809c116fe60c3646d90dcbba87f" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasCustomDataKey</name></member>
      <member refid="class_usd_object_1ab4f96ac08a894f8ec8072ee79b718bd7" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>hash_value</name></member>
      <member refid="class_usd_object_1ae2d99fd05dbc39c2d9746fe639c24825" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasMetadata</name></member>
      <member refid="class_usd_object_1a911c19d77fe0552877918517818e7399" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>HasMetadataDictKey</name></member>
      <member refid="class_usd_object_1a7152c172b8551a1e222bf446ce7689fd" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>Is</name></member>
      <member refid="class_usd_object_1aaccbe79a26ceada03ab81918b30a383e" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>IsHidden</name></member>
      <member refid="class_usd_object_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>IsValid</name></member>
      <member refid="class_usd_object_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>operator bool</name></member>
      <member refid="class_usd_object_1a2088ad6cb5fcc4522049e55e9f2fa3eb" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>operator!=</name></member>
      <member refid="class_usd_object_1aafd36fe4c0cd410fa8d48560a00afb3a" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>operator&lt;</name></member>
      <member refid="class_usd_object_1a861bba08221bb6d6a57b52d1e1993fc5" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>operator==</name></member>
      <member refid="class_usd_object_1acd1183e9097ec5de924a87b084bb6d08" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetAssetInfo</name></member>
      <member refid="class_usd_object_1a2d4070d8ad13d6880deb6fcdb6679183" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetAssetInfoByKey</name></member>
      <member refid="class_usd_object_1ac4f24685000b88fbdf783de2b1546995" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetCustomData</name></member>
      <member refid="class_usd_object_1abdcc93cd6a4dd8ad2bbe2134316ad836" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetCustomDataByKey</name></member>
      <member refid="class_usd_object_1a89d396665875d4d4a88b5ecb0a22acb0" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetDisplayName</name></member>
      <member refid="class_usd_object_1a207a3fac40b4bd2dca8e9bce07d398e9" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetDocumentation</name></member>
      <member refid="class_usd_object_1a0e3d2a1a0e00d5e4ba2ba8aad555d593" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetHidden</name></member>
      <member refid="class_usd_object_1a1a5325c3bfad050926f03f867a803c03" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetMetadata</name></member>
      <member refid="class_usd_object_1abccca1c487755a7f08e6e4b042d39ede" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetMetadata</name></member>
      <member refid="class_usd_object_1a7f3b367075ca8d6bba9fbf3636183ff3" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetMetadataByDictKey</name></member>
      <member refid="class_usd_object_1a0c04b54500b5b6d5ef0e8aca66282770" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>SetMetadataByDictKey</name></member>
      <member refid="class_usd_object_1aa48399c6827abf3a4ea747345c7c8eae" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>TfHashAppend</name></member>
      <member refid="class_usd_object_1a385fde82261ce94db08ca9b4d53966ab" prot="public" virt="non-virtual"><scope>UsdObject</scope><name>UsdObject</name></member>
      <member refid="class_usd_object_1a16bdb9fdb779ddaa849433d5c029a2a5" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>UsdObject</name></member>
      <member refid="class_usd_object_1adc7d0f32c2146c7ed23416283a39e991" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>UsdObject</name></member>
      <member refid="class_usd_object_1a2331471890f65208bdef3fa70d77fd16" prot="protected" virt="non-virtual"><scope>UsdObject</scope><name>UsdObject</name></member>
      <member refid="class_usd_object_1ab763ff44a10a7cbf08ec18a4557203e3" prot="private" virt="non-virtual"><scope>UsdObject</scope><name>UsdStage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
