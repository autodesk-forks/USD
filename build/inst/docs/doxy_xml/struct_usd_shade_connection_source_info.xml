<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_shade_connection_source_info" kind="struct" language="C++" prot="public">
    <compoundname>UsdShadeConnectionSourceInfo</compoundname>
    <includes refid="connectable_a_p_i_8h" local="no">connectableAPI.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_usd_shade_connection_source_info_1afb1dc359947563208a20792589ab8148" prot="public" static="no" mutable="no">
        <type><ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref></type>
        <definition>UsdShadeConnectableAPI source</definition>
        <argsstring></argsstring>
        <name>source</name>
        <briefdescription>
<para><computeroutput>source</computeroutput> is the connectable prim that produces or contains a value for the given shading attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="757" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="757" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_shade_connection_source_info_1a67ce616ce690314e8573f99253847163" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken sourceName</definition>
        <argsstring></argsstring>
        <name>sourceName</name>
        <briefdescription>
<para><computeroutput>sourceName</computeroutput> is the name of the shading attribute that is the target of the connection. </para>
        </briefdescription>
        <detaileddescription>
<para>This excludes any namespace prefix that determines the type of the source (eg, output). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="761" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="761" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_shade_connection_source_info_1a61aceda84b33839d5a3bcd43f52b0af7" prot="public" static="no" mutable="no">
        <type>UsdShadeAttributeType</type>
        <definition>UsdShadeAttributeType sourceType</definition>
        <argsstring></argsstring>
        <name>sourceType</name>
        <initializer>= UsdShadeAttributeType::Invalid</initializer>
        <briefdescription>
<para><computeroutput>sourceType</computeroutput> is used to indicate the type of the shading attribute that is the target of the connection. </para>
        </briefdescription>
        <detaileddescription>
<para>The source type is used to determine the namespace prefix that must be attached to <computeroutput>sourceName</computeroutput> to determine the source full attribute name. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="766" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="766" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_shade_connection_source_info_1a47fd1fcaa85c137f9f4e96391615b80e" prot="public" static="no" mutable="no">
        <type><ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref></type>
        <definition>SdfValueTypeName typeName</definition>
        <argsstring></argsstring>
        <name>typeName</name>
        <briefdescription>
<para><computeroutput>typeName</computeroutput>, if specified, is the typename of the attribute to create on the source if it doesn&apos;t exist when creating a connection </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="769" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="769" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1a23d656afc227a864f901987e079ca9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdShadeConnectionSourceInfo</definition>
        <argsstring>()=default</argsstring>
        <name>UsdShadeConnectionSourceInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="771" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1ac0b8337e1babe5bba1b3f51c46e37d25" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdShadeConnectionSourceInfo</definition>
        <argsstring>(UsdShadeConnectableAPI const &amp;source_, TfToken const &amp;sourceName_, UsdShadeAttributeType sourceType_, SdfValueTypeName typeName_=SdfValueTypeName())</argsstring>
        <name>UsdShadeConnectionSourceInfo</name>
        <param>
          <type><ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> const &amp;</type>
          <declname>source_</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>sourceName_</declname>
        </param>
        <param>
          <type>UsdShadeAttributeType</type>
          <declname>sourceType_</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref></type>
          <declname>typeName_</declname>
          <defval><ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="772" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="772" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1ab111737d7a7732e08cef87f3ddf9548e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdShadeConnectionSourceInfo</definition>
        <argsstring>(UsdShadeInput const &amp;input)</argsstring>
        <name>UsdShadeConnectionSourceInfo</name>
        <param>
          <type><ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> const &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="782" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="782" bodyend="787"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1ac19902c61c5cf57d0c523063a4cc1b1e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdShadeConnectionSourceInfo</definition>
        <argsstring>(UsdShadeOutput const &amp;output)</argsstring>
        <name>UsdShadeConnectionSourceInfo</name>
        <param>
          <type><ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> const &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="788" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="788" bodyend="793"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1abfe4a472bfe7377e71cecf4b27d623ab" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>USDSHADE_API</type>
        <definition>USDSHADE_API UsdShadeConnectionSourceInfo</definition>
        <argsstring>(UsdStagePtr const &amp;stage, SdfPath const &amp;sourcePath)</argsstring>
        <name>UsdShadeConnectionSourceInfo</name>
        <param>
          <type>UsdStagePtr const &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>sourcePath</declname>
        </param>
        <briefdescription>
<para>Construct the information for this struct from a property path. </para>
        </briefdescription>
        <detaileddescription>
<para>The source attribute does not have to exist, but the <computeroutput>sourcePath</computeroutput> needs to have a valid prefix to identify the sourceType. The source prim needs to exist and be <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> compatible </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="799" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Return true if this source info is valid for setting up a connection. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="804" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="804" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="814" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="814" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1a19b285ace1f1fbe2301484c2a627c9d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(UsdShadeConnectionSourceInfo const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_usd_shade_connection_source_info" kindref="compound">UsdShadeConnectionSourceInfo</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="817" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="817" bodyend="822"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_shade_connection_source_info_1a5dc9d1950f6e586d4b7599a812b0d017" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdShadeConnectionSourceInfo &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_usd_shade_connection_source_info" kindref="compound">UsdShadeConnectionSourceInfo</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPI.h" line="823" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="823" bodyend="825"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A compact struct to represent a bundle of information about an upstream source attribute. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="8150">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="8153">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="8149">
        <label>SdfValueTypeName</label>
        <link refid="class_sdf_value_type_name"/>
      </node>
      <node id="8148">
        <label>UsdShadeConnectionSourceInfo</label>
        <link refid="struct_usd_shade_connection_source_info"/>
        <childnode refid="8149" relation="usage">
          <edgelabel>typeName</edgelabel>
        </childnode>
        <childnode refid="8150" relation="usage">
          <edgelabel>sourceName</edgelabel>
        </childnode>
        <childnode refid="8151" relation="usage">
          <edgelabel>source</edgelabel>
        </childnode>
      </node>
      <node id="8152">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="8153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8151">
        <label>UsdShadeConnectableAPI</label>
        <link refid="class_usd_shade_connectable_a_p_i"/>
        <childnode refid="8152" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdShade/connectableAPI.h" line="754" column="1" bodyfile="pxr/usd/usdShade/connectableAPI.h" bodystart="754" bodyend="826"/>
    <listofallmembers>
      <member refid="struct_usd_shade_connection_source_info_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>IsValid</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>operator bool</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a5dc9d1950f6e586d4b7599a812b0d017" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>operator!=</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a19b285ace1f1fbe2301484c2a627c9d2" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>operator==</name></member>
      <member refid="struct_usd_shade_connection_source_info_1afb1dc359947563208a20792589ab8148" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>source</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a67ce616ce690314e8573f99253847163" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>sourceName</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a61aceda84b33839d5a3bcd43f52b0af7" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>sourceType</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a47fd1fcaa85c137f9f4e96391615b80e" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>typeName</name></member>
      <member refid="struct_usd_shade_connection_source_info_1a23d656afc227a864f901987e079ca9c0" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>UsdShadeConnectionSourceInfo</name></member>
      <member refid="struct_usd_shade_connection_source_info_1ac0b8337e1babe5bba1b3f51c46e37d25" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>UsdShadeConnectionSourceInfo</name></member>
      <member refid="struct_usd_shade_connection_source_info_1ab111737d7a7732e08cef87f3ddf9548e" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>UsdShadeConnectionSourceInfo</name></member>
      <member refid="struct_usd_shade_connection_source_info_1ac19902c61c5cf57d0c523063a4cc1b1e" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>UsdShadeConnectionSourceInfo</name></member>
      <member refid="struct_usd_shade_connection_source_info_1abfe4a472bfe7377e71cecf4b27d623ab" prot="public" virt="non-virtual"><scope>UsdShadeConnectionSourceInfo</scope><name>UsdShadeConnectionSourceInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
