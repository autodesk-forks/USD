<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="env_8h" kind="file" language="C++">
    <compoundname>env.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2arch_2api_8h" local="yes">pxr/base/arch/api.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="12507">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="12508" relation="include">
        </childnode>
      </node>
      <node id="12509">
        <label>string</label>
      </node>
      <node id="12505">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="12504">
        <label>pxr/base/arch/env.h</label>
        <link refid="env_8h"/>
        <childnode refid="12505" relation="include">
        </childnode>
        <childnode refid="12506" relation="include">
        </childnode>
        <childnode refid="12509" relation="include">
        </childnode>
      </node>
      <node id="12508">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="12506">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="12507" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__arch___system_functions_1gae66886ad81eef2c108bd85152a15e58f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API bool</type>
        <definition>ARCH_API bool ArchHasEnv</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>ArchHasEnv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Architecture dependent access to environment variables. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if and only if the current environment contains <computeroutput>name</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/env.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__arch___system_functions_1gaf00ba082e62cf6a81413757c859e0faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API std::string</type>
        <definition>ARCH_API std::string ArchGetEnv</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>ArchGetEnv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets a value from the current environment identified by <computeroutput>name</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/env.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__arch___system_functions_1gab7e89ea89c46857f0554aaef219da4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API bool</type>
        <definition>ARCH_API bool ArchSetEnv</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;value, bool overwrite)</argsstring>
        <name>ArchSetEnv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>overwrite</declname>
        </param>
        <briefdescription>
<para>Creates or modifies an environment variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/env.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__arch___system_functions_1gaeddab5f151ab6ff46aa494192466ec4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API bool</type>
        <definition>ARCH_API bool ArchRemoveEnv</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>ArchRemoveEnv</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes an environment variable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/env.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__arch___system_functions_1ga1d262469a4eb5756eaaf73920c5da7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API std::string</type>
        <definition>ARCH_API std::string ArchExpandEnvironmentVariables</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>ArchExpandEnvironmentVariables</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Expands environment variables in <computeroutput>str</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/env.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__arch___system_functions_1gad0bf6925c4c3ad552b7115484f350c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API char **</type>
        <definition>ARCH_API char** ArchEnviron</definition>
        <argsstring>()</argsstring>
        <name>ArchEnviron</name>
        <briefdescription>
<para>Return an array of the environment variables. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/env.h" line="85" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_ARCH_ENV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_ARCH_ENV_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/arch/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"></codeline>
<codeline lineno="43"><highlight class="normal">ARCH_API<sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="group__group__arch___system_functions_1gae66886ad81eef2c108bd85152a15e58f" kindref="member">ArchHasEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">ARCH_API<sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="group__group__arch___system_functions_1gaf00ba082e62cf6a81413757c859e0faa" kindref="member">ArchGetEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">ARCH_API</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="group__group__arch___system_functions_1gab7e89ea89c46857f0554aaef219da4db" kindref="member">ArchSetEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">ARCH_API</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="group__group__arch___system_functions_1gaeddab5f151ab6ff46aa494192466ec4e" kindref="member">ArchRemoveEnv</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">ARCH_API</highlight></codeline>
<codeline lineno="76"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="group__group__arch___system_functions_1ga1d262469a4eb5756eaaf73920c5da7b7" kindref="member">ArchExpandEnvironmentVariables</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">ARCH_API</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><ref refid="group__group__arch___system_functions_1gad0bf6925c4c3ad552b7115484f350c59" kindref="member">ArchEnviron</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_ARCH_ENV_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/arch/env.h"/>
  </compounddef>
</doxygen>
