<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr__tsl_1_1robin__map_1_1_key_select" kind="class" language="C++" prot="private">
    <compoundname>pxr_tsl::robin_map::KeySelect</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpxr__tsl_1_1robin__map_1_1_key_select_1acf4be953c7037c26797d1e8784b3074d" prot="public" static="no">
        <type>Key</type>
        <definition>using key_type =  Key</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="103" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr__tsl_1_1robin__map_1_1_key_select_1a7d26762653a6d8a35b858b9d523c8805" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const key_type &amp;</type>
        <definition>const key_type&amp; operator()</definition>
        <argsstring>(const std::pair&lt; Key, T &gt; &amp;key_value) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::pair&lt; Key, T &gt; &amp;</type>
          <declname>key_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="105" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1robin__map_1_1_key_select_1a8c41eaa1e4f1811e1e0b25cc9ad66fc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>key_type &amp;</type>
        <definition>key_type&amp; operator()</definition>
        <argsstring>(std::pair&lt; Key, T &gt; &amp;key_value) noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>std::pair&lt; Key, T &gt; &amp;</type>
          <declname>key_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="110" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="110" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="101" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="101" bodyend="113"/>
    <listofallmembers>
      <member refid="classpxr__tsl_1_1robin__map_1_1_key_select_1acf4be953c7037c26797d1e8784b3074d" prot="public" virt="non-virtual"><scope>pxr_tsl::robin_map::KeySelect</scope><name>key_type</name></member>
      <member refid="classpxr__tsl_1_1robin__map_1_1_key_select_1a7d26762653a6d8a35b858b9d523c8805" prot="public" virt="non-virtual"><scope>pxr_tsl::robin_map::KeySelect</scope><name>operator()</name></member>
      <member refid="classpxr__tsl_1_1robin__map_1_1_key_select_1a8c41eaa1e4f1811e1e0b25cc9ad66fc4" prot="public" virt="non-virtual"><scope>pxr_tsl::robin_map::KeySelect</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
