<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_color_channel_task" kind="class" language="C++" prot="public">
    <compoundname>HdxColorChannelTask</compoundname>
    <basecompoundref refid="class_hdx_task" prot="public" virt="non-virtual">HdxTask</basecompoundref>
    <includes refid="color_channel_task_8h" local="no">colorChannelTask.h</includes>
    <innerclass refid="struct_hdx_color_channel_task_1_1___parameter_buffer" prot="private">HdxColorChannelTask::_ParameterBuffer</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_color_channel_task_1ad68a789d893579176d329c5ab77b2863" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; class <ref refid="class_hdx_fullscreen_shader" kindref="compound">HdxFullscreenShader</ref> &gt;</type>
        <definition>std::unique_ptr&lt;class HdxFullscreenShader&gt; _compositor</definition>
        <argsstring></argsstring>
        <name>_compositor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="90" column="1" bodyfile="pxr/imaging/hdx/colorChannelTask.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_color_channel_task_1a289048200718d2e14065d012028e3faa" prot="private" static="no" mutable="no">
        <type>_ParameterBuffer</type>
        <definition>_ParameterBuffer _parameterData</definition>
        <argsstring></argsstring>
        <name>_parameterData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="91" column="1" bodyfile="pxr/imaging/hdx/colorChannelTask.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_color_channel_task_1ae6baedb6470a1525691fe48290f362af" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _channel</definition>
        <argsstring></argsstring>
        <name>_channel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="95" column="1" bodyfile="pxr/imaging/hdx/colorChannelTask.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_color_channel_task_1a7dc00eb96f7ec4674cba949dd1ea612c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxColorChannelTask</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdxColorChannelTask</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1a9cadefaa2da7ca8383b14cf115585dfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API ~HdxColorChannelTask</definition>
        <argsstring>() override</argsstring>
        <name>~HdxColorChannelTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Prepare</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex) override</argsstring>
        <name>Prepare</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
<para>Prepare the tasks resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Execute</definition>
        <argsstring>(HdTaskContext *ctx) override</argsstring>
        <name>Execute</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Execute the color channel task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hdx_color_channel_task_1a9d69055700f007fb68f02377ec5d7f19" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _Sync</definition>
        <argsstring>(HdSceneDelegate *delegate, HdTaskContext *ctx, HdDirtyBits *dirtyBits) override</argsstring>
        <name>_Sync</name>
        <reimplements refid="class_hdx_task_1adbceef9d029794eba7b97e6edd47d8fe">_Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Sync the render pass resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="61" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_color_channel_task_1a051d284829091484ad8cb3a18346f3fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxColorChannelTask</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxColorChannelTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1ad54b5dcd542f0237066d81d0605ea458" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxColorChannelTask</definition>
        <argsstring>(const HdxColorChannelTask &amp;)=delete</argsstring>
        <name>HdxColorChannelTask</name>
        <param>
          <type>const <ref refid="class_hdx_color_channel_task" kindref="compound">HdxColorChannelTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1a387f503a310397c7c0f082fbe35ca606" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hdx_color_channel_task" kindref="compound">HdxColorChannelTask</ref> &amp;</type>
        <definition>HdxColorChannelTask&amp; operator=</definition>
        <argsstring>(const HdxColorChannelTask &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hdx_color_channel_task" kindref="compound">HdxColorChannelTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1a10c54abcc1e5712f9340a8dd7f79e0bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _UpdateParameterBuffer</definition>
        <argsstring>(float screenSizeX, float screenSizeY)</argsstring>
        <name>_UpdateParameterBuffer</name>
        <param>
          <type>float</type>
          <declname>screenSizeX</declname>
        </param>
        <param>
          <type>float</type>
          <declname>screenSizeY</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_color_channel_task_1a73805330514319faa581c2c40722b5e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ApplyColorChannel</definition>
        <argsstring>()</argsstring>
        <name>_ApplyColorChannel</name>
        <briefdescription>
<para>Apply the color channel filtering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/colorChannelTask.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A task for choosing a color channel for display. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3515">
        <label>HdxTask</label>
        <link refid="class_hdx_task"/>
      </node>
      <node id="3514">
        <label>HdxColorChannelTask</label>
        <link refid="class_hdx_color_channel_task"/>
        <childnode refid="3515" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3517">
        <label>HdxTask</label>
        <link refid="class_hdx_task"/>
      </node>
      <node id="3516">
        <label>HdxColorChannelTask</label>
        <link refid="class_hdx_color_channel_task"/>
        <childnode refid="3517" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdx/colorChannelTask.h" line="41" column="1" bodyfile="pxr/imaging/hdx/colorChannelTask.h" bodystart="40" bodyend="96"/>
    <listofallmembers>
      <member refid="class_hdx_color_channel_task_1a73805330514319faa581c2c40722b5e2" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_ApplyColorChannel</name></member>
      <member refid="class_hdx_color_channel_task_1ae6baedb6470a1525691fe48290f362af" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_channel</name></member>
      <member refid="class_hdx_color_channel_task_1ad68a789d893579176d329c5ab77b2863" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_compositor</name></member>
      <member refid="class_hd_task_1ab4beed642380f0353cf158cef16c4f32" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_GetDriver</name></member>
      <member refid="class_hdx_task_1a16f5049f3fc01c4beaff232f96bb3b89" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_GetHgi</name></member>
      <member refid="class_hd_task_1a2ceca911620546c6b245d903f9ec5f78" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_GetTaskContextData</name></member>
      <member refid="class_hd_task_1a50bb64fcb3404805df436ad9e12ddd3c" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_GetTaskParams</name></member>
      <member refid="class_hd_task_1a7db1af254e4af3fbffc974c19968a6e7" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_GetTaskRenderTags</name></member>
      <member refid="class_hd_task_1a6f03b9a9e34350db200b0a7f252eaf8e" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_HasTaskContextData</name></member>
      <member refid="class_hdx_color_channel_task_1a289048200718d2e14065d012028e3faa" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_parameterData</name></member>
      <member refid="class_hdx_task_1a7d7d28eeab4c68ce5d538ac9a7913abe" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_SwapTextures</name></member>
      <member refid="class_hdx_color_channel_task_1a9d69055700f007fb68f02377ec5d7f19" prot="protected" virt="virtual"><scope>HdxColorChannelTask</scope><name>_Sync</name></member>
      <member refid="class_hdx_task_1a6ad7b2b98cc34e2b1783e4c6f4237438" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_ToggleDepthTarget</name></member>
      <member refid="class_hdx_task_1a49a40985ee2c769442da27b5603ebf55" prot="protected" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_ToggleRenderTarget</name></member>
      <member refid="class_hdx_color_channel_task_1a10c54abcc1e5712f9340a8dd7f79e0bf" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>_UpdateParameterBuffer</name></member>
      <member refid="class_hdx_color_channel_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>Execute</name></member>
      <member refid="class_hd_task_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>GetId</name></member>
      <member refid="class_hd_task_1ade051cd8ff53a108b7e6c27be99a5e3a" prot="public" virt="virtual"><scope>HdxColorChannelTask</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_task_1a5660db150d0d46d62319100c3f6138fd" prot="public" virt="virtual"><scope>HdxColorChannelTask</scope><name>GetRenderTags</name></member>
      <member refid="class_hd_task_1a3df864dcce7538c1b130b105af7c2406" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>HdTask</name></member>
      <member refid="class_hdx_color_channel_task_1a7dc00eb96f7ec4674cba949dd1ea612c" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>HdxColorChannelTask</name></member>
      <member refid="class_hdx_color_channel_task_1a051d284829091484ad8cb3a18346f3fd" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>HdxColorChannelTask</name></member>
      <member refid="class_hdx_color_channel_task_1ad54b5dcd542f0237066d81d0605ea458" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>HdxColorChannelTask</name></member>
      <member refid="class_hdx_task_1a3043804871bb4471cb1042612674973e" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>HdxTask</name></member>
      <member refid="class_hdx_task_1a72510b2c9b23e856a57a1d5f48e034b8" prot="public" virt="virtual"><scope>HdxColorChannelTask</scope><name>IsConverged</name></member>
      <member refid="class_hdx_color_channel_task_1a387f503a310397c7c0f082fbe35ca606" prot="private" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>operator=</name></member>
      <member refid="class_hdx_color_channel_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>Prepare</name></member>
      <member refid="class_hdx_task_1ae8a3dcff7f362ad7356b852d5c970e7e" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>Sync</name></member>
      <member refid="class_hd_task_1a08a2f7cc6d3767c8081f5098bd113d66" prot="public" virt="virtual"><scope>HdxColorChannelTask</scope><name>~HdTask</name></member>
      <member refid="class_hdx_color_channel_task_1a9cadefaa2da7ca8383b14cf115585dfe" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>~HdxColorChannelTask</name></member>
      <member refid="class_hdx_task_1a0dbe76889f321b9f14b5e7aed6d23aa5" prot="public" virt="non-virtual"><scope>HdxColorChannelTask</scope><name>~HdxTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
