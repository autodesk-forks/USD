<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kind="class" language="C++" prot="public">
    <compoundname>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</compoundname>
    <includes refid="robin__hash_8h" local="no">robin_hash.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1acabf282ed11d00c69bf4eb4923ebaca5" prot="private" static="no">
        <type>typename std::conditional&lt; IsConst, const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> *, <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1bucket__entry" kindref="compound">bucket_entry</ref> * &gt;::type</type>
        <definition>using bucket_entry_ptr =  typename std::conditional&lt;IsConst, const bucket_entry*, bucket_entry*&gt;::type</definition>
        <argsstring></argsstring>
        <name>bucket_entry_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="452" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="454" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="459" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="459" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a113921676ed67cb9d447bdbc758fb52d" prot="public" static="no">
        <type>const typename robin_hash::value_type</type>
        <definition>using value_type =  const typename robin_hash::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="460" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="461" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="461" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a74202cdd96628bc49a756e5fc87d22de" prot="public" static="no">
        <type>value_type &amp;</type>
        <definition>using reference =  value_type&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="462" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a4738635aff9c2bb2c8ccc2875ae72496" prot="public" static="no">
        <type>value_type *</type>
        <definition>using pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="463" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="463" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a67236abe71c4d039824d9e52c78d3bae" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class robin_hash</definition>
        <argsstring></argsstring>
        <name>robin_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="449" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="449" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1afbd8032f2baeae1c26d7a5efd78549c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const robin_iterator &amp;lhs, const robin_iterator &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="521" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="521" bodyend="524"/>
      </memberdef>
      <memberdef kind="friend" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a89ed5c170efa7bfdc6d6af412198361f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const robin_iterator &amp;lhs, const robin_iterator &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="526" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="526" bodyend="529"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1aff167cfefe9e6ff6459661970662ba87" prot="private" static="no" mutable="no">
        <type>bucket_entry_ptr</type>
        <definition>bucket_entry_ptr m_bucket</definition>
        <argsstring></argsstring>
        <name>m_bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="532" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="532" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1aa1ecbf195da19a1b9d07c716bd99972e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>robin_iterator</definition>
        <argsstring>(bucket_entry_ptr bucket) noexcept</argsstring>
        <name>robin_iterator</name>
        <param>
          <type>bucket_entry_ptr</type>
          <declname>bucket</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="456" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="456" bodyend="456"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a39b0375bcc30ba7e55ff8cbc0396ba5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>robin_iterator</definition>
        <argsstring>() noexcept</argsstring>
        <name>robin_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="465" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="465" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a038d49674a370416b3bf7e9b0b6a7161" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>TIsConst</declname>
            <defname>TIsConst</defname>
            <defval>IsConst</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; TIsConst &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>robin_iterator</definition>
        <argsstring>(const robin_iterator&lt;!TIsConst &gt; &amp;other) noexcept</argsstring>
        <name>robin_iterator</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref>&lt;!TIsConst &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="470" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="470" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a9de8563af4830d52c1643c9f26421baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>robin_iterator</definition>
        <argsstring>(const robin_iterator &amp;other)=default</argsstring>
        <name>robin_iterator</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a3397476103f048cda46e22112f1f2cfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>robin_iterator</definition>
        <argsstring>(robin_iterator &amp;&amp;other)=default</argsstring>
        <name>robin_iterator</name>
        <param>
          <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a27463dfaee3db5fb1c2a2b0b42408280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
        <definition>robin_iterator&amp; operator=</definition>
        <argsstring>(const robin_iterator &amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1ab52297a29bd65aff58c0f7a341c3df91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
        <definition>robin_iterator&amp; operator=</definition>
        <argsstring>(robin_iterator &amp;&amp;other)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a3c5f8b135a320996829ab17231189d76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const robin_hash::key_type &amp;</type>
        <definition>const robin_hash::key_type&amp; key</definition>
        <argsstring>() const</argsstring>
        <name>key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="478" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="478" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a9710fe79c022d87bafb2cb155099140a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>ValueSelect</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; has_mapped_type&lt; U &gt;::value &amp;&amp;IsConst &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>const U::value_type &amp;</type>
        <definition>const U::value_type&amp; value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="485" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="485" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a7ad8cce74d501f58834e60fcf2cc7311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
            <defval>ValueSelect</defval>
          </param>
          <param>
            <type>typename std::enable_if&lt; has_mapped_type&lt; U &gt;::value &amp;&amp;!IsConst &gt;::type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type>U::value_type &amp;</type>
        <definition>U::value_type&amp; value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="492" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="492" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="496" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="496" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="498" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="498" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1ae83272bff4f0db20a6c946ff68f0965d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref> &amp;</type>
        <definition>robin_iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="500" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="500" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a978f091bbf62b80478b5f5aa778d5012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator" kindref="compound">robin_iterator</ref></type>
        <definition>robin_iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="514" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="514" bodyend="519"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The &apos;operator*()&apos; and &apos;operator-&gt;()&apos; methods return a const reference and const pointer respectively to the stored value type. </para>
    </briefdescription>
    <detaileddescription>
<para>In case of a map, to get a mutable reference to the value associated to a key (the &apos;.second&apos; in the stored pair), you have to call &apos;value()&apos;.</para>
<para>The main reason for this is that if we returned a <computeroutput>std::pair&lt;Key, T&gt;&amp;</computeroutput> instead of a <computeroutput>const std::pair&lt;Key, T&gt;&amp;</computeroutput>, the user may modify the key which will put the map in a undefined state. </para>
    </detaileddescription>
    <location file="pxr/base/tf/pxrTslRobinMap/robin_hash.h" line="368" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_hash.h" bodystart="368" bodyend="-1"/>
    <listofallmembers>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1acabf282ed11d00c69bf4eb4923ebaca5" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>bucket_entry_ptr</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>difference_type</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>iterator_category</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a3c5f8b135a320996829ab17231189d76" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>key</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1aff167cfefe9e6ff6459661970662ba87" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>m_bucket</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator *</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a89ed5c170efa7bfdc6d6af412198361f" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator!=</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1ae83272bff4f0db20a6c946ff68f0965d" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator++</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a978f091bbf62b80478b5f5aa778d5012" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator++</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator-&gt;</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a27463dfaee3db5fb1c2a2b0b42408280" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator=</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1ab52297a29bd65aff58c0f7a341c3df91" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator=</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1afbd8032f2baeae1c26d7a5efd78549c8" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>operator==</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a4738635aff9c2bb2c8ccc2875ae72496" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>pointer</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a74202cdd96628bc49a756e5fc87d22de" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>reference</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a67236abe71c4d039824d9e52c78d3bae" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>robin_hash</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1aa1ecbf195da19a1b9d07c716bd99972e" prot="private" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>robin_iterator</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a39b0375bcc30ba7e55ff8cbc0396ba5d" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>robin_iterator</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a038d49674a370416b3bf7e9b0b6a7161" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>robin_iterator</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a9de8563af4830d52c1643c9f26421baa" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>robin_iterator</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a3397476103f048cda46e22112f1f2cfc" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>robin_iterator</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a9710fe79c022d87bafb2cb155099140a" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>value</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a7ad8cce74d501f58834e60fcf2cc7311" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>value</name></member>
      <member refid="classpxr__tsl_1_1detail__robin__hash_1_1robin__hash_1_1robin__iterator_1a113921676ed67cb9d447bdbc758fb52d" prot="public" virt="non-virtual"><scope>pxr_tsl::detail_robin_hash::robin_hash::robin_iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
