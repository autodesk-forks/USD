<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="py_notice_wrapper_8h" kind="file" language="C++">
    <compoundname>pyNoticeWrapper.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2tf_2notice_8h" local="yes">pxr/base/tf/notice.h</includes>
    <includes refid="string_utils_8h" local="yes">pxr/base/tf/stringUtils.h</includes>
    <includes refid="static_data_8h" local="yes">pxr/base/tf/staticData.h</includes>
    <includes refid="type_8h" local="yes">pxr/base/tf/type.h</includes>
    <includes refid="py_lock_8h" local="yes">pxr/base/tf/pyLock.h</includes>
    <includes refid="py_object_finder_8h" local="yes">pxr/base/tf/pyObjectFinder.h</includes>
    <includes refid="wrap_type_helpers_8h" local="yes">pxr/base/tf/wrapTypeHelpers.h</includes>
    <includes local="no">boost/python/bases.hpp</includes>
    <includes local="no">boost/python/class.hpp</includes>
    <includes local="no">boost/python/extract.hpp</includes>
    <includes local="no">boost/python/handle.hpp</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="70538">
        <label>list</label>
      </node>
      <node id="70519">
        <label>locale</label>
      </node>
      <node id="70484">
        <label>atomic</label>
      </node>
      <node id="70543">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70473" relation="include">
        </childnode>
        <childnode refid="70484" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
      </node>
      <node id="70521">
        <label>stdarg.h</label>
      </node>
      <node id="70499">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="70500" relation="include">
        </childnode>
        <childnode refid="70486" relation="include">
        </childnode>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70466" relation="include">
        </childnode>
        <childnode refid="70501" relation="include">
        </childnode>
      </node>
      <node id="70474">
        <label>functional</label>
      </node>
      <node id="70547">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70466" relation="include">
        </childnode>
        <childnode refid="70548" relation="include">
        </childnode>
      </node>
      <node id="70465">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="70466" relation="include">
        </childnode>
      </node>
      <node id="70551">
        <label>boost/python/bases.hpp</label>
      </node>
      <node id="70535">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="70486">
        <label>cstdint</label>
      </node>
      <node id="70489">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70490" relation="include">
        </childnode>
        <childnode refid="70496" relation="include">
        </childnode>
        <childnode refid="70488" relation="include">
        </childnode>
        <childnode refid="70508" relation="include">
        </childnode>
        <childnode refid="70510" relation="include">
        </childnode>
        <childnode refid="70476" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70511" relation="include">
        </childnode>
      </node>
      <node id="70518">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70472" relation="include">
        </childnode>
        <childnode refid="70466" relation="include">
        </childnode>
        <childnode refid="70519" relation="include">
        </childnode>
        <childnode refid="70520" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
      </node>
      <node id="70525">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="70466" relation="include">
        </childnode>
      </node>
      <node id="70502">
        <label>cmath</label>
      </node>
      <node id="70497">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70491" relation="include">
        </childnode>
        <childnode refid="70498" relation="include">
        </childnode>
        <childnode refid="70499" relation="include">
        </childnode>
        <childnode refid="70503" relation="include">
        </childnode>
        <childnode refid="70504" relation="include">
        </childnode>
      </node>
      <node id="70528">
        <label>boost/python/handle.hpp</label>
      </node>
      <node id="70508">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70509" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
      </node>
      <node id="70541">
        <label>cstdarg</label>
      </node>
      <node id="70480">
        <label>string</label>
      </node>
      <node id="70472">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70465" relation="include">
        </childnode>
      </node>
      <node id="70529">
        <label>boost/python/object.hpp</label>
      </node>
      <node id="70506">
        <label>map</label>
      </node>
      <node id="70500">
        <label>cinttypes</label>
      </node>
      <node id="70462">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="70482">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="70483" relation="include">
        </childnode>
      </node>
      <node id="70522">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70517" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
        <childnode refid="70507" relation="include">
        </childnode>
      </node>
      <node id="70495">
        <label>stddef.h</label>
      </node>
      <node id="70491">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70466" relation="include">
        </childnode>
      </node>
      <node id="70473">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="70466" relation="include">
        </childnode>
      </node>
      <node id="70527">
        <label>pxr/base/tf/pyInterpreter.h</label>
        <link refid="py_interpreter_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70528" relation="include">
        </childnode>
        <childnode refid="70529" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
      </node>
      <node id="70509">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70499" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70484" relation="include">
        </childnode>
      </node>
      <node id="70510">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
      </node>
      <node id="70513">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
      </node>
      <node id="70461">
        <label>pxr/base/tf/pyNoticeWrapper.h</label>
        <link refid="py_notice_wrapper_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70463" relation="include">
        </childnode>
        <childnode refid="70539" relation="include">
        </childnode>
        <childnode refid="70543" relation="include">
        </childnode>
        <childnode refid="70470" relation="include">
        </childnode>
        <childnode refid="70530" relation="include">
        </childnode>
        <childnode refid="70544" relation="include">
        </childnode>
        <childnode refid="70549" relation="include">
        </childnode>
        <childnode refid="70551" relation="include">
        </childnode>
        <childnode refid="70546" relation="include">
        </childnode>
        <childnode refid="70532" relation="include">
        </childnode>
        <childnode refid="70528" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70506" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
      </node>
      <node id="70524">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="70525" relation="include">
        </childnode>
        <childnode refid="70519" relation="include">
        </childnode>
        <childnode refid="70526" relation="include">
        </childnode>
      </node>
      <node id="70520">
        <label>any</label>
      </node>
      <node id="70531">
        <label>boost/python/dict.hpp</label>
      </node>
      <node id="70501">
        <label>sys/types.h</label>
      </node>
      <node id="70514">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70515" relation="include">
        </childnode>
        <childnode refid="70496" relation="include">
        </childnode>
        <childnode refid="70489" relation="include">
        </childnode>
        <childnode refid="70512" relation="include">
        </childnode>
        <childnode refid="70522" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
      </node>
      <node id="70549">
        <label>pxr/base/tf/wrapTypeHelpers.h</label>
        <link refid="wrap_type_helpers_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70534" relation="include">
        </childnode>
        <childnode refid="70470" relation="include">
        </childnode>
        <childnode refid="70546" relation="include">
        </childnode>
        <childnode refid="70550" relation="include">
        </childnode>
      </node>
      <node id="70540">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70466" relation="include">
        </childnode>
        <childnode refid="70522" relation="include">
        </childnode>
        <childnode refid="70496" relation="include">
        </childnode>
        <childnode refid="70473" relation="include">
        </childnode>
        <childnode refid="70510" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70478" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70481" relation="include">
        </childnode>
      </node>
      <node id="70475">
        <label>typeinfo</label>
      </node>
      <node id="70544">
        <label>pxr/base/tf/pyObjectFinder.h</label>
        <link refid="py_object_finder_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70545" relation="include">
        </childnode>
        <childnode refid="70528" relation="include">
        </childnode>
        <childnode refid="70529" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
      </node>
      <node id="70468">
        <label>pxr/base/tf/cxxCast.h</label>
        <link refid="cxx_cast_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
      </node>
      <node id="70537">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="70536">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="70487">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70488" relation="include">
        </childnode>
        <childnode refid="70489" relation="include">
        </childnode>
        <childnode refid="70497" relation="include">
        </childnode>
        <childnode refid="70512" relation="include">
        </childnode>
        <childnode refid="70514" relation="include">
        </childnode>
        <childnode refid="70511" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
      </node>
      <node id="70483">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70484" relation="include">
        </childnode>
        <childnode refid="70485" relation="include">
        </childnode>
        <childnode refid="70486" relation="include">
        </childnode>
        <childnode refid="70478" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70481" relation="include">
        </childnode>
      </node>
      <node id="70498">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70466" relation="include">
        </childnode>
        <childnode refid="70499" relation="include">
        </childnode>
        <childnode refid="70502" relation="include">
        </childnode>
      </node>
      <node id="70481">
        <label>vector</label>
      </node>
      <node id="70545">
        <label>pxr/base/tf/pyIdentity.h</label>
        <link refid="py_identity_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70530" relation="include">
        </childnode>
        <childnode refid="70523" relation="include">
        </childnode>
        <childnode refid="70522" relation="include">
        </childnode>
        <childnode refid="70515" relation="include">
        </childnode>
        <childnode refid="70489" relation="include">
        </childnode>
        <childnode refid="70510" relation="include">
        </childnode>
        <childnode refid="70539" relation="include">
        </childnode>
        <childnode refid="70487" relation="include">
        </childnode>
        <childnode refid="70546" relation="include">
        </childnode>
        <childnode refid="70528" relation="include">
        </childnode>
        <childnode refid="70529" relation="include">
        </childnode>
        <childnode refid="70547" relation="include">
        </childnode>
      </node>
      <node id="70464">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="70465" relation="include">
        </childnode>
      </node>
      <node id="70530">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70524" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
      </node>
      <node id="70532">
        <label>boost/python/extract.hpp</label>
      </node>
      <node id="70504">
        <label>utility</label>
      </node>
      <node id="70542">
        <label>sstream</label>
      </node>
      <node id="70516">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70517" relation="include">
        </childnode>
        <childnode refid="70494" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
      </node>
      <node id="70550">
        <label>boost/python/def_visitor.hpp</label>
      </node>
      <node id="70488">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
      </node>
      <node id="70466">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="70492">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="70466" relation="include">
        </childnode>
      </node>
      <node id="70496">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70497" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70505" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70506" relation="include">
        </childnode>
        <childnode refid="70477" relation="include">
        </childnode>
        <childnode refid="70479" relation="include">
        </childnode>
        <childnode refid="70507" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70504" relation="include">
        </childnode>
        <childnode refid="70481" relation="include">
        </childnode>
      </node>
      <node id="70503">
        <label>math.h</label>
      </node>
      <node id="70539">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70472" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70499" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70540" relation="include">
        </childnode>
        <childnode refid="70541" relation="include">
        </childnode>
        <childnode refid="70505" relation="include">
        </childnode>
        <childnode refid="70538" relation="include">
        </childnode>
        <childnode refid="70479" relation="include">
        </childnode>
        <childnode refid="70542" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70481" relation="include">
        </childnode>
      </node>
      <node id="70523">
        <label>pxr/base/tf/pyUtils.h</label>
        <link refid="base_2tf_2py_utils_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70489" relation="include">
        </childnode>
        <childnode refid="70487" relation="include">
        </childnode>
        <childnode refid="70490" relation="include">
        </childnode>
        <childnode refid="70473" relation="include">
        </childnode>
        <childnode refid="70524" relation="include">
        </childnode>
        <childnode refid="70527" relation="include">
        </childnode>
        <childnode refid="70530" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70474" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70481" relation="include">
        </childnode>
        <childnode refid="70531" relation="include">
        </childnode>
        <childnode refid="70532" relation="include">
        </childnode>
        <childnode refid="70528" relation="include">
        </childnode>
        <childnode refid="70529" relation="include">
        </childnode>
        <childnode refid="70533" relation="include">
        </childnode>
      </node>
      <node id="70478">
        <label>iosfwd</label>
      </node>
      <node id="70485">
        <label>cstdlib</label>
      </node>
      <node id="70493">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70494" relation="include">
        </childnode>
        <childnode refid="70495" relation="include">
        </childnode>
      </node>
      <node id="70470">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70471" relation="include">
        </childnode>
        <childnode refid="70476" relation="include">
        </childnode>
        <childnode refid="70478" relation="include">
        </childnode>
        <childnode refid="70477" relation="include">
        </childnode>
        <childnode refid="70479" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
        <childnode refid="70481" relation="include">
        </childnode>
        <childnode refid="70482" relation="include">
        </childnode>
      </node>
      <node id="70526">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="70511">
        <label>cstddef</label>
      </node>
      <node id="70476">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70477" relation="include">
        </childnode>
      </node>
      <node id="70548">
        <label>unordered_map</label>
      </node>
      <node id="70490">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70472" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70491" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70493" relation="include">
        </childnode>
        <childnode refid="70495" relation="include">
        </childnode>
      </node>
      <node id="70463">
        <label>pxr/base/tf/notice.h</label>
        <link refid="base_2tf_2notice_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70467" relation="include">
        </childnode>
        <childnode refid="70515" relation="include">
        </childnode>
        <childnode refid="70470" relation="include">
        </childnode>
        <childnode refid="70487" relation="include">
        </childnode>
        <childnode refid="70522" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70538" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
      </node>
      <node id="70534">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70525" relation="include">
        </childnode>
        <childnode refid="70524" relation="include">
        </childnode>
        <childnode refid="70535" relation="include">
        </childnode>
        <childnode refid="70536" relation="include">
        </childnode>
        <childnode refid="70537" relation="include">
        </childnode>
        <childnode refid="70478" relation="include">
        </childnode>
        <childnode refid="70477" relation="include">
        </childnode>
      </node>
      <node id="70469">
        <label>type_traits</label>
      </node>
      <node id="70479">
        <label>set</label>
      </node>
      <node id="70533">
        <label>boost/python/type_id.hpp</label>
      </node>
      <node id="70517">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="70465" relation="include">
        </childnode>
      </node>
      <node id="70494">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="70466" relation="include">
        </childnode>
      </node>
      <node id="70505">
        <label>cstring</label>
      </node>
      <node id="70512">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70513" relation="include">
        </childnode>
        <childnode refid="70489" relation="include">
        </childnode>
        <childnode refid="70484" relation="include">
        </childnode>
      </node>
      <node id="70477">
        <label>memory</label>
      </node>
      <node id="70471">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70472" relation="include">
        </childnode>
        <childnode refid="70473" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70474" relation="include">
        </childnode>
        <childnode refid="70475" relation="include">
        </childnode>
      </node>
      <node id="70467">
        <label>pxr/base/tf/anyWeakPtr.h</label>
        <link refid="any_weak_ptr_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70468" relation="include">
        </childnode>
        <childnode refid="70470" relation="include">
        </childnode>
        <childnode refid="70487" relation="include">
        </childnode>
        <childnode refid="70523" relation="include">
        </childnode>
        <childnode refid="70534" relation="include">
        </childnode>
        <childnode refid="70511" relation="include">
        </childnode>
        <childnode refid="70469" relation="include">
        </childnode>
        <childnode refid="70504" relation="include">
        </childnode>
      </node>
      <node id="70515">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="70462" relation="include">
        </childnode>
        <childnode refid="70516" relation="include">
        </childnode>
        <childnode refid="70490" relation="include">
        </childnode>
        <childnode refid="70464" relation="include">
        </childnode>
        <childnode refid="70492" relation="include">
        </childnode>
        <childnode refid="70518" relation="include">
        </childnode>
        <childnode refid="70495" relation="include">
        </childnode>
        <childnode refid="70521" relation="include">
        </childnode>
        <childnode refid="70480" relation="include">
        </childnode>
      </node>
      <node id="70507">
        <label>typeindex</label>
      </node>
      <node id="70546">
        <label>boost/python/class.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_tf_py_notice_wrapper_base" prot="public">TfPyNoticeWrapperBase</innerclass>
    <innerclass refid="struct_tf_py_notice_wrapper" prot="public">TfPyNoticeWrapper</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="py_notice_wrapper_8h_1a0fca943e45b0fe8d6d590baeff81f0a9" prot="public" static="no">
        <name>TF_INSTANTIATE_NOTICE_WRAPPER</name>
        <param><defname>T</defname></param>
        <param><defname>Base</defname></param>
        <initializer><ref refid="registry_manager_8h_1ab1604c7efa4277ed6ee17fddaf70075f" kindref="member">TF_REGISTRY_FUNCTION</ref>(<ref refid="class_tf_type" kindref="compound">TfType</ref>) \
{ \
    <ref refid="class_tf_type_1a2812a06d6d2dbafc53b4f297d2aed030" kindref="member">TfType::Define</ref>&lt; TfPyNoticeWrapper&lt;T, Base&gt;, \
                    <ref refid="struct_tf_type_1_1_bases" kindref="compound">TfType::Bases</ref>&lt;Base&gt; &gt;(); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyNoticeWrapper.h" line="154" column="9" bodyfile="pxr/base/tf/pyNoticeWrapper.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_PY_NOTICE_WRAPPER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_PY_NOTICE_WRAPPER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2notice_8h" kindref="compound">pxr/base/tf/notice.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string_utils_8h" kindref="compound">pxr/base/tf/stringUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="static_data_8h" kindref="compound">pxr/base/tf/staticData.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyLock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyObjectFinder.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/wrapTypeHelpers.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/bases.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/class.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/extract.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/python/handle.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyNoticeObjectGenerator<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Tf_PyNoticeObjectGenerator<sp/>This;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::python::object<sp/>(*MakeObjectFunc)(<ref refid="class_tf_notice" kindref="compound">TfNotice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>generator<sp/>for<sp/>notice<sp/>type<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Register()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>this<sp/>stuff<sp/>should<sp/>be<sp/>keyed<sp/>directly<sp/>off<sp/>TfType<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*_generators)[</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T).name()]<sp/>=<sp/>This::_Generate&lt;T&gt;;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Produce<sp/>a<sp/>boost::python::object<sp/>for<sp/>the<sp/>correct<sp/>derived<sp/>type<sp/>of<sp/>\a<sp/>n.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>Invoke(<ref refid="class_tf_notice" kindref="compound">TfNotice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>boost::python::object<sp/>_Generate(<ref refid="class_tf_notice" kindref="compound">TfNotice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Python<sp/>locking<sp/>is<sp/>left<sp/>to<sp/>the<sp/>caller.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::object(static_cast&lt;T<sp/>const<sp/>&amp;&gt;(n));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>MakeObjectFunc<sp/>_Lookup(<ref refid="class_tf_notice" kindref="compound">TfNotice</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;n);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_static_data" kindref="compound">TfStaticData&lt;std::map&lt;std::string, MakeObjectFunc&gt;</ref><sp/>&gt;<sp/>_generators;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TfPyNoticeWrapperBase<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TfType::PyPolymorphicBase<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~TfPyNoticeWrapperBase();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>boost::python::handle&lt;&gt;<sp/>GetNoticePythonObject()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Notice&gt;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Tf_PyNoticeObjectFinder<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Tf_PyObjectFinderBase<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Tf_PyNoticeObjectFinder()<sp/>{}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>boost::python::object<sp/>Find(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*objPtr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">boost::python;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Notice<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*wrapper<sp/>=<sp/>static_cast&lt;Notice<sp/>const<sp/>*&gt;(objPtr);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wrapper<sp/>?<sp/>object(wrapper-&gt;GetNoticePythonObject())<sp/>:<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>NoticeType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BaseType&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">TfPyNoticeWrapper<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>NoticeType,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>TfPyNoticeWrapperBase<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;TfNotice,<sp/>NoticeType&gt;::value</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>std::is_same&lt;TfNotice,<sp/>NoticeType&gt;::value,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Notice<sp/>type<sp/>must<sp/>be<sp/>derived<sp/>from<sp/>or<sp/>equal<sp/>to<sp/>TfNotice.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;TfNotice,<sp/>BaseType&gt;::value</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>std::is_same&lt;TfNotice,<sp/>BaseType&gt;::value,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseType<sp/>type<sp/>must<sp/>be<sp/>derived<sp/>from<sp/>or<sp/>equal<sp/>to<sp/>TfNotice.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;BaseType,<sp/>NoticeType&gt;::value</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(std::is_same&lt;NoticeType,<sp/>TfNotice&gt;::value</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>std::is_same&lt;BaseType,<sp/>TfNotice&gt;::value),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseType<sp/>type<sp/>must<sp/>be<sp/>a<sp/>base<sp/>of<sp/>notice,<sp/>unless<sp/>both<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;BaseType<sp/>and<sp/>Notice<sp/>type<sp/>are<sp/>equal<sp/>to<sp/>TfNotice.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfPyNoticeWrapper&lt;NoticeType,<sp/>BaseType&gt;<sp/>This;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Notice<sp/>is<sp/>really<sp/>TfNotice,<sp/>then<sp/>this<sp/>is<sp/>the<sp/>root<sp/>of<sp/>the<sp/>hierarchy<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bases<sp/>is<sp/>empty,<sp/>otherwise<sp/>bases<sp/>contains<sp/>the<sp/>base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Bases<sp/>=<sp/>std::conditional_t&lt;std::is_same&lt;NoticeType,<sp/>TfNotice&gt;::value,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::bases&lt;&gt;,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::python::bases&lt;BaseType&gt;&gt;;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::python::class_&lt;NoticeType,<sp/>This,<sp/>Bases&gt;<sp/>ClassType;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ClassType<sp/>Wrap(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;name<sp/>=<sp/>std::string())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>wrappedName<sp/>=<sp/>name;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wrappedName.empty())<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>they<sp/>want<sp/>the<sp/>last<sp/>bit<sp/>of<sp/>a<sp/>qualified<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrappedName<sp/>=<sp/>TfType::Find&lt;NoticeType&gt;().GetTypeName();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__group__tf___string_1gafd1e0eb3f3e4f9ca32e674330f062697" kindref="member">TfStringGetSuffix</ref>(wrappedName,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">).empty())</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wrappedName<sp/>=<sp/><ref refid="group__group__tf___string_1gafd1e0eb3f3e4f9ca32e674330f062697" kindref="member">TfStringGetSuffix</ref>(wrappedName,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_PyNoticeObjectGenerator::Register&lt;NoticeType&gt;();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tf_RegisterPythonObjectFinderInternal</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(TfPyNoticeWrapper),</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Tf_PyNoticeObjectFinder&lt;TfPyNoticeWrapper&gt;);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClassType(wrappedName.c_str(),<sp/>boost::python::no_init)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.def(<ref refid="struct_tf_type_python_class" kindref="compound">TfTypePythonClass</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implement<sp/>the<sp/>base<sp/>class&apos;s<sp/>virtual<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>boost::python::handle&lt;&gt;<sp/>GetNoticePythonObject()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::handle&lt;&gt;(boost::python::borrowed(_self));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arbitrary<sp/>argument<sp/>constructor<sp/>(with<sp/>a<sp/>leading<sp/>PyObject<sp/>*)<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forwards<sp/>to<sp/>the<sp/>base<sp/>Notice<sp/>class&apos;s<sp/>constructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>TfPyNoticeWrapper(PyObject<sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>Args...<sp/>args)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NoticeType(args...)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_self(self)<sp/>{}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*_self;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TF_INSTANTIATE_NOTICE_WRAPPER(T,<sp/>Base)<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor">TF_REGISTRY_FUNCTION(TfType)<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor">{<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>TfType::Define&lt;<sp/>TfPyNoticeWrapper&lt;T,<sp/>Base&gt;,<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TfType::Bases&lt;Base&gt;<sp/>&gt;();<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_PY_NOTICE_WRAPPER_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/pyNoticeWrapper.h"/>
  </compounddef>
</doxygen>
