<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_matfilt_vstruct_conditional_evaluator" kind="class" language="C++" prot="public">
    <compoundname>MatfiltVstructConditionalEvaluator</compoundname>
    <includes refid="matfilt_resolve_vstructs_8h" local="no">matfiltResolveVstructs.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_matfilt_vstruct_conditional_evaluator_1a9c16e39966f4c744ba51e8670c39a349" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_matfilt_vstruct_conditional_evaluator" kindref="compound">MatfiltVstructConditionalEvaluator</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;MatfiltVstructConditionalEvaluator&gt; Ptr</definition>
        <argsstring></argsstring>
        <name>Ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="52" column="1" bodyfile="pxr/imaging/hdPrman/matfiltResolveVstructs.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_matfilt_vstruct_conditional_evaluator_1aef628572f508e9a10099a0c20bd27633" prot="private" static="no" mutable="no">
        <type>MatfiltVstructConditionalEvaluatorImpl *</type>
        <definition>MatfiltVstructConditionalEvaluatorImpl* _impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="75" column="1" bodyfile="pxr/imaging/hdPrman/matfiltResolveVstructs.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_matfilt_vstruct_conditional_evaluator_1ac04dc6a3862210f51fd62f52b5d5cbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~MatfiltVstructConditionalEvaluator</definition>
        <argsstring>()</argsstring>
        <name>~MatfiltVstructConditionalEvaluator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_matfilt_vstruct_conditional_evaluator_1af82528c734f68189e6b603128b142591" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Evaluate</definition>
        <argsstring>(const TfToken &amp;nodeId, const TfToken &amp;nodeInputId, const TfToken &amp;upstreamNodeId, const TfToken &amp;upstreamNodeOutput, const NdrTokenVec &amp;shaderTypePriority, HdMaterialNetworkInterface *networkInterface) const</argsstring>
        <name>Evaluate</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeId</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>nodeInputId</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>upstreamNodeId</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>upstreamNodeOutput</declname>
        </param>
        <param>
          <type>const NdrTokenVec &amp;</type>
          <declname>shaderTypePriority</declname>
        </param>
        <param>
          <type><ref refid="class_hd_material_network_interface" kindref="compound">HdMaterialNetworkInterface</ref> *</type>
          <declname>networkInterface</declname>
        </param>
        <briefdescription>
<para>Runs the conditional actions specified by the parsed inputExpr. </para>
        </briefdescription>
        <detaileddescription>
<para>Because this evaluates the conditional actions (connect, ignore, set constant, copy upstream parameter value), this is sent the context of the current connected nodes as well as the mutable network to directly change. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_matfilt_vstruct_conditional_evaluator_1a9ca2137378abee46ff1600906e82a75a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Ptr</type>
        <definition>static Ptr Parse</definition>
        <argsstring>(const std::string &amp;inputExpr)</argsstring>
        <name>Parse</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inputExpr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="56" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_matfilt_vstruct_conditional_evaluator_1a7cf4b56ad76ac51646e830f58dd423a5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MatfiltVstructConditionalEvaluator</definition>
        <argsstring>()=default</argsstring>
        <name>MatfiltVstructConditionalEvaluator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parses and evaluates a single expression of &quot;virtual struct conditional
grammar&quot;. </para>
    </briefdescription>
    <detaileddescription>
<para>This is used internally by MatfiltResolveVstructs but is available to facilitate unit testing. </para>
    </detaileddescription>
    <location file="pxr/imaging/hdPrman/matfiltResolveVstructs.h" line="50" column="1" bodyfile="pxr/imaging/hdPrman/matfiltResolveVstructs.h" bodystart="49" bodyend="76"/>
    <listofallmembers>
      <member refid="class_matfilt_vstruct_conditional_evaluator_1aef628572f508e9a10099a0c20bd27633" prot="private" virt="non-virtual"><scope>MatfiltVstructConditionalEvaluator</scope><name>_impl</name></member>
      <member refid="class_matfilt_vstruct_conditional_evaluator_1af82528c734f68189e6b603128b142591" prot="public" virt="non-virtual"><scope>MatfiltVstructConditionalEvaluator</scope><name>Evaluate</name></member>
      <member refid="class_matfilt_vstruct_conditional_evaluator_1a7cf4b56ad76ac51646e830f58dd423a5" prot="private" virt="non-virtual"><scope>MatfiltVstructConditionalEvaluator</scope><name>MatfiltVstructConditionalEvaluator</name></member>
      <member refid="class_matfilt_vstruct_conditional_evaluator_1a9ca2137378abee46ff1600906e82a75a" prot="public" virt="non-virtual"><scope>MatfiltVstructConditionalEvaluator</scope><name>Parse</name></member>
      <member refid="class_matfilt_vstruct_conditional_evaluator_1a9c16e39966f4c744ba51e8670c39a349" prot="public" virt="non-virtual"><scope>MatfiltVstructConditionalEvaluator</scope><name>Ptr</name></member>
      <member refid="class_matfilt_vstruct_conditional_evaluator_1ac04dc6a3862210f51fd62f52b5d5cbcd" prot="public" virt="non-virtual"><scope>MatfiltVstructConditionalEvaluator</scope><name>~MatfiltVstructConditionalEvaluator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
