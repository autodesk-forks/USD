<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_renderer_plugin_registry" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdRendererPluginRegistry</compoundname>
    <basecompoundref refid="class_hf_plugin_registry" prot="public" virt="non-virtual">HfPluginRegistry</basecompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_hd_renderer_plugin_registry_1ad83e06d363b3a79124dd8368000db009" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TfSingleton&lt; HdRendererPluginRegistry &gt;</definition>
        <argsstring></argsstring>
        <name>TfSingleton&lt; HdRendererPluginRegistry &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="90" column="1" bodyfile="pxr/imaging/hd/rendererPluginRegistry.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1a47611fad6cd4d9461deea2963dcc4a29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdRendererPluginRegistry &amp;</type>
        <definition>static HD_API HdRendererPluginRegistry&amp; GetInstance</definition>
        <argsstring>()</argsstring>
        <name>GetInstance</name>
        <briefdescription>
<para>Returns the singleton registry for <computeroutput><ref refid="class_hd_renderer_plugin" kindref="compound">HdRendererPlugin</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1a9a35e98db745020b8b860c67a5c2bb64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Bases</declname>
            <defname>Bases</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Define</definition>
        <argsstring>()</argsstring>
        <name>Define</name>
        <briefdescription>
<para>Entry point for defining an <ref refid="class_hd_renderer_plugin" kindref="compound">HdRendererPlugin</ref> plugin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="53" column="1" bodyfile="pxr/imaging/hd/rendererPluginRegistry.h" bodystart="111" bodyend="114"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1aa57f34261b89b702f4acfdb4568064cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>HD_API TfToken GetDefaultPluginId</definition>
        <argsstring>(bool gpuEnabled=true)</argsstring>
        <name>GetDefaultPluginId</name>
        <param>
          <type>bool</type>
          <declname>gpuEnabled</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the id of plugin to use as the default. </para>
        </briefdescription>
        <detaileddescription>
<para>To ensure an appropriate default is found, the <computeroutput>gpuEnabled</computeroutput> parameter will be used to indicate if the GPU will be available when making the determination. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1a8a47996562634aabc3203b020e63ccfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_renderer_plugin" kindref="compound">HdRendererPlugin</ref> *</type>
        <definition>HD_API HdRendererPlugin* GetRendererPlugin</definition>
        <argsstring>(const TfToken &amp;pluginId)</argsstring>
        <name>GetRendererPlugin</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>pluginId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000142"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetOrCreateRendererPlugin instead.</para>
</xrefdescription></xrefsect></para>
<para>Returns the renderer plugin for the given id or null if not found. The reference count on the returned delegate is incremented. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1ac9b6f1fe1bb12a2897a60188004dd555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_renderer_plugin_handle" kindref="compound">HdRendererPluginHandle</ref></type>
        <definition>HD_API HdRendererPluginHandle GetOrCreateRendererPlugin</definition>
        <argsstring>(const TfToken &amp;pluginId)</argsstring>
        <name>GetOrCreateRendererPlugin</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>pluginId</declname>
        </param>
        <briefdescription>
<para>Returns the renderer plugin for the given id or a null handle if not found. </para>
        </briefdescription>
        <detaileddescription>
<para>The plugin is wrapped in a handle that automatically increments and decrements the reference count and also stores the plugin id. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1affcf23ff4ba2944ae9641908eb07bc6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_plugin_render_delegate_unique_handle" kindref="compound">HdPluginRenderDelegateUniqueHandle</ref></type>
        <definition>HD_API HdPluginRenderDelegateUniqueHandle CreateRenderDelegate</definition>
        <argsstring>(const TfToken &amp;pluginId, const HdRenderSettingsMap &amp;settingsMap={})</argsstring>
        <name>CreateRenderDelegate</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>pluginId</declname>
        </param>
        <param>
          <type>const HdRenderSettingsMap &amp;</type>
          <declname>settingsMap</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Returns a render delegate created by the plugin with the given name if the plugin is supported using given initial settings. </para>
        </briefdescription>
        <detaileddescription>
<para>The render delegate is wrapped in a movable handle that keeps the plugin alive until the render delegate is destroyed by dropping the handle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="90" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1a05a9e731d9115d7593c3ad1e792d863d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdRendererPluginRegistry</definition>
        <argsstring>()</argsstring>
        <name>HdRendererPluginRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1ab98449069a38dc6e222e88c692c7b188" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~HdRendererPluginRegistry</definition>
        <argsstring>() override</argsstring>
        <name>~HdRendererPluginRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1a2c5d9b8c0ad4ba75ba0b17b48b0d62a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdRendererPluginRegistry</definition>
        <argsstring>(const HdRendererPluginRegistry &amp;)=delete</argsstring>
        <name>HdRendererPluginRegistry</name>
        <param>
          <type>const HdRendererPluginRegistry &amp;</type>
        </param>
        <briefdescription>
<para>This class is not intended to be copied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_renderer_plugin_registry_1a72bae111d4d74156a4c3372b92917021" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdRendererPluginRegistry &amp;</type>
        <definition>HdRendererPluginRegistry&amp; operator=</definition>
        <argsstring>(const HdRendererPluginRegistry &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const HdRendererPluginRegistry &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2582">
        <label>HfPluginRegistry</label>
        <link refid="class_hf_plugin_registry"/>
      </node>
      <node id="2581">
        <label>HdRendererPluginRegistry</label>
        <childnode refid="2582" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2584">
        <label>HfPluginRegistry</label>
        <link refid="class_hf_plugin_registry"/>
      </node>
      <node id="2583">
        <label>HdRendererPluginRegistry</label>
        <childnode refid="2584" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/rendererPluginRegistry.h" line="41" column="1" bodyfile="pxr/imaging/hd/rendererPluginRegistry.h" bodystart="40" bodyend="107"/>
    <listofallmembers>
      <member refid="class_hf_plugin_registry_1acd25c36bd332e8efd2780276bc8e5f96" prot="protected" virt="virtual"><scope>HdRendererPluginRegistry</scope><name>_CollectAdditionalMetadata</name></member>
      <member refid="class_hf_plugin_registry_1a575a9dfe97fd1136df95cdcb5796b106" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>AddPluginReference</name></member>
      <member refid="class_hd_renderer_plugin_registry_1affcf23ff4ba2944ae9641908eb07bc6e" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>CreateRenderDelegate</name></member>
      <member refid="class_hd_renderer_plugin_registry_1a9a35e98db745020b8b860c67a5c2bb64" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>Define</name></member>
      <member refid="class_hd_renderer_plugin_registry_1aa57f34261b89b702f4acfdb4568064cb" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetDefaultPluginId</name></member>
      <member refid="class_hd_renderer_plugin_registry_1a47611fad6cd4d9461deea2963dcc4a29" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetInstance</name></member>
      <member refid="class_hd_renderer_plugin_registry_1ac9b6f1fe1bb12a2897a60188004dd555" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetOrCreateRendererPlugin</name></member>
      <member refid="class_hf_plugin_registry_1adc57c0b7f2c83f138e6e59113b90a87e" prot="protected" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetPlugin</name></member>
      <member refid="class_hf_plugin_registry_1aa769b020f0f9e34c4bec190456645db4" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetPluginDesc</name></member>
      <member refid="class_hf_plugin_registry_1a9485c432e6f61ffdc0663b700bf94844" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetPluginDescs</name></member>
      <member refid="class_hf_plugin_registry_1affbd654d94df3e82ad404e1314787e02" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetPluginId</name></member>
      <member refid="class_hd_renderer_plugin_registry_1a8a47996562634aabc3203b020e63ccfd" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>GetRendererPlugin</name></member>
      <member refid="class_hd_renderer_plugin_registry_1a05a9e731d9115d7593c3ad1e792d863d" prot="private" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>HdRendererPluginRegistry</name></member>
      <member refid="class_hd_renderer_plugin_registry_1a2c5d9b8c0ad4ba75ba0b17b48b0d62a3" prot="private" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>HdRendererPluginRegistry</name></member>
      <member refid="class_hf_plugin_registry_1a04183e446211ba6400466634b87fe6f0" prot="protected" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>HfPluginRegistry</name></member>
      <member refid="class_hf_plugin_registry_1a926c8e66084a2838c1ccc9729341a1c6" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>IsRegisteredPlugin</name></member>
      <member refid="class_hd_renderer_plugin_registry_1a72bae111d4d74156a4c3372b92917021" prot="private" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>operator=</name></member>
      <member refid="class_hf_plugin_registry_1a37c659eb25f556f9d3ccf5bea3fd885e" prot="public" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>ReleasePlugin</name></member>
      <member refid="class_hd_renderer_plugin_registry_1ad83e06d363b3a79124dd8368000db009" prot="private" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>TfSingleton&lt; HdRendererPluginRegistry &gt;</name></member>
      <member refid="class_hd_renderer_plugin_registry_1ab98449069a38dc6e222e88c692c7b188" prot="private" virt="non-virtual"><scope>HdRendererPluginRegistry</scope><name>~HdRendererPluginRegistry</name></member>
      <member refid="class_hf_plugin_registry_1ada2cb686c326cb80eae23a432e810a4c" prot="protected" virt="virtual"><scope>HdRendererPluginRegistry</scope><name>~HfPluginRegistry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
