<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_imaging_g_l_engine" kind="class" language="C++" prot="public">
    <compoundname>UsdImagingGLEngine</compoundname>
    <includes refid="usd_imaging_2usd_imaging_g_l_2engine_8h" local="no">engine.h</includes>
    <innerclass refid="struct_usd_imaging_g_l_engine_1_1_parameters" prot="public">UsdImagingGLEngine::Parameters</innerclass>
      <sectiondef kind="user-defined">
      <header>Construction</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a5ffd865783cce5facc73e042f323cca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API</type>
        <definition>USDIMAGINGGL_API UsdImagingGLEngine</definition>
        <argsstring>(const Parameters &amp;params)</argsstring>
        <name>UsdImagingGLEngine</name>
        <param>
          <type>const <ref refid="struct_usd_imaging_g_l_engine_1_1_parameters" kindref="compound">Parameters</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a733898309921f2ab6e323d4b907240fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API</type>
        <definition>USDIMAGINGGL_API UsdImagingGLEngine</definition>
        <argsstring>(const HdDriver &amp;driver=HdDriver(), const TfToken &amp;rendererPluginId=TfToken(), bool gpuEnabled=true)</argsstring>
        <name>UsdImagingGLEngine</name>
        <param>
          <type>const <ref refid="class_hd_driver" kindref="compound">HdDriver</ref> &amp;</type>
          <declname>driver</declname>
          <defval><ref refid="class_hd_driver" kindref="compound">HdDriver</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>rendererPluginId</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>gpuEnabled</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>An <ref refid="class_hd_driver" kindref="compound">HdDriver</ref>, containing the <ref refid="class_hgi" kindref="compound">Hgi</ref> of your choice, can be optionally passed in during construction. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be helpful if you application creates multiple <ref refid="class_usd_imaging_g_l_engine" kindref="compound">UsdImagingGLEngine</ref> that wish to use the same <ref refid="class_hd_driver" kindref="compound">HdDriver</ref> / <ref refid="class_hgi" kindref="compound">Hgi</ref>. The <computeroutput>rendererPluginId</computeroutput> argument indicates the renderer plugin that Hyrda should use. If the empty token is passed in, a default renderer plugin will be chosen depending on the value of <computeroutput>gpuEnabled</computeroutput>. The <computeroutput>gpuEnabled</computeroutput> argument determines if this instance will allow Hydra to use the GPU to produce images. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aa156b8fe85f087ecda259fbb481fa62e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API</type>
        <definition>USDIMAGINGGL_API UsdImagingGLEngine</definition>
        <argsstring>(const SdfPath &amp;rootPath, const SdfPathVector &amp;excludedPaths, const SdfPathVector &amp;invisedPaths=SdfPathVector(), const SdfPath &amp;sceneDelegateID=SdfPath::AbsoluteRootPath(), const HdDriver &amp;driver=HdDriver(), const TfToken &amp;rendererPluginId=TfToken(), bool gpuEnabled=true, bool displayUnloadedPrimsWithBounds=false)</argsstring>
        <name>UsdImagingGLEngine</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>rootPath</declname>
        </param>
        <param>
          <type>const SdfPathVector &amp;</type>
          <declname>excludedPaths</declname>
        </param>
        <param>
          <type>const SdfPathVector &amp;</type>
          <declname>invisedPaths</declname>
          <defval>SdfPathVector()</defval>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>sceneDelegateID</declname>
          <defval><ref refid="class_sdf_path_1a9e77b565c10268c2b55f92559f621606" kindref="member">SdfPath::AbsoluteRootPath</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_hd_driver" kindref="compound">HdDriver</ref> &amp;</type>
          <declname>driver</declname>
          <defval><ref refid="class_hd_driver" kindref="compound">HdDriver</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>rendererPluginId</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>gpuEnabled</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>displayUnloadedPrimsWithBounds</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af0ba4e4f5c06fb4bda0777cc57e29bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdImagingGLEngine</definition>
        <argsstring>(const UsdImagingGLEngine &amp;)=delete</argsstring>
        <name>UsdImagingGLEngine</name>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_engine" kindref="compound">UsdImagingGLEngine</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a88de15c9279f17e7daa62677e778ea84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_imaging_g_l_engine" kindref="compound">UsdImagingGLEngine</ref> &amp;</type>
        <definition>UsdImagingGLEngine&amp; operator=</definition>
        <argsstring>(const UsdImagingGLEngine &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_engine" kindref="compound">UsdImagingGLEngine</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aad106f37ee8f95345ea8e1281565bda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API</type>
        <definition>USDIMAGINGGL_API ~UsdImagingGLEngine</definition>
        <argsstring>()</argsstring>
        <name>~UsdImagingGLEngine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="158" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Rendering</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a5233c62e29e09cc8c2d905041d012e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void PrepareBatch</definition>
        <argsstring>(const UsdPrim &amp;root, const UsdImagingGLRenderParams &amp;params)</argsstring>
        <name>PrepareBatch</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Support for batched drawing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a51791fd3d13624f9256df712f66424c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void RenderBatch</definition>
        <argsstring>(const SdfPathVector &amp;paths, const UsdImagingGLRenderParams &amp;params)</argsstring>
        <name>RenderBatch</name>
        <param>
          <type>const SdfPathVector &amp;</type>
          <declname>paths</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3843bdae03f5eca87f82f1d9a99ebecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void Render</definition>
        <argsstring>(const UsdPrim &amp;root, const UsdImagingGLRenderParams &amp;params)</argsstring>
        <name>Render</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Entry point for kicking off a render. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a922e371c34488e2f4c157ce83744a4d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool IsConverged</definition>
        <argsstring>() const</argsstring>
        <name>IsConverged</name>
        <briefdescription>
<para>Returns true if the resulting image is fully converged. </para>
        </briefdescription>
        <detaileddescription>
<para>(otherwise, caller may need to call <ref refid="class_usd_imaging_g_l_engine_1a3843bdae03f5eca87f82f1d9a99ebecf" kindref="member">Render()</ref> again to refine the result) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="183" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Root Transform and Visibility</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af7c1bbd2dacbc5781581b51cd940dfa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetRootTransform</definition>
        <argsstring>(GfMatrix4d const &amp;xf)</argsstring>
        <name>SetRootTransform</name>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>xf</declname>
        </param>
        <briefdescription>
<para>Sets the root transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a53e51a10749793818c131ad1e58c02a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetRootVisibility</definition>
        <argsstring>(bool isVisible)</argsstring>
        <name>SetRootVisibility</name>
        <param>
          <type>bool</type>
          <declname>isVisible</declname>
        </param>
        <briefdescription>
<para>Sets the root visibility. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="198" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Camera State</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a522a7d6bf32e345461c45f2fce9fd449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetCameraPath</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>SetCameraPath</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Scene camera API Set the scene camera path to use for rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aece4577599f459b64188107591479850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetFraming</definition>
        <argsstring>(CameraUtilFraming const &amp;framing)</argsstring>
        <name>SetFraming</name>
        <param>
          <type><ref refid="class_camera_util_framing" kindref="compound">CameraUtilFraming</ref> const &amp;</type>
          <declname>framing</declname>
        </param>
        <briefdescription>
<para>Determines how the filmback of the camera is mapped into the pixels of the render buffer and what pixels of the render buffer will be rendered into. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1abf03c825eda08a274591fb8416350edd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetOverrideWindowPolicy</definition>
        <argsstring>(const std::optional&lt; CameraUtilConformWindowPolicy &gt; &amp;policy)</argsstring>
        <name>SetOverrideWindowPolicy</name>
        <param>
          <type>const std::optional&lt; CameraUtilConformWindowPolicy &gt; &amp;</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Specifies whether to force a window policy when conforming the frustum of the camera to match the display window of the camera framing. </para>
        </briefdescription>
        <detaileddescription>
<para>If set to {false, ...}, the window policy of the specified camera will be used.</para>
<para>Note: std::pair&lt;bool, ...&gt; is used instead of std::optional&lt;...&gt; because the latter is only available in C++17 or later. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a05de1c370b46bb7442c81ac8b1ec1df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetRenderBufferSize</definition>
        <argsstring>(GfVec2i const &amp;size)</argsstring>
        <name>SetRenderBufferSize</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Set the size of the render buffers baking the AOVs. </para>
        </briefdescription>
        <detaileddescription>
<para>GUI applications should set this to the size of the window. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="235" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a24e2acc7c9fa4d3db29d3b09f537359d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetRenderViewport</definition>
        <argsstring>(GfVec4d const &amp;viewport)</argsstring>
        <name>SetRenderViewport</name>
        <param>
          <type><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
<para>Set the viewport to use for rendering as (x,y,w,h), where (x,y) represents the lower left corner of the viewport rectangle, and (w,h) is the width and height of the viewport in pixels. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000149"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use SetFraming and SetRenderBufferSize instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af2166a0410ebd669dcb3a30a61a79ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetWindowPolicy</definition>
        <argsstring>(CameraUtilConformWindowPolicy policy)</argsstring>
        <name>SetWindowPolicy</name>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <briefdescription>
<para>Set the window policy to use. </para>
        </briefdescription>
        <detaileddescription>
<para>XXX: This is currently used for scene cameras set via SetCameraPath. See comment in SetCameraState for the free cam. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a942fb8caab2eae27f02a8176947e0485" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetCameraState</definition>
        <argsstring>(const GfMatrix4d &amp;viewMatrix, const GfMatrix4d &amp;projectionMatrix)</argsstring>
        <name>SetCameraState</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>viewMatrix</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>projectionMatrix</declname>
        </param>
        <briefdescription>
<para>Free camera API Set camera framing state directly (without pointing to a camera on the USD stage). </para>
        </briefdescription>
        <detaileddescription>
<para>The projection matrix is expected to be pre-adjusted for the window policy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="256" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Light State</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3c821b6dec857d443f61eec349750719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetLightingState</definition>
        <argsstring>(GlfSimpleLightingContextPtr const &amp;src)</argsstring>
        <name>SetLightingState</name>
        <param>
          <type>GlfSimpleLightingContextPtr const &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Copy lighting state from another lighting context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a68904af8d4db720173f4486f703e400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetLightingState</definition>
        <argsstring>(GlfSimpleLightVector const &amp;lights, GlfSimpleMaterial const &amp;material, GfVec4f const &amp;sceneAmbient)</argsstring>
        <name>SetLightingState</name>
        <param>
          <type>GlfSimpleLightVector const &amp;</type>
          <declname>lights</declname>
        </param>
        <param>
          <type>GlfSimpleMaterial const &amp;</type>
          <declname>material</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>sceneAmbient</declname>
        </param>
        <briefdescription>
<para>Set lighting state Derived classes should ensure that passing an empty lights vector disables lighting. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lights</parametername>
</parameternamelist>
<parameterdescription>
<para>is the set of lights to use, or empty to disable lighting. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="275" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Selection Highlighting</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ad17bbc907558a4d4adcacc3d9e7f5ce4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetSelected</definition>
        <argsstring>(SdfPathVector const &amp;paths)</argsstring>
        <name>SetSelected</name>
        <param>
          <type>SdfPathVector const &amp;</type>
          <declname>paths</declname>
        </param>
        <briefdescription>
<para>Sets (replaces) the list of prim paths that should be included in selection highlighting. </para>
        </briefdescription>
        <detaileddescription>
<para>These paths may include root paths which will be expanded internally. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1acbc3449d86288039c25f443593867b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void ClearSelected</definition>
        <argsstring>()</argsstring>
        <name>ClearSelected</name>
        <briefdescription>
<para>Clear the list of prim paths that should be included in selection highlighting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af6dfef1132fd0c1fbfee2058a1cc39d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void AddSelected</definition>
        <argsstring>(SdfPath const &amp;path, int instanceIndex)</argsstring>
        <name>AddSelected</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>int</type>
          <declname>instanceIndex</declname>
        </param>
        <briefdescription>
<para>Add a path with instanceIndex to the list of prim paths that should be included in selection highlighting. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_imaging_delegate_1a0ffbf92f0682a86fb1acdd1d633d7029" kindref="member">UsdImagingDelegate::ALL_INSTANCES</ref> can be used for highlighting all instances if path is an instancer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a0033477b55a7e8565aea6987460e7e47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetSelectionColor</definition>
        <argsstring>(GfVec4f const &amp;color)</argsstring>
        <name>SetSelectionColor</name>
        <param>
          <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para>Sets the selection highlighting color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="305" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Picking</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af64d085b6430eaf399abe7364ac2d992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool TestIntersection</definition>
        <argsstring>(const GfMatrix4d &amp;viewMatrix, const GfMatrix4d &amp;projectionMatrix, const UsdPrim &amp;root, const UsdImagingGLRenderParams &amp;params, GfVec3d *outHitPoint, GfVec3d *outHitNormal, SdfPath *outHitPrimPath=NULL, SdfPath *outHitInstancerPath=NULL, int *outHitInstanceIndex=NULL, HdInstancerContext *outInstancerContext=NULL)</argsstring>
        <name>TestIntersection</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>viewMatrix</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>projectionMatrix</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> *</type>
          <declname>outHitPoint</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> *</type>
          <declname>outHitNormal</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>outHitPrimPath</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>outHitInstancerPath</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int *</type>
          <declname>outHitInstanceIndex</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>HdInstancerContext *</type>
          <declname>outInstancerContext</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Finds closest point of intersection with a frustum by rendering. </para>
        </briefdescription>
        <detaileddescription>
<para>This method uses a PickRender and a customized depth buffer to find an approximate point of intersection by rendering. This is less accurate than implicit methods or rendering with GL_SELECT, but leverages any data already cached in the renderer.</para>
<para>Returns whether a hit occurred and if so, <computeroutput>outHitPoint</computeroutput> will contain the intersection point in world space (i.e. <computeroutput>projectionMatrix</computeroutput> and <computeroutput>viewMatrix</computeroutput> factored back out of the result), and <computeroutput>outHitNormal</computeroutput> will contain the world space normal at that point.</para>
<para><computeroutput>outHitPrimPath</computeroutput> will point to the gprim selected by the pick. <computeroutput>outHitInstancerPath</computeroutput> will point to the point instancer (if applicable) of that gprim. For nested instancing, outHitInstancerPath points to the closest instancer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="332" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a25b2431672efe03fa0797f38a837e2aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool DecodeIntersection</definition>
        <argsstring>(unsigned char const primIdColor[4], unsigned char const instanceIdColor[4], SdfPath *outHitPrimPath=NULL, SdfPath *outHitInstancerPath=NULL, int *outHitInstanceIndex=NULL, HdInstancerContext *outInstancerContext=NULL)</argsstring>
        <name>DecodeIntersection</name>
        <param>
          <type>unsigned char const</type>
          <declname>primIdColor</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>unsigned char const</type>
          <declname>instanceIdColor</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>outHitPrimPath</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>outHitInstancerPath</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>int *</type>
          <declname>outHitInstanceIndex</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>HdInstancerContext *</type>
          <declname>outInstancerContext</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Decodes a pick result given hydra prim ID/instance ID (like you&apos;d get from an ID render). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="347" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Renderer Plugin Management</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1afdaa9fd0f4696a207b05e8ae264f4f2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool GetGPUEnabled</definition>
        <argsstring>() const</argsstring>
        <name>GetGPUEnabled</name>
        <briefdescription>
<para>Return if the GPU is enabled and can be used for any rendering tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ab58fba33bd7fe93e32d6541ca71523db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDIMAGINGGL_API TfToken GetCurrentRendererId</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentRendererId</name>
        <briefdescription>
<para>Return the id of the currently used renderer plugin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a9db808a673876e62a13301c7c81a6f4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool SetRendererPlugin</definition>
        <argsstring>(TfToken const &amp;id)</argsstring>
        <name>SetRendererPlugin</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the current render-graph delegate to <computeroutput>id</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>the plugin will be loaded if it&apos;s not yet. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a30598ab9af47dbe166646188e112729e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>static USDIMAGINGGL_API TfTokenVector GetRendererPlugins</definition>
        <argsstring>()</argsstring>
        <name>GetRendererPlugins</name>
        <briefdescription>
<para>Return the vector of available render-graph delegate plugins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aa4b35d47826aa4a2ac223388630dbc04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API std::string</type>
        <definition>static USDIMAGINGGL_API std::string GetRendererDisplayName</definition>
        <argsstring>(TfToken const &amp;id)</argsstring>
        <name>GetRendererDisplayName</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Return the user-friendly description of a renderer plugin. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="368" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>AOVs</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a7753308db70920ef0fe07f9a73d1369b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USDIMAGINGGL_API TfTokenVector GetRendererAovs</definition>
        <argsstring>() const</argsstring>
        <name>GetRendererAovs</name>
        <briefdescription>
<para>Return the vector of available renderer AOV settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a05e60b5831357a1d87a82a289a6ade59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool SetRendererAov</definition>
        <argsstring>(TfToken const &amp;id)</argsstring>
        <name>SetRendererAov</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the current renderer AOV to <computeroutput>id</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="396" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aa081059e9a617dc2afbfddbce642e694" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API HgiTextureHandle</type>
        <definition>USDIMAGINGGL_API HgiTextureHandle GetAovTexture</definition>
        <argsstring>(TfToken const &amp;name) const</argsstring>
        <name>GetAovTexture</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns an AOV texture handle for the given token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a67e1082a2077d9c10a0061b49b1934d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_hd_render_buffer" kindref="compound">HdRenderBuffer</ref> *</type>
        <definition>USDIMAGINGGL_API HdRenderBuffer* GetAovRenderBuffer</definition>
        <argsstring>(TfToken const &amp;name) const</argsstring>
        <name>GetAovRenderBuffer</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the AOV render buffer for the given token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="404" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Render Settings (Legacy)</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aae87d137a00159a7dc424d2c5c338838" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API UsdImagingGLRendererSettingsList</type>
        <definition>USDIMAGINGGL_API UsdImagingGLRendererSettingsList GetRendererSettingsList</definition>
        <argsstring>() const</argsstring>
        <name>GetRendererSettingsList</name>
        <briefdescription>
<para>Returns the list of renderer settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a39af113ab0f8b45bfc75945ecc7f3420" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>USDIMAGINGGL_API VtValue GetRendererSetting</definition>
        <argsstring>(TfToken const &amp;id) const</argsstring>
        <name>GetRendererSetting</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets a renderer setting&apos;s current value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aab362dc6f0c397bb11c174c795b0513d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetRendererSetting</definition>
        <argsstring>(TfToken const &amp;id, VtValue const &amp;value)</argsstring>
        <name>SetRendererSetting</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets a renderer setting&apos;s value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="421" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Render Settings (Scene description driven)</header>
      <description><para><simplesect kind="note"><para>Support is WIP. </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af8a265d81387bae8422cf8aa63efdf6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetActiveRenderSettingsPrimPath</definition>
        <argsstring>(SdfPath const &amp;)</argsstring>
        <name>SetActiveRenderSettingsPrimPath</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
        </param>
        <briefdescription>
<para>Set active render settings prim to use to drive rendering. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a9eef46c43c31541d95689741c4c57bf9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API SdfPathVector</type>
        <definition>static USDIMAGINGGL_API SdfPathVector GetAvailableRenderSettingsPrimPaths</definition>
        <argsstring>(UsdPrim const &amp;root)</argsstring>
        <name>GetAvailableRenderSettingsPrimPaths</name>
        <param>
          <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> const &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
<para>Utility method to query available render settings prims. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="439" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Presentation</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3c7db6e657e3f3ef95c6cf3c558e5e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetEnablePresentation</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>SetEnablePresentation</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
<para>Enable / disable presenting the render to bound framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para>An application may choose to manage the AOVs that are rendered into itself and skip the engine&apos;s presentation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aacf1f46402a4b0e761f7e4ac07c2daf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetPresentationOutput</definition>
        <argsstring>(TfToken const &amp;api, VtValue const &amp;framebuffer)</argsstring>
        <name>SetPresentationOutput</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>api</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>framebuffer</declname>
        </param>
        <briefdescription>
<para>The destination API (e.g., OpenGL, see hgiInterop for details) and framebuffer that the AOVs are presented into. </para>
        </briefdescription>
        <detaileddescription>
<para>The framebuffer is a <ref refid="class_vt_value" kindref="compound">VtValue</ref> that encoding a framebuffer in a destination API specific way. E.g., a uint32_t (aka GLuint) for framebuffer object for OpenGL. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="460" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Renderer Command API</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ad143fa1026826d63bd33749a65cf8249" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API HdCommandDescriptors</type>
        <definition>USDIMAGINGGL_API HdCommandDescriptors GetRendererCommandDescriptors</definition>
        <argsstring>() const</argsstring>
        <name>GetRendererCommandDescriptors</name>
        <briefdescription>
<para>Return command deescriptors for commands supported by the active render delegate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a9cd702128f75644d122e1b090b831e6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool InvokeRendererCommand</definition>
        <argsstring>(const TfToken &amp;command, const HdCommandArgs &amp;args=HdCommandArgs()) const</argsstring>
        <name>InvokeRendererCommand</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>command</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_dictionary" kindref="compound">HdCommandArgs</ref> &amp;</type>
          <declname>args</declname>
          <defval><ref refid="class_vt_dictionary" kindref="compound">HdCommandArgs</ref>()</defval>
        </param>
        <briefdescription>
<para>Invokes command on the active render delegate. </para>
        </briefdescription>
        <detaileddescription>
<para>If successful, returns <computeroutput>true</computeroutput>, returns <computeroutput>false</computeroutput> otherwise. Note that the command will not succeeed if it is not among those returned by <ref refid="class_usd_imaging_g_l_engine_1ad143fa1026826d63bd33749a65cf8249" kindref="member">GetRendererCommandDescriptors()</ref> for the same active render delegate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="481" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Control of background rendering threads.</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1aa2b4adb9d82e88ef3a6b6f756ff70bf1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool IsPauseRendererSupported</definition>
        <argsstring>() const</argsstring>
        <name>IsPauseRendererSupported</name>
        <briefdescription>
<para>Query the renderer as to whether it supports pausing and resuming. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a476c14b9fd9fc42ba5001ead64504505" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool PauseRenderer</definition>
        <argsstring>()</argsstring>
        <name>PauseRenderer</name>
        <briefdescription>
<para>Pause the renderer. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if successful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3a6987573a81b942174e1b7cf4d665e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool ResumeRenderer</definition>
        <argsstring>()</argsstring>
        <name>ResumeRenderer</name>
        <briefdescription>
<para>Resume the renderer. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if successful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a8ea6cf764f239896c25736a133ea3cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool IsStopRendererSupported</definition>
        <argsstring>() const</argsstring>
        <name>IsStopRendererSupported</name>
        <briefdescription>
<para>Query the renderer as to whether it supports stopping and restarting. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a01c7e6f733899a3f54716cdfa9fd65fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool StopRenderer</definition>
        <argsstring>()</argsstring>
        <name>StopRenderer</name>
        <briefdescription>
<para>Stop the renderer. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if successful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="514" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a2e91c1163b63ee461ff829d01e4e1d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool RestartRenderer</definition>
        <argsstring>()</argsstring>
        <name>RestartRenderer</name>
        <briefdescription>
<para>Restart the renderer. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns <computeroutput>true</computeroutput> if successful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="520" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Color Correction</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a545df4ed17e92398953b62edfebb6e33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void SetColorCorrectionSettings</definition>
        <argsstring>(TfToken const &amp;ccType, TfToken const &amp;ocioDisplay={}, TfToken const &amp;ocioView={}, TfToken const &amp;ocioColorSpace={}, TfToken const &amp;ocioLook={})</argsstring>
        <name>SetColorCorrectionSettings</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>ccType</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>ocioDisplay</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>ocioView</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>ocioColorSpace</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>ocioLook</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Set <computeroutput>ccType</computeroutput> to one of the HdxColorCorrectionTokens: {disabled, sRGB, openColorIO}. </para>
        </briefdescription>
        <detaileddescription>
<para>If &apos;openColorIO&apos; is used, <computeroutput>ocioDisplay</computeroutput>, <computeroutput>ocioView</computeroutput>, <computeroutput>ocioColorSpace</computeroutput> and <computeroutput>ocioLook</computeroutput> are options the client may supply to configure OCIO. <computeroutput>ocioColorSpace</computeroutput> refers to the input (source) color space. The default value is substituted if an option isn&apos;t specified. You can find the values for these strings inside the profile/config .ocio file. For example:</para>
<para>displays: rec709g22: !&lt;View&gt; {name: studio, colorspace: linear, looks: studio_65_lg2} </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="544" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Render Statistics</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ad13c8f70343c8c42d59dc3587f700304" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>USDIMAGINGGL_API VtDictionary GetRenderStats</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderStats</name>
        <briefdescription>
<para>Returns render statistics. </para>
        </briefdescription>
        <detaileddescription>
<para>The contents of the dictionary will depend on the current render delegate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="568" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>HGI</header>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ac74a743f16fd04461a49aa0e9f990892" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_hgi" kindref="compound">Hgi</ref> *</type>
        <definition>USDIMAGINGGL_API Hgi* GetHgi</definition>
        <argsstring>()</argsstring>
        <name>GetHgi</name>
        <briefdescription>
<para>Returns the HGI interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="580" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_usd_imaging_g_l_engine_1ad2b3e2eadfce39248cb48914c87e3745" prot="protected" static="no">
        <type>std::vector&lt; <ref refid="class_gf_b_box3d" kindref="compound">GfBBox3d</ref> &gt;</type>
        <definition>using BBoxVector =  std::vector&lt;GfBBox3d&gt;</definition>
        <argsstring></argsstring>
        <name>BBoxVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="614" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="614" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1ac00b61d0b6b5f6ce89ae58b7f5d62fa8" prot="protected" static="no" mutable="no">
        <type>HgiUniquePtr</type>
        <definition>HgiUniquePtr _hgi</definition>
        <argsstring></argsstring>
        <name>_hgi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="674" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="674" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1aa0d42125f3494bc6fdf7dbd3dbe46e81" prot="protected" static="no" mutable="no">
        <type><ref refid="class_hd_driver" kindref="compound">HdDriver</ref></type>
        <definition>HdDriver _hgiDriver</definition>
        <argsstring></argsstring>
        <name>_hgiDriver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="676" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a4901c3da275bc906bb9b9880f47a0857" prot="protected" static="no" mutable="no">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue _userFramebuffer</definition>
        <argsstring></argsstring>
        <name>_userFramebuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="678" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a041380e59fefc2144408b8b5d5684c98" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _displayUnloadedPrimsWithBounds</definition>
        <argsstring></argsstring>
        <name>_displayUnloadedPrimsWithBounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="681" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1acb6dd54b3e89dda998b7b4e7868cdac0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _gpuEnabled</definition>
        <argsstring></argsstring>
        <name>_gpuEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="682" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="682" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1af143883f784d57d5bb8d9b42704e0c1d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_hd_plugin_render_delegate_unique_handle" kindref="compound">HdPluginRenderDelegateUniqueHandle</ref></type>
        <definition>HdPluginRenderDelegateUniqueHandle _renderDelegate</definition>
        <argsstring></argsstring>
        <name>_renderDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="683" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="683" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a4d9f238289b02c1229be9de41cdbd2c5" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HdRenderIndex&gt; _renderIndex</definition>
        <argsstring></argsstring>
        <name>_renderIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="684" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="684" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a71a349f17847817bb69d57abbd32d00c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const</type>
        <definition>SdfPath const _sceneDelegateId</definition>
        <argsstring></argsstring>
        <name>_sceneDelegateId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="686" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a7893e5dd0e6384a295cec396f43469d4" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; HdxTaskController &gt;</type>
        <definition>std::unique_ptr&lt;HdxTaskController&gt; _taskController</definition>
        <argsstring></argsstring>
        <name>_taskController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="688" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a6334c60c5e2ead29ff3811e6852817af" prot="protected" static="no" mutable="no">
        <type>HdxSelectionTrackerSharedPtr</type>
        <definition>HdxSelectionTrackerSharedPtr _selTracker</definition>
        <argsstring></argsstring>
        <name>_selTracker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="690" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="690" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1acbb34a041ce0672677dd107c2af96989" prot="protected" static="no" mutable="no">
        <type><ref refid="class_hd_rprim_collection" kindref="compound">HdRprimCollection</ref></type>
        <definition>HdRprimCollection _renderCollection</definition>
        <argsstring></argsstring>
        <name>_renderCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="691" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="691" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1ae4e20d217ccca4b61fba6f7ce1257c07" prot="protected" static="no" mutable="no">
        <type><ref refid="class_hd_rprim_collection" kindref="compound">HdRprimCollection</ref></type>
        <definition>HdRprimCollection _intersectCollection</definition>
        <argsstring></argsstring>
        <name>_intersectCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="692" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1af469928e4e5a872dbdbaf155f6fddfb1" prot="protected" static="no" mutable="no">
        <type>GlfSimpleLightingContextRefPtr</type>
        <definition>GlfSimpleLightingContextRefPtr _lightingContextForOpenGLState</definition>
        <argsstring></argsstring>
        <name>_lightingContextForOpenGLState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="694" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1aeefd8d884f6e2a02094423dbf485c4d7" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GfVec4f _selectionColor</definition>
        <argsstring></argsstring>
        <name>_selectionColor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="697" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1ae55bd6f9978f36f9f059296b402411f1" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _domeLightCameraVisibility</definition>
        <argsstring></argsstring>
        <name>_domeLightCameraVisibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="698" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a864c3ec8599bd4b5893f2690a172f11e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _rootPath</definition>
        <argsstring></argsstring>
        <name>_rootPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="700" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a8d45800e88fe173bbbe1a542e5454062" prot="protected" static="no" mutable="no">
        <type>SdfPathVector</type>
        <definition>SdfPathVector _excludedPrimPaths</definition>
        <argsstring></argsstring>
        <name>_excludedPrimPaths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="701" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a1ffefebda18ac8f41cd9c37fd6c76382" prot="protected" static="no" mutable="no">
        <type>SdfPathVector</type>
        <definition>SdfPathVector _invisedPrimPaths</definition>
        <argsstring></argsstring>
        <name>_invisedPrimPaths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="702" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a3b4e3c274859ea609b56f97eececec05" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isPopulated</definition>
        <argsstring></argsstring>
        <name>_isPopulated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="703" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a33843a59ae11acbb7c65e79068f24457" prot="private" static="no" mutable="no">
        <type>UsdImagingGLEngine_Impl::_AppSceneIndicesSharedPtr</type>
        <definition>UsdImagingGLEngine_Impl::_AppSceneIndicesSharedPtr _appSceneIndices</definition>
        <argsstring></argsstring>
        <name>_appSceneIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="724" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="724" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a4e1e3a700008c3950c1b48bb9b0c1fd4" prot="private" static="no" mutable="no">
        <type>UsdImagingStageSceneIndexRefPtr</type>
        <definition>UsdImagingStageSceneIndexRefPtr _stageSceneIndex</definition>
        <argsstring></argsstring>
        <name>_stageSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="730" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="730" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1aa7e790b96e1d62091eda3f31ed38e335" prot="private" static="no" mutable="no">
        <type>UsdImagingSelectionSceneIndexRefPtr</type>
        <definition>UsdImagingSelectionSceneIndexRefPtr _selectionSceneIndex</definition>
        <argsstring></argsstring>
        <name>_selectionSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="731" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1afa28ea833b622b6b0533d51c2bc207f7" prot="private" static="no" mutable="no">
        <type>UsdImagingRootOverridesSceneIndexRefPtr</type>
        <definition>UsdImagingRootOverridesSceneIndexRefPtr _rootOverridesSceneIndex</definition>
        <argsstring></argsstring>
        <name>_rootOverridesSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="732" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="732" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a5013ff3fd20ac2f7fc3a12e5aa08d3c3" prot="private" static="no" mutable="no">
        <type>HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr</type>
        <definition>HdsiLegacyDisplayStyleOverrideSceneIndexRefPtr _displayStyleSceneIndex</definition>
        <argsstring></argsstring>
        <name>_displayStyleSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="733" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="733" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a48bd317f952d12bab101fe9dc3427730" prot="private" static="no" mutable="no">
        <type>HdsiPrimTypePruningSceneIndexRefPtr</type>
        <definition>HdsiPrimTypePruningSceneIndexRefPtr _materialPruningSceneIndex</definition>
        <argsstring></argsstring>
        <name>_materialPruningSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="734" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="734" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1aebdc3a77233690be4d9c5e494c648234" prot="private" static="no" mutable="no">
        <type>HdsiPrimTypePruningSceneIndexRefPtr</type>
        <definition>HdsiPrimTypePruningSceneIndexRefPtr _lightPruningSceneIndex</definition>
        <argsstring></argsstring>
        <name>_lightPruningSceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="735" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="735" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a1866e67bd80277bb69e46b153cfe9a96" prot="private" static="no" mutable="no">
        <type>HdSceneIndexBaseRefPtr</type>
        <definition>HdSceneIndexBaseRefPtr _sceneIndex</definition>
        <argsstring></argsstring>
        <name>_sceneIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="736" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="736" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1a246942ae5a5664f357da0f8be4e4535d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_usd_imaging_delegate" kindref="compound">UsdImagingDelegate</ref> &gt;</type>
        <definition>std::unique_ptr&lt;UsdImagingDelegate&gt; _sceneDelegate</definition>
        <argsstring></argsstring>
        <name>_sceneDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="738" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="738" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_imaging_g_l_engine_1ad34ba62a0cae45267e51b3ea3e3fd379" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_hd_engine" kindref="compound">HdEngine</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HdEngine&gt; _engine</definition>
        <argsstring></argsstring>
        <name>_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="740" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="740" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a9e07fd6ee84e1af9d312300ef94c836a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>static USDIMAGINGGL_API bool IsColorCorrectionCapable</definition>
        <argsstring>()</argsstring>
        <name>IsColorCorrectionCapable</name>
        <briefdescription>
<para>Returns true if the platform is color correction capable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="555" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1afa24efd020db2b62d852bc332e2579b5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
        <definition>USDIMAGINGGL_API HdRenderIndex* _GetRenderIndex</definition>
        <argsstring>() const</argsstring>
        <name>_GetRenderIndex</name>
        <briefdescription>
<para>Returns the render index of the engine, if any. </para>
        </briefdescription>
        <detaileddescription>
<para>This is only used for whitebox testing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="592" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3e1bf46f495d17c934bd73af96ad164e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _Execute</definition>
        <argsstring>(const UsdImagingGLRenderParams &amp;params, HdTaskSharedPtrVector tasks)</argsstring>
        <name>_Execute</name>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>HdTaskSharedPtrVector</type>
          <declname>tasks</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a49877aa5666da384862b984479aca4bb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>USDIMAGINGGL_API bool _CanPrepare</definition>
        <argsstring>(const UsdPrim &amp;root)</argsstring>
        <name>_CanPrepare</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a202fe011e4e05f0220f2af428747bffb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _PreSetTime</definition>
        <argsstring>(const UsdImagingGLRenderParams &amp;params)</argsstring>
        <name>_PreSetTime</name>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="601" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a36985ae2b780a1c9e557d6929f9be3d9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _PostSetTime</definition>
        <argsstring>(const UsdImagingGLRenderParams &amp;params)</argsstring>
        <name>_PostSetTime</name>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a75dc33205107792e9aef84dd3f11402a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _PrepareRender</definition>
        <argsstring>(const UsdImagingGLRenderParams &amp;params)</argsstring>
        <name>_PrepareRender</name>
        <param>
          <type>const <ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a681696fbf9e0f80b0a38e00de743fd8b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _SetActiveRenderSettingsPrimFromStageMetadata</definition>
        <argsstring>(UsdStageWeakPtr stage)</argsstring>
        <name>_SetActiveRenderSettingsPrimFromStageMetadata</name>
        <param>
          <type>UsdStageWeakPtr</type>
          <declname>stage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="609" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ad69743afd0cd8a3cc26dc16ca9e98512" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _UpdateDomeLightCameraVisibility</definition>
        <argsstring>()</argsstring>
        <name>_UpdateDomeLightCameraVisibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="612" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a55a493697422823c9e23cdf793579831" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _SetBBoxParams</definition>
        <argsstring>(const BBoxVector &amp;bboxes, const GfVec4f &amp;bboxLineColor, float bboxLineDashSize)</argsstring>
        <name>_SetBBoxParams</name>
        <param>
          <type>const BBoxVector &amp;</type>
          <declname>bboxes</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> &amp;</type>
          <declname>bboxLineColor</declname>
        </param>
        <param>
          <type>float</type>
          <declname>bboxLineDashSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="617" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a57d48cbceeebb390ec9771cd3121a748" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _InitializeHgiIfNecessary</definition>
        <argsstring>()</argsstring>
        <name>_InitializeHgiIfNecessary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1afde2aff7916191bee8d3e03716d39d16" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _SetRenderDelegateAndRestoreState</definition>
        <argsstring>(HdPluginRenderDelegateUniqueHandle &amp;&amp;)</argsstring>
        <name>_SetRenderDelegateAndRestoreState</name>
        <param>
          <type><ref refid="class_hd_plugin_render_delegate_unique_handle" kindref="compound">HdPluginRenderDelegateUniqueHandle</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="639" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3ffbfc3078a494af9db900d05ab9538f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>USDIMAGINGGL_API void _SetRenderDelegate</definition>
        <argsstring>(HdPluginRenderDelegateUniqueHandle &amp;&amp;)</argsstring>
        <name>_SetRenderDelegate</name>
        <param>
          <type><ref refid="class_hd_plugin_render_delegate_unique_handle" kindref="compound">HdPluginRenderDelegateUniqueHandle</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a375a8a766f1117f73e541b7a76af3b8e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>USDIMAGINGGL_API SdfPath _ComputeControllerPath</definition>
        <argsstring>(const HdPluginRenderDelegateUniqueHandle &amp;)</argsstring>
        <name>_ComputeControllerPath</name>
        <param>
          <type>const <ref refid="class_hd_plugin_render_delegate_unique_handle" kindref="compound">HdPluginRenderDelegateUniqueHandle</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a4f62005ebe65df07e9f738e01f9b3e27" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_usd_imaging_delegate" kindref="compound">UsdImagingDelegate</ref> *</type>
        <definition>USDIMAGINGGL_API UsdImagingDelegate* _GetSceneDelegate</definition>
        <argsstring>() const</argsstring>
        <name>_GetSceneDelegate</name>
        <briefdescription>
<para>Get a direct pointer to the scene delegate. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000150"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Existing instances of this call will be replaced with new APIs on this class, to support multiplexing between the scene delegate and scene index. This API is scheduled for deletion. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="657" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a05c332a48dd6a20781d20fd6fba6a122" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_hd_engine" kindref="compound">HdEngine</ref> *</type>
        <definition>USDIMAGINGGL_API HdEngine* _GetHdEngine</definition>
        <argsstring>()</argsstring>
        <name>_GetHdEngine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="660" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a3b084b6fe922a8516dc1a5251e8ab3ae" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API HdxTaskController *</type>
        <definition>USDIMAGINGGL_API HdxTaskController* _GetTaskController</definition>
        <argsstring>() const</argsstring>
        <name>_GetTaskController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="663" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a195dace5dadc7de2d5eea53fdc4049d4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API HdSelectionSharedPtr</type>
        <definition>USDIMAGINGGL_API HdSelectionSharedPtr _GetSelection</definition>
        <argsstring>() const</argsstring>
        <name>_GetSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="666" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1acab85a91aac8bc54e1687945eddca4eb" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API bool</type>
        <definition>static USDIMAGINGGL_API bool _UpdateHydraCollection</definition>
        <argsstring>(HdRprimCollection *collection, SdfPathVector const &amp;roots, UsdImagingGLRenderParams const &amp;params)</argsstring>
        <name>_UpdateHydraCollection</name>
        <param>
          <type><ref refid="class_hd_rprim_collection" kindref="compound">HdRprimCollection</ref> *</type>
          <declname>collection</declname>
        </param>
        <param>
          <type>SdfPathVector const &amp;</type>
          <declname>roots</declname>
        </param>
        <param>
          <type><ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> const &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1af4b2c252fa7807bada974826d14f3730" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="struct_hdx_render_task_params" kindref="compound">HdxRenderTaskParams</ref></type>
        <definition>static USDIMAGINGGL_API HdxRenderTaskParams _MakeHydraUsdImagingGLRenderParams</definition>
        <argsstring>(UsdImagingGLRenderParams const &amp;params)</argsstring>
        <name>_MakeHydraUsdImagingGLRenderParams</name>
        <param>
          <type><ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> const &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="629" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a8a15c7086f83e6f889da674c09b769ba" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API void</type>
        <definition>static USDIMAGINGGL_API void _ComputeRenderTags</definition>
        <argsstring>(UsdImagingGLRenderParams const &amp;params, TfTokenVector *renderTags)</argsstring>
        <name>_ComputeRenderTags</name>
        <param>
          <type><ref refid="class_usd_imaging_g_l_render_params" kindref="compound">UsdImagingGLRenderParams</ref> const &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> *</type>
          <declname>renderTags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="632" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a1f416c6b5ba37b6949dff5bacce8ffe2" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDIMAGINGGL_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>static USDIMAGINGGL_API TfToken _GetDefaultRendererPluginId</definition>
        <argsstring>()</argsstring>
        <name>_GetDefaultRendererPluginId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="649" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a532ef30e51b692feb01bd9647c0bf16d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _RegisterApplicationSceneIndices</definition>
        <argsstring>()</argsstring>
        <name>_RegisterApplicationSceneIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a146f2bfa20a25cdb6331eda1d58e5aa1" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdSceneIndexBaseRefPtr</type>
        <definition>static HdSceneIndexBaseRefPtr _AppendSceneGlobalsSceneIndexCallback</definition>
        <argsstring>(const std::string &amp;renderInstanceId, const HdSceneIndexBaseRefPtr &amp;inputScene, const HdContainerDataSourceHandle &amp;inputArgs)</argsstring>
        <name>_AppendSceneGlobalsSceneIndexCallback</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>renderInstanceId</declname>
        </param>
        <param>
          <type>const HdSceneIndexBaseRefPtr &amp;</type>
          <declname>inputScene</declname>
        </param>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>inputArgs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="715" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1a2ab5b0341baa9e6a75d964aa8089c7ec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdSceneIndexBaseRefPtr</type>
        <definition>HdSceneIndexBaseRefPtr _AppendOverridesSceneIndices</definition>
        <argsstring>(const HdSceneIndexBaseRefPtr &amp;inputScene)</argsstring>
        <name>_AppendOverridesSceneIndices</name>
        <param>
          <type>const HdSceneIndexBaseRefPtr &amp;</type>
          <declname>inputScene</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="721" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_imaging_g_l_engine_1ad9f630d7825942421c30f31f9ac18352" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _DestroyHydraObjects</definition>
        <argsstring>()</argsstring>
        <name>_DestroyHydraObjects</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdImagingGL/engine.h" line="726" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_usd_imaging_g_l_engine" kindref="compound">UsdImagingGLEngine</ref> is the main entry point API for rendering USD scenes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="7097">
        <label>VtValue</label>
        <link refid="class_vt_value"/>
      </node>
      <node id="7098">
        <label>SdfPath</label>
        <link refid="class_sdf_path"/>
      </node>
      <node id="7101">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="7099">
        <label>HdRprimCollection</label>
        <link refid="class_hd_rprim_collection"/>
      </node>
      <node id="7100">
        <label>HdDriver</label>
        <link refid="class_hd_driver"/>
        <childnode refid="7097" relation="usage">
          <edgelabel>driver</edgelabel>
        </childnode>
        <childnode refid="7101" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="7095">
        <label>GfVec4f</label>
        <link refid="class_gf_vec4f"/>
      </node>
      <node id="7096">
        <label>HdPluginRenderDelegateUniqueHandle</label>
        <link refid="class_hd_plugin_render_delegate_unique_handle"/>
      </node>
      <node id="7094">
        <label>UsdImagingGLEngine</label>
        <link refid="class_usd_imaging_g_l_engine"/>
        <childnode refid="7095" relation="usage">
          <edgelabel>_selectionColor</edgelabel>
        </childnode>
        <childnode refid="7096" relation="usage">
          <edgelabel>_renderDelegate</edgelabel>
        </childnode>
        <childnode refid="7097" relation="usage">
          <edgelabel>_userFramebuffer</edgelabel>
        </childnode>
        <childnode refid="7098" relation="usage">
          <edgelabel>_sceneDelegateId</edgelabel>
          <edgelabel>_rootPath</edgelabel>
        </childnode>
        <childnode refid="7099" relation="usage">
          <edgelabel>_intersectCollection</edgelabel>
          <edgelabel>_renderCollection</edgelabel>
        </childnode>
        <childnode refid="7100" relation="usage">
          <edgelabel>_hgiDriver</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usdImaging/usdImagingGL/engine.h" line="96" column="1" bodyfile="pxr/usdImaging/usdImagingGL/engine.h" bodystart="95" bodyend="741"/>
    <listofallmembers>
      <member refid="class_usd_imaging_g_l_engine_1a2ab5b0341baa9e6a75d964aa8089c7ec" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_AppendOverridesSceneIndices</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a146f2bfa20a25cdb6331eda1d58e5aa1" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_AppendSceneGlobalsSceneIndexCallback</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a33843a59ae11acbb7c65e79068f24457" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_appSceneIndices</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a49877aa5666da384862b984479aca4bb" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_CanPrepare</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a375a8a766f1117f73e541b7a76af3b8e" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_ComputeControllerPath</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a8a15c7086f83e6f889da674c09b769ba" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_ComputeRenderTags</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad9f630d7825942421c30f31f9ac18352" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_DestroyHydraObjects</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a5013ff3fd20ac2f7fc3a12e5aa08d3c3" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_displayStyleSceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a041380e59fefc2144408b8b5d5684c98" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_displayUnloadedPrimsWithBounds</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ae55bd6f9978f36f9f059296b402411f1" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_domeLightCameraVisibility</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad34ba62a0cae45267e51b3ea3e3fd379" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_engine</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a8d45800e88fe173bbbe1a542e5454062" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_excludedPrimPaths</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3e1bf46f495d17c934bd73af96ad164e" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_Execute</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a1f416c6b5ba37b6949dff5bacce8ffe2" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_GetDefaultRendererPluginId</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a05c332a48dd6a20781d20fd6fba6a122" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_GetHdEngine</name></member>
      <member refid="class_usd_imaging_g_l_engine_1afa24efd020db2b62d852bc332e2579b5" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_GetRenderIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a4f62005ebe65df07e9f738e01f9b3e27" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_GetSceneDelegate</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a195dace5dadc7de2d5eea53fdc4049d4" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_GetSelection</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3b084b6fe922a8516dc1a5251e8ab3ae" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_GetTaskController</name></member>
      <member refid="class_usd_imaging_g_l_engine_1acb6dd54b3e89dda998b7b4e7868cdac0" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_gpuEnabled</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ac00b61d0b6b5f6ce89ae58b7f5d62fa8" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_hgi</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aa0d42125f3494bc6fdf7dbd3dbe46e81" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_hgiDriver</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a57d48cbceeebb390ec9771cd3121a748" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_InitializeHgiIfNecessary</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ae4e20d217ccca4b61fba6f7ce1257c07" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_intersectCollection</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a1ffefebda18ac8f41cd9c37fd6c76382" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_invisedPrimPaths</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3b4e3c274859ea609b56f97eececec05" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_isPopulated</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af469928e4e5a872dbdbaf155f6fddfb1" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_lightingContextForOpenGLState</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aebdc3a77233690be4d9c5e494c648234" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_lightPruningSceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af4b2c252fa7807bada974826d14f3730" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_MakeHydraUsdImagingGLRenderParams</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a48bd317f952d12bab101fe9dc3427730" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_materialPruningSceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a36985ae2b780a1c9e557d6929f9be3d9" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_PostSetTime</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a75dc33205107792e9aef84dd3f11402a" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_PrepareRender</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a202fe011e4e05f0220f2af428747bffb" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_PreSetTime</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a532ef30e51b692feb01bd9647c0bf16d" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_RegisterApplicationSceneIndices</name></member>
      <member refid="class_usd_imaging_g_l_engine_1acbb34a041ce0672677dd107c2af96989" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_renderCollection</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af143883f784d57d5bb8d9b42704e0c1d" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_renderDelegate</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a4d9f238289b02c1229be9de41cdbd2c5" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_renderIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1afa28ea833b622b6b0533d51c2bc207f7" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_rootOverridesSceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a864c3ec8599bd4b5893f2690a172f11e" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_rootPath</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a246942ae5a5664f357da0f8be4e4535d" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_sceneDelegate</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a71a349f17847817bb69d57abbd32d00c" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_sceneDelegateId</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a1866e67bd80277bb69e46b153cfe9a96" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_sceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aeefd8d884f6e2a02094423dbf485c4d7" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_selectionColor</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aa7e790b96e1d62091eda3f31ed38e335" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_selectionSceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a6334c60c5e2ead29ff3811e6852817af" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_selTracker</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a681696fbf9e0f80b0a38e00de743fd8b" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_SetActiveRenderSettingsPrimFromStageMetadata</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a55a493697422823c9e23cdf793579831" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_SetBBoxParams</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3ffbfc3078a494af9db900d05ab9538f" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_SetRenderDelegate</name></member>
      <member refid="class_usd_imaging_g_l_engine_1afde2aff7916191bee8d3e03716d39d16" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_SetRenderDelegateAndRestoreState</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a4e1e3a700008c3950c1b48bb9b0c1fd4" prot="private" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_stageSceneIndex</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a7893e5dd0e6384a295cec396f43469d4" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_taskController</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad69743afd0cd8a3cc26dc16ca9e98512" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_UpdateDomeLightCameraVisibility</name></member>
      <member refid="class_usd_imaging_g_l_engine_1acab85a91aac8bc54e1687945eddca4eb" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_UpdateHydraCollection</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a4901c3da275bc906bb9b9880f47a0857" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>_userFramebuffer</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af6dfef1132fd0c1fbfee2058a1cc39d7" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>AddSelected</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad2b3e2eadfce39248cb48914c87e3745" prot="protected" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>BBoxVector</name></member>
      <member refid="class_usd_imaging_g_l_engine_1acbc3449d86288039c25f443593867b1c" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>ClearSelected</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a25b2431672efe03fa0797f38a837e2aa" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>DecodeIntersection</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a67e1082a2077d9c10a0061b49b1934d5" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetAovRenderBuffer</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aa081059e9a617dc2afbfddbce642e694" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetAovTexture</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a9eef46c43c31541d95689741c4c57bf9" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetAvailableRenderSettingsPrimPaths</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ab58fba33bd7fe93e32d6541ca71523db" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetCurrentRendererId</name></member>
      <member refid="class_usd_imaging_g_l_engine_1afdaa9fd0f4696a207b05e8ae264f4f2e" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetGPUEnabled</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ac74a743f16fd04461a49aa0e9f990892" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetHgi</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a7753308db70920ef0fe07f9a73d1369b" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRendererAovs</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad143fa1026826d63bd33749a65cf8249" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRendererCommandDescriptors</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aa4b35d47826aa4a2ac223388630dbc04" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRendererDisplayName</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a30598ab9af47dbe166646188e112729e" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRendererPlugins</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a39af113ab0f8b45bfc75945ecc7f3420" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRendererSetting</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aae87d137a00159a7dc424d2c5c338838" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRendererSettingsList</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad13c8f70343c8c42d59dc3587f700304" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>GetRenderStats</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a9cd702128f75644d122e1b090b831e6e" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>InvokeRendererCommand</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a9e07fd6ee84e1af9d312300ef94c836a" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>IsColorCorrectionCapable</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a922e371c34488e2f4c157ce83744a4d9" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>IsConverged</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aa2b4adb9d82e88ef3a6b6f756ff70bf1" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>IsPauseRendererSupported</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a8ea6cf764f239896c25736a133ea3cb5" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>IsStopRendererSupported</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a88de15c9279f17e7daa62677e778ea84" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>operator=</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a476c14b9fd9fc42ba5001ead64504505" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>PauseRenderer</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a5233c62e29e09cc8c2d905041d012e9f" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>PrepareBatch</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3843bdae03f5eca87f82f1d9a99ebecf" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>Render</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a51791fd3d13624f9256df712f66424c4" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>RenderBatch</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a2e91c1163b63ee461ff829d01e4e1d79" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>RestartRenderer</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3a6987573a81b942174e1b7cf4d665e9" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>ResumeRenderer</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af8a265d81387bae8422cf8aa63efdf6b" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetActiveRenderSettingsPrimPath</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a522a7d6bf32e345461c45f2fce9fd449" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetCameraPath</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a942fb8caab2eae27f02a8176947e0485" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetCameraState</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a545df4ed17e92398953b62edfebb6e33" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetColorCorrectionSettings</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3c7db6e657e3f3ef95c6cf3c558e5e16" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetEnablePresentation</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aece4577599f459b64188107591479850" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetFraming</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a3c821b6dec857d443f61eec349750719" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetLightingState</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a68904af8d4db720173f4486f703e400c" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetLightingState</name></member>
      <member refid="class_usd_imaging_g_l_engine_1abf03c825eda08a274591fb8416350edd" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetOverrideWindowPolicy</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aacf1f46402a4b0e761f7e4ac07c2daf1" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetPresentationOutput</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a05de1c370b46bb7442c81ac8b1ec1df5" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRenderBufferSize</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a05e60b5831357a1d87a82a289a6ade59" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRendererAov</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a9db808a673876e62a13301c7c81a6f4e" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRendererPlugin</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aab362dc6f0c397bb11c174c795b0513d" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRendererSetting</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a24e2acc7c9fa4d3db29d3b09f537359d" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRenderViewport</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af7c1bbd2dacbc5781581b51cd940dfa7" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRootTransform</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a53e51a10749793818c131ad1e58c02a7" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetRootVisibility</name></member>
      <member refid="class_usd_imaging_g_l_engine_1ad17bbc907558a4d4adcacc3d9e7f5ce4" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetSelected</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a0033477b55a7e8565aea6987460e7e47" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetSelectionColor</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af2166a0410ebd669dcb3a30a61a79ccb" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>SetWindowPolicy</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a01c7e6f733899a3f54716cdfa9fd65fe" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>StopRenderer</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af64d085b6430eaf399abe7364ac2d992" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>TestIntersection</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a5ffd865783cce5facc73e042f323cca1" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>UsdImagingGLEngine</name></member>
      <member refid="class_usd_imaging_g_l_engine_1a733898309921f2ab6e323d4b907240fe" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>UsdImagingGLEngine</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aa156b8fe85f087ecda259fbb481fa62e" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>UsdImagingGLEngine</name></member>
      <member refid="class_usd_imaging_g_l_engine_1af0ba4e4f5c06fb4bda0777cc57e29bc9" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>UsdImagingGLEngine</name></member>
      <member refid="class_usd_imaging_g_l_engine_1aad106f37ee8f95345ea8e1281565bda2" prot="public" virt="non-virtual"><scope>UsdImagingGLEngine</scope><name>~UsdImagingGLEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
