<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_skeleton_query" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelSkeletonQuery</compoundname>
    <includes refid="skeleton_query_8h" local="no">skeletonQuery.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_skel_skeleton_query_1a6c253985fc11e614184779d9d0386586" prot="private" static="no" mutable="no">
        <type>UsdSkel_SkelDefinitionRefPtr</type>
        <definition>UsdSkel_SkelDefinitionRefPtr _definition</definition>
        <argsstring></argsstring>
        <name>_definition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="234" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skeleton_query_1abb6b71162546e63e046bb1324e3b7ca0" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref></type>
        <definition>UsdSkelAnimQuery _animQuery</definition>
        <argsstring></argsstring>
        <name>_animQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="235" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skeleton_query_1acc005069dc0547fe427c778f827162ca" prot="private" static="no" mutable="no">
        <type>UsdSkelAnimMapper</type>
        <definition>UsdSkelAnimMapper _animToSkelMapper</definition>
        <argsstring></argsstring>
        <name>_animToSkelMapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="236" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_skel_skeleton_query_1adb7b0a70687485048fa96371e542cde8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSkel_CacheImpl</definition>
        <argsstring></argsstring>
        <name>UsdSkel_CacheImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="238" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_skel_skeleton_query_1af9b2133a94a8ec1986a02525bc0ff137" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdSkelSkeletonQuery &amp;lhs, const UsdSkelSkeletonQuery &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>Return true if <emphasis>lhs</emphasis> and <emphasis>rhs</emphasis> represent the same <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref>, false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="83" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_skel_skeleton_query_1a97417f135e0d2f4c98c9209f70026967" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdSkelSkeletonQuery &amp;lhs, const UsdSkelSkeletonQuery &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
<para>Return false if <emphasis>lhs</emphasis> and <emphasis>rhs</emphasis> represent the same <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref>, true otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="91" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_skel_skeleton_query_1a06ca3ad48939b7c9bbb590ac911f70aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API friend size_t</type>
        <definition>USDSKEL_API friend size_t hash_value</definition>
        <argsstring>(const UsdSkelSkeletonQuery &amp;query)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref> &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1ab7ca53033309ebe02cbb86296aa4325b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdSkelSkeletonQuery</definition>
        <argsstring>()</argsstring>
        <name>UsdSkelSkeletonQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="73" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Return true if this query is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="76" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Boolean conversion operator. Equivalent to <ref refid="class_usd_skel_skeleton_query_1ac532c4b500b1a85ea22217f2c65a70ed" kindref="member">IsValid()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="79" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1aea829c9b0f665d9cdc39530f465349b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool HasBindPose</definition>
        <argsstring>() const</argsstring>
        <name>HasBindPose</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the size of the array returned by skeleton::GetBindTransformsAttr() matches the number of joints in the skeleton. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a6d4f07b310e38d7503316d6c67fb140f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool HasRestPose</definition>
        <argsstring>() const</argsstring>
        <name>HasRestPose</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the size of the array returned by skeleton::GetRestTransformsAttr() matches the number of joints in the skeleton. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1aad7b30f4a8114c7c5826196ecbd54293" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>USDSKEL_API UsdPrim GetPrim</definition>
        <argsstring>() const</argsstring>
        <name>GetPrim</name>
        <briefdescription>
<para>Returns the underlying Skeleton primitive corresponding to the bound skeleton instance, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1aba46bdbc5cc29686ab2672e57c11eba3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="class_usd_skel_skeleton" kindref="compound">UsdSkelSkeleton</ref> &amp;</type>
        <definition>USDSKEL_API const UsdSkelSkeleton&amp; GetSkeleton</definition>
        <argsstring>() const</argsstring>
        <name>GetSkeleton</name>
        <briefdescription>
<para>Returns the bound skeleton instance, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a4ee24cc71848e87990f3741240d2cd5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref> &amp;</type>
        <definition>USDSKEL_API const UsdSkelAnimQuery&amp; GetAnimQuery</definition>
        <argsstring>() const</argsstring>
        <name>GetAnimQuery</name>
        <briefdescription>
<para>Returns the animation query that provides animation for the bound skeleton instance, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a0da8b34f1a4041f64579cdcc6547a042" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
        <definition>USDSKEL_API const UsdSkelTopology&amp; GetTopology</definition>
        <argsstring>() const</argsstring>
        <name>GetTopology</name>
        <briefdescription>
<para>Returns the topology of the bound skeleton instance, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a0df35f36a15d6bbb774e8d82571ff0e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const UsdSkelAnimMapper &amp;</type>
        <definition>USDSKEL_API const UsdSkelAnimMapper&amp; GetMapper</definition>
        <argsstring>() const</argsstring>
        <name>GetMapper</name>
        <briefdescription>
<para>Returns a mapper for remapping from the bound animation, if any, to the Skeleton. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1aab38abf001974901d97c0d9e07006262" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API VtTokenArray</type>
        <definition>USDSKEL_API VtTokenArray GetJointOrder</definition>
        <argsstring>() const</argsstring>
        <name>GetJointOrder</name>
        <briefdescription>
<para>Returns an array of joint paths, given as tokens, describing the order and parent-child relationships of joints in the skeleton. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSkelSkeleton::GetJointOrder </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a64035a9d2af1f6e3efe4ea06707beb30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeJointLocalTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time, bool atRest=false) const</argsstring>
        <name>ComputeJointLocalTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Compute joint transforms in joint-local space, at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This returns transforms in joint order of the skeleton. If <computeroutput>atRest</computeroutput> is false and an animation source is bound, local transforms defined by the animation are mapped into the skeleton&apos;s joint order. Any transforms not defined by the animation source use the transforms from the rest pose as a fallback value. If valid transforms cannot be computed for the animation source, the <computeroutput>xforms</computeroutput> are instead set to the rest transforms. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a8655e2695cc5196046fb9ecba497a6a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeJointSkelTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time, bool atRest=false) const</argsstring>
        <name>ComputeJointSkelTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Compute joint transforms in skeleton space, at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This concatenates joint transforms as computed from <ref refid="class_usd_skel_skeleton_query_1a64035a9d2af1f6e3efe4ea06707beb30" kindref="member">ComputeJointLocalTransforms()</ref>. If <computeroutput>atRest</computeroutput> is true, any bound animation source is ignored, and transforms are computed from the rest pose. The skeleton-space transforms of the rest pose are cached internally. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a0604a0e78c051d75a77b0ba3562e7c49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeJointRestRelativeTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time) const</argsstring>
        <name>ComputeJointRestRelativeTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Compute joint transforms which, when concatenated against the rest pose, produce joint transforms in joint-local space. </para>
        </briefdescription>
        <detaileddescription>
<para>More specifically, this computes <emphasis>restRelativeTransform</emphasis> in: <programlisting><codeline><highlight class="normal">restRelativeTransform<sp/>*<sp/>restTransform<sp/>=<sp/>jointLocalTransform</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a05e3ea924cd4d2ab99e85d858634bd46" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeJointWorldTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdGeomXformCache *xfCache, bool atRest=false) const</argsstring>
        <name>ComputeJointWorldTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_cache" kindref="compound">UsdGeomXformCache</ref> *</type>
          <declname>xfCache</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Compute joint transforms in world space, at whatever time is configured on <computeroutput>xfCache</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This is equivalent to computing skel-space joint transforms with CmoputeJointSkelTransforms(), and then concatenating all transforms by the local-to-world transform of the Skeleton prim. If <computeroutput>atRest</computeroutput> is true, any bound animation source is ignored, and transforms are computed from the rest pose. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1ad37a92f259f583ff99b5f354c42f268a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeSkinningTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time) const</argsstring>
        <name>ComputeSkinningTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Compute transforms representing the change in transformation of a joint from its rest pose, in skeleton space. </para>
        </briefdescription>
        <detaileddescription>
<para>I.e., <programlisting><codeline><highlight class="normal">inverse(bindTransform)*jointTransform</highlight></codeline>
</programlisting></para>
<para>These are the transforms usually required for skinning. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1aa6d0cbbb94ce38fc4c299f58b34689b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetJointWorldBindTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms) const</argsstring>
        <name>GetJointWorldBindTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <briefdescription>
<para>Returns the world space joint transforms at bind time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1ac2f106a8aaf8118daa4fb88d1b193c27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API std::string</type>
        <definition>USDSKEL_API std::string GetDescription</definition>
        <argsstring>() const</argsstring>
        <name>GetDescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="209" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a90727a3fa584c4bc6c4d0d3191da3224" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelSkeletonQuery</definition>
        <argsstring>(const UsdSkel_SkelDefinitionRefPtr &amp;definition, const UsdSkelAnimQuery &amp;anim=UsdSkelAnimQuery())</argsstring>
        <name>UsdSkelSkeletonQuery</name>
        <param>
          <type>const UsdSkel_SkelDefinitionRefPtr &amp;</type>
          <declname>definition</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref> &amp;</type>
          <declname>anim</declname>
          <defval><ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a6ae1a069f2780ecadf96f9a5faa23262" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _HasMappableAnim</definition>
        <argsstring>() const</argsstring>
        <name>_HasMappableAnim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a28d990e4be10500962c9e74e0c7b2c29" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _ComputeJointLocalTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time, bool atRest=false) const</argsstring>
        <name>_ComputeJointLocalTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a5bee6140aabb55baaf410a8e7bf94f6c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _ComputeJointSkelTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time, bool atRest=false) const</argsstring>
        <name>_ComputeJointSkelTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>atRest</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skeleton_query_1a721c2a1ad5434d6cd299497bf612dd02" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool _ComputeSkinningTransforms</definition>
        <argsstring>(VtArray&lt; Matrix4 &gt; *xforms, UsdTimeCode time) const</argsstring>
        <name>_ComputeSkinningTransforms</name>
        <param>
          <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skeletonQuery.h" line="230" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Primary interface to reading <emphasis>bound</emphasis> skeleton data. </para>
    </briefdescription>
    <detaileddescription>
<para>This is used to query properties such as resolved transforms and animation bindings, as bound through the <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>.</para>
<para>A <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref> can not be constructed directly, and instead must be constructed through a <ref refid="class_usd_skel_cache" kindref="compound">UsdSkelCache</ref> instance. This is done as follows:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>Global<sp/>cache,<sp/>intended<sp/>to<sp/>persist.</highlight></codeline>
<codeline><highlight class="normal">UsdSkelCache<sp/>skelCache;</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Populate<sp/>the<sp/>cache<sp/>for<sp/>a<sp/>skel<sp/>root.</highlight></codeline>
<codeline><highlight class="normal">skelCache.Populate(UsdSkelRoot(skelRootPrim));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(UsdSkelSkeletonQuery<sp/>skelQuery<sp/>=<sp/>skelCache.GetSkelQuery(skelPrim))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/skeletonQuery.h" line="71" column="1" bodyfile="pxr/usd/usdSkel/skeletonQuery.h" bodystart="70" bodyend="239"/>
    <listofallmembers>
      <member refid="class_usd_skel_skeleton_query_1abb6b71162546e63e046bb1324e3b7ca0" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_animQuery</name></member>
      <member refid="class_usd_skel_skeleton_query_1acc005069dc0547fe427c778f827162ca" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_animToSkelMapper</name></member>
      <member refid="class_usd_skel_skeleton_query_1a28d990e4be10500962c9e74e0c7b2c29" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_ComputeJointLocalTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a5bee6140aabb55baaf410a8e7bf94f6c" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_ComputeJointSkelTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a721c2a1ad5434d6cd299497bf612dd02" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_ComputeSkinningTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a6c253985fc11e614184779d9d0386586" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_definition</name></member>
      <member refid="class_usd_skel_skeleton_query_1a6ae1a069f2780ecadf96f9a5faa23262" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>_HasMappableAnim</name></member>
      <member refid="class_usd_skel_skeleton_query_1a64035a9d2af1f6e3efe4ea06707beb30" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>ComputeJointLocalTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a0604a0e78c051d75a77b0ba3562e7c49" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>ComputeJointRestRelativeTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a8655e2695cc5196046fb9ecba497a6a3" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>ComputeJointSkelTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a05e3ea924cd4d2ab99e85d858634bd46" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>ComputeJointWorldTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1ad37a92f259f583ff99b5f354c42f268a" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>ComputeSkinningTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a4ee24cc71848e87990f3741240d2cd5b" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetAnimQuery</name></member>
      <member refid="class_usd_skel_skeleton_query_1ac2f106a8aaf8118daa4fb88d1b193c27" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetDescription</name></member>
      <member refid="class_usd_skel_skeleton_query_1aab38abf001974901d97c0d9e07006262" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetJointOrder</name></member>
      <member refid="class_usd_skel_skeleton_query_1aa6d0cbbb94ce38fc4c299f58b34689b4" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetJointWorldBindTransforms</name></member>
      <member refid="class_usd_skel_skeleton_query_1a0df35f36a15d6bbb774e8d82571ff0e2" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetMapper</name></member>
      <member refid="class_usd_skel_skeleton_query_1aad7b30f4a8114c7c5826196ecbd54293" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetPrim</name></member>
      <member refid="class_usd_skel_skeleton_query_1aba46bdbc5cc29686ab2672e57c11eba3" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetSkeleton</name></member>
      <member refid="class_usd_skel_skeleton_query_1a0da8b34f1a4041f64579cdcc6547a042" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>GetTopology</name></member>
      <member refid="class_usd_skel_skeleton_query_1aea829c9b0f665d9cdc39530f465349b3" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>HasBindPose</name></member>
      <member refid="class_usd_skel_skeleton_query_1a06ca3ad48939b7c9bbb590ac911f70aa" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>hash_value</name></member>
      <member refid="class_usd_skel_skeleton_query_1a6d4f07b310e38d7503316d6c67fb140f" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>HasRestPose</name></member>
      <member refid="class_usd_skel_skeleton_query_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>IsValid</name></member>
      <member refid="class_usd_skel_skeleton_query_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>operator bool</name></member>
      <member refid="class_usd_skel_skeleton_query_1a97417f135e0d2f4c98c9209f70026967" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>operator!=</name></member>
      <member refid="class_usd_skel_skeleton_query_1af9b2133a94a8ec1986a02525bc0ff137" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>operator==</name></member>
      <member refid="class_usd_skel_skeleton_query_1adb7b0a70687485048fa96371e542cde8" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>UsdSkel_CacheImpl</name></member>
      <member refid="class_usd_skel_skeleton_query_1ab7ca53033309ebe02cbb86296aa4325b" prot="public" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>UsdSkelSkeletonQuery</name></member>
      <member refid="class_usd_skel_skeleton_query_1a90727a3fa584c4bc6c4d0d3191da3224" prot="private" virt="non-virtual"><scope>UsdSkelSkeletonQuery</scope><name>UsdSkelSkeletonQuery</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
