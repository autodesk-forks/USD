<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__group__tf___containers" kind="group">
    <compoundname>group_tf_Containers</compoundname>
    <title>Container classes</title>
    <innerfile refid="base_2tf_2iterator_8h">iterator.h</innerfile>
    <innerfile refid="type_info_map_8h">typeInfoMap.h</innerfile>
    <innerclass refid="class_tf_iterator" prot="public">TfIterator</innerclass>
    <innerclass refid="class_tf_type_info_map" prot="public">TfTypeInfoMap</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__tf___containers_1gac9d66282d4780f887eb06623532d095d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_tf_iterator" kindref="compound">TfIterator</ref>&lt; typename std::remove_reference&lt; T &gt;::type &gt;</type>
        <definition>TfIterator&lt;typename std::remove_reference&lt;T&gt;::type&gt; TfMakeIterator</definition>
        <argsstring>(T &amp;&amp;container)</argsstring>
        <name>TfMakeIterator</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
<para>Helper functions for creating <ref refid="class_tf_iterator" kindref="compound">TfIterator</ref> objects. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/iterator.h" line="359" column="1" bodyfile="pxr/base/tf/iterator.h" bodystart="359" bodyend="363"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__tf___containers_1gab938fb3368446816e91c72e816d31f5d" prot="public" static="no">
        <name>TF_FOR_ALL</name>
        <param><defname>iter</defname></param>
        <param><defname>c</defname></param>
        <briefdescription>
<para>Macro for iterating over a container. </para>
        </briefdescription>
        <detaileddescription>
<para>For any container <computeroutput>c</computeroutput> of type <computeroutput>T</computeroutput>, the following loop <programlisting><codeline><highlight class="normal">for<sp/>(TfIterator&lt;T&gt;<sp/>i<sp/>=<sp/>c.begin();<sp/>i;<sp/>++i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> is equivalent to <programlisting><codeline><highlight class="normal">TF_FOR_ALL(i,<sp/>c)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/iterator.h" line="390" column="9" bodyfile="pxr/base/tf/iterator.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__tf___containers_1gaa31b2f991b3e08617786da84ad2bf8b4" prot="public" static="no">
        <name>TF_REVERSE_FOR_ALL</name>
        <param><defname>iter</defname></param>
        <param><defname>c</defname></param>
        <briefdescription>
<para>Macro for iterating over a container in reverse. </para>
        </briefdescription>
        <detaileddescription>
<para>Operates like <emphasis>TF_FOR_ALL</emphasis>, but iterates the container in reverse order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/iterator.h" line="399" column="9" bodyfile="pxr/base/tf/iterator.h" bodystart="399" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classes that hold objects. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
