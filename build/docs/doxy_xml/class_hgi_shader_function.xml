<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_shader_function" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HgiShaderFunction</compoundname>
    <derivedcompoundref refid="class_hgi_g_l_shader_function" prot="public" virt="non-virtual">HgiGLShaderFunction</derivedcompoundref>
    <includes refid="shader_function_8h" local="no">shaderFunction.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hgi_shader_function_1aa16bc16000e250f48580ae98cd787d61" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_hgi_shader_function_desc" kindref="compound">HgiShaderFunctionDesc</ref></type>
        <definition>HgiShaderFunctionDesc _descriptor</definition>
        <argsstring></argsstring>
        <name>_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="88" column="1" bodyfile="pxr/imaging/hgi/shaderFunction.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_shader_function_1a9a363cc817bf5a724a6491c05d2bc13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGI_API</type>
        <definition>virtual HGI_API ~HgiShaderFunction</definition>
        <argsstring>()</argsstring>
        <name>~HgiShaderFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1a6efa7a57ed091f72612e667cb835d732" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API <ref refid="struct_hgi_shader_function_desc" kindref="compound">HgiShaderFunctionDesc</ref> const  &amp;</type>
        <definition>HGI_API HgiShaderFunctionDesc const&amp; GetDescriptor</definition>
        <argsstring>() const</argsstring>
        <name>GetDescriptor</name>
        <briefdescription>
<para>The descriptor describes the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1a14252f4137a1cb84ced798214eabe2d3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API bool</type>
        <definition>virtual HGI_API bool IsValid</definition>
        <argsstring>() const =0</argsstring>
        <name>IsValid</name>
        <reimplementedby refid="class_hgi_g_l_shader_function_1a9ba9cc57ab3c62115348a872b214da24">IsValid</reimplementedby>
        <briefdescription>
<para>Returns false if any shader compile errors occured. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1a0d8a616ea20c7ebe8b03436ddbde5e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API std::string const  &amp;</type>
        <definition>virtual HGI_API std::string const&amp; GetCompileErrors</definition>
        <argsstring>()=0</argsstring>
        <name>GetCompileErrors</name>
        <reimplementedby refid="class_hgi_g_l_shader_function_1a9fa577dda7e07c0026be8278fe68aea9">GetCompileErrors</reimplementedby>
        <briefdescription>
<para>Returns shader compile errors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1afb9f5da99a13e9adcab7f87cb9a6ad94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API size_t</type>
        <definition>virtual HGI_API size_t GetByteSizeOfResource</definition>
        <argsstring>() const =0</argsstring>
        <name>GetByteSizeOfResource</name>
        <reimplementedby refid="class_hgi_g_l_shader_function_1aaf2f07918f87f57adccda3e250297da7">GetByteSizeOfResource</reimplementedby>
        <briefdescription>
<para>Returns the byte size of the GPU shader function. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be helpful if the application wishes to tally up memory usage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1a1c1b84de203362af87c23d73c8f8d395" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API uint64_t</type>
        <definition>virtual HGI_API uint64_t GetRawResource</definition>
        <argsstring>() const =0</argsstring>
        <name>GetRawResource</name>
        <reimplementedby refid="class_hgi_g_l_shader_function_1adc3ffb4c04b3ab04225e25cf3f7dfe05">GetRawResource</reimplementedby>
        <briefdescription>
<para>This function returns the handle to the <ref refid="class_hgi" kindref="compound">Hgi</ref> backend&apos;s gpu resource, cast to a uint64_t. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients should avoid using this function and instead use <ref refid="class_hgi" kindref="compound">Hgi</ref> base classes so that client code works with any <ref refid="class_hgi" kindref="compound">Hgi</ref> platform. For transitioning code to <ref refid="class_hgi" kindref="compound">Hgi</ref>, it can however we useful to directly access a platform&apos;s internal resource handles. There is no safety provided in using this. If you by accident pass a HgiMetal resource into an OpenGL call, bad things may happen. In OpenGL this returns the GLuint resource name. In Metal this returns the id&lt;MTLFunction&gt; as uint64_t. In Vulkan this returns the VkShaderModule as uint64_t. In DX12 this returns the ID3D12Resource pointer as uint64_t. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hgi_shader_function_1a02b7c847ae4f4fc4f7c8d36446fccd51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API</type>
        <definition>HGI_API HgiShaderFunction</definition>
        <argsstring>(HgiShaderFunctionDesc const &amp;desc)</argsstring>
        <name>HgiShaderFunction</name>
        <param>
          <type><ref refid="struct_hgi_shader_function_desc" kindref="compound">HgiShaderFunctionDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hgi_shader_function_1a4a6481b7bf23e608050ce869e3624227" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiShaderFunction</definition>
        <argsstring>()=delete</argsstring>
        <name>HgiShaderFunction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1a934fd3e8ab5c25cd2fc5b68d1a62677e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hgi_shader_function" kindref="compound">HgiShaderFunction</ref> &amp;</type>
        <definition>HgiShaderFunction&amp; operator=</definition>
        <argsstring>(const HgiShaderFunction &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hgi_shader_function" kindref="compound">HgiShaderFunction</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_shader_function_1ab3d0f83780e3247c4be0deb7c575d14b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiShaderFunction</definition>
        <argsstring>(const HgiShaderFunction &amp;)=delete</argsstring>
        <name>HgiShaderFunction</name>
        <param>
          <type>const <ref refid="class_hgi_shader_function" kindref="compound">HgiShaderFunction</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/shaderFunction.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents one shader stage function (code snippet). </para>
    </briefdescription>
    <detaileddescription>
<para>ShaderFunctions are usually passed to a ShaderProgram, however be careful not to destroy the ShaderFunction after giving it to the program. While this may be safe for OpenGL after the program is created, it does not apply to other graphics backends, such as Vulkan, where the shader functions are used during rendering. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3949">
        <label>HgiShaderFunction</label>
        <link refid="class_hgi_shader_function"/>
      </node>
      <node id="3950">
        <label>HgiGLShaderFunction</label>
        <link refid="class_hgi_g_l_shader_function"/>
        <childnode refid="3949" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3951">
        <label>HgiShaderFunction</label>
        <link refid="class_hgi_shader_function"/>
        <childnode refid="3952" relation="usage">
          <edgelabel>_descriptor</edgelabel>
        </childnode>
      </node>
      <node id="3952">
        <label>HgiShaderFunctionDesc</label>
        <link refid="struct_hgi_shader_function_desc"/>
        <childnode refid="3953" relation="usage">
          <edgelabel>computeDescriptor</edgelabel>
        </childnode>
        <childnode refid="3955" relation="usage">
          <edgelabel>geometryDescriptor</edgelabel>
        </childnode>
        <childnode refid="3956" relation="usage">
          <edgelabel>tessellationDescriptor</edgelabel>
        </childnode>
        <childnode refid="3957" relation="usage">
          <edgelabel>fragmentDescriptor</edgelabel>
        </childnode>
      </node>
      <node id="3956">
        <label>HgiShaderFunctionTessellationDesc</label>
        <link refid="struct_hgi_shader_function_tessellation_desc"/>
      </node>
      <node id="3954">
        <label>GfVec3i</label>
        <link refid="class_gf_vec3i"/>
      </node>
      <node id="3957">
        <label>HgiShaderFunctionFragmentDesc</label>
        <link refid="struct_hgi_shader_function_fragment_desc"/>
      </node>
      <node id="3955">
        <label>HgiShaderFunctionGeometryDesc</label>
        <link refid="struct_hgi_shader_function_geometry_desc"/>
      </node>
      <node id="3953">
        <label>HgiShaderFunctionComputeDesc</label>
        <link refid="struct_hgi_shader_function_compute_desc"/>
        <childnode refid="3954" relation="usage">
          <edgelabel>localSize</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/shaderFunction.h" line="48" column="1" bodyfile="pxr/imaging/hgi/shaderFunction.h" bodystart="47" bodyend="94"/>
    <listofallmembers>
      <member refid="class_hgi_shader_function_1aa16bc16000e250f48580ae98cd787d61" prot="protected" virt="non-virtual"><scope>HgiShaderFunction</scope><name>_descriptor</name></member>
      <member refid="class_hgi_shader_function_1afb9f5da99a13e9adcab7f87cb9a6ad94" prot="public" virt="pure-virtual"><scope>HgiShaderFunction</scope><name>GetByteSizeOfResource</name></member>
      <member refid="class_hgi_shader_function_1a0d8a616ea20c7ebe8b03436ddbde5e39" prot="public" virt="pure-virtual"><scope>HgiShaderFunction</scope><name>GetCompileErrors</name></member>
      <member refid="class_hgi_shader_function_1a6efa7a57ed091f72612e667cb835d732" prot="public" virt="non-virtual"><scope>HgiShaderFunction</scope><name>GetDescriptor</name></member>
      <member refid="class_hgi_shader_function_1a1c1b84de203362af87c23d73c8f8d395" prot="public" virt="pure-virtual"><scope>HgiShaderFunction</scope><name>GetRawResource</name></member>
      <member refid="class_hgi_shader_function_1a02b7c847ae4f4fc4f7c8d36446fccd51" prot="protected" virt="non-virtual"><scope>HgiShaderFunction</scope><name>HgiShaderFunction</name></member>
      <member refid="class_hgi_shader_function_1a4a6481b7bf23e608050ce869e3624227" prot="private" virt="non-virtual"><scope>HgiShaderFunction</scope><name>HgiShaderFunction</name></member>
      <member refid="class_hgi_shader_function_1ab3d0f83780e3247c4be0deb7c575d14b" prot="private" virt="non-virtual"><scope>HgiShaderFunction</scope><name>HgiShaderFunction</name></member>
      <member refid="class_hgi_shader_function_1a14252f4137a1cb84ced798214eabe2d3" prot="public" virt="pure-virtual"><scope>HgiShaderFunction</scope><name>IsValid</name></member>
      <member refid="class_hgi_shader_function_1a934fd3e8ab5c25cd2fc5b68d1a62677e" prot="private" virt="non-virtual"><scope>HgiShaderFunction</scope><name>operator=</name></member>
      <member refid="class_hgi_shader_function_1a9a363cc817bf5a724a6491c05d2bc13e" prot="public" virt="virtual"><scope>HgiShaderFunction</scope><name>~HgiShaderFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
