<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___usd_skel_imaging___bone_utils" kind="group">
    <compoundname>UsdSkelImaging_BoneUtils</compoundname>
    <title>Bone Utilities</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___usd_skel_imaging___bone_utils_1ga07ac17cdd7cef90a4a7f9859ddde7731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKELIMAGING_API bool</type>
        <definition>USDSKELIMAGING_API bool UsdSkelImagingComputeBoneTopology</definition>
        <argsstring>(const UsdSkelTopology &amp;skelTopology, HdMeshTopology *meshTopology, size_t *numPoints)</argsstring>
        <name>UsdSkelImagingComputeBoneTopology</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>skelTopology</declname>
        </param>
        <param>
          <type><ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref> *</type>
          <declname>meshTopology</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Compute mesh topology for imaging <computeroutput>skelTopology</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of points that the mesh is expected to have are return in <computeroutput>numPoints</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdSkelImaging/utils.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel_imaging___bone_utils_1ga0654ebb4d8e47045c3ca6dc94dc08889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKELIMAGING_API bool</type>
        <definition>USDSKELIMAGING_API bool UsdSkelImagingComputeBonePoints</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const VtMatrix4dArray &amp;jointSkelXforms, size_t numPoints, VtVec3fArray *points)</argsstring>
        <name>UsdSkelImagingComputeBonePoints</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>jointSkelXforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Compute mesh points for imaging a skeleton, given the <computeroutput>topology</computeroutput> of the skeleton and <computeroutput>skelXforms</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>numPoints</computeroutput> corresponds to the number of points computed by UsdSkelImagingComputeBoneTopology. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdSkelImaging/utils.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel_imaging___bone_utils_1ga1325f5e464e803c77afc6c9b7fa068f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKELIMAGING_API bool</type>
        <definition>USDSKELIMAGING_API bool UsdSkelImagingComputeBonePoints</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, const GfMatrix4d *jointSkelXforms, GfVec3f *points, size_t numPoints)</argsstring>
        <name>UsdSkelImagingComputeBonePoints</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointSkelXforms</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdSkelImaging/utils.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel_imaging___bone_utils_1ga99212433282e2093fb48084182c81b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKELIMAGING_API bool</type>
        <definition>USDSKELIMAGING_API bool UsdSkelImagingComputeBoneJointIndices</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, VtIntArray *jointIndices, size_t numPoints)</argsstring>
        <name>UsdSkelImagingComputeBoneJointIndices</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>VtIntArray *</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
<para>Compute joint indices corresponding to each point in a bone mesh. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be used to animate a bone mesh using normal skinning algos. This does not compute joint weights (they would all be 1s). The <computeroutput>numPoints</computeroutput> corresponds to the number of points computed by UsdSkelImagingComputeBoneTopology. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdSkelImaging/utils.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel_imaging___bone_utils_1ga4a99b3df3587fb07044e3d8e90d4e77e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKELIMAGING_API bool</type>
        <definition>USDSKELIMAGING_API bool UsdSkelImagingComputeBoneJointIndices</definition>
        <argsstring>(const UsdSkelTopology &amp;topology, int *jointIndices, size_t numPoints)</argsstring>
        <name>UsdSkelImagingComputeBoneJointIndices</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usdImaging/usdSkelImaging/utils.h" line="94" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utilities for constructing bone meshes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
