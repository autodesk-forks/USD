<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_render_pass_shader" kind="class" language="C++" prot="public">
    <compoundname>HdStRenderPassShader</compoundname>
    <basecompoundref refid="class_hd_st_shader_code" prot="public" virt="non-virtual">HdStShaderCode</basecompoundref>
    <includes refid="render_pass_shader_8h" local="no">renderPassShader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1a4e5d3ef9301ebe0e61f247b27883e1af" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _glslfxFile</definition>
        <argsstring></argsstring>
        <name>_glslfxFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="103" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1a4f684c4a65d64de270b0360dbfa76aef" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_hio_glslfx" kindref="compound">HioGlslfx</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HioGlslfx&gt; _glslfx</definition>
        <argsstring></argsstring>
        <name>_glslfx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="104" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1ae059dfbd9014bb0672749a5fdb785c6e" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t _hash</definition>
        <argsstring></argsstring>
        <name>_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="105" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1ae747e3a6a20c2a7056c215daddba8635" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool _hashValid</definition>
        <argsstring></argsstring>
        <name>_hashValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="106" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1a5a0c540719001d9d4f4a5c0dd5a0ee88" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="class_hd_st_binding_request" kindref="compound">HdStBindingRequest</ref> &gt;</type>
        <definition>std::map&lt;TfToken, HdStBindingRequest&gt; _customBuffers</definition>
        <argsstring></argsstring>
        <name>_customBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="109" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1ab76e90202902816ea2b8bb77ff04a07c" prot="private" static="no" mutable="no">
        <type>NamedTextureHandleVector</type>
        <definition>NamedTextureHandleVector _namedTextureHandles</definition>
        <argsstring></argsstring>
        <name>_namedTextureHandles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="111" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_pass_shader_1a51d842be9f06fb7b83153908f42338b9" prot="private" static="no" mutable="no">
        <type>HdSt_MaterialParamVector</type>
        <definition>HdSt_MaterialParamVector _params</definition>
        <argsstring></argsstring>
        <name>_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="113" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a565660a34ce60be58d7e84495169d90a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStRenderPassShader</definition>
        <argsstring>()</argsstring>
        <name>HdStRenderPassShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1ae86991e0c02aeabdf8b02ab91bdc5e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStRenderPassShader</definition>
        <argsstring>(TfToken const &amp;glslfxFile)</argsstring>
        <name>HdStRenderPassShader</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>glslfxFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1acccb445643893389a939ba7572f229e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStRenderPassShader</definition>
        <argsstring>() override</argsstring>
        <name>~HdStRenderPassShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a9d802c1047cd5aea9dc92919b2803423" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API ID</type>
        <definition>HDST_API ID ComputeHash</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeHash</name>
        <reimplements refid="class_hd_st_shader_code_1acfa7f0a0b30c2ac28eeaf6aed0a30231">ComputeHash</reimplements>
        <briefdescription>
<para>HdShader overrides. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a908e0465551c896cb54231d81e059d1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API std::string</type>
        <definition>HDST_API std::string GetSource</definition>
        <argsstring>(TfToken const &amp;shaderStageKey) const override</argsstring>
        <name>GetSource</name>
        <reimplements refid="class_hd_st_shader_code_1a8717d742607de2b45bea9024d452c00a">GetSource</reimplements>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderStageKey</declname>
        </param>
        <briefdescription>
<para>Returns the shader source provided by this shader for <emphasis>shaderStageKey</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1ae1f190000fb661c92c68506fffc9fb80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void BindResources</definition>
        <argsstring>(int program, HdSt_ResourceBinder const &amp;binder) override</argsstring>
        <name>BindResources</name>
        <reimplements refid="class_hd_st_shader_code_1a13700c17eb68d77baadffa79dbec83d4">BindResources</reimplements>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>HdSt_ResourceBinder const &amp;</type>
          <declname>binder</declname>
        </param>
        <briefdescription>
<para>Binds shader-specific resources to <emphasis>program</emphasis> XXX: this interface is meant to be used for bridging the GlfSimpleLightingContext mechanism, and not for generic use-cases. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1ad68ad0c16d09b39ab29774987a7db6a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void UnbindResources</definition>
        <argsstring>(int program, HdSt_ResourceBinder const &amp;binder) override</argsstring>
        <name>UnbindResources</name>
        <reimplements refid="class_hd_st_shader_code_1aa5aea916f3a072c69d53a67874958794">UnbindResources</reimplements>
        <param>
          <type>int</type>
          <declname>program</declname>
        </param>
        <param>
          <type>HdSt_ResourceBinder const &amp;</type>
          <declname>binder</declname>
        </param>
        <briefdescription>
<para>Unbinds shader-specific resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a4cfef0b3a78e078f1386a3b47f9ea824" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AddBindings</definition>
        <argsstring>(HdStBindingRequestVector *customBindings) override</argsstring>
        <name>AddBindings</name>
        <reimplements refid="class_hd_st_shader_code_1a736c068e4fec90946da60dcd9e2621eb">AddBindings</reimplements>
        <param>
          <type>HdStBindingRequestVector *</type>
          <declname>customBindings</declname>
        </param>
        <briefdescription>
<para>Add custom bindings (used by codegen) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1aa9164a243a42e0f97284b6263c7bd062" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API HdSt_MaterialParamVector const  &amp;</type>
        <definition>HDST_API HdSt_MaterialParamVector const&amp; GetParams</definition>
        <argsstring>() const override</argsstring>
        <name>GetParams</name>
        <reimplements refid="class_hd_st_shader_code_1a33ed1752551f2580e533727f89b421cd">GetParams</reimplements>
        <briefdescription>
<para>Returns the shader parameters for this shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a996cd3d76e498522116cdff37fd780ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API NamedTextureHandleVector const  &amp;</type>
        <definition>HDST_API NamedTextureHandleVector const&amp; GetNamedTextureHandles</definition>
        <argsstring>() const override</argsstring>
        <name>GetNamedTextureHandles</name>
        <reimplements refid="class_hd_st_shader_code_1afa5d4e1a8aa32dc92f9da89ff4c92659">GetNamedTextureHandles</reimplements>
        <briefdescription>
<para>Textures that need to be bound for this shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a4bb91c7fbdb5f28ae5b04b912295f884" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void AddBufferBinding</definition>
        <argsstring>(HdStBindingRequest const &amp;req)</argsstring>
        <name>AddBufferBinding</name>
        <param>
          <type><ref refid="class_hd_st_binding_request" kindref="compound">HdStBindingRequest</ref> const &amp;</type>
          <declname>req</declname>
        </param>
        <briefdescription>
<para>Add a custom binding request for use when this shader executes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a13cd951886c9d88f1a0a5023dfb64935" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void RemoveBufferBinding</definition>
        <argsstring>(TfToken const &amp;name)</argsstring>
        <name>RemoveBufferBinding</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Remove <computeroutput>name</computeroutput> from custom binding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a55ced321743ab14761d7628f5dc4c11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void ClearBufferBindings</definition>
        <argsstring>()</argsstring>
        <name>ClearBufferBindings</name>
        <briefdescription>
<para>Clear all custom bindings associated with this shader. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a7ba60d56b358dd948ef73c82d8ab064d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void UpdateAovInputTextures</definition>
        <argsstring>(HdRenderPassAovBindingVector const &amp;aovInputBindings, HdRenderIndex *const renderIndex)</argsstring>
        <name>UpdateAovInputTextures</name>
        <param>
          <type>HdRenderPassAovBindingVector const &amp;</type>
          <declname>aovInputBindings</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *const</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="98" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a42c312a6c6daf1804c7d00673b86f2de" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStRenderPassShader</definition>
        <argsstring>(const HdStRenderPassShader &amp;)=delete</argsstring>
        <name>HdStRenderPassShader</name>
        <param>
          <type>const <ref refid="class_hd_st_render_pass_shader" kindref="compound">HdStRenderPassShader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1ac84a40d9f3746c70f2b1cf88044e7c67" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_st_render_pass_shader" kindref="compound">HdStRenderPassShader</ref> &amp;</type>
        <definition>HdStRenderPassShader&amp; operator=</definition>
        <argsstring>(const HdStRenderPassShader &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_st_render_pass_shader" kindref="compound">HdStRenderPassShader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_pass_shader_1a71bb972c8570ea87fc052467ddc822c2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_hio_glslfx" kindref="compound">HioGlslfx</ref> const  *</type>
        <definition>HioGlslfx const* _GetGlslfx</definition>
        <argsstring>() const override</argsstring>
        <name>_GetGlslfx</name>
        <reimplements refid="class_hd_st_shader_code_1a63fac30cae8232d46b828f2a94c18191">_GetGlslfx</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderPassShader.h" line="119" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A shader that supports common renderPass functionality. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3288">
        <label>HdStShaderCode</label>
        <link refid="class_hd_st_shader_code"/>
      </node>
      <node id="3287">
        <label>HdStRenderPassShader</label>
        <link refid="class_hd_st_render_pass_shader"/>
        <childnode refid="3288" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3290">
        <label>HdStShaderCode</label>
        <link refid="class_hd_st_shader_code"/>
      </node>
      <node id="3289">
        <label>HdStRenderPassShader</label>
        <link refid="class_hd_st_render_pass_shader"/>
        <childnode refid="3290" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/renderPassShader.h" line="51" column="1" bodyfile="pxr/imaging/hdSt/renderPassShader.h" bodystart="51" bodyend="120"/>
    <listofallmembers>
      <member refid="class_hd_st_render_pass_shader_1a5a0c540719001d9d4f4a5c0dd5a0ee88" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_customBuffers</name></member>
      <member refid="class_hd_st_render_pass_shader_1a71bb972c8570ea87fc052467ddc822c2" prot="private" virt="virtual"><scope>HdStRenderPassShader</scope><name>_GetGlslfx</name></member>
      <member refid="class_hd_st_render_pass_shader_1a4f684c4a65d64de270b0360dbfa76aef" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_glslfx</name></member>
      <member refid="class_hd_st_render_pass_shader_1a4e5d3ef9301ebe0e61f247b27883e1af" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_glslfxFile</name></member>
      <member refid="class_hd_st_render_pass_shader_1ae059dfbd9014bb0672749a5fdb785c6e" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_hash</name></member>
      <member refid="class_hd_st_render_pass_shader_1ae747e3a6a20c2a7056c215daddba8635" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_hashValid</name></member>
      <member refid="class_hd_st_render_pass_shader_1ab76e90202902816ea2b8bb77ff04a07c" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_namedTextureHandles</name></member>
      <member refid="class_hd_st_render_pass_shader_1a51d842be9f06fb7b83153908f42338b9" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>_params</name></member>
      <member refid="class_hd_st_render_pass_shader_1a4cfef0b3a78e078f1386a3b47f9ea824" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>AddBindings</name></member>
      <member refid="class_hd_st_render_pass_shader_1a4bb91c7fbdb5f28ae5b04b912295f884" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>AddBufferBinding</name></member>
      <member refid="class_hd_st_shader_code_1a7f54ea8b13462f62034e2143d600b668" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>AddResourcesFromTextures</name></member>
      <member refid="class_hd_st_render_pass_shader_1ae1f190000fb661c92c68506fffc9fb80" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>BindResources</name></member>
      <member refid="class_hd_st_render_pass_shader_1a55ced321743ab14761d7628f5dc4c11b" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>ClearBufferBindings</name></member>
      <member refid="class_hd_st_render_pass_shader_1a9d802c1047cd5aea9dc92919b2803423" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>ComputeHash</name></member>
      <member refid="class_hd_st_shader_code_1a0cb254cccc84edc7c968ac420c68c510" prot="public" virt="non-virtual" ambiguityscope="HdStShaderCode::"><scope>HdStRenderPassShader</scope><name>ComputeHash</name></member>
      <member refid="class_hd_st_shader_code_1aa87939b745008a9e4c595ff5a3b7bc47" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>ComputeTextureSourceHash</name></member>
      <member refid="class_hd_st_shader_code_1a87c79469678d418e6b22a40cc44c71e9" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>GetLayout</name></member>
      <member refid="class_hd_st_shader_code_1aa083cfe5ffeb293d140939015cfc4bee" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>GetMaterialTag</name></member>
      <member refid="class_hd_st_render_pass_shader_1a996cd3d76e498522116cdff37fd780ca" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>GetNamedTextureHandles</name></member>
      <member refid="class_hd_st_render_pass_shader_1aa9164a243a42e0f97284b6263c7bd062" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>GetParams</name></member>
      <member refid="class_hd_st_shader_code_1aca5eb08abdbce73ddf3875154536a422" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>GetPrimvarNames</name></member>
      <member refid="class_hd_st_shader_code_1a1c6ec58a09a01194b77a4a6e3f44d58c" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>GetShaderData</name></member>
      <member refid="class_hd_st_render_pass_shader_1a908e0465551c896cb54231d81e059d1b" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>GetSource</name></member>
      <member refid="class_hd_st_render_pass_shader_1a565660a34ce60be58d7e84495169d90a" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>HdStRenderPassShader</name></member>
      <member refid="class_hd_st_render_pass_shader_1ae86991e0c02aeabdf8b02ab91bdc5e64" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>HdStRenderPassShader</name></member>
      <member refid="class_hd_st_render_pass_shader_1a42c312a6c6daf1804c7d00673b86f2de" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>HdStRenderPassShader</name></member>
      <member refid="class_hd_st_shader_code_1ac530c4be851e1dba7b0abd4930ebb712" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>HdStShaderCode</name></member>
      <member refid="class_hd_st_shader_code_1a98561e8cb698fef2e90d441103da9db1" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>ID</name></member>
      <member refid="class_hd_st_shader_code_1acaa3f03bbc11d10ddb93f36f864bc55c" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>IsEnabledPrimvarFiltering</name></member>
      <member refid="class_hd_st_shader_code_1affddb2cacbc61841edb346aa3404bba8" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>NamedTextureHandleVector</name></member>
      <member refid="class_hd_st_render_pass_shader_1ac84a40d9f3746c70f2b1cf88044e7c67" prot="private" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>operator=</name></member>
      <member refid="class_hd_st_render_pass_shader_1a13cd951886c9d88f1a0a5023dfb64935" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>RemoveBufferBinding</name></member>
      <member refid="class_hd_st_render_pass_shader_1ad68ad0c16d09b39ab29774987a7db6a1" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>UnbindResources</name></member>
      <member refid="class_hd_st_render_pass_shader_1a7ba60d56b358dd948ef73c82d8ab064d" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>UpdateAovInputTextures</name></member>
      <member refid="class_hd_st_render_pass_shader_1acccb445643893389a939ba7572f229e3" prot="public" virt="non-virtual"><scope>HdStRenderPassShader</scope><name>~HdStRenderPassShader</name></member>
      <member refid="class_hd_st_shader_code_1a031ab0133a22cca5abd7781330fb39c3" prot="public" virt="virtual"><scope>HdStRenderPassShader</scope><name>~HdStShaderCode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
