<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_tf_type_functions" kind="class" language="C++" prot="public">
    <compoundname>TfTypeFunctions</compoundname>
    <includes refid="type_functions_8h" local="no">typeFunctions.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>class ENABLE</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_tf_type_functions_1a0eb288cd8f62b3f26fa3098e3400a974" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>static const T* GetRawPtr</definition>
        <argsstring>(const T &amp;t)</argsstring>
        <name>GetRawPtr</name>
        <param>
          <type>const T &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/typeFunctions.h" line="61" column="1" bodyfile="pxr/base/tf/typeFunctions.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_1a414f385e020ba96d9598c56da971022f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>static T&amp; ConstructFromRawPtr</definition>
        <argsstring>(T *ptr)</argsstring>
        <name>ConstructFromRawPtr</name>
        <param>
          <type>T *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/typeFunctions.h" line="65" column="1" bodyfile="pxr/base/tf/typeFunctions.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_1a56a1d226d756b1c7b676afd89ce9a588" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool IsNull</definition>
        <argsstring>(const T &amp;)</argsstring>
        <name>IsNull</name>
        <param>
          <type>const T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/typeFunctions.h" line="67" column="1" bodyfile="pxr/base/tf/typeFunctions.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_1a56b8277153d75cdde1b2b288a4c38436" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Class_Object_MUST_Not_Be_Const</definition>
        <argsstring>()</argsstring>
        <name>Class_Object_MUST_Not_Be_Const</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/typeFunctions.h" line="71" column="1" bodyfile="pxr/base/tf/typeFunctions.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_type_functions_1aa5e06b8d01300dd20b50c5954d2d949e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Object_CANNOT_Be_a_Pointer</definition>
        <argsstring>()</argsstring>
        <name>Object_CANNOT_Be_a_Pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/typeFunctions.h" line="72" column="1" bodyfile="pxr/base/tf/typeFunctions.h" bodystart="72" bodyend="72"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements assorted functions based on compile-time type information. </para>
    </briefdescription>
    <detaileddescription>
<para>TfTypeFunctions&lt;T&gt;::GetRawPtr(T* tPtr) returns tPtr. A smart-pointer class, such as <computeroutput><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref></computeroutput>, may specialize this function to have different behavior. Note that for a non-pointer type, this returns the address of the object, which allows one to uniformly apply the -&gt; operator for member function calls.</para>
<para>TfTypeFunctions&lt;T&gt;::ConstructFromRawPtr(T* tPtr) returns tPtr. Pointer-like objects should specialize this function so that given a raw pointer of type T*, they return a smart pointer pointing to that object (see <ref refid="ref_ptr_8h" kindref="compound">refPtr.h</ref> for an example). Essentially, this is the inverse of TfTypeFunctions&lt;T&gt;::GetRawPtr. </para>
    </detaileddescription>
    <location file="pxr/base/tf/typeFunctions.h" line="54" column="1" bodyfile="pxr/base/tf/typeFunctions.h" bodystart="54" bodyend="73"/>
    <listofallmembers>
      <member refid="struct_tf_type_functions_1a56b8277153d75cdde1b2b288a4c38436" prot="public" virt="non-virtual"><scope>TfTypeFunctions</scope><name>Class_Object_MUST_Not_Be_Const</name></member>
      <member refid="struct_tf_type_functions_1a414f385e020ba96d9598c56da971022f" prot="public" virt="non-virtual"><scope>TfTypeFunctions</scope><name>ConstructFromRawPtr</name></member>
      <member refid="struct_tf_type_functions_1a0eb288cd8f62b3f26fa3098e3400a974" prot="public" virt="non-virtual"><scope>TfTypeFunctions</scope><name>GetRawPtr</name></member>
      <member refid="struct_tf_type_functions_1a56a1d226d756b1c7b676afd89ce9a588" prot="public" virt="non-virtual"><scope>TfTypeFunctions</scope><name>IsNull</name></member>
      <member refid="struct_tf_type_functions_1aa5e06b8d01300dd20b50c5954d2d949e" prot="public" virt="non-virtual"><scope>TfTypeFunctions</scope><name>Object_CANNOT_Be_a_Pointer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
