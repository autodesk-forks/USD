<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_glf_debug_group" kind="class" language="C++" prot="public">
    <compoundname>GlfDebugGroup</compoundname>
    <includes refid="imaging_2glf_2diagnostic_8h" local="no">diagnostic.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_glf_debug_group_1a47ad27dbabc549f190ef86a657ed5a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API GlfDebugGroup</definition>
        <argsstring>(char const *message)</argsstring>
        <name>GlfDebugGroup</name>
        <param>
          <type>char const *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Pushes a new debug group onto the GL api debug trace stack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_debug_group_1a97173664de4e111762876ae11a97f288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API ~GlfDebugGroup</definition>
        <argsstring>()</argsstring>
        <name>~GlfDebugGroup</name>
        <briefdescription>
<para>Pops a debug group off the GL api debug trace stack. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_debug_group_1a3e6676283b20cc15e79859906e54410d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GlfDebugGroup</definition>
        <argsstring>()=delete</argsstring>
        <name>GlfDebugGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_debug_group_1a3fbf65d04ba7cd1e2a143cd143b68d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GlfDebugGroup</definition>
        <argsstring>(GlfDebugGroup const &amp;)=delete</argsstring>
        <name>GlfDebugGroup</name>
        <param>
          <type><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_debug_group_1ace4aa7d49d3869b220a61acc6c82eed3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> &amp;</type>
        <definition>GlfDebugGroup&amp; operator=</definition>
        <argsstring>(GlfDebugGroup const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a GL debug group in Glf. </para>
    </briefdescription>
    <detaileddescription>
<para>The debug group conditionally adds debug objects to the GL stream based on the value to the environment variable GLF_ENABLE_DIAGNOSTIC_TRACE. If set to 1 (true) the debug objects will be pushed and popped in the command stream as long as the GL implementation and version supports it. </para>
    </detaileddescription>
    <location file="pxr/imaging/glf/diagnostic.h" line="84" column="1" bodyfile="pxr/imaging/glf/diagnostic.h" bodystart="84" bodyend="97"/>
    <listofallmembers>
      <member refid="class_glf_debug_group_1a47ad27dbabc549f190ef86a657ed5a95" prot="public" virt="non-virtual"><scope>GlfDebugGroup</scope><name>GlfDebugGroup</name></member>
      <member refid="class_glf_debug_group_1a3e6676283b20cc15e79859906e54410d" prot="public" virt="non-virtual"><scope>GlfDebugGroup</scope><name>GlfDebugGroup</name></member>
      <member refid="class_glf_debug_group_1a3fbf65d04ba7cd1e2a143cd143b68d0c" prot="public" virt="non-virtual"><scope>GlfDebugGroup</scope><name>GlfDebugGroup</name></member>
      <member refid="class_glf_debug_group_1ace4aa7d49d3869b220a61acc6c82eed3" prot="public" virt="non-virtual"><scope>GlfDebugGroup</scope><name>operator=</name></member>
      <member refid="class_glf_debug_group_1a97173664de4e111762876ae11a97f288" prot="public" virt="non-virtual"><scope>GlfDebugGroup</scope><name>~GlfDebugGroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
