<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_physics_mass_properties" kind="class" language="C++" prot="public">
    <compoundname>UsdPhysicsMassProperties</compoundname>
    <includes refid="mass_properties_8h" local="no">massProperties.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_physics_mass_properties_1a3f350975aec21a6300ddd556e291af2c" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref></type>
        <definition>GfMatrix3f _inertiaTensor</definition>
        <argsstring></argsstring>
        <name>_inertiaTensor</name>
        <briefdescription>
<para>The inertia tensor of the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="244" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_physics_mass_properties_1a18cb20890353743c0c629c39868eb5bd" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>GfVec3f _centerOfMass</definition>
        <argsstring></argsstring>
        <name>_centerOfMass</name>
        <briefdescription>
<para>The center of mass of the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="245" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_physics_mass_properties_1a081c74c5b673ccd228bb85114408e663" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float _mass</definition>
        <argsstring></argsstring>
        <name>_mass</name>
        <briefdescription>
<para>The mass of the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="246" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a8c739592142bd827ec24765c7d67837e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API</type>
        <definition>USDPHYSICS_API UsdPhysicsMassProperties</definition>
        <argsstring>()</argsstring>
        <name>UsdPhysicsMassProperties</name>
        <briefdescription>
<para>Construct a MassProperties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="108" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1ae4822a861979e0c61abca371cbba13d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API</type>
        <definition>USDPHYSICS_API UsdPhysicsMassProperties</definition>
        <argsstring>(const float m, const GfMatrix3f &amp;inertiaT, const GfVec3f &amp;com)</argsstring>
        <name>UsdPhysicsMassProperties</name>
        <param>
          <type>const float</type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>inertiaT</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>com</declname>
        </param>
        <briefdescription>
<para>Construct from individual elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="116" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1aad86509e6288a36427fe92f0a99b2916" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_mass_properties" kindref="compound">UsdPhysicsMassProperties</ref></type>
        <definition>USDPHYSICS_API UsdPhysicsMassProperties operator *</definition>
        <argsstring>(const float scale) const</argsstring>
        <name>operator *</name>
        <param>
          <type>const float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Scale mass properties. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>scale</computeroutput> The linear scaling factor to apply to the mass properties. <simplesect kind="return"><para>The scaled mass properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="124" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="124" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a40321c750e19cf25ee69f96ff0143c73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API void</type>
        <definition>USDPHYSICS_API void Translate</definition>
        <argsstring>(const GfVec3f &amp;t)</argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Translate the center of mass by a given vector and adjust the inertia tensor accordingly. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>t</computeroutput> The translation vector for the center of mass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="131" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a483a7ee01059f47c2d3607fab5264589" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
        <definition>const GfMatrix3f&amp; GetInertiaTensor</definition>
        <argsstring>() const</argsstring>
        <name>GetInertiaTensor</name>
        <briefdescription>
<para>Get inertia tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Inertia tensor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="210" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a8bd9024fa4bde46a6b7ebae3f4077ffb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetInertiaTensor</definition>
        <argsstring>(const GfMatrix3f &amp;inTensor)</argsstring>
        <name>SetInertiaTensor</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>inTensor</declname>
        </param>
        <briefdescription>
<para>Set inertia tensor <computeroutput>inTensor</computeroutput> New inertia tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="217" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a013e76c60913e95af68d1b51e841677f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
        <definition>const GfVec3f&amp; GetCenterOfMass</definition>
        <argsstring>() const</argsstring>
        <name>GetCenterOfMass</name>
        <briefdescription>
<para>Get center of mass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Center of mass </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="224" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a57e89390973ae05d0cac8c3aa9d7a767" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetMass</definition>
        <argsstring>() const</argsstring>
        <name>GetMass</name>
        <briefdescription>
<para>Get mass. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mass </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="231" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a26c3085f647b07e7195851d0ed0dd34a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMass</definition>
        <argsstring>(float inMass)</argsstring>
        <name>SetMass</name>
        <param>
          <type>float</type>
          <declname>inMass</declname>
        </param>
        <briefdescription>
<para>Set mass. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>inMass</computeroutput> New mass. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="238" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="238" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a83b4d8634d0f963146f0cff5fff7b04f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>static USDPHYSICS_API GfVec3f GetMassSpaceInertia</definition>
        <argsstring>(const GfMatrix3f &amp;inertia, GfQuatf &amp;massFrame)</argsstring>
        <name>GetMassSpaceInertia</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>inertia</declname>
        </param>
        <param>
          <type><ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &amp;</type>
          <declname>massFrame</declname>
        </param>
        <briefdescription>
<para>Get the entries of the diagonalized inertia tensor and the corresponding reference rotation. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>inertia</computeroutput> The inertia tensor to diagonalize. <computeroutput>massFrame</computeroutput> The frame the diagonalized tensor refers to. <simplesect kind="return"><para>The entries of the diagonalized inertia tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="141" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a47ad9ed69956f4fcb8f8304cb05e4370" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref></type>
        <definition>static USDPHYSICS_API GfMatrix3f TranslateInertia</definition>
        <argsstring>(const GfMatrix3f &amp;inertia, const float mass, const GfVec3f &amp;t)</argsstring>
        <name>TranslateInertia</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>inertia</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Translate an inertia tensor using the parallel axis theorem <computeroutput>inertia</computeroutput> The inertia tensor to translate. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>mass</computeroutput> The mass of the object. <computeroutput>t</computeroutput> The relative frame to translate the inertia tensor to. <simplesect kind="return"><para>The translated inertia tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="153" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="153" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a31e7587d358fbb199f0c9657fac92f58" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref></type>
        <definition>static USDPHYSICS_API GfMatrix3f RotateInertia</definition>
        <argsstring>(const GfMatrix3f &amp;inertia, const GfQuatf &amp;q)</argsstring>
        <name>RotateInertia</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>inertia</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Rotate an inertia tensor around the center of mass <computeroutput>inertia</computeroutput> The inertia tensor to rotate. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>q</computeroutput> The rotation to apply to the inertia tensor. <simplesect kind="return"><para>The rotated inertia tensor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="169" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="169" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_mass_properties_1a7d36cb575813aa3cbf8096ca09c26061" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_mass_properties" kindref="compound">UsdPhysicsMassProperties</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsMassProperties Sum</definition>
        <argsstring>(const UsdPhysicsMassProperties *props, const GfMatrix4f *transforms, const uint32_t count)</argsstring>
        <name>Sum</name>
        <param>
          <type>const <ref refid="class_usd_physics_mass_properties" kindref="compound">UsdPhysicsMassProperties</ref> *</type>
          <declname>props</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>transforms</declname>
        </param>
        <param>
          <type>const uint32_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Sum up individual mass properties. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>props</computeroutput> Array of mass properties to sum up. <computeroutput>transforms</computeroutput> Reference transforms for each mass properties entry. <computeroutput>count</computeroutput> The number of mass properties to sum up. <simplesect kind="return"><para>The summed up mass properties. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/massProperties.h" line="181" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="181" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Mass properties computation class. </para>
    </briefdescription>
    <detaileddescription>
<para>Used to combine together individual mass properties and produce final one. </para>
    </detaileddescription>
    <location file="pxr/usd/usdPhysics/massProperties.h" line="104" column="1" bodyfile="pxr/usd/usdPhysics/massProperties.h" bodystart="103" bodyend="247"/>
    <listofallmembers>
      <member refid="class_usd_physics_mass_properties_1a18cb20890353743c0c629c39868eb5bd" prot="private" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>_centerOfMass</name></member>
      <member refid="class_usd_physics_mass_properties_1a3f350975aec21a6300ddd556e291af2c" prot="private" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>_inertiaTensor</name></member>
      <member refid="class_usd_physics_mass_properties_1a081c74c5b673ccd228bb85114408e663" prot="private" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>_mass</name></member>
      <member refid="class_usd_physics_mass_properties_1a013e76c60913e95af68d1b51e841677f" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>GetCenterOfMass</name></member>
      <member refid="class_usd_physics_mass_properties_1a483a7ee01059f47c2d3607fab5264589" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>GetInertiaTensor</name></member>
      <member refid="class_usd_physics_mass_properties_1a57e89390973ae05d0cac8c3aa9d7a767" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>GetMass</name></member>
      <member refid="class_usd_physics_mass_properties_1a83b4d8634d0f963146f0cff5fff7b04f" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>GetMassSpaceInertia</name></member>
      <member refid="class_usd_physics_mass_properties_1aad86509e6288a36427fe92f0a99b2916" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>operator *</name></member>
      <member refid="class_usd_physics_mass_properties_1a31e7587d358fbb199f0c9657fac92f58" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>RotateInertia</name></member>
      <member refid="class_usd_physics_mass_properties_1a8bd9024fa4bde46a6b7ebae3f4077ffb" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>SetInertiaTensor</name></member>
      <member refid="class_usd_physics_mass_properties_1a26c3085f647b07e7195851d0ed0dd34a" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>SetMass</name></member>
      <member refid="class_usd_physics_mass_properties_1a7d36cb575813aa3cbf8096ca09c26061" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>Sum</name></member>
      <member refid="class_usd_physics_mass_properties_1a40321c750e19cf25ee69f96ff0143c73" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>Translate</name></member>
      <member refid="class_usd_physics_mass_properties_1a47ad9ed69956f4fcb8f8304cb05e4370" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>TranslateInertia</name></member>
      <member refid="class_usd_physics_mass_properties_1a8c739592142bd827ec24765c7d67837e" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>UsdPhysicsMassProperties</name></member>
      <member refid="class_usd_physics_mass_properties_1ae4822a861979e0c61abca371cbba13d6" prot="public" virt="non-virtual"><scope>UsdPhysicsMassProperties</scope><name>UsdPhysicsMassProperties</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
