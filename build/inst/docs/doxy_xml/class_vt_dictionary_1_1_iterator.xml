<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_vt_dictionary_1_1_iterator" kind="class" language="C++" prot="public">
    <compoundname>VtDictionary::Iterator</compoundname>
    <templateparamlist>
      <param>
        <type>class UnderlyingMapPtr</type>
      </param>
      <param>
        <type>class UnderlyingIterator</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_vt_dictionary_1_1_iterator_1a13fe24ca0865b19fbff05ff095c4ffea" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="77" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_vt_dictionary_1_1_iterator_1ae7af2260f0cfea0a6aa040d058717537" prot="public" static="no">
        <type>typename UnderlyingIterator::value_type</type>
        <definition>using value_type =  typename UnderlyingIterator::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="78" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_vt_dictionary_1_1_iterator_1a26d7957265fd2211c485cff7c7ed3202" prot="public" static="no">
        <type>typename UnderlyingIterator::reference</type>
        <definition>using reference =  typename UnderlyingIterator::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="79" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_vt_dictionary_1_1_iterator_1af2d9107de4da8fa61c7e7e264595e89b" prot="public" static="no">
        <type>typename UnderlyingIterator::pointer</type>
        <definition>using pointer =  typename UnderlyingIterator::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="80" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_vt_dictionary_1_1_iterator_1ab71e5cd5b3c0ee109e3d9653840284ae" prot="public" static="no">
        <type>typename UnderlyingIterator::difference_type</type>
        <definition>using difference_type =  typename UnderlyingIterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="81" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_vt_dictionary_1_1_iterator_1a171a4ab6d1604ea84767eac0514d5d60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class VtDictionary</definition>
        <argsstring></argsstring>
        <name>VtDictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="143" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_vt_dictionary_1_1_iterator_1aa039f12557eda65403eeef4c257a9b83" prot="private" static="no" mutable="no">
        <type>UnderlyingIterator</type>
        <definition>UnderlyingIterator _underlyingIterator</definition>
        <argsstring></argsstring>
        <name>_underlyingIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="185" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_vt_dictionary_1_1_iterator_1ab57d27de0c718068266d444089de8db4" prot="private" static="no" mutable="no">
        <type>UnderlyingMapPtr</type>
        <definition>UnderlyingMapPtr _underlyingMap</definition>
        <argsstring></argsstring>
        <name>_underlyingMap</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="186" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a0eb692aa72a40a73a4787593425dceb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>()=default</argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1abfc199d718bae539dc9080c845d3e4fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherUnderlyingMapPtr</type>
          </param>
          <param>
            <type>class OtherUnderlyingIterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; const &amp;other)</argsstring>
        <name>Iterator</name>
        <param>
          <type>Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="90" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="95" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="96" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1aef12ef33726bc591f569f822c7b5ac41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator &amp;</type>
        <definition>Iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="98" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1ac1702aedba13b4112b891b58dfd78eba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="103" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a34e5ed23ddc31b7d8d4bfb5bfacbaab6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator &amp;</type>
        <definition>Iterator&amp; operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="109" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a826422223993becdf7c1e60aea56e9c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Iterator</type>
        <definition>Iterator operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="114" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a3545f83b0229ea2b8aadb18bf39b7b59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherUnderlyingMapPtr</type>
          </param>
          <param>
            <type>class OtherUnderlyingIterator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="121" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a76734234882b71bfaf957bb73ceaf804" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherUnderlyingMapPtr</type>
          </param>
          <param>
            <type>class OtherUnderlyingIterator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="127" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="127" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a2d845add2dfe2ff9bbb7fe1c4e2a2cac" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(UnderlyingMapPtr m, UnderlyingIterator i)</argsstring>
        <name>Iterator</name>
        <param>
          <type>UnderlyingMapPtr</type>
          <declname>m</declname>
        </param>
        <param>
          <type>UnderlyingIterator</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="136" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1a5acbeaa6093938cfaeb9a121a78f4295" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>UnderlyingIterator</type>
        <definition>UnderlyingIterator GetUnderlyingIterator</definition>
        <argsstring>(UnderlyingMapPtr map) const</argsstring>
        <name>GetUnderlyingIterator</name>
        <param>
          <type>UnderlyingMapPtr</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="145" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="145" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1aeb2624c7a86b765725fd80cd426e147d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="157" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="157" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_vt_dictionary_1_1_iterator_1acd3eab320e27cd013e9c0687b26c1974" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class OtherUnderlyingMapPtr</type>
          </param>
          <param>
            <type>class OtherUnderlyingIterator</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool equal</definition>
        <argsstring>(Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; const &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type>Iterator&lt; OtherUnderlyingMapPtr, OtherUnderlyingIterator &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/dictionary.h" line="176" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="176" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/vt/dictionary.h" line="75" column="1" bodyfile="pxr/base/vt/dictionary.h" bodystart="75" bodyend="187"/>
    <listofallmembers>
      <member refid="class_vt_dictionary_1_1_iterator_1aa039f12557eda65403eeef4c257a9b83" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>_underlyingIterator</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1ab57d27de0c718068266d444089de8db4" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>_underlyingMap</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1ab71e5cd5b3c0ee109e3d9653840284ae" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>difference_type</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1acd3eab320e27cd013e9c0687b26c1974" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>equal</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a5acbeaa6093938cfaeb9a121a78f4295" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>GetUnderlyingIterator</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1aeb2624c7a86b765725fd80cd426e147d" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>increment</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a0eb692aa72a40a73a4787593425dceb2" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>Iterator</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1abfc199d718bae539dc9080c845d3e4fb" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>Iterator</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a2d845add2dfe2ff9bbb7fe1c4e2a2cac" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>Iterator</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a13fe24ca0865b19fbff05ff095c4ffea" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>iterator_category</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator *</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a76734234882b71bfaf957bb73ceaf804" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator!=</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1aef12ef33726bc591f569f822c7b5ac41" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator++</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1ac1702aedba13b4112b891b58dfd78eba" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator++</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a34e5ed23ddc31b7d8d4bfb5bfacbaab6" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator--</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a826422223993becdf7c1e60aea56e9c0" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator--</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a3545f83b0229ea2b8aadb18bf39b7b59" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>operator==</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1af2d9107de4da8fa61c7e7e264595e89b" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>pointer</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a26d7957265fd2211c485cff7c7ed3202" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>reference</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1ae7af2260f0cfea0a6aa040d058717537" prot="public" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>value_type</name></member>
      <member refid="class_vt_dictionary_1_1_iterator_1a171a4ab6d1604ea84767eac0514d5d60" prot="private" virt="non-virtual"><scope>VtDictionary::Iterator</scope><name>VtDictionary</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
