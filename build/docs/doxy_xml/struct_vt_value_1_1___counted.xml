<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_vt_value_1_1___counted" kind="struct" language="C++" prot="private">
    <compoundname>VtValue::_Counted</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_vt_value_1_1___counted_1a52468e67513efd87d3bc44190f34c10b" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T _obj</definition>
        <argsstring></argsstring>
        <name>_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="179" column="1" bodyfile="pxr/base/vt/value.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vt_value_1_1___counted_1aec724bca2a3f9da9c59aefe5a3a0c09c" prot="private" static="no" mutable="yes">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; _refCount</definition>
        <argsstring></argsstring>
        <name>_refCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="180" column="1" bodyfile="pxr/base/vt/value.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_vt_value_1_1___counted_1ad7df32f1ed42eac7a1dcea44a54e3f69" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>_Counted</definition>
        <argsstring>(T const &amp;obj)</argsstring>
        <name>_Counted</name>
        <param>
          <type>T const &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="171" column="1" bodyfile="pxr/base/vt/value.h" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___counted_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsUnique</definition>
        <argsstring>() const</argsstring>
        <name>IsUnique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="174" column="1" bodyfile="pxr/base/vt/value.h" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___counted_1a772d8ac6bcaef01ed7da6923d3f094ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>T const&amp; Get</definition>
        <argsstring>() const</argsstring>
        <name>Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="175" column="1" bodyfile="pxr/base/vt/value.h" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___counted_1ab3ad6055886c6ba5a47f4ef891458712" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; GetMutable</definition>
        <argsstring>()</argsstring>
        <name>GetMutable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="176" column="1" bodyfile="pxr/base/vt/value.h" bodystart="176" bodyend="176"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_vt_value_1_1___counted_1a7c2d506d6a7662c6c5f2620ceeb1fc80" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void intrusive_ptr_add_ref</definition>
        <argsstring>(_Counted const *d)</argsstring>
        <name>intrusive_ptr_add_ref</name>
        <param>
          <type>_Counted const *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="182" column="1" bodyfile="pxr/base/vt/value.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="friend" id="struct_vt_value_1_1___counted_1a303cbe911ba4cdcf35b2a34dc8191be0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void intrusive_ptr_release</definition>
        <argsstring>(_Counted const *d)</argsstring>
        <name>intrusive_ptr_release</name>
        <param>
          <type>_Counted const *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="185" column="1" bodyfile="pxr/base/vt/value.h" bodystart="185" bodyend="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/vt/value.h" line="170" column="1" bodyfile="pxr/base/vt/value.h" bodystart="170" bodyend="191"/>
    <listofallmembers>
      <member refid="struct_vt_value_1_1___counted_1ad7df32f1ed42eac7a1dcea44a54e3f69" prot="public" virt="non-virtual"><scope>VtValue::_Counted</scope><name>_Counted</name></member>
      <member refid="struct_vt_value_1_1___counted_1a52468e67513efd87d3bc44190f34c10b" prot="private" virt="non-virtual"><scope>VtValue::_Counted</scope><name>_obj</name></member>
      <member refid="struct_vt_value_1_1___counted_1aec724bca2a3f9da9c59aefe5a3a0c09c" prot="private" virt="non-virtual"><scope>VtValue::_Counted</scope><name>_refCount</name></member>
      <member refid="struct_vt_value_1_1___counted_1a772d8ac6bcaef01ed7da6923d3f094ed" prot="public" virt="non-virtual"><scope>VtValue::_Counted</scope><name>Get</name></member>
      <member refid="struct_vt_value_1_1___counted_1ab3ad6055886c6ba5a47f4ef891458712" prot="public" virt="non-virtual"><scope>VtValue::_Counted</scope><name>GetMutable</name></member>
      <member refid="struct_vt_value_1_1___counted_1a7c2d506d6a7662c6c5f2620ceeb1fc80" prot="private" virt="non-virtual"><scope>VtValue::_Counted</scope><name>intrusive_ptr_add_ref</name></member>
      <member refid="struct_vt_value_1_1___counted_1a303cbe911ba4cdcf35b2a34dc8191be0" prot="private" virt="non-virtual"><scope>VtValue::_Counted</scope><name>intrusive_ptr_release</name></member>
      <member refid="struct_vt_value_1_1___counted_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>VtValue::_Counted</scope><name>IsUnique</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
