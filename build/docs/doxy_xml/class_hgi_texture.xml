<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_texture" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HgiTexture</compoundname>
    <derivedcompoundref refid="class_hgi_g_l_texture" prot="public" virt="non-virtual">HgiGLTexture</derivedcompoundref>
    <includes refid="hgi_2texture_8h" local="no">texture.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hgi_texture_1acc1a65bd09eb1e99f7b1b99012e156af" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_hgi_texture_desc" kindref="compound">HgiTextureDesc</ref></type>
        <definition>HgiTextureDesc _descriptor</definition>
        <argsstring></argsstring>
        <name>_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="197" column="1" bodyfile="pxr/imaging/hgi/texture.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_texture_1ae85405e130a25db15c34e2a78cd10ca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGI_API</type>
        <definition>virtual HGI_API ~HgiTexture</definition>
        <argsstring>()</argsstring>
        <name>~HgiTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_1ae9c921439fbed3805052964de138bcc1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API <ref refid="struct_hgi_texture_desc" kindref="compound">HgiTextureDesc</ref> const  &amp;</type>
        <definition>HGI_API HgiTextureDesc const&amp; GetDescriptor</definition>
        <argsstring>() const</argsstring>
        <name>GetDescriptor</name>
        <briefdescription>
<para>The descriptor describes the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_1afb9f5da99a13e9adcab7f87cb9a6ad94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API size_t</type>
        <definition>virtual HGI_API size_t GetByteSizeOfResource</definition>
        <argsstring>() const =0</argsstring>
        <name>GetByteSizeOfResource</name>
        <reimplementedby refid="class_hgi_g_l_texture_1aaf2f07918f87f57adccda3e250297da7">GetByteSizeOfResource</reimplementedby>
        <briefdescription>
<para>Returns the byte size of the GPU texture. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be helpful if the application wishes to tally up memory usage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_1a1c1b84de203362af87c23d73c8f8d395" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API uint64_t</type>
        <definition>virtual HGI_API uint64_t GetRawResource</definition>
        <argsstring>() const =0</argsstring>
        <name>GetRawResource</name>
        <reimplementedby refid="class_hgi_g_l_texture_1adc3ffb4c04b3ab04225e25cf3f7dfe05">GetRawResource</reimplementedby>
        <briefdescription>
<para>This function returns the handle to the <ref refid="class_hgi" kindref="compound">Hgi</ref> backend&apos;s gpu resource, cast to a uint64_t. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients should avoid using this function and instead use <ref refid="class_hgi" kindref="compound">Hgi</ref> base classes so that client code works with any <ref refid="class_hgi" kindref="compound">Hgi</ref> platform. For transitioning code to <ref refid="class_hgi" kindref="compound">Hgi</ref>, it can however we useful to directly access a platform&apos;s internal resource handles. There is no safety provided in using this. If you by accident pass a HgiMetal resource into an OpenGL call, bad things may happen. In OpenGL this returns the GLuint resource name. In Metal this returns the id&lt;MTLTexture&gt; as uint64_t. In Vulkan this returns the VkImage as uint64_t. In DX12 this returns the ID3D12Resource pointer as uint64_t. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_hgi_texture_1ae44fa02749f7d03b660d671e3117a11c" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API size_t</type>
        <definition>static HGI_API size_t _GetByteSizeOfResource</definition>
        <argsstring>(const HgiTextureDesc &amp;descriptor)</argsstring>
        <name>_GetByteSizeOfResource</name>
        <param>
          <type>const <ref refid="struct_hgi_texture_desc" kindref="compound">HgiTextureDesc</ref> &amp;</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="192" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hgi_texture_1a9a0c27a607e7e34d13ad2550e9de6ef6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API</type>
        <definition>HGI_API HgiTexture</definition>
        <argsstring>(HgiTextureDesc const &amp;desc)</argsstring>
        <name>HgiTexture</name>
        <param>
          <type><ref refid="struct_hgi_texture_desc" kindref="compound">HgiTextureDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="195" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hgi_texture_1a0a1aaf246d8dd03e4df0fba17269f0d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiTexture</definition>
        <argsstring>()=delete</argsstring>
        <name>HgiTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_1ad11c24c2e17234f2eb540d489bd5919b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hgi_texture" kindref="compound">HgiTexture</ref> &amp;</type>
        <definition>HgiTexture&amp; operator=</definition>
        <argsstring>(const HgiTexture &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hgi_texture" kindref="compound">HgiTexture</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_1a97c3659fb34368e9e9c4ffb1a3f51fe4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiTexture</definition>
        <argsstring>(const HgiTexture &amp;)=delete</argsstring>
        <name>HgiTexture</name>
        <param>
          <type>const <ref refid="class_hgi_texture" kindref="compound">HgiTexture</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="202" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a graphics platform independent GPU texture resource. </para>
    </briefdescription>
    <detaileddescription>
<para>Textures should be created via <ref refid="class_hgi_1a203cd5ef883f0ba41ce00831af6e96cd" kindref="member">Hgi::CreateTexture</ref>.</para>
<para>Base class for <ref refid="class_hgi" kindref="compound">Hgi</ref> textures. To the client (HdSt) texture resources are referred to via opaque, stateless handles (HgTextureHandle). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4000">
        <label>HgiTexture</label>
        <link refid="class_hgi_texture"/>
      </node>
      <node id="4001">
        <label>HgiGLTexture</label>
        <link refid="class_hgi_g_l_texture"/>
        <childnode refid="4000" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4003">
        <label>HgiTextureDesc</label>
        <link refid="struct_hgi_texture_desc"/>
        <childnode refid="4004" relation="usage">
          <edgelabel>dimensions</edgelabel>
        </childnode>
        <childnode refid="4005" relation="usage">
          <edgelabel>componentMapping</edgelabel>
        </childnode>
      </node>
      <node id="4002">
        <label>HgiTexture</label>
        <link refid="class_hgi_texture"/>
        <childnode refid="4003" relation="usage">
          <edgelabel>_descriptor</edgelabel>
        </childnode>
      </node>
      <node id="4004">
        <label>GfVec3i</label>
        <link refid="class_gf_vec3i"/>
      </node>
      <node id="4005">
        <label>HgiComponentMapping</label>
        <link refid="struct_hgi_component_mapping"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/texture.h" line="161" column="1" bodyfile="pxr/imaging/hgi/texture.h" bodystart="160" bodyend="203"/>
    <listofallmembers>
      <member refid="class_hgi_texture_1acc1a65bd09eb1e99f7b1b99012e156af" prot="protected" virt="non-virtual"><scope>HgiTexture</scope><name>_descriptor</name></member>
      <member refid="class_hgi_texture_1ae44fa02749f7d03b660d671e3117a11c" prot="protected" virt="non-virtual"><scope>HgiTexture</scope><name>_GetByteSizeOfResource</name></member>
      <member refid="class_hgi_texture_1afb9f5da99a13e9adcab7f87cb9a6ad94" prot="public" virt="pure-virtual"><scope>HgiTexture</scope><name>GetByteSizeOfResource</name></member>
      <member refid="class_hgi_texture_1ae9c921439fbed3805052964de138bcc1" prot="public" virt="non-virtual"><scope>HgiTexture</scope><name>GetDescriptor</name></member>
      <member refid="class_hgi_texture_1a1c1b84de203362af87c23d73c8f8d395" prot="public" virt="pure-virtual"><scope>HgiTexture</scope><name>GetRawResource</name></member>
      <member refid="class_hgi_texture_1a9a0c27a607e7e34d13ad2550e9de6ef6" prot="protected" virt="non-virtual"><scope>HgiTexture</scope><name>HgiTexture</name></member>
      <member refid="class_hgi_texture_1a0a1aaf246d8dd03e4df0fba17269f0d0" prot="private" virt="non-virtual"><scope>HgiTexture</scope><name>HgiTexture</name></member>
      <member refid="class_hgi_texture_1a97c3659fb34368e9e9c4ffb1a3f51fe4" prot="private" virt="non-virtual"><scope>HgiTexture</scope><name>HgiTexture</name></member>
      <member refid="class_hgi_texture_1ad11c24c2e17234f2eb540d489bd5919b" prot="private" virt="non-virtual"><scope>HgiTexture</scope><name>operator=</name></member>
      <member refid="class_hgi_texture_1ae85405e130a25db15c34e2a78cd10ca6" prot="public" virt="virtual"><scope>HgiTexture</scope><name>~HgiTexture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
