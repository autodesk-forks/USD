<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="computation_8h" kind="file" language="C++">
    <compoundname>computation.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="imaging_2hd_st_2api_8h" local="yes">pxr/imaging/hdSt/api.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includedby refid="copy_computation_8h" local="yes">pxr/imaging/hdSt/copyComputation.h</includedby>
    <includedby refid="dome_light_computations_8h" local="yes">pxr/imaging/hdSt/domeLightComputations.h</includedby>
    <includedby refid="ext_comp_gpu_computation_8h" local="yes">pxr/imaging/hdSt/extCompGpuComputation.h</includedby>
    <includedby refid="t_2flat_normals_8h" local="yes">pxr/imaging/hdSt/flatNormals.h</includedby>
    <includedby refid="t_2smooth_normals_8h" local="yes">pxr/imaging/hdSt/smoothNormals.h</includedby>
    <incdepgraph>
      <node id="138392">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="138393" relation="include">
        </childnode>
      </node>
      <node id="138391">
        <label>pxr/imaging/hdSt/api.h</label>
        <link refid="imaging_2hd_st_2api_8h_source"/>
        <childnode refid="138392" relation="include">
        </childnode>
      </node>
      <node id="138389">
        <label>pxr/imaging/hdSt/computation.h</label>
        <link refid="computation_8h"/>
        <childnode refid="138390" relation="include">
        </childnode>
        <childnode refid="138391" relation="include">
        </childnode>
        <childnode refid="138394" relation="include">
        </childnode>
        <childnode refid="138395" relation="include">
        </childnode>
      </node>
      <node id="138390">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="138395">
        <label>vector</label>
      </node>
      <node id="138393">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="138394">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="138396">
        <label>pxr/imaging/hdSt/computation.h</label>
        <link refid="computation_8h"/>
        <childnode refid="138397" relation="include">
        </childnode>
        <childnode refid="138398" relation="include">
        </childnode>
        <childnode refid="138399" relation="include">
        </childnode>
        <childnode refid="138400" relation="include">
        </childnode>
        <childnode refid="138401" relation="include">
        </childnode>
      </node>
      <node id="138401">
        <label>pxr/imaging/hdSt/smoothNormals.h</label>
        <link refid="t_2smooth_normals_8h_source"/>
      </node>
      <node id="138397">
        <label>pxr/imaging/hdSt/copyComputation.h</label>
        <link refid="copy_computation_8h_source"/>
      </node>
      <node id="138398">
        <label>pxr/imaging/hdSt/domeLightComputations.h</label>
        <link refid="dome_light_computations_8h_source"/>
      </node>
      <node id="138400">
        <label>pxr/imaging/hdSt/flatNormals.h</label>
        <link refid="t_2flat_normals_8h_source"/>
      </node>
      <node id="138399">
        <label>pxr/imaging/hdSt/extCompGpuComputation.h</label>
        <link refid="ext_comp_gpu_computation_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_hd_st_computation" prot="public">HdStComputation</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="computation_8h_1a9aa358108aaa5eed2b219fabf97a9051" prot="public" static="no">
        <type>std::shared_ptr&lt; class <ref refid="class_hd_buffer_array_range" kindref="compound">HdBufferArrayRange</ref> &gt;</type>
        <definition>using HdBufferArrayRangeSharedPtr =  std::shared_ptr&lt;class HdBufferArrayRange&gt;</definition>
        <argsstring></argsstring>
        <name>HdBufferArrayRangeSharedPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/computation.h" line="38" column="1" bodyfile="pxr/imaging/hdSt/computation.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="computation_8h_1aa9e334cdd759d6034acf4bb6537bb6bc" prot="public" static="no">
        <type>std::vector&lt; struct <ref refid="struct_hd_buffer_spec" kindref="compound">HdBufferSpec</ref> &gt;</type>
        <definition>using HdBufferSpecVector =  std::vector&lt;struct HdBufferSpec&gt;</definition>
        <argsstring></argsstring>
        <name>HdBufferSpecVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/computation.h" line="39" column="1" bodyfile="pxr/imaging/hdSt/computation.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="computation_8h_1a172f3da0e97aeef412997a16a7dd0946" prot="public" static="no">
        <type>std::shared_ptr&lt; class <ref refid="class_hd_st_computation" kindref="compound">HdStComputation</ref> &gt;</type>
        <definition>using HdStComputationSharedPtr =  std::shared_ptr&lt;class HdStComputation&gt;</definition>
        <argsstring></argsstring>
        <name>HdStComputationSharedPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/computation.h" line="41" column="1" bodyfile="pxr/imaging/hdSt/computation.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="computation_8h_1a301c457d53e2cd6bd30b2300afe861f7" prot="public" static="no">
        <type>std::vector&lt; HdStComputationSharedPtr &gt;</type>
        <definition>using HdStComputationSharedPtrVector =  std::vector&lt;HdStComputationSharedPtr&gt;</definition>
        <argsstring></argsstring>
        <name>HdStComputationSharedPtrVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/computation.h" line="42" column="1" bodyfile="pxr/imaging/hdSt/computation.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_IMAGING_HD_ST_COMPUTATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_IMAGING_HD_ST_COMPUTATION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hdSt/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_hd_resource_registry" kindref="compound">HdResourceRegistry</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HdBufferArrayRangeSharedPtr<sp/>=<sp/>std::shared_ptr&lt;class<sp/>HdBufferArrayRange&gt;;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HdBufferSpecVector<sp/>=<sp/>std::vector&lt;struct<sp/>HdBufferSpec&gt;;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HdStComputationSharedPtr<sp/>=<sp/>std::shared_ptr&lt;class<sp/>HdStComputation&gt;;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HdStComputationSharedPtrVector<sp/>=<sp/>std::vector&lt;HdStComputationSharedPtr&gt;;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_hd_st_computation" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_hd_st_computation" kindref="compound">HdStComputation</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>HDST_API</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_hd_st_computation" kindref="compound">HdStComputation</ref>();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_hd_st_computation_1a0868e343ecbcdb8a87d6b26653d18fca" kindref="member">Execute</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HdBufferArrayRangeSharedPtr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;range,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_hd_resource_registry" kindref="compound">HdResourceRegistry</ref><sp/>*resourceRegistry)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_hd_st_computation_1ab35f67106a7590bcd1c96695a7ac3f4c" kindref="member">GetNumOutputElements</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_hd_st_computation_1a8a168db3ae7e1b0a8e17ed98f40f9f4e" kindref="member">GetBufferSpecs</ref>(HdBufferSpecVector<sp/>*specs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_hd_st_computation_1a9dcb9b43a3d0fa9003d4c1c9d921f6b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_hd_st_computation_1a9dcb9b43a3d0fa9003d4c1c9d921f6b2" kindref="member">IsValid</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>PXR_IMAGING_HD_ST_COMPUTATION_H</highlight></codeline>
    </programlisting>
    <location file="pxr/imaging/hdSt/computation.h"/>
  </compounddef>
</doxygen>
