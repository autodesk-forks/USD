<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___usd_skel___transform_composition_utils" kind="group">
    <compoundname>UsdSkel_TransformCompositionUtils</compoundname>
    <title>Transform Composition Utils</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1gad8fb8cd795dd5417781731c126f491d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelDecomposeTransform</definition>
        <argsstring>(const Matrix4 &amp;xform, GfVec3f *translate, GfRotation *rotate, GfVec3h *scale)</argsstring>
        <name>UsdSkelDecomposeTransform</name>
        <param>
          <type>const Matrix4 &amp;</type>
          <declname>xform</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>translate</declname>
        </param>
        <param>
          <type><ref refid="class_gf_rotation" kindref="compound">GfRotation</ref> *</type>
          <declname>rotate</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Decompose a transform into translate/rotate/scale components. </para>
        </briefdescription>
        <detaileddescription>
<para>The transform order for decomposition is scale, rotate, translate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1ga3f3ae03fbcd8b83c2804dc214e5b99b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelDecomposeTransform</definition>
        <argsstring>(const Matrix4 &amp;xform, GfVec3f *translate, GfQuatf *rotate, GfVec3h *scale)</argsstring>
        <name>UsdSkelDecomposeTransform</name>
        <param>
          <type>const Matrix4 &amp;</type>
          <declname>xform</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>translate</declname>
        </param>
        <param>
          <type><ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> *</type>
          <declname>rotate</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1ga457d8118163ca7ff9baec7a810972e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelDecomposeTransforms</definition>
        <argsstring>(TfSpan&lt; const GfMatrix4d &gt; xforms, TfSpan&lt; GfVec3f &gt; translations, TfSpan&lt; GfQuatf &gt; rotations, TfSpan&lt; GfVec3h &gt; scales)</argsstring>
        <name>UsdSkelDecomposeTransforms</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>translations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &gt;</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &gt;</type>
          <declname>scales</declname>
        </param>
        <briefdescription>
<para>Decompose an array of transforms into translate/rotate/scale components. </para>
        </briefdescription>
        <detaileddescription>
<para>All spans must be the same size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1gacce5e2206f72d121ddaac6bd9e09bcc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelDecomposeTransforms</definition>
        <argsstring>(TfSpan&lt; const GfMatrix4f &gt; xforms, TfSpan&lt; GfVec3f &gt; translations, TfSpan&lt; GfQuatf &gt; rotations, TfSpan&lt; GfVec3h &gt; scales)</argsstring>
        <name>UsdSkelDecomposeTransforms</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>translations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &gt;</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &gt;</type>
          <declname>scales</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1gaa739383f893eef1c7cb0868c078328d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelDecomposeTransforms</definition>
        <argsstring>(const VtMatrix4dArray &amp;xforms, VtVec3fArray *translations, VtQuatfArray *rotations, VtVec3hArray *scales)</argsstring>
        <name>UsdSkelDecomposeTransforms</name>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>translations</declname>
        </param>
        <param>
          <type>VtQuatfArray *</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type>VtVec3hArray *</type>
          <declname>scales</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000129"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1gae08cda17ff7925996d26aace2d51e9d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelDecomposeTransforms</definition>
        <argsstring>(const GfMatrix4d *xforms, GfVec3f *translations, GfQuatf *rotations, GfVec3h *scales, size_t count)</argsstring>
        <name>UsdSkelDecomposeTransforms</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>translations</declname>
        </param>
        <param>
          <type><ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> *</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>scales</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000130"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1ga33fccd269f629a76d334f2cce569c368" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API void</type>
        <definition>USDSKEL_API void UsdSkelMakeTransform</definition>
        <argsstring>(const GfVec3f &amp;translate, const GfMatrix3f &amp;rotate, const GfVec3h &amp;scale, Matrix4 *xform)</argsstring>
        <name>UsdSkelMakeTransform</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>translate</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>rotate</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>Matrix4 *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
<para>Create a transform from translate/rotate/scale components. </para>
        </briefdescription>
        <detaileddescription>
<para>This performs the inverse of UsdSkelDecomposeTransform. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1gaf82096b2d57b511cfb041534e4ff9534" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API void</type>
        <definition>USDSKEL_API void UsdSkelMakeTransform</definition>
        <argsstring>(const GfVec3f &amp;translate, const GfQuatf &amp;rotate, const GfVec3h &amp;scale, Matrix4 *xform)</argsstring>
        <name>UsdSkelMakeTransform</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>translate</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &amp;</type>
          <declname>rotate</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>Matrix4 *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="336" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1ga9edeef3ded1f2765880a5a70ee12fba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelMakeTransforms</definition>
        <argsstring>(TfSpan&lt; const GfVec3f &gt; translations, TfSpan&lt; const GfQuatf &gt; rotations, TfSpan&lt; const GfVec3h &gt; scales, TfSpan&lt; GfMatrix4d &gt; xforms)</argsstring>
        <name>UsdSkelMakeTransforms</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>translations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &gt;</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &gt;</type>
          <declname>scales</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <briefdescription>
<para>Create transforms from arrays of components. </para>
        </briefdescription>
        <detaileddescription>
<para>All spans must be the same size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1ga50633d752df20889d60a9f6f4b080183" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelMakeTransforms</definition>
        <argsstring>(TfSpan&lt; const GfVec3f &gt; translations, TfSpan&lt; const GfQuatf &gt; rotations, TfSpan&lt; const GfVec3h &gt; scales, TfSpan&lt; GfMatrix4f &gt; xforms)</argsstring>
        <name>UsdSkelMakeTransforms</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>translations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> &gt;</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &gt;</type>
          <declname>scales</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>xforms</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="354" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1ga0d5fd23adbea5140446b79913c595e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelMakeTransforms</definition>
        <argsstring>(const VtVec3fArray &amp;translations, const VtQuatfArray &amp;rotations, const VtVec3hArray &amp;scales, VtMatrix4dArray *xforms)</argsstring>
        <name>UsdSkelMakeTransforms</name>
        <param>
          <type>const VtVec3fArray &amp;</type>
          <declname>translations</declname>
        </param>
        <param>
          <type>const VtQuatfArray &amp;</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type>const VtVec3hArray &amp;</type>
          <declname>scales</declname>
        </param>
        <param>
          <type>VtMatrix4dArray *</type>
          <declname>xforms</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000131"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="364" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___transform_composition_utils_1gad80f891c3cfe2de677fc04020d5768b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelMakeTransforms</definition>
        <argsstring>(const GfVec3f *translations, const GfQuatf *rotations, const GfVec3h *scales, GfMatrix4d *xforms, size_t count)</argsstring>
        <name>UsdSkelMakeTransforms</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>translations</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> *</type>
          <declname>rotations</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>scales</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000132"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="373" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utiltiies for converting transforms to and from component (translate, rotate, scale) form. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
