<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_arch_regex" kind="class" language="C++" prot="public">
    <compoundname>ArchRegex</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_arch_regex_1a496ad11ae0768121005ca2cae10feccd" prot="public" static="no" strong="no">
        <type>unsigned int</type>
        <name>@1</name>
        <enumvalue id="class_arch_regex_1a496ad11ae0768121005ca2cae10feccda0f5ef49c1df045329c10451d46f10f5a" prot="public">
          <name>CASE_INSENSITIVE</name>
          <initializer>= 1u</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_arch_regex_1a496ad11ae0768121005ca2cae10feccda0602b6544e5db8ed3e59ccb9cd97ce7d" prot="public">
          <name>GLOB</name>
          <initializer>= 2u</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="37" column="1" bodyfile="pxr/base/arch/regex.h" bodystart="37" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_arch_regex_1aa10da4d594a7cdf3b400f5866ff277ea" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int _flags</definition>
        <argsstring></argsstring>
        <name>_flags</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="72" column="1" bodyfile="pxr/base/arch/regex.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_arch_regex_1a675a1ab0f89c56317181987e8d345842" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string _error</definition>
        <argsstring></argsstring>
        <name>_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="73" column="1" bodyfile="pxr/base/arch/regex.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_arch_regex_1a26610d8990afc1ce24629feb1f841cbd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; const _Impl &gt;</type>
        <definition>std::shared_ptr&lt;const _Impl&gt; _impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="74" column="1" bodyfile="pxr/base/arch/regex.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_arch_regex_1a071faba5183b7b980f2f2ad85b548667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArchRegex</definition>
        <argsstring>()=default</argsstring>
        <name>ArchRegex</name>
        <briefdescription>
<para>Create an empty regex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1a59f1ec357b1abb150ea063a1fd89fc88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArchRegex</definition>
        <argsstring>(ArchRegex &amp;&amp;) noexcept=default</argsstring>
        <name>ArchRegex</name>
        <param>
          <type>ArchRegex &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1a6f4cb7a10cc0b4297ee149637d9cef1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ArchRegex</definition>
        <argsstring>(ArchRegex const &amp;)=default</argsstring>
        <name>ArchRegex</name>
        <param>
          <type>ArchRegex const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1a5ee950aaaf4c51af01d02a4fae2d37a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArchRegex &amp;</type>
        <definition>ArchRegex&amp; operator=</definition>
        <argsstring>(ArchRegex &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>ArchRegex &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1abced607d437f0b625c18d3762448a1d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ArchRegex &amp;</type>
        <definition>ArchRegex&amp; operator=</definition>
        <argsstring>(ArchRegex const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>ArchRegex const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1aa5831a7a64b71c1857c7cd14d55901a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API</type>
        <definition>ARCH_API ArchRegex</definition>
        <argsstring>(const std::string &amp;pattern, unsigned int flags=0)</argsstring>
        <name>ArchRegex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>flags</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Create with pattern and optional flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1a31b72d1e7575bb1caa23c90cd548a3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API</type>
        <definition>ARCH_API ~ArchRegex</definition>
        <argsstring>()</argsstring>
        <name>~ArchRegex</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1a49dc90534c7ea6891f8f39f472ca69b7" prot="public" static="no" const="yes" explicit="yes" inline="no" virt="non-virtual">
        <type>ARCH_API</type>
        <definition>ARCH_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the regex is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1ac01aa452f2f6ade514c59c07aa9b984c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API std::string</type>
        <definition>ARCH_API std::string GetError</definition>
        <argsstring>() const</argsstring>
        <name>GetError</name>
        <briefdescription>
<para>Returns the reason the regex is invalid or the empty string if it&apos;s valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1af3897fc8f821ab4b99df354dc3b2a33c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API unsigned int</type>
        <definition>ARCH_API unsigned int GetFlags</definition>
        <argsstring>() const</argsstring>
        <name>GetFlags</name>
        <briefdescription>
<para>Returns the flags used to construct the regex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_arch_regex_1a6346a6338820c2cdb34cc0bde0a118f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ARCH_API bool</type>
        <definition>ARCH_API bool Match</definition>
        <argsstring>(const std::string &amp;query) const</argsstring>
        <name>Match</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>query</declname>
        </param>
        <briefdescription>
<para>Returns <computeroutput>true</computeroutput> if the regex matches <computeroutput>query</computeroutput> anywhere, otherwise returns <computeroutput>false</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/arch/regex.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/arch/regex.h" line="35" column="1" bodyfile="pxr/base/arch/regex.h" bodystart="35" bodyend="75"/>
    <listofallmembers>
      <member refid="class_arch_regex_1a675a1ab0f89c56317181987e8d345842" prot="private" virt="non-virtual"><scope>ArchRegex</scope><name>_error</name></member>
      <member refid="class_arch_regex_1aa10da4d594a7cdf3b400f5866ff277ea" prot="private" virt="non-virtual"><scope>ArchRegex</scope><name>_flags</name></member>
      <member refid="class_arch_regex_1a26610d8990afc1ce24629feb1f841cbd" prot="private" virt="non-virtual"><scope>ArchRegex</scope><name>_impl</name></member>
      <member refid="class_arch_regex_1a071faba5183b7b980f2f2ad85b548667" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>ArchRegex</name></member>
      <member refid="class_arch_regex_1a59f1ec357b1abb150ea063a1fd89fc88" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>ArchRegex</name></member>
      <member refid="class_arch_regex_1a6f4cb7a10cc0b4297ee149637d9cef1c" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>ArchRegex</name></member>
      <member refid="class_arch_regex_1aa5831a7a64b71c1857c7cd14d55901a0" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>ArchRegex</name></member>
      <member refid="class_arch_regex_1a496ad11ae0768121005ca2cae10feccda0f5ef49c1df045329c10451d46f10f5a" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>CASE_INSENSITIVE</name></member>
      <member refid="class_arch_regex_1ac01aa452f2f6ade514c59c07aa9b984c" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>GetError</name></member>
      <member refid="class_arch_regex_1af3897fc8f821ab4b99df354dc3b2a33c" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>GetFlags</name></member>
      <member refid="class_arch_regex_1a496ad11ae0768121005ca2cae10feccda0602b6544e5db8ed3e59ccb9cd97ce7d" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>GLOB</name></member>
      <member refid="class_arch_regex_1a6346a6338820c2cdb34cc0bde0a118f4" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>Match</name></member>
      <member refid="class_arch_regex_1a49dc90534c7ea6891f8f39f472ca69b7" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>operator bool</name></member>
      <member refid="class_arch_regex_1a5ee950aaaf4c51af01d02a4fae2d37a1" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>operator=</name></member>
      <member refid="class_arch_regex_1abced607d437f0b625c18d3762448a1d0" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>operator=</name></member>
      <member refid="class_arch_regex_1a31b72d1e7575bb1caa23c90cd548a3ac" prot="public" virt="non-virtual"><scope>ArchRegex</scope><name>~ArchRegex</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
