<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_geom_util_mesh_generator_base" kind="class" language="C++" prot="public">
    <compoundname>GeomUtilMeshGeneratorBase</compoundname>
    <derivedcompoundref refid="class_geom_util_capsule_mesh_generator" prot="public" virt="non-virtual">GeomUtilCapsuleMeshGenerator</derivedcompoundref>
    <derivedcompoundref refid="class_geom_util_cone_mesh_generator" prot="public" virt="non-virtual">GeomUtilConeMeshGenerator</derivedcompoundref>
    <derivedcompoundref refid="class_geom_util_cuboid_mesh_generator" prot="public" virt="non-virtual">GeomUtilCuboidMeshGenerator</derivedcompoundref>
    <derivedcompoundref refid="class_geom_util_cylinder_mesh_generator" prot="public" virt="non-virtual">GeomUtilCylinderMeshGenerator</derivedcompoundref>
    <derivedcompoundref refid="class_geom_util_sphere_mesh_generator" prot="public" virt="non-virtual">GeomUtilSphereMeshGenerator</derivedcompoundref>
    <includes refid="mesh_generator_base_8h" local="no">meshGeneratorBase.h</includes>
    <innerclass refid="struct_geom_util_mesh_generator_base_1_1___enable_if_gf_vec3_iterator" prot="protected">GeomUtilMeshGeneratorBase::_EnableIfGfVec3Iterator</innerclass>
    <innerclass refid="struct_geom_util_mesh_generator_base_1_1___enable_if_not_gf_vec3_iterator" prot="protected">GeomUtilMeshGeneratorBase::_EnableIfNotGfVec3Iterator</innerclass>
    <innerclass refid="struct_geom_util_mesh_generator_base_1_1___is_gf_vec3_iterator" prot="protected">GeomUtilMeshGeneratorBase::_IsGfVec3Iterator</innerclass>
    <innerclass refid="struct_geom_util_mesh_generator_base_1_1___point_writer" prot="protected">GeomUtilMeshGeneratorBase::_PointWriter</innerclass>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbf" prot="protected" static="no" strong="no">
        <type></type>
        <name>_CapStyle</name>
        <enumvalue id="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbfa23c3e07026a42595d8d35d063e780499" prot="protected">
          <name>CapStyleNone</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbfa2e26fc4069e337730b1cda7aa109847d" prot="protected">
          <name>CapStyleSharedEdge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbfa6a84c1f42d4b6b1aaafdc39c81f1a010" prot="protected">
          <name>CapStyleSeparateEdge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/geomUtil/meshGeneratorBase.h" line="200" column="1" bodyfile="pxr/imaging/geomUtil/meshGeneratorBase.h" bodystart="200" bodyend="204"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_geom_util_mesh_generator_base_1ac784af9aa34a41cc4369719335beb230" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GeomUtilMeshGeneratorBase</definition>
        <argsstring>()=delete</argsstring>
        <name>GeomUtilMeshGeneratorBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/geomUtil/meshGeneratorBase.h" line="83" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_geom_util_mesh_generator_base_1ad30525919e24020ad415b907556feb87" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref></type>
        <definition>static PxOsdMeshTopology _GenerateCappedQuadTopology</definition>
        <argsstring>(const size_t numRadial, const size_t numQuadStrips, const _CapStyle bottomCapStyle, const _CapStyle topCapStyle, const bool closedSweep)</argsstring>
        <name>_GenerateCappedQuadTopology</name>
        <param>
          <type>const size_t</type>
          <declname>numRadial</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numQuadStrips</declname>
        </param>
        <param>
          <type>const _CapStyle</type>
          <declname>bottomCapStyle</declname>
        </param>
        <param>
          <type>const _CapStyle</type>
          <declname>topCapStyle</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>closedSweep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/geomUtil/meshGeneratorBase.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_geom_util_mesh_generator_base_1a1f586b35cd1a71bfa6235aa5eb967cc7" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t _ComputeNumRadialPoints</definition>
        <argsstring>(const size_t numRadial, const bool closedSweep)</argsstring>
        <name>_ComputeNumRadialPoints</name>
        <param>
          <type>const size_t</type>
          <declname>numRadial</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>closedSweep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/geomUtil/meshGeneratorBase.h" line="218" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_geom_util_mesh_generator_base_1abad1bfe6e3b339022a24893c5ab052a0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointIterType</type>
          </param>
          <param>
            <type>typename Enabled</type>
            <defval>typename _EnableIfNotGfVec3Iterator&lt;PointIterType&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void GeneratePoints</definition>
        <argsstring>(PointIterType iter,...)</argsstring>
        <name>GeneratePoints</name>
        <param>
          <type>PointIterType</type>
          <declname>iter</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/geomUtil/meshGeneratorBase.h" line="234" column="1" bodyfile="pxr/imaging/geomUtil/meshGeneratorBase.h" bodystart="234" bodyend="240"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides common implementation for the different mesh generator classes in GeomUtil. </para>
    </briefdescription>
    <detaileddescription>
<para>As the mesh generators are entirely implemented as static functions, this &quot;base class&quot; is more of a grouping and access control mechanism than a base class in the polymorphic sense.</para>
<para>The mesh generator subclasses all follow a common pattern, providing static methods for generating topology and point positions for their specific geometric primitive. The data produced by these classes is only guaranteed to be suitable for imaging the described surface; it is only one of many possible interpretations of the surface, and should not be relied upon for any other use. The generators may e.g. change the topology or ordering of the produced data at any time. In short: these utilities are meant only to be used to produce a blob of semi-blind data, for feeding to an imager that supports <ref refid="class_px_osd_mesh_topology" kindref="compound">PxOsdMeshTopology</ref>.</para>
<para>The generators make use of templates and SFINAE to allow clients to pass any output iterator that dereferences to either a <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> or <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> to their GeneratePoints(...) method, and internally perform compile-time type erasure in order to allow the implementations of their algorithms to be private implementation detail, not defined in the headers. Although it&apos;s expected that clients will typically want their point data in VtVec3fArray, the described implementation was chosen to minimize the chance that any prospective client with unusual data management requirements would be unable to make use of the generators, or would be forced to resort to a container copy in order to do so.</para>
<para>The only public API on this class is a static GeneratePoints(...) template method, intended to be added by subclasses to their GeneratePoints(...) overload sets. It serves as the &quot;error case&quot; for callers that attempt to pass iterators of unsupported types to the GeneratePoints(...) methods each subclass declares. As all generator subclasses have this possibility and the implementation requires SFINAE, it&apos;s implemented here and shared between all subclasses. However, it&apos;s important that subclasses explicitly include a &quot;using&quot; statement for the fallback to be included in overload resolution. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1240">
        <label>GeomUtilCapsuleMeshGenerator</label>
        <link refid="class_geom_util_capsule_mesh_generator"/>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1242">
        <label>GeomUtilCuboidMeshGenerator</label>
        <link refid="class_geom_util_cuboid_mesh_generator"/>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1243">
        <label>GeomUtilCylinderMeshGenerator</label>
        <link refid="class_geom_util_cylinder_mesh_generator"/>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1239">
        <label>GeomUtilMeshGeneratorBase</label>
        <link refid="class_geom_util_mesh_generator_base"/>
      </node>
      <node id="1244">
        <label>GeomUtilSphereMeshGenerator</label>
        <link refid="class_geom_util_sphere_mesh_generator"/>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1241">
        <label>GeomUtilConeMeshGenerator</label>
        <link refid="class_geom_util_cone_mesh_generator"/>
        <childnode refid="1239" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/imaging/geomUtil/meshGeneratorBase.h" line="78" column="1" bodyfile="pxr/imaging/geomUtil/meshGeneratorBase.h" bodystart="77" bodyend="242"/>
    <listofallmembers>
      <member refid="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbf" prot="protected" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>_CapStyle</name></member>
      <member refid="class_geom_util_mesh_generator_base_1a1f586b35cd1a71bfa6235aa5eb967cc7" prot="protected" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>_ComputeNumRadialPoints</name></member>
      <member refid="class_geom_util_mesh_generator_base_1ad30525919e24020ad415b907556feb87" prot="protected" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>_GenerateCappedQuadTopology</name></member>
      <member refid="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbfa23c3e07026a42595d8d35d063e780499" prot="protected" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>CapStyleNone</name></member>
      <member refid="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbfa6a84c1f42d4b6b1aaafdc39c81f1a010" prot="protected" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>CapStyleSeparateEdge</name></member>
      <member refid="class_geom_util_mesh_generator_base_1a4d14538b4b1c0110f571d01cb4064dbfa2e26fc4069e337730b1cda7aa109847d" prot="protected" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>CapStyleSharedEdge</name></member>
      <member refid="class_geom_util_mesh_generator_base_1abad1bfe6e3b339022a24893c5ab052a0" prot="public" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>GeneratePoints</name></member>
      <member refid="class_geom_util_mesh_generator_base_1ac784af9aa34a41cc4369719335beb230" prot="private" virt="non-virtual"><scope>GeomUtilMeshGeneratorBase</scope><name>GeomUtilMeshGeneratorBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
