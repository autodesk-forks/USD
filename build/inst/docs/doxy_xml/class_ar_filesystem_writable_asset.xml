<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_ar_filesystem_writable_asset" kind="class" language="C++" prot="public">
    <compoundname>ArFilesystemWritableAsset</compoundname>
    <basecompoundref refid="class_ar_writable_asset" prot="public" virt="non-virtual">ArWritableAsset</basecompoundref>
    <includes refid="filesystem_writable_asset_8h" local="no">filesystemWritableAsset.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ar_filesystem_writable_asset_1ab6f4254cbc7d263b047ab79f4f94b6bd" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_safe_output_file" kindref="compound">TfSafeOutputFile</ref></type>
        <definition>TfSafeOutputFile _file</definition>
        <argsstring></argsstring>
        <name>_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemWritableAsset.h" line="80" column="1" bodyfile="pxr/usd/ar/filesystemWritableAsset.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ar_filesystem_writable_asset_1a56d4c65dd5704ab64a8aa30e9d9706c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API std::shared_ptr&lt; <ref refid="class_ar_filesystem_writable_asset" kindref="compound">ArFilesystemWritableAsset</ref> &gt;</type>
        <definition>static AR_API std::shared_ptr&lt;ArFilesystemWritableAsset&gt; Create</definition>
        <argsstring>(const ArResolvedPath &amp;resolvedPath, ArResolver::WriteMode writeMode)</argsstring>
        <name>Create</name>
        <param>
          <type>const <ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref> &amp;</type>
          <declname>resolvedPath</declname>
        </param>
        <param>
          <type><ref refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76d" kindref="member">ArResolver::WriteMode</ref></type>
          <declname>writeMode</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="class_ar_filesystem_writable_asset" kindref="compound">ArFilesystemWritableAsset</ref> for the file at <computeroutput>resolvedPath</computeroutput> with the given <computeroutput>writeMode</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a null pointer if the file could not be opened. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemWritableAsset.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ar_filesystem_writable_asset_1a4f1f0cf04243a83556432cbd04befeb5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>AR_API</type>
        <definition>AR_API ArFilesystemWritableAsset</definition>
        <argsstring>(TfSafeOutputFile &amp;&amp;file)</argsstring>
        <name>ArFilesystemWritableAsset</name>
        <param>
          <type><ref refid="class_tf_safe_output_file" kindref="compound">TfSafeOutputFile</ref> &amp;&amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Constructs an <ref refid="class_ar_filesystem_writable_asset" kindref="compound">ArFilesystemWritableAsset</ref> for the given <computeroutput>file</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="class_ar_filesystem_writable_asset" kindref="compound">ArFilesystemWritableAsset</ref> takes ownership of <computeroutput>file</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemWritableAsset.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_writable_asset_1afd71cfcad29816656728dbc67892e2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AR_API</type>
        <definition>virtual AR_API ~ArFilesystemWritableAsset</definition>
        <argsstring>()</argsstring>
        <name>~ArFilesystemWritableAsset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemWritableAsset.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_writable_asset_1af45c1fc9b2832296b667a855838619ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AR_API bool</type>
        <definition>virtual AR_API bool Close</definition>
        <argsstring>() override</argsstring>
        <name>Close</name>
        <reimplements refid="class_ar_writable_asset_1a6dc3a3d77b350f8db1b851686fc7bc88">Close</reimplements>
        <briefdescription>
<para>Closes the file owned by this asset. </para>
        </briefdescription>
        <detaileddescription>
<para>If the <ref refid="class_tf_safe_output_file" kindref="compound">TfSafeOutputFile</ref> was opened for replacement, the temporary file that was being written to be will be renamed over the destination file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemWritableAsset.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_writable_asset_1a227bb6047311f04e4e76e9a51b829b2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>AR_API size_t</type>
        <definition>virtual AR_API size_t Write</definition>
        <argsstring>(const void *buffer, size_t count, size_t offset) override</argsstring>
        <name>Write</name>
        <reimplements refid="class_ar_writable_asset_1af524987aa4d90076d67af1a7ab032530">Write</reimplements>
        <param>
          <type>const void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Writes <computeroutput>count</computeroutput> bytes from <computeroutput>buffer</computeroutput> at <computeroutput>offset</computeroutput> from the beginning of the file held by this object. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns number of bytes written, or 0 on error. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemWritableAsset.h" line="76" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_ar_writable_asset" kindref="compound">ArWritableAsset</ref> implementation for asset represented by a file on a filesystem. </para>
    </briefdescription>
    <detaileddescription>
<para>This implementation uses <ref refid="class_tf_safe_output_file" kindref="compound">TfSafeOutputFile</ref>; in the case where the asset has been opened for replacement, data will be written to a temporary file which will be renamed over the destination file when this object is destroyed. See documentation for <ref refid="class_tf_safe_output_file" kindref="compound">TfSafeOutputFile</ref> for more details. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="714">
        <label>ArWritableAsset</label>
        <link refid="class_ar_writable_asset"/>
      </node>
      <node id="713">
        <label>ArFilesystemWritableAsset</label>
        <link refid="class_ar_filesystem_writable_asset"/>
        <childnode refid="714" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="716">
        <label>ArWritableAsset</label>
        <link refid="class_ar_writable_asset"/>
      </node>
      <node id="715">
        <label>ArFilesystemWritableAsset</label>
        <link refid="class_ar_filesystem_writable_asset"/>
        <childnode refid="716" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/ar/filesystemWritableAsset.h" line="48" column="1" bodyfile="pxr/usd/ar/filesystemWritableAsset.h" bodystart="46" bodyend="81"/>
    <listofallmembers>
      <member refid="class_ar_filesystem_writable_asset_1ab6f4254cbc7d263b047ab79f4f94b6bd" prot="private" virt="non-virtual"><scope>ArFilesystemWritableAsset</scope><name>_file</name></member>
      <member refid="class_ar_filesystem_writable_asset_1a4f1f0cf04243a83556432cbd04befeb5" prot="public" virt="non-virtual"><scope>ArFilesystemWritableAsset</scope><name>ArFilesystemWritableAsset</name></member>
      <member refid="class_ar_writable_asset_1af24cdfcdd2b927e82e5a5c981a0279cf" prot="public" virt="non-virtual"><scope>ArFilesystemWritableAsset</scope><name>ArWritableAsset</name></member>
      <member refid="class_ar_writable_asset_1ae5facd976bb5e1e5644814a4063ddec6" prot="protected" virt="non-virtual"><scope>ArFilesystemWritableAsset</scope><name>ArWritableAsset</name></member>
      <member refid="class_ar_filesystem_writable_asset_1af45c1fc9b2832296b667a855838619ad" prot="public" virt="virtual"><scope>ArFilesystemWritableAsset</scope><name>Close</name></member>
      <member refid="class_ar_filesystem_writable_asset_1a56d4c65dd5704ab64a8aa30e9d9706c0" prot="public" virt="non-virtual"><scope>ArFilesystemWritableAsset</scope><name>Create</name></member>
      <member refid="class_ar_writable_asset_1a7d69a32e387add8ebbe2563f7c7e9c9b" prot="public" virt="non-virtual"><scope>ArFilesystemWritableAsset</scope><name>operator=</name></member>
      <member refid="class_ar_filesystem_writable_asset_1a227bb6047311f04e4e76e9a51b829b2f" prot="public" virt="virtual"><scope>ArFilesystemWritableAsset</scope><name>Write</name></member>
      <member refid="class_ar_filesystem_writable_asset_1afd71cfcad29816656728dbc67892e2c7" prot="public" virt="virtual"><scope>ArFilesystemWritableAsset</scope><name>~ArFilesystemWritableAsset</name></member>
      <member refid="class_ar_writable_asset_1a9608e7bb5b48e1fc25f024076ba69b91" prot="public" virt="virtual"><scope>ArFilesystemWritableAsset</scope><name>~ArWritableAsset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
