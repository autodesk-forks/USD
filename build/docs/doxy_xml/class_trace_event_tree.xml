<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_event_tree" kind="class" language="C++" prot="public">
    <compoundname>TraceEventTree</compoundname>
    <basecompoundref refid="class_tf_ref_base" prot="public" virt="non-virtual">TfRefBase</basecompoundref>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <includes refid="event_tree_8h" local="no">eventTree.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_trace_event_tree_1a1b111b9b0cdccd0e7bb17a10f826d3ad" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TraceEvent::TimeStamp</ref>, double &gt; &gt;</type>
        <definition>using CounterValues =  std::vector&lt;std::pair&lt;TraceEvent::TimeStamp, double&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>CounterValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="60" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_tree_1ae1788d89aec9e68186f3b09b8255d5b0" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, CounterValues, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>using CounterValuesMap =  std::unordered_map&lt;TfToken, CounterValues, TfToken::HashFunctor&gt;</definition>
        <argsstring></argsstring>
        <name>CounterValuesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="61" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_tree_1aca9dde447c468d082c075bddafb356e9" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, double, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>using CounterMap =  std::unordered_map&lt;TfToken, double, TfToken::HashFunctor&gt;</definition>
        <argsstring></argsstring>
        <name>CounterMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="63" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_tree_1ab9fbb7d1ceb9afc164b2b29ef05b6721" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TraceEvent::TimeStamp</ref>, <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &gt; &gt;</type>
        <definition>using MarkerValues =  std::vector&lt;std::pair&lt;TraceEvent::TimeStamp, TraceThreadId&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>MarkerValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="66" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_tree_1a330bbfaa12edda846a627d81fa9054e6" prot="public" static="no">
        <type>std::unordered_map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, MarkerValues, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>using MarkerValuesMap =  std::unordered_map&lt;TfToken, MarkerValues, TfToken::HashFunctor&gt;</definition>
        <argsstring></argsstring>
        <name>MarkerValuesMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="67" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_tree_1ad3929c3435ed075027eb3c96988a04eb" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="class_js_writer" kindref="compound">JsWriter</ref> &amp;)&gt;</type>
        <definition>using ExtraFieldFn =  std::function&lt;void(JsWriter&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>ExtraFieldFn</name>
        <briefdescription>
<para>Writes a JSON object representing the data in the call tree that conforms to the Chrome Trace format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="103" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_event_tree_1aaf6e0478d956340a333032d2b7e3be05" prot="private" static="no" mutable="no">
        <type>TraceEventNodeRefPtr</type>
        <definition>TraceEventNodeRefPtr _root</definition>
        <argsstring></argsstring>
        <name>_root</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="125" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_tree_1a2d8664fed6934452489fc5f466251b1a" prot="private" static="no" mutable="no">
        <type>CounterValuesMap</type>
        <definition>CounterValuesMap _counters</definition>
        <argsstring></argsstring>
        <name>_counters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="127" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_tree_1a45f8bf9d545786b3bbe79f99cad7c994" prot="private" static="no" mutable="no">
        <type>MarkerValuesMap</type>
        <definition>MarkerValuesMap _markers</definition>
        <argsstring></argsstring>
        <name>_markers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="129" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_trace_event_tree_1a4565dc41797aff4c2df373dc4ffb5000" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API TraceEventTreeRefPtr</type>
        <definition>static TRACE_API TraceEventTreeRefPtr New</definition>
        <argsstring>(const TraceCollection &amp;collection, const CounterMap *initialCounterValues=nullptr)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &amp;</type>
          <declname>collection</declname>
        </param>
        <param>
          <type>const CounterMap *</type>
          <declname>initialCounterValues</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="class_trace_event_tree" kindref="compound">TraceEventTree</ref> instance from the data in <computeroutput>collection</computeroutput> and <computeroutput>initialCounterValues</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a85f2020d3440caa9cb66a26e518b3b0c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TraceEventTreeRefPtr</type>
        <definition>static TraceEventTreeRefPtr New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="76" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a30e981a4903eda4672954575f6a77eda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TraceEventTreeRefPtr</type>
        <definition>static TraceEventTreeRefPtr New</definition>
        <argsstring>(TraceEventNodeRefPtr root, CounterValuesMap counters, MarkerValuesMap markers)</argsstring>
        <name>New</name>
        <param>
          <type>TraceEventNodeRefPtr</type>
          <declname>root</declname>
        </param>
        <param>
          <type>CounterValuesMap</type>
          <declname>counters</declname>
        </param>
        <param>
          <type>MarkerValuesMap</type>
          <declname>markers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="81" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="81" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_event_tree_1a359e7a9dda625f9c939dd210e4e5d292" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const TraceEventNodeRefPtr &amp;</type>
        <definition>const TraceEventNodeRefPtr&amp; GetRoot</definition>
        <argsstring>() const</argsstring>
        <name>GetRoot</name>
        <briefdescription>
<para>Returns the root node of the tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="90" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1ad1c11e35f555253c2d4f52b43616e507" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CounterValuesMap &amp;</type>
        <definition>const CounterValuesMap&amp; GetCounters</definition>
        <argsstring>() const</argsstring>
        <name>GetCounters</name>
        <briefdescription>
<para>Returns the map of counter values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="93" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a1ad6ae04db877fcfd1976db7d3ea0974" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const MarkerValuesMap &amp;</type>
        <definition>const MarkerValuesMap&amp; GetMarkers</definition>
        <argsstring>() const</argsstring>
        <name>GetMarkers</name>
        <briefdescription>
<para>Returns the map of markers values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="96" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a95112fbbdd21bba94b9055eca19c0c09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>CounterMap</type>
        <definition>CounterMap GetFinalCounterValues</definition>
        <argsstring>() const</argsstring>
        <name>GetFinalCounterValues</name>
        <briefdescription>
<para>Return the final value of the counters in the report. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a0815c32268a96a5a0d5fc6f9ea83f26c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void WriteChromeTraceObject</definition>
        <argsstring>(JsWriter &amp;writer, ExtraFieldFn extraFields=ExtraFieldFn()) const</argsstring>
        <name>WriteChromeTraceObject</name>
        <param>
          <type><ref refid="class_js_writer" kindref="compound">JsWriter</ref> &amp;</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="class_trace_event_tree_1ad3929c3435ed075027eb3c96988a04eb" kindref="member">ExtraFieldFn</ref></type>
          <declname>extraFields</declname>
          <defval><ref refid="class_trace_event_tree_1ad3929c3435ed075027eb3c96988a04eb" kindref="member">ExtraFieldFn</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a99e394b88053dc2781b2fdb3ed1a50af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void Merge</definition>
        <argsstring>(const TraceEventTreeRefPtr &amp;tree)</argsstring>
        <name>Merge</name>
        <param>
          <type>const TraceEventTreeRefPtr &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Adds the contexts of <computeroutput>tree</computeroutput> to this tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1a1e002af1ca08588a25f7077d60e5bd74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API TraceEventTreeRefPtr</type>
        <definition>TRACE_API TraceEventTreeRefPtr Add</definition>
        <argsstring>(const TraceCollection &amp;collection)</argsstring>
        <name>Add</name>
        <param>
          <type>const <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &amp;</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
<para>Adds the data from <computeroutput>collection</computeroutput> to this tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="111" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_trace_event_tree_1a833813f1ec401534b4ea58aef71e9050" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventTree</definition>
        <argsstring>(TraceEventNodeRefPtr root)</argsstring>
        <name>TraceEventTree</name>
        <param>
          <type>TraceEventNodeRefPtr</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="114" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="114" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_tree_1aeb9dfeb2b6e5f6e636ce4e11baa2a13d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventTree</definition>
        <argsstring>(TraceEventNodeRefPtr root, CounterValuesMap counters, MarkerValuesMap markers)</argsstring>
        <name>TraceEventTree</name>
        <param>
          <type>TraceEventNodeRefPtr</type>
          <declname>root</declname>
        </param>
        <param>
          <type>CounterValuesMap</type>
          <declname>counters</declname>
        </param>
        <param>
          <type>MarkerValuesMap</type>
          <declname>markers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventTree.h" line="117" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="117" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class contains a timeline call tree and a map of counters to their values over time. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5884">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5882">
        <label>TraceEventTree</label>
        <link refid="class_trace_event_tree"/>
        <childnode refid="5883" relation="public-inheritance">
        </childnode>
        <childnode refid="5884" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5883">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5887">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5885">
        <label>TraceEventTree</label>
        <link refid="class_trace_event_tree"/>
        <childnode refid="5886" relation="public-inheritance">
        </childnode>
        <childnode refid="5887" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5886">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/base/trace/eventTree.h" line="58" column="1" bodyfile="pxr/base/trace/eventTree.h" bodystart="58" bodyend="130"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_trace_event_tree_1a2d8664fed6934452489fc5f466251b1a" prot="private" virt="non-virtual"><scope>TraceEventTree</scope><name>_counters</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>TraceEventTree</scope><name>_HasRemnant</name></member>
      <member refid="class_trace_event_tree_1a45f8bf9d545786b3bbe79f99cad7c994" prot="private" virt="non-virtual"><scope>TraceEventTree</scope><name>_markers</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>TraceEventTree</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>TraceEventTree</scope><name>_Register</name></member>
      <member refid="class_trace_event_tree_1aaf6e0478d956340a333032d2b7e3be05" prot="private" virt="non-virtual"><scope>TraceEventTree</scope><name>_root</name></member>
      <member refid="class_trace_event_tree_1a1e002af1ca08588a25f7077d60e5bd74" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>Add</name></member>
      <member refid="class_trace_event_tree_1aca9dde447c468d082c075bddafb356e9" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>CounterMap</name></member>
      <member refid="class_trace_event_tree_1a1b111b9b0cdccd0e7bb17a10f826d3ad" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>CounterValues</name></member>
      <member refid="class_trace_event_tree_1ae1788d89aec9e68186f3b09b8255d5b0" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>CounterValuesMap</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>EnableNotification2</name></member>
      <member refid="class_trace_event_tree_1ad3929c3435ed075027eb3c96988a04eb" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>ExtraFieldFn</name></member>
      <member refid="class_trace_event_tree_1ad1c11e35f555253c2d4f52b43616e507" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetCounters</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetCurrentCount</name></member>
      <member refid="class_trace_event_tree_1a95112fbbdd21bba94b9055eca19c0c09" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetFinalCounterValues</name></member>
      <member refid="class_trace_event_tree_1a1ad6ae04db877fcfd1976db7d3ea0974" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetMarkers</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetRefCount</name></member>
      <member refid="class_trace_event_tree_1a359e7a9dda625f9c939dd210e4e5d292" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetRoot</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>IsUnique</name></member>
      <member refid="class_trace_event_tree_1ab9fbb7d1ceb9afc164b2b29ef05b6721" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>MarkerValues</name></member>
      <member refid="class_trace_event_tree_1a330bbfaa12edda846a627d81fa9054e6" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>MarkerValuesMap</name></member>
      <member refid="class_trace_event_tree_1a99e394b88053dc2781b2fdb3ed1a50af" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>Merge</name></member>
      <member refid="class_trace_event_tree_1a4565dc41797aff4c2df373dc4ffb5000" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>New</name></member>
      <member refid="class_trace_event_tree_1a85f2020d3440caa9cb66a26e518b3b0c" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>New</name></member>
      <member refid="class_trace_event_tree_1a30e981a4903eda4672954575f6a77eda" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>New</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>operator=</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>TfWeakBase</name></member>
      <member refid="class_trace_event_tree_1a833813f1ec401534b4ea58aef71e9050" prot="private" virt="non-virtual"><scope>TraceEventTree</scope><name>TraceEventTree</name></member>
      <member refid="class_trace_event_tree_1aeb9dfeb2b6e5f6e636ce4e11baa2a13d" prot="private" virt="non-virtual"><scope>TraceEventTree</scope><name>TraceEventTree</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_trace_event_tree_1a0815c32268a96a5a0d5fc6f9ea83f26c" prot="public" virt="non-virtual"><scope>TraceEventTree</scope><name>WriteChromeTraceObject</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>TraceEventTree</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>TraceEventTree</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
