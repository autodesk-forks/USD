<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hd_st_material_1_1_volume_material_data" kind="struct" language="C++" prot="public" final="yes">
    <compoundname>HdStMaterial::VolumeMaterialData</compoundname>
    <includes refid="imaging_2hd_st_2material_8h" local="no">material.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hd_st_material_1_1_volume_material_data_1a14ee39a9a59b08e6fad497e78e450f7e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string source</definition>
        <argsstring></argsstring>
        <name>source</name>
        <briefdescription>
<para>glslfx source code for volume </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="55" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_st_material_1_1_volume_material_data_1a93bca456af64430affcd425ffe2bbb29" prot="public" static="no" mutable="no">
        <type>HdSt_MaterialParamVector</type>
        <definition>HdSt_MaterialParamVector params</definition>
        <argsstring></argsstring>
        <name>params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/material.h" line="56" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>For volumes, the corresponding draw items do not use the <ref refid="class_hd_st_shader_code" kindref="compound">HdStShaderCode</ref> produced by HdStMaterial. </para>
    </briefdescription>
    <detaileddescription>
<para>Instead <ref refid="class_hd_st_volume" kindref="compound">HdStVolume</ref> is using some data from the material to produce its own <ref refid="class_hd_st_shader_code" kindref="compound">HdStShaderCode</ref> based on the volume field bindings. </para>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/material.h" line="53" column="1" bodyfile="pxr/imaging/hdSt/material.h" bodystart="52" bodyend="57"/>
    <listofallmembers>
      <member refid="struct_hd_st_material_1_1_volume_material_data_1a93bca456af64430affcd425ffe2bbb29" prot="public" virt="non-virtual"><scope>HdStMaterial::VolumeMaterialData</scope><name>params</name></member>
      <member refid="struct_hd_st_material_1_1_volume_material_data_1a14ee39a9a59b08e6fad497e78e450f7e" prot="public" virt="non-virtual"><scope>HdStMaterial::VolumeMaterialData</scope><name>source</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
