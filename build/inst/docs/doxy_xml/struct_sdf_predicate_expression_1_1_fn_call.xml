<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_sdf_predicate_expression_1_1_fn_call" kind="class" language="C++" prot="public">
    <compoundname>SdfPredicateExpression::FnCall</compoundname>
    <includes refid="predicate_expression_8h" local="no">predicateExpression.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5b" prot="public" static="no" strong="no">
        <type></type>
        <name>Kind</name>
        <enumvalue id="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5ba957586a781fc380140acf35f46e411a8" prot="public">
          <name>BareCall</name>
          <briefdescription>
<para>no-arg call like &apos;active&apos; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5bad2c6a344bda53b06be4c3493184a391e" prot="public">
          <name>ColonCall</name>
          <briefdescription>
<para>colon-separated pos args, like &apos;isa:Imageable&apos; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5baac450859980260e724eceddc892341a4" prot="public">
          <name>ParenCall</name>
          <briefdescription>
<para>paren/comma &amp; pos/kw args like &apos;foo(23, bar=baz)&apos; </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="125" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="125" bodyend="129"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_sdf_predicate_expression_1_1_fn_call_1ad4f6a38e725118afcde5fbb91ccbbb12" prot="public" static="no" mutable="no">
        <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5b" kindref="member">Kind</ref></type>
        <definition>Kind kind</definition>
        <argsstring></argsstring>
        <name>kind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="131" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_predicate_expression_1_1_fn_call_1a11284b4f4356f3d475919a4ab49a6660" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string funcName</definition>
        <argsstring></argsstring>
        <name>funcName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="132" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_predicate_expression_1_1_fn_call_1ab67a41570b077fecd5fb42bcd5c503da" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> &gt;</type>
        <definition>std::vector&lt;FnArg&gt; args</definition>
        <argsstring></argsstring>
        <name>args</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="133" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_call_1a53caa4c1f7f4d5abb6ecb3a1bf3be35d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HashState</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void TfHashAppend</definition>
        <argsstring>(HashState &amp;h, FnCall const &amp;c)</argsstring>
        <name>TfHashAppend</name>
        <param>
          <type>HashState &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="136" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_call_1a0147090fc1118b27caf6f228f867cb6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(FnCall const &amp;l, FnCall const &amp;r)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="140" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_call_1a5e57a203eaa5c4bc2c9247ddc59d8a68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(FnCall const &amp;l, FnCall const &amp;r)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="144" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_call_1ad69a659ea1414cdf8c2cd2df88262780" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void swap</definition>
        <argsstring>(FnCall &amp;l, FnCall &amp;r)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_call" kindref="compound">FnCall</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="147" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="147" bodyend="151"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a function call in an expression with calling style, function name, and arguments. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/sdf/predicateExpression.h" line="124" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="124" bodyend="152"/>
    <listofallmembers>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1ab67a41570b077fecd5fb42bcd5c503da" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>args</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5ba957586a781fc380140acf35f46e411a8" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>BareCall</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5bad2c6a344bda53b06be4c3493184a391e" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>ColonCall</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1a11284b4f4356f3d475919a4ab49a6660" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>funcName</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1ad4f6a38e725118afcde5fbb91ccbbb12" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>kind</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5b" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>Kind</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1a5e57a203eaa5c4bc2c9247ddc59d8a68" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>operator!=</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1a0147090fc1118b27caf6f228f867cb6e" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>operator==</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1aa10c9e8951b8ccf714a59ec321bdac5baac450859980260e724eceddc892341a4" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>ParenCall</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1ad69a659ea1414cdf8c2cd2df88262780" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>swap</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_call_1a53caa4c1f7f4d5abb6ecb3a1bf3be35d" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnCall</scope><name>TfHashAppend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
