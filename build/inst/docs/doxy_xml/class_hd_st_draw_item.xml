<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_draw_item" kind="class" language="C++" prot="public">
    <compoundname>HdStDrawItem</compoundname>
    <basecompoundref refid="class_hd_draw_item" prot="public" virt="non-virtual">HdDrawItem</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_draw_item_1acddad68e6a851df711839e9c97f72594" prot="private" static="no" mutable="no">
        <type>HdSt_GeometricShaderSharedPtr</type>
        <definition>HdSt_GeometricShaderSharedPtr _geometricShader</definition>
        <argsstring></argsstring>
        <name>_geometricShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="182" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_draw_item_1a4b53c135b6c5196c903e1de38341ecf2" prot="private" static="no" mutable="no">
        <type>HdSt_MaterialNetworkShaderSharedPtr</type>
        <definition>HdSt_MaterialNetworkShaderSharedPtr _materialNetworkShader</definition>
        <argsstring></argsstring>
        <name>_materialNetworkShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="183" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_draw_item_1a48a8f65e0cfa900f462664c5a8fc1ede" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _materialIsFinal</definition>
        <argsstring></argsstring>
        <name>_materialIsFinal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="184" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_draw_item_1a59f1d51feb2ef2c75964cc4e186d4330" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HF_MALLOC_TAG_NEW</definition>
        <argsstring>(&quot;new HdStDrawItem&quot;)</argsstring>
        <name>HF_MALLOC_TAG_NEW</name>
        <param>
          <type>&quot;new HdStDrawItem&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a0c5ef49bf6f66d0d59efc7f50aa8f7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStDrawItem</definition>
        <argsstring>(HdRprimSharedData const *sharedData)</argsstring>
        <name>HdStDrawItem</name>
        <param>
          <type>HdRprimSharedData const *</type>
          <declname>sharedData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a33f1c628c357699501af7eb19290835d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStDrawItem</definition>
        <argsstring>() override</argsstring>
        <name>~HdStDrawItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a838458d18a0388ea700ccd1dd471a883" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasInstancer</definition>
        <argsstring>() const</argsstring>
        <name>HasInstancer</name>
        <briefdescription>
<para>Returns true if the drawItem has an instancer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="52" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a24fe6b01bf70bc1bbed9b9c1ddb6d84f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetInstancePrimvarNumLevels</definition>
        <argsstring>() const</argsstring>
        <name>GetInstancePrimvarNumLevels</name>
        <briefdescription>
<para>Returns the number of nested levels of instance primvars. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="58" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1aa187f0f148c2db5fb327fe3f7ae9a0ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetInstancePrimvarRange</definition>
        <argsstring>(int level) const</argsstring>
        <name>GetInstancePrimvarRange</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Returns a BufferArrayRange of instance primvars at <computeroutput>level</computeroutput> the level is assigned to nested instancers in a bottom-up manner. </para>
        </briefdescription>
        <detaileddescription>
<para>example: (numLevels = 2) <verbatim>instancerA         (level = 1)
  |
  +-- instancerB   (level = 0)
        |
        +-- mesh_prototype
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="75" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a3187422a07008e4a7d80a90fc9db2437" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetInstanceIndexRange</definition>
        <argsstring>() const</argsstring>
        <name>GetInstanceIndexRange</name>
        <briefdescription>
<para>Returns instance-index indirection BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="81" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a3428d2e8b8b451b90d15ac532bc1c2bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetConstantPrimvarRange</definition>
        <argsstring>() const</argsstring>
        <name>GetConstantPrimvarRange</name>
        <briefdescription>
<para>Returns constant primvar BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="87" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1abf269d5ca6bb8657f838995e8cd1ea62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetElementPrimvarRange</definition>
        <argsstring>() const</argsstring>
        <name>GetElementPrimvarRange</name>
        <briefdescription>
<para>Returns element primvar BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="93" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1ad8f27542b99bf1edbd10aa3728ac4e1a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetVertexPrimvarRange</definition>
        <argsstring>() const</argsstring>
        <name>GetVertexPrimvarRange</name>
        <briefdescription>
<para>Returns vertex primvar BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="99" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1ac5ea9de0c66fc210f50a3c51737fb883" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetVaryingPrimvarRange</definition>
        <argsstring>() const</argsstring>
        <name>GetVaryingPrimvarRange</name>
        <briefdescription>
<para>Returns varying primvar BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="105" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1afb2ad49987075f3bc600a3281d3dbd48" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetFaceVaryingPrimvarRange</definition>
        <argsstring>() const</argsstring>
        <name>GetFaceVaryingPrimvarRange</name>
        <briefdescription>
<para>Returns face varying primvar BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="111" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a6cf3445c8476ec768828f04617b9a541" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetTopologyRange</definition>
        <argsstring>() const</argsstring>
        <name>GetTopologyRange</name>
        <briefdescription>
<para>Returns topology BAR. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="117" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1ab0863614d1ced142c6d9b0292d0d6c14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtr const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtr const&amp; GetTopologyVisibilityRange</definition>
        <argsstring>() const</argsstring>
        <name>GetTopologyVisibilityRange</name>
        <briefdescription>
<para>Returns topological visibility BAR (e.g. per-face, per-point, etc.) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="123" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a669754bea45e1cfe9d4c62e3d61f83d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TopologyToPrimvarVector const  &amp;</type>
        <definition>TopologyToPrimvarVector const&amp; GetFvarTopologyToPrimvarVector</definition>
        <argsstring>() const</argsstring>
        <name>GetFvarTopologyToPrimvarVector</name>
        <briefdescription>
<para>Returns mapping from refined fvar channels to named primvar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="129" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a48bedab27ff9a1c4baaaa7d48bb93d35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetGeometricShader</definition>
        <argsstring>(HdSt_GeometricShaderSharedPtr const &amp;shader)</argsstring>
        <name>SetGeometricShader</name>
        <param>
          <type>HdSt_GeometricShaderSharedPtr const &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="133" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1ac1d885c7ff17774ee2baf8cf38c9a6a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdSt_GeometricShaderSharedPtr const  &amp;</type>
        <definition>HdSt_GeometricShaderSharedPtr const&amp; GetGeometricShader</definition>
        <argsstring>() const</argsstring>
        <name>GetGeometricShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="137" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="137" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a429b4a15786c3504752d12e2959e748f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdSt_MaterialNetworkShaderSharedPtr const  &amp;</type>
        <definition>HdSt_MaterialNetworkShaderSharedPtr const&amp; GetMaterialNetworkShader</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialNetworkShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="142" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="142" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a913378639e371429d6dc474f1f1593c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMaterialNetworkShader</definition>
        <argsstring>(HdSt_MaterialNetworkShaderSharedPtr const &amp;shader)</argsstring>
        <name>SetMaterialNetworkShader</name>
        <param>
          <type>HdSt_MaterialNetworkShaderSharedPtr const &amp;</type>
          <declname>shader</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="146" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a3b69fdc273bfbb6d1e3f57910cca12d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetMaterialIsFinal</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialIsFinal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="151" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1ad416be3a04efdb817b6b627c08905916" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMaterialIsFinal</definition>
        <argsstring>(bool isFinal)</argsstring>
        <name>SetMaterialIsFinal</name>
        <param>
          <type>bool</type>
          <declname>isFinal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="155" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a88fca81f817a6f529231cf72d085a8e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool IntersectsViewVolume</definition>
        <argsstring>(GfMatrix4d const &amp;viewProjMatrix) const</argsstring>
        <name>IntersectsViewVolume</name>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>viewProjMatrix</declname>
        </param>
        <briefdescription>
<para>Tests intersection with the specified view projection matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this drawItem is in the frustum.</para>
<para>XXX: Currently if this drawitem uses instancing, always returns true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1aaf174239638b010a4b752e170e0b32f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API size_t</type>
        <definition>HDST_API size_t GetBufferArraysHash</definition>
        <argsstring>() const</argsstring>
        <name>GetBufferArraysHash</name>
        <briefdescription>
<para>Returns the hash of the versions of underlying buffers. </para>
        </briefdescription>
        <detaileddescription>
<para>When the hash changes, it means the drawing coord might have been reassigned, so any drawing coord caching buffer (e.g. indirect dispatch buffer) has to be rebuilt at the moment. Note that this value is a hash, not sequential. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_draw_item_1a5a80c2d0b0341e741af97590beb8284d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API size_t</type>
        <definition>HDST_API size_t GetElementOffsetsHash</definition>
        <argsstring>() const</argsstring>
        <name>GetElementOffsetsHash</name>
        <briefdescription>
<para>Returns the hash of the element offsets of the underlying BARs. </para>
        </briefdescription>
        <detaileddescription>
<para>When the hash changes, it means that any drawing coord caching buffer (e.g. the indirect dispatch buffer) has to be rebuilt. Note that this value is a hash, not sequential. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/drawItem.h" line="179" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3100">
        <label>HdStDrawItem</label>
        <childnode refid="3101" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3101">
        <label>HdDrawItem</label>
        <link refid="class_hd_draw_item"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3102">
        <label>HdStDrawItem</label>
        <childnode refid="3103" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3103">
        <label>HdDrawItem</label>
        <link refid="class_hd_draw_item"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/drawItem.h" line="41" column="1" bodyfile="pxr/imaging/hdSt/drawItem.h" bodystart="40" bodyend="185"/>
    <listofallmembers>
      <member refid="class_hd_st_draw_item_1acddad68e6a851df711839e9c97f72594" prot="private" virt="non-virtual"><scope>HdStDrawItem</scope><name>_geometricShader</name></member>
      <member refid="class_hd_draw_item_1aa6770dd1e2ec7677fb5bcff57db2458c" prot="protected" virt="non-virtual"><scope>HdStDrawItem</scope><name>_GetDrawingCoord</name></member>
      <member refid="class_hd_draw_item_1adfa1e02c73cefeda7b00fd8fba399230" prot="protected" virt="non-virtual"><scope>HdStDrawItem</scope><name>_GetSharedData</name></member>
      <member refid="class_hd_st_draw_item_1a48a8f65e0cfa900f462664c5a8fc1ede" prot="private" virt="non-virtual"><scope>HdStDrawItem</scope><name>_materialIsFinal</name></member>
      <member refid="class_hd_st_draw_item_1a4b53c135b6c5196c903e1de38341ecf2" prot="private" virt="non-virtual"><scope>HdStDrawItem</scope><name>_materialNetworkShader</name></member>
      <member refid="class_hd_draw_item_1ae784e0f18cde35dd6b3f4b5d891593e4" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetBounds</name></member>
      <member refid="class_hd_st_draw_item_1aaf174239638b010a4b752e170e0b32f7" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetBufferArraysHash</name></member>
      <member refid="class_hd_st_draw_item_1a3428d2e8b8b451b90d15ac532bc1c2bb" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetConstantPrimvarRange</name></member>
      <member refid="class_hd_draw_item_1a42e1f6d64ceddcc4abc3fbac5aeab82f" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetDrawingCoord</name></member>
      <member refid="class_hd_st_draw_item_1a5a80c2d0b0341e741af97590beb8284d" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetElementOffsetsHash</name></member>
      <member refid="class_hd_st_draw_item_1abf269d5ca6bb8657f838995e8cd1ea62" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetElementPrimvarRange</name></member>
      <member refid="class_hd_draw_item_1a834382187313e92ac679ef06c54c956f" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetExtent</name></member>
      <member refid="class_hd_st_draw_item_1afb2ad49987075f3bc600a3281d3dbd48" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetFaceVaryingPrimvarRange</name></member>
      <member refid="class_hd_st_draw_item_1a669754bea45e1cfe9d4c62e3d61f83d7" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetFvarTopologyToPrimvarVector</name></member>
      <member refid="class_hd_st_draw_item_1ac1d885c7ff17774ee2baf8cf38c9a6a2" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetGeometricShader</name></member>
      <member refid="class_hd_st_draw_item_1a3187422a07008e4a7d80a90fc9db2437" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetInstanceIndexRange</name></member>
      <member refid="class_hd_st_draw_item_1a24fe6b01bf70bc1bbed9b9c1ddb6d84f" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetInstancePrimvarNumLevels</name></member>
      <member refid="class_hd_st_draw_item_1aa187f0f148c2db5fb327fe3f7ae9a0ed" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetInstancePrimvarRange</name></member>
      <member refid="class_hd_st_draw_item_1a3b69fdc273bfbb6d1e3f57910cca12d3" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetMaterialIsFinal</name></member>
      <member refid="class_hd_st_draw_item_1a429b4a15786c3504752d12e2959e748f" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetMaterialNetworkShader</name></member>
      <member refid="class_hd_draw_item_1a64e5886cea0e3c28324eb99875e25b16" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetMaterialTag</name></member>
      <member refid="class_hd_draw_item_1aca471092e64b18a12918995d260b4782" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetMatrix</name></member>
      <member refid="class_hd_draw_item_1ae9624b4b3eb588f2e290c863b7b18a6c" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetRprimID</name></member>
      <member refid="class_hd_st_draw_item_1a6cf3445c8476ec768828f04617b9a541" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetTopologyRange</name></member>
      <member refid="class_hd_st_draw_item_1ab0863614d1ced142c6d9b0292d0d6c14" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetTopologyVisibilityRange</name></member>
      <member refid="class_hd_st_draw_item_1ac5ea9de0c66fc210f50a3c51737fb883" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetVaryingPrimvarRange</name></member>
      <member refid="class_hd_st_draw_item_1ad8f27542b99bf1edbd10aa3728ac4e1a" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetVertexPrimvarRange</name></member>
      <member refid="class_hd_draw_item_1a02b082b6972c84900145e8326507ae7a" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>GetVisible</name></member>
      <member refid="class_hd_st_draw_item_1a838458d18a0388ea700ccd1dd471a883" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>HasInstancer</name></member>
      <member refid="class_hd_draw_item_1a39f0a5441e3b6dc0f499ad78ac98567f" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>HdDrawItem</name></member>
      <member refid="class_hd_st_draw_item_1a0c5ef49bf6f66d0d59efc7f50aa8f7f2" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>HdStDrawItem</name></member>
      <member refid="class_hd_st_draw_item_1a59f1d51feb2ef2c75964cc4e186d4330" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>HF_MALLOC_TAG_NEW</name></member>
      <member refid="class_hd_draw_item_1a13b5b1e19f7433783ea2cfb7fb0d6814" prot="public" virt="non-virtual" ambiguityscope="HdDrawItem::"><scope>HdStDrawItem</scope><name>HF_MALLOC_TAG_NEW</name></member>
      <member refid="class_hd_st_draw_item_1a88fca81f817a6f529231cf72d085a8e9" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>IntersectsViewVolume</name></member>
      <member refid="class_hd_st_draw_item_1a48bedab27ff9a1c4baaaa7d48bb93d35" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>SetGeometricShader</name></member>
      <member refid="class_hd_st_draw_item_1ad416be3a04efdb817b6b627c08905916" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>SetMaterialIsFinal</name></member>
      <member refid="class_hd_st_draw_item_1a913378639e371429d6dc474f1f1593c7" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>SetMaterialNetworkShader</name></member>
      <member refid="class_hd_draw_item_1a8e9100877d3d289a61fcf6e55c833ec7" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>SetMaterialTag</name></member>
      <member refid="class_hd_draw_item_1a7b01177a444cc542665b64407ef451cc" prot="public" virt="virtual"><scope>HdStDrawItem</scope><name>~HdDrawItem</name></member>
      <member refid="class_hd_st_draw_item_1a33f1c628c357699501af7eb19290835d" prot="public" virt="non-virtual"><scope>HdStDrawItem</scope><name>~HdStDrawItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
