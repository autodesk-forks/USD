<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_any_weak_ptr" kind="class" language="C++" prot="public">
    <compoundname>TfAnyWeakPtr</compoundname>
    <includes refid="any_weak_ptr_8h" local="no">anyWeakPtr.h</includes>
    <innerclass refid="struct_tf_any_weak_ptr_1_1___data" prot="private">TfAnyWeakPtr::_Data</innerclass>
    <innerclass refid="struct_tf_any_weak_ptr_1_1___empty_holder" prot="private">TfAnyWeakPtr::_EmptyHolder</innerclass>
    <innerclass refid="struct_tf_any_weak_ptr_1_1___pointer_holder" prot="private">TfAnyWeakPtr::_PointerHolder</innerclass>
    <innerclass refid="struct_tf_any_weak_ptr_1_1___pointer_holder_base" prot="private">TfAnyWeakPtr::_PointerHolderBase</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_any_weak_ptr_1af1ac81df9e3366f6fb3c8ec1a63d035a" prot="public" static="no">
        <type><ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref></type>
        <definition>typedef TfAnyWeakPtr This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="60" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_any_weak_ptr_1ad3f6cc61bf9c59093bf3fff35b101756" prot="private" static="no" mutable="no">
        <type>_Data</type>
        <definition>_Data _ptrStorage</definition>
        <argsstring></argsstring>
        <name>_ptrStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="226" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a9f7d187a75e1e9d89c4784233cfadc42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ptr</type>
          </param>
          <param>
            <type>class</type>
            <defval>typename std::enable_if&lt;Tf_SupportsWeakPtr&lt;                                 typename Ptr::DataType&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>TfAnyWeakPtr</definition>
        <argsstring>(Ptr const &amp;ptr)</argsstring>
        <name>TfAnyWeakPtr</name>
        <param>
          <type>Ptr const &amp;</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Construct an AnyWeakPtr watching <emphasis>ptr</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="66" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1aca4a87b8ba3c7ac0363567860734ac46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfAnyWeakPtr</definition>
        <argsstring>()</argsstring>
        <name>TfAnyWeakPtr</name>
        <briefdescription>
<para>Construct an AnyWeakPtr not watching any <emphasis>ptr</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="73" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1ab3efe596797e3455584d77715230e68c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfAnyWeakPtr</definition>
        <argsstring>(TfNullPtrType)</argsstring>
        <name>TfAnyWeakPtr</name>
        <param>
          <type>TfNullPtrType</type>
        </param>
        <briefdescription>
<para>Construct and implicitly convert from TfNullPtr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="80" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1abea75d9e25ddb515e52aef5f82b5f9c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfAnyWeakPtr</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>TfAnyWeakPtr</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Construct and implicitly convert from std::nullptr_t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="83" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a9af82b3619baf45588df3d8bfc101bf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfAnyWeakPtr</definition>
        <argsstring>(TfAnyWeakPtr const &amp;other)</argsstring>
        <name>TfAnyWeakPtr</name>
        <param>
          <type><ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="85" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a54d2ade1d41842b1589aa2d4d4f9a0c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
        <definition>TfAnyWeakPtr&amp; operator=</definition>
        <argsstring>(TfAnyWeakPtr const &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="89" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="89" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1af9ec594495ac6127e0c6cfb6c257ade5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~TfAnyWeakPtr</definition>
        <argsstring>()</argsstring>
        <name>~TfAnyWeakPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="97" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a7ba7a2a6278eda8ebff1eb56845c8c4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool IsInvalid</definition>
        <argsstring>() const</argsstring>
        <name>IsInvalid</name>
        <briefdescription>
<para>Return true <emphasis>only</emphasis> if this expiry checker is watching a weak pointer which has expired. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a3241c32a82fbed0716a77049f6134e1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void const  *</type>
        <definition>TF_API void const* GetUniqueIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>GetUniqueIdentifier</name>
        <briefdescription>
<para>Return the unique identifier of the WeakPtr this AnyWeakPtr contains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a700f287c23afb76a3933b86efedb8fbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API <ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref> const  *</type>
        <definition>TF_API TfWeakBase const* GetWeakBase</definition>
        <argsstring>() const</argsstring>
        <name>GetWeakBase</name>
        <briefdescription>
<para>Return the <ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref> object of the WeakPtr we are holding. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a4c966a0fe4a1ed0db04d3decb5448657" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API</type>
        <definition>TF_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>bool operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1ae9e0cd095da33c219a610515321b8db4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool operator !</definition>
        <argsstring>() const</argsstring>
        <name>operator !</name>
        <briefdescription>
<para>operator ! </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1ac7a1b5e894edc7a3e4cb0c47cf75a014" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool operator==</definition>
        <argsstring>(const TfAnyWeakPtr &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>equality operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1acb666b84696a59d926799992632f7f3e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator !=</definition>
        <argsstring>(const TfAnyWeakPtr &amp;rhs) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>inequality operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="121" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1aaa8508acd8ca0d1a01052f1956a9531b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool operator&lt;</definition>
        <argsstring>(const TfAnyWeakPtr &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>comparison operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a39fa453972ecf2ee5000fdf5c96b6b56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const TfAnyWeakPtr &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>less than or equal operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="129" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a40409fa553d4b4c144d718da817368a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator &gt;</definition>
        <argsstring>(const TfAnyWeakPtr &amp;rhs) const</argsstring>
        <name>operator &gt;</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>greater than operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="134" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a3c057d884e50c6a06b0e81d721c33354" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator &gt;=</definition>
        <argsstring>(const TfAnyWeakPtr &amp;rhs) const</argsstring>
        <name>operator &gt;=</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>greater than or equal operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="139" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1a81d1ff1f8d8a56b67333248c9d5dcc96" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API const std::type_info &amp;</type>
        <definition>TF_API const std::type_info&amp; GetTypeInfo</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeInfo</name>
        <briefdescription>
<para>returns the type_info of the underlying WeakPtr </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1ae2c35a01c85ac344f467f195e5b62589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API <ref refid="class_tf_type" kindref="compound">TfType</ref> const  &amp;</type>
        <definition>TF_API TfType const&amp; GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Returns the <ref refid="class_tf_type" kindref="compound">TfType</ref> of the underlying WeakPtr. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1aa99b522cc14f7d4a22d78368b476e12a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetHash</definition>
        <argsstring>() const</argsstring>
        <name>GetHash</name>
        <briefdescription>
<para>Return a hash value for this instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="150" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="150" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_any_weak_ptr_1ad7952c001a38a588721868dc825cbacf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API boost::python::api::object</type>
        <definition>TF_API boost::python::api::object _GetPythonObject</definition>
        <argsstring>() const</argsstring>
        <name>_GetPythonObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_any_weak_ptr_1abebcf53507570fd4b6bd91cf6bffdeb2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_PointerHolderBase *</type>
        <definition>_PointerHolderBase* _Get</definition>
        <argsstring>() const</argsstring>
        <name>_Get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="222" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="222" bodyend="224"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_any_weak_ptr_1a0419835ef4fb1216efd02bba0362cce8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class WeakPtr</type>
          </param>
        </templateparamlist>
        <type>friend WeakPtr</type>
        <definition>WeakPtr TfAnyWeakPtrDynamicCast</definition>
        <argsstring>(const TfAnyWeakPtr &amp;anyWeak, WeakPtr *)</argsstring>
        <name>TfAnyWeakPtrDynamicCast</name>
        <param>
          <type>const <ref refid="class_tf_any_weak_ptr" kindref="compound">TfAnyWeakPtr</ref> &amp;</type>
          <declname>anyWeak</declname>
        </param>
        <param>
          <type>WeakPtr *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/anyWeakPtr.h" line="168" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Provides the ability to hold an arbitrary <ref refid="class_tf_weak_ptr" kindref="compound">TfWeakPtr</ref> in a non-type-specific manner in order to observe whether it has expired or not. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/anyWeakPtr.h" line="54" column="1" bodyfile="pxr/base/tf/anyWeakPtr.h" bodystart="53" bodyend="227"/>
    <listofallmembers>
      <member refid="class_tf_any_weak_ptr_1abebcf53507570fd4b6bd91cf6bffdeb2" prot="private" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>_Get</name></member>
      <member refid="class_tf_any_weak_ptr_1ad7952c001a38a588721868dc825cbacf" prot="private" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>_GetPythonObject</name></member>
      <member refid="class_tf_any_weak_ptr_1ad3f6cc61bf9c59093bf3fff35b101756" prot="private" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>_ptrStorage</name></member>
      <member refid="class_tf_any_weak_ptr_1aa99b522cc14f7d4a22d78368b476e12a" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>GetHash</name></member>
      <member refid="class_tf_any_weak_ptr_1ae2c35a01c85ac344f467f195e5b62589" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>GetType</name></member>
      <member refid="class_tf_any_weak_ptr_1a81d1ff1f8d8a56b67333248c9d5dcc96" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>GetTypeInfo</name></member>
      <member refid="class_tf_any_weak_ptr_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_any_weak_ptr_1a700f287c23afb76a3933b86efedb8fbd" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>GetWeakBase</name></member>
      <member refid="class_tf_any_weak_ptr_1a7ba7a2a6278eda8ebff1eb56845c8c4d" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>IsInvalid</name></member>
      <member refid="class_tf_any_weak_ptr_1ae9e0cd095da33c219a610515321b8db4" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator !</name></member>
      <member refid="class_tf_any_weak_ptr_1acb666b84696a59d926799992632f7f3e" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator !=</name></member>
      <member refid="class_tf_any_weak_ptr_1a40409fa553d4b4c144d718da817368a8" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator &gt;</name></member>
      <member refid="class_tf_any_weak_ptr_1a3c057d884e50c6a06b0e81d721c33354" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator &gt;=</name></member>
      <member refid="class_tf_any_weak_ptr_1a4c966a0fe4a1ed0db04d3decb5448657" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator bool</name></member>
      <member refid="class_tf_any_weak_ptr_1aaa8508acd8ca0d1a01052f1956a9531b" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator&lt;</name></member>
      <member refid="class_tf_any_weak_ptr_1a39fa453972ecf2ee5000fdf5c96b6b56" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator&lt;=</name></member>
      <member refid="class_tf_any_weak_ptr_1a54d2ade1d41842b1589aa2d4d4f9a0c8" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator=</name></member>
      <member refid="class_tf_any_weak_ptr_1ac7a1b5e894edc7a3e4cb0c47cf75a014" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>operator==</name></member>
      <member refid="class_tf_any_weak_ptr_1a9f7d187a75e1e9d89c4784233cfadc42" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>TfAnyWeakPtr</name></member>
      <member refid="class_tf_any_weak_ptr_1aca4a87b8ba3c7ac0363567860734ac46" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>TfAnyWeakPtr</name></member>
      <member refid="class_tf_any_weak_ptr_1ab3efe596797e3455584d77715230e68c" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>TfAnyWeakPtr</name></member>
      <member refid="class_tf_any_weak_ptr_1abea75d9e25ddb515e52aef5f82b5f9c3" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>TfAnyWeakPtr</name></member>
      <member refid="class_tf_any_weak_ptr_1a9af82b3619baf45588df3d8bfc101bf0" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>TfAnyWeakPtr</name></member>
      <member refid="class_tf_any_weak_ptr_1a0419835ef4fb1216efd02bba0362cce8" prot="private" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>TfAnyWeakPtrDynamicCast</name></member>
      <member refid="class_tf_any_weak_ptr_1af1ac81df9e3366f6fb3c8ec1a63d035a" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>This</name></member>
      <member refid="class_tf_any_weak_ptr_1af9ec594495ac6127e0c6cfb6c257ade5" prot="public" virt="non-virtual"><scope>TfAnyWeakPtr</scope><name>~TfAnyWeakPtr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
