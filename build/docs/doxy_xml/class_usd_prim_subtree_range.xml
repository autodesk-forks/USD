<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_prim_subtree_range" kind="class" language="C++" prot="public">
    <compoundname>UsdPrimSubtreeRange</compoundname>
    <includes refid="prim_8h" local="no">prim.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_usd_prim_subtree_range_1a40d6bfc1c3337fa6b12d1b37b0dc0db1" prot="public" static="no">
        <type><ref refid="class_usd_prim_subtree_iterator" kindref="compound">UsdPrimSubtreeIterator</ref></type>
        <definition>typedef UsdPrimSubtreeIterator iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Iterator type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2643" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_subtree_range_1a23a6736b56b9362b6c2300548017e873" prot="public" static="no">
        <type><ref refid="class_usd_prim_subtree_iterator" kindref="compound">UsdPrimSubtreeIterator</ref></type>
        <definition>typedef UsdPrimSubtreeIterator const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Const iterator type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2645" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_subtree_range_1ad319fc54a93a2c7058c70e40428ed2e2" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>typedef std::ptrdiff_t difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
<para>Iterator difference type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2647" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2647" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_subtree_range_1aac03fcf05950c2c26b7e7d82a5cd6cb5" prot="public" static="no">
        <type><ref refid="class_usd_prim" kindref="compound">iterator::value_type</ref></type>
        <definition>typedef iterator::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Iterator value_type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2649" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2649" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_subtree_range_1a6e997adfc98892497219c84757d0bd6b" prot="public" static="no">
        <type><ref refid="class_usd_prim" kindref="compound">iterator::reference</ref></type>
        <definition>typedef iterator::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
<para>Iterator reference_type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2651" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2651" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_prim_subtree_range_1af0fd8c68745720f67d30822497b95a6c" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim_subtree_range_1a40d6bfc1c3337fa6b12d1b37b0dc0db1" kindref="member">iterator</ref></type>
        <definition>iterator _begin</definition>
        <argsstring></argsstring>
        <name>_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2752" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_subtree_range_1a9be12e0f5a73536c636d14ce32f65a86" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim_subtree_range_1a40d6bfc1c3337fa6b12d1b37b0dc0db1" kindref="member">iterator</ref></type>
        <definition>iterator _end</definition>
        <argsstring></argsstring>
        <name>_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2753" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2753" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_prim_subtree_range_1ac1f2ac0fc9248f229d4230483ca04596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdPrimSubtreeRange</definition>
        <argsstring>()=default</argsstring>
        <name>UsdPrimSubtreeRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2653" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a9e05bded705c6a1ebdc8c6125e810e50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPrimSubtreeRange</definition>
        <argsstring>(UsdPrimSubtreeIterator begin, UsdPrimSubtreeIterator end)</argsstring>
        <name>UsdPrimSubtreeRange</name>
        <param>
          <type><ref refid="class_usd_prim_subtree_iterator" kindref="compound">UsdPrimSubtreeIterator</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="class_usd_prim_subtree_iterator" kindref="compound">UsdPrimSubtreeIterator</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Construct with a pair of iterators. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2656" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2656" bodyend="2658"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range_1a40d6bfc1c3337fa6b12d1b37b0dc0db1" kindref="member">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>First iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2661" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2661" bodyend="2661"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a39112ae08f6ffc7ee58c6aa79772e094" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range_1a23a6736b56b9362b6c2300548017e873" kindref="member">const_iterator</ref></type>
        <definition>const_iterator cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
<para>First iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2664" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2664" bodyend="2664"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a68b688a51bd0cf6fb5bc2cba292209a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range_1a40d6bfc1c3337fa6b12d1b37b0dc0db1" kindref="member">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Past-the-end iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2667" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2667" bodyend="2667"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a93791e61ab486b4022c389d634b4facc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range_1a23a6736b56b9362b6c2300548017e873" kindref="member">const_iterator</ref></type>
        <definition>const_iterator cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
<para>Past-the-end iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2670" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2670" bodyend="2670"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Return !empty(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2673" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2673" bodyend="2675"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a9b948f0b95addf9684b8479b9e91f028" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool equal</definition>
        <argsstring>(const UsdPrimSubtreeRange &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality compare. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2678" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2678" bodyend="2680"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a0223179d7f3b9d4f4c047c503c9a721a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range_1a6e997adfc98892497219c84757d0bd6b" kindref="member">reference</ref></type>
        <definition>reference front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <briefdescription>
<para>Return *begin(). This range must not be empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2683" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2683" bodyend="2686"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1ab9fde80f01cca3cb35a1161c8cbd4d67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
        <definition>UsdPrimSubtreeRange&amp; advance_begin</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>advance_begin</name>
        <param>
          <type><ref refid="class_usd_prim_subtree_range_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Advance this range&apos;s begin iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2689" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2689" bodyend="2692"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1aa243fb8a6d1c1cbe60fa6a491c28a8e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
        <definition>UsdPrimSubtreeRange&amp; advance_end</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>advance_end</name>
        <param>
          <type><ref refid="class_usd_prim_subtree_range_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member">difference_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Advance this range&apos;s end iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2695" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2695" bodyend="2698"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_subtree_range_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Return <ref refid="class_usd_prim_subtree_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" kindref="member">begin()</ref> == <ref refid="class_usd_prim_subtree_range_1a68b688a51bd0cf6fb5bc2cba292209a8" kindref="member">end()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2701" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2701" bodyend="2701"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_prim_subtree_range_1a76ab64647348d9165b9752e8d803ca27" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdPrimSubtreeRange &amp;lhs, const UsdPrimSubtreeRange &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2705" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2705" bodyend="2708"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_subtree_range_1ad7fa73a5466b8ca8c158c3d17e4d3472" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdPrimSubtreeRange &amp;lhs, const ForwardRange &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2712" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2712" bodyend="2723"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_subtree_range_1a633cbec06a92e680b500b4105e7029bb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const ForwardRange &amp;lhs, const UsdPrimSubtreeRange &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2727" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2727" bodyend="2730"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_subtree_range_1aaa06ccd068d733b46fb715a2f51e3f1d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdPrimSubtreeRange &amp;lhs, const UsdPrimSubtreeRange &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2733" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2733" bodyend="2736"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_subtree_range_1aee4c404eb3a56b41426d73a5abf07d7c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const ForwardRange &amp;lhs, const UsdPrimSubtreeRange &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2740" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2740" bodyend="2743"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_prim_subtree_range_1ae883d3153371ec159f8cb2418a3fe11a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardRange</type>
          </param>
        </templateparamlist>
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdPrimSubtreeRange &amp;lhs, const ForwardRange &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_prim_subtree_range" kindref="compound">UsdPrimSubtreeRange</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const ForwardRange &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/prim.h" line="2747" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2747" bodyend="2750"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Forward iterator range of sibling <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> s. </para>
    </briefdescription>
    <detaileddescription>
<para>This range type contains a pair of <ref refid="class_usd_prim_subtree_iterator" kindref="compound">UsdPrimSubtreeIterator</ref> s, denoting a half-open range of <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> siblings. It provides a subset of container-like API, such as <ref refid="class_usd_prim_subtree_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" kindref="member">begin()</ref>, <ref refid="class_usd_prim_subtree_range_1a68b688a51bd0cf6fb5bc2cba292209a8" kindref="member">end()</ref>, <ref refid="class_usd_prim_subtree_range_1a0223179d7f3b9d4f4c047c503c9a721a" kindref="member">front()</ref>, <ref refid="class_usd_prim_subtree_range_1a644718bb2fb240de962dc3c9a1fdf0dc" kindref="member">empty()</ref>, etc. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/prim.h" line="2640" column="1" bodyfile="pxr/usd/usd/prim.h" bodystart="2640" bodyend="2754"/>
    <listofallmembers>
      <member refid="class_usd_prim_subtree_range_1af0fd8c68745720f67d30822497b95a6c" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>_begin</name></member>
      <member refid="class_usd_prim_subtree_range_1a9be12e0f5a73536c636d14ce32f65a86" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>_end</name></member>
      <member refid="class_usd_prim_subtree_range_1ab9fde80f01cca3cb35a1161c8cbd4d67" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>advance_begin</name></member>
      <member refid="class_usd_prim_subtree_range_1aa243fb8a6d1c1cbe60fa6a491c28a8e6" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>advance_end</name></member>
      <member refid="class_usd_prim_subtree_range_1a0c62c15c8ed609e7e5e9518cf5f5c712" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>begin</name></member>
      <member refid="class_usd_prim_subtree_range_1a39112ae08f6ffc7ee58c6aa79772e094" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>cbegin</name></member>
      <member refid="class_usd_prim_subtree_range_1a93791e61ab486b4022c389d634b4facc" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>cend</name></member>
      <member refid="class_usd_prim_subtree_range_1a23a6736b56b9362b6c2300548017e873" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>const_iterator</name></member>
      <member refid="class_usd_prim_subtree_range_1ad319fc54a93a2c7058c70e40428ed2e2" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>difference_type</name></member>
      <member refid="class_usd_prim_subtree_range_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>empty</name></member>
      <member refid="class_usd_prim_subtree_range_1a68b688a51bd0cf6fb5bc2cba292209a8" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>end</name></member>
      <member refid="class_usd_prim_subtree_range_1a9b948f0b95addf9684b8479b9e91f028" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>equal</name></member>
      <member refid="class_usd_prim_subtree_range_1a0223179d7f3b9d4f4c047c503c9a721a" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>front</name></member>
      <member refid="class_usd_prim_subtree_range_1a40d6bfc1c3337fa6b12d1b37b0dc0db1" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>iterator</name></member>
      <member refid="class_usd_prim_subtree_range_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator bool</name></member>
      <member refid="class_usd_prim_subtree_range_1aaa06ccd068d733b46fb715a2f51e3f1d" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_subtree_range_1aee4c404eb3a56b41426d73a5abf07d7c" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_subtree_range_1ae883d3153371ec159f8cb2418a3fe11a" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_subtree_range_1a76ab64647348d9165b9752e8d803ca27" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator==</name></member>
      <member refid="class_usd_prim_subtree_range_1ad7fa73a5466b8ca8c158c3d17e4d3472" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator==</name></member>
      <member refid="class_usd_prim_subtree_range_1a633cbec06a92e680b500b4105e7029bb" prot="private" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>operator==</name></member>
      <member refid="class_usd_prim_subtree_range_1a6e997adfc98892497219c84757d0bd6b" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>reference</name></member>
      <member refid="class_usd_prim_subtree_range_1ac1f2ac0fc9248f229d4230483ca04596" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>UsdPrimSubtreeRange</name></member>
      <member refid="class_usd_prim_subtree_range_1a9e05bded705c6a1ebdc8c6125e810e50" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>UsdPrimSubtreeRange</name></member>
      <member refid="class_usd_prim_subtree_range_1aac03fcf05950c2c26b7e7d82a5cd6cb5" prot="public" virt="non-virtual"><scope>UsdPrimSubtreeRange</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
