<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="imaging_2glf_2utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="imaging_2glf_2api_8h" local="yes">pxr/imaging/glf/api.h</includes>
    <includes refid="gl_api_8h" local="yes">pxr/imaging/garch/glApi.h</includes>
    <includes refid="imaging_2hio_2types_8h" local="yes">pxr/imaging/hio/types.h</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="47381">
        <label>pxr/imaging/glf/api.h</label>
        <link refid="imaging_2glf_2api_8h_source"/>
        <childnode refid="47382" relation="include">
        </childnode>
      </node>
      <node id="47382">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="47383" relation="include">
        </childnode>
      </node>
      <node id="47387">
        <label>stdint.h</label>
      </node>
      <node id="47390">
        <label>stdlib.h</label>
      </node>
      <node id="47379">
        <label>pxr/imaging/glf/utils.h</label>
        <link refid="imaging_2glf_2utils_8h"/>
        <childnode refid="47380" relation="include">
        </childnode>
        <childnode refid="47381" relation="include">
        </childnode>
        <childnode refid="47384" relation="include">
        </childnode>
        <childnode refid="47388" relation="include">
        </childnode>
        <childnode refid="47392" relation="include">
        </childnode>
      </node>
      <node id="47385">
        <label>pxr/imaging/garch/api.h</label>
        <link refid="imaging_2garch_2api_8h_source"/>
        <childnode refid="47382" relation="include">
        </childnode>
      </node>
      <node id="47392">
        <label>string</label>
      </node>
      <node id="47391">
        <label>cinttypes</label>
      </node>
      <node id="47380">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="47386">
        <label>pxr/imaging/garch/khrplatform.h</label>
        <link refid="khrplatform_8h_source"/>
        <childnode refid="47387" relation="include">
        </childnode>
      </node>
      <node id="47384">
        <label>pxr/imaging/garch/glApi.h</label>
        <link refid="gl_api_8h_source"/>
        <childnode refid="47380" relation="include">
        </childnode>
        <childnode refid="47385" relation="include">
        </childnode>
        <childnode refid="47386" relation="include">
        </childnode>
      </node>
      <node id="47389">
        <label>pxr/imaging/hio/api.h</label>
        <link refid="imaging_2hio_2api_8h_source"/>
        <childnode refid="47382" relation="include">
        </childnode>
      </node>
      <node id="47383">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="47388">
        <label>pxr/imaging/hio/types.h</label>
        <link refid="imaging_2hio_2types_8h_source"/>
        <childnode refid="47380" relation="include">
        </childnode>
        <childnode refid="47389" relation="include">
        </childnode>
        <childnode refid="47390" relation="include">
        </childnode>
        <childnode refid="47391" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="imaging_2glf_2utils_8h_1a51be1a5177eeeb2e53e2ea0164fe3223" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API int</type>
        <definition>GLF_API int GlfGetNumElements</definition>
        <argsstring>(GLenum format)</argsstring>
        <name>GlfGetNumElements</name>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Number of elements. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of elements (channels) in a given GL enum format.</para>
<para>Supported formats are : GL_DEPTH_COMPONENT, GL_COLOR_INDEX, GL_ALPHA, GL_RED, GL_LUMINANCE, GL_RG, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/utils.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2utils_8h_1a2d5ea7b8537d9669dfdf1049b8b3121d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API int</type>
        <definition>GLF_API int GlfGetElementSize</definition>
        <argsstring>(GLenum type)</argsstring>
        <name>GlfGetElementSize</name>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Byte size of a GL type. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the size in bytes of a given GL type.</para>
<para>Supported types are : GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_FLOAT, GL_DOUBLE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/utils.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2utils_8h_1a3a16ed54c33e646df000a92ed1cd038c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API HioFormat</type>
        <definition>GLF_API HioFormat GlfGetHioFormat</definition>
        <argsstring>(GLenum glFormat, GLenum glType, bool isSRGB)</argsstring>
        <name>GlfGetHioFormat</name>
        <param>
          <type>GLenum</type>
          <declname>glFormat</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>glType</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSRGB</declname>
        </param>
        <briefdescription>
<para>HioFormat. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the HioFormat for the given GL format and GL type</para>
<para>Supported formats are : GL_DEPTH_COMPONENT, GL_COLOR_INDEX, GL_ALPHA, GL_RED, GL_LUMINANCE, GL_RG, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA</para>
<para>Supported types are : GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_FLOAT, GL_DOUBLE </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/utils.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2utils_8h_1a59649449fe0e1348e91afff86b0c7139" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API bool</type>
        <definition>GLF_API bool GlfCheckGLFrameBufferStatus</definition>
        <argsstring>(GLuint target, std::string *reason)</argsstring>
        <name>GlfCheckGLFrameBufferStatus</name>
        <param>
          <type>GLuint</type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Checks the valitidy of a GL framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para>True if the currently bound GL framebuffer is valid and can be bound or returns the cause of the problem </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/utils.h" line="74" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_IMAGING_GLF_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_IMAGING_GLF_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/glf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/garch/glApi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hio/types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">GLF_API<sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2utils_8h_1a51be1a5177eeeb2e53e2ea0164fe3223" kindref="member">GlfGetNumElements</ref>(GLenum<sp/>format);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2utils_8h_1a2d5ea7b8537d9669dfdf1049b8b3121d" kindref="member">GlfGetElementSize</ref>(GLenum<sp/>type);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="66"><highlight class="normal">HioFormat<sp/><ref refid="imaging_2glf_2utils_8h_1a3a16ed54c33e646df000a92ed1cd038c" kindref="member">GlfGetHioFormat</ref>(GLenum<sp/>glFormat,<sp/>GLenum<sp/>glType,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSRGB);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2utils_8h_1a59649449fe0e1348e91afff86b0c7139" kindref="member">GlfCheckGLFrameBufferStatus</ref>(GLuint<sp/>target,<sp/>std::string<sp/>*<sp/>reason);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/imaging/glf/utils.h"/>
  </compounddef>
</doxygen>
