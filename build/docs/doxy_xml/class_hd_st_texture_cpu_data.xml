<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_texture_cpu_data" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HdStTextureCpuData</compoundname>
    <includes refid="texture_cpu_data_8h" local="no">textureCpuData.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_texture_cpu_data_1a75eaabc358e7eceb079cc588fcb99145" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API</type>
        <definition>virtual HDST_API ~HdStTextureCpuData</definition>
        <argsstring>()</argsstring>
        <name>~HdStTextureCpuData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureCpuData.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_cpu_data_1a173402061c4b75817cc6a61d4d4ada98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="struct_hgi_texture_desc" kindref="compound">HgiTextureDesc</ref> &amp;</type>
        <definition>virtual const HgiTextureDesc&amp; GetTextureDesc</definition>
        <argsstring>() const =0</argsstring>
        <name>GetTextureDesc</name>
        <briefdescription>
<para>The metadata of the texture (width, height, ...) including a pointer to the CPU data (as initialData). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureCpuData.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_cpu_data_1ac917a9a6ac39e6e67ed83b2d49bb13a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool GetGenerateMipmaps</definition>
        <argsstring>() const =0</argsstring>
        <name>GetGenerateMipmaps</name>
        <briefdescription>
<para>Make GPU generate mipmaps. </para>
        </briefdescription>
        <detaileddescription>
<para>The number of mipmaps is specified in the texture descriptor and the mipmaps are generate from the mip level 0 data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureCpuData.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_texture_cpu_data_1aedec2959336b77211e97d8d072b33f88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool IsValid</definition>
        <argsstring>() const =0</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Are the data valid (e.g., false if file could not be found). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureCpuData.h" line="54" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents CPU data that can be stored in a <ref refid="class_hd_st_uv_texture_object" kindref="compound">HdStUvTextureObject</ref>, mostly, likely during the load phase to be committed to the GPU. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/textureCpuData.h" line="39" column="1" bodyfile="pxr/imaging/hdSt/textureCpuData.h" bodystart="39" bodyend="55"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_cpu_data_1ac917a9a6ac39e6e67ed83b2d49bb13a6" prot="public" virt="pure-virtual"><scope>HdStTextureCpuData</scope><name>GetGenerateMipmaps</name></member>
      <member refid="class_hd_st_texture_cpu_data_1a173402061c4b75817cc6a61d4d4ada98" prot="public" virt="pure-virtual"><scope>HdStTextureCpuData</scope><name>GetTextureDesc</name></member>
      <member refid="class_hd_st_texture_cpu_data_1aedec2959336b77211e97d8d072b33f88" prot="public" virt="pure-virtual"><scope>HdStTextureCpuData</scope><name>IsValid</name></member>
      <member refid="class_hd_st_texture_cpu_data_1a75eaabc358e7eceb079cc588fcb99145" prot="public" virt="virtual"><scope>HdStTextureCpuData</scope><name>~HdStTextureCpuData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
