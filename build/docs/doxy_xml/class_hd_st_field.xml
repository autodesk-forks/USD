<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_field" kind="class" language="C++" prot="public">
    <compoundname>HdStField</compoundname>
    <basecompoundref refid="class_hd_field" prot="public" virt="non-virtual">HdField</basecompoundref>
    <includes refid="t_2field_8h" local="no">field.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_field_1a1d5202a2c24ef6c28304697584ebd90b" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken _fieldType</definition>
        <argsstring></argsstring>
        <name>_fieldType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="74" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_1a4b9b4de2beb80747e0d57d6a64fd3c85" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref></type>
        <definition>HdStTextureIdentifier _textureId</definition>
        <argsstring></argsstring>
        <name>_textureId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="76" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_1aa538764ba8af222ec9defee1cddd8fa0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _textureMemory</definition>
        <argsstring></argsstring>
        <name>_textureMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="77" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_field_1a936355c3c5cac024bb507a5870bae3e3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isInitialized</definition>
        <argsstring></argsstring>
        <name>_isInitialized</name>
        <bitfield> 1</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="79" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_field_1adbea7b6eb5160879e1ef092deab06193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStField</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;fieldType)</argsstring>
        <name>HdStField</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>fieldType</declname>
        </param>
        <briefdescription>
<para>For now, only fieldType HdStTokens-&gt;openvdbAsset is supported. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_1a5bbd5ba6ca2f1c81a90f22911c94c0a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStField</definition>
        <argsstring>() override</argsstring>
        <name>~HdStField</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <reimplements refid="class_hd_bprim_1ac100b9064606ab088306512425439cf7">Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Loads field as 3d texture to generate GetFieldResource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_1a59b589b9042f2173054e853d4d58036f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API HdDirtyBits</type>
        <definition>HDST_API HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <reimplements refid="class_hd_bprim_1ac05e81662ee475cfe52ce97e84e7205d">GetInitialDirtyBitsMask</reimplements>
        <briefdescription>
<para>Returns the minimal set of dirty bits to place in the change tracker for use in the first sync of this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically this would be all dirty bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_1a4cb57cabdc2daa981ccee1e107eab854" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> const  &amp;</type>
        <definition>HDST_API HdStTextureIdentifier const&amp; GetTextureIdentifier</definition>
        <argsstring>() const</argsstring>
        <name>GetTextureIdentifier</name>
        <briefdescription>
<para>Initialized by Sync. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="58" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_1ac4d54f300038209ed9aaf4177f5b9ad9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetTextureMemory</definition>
        <argsstring>() const</argsstring>
        <name>GetTextureMemory</name>
        <briefdescription>
<para>Get memory request for this field. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="63" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="63" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_st_field_1ae86ad5f5b9f2fd722403621680c4ee5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static HDST_API const TfTokenVector&amp; GetSupportedBprimTypes</definition>
        <argsstring>()</argsstring>
        <name>GetSupportedBprimTypes</name>
        <briefdescription>
<para>Bprim types handled by this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_field_1ae6273813519e17b90bb4da5a6e4f6af0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>static HDST_API bool IsSupportedBprimType</definition>
        <argsstring>(const TfToken &amp;bprimType)</argsstring>
        <name>IsSupportedBprimType</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>bprimType</declname>
        </param>
        <briefdescription>
<para>Can bprim type be handled by this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/field.h" line="71" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a Field Buffer Prim. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3153">
        <label>HdField</label>
        <link refid="class_hd_field"/>
        <childnode refid="3154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3152">
        <label>HdStField</label>
        <link refid="class_hd_st_field"/>
        <childnode refid="3153" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3154">
        <label>HdBprim</label>
        <link refid="class_hd_bprim"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3156">
        <label>HdField</label>
        <link refid="class_hd_field"/>
        <childnode refid="3157" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3155">
        <label>HdStField</label>
        <link refid="class_hd_st_field"/>
        <childnode refid="3156" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3157">
        <label>HdBprim</label>
        <link refid="class_hd_bprim"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/field.h" line="39" column="1" bodyfile="pxr/imaging/hdSt/field.h" bodystart="39" bodyend="80"/>
    <listofallmembers>
      <member refid="class_hd_st_field_1a1d5202a2c24ef6c28304697584ebd90b" prot="private" virt="non-virtual"><scope>HdStField</scope><name>_fieldType</name></member>
      <member refid="class_hd_st_field_1a936355c3c5cac024bb507a5870bae3e3" prot="private" virt="non-virtual"><scope>HdStField</scope><name>_isInitialized</name></member>
      <member refid="class_hd_st_field_1a4b9b4de2beb80747e0d57d6a64fd3c85" prot="private" virt="non-virtual"><scope>HdStField</scope><name>_textureId</name></member>
      <member refid="class_hd_st_field_1aa538764ba8af222ec9defee1cddd8fa0" prot="private" virt="non-virtual"><scope>HdStField</scope><name>_textureMemory</name></member>
      <member refid="class_hd_field_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public" virt="non-virtual"><scope>HdStField</scope><name>AllDirty</name></member>
      <member refid="class_hd_field_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public" virt="non-virtual"><scope>HdStField</scope><name>Clean</name></member>
      <member refid="class_hd_field_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" virt="non-virtual"><scope>HdStField</scope><name>DirtyBits</name></member>
      <member refid="class_hd_field_1a2f2dbbbe47e871395a781c8105398c8fae10a6f0d75a0571b8a6a5b77561740c6" prot="public" virt="non-virtual"><scope>HdStField</scope><name>DirtyParams</name></member>
      <member refid="class_hd_field_1a2f2dbbbe47e871395a781c8105398c8fa3eaf7284f82a6abc25f2a02244014eb6" prot="public" virt="non-virtual"><scope>HdStField</scope><name>DirtyTransform</name></member>
      <member refid="class_hd_bprim_1a385eed04c15e636796b187bfdf0fcbf0" prot="public" virt="virtual"><scope>HdStField</scope><name>Finalize</name></member>
      <member refid="class_hd_bprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdStField</scope><name>GetId</name></member>
      <member refid="class_hd_st_field_1a59b589b9042f2173054e853d4d58036f" prot="public" virt="virtual"><scope>HdStField</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_st_field_1ae86ad5f5b9f2fd722403621680c4ee5d" prot="public" virt="non-virtual"><scope>HdStField</scope><name>GetSupportedBprimTypes</name></member>
      <member refid="class_hd_st_field_1a4cb57cabdc2daa981ccee1e107eab854" prot="public" virt="non-virtual"><scope>HdStField</scope><name>GetTextureIdentifier</name></member>
      <member refid="class_hd_st_field_1ac4d54f300038209ed9aaf4177f5b9ad9" prot="public" virt="non-virtual"><scope>HdStField</scope><name>GetTextureMemory</name></member>
      <member refid="class_hd_bprim_1aa5ee52b8b01515706d54cf147de7f884" prot="public" virt="non-virtual"><scope>HdStField</scope><name>HdBprim</name></member>
      <member refid="class_hd_field_1a9748a0886f081de07286b466df16d374" prot="public" virt="non-virtual"><scope>HdStField</scope><name>HdField</name></member>
      <member refid="class_hd_st_field_1adbea7b6eb5160879e1ef092deab06193" prot="public" virt="non-virtual"><scope>HdStField</scope><name>HdStField</name></member>
      <member refid="class_hd_st_field_1ae6273813519e17b90bb4da5a6e4f6af0" prot="public" virt="non-virtual"><scope>HdStField</scope><name>IsSupportedBprimType</name></member>
      <member refid="class_hd_st_field_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" virt="virtual"><scope>HdStField</scope><name>Sync</name></member>
      <member refid="class_hd_bprim_1a214b96ab3e11db88364e8b73b8a6940c" prot="public" virt="virtual"><scope>HdStField</scope><name>~HdBprim</name></member>
      <member refid="class_hd_field_1ab93df9e47f2e35922cff0d68abb781d3" prot="public" virt="non-virtual"><scope>HdStField</scope><name>~HdField</name></member>
      <member refid="class_hd_st_field_1a5bbd5ba6ca2f1c81a90f22911c94c0a0" prot="public" virt="non-virtual"><scope>HdStField</scope><name>~HdStField</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
