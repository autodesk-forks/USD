<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_abstract_data_const_value" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SdfAbstractDataConstValue</compoundname>
    <derivedcompoundref refid="class_sdf_abstract_data_const_typed_value" prot="public" virt="non-virtual">SdfAbstractDataConstTypedValue&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_sdf_abstract_data_const_typed_value" prot="public" virt="non-virtual">SdfAbstractDataConstTypedValue&lt; std::string &gt;</derivedcompoundref>
    <includes refid="abstract_data_8h" local="no">abstractData.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_sdf_abstract_data_const_value_1ac12da90997b664f3bd94503936234f9d" prot="public" static="no" mutable="no">
        <type>const void *</type>
        <definition>const void* value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="535" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_abstract_data_const_value_1aca21ea8d3375ec28c4571c5cad1f77f4" prot="public" static="no" mutable="no">
        <type>const std::type_info &amp;</type>
        <definition>const std::type_info&amp; valueType</definition>
        <argsstring></argsstring>
        <name>valueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="536" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="536" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_abstract_data_const_value_1a6fe7561375c2ac37f9fa696e3bd7bac4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool GetValue</definition>
        <argsstring>(VtValue *value) const =0</argsstring>
        <name>GetValue</name>
        <reimplementedby refid="class_sdf_abstract_data_const_typed_value_1ae852f7d5fc116045493c42f4b1209fc4">GetValue</reimplementedby>
        <reimplementedby refid="class_sdf_abstract_data_const_typed_value_1ae852f7d5fc116045493c42f4b1209fc4">GetValue</reimplementedby>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="522" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_abstract_data_const_value_1a7829601f16679948d91522e052153645" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetValue</definition>
        <argsstring>(T *v) const</argsstring>
        <name>GetValue</name>
        <param>
          <type>T *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="524" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="524" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_abstract_data_const_value_1acaf1846bad4c8f63745892b9349f4aa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool IsEqual</definition>
        <argsstring>(const VtValue &amp;value) const =0</argsstring>
        <name>IsEqual</name>
        <reimplementedby refid="class_sdf_abstract_data_const_typed_value_1a68972ee68a03b95011fcd108a0ab2af5">IsEqual</reimplementedby>
        <reimplementedby refid="class_sdf_abstract_data_const_typed_value_1a68972ee68a03b95011fcd108a0ab2af5">IsEqual</reimplementedby>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="533" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_sdf_abstract_data_const_value_1a451dcb1ffd897a45852e43736a15663a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfAbstractDataConstValue</definition>
        <argsstring>(const void *value_, const std::type_info &amp;valueType_)</argsstring>
        <name>SdfAbstractDataConstValue</name>
        <param>
          <type>const void *</type>
          <declname>value_</declname>
        </param>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>valueType_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="539" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="539" bodyend="544"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A type-erased container for a const field value in an <ref refid="class_sdf_abstract_data" kindref="compound">SdfAbstractData</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_sdf_abstract_data_const_typed_value" kindref="compound">SdfAbstractDataConstTypedValue</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4989">
        <label>SdfAbstractDataConstTypedValue&lt; std::string &gt;</label>
        <link refid="class_sdf_abstract_data_const_typed_value"/>
        <childnode refid="4987" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4987">
        <label>SdfAbstractDataConstValue</label>
        <link refid="class_sdf_abstract_data_const_value"/>
      </node>
      <node id="4988">
        <label>SdfAbstractDataConstTypedValue&lt; T &gt;</label>
        <link refid="class_sdf_abstract_data_const_typed_value"/>
        <childnode refid="4987" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/usd/sdf/abstractData.h" line="520" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="519" bodyend="545"/>
    <listofallmembers>
      <member refid="class_sdf_abstract_data_const_value_1a6fe7561375c2ac37f9fa696e3bd7bac4" prot="public" virt="pure-virtual"><scope>SdfAbstractDataConstValue</scope><name>GetValue</name></member>
      <member refid="class_sdf_abstract_data_const_value_1a7829601f16679948d91522e052153645" prot="public" virt="non-virtual"><scope>SdfAbstractDataConstValue</scope><name>GetValue</name></member>
      <member refid="class_sdf_abstract_data_const_value_1acaf1846bad4c8f63745892b9349f4aa3" prot="public" virt="pure-virtual"><scope>SdfAbstractDataConstValue</scope><name>IsEqual</name></member>
      <member refid="class_sdf_abstract_data_const_value_1a451dcb1ffd897a45852e43736a15663a" prot="protected" virt="non-virtual"><scope>SdfAbstractDataConstValue</scope><name>SdfAbstractDataConstValue</name></member>
      <member refid="class_sdf_abstract_data_const_value_1ac12da90997b664f3bd94503936234f9d" prot="public" virt="non-virtual"><scope>SdfAbstractDataConstValue</scope><name>value</name></member>
      <member refid="class_sdf_abstract_data_const_value_1aca21ea8d3375ec28c4571c5cad1f77f4" prot="public" virt="non-virtual"><scope>SdfAbstractDataConstValue</scope><name>valueType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
