<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_embree_renderer" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdEmbreeRenderer</compoundname>
    <includes refid="renderer_8h" local="no">renderer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_embree_renderer_1a21cece5f580f5106d1a7783e4a47bccd" prot="private" static="no" mutable="no">
        <type>HdRenderPassAovBindingVector</type>
        <definition>HdRenderPassAovBindingVector _aovBindings</definition>
        <argsstring></argsstring>
        <name>_aovBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="169" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a2fe4f80a8400ca30d0b25e59845a7703" prot="private" static="no" mutable="no">
        <type>HdParsedAovTokenVector</type>
        <definition>HdParsedAovTokenVector _aovNames</definition>
        <argsstring></argsstring>
        <name>_aovNames</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="171" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1af367582ad19fc9f7839ff3cd1753bb13" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _aovBindingsNeedValidation</definition>
        <argsstring></argsstring>
        <name>_aovBindingsNeedValidation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="174" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a08f30a4cf6bcfbddeae12b131daba2bf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _aovBindingsValid</definition>
        <argsstring></argsstring>
        <name>_aovBindingsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="176" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a3da9381a755704b5b3c5b6fc7eeb768a" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i _dataWindow</definition>
        <argsstring></argsstring>
        <name>_dataWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="179" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1ac8435c09234cd6b9bf78d0d9f513b19c" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int _width</definition>
        <argsstring></argsstring>
        <name>_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="182" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1ae56087f20883e5dac738adf23c2bfd5b" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int _height</definition>
        <argsstring></argsstring>
        <name>_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="184" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1ac23874223ef3230add9cb80499c337aa" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _viewMatrix</definition>
        <argsstring></argsstring>
        <name>_viewMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="187" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1aab6c68e82d58a9e0f8fbb26290d4ffa2" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _projMatrix</definition>
        <argsstring></argsstring>
        <name>_projMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="189" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a11e6bc4bfc00ebab0aa9a04dc614a63e" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _inverseViewMatrix</definition>
        <argsstring></argsstring>
        <name>_inverseViewMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="191" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a474419386ac4528f4bcc4f62a3f9a8bf" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _inverseProjMatrix</definition>
        <argsstring></argsstring>
        <name>_inverseProjMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="193" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a9368a65db0d4b44cc9a912d6cff84851" prot="private" static="no" mutable="no">
        <type>RTCScene</type>
        <definition>RTCScene _scene</definition>
        <argsstring></argsstring>
        <name>_scene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="196" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1ad7c679a410700a3ce5f9e1fcb7693fbb" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _samplesToConvergence</definition>
        <argsstring></argsstring>
        <name>_samplesToConvergence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="199" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1aba85f194696368e3597f54a4d3448b0f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _ambientOcclusionSamples</definition>
        <argsstring></argsstring>
        <name>_ambientOcclusionSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="201" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a978b73ef7db1f75f244cc8f891f51f8c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _enableSceneColors</definition>
        <argsstring></argsstring>
        <name>_enableSceneColors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="203" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_renderer_1a799162693022b69f2c08cb61b855a52a" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; _completedSamples</definition>
        <argsstring></argsstring>
        <name>_completedSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="206" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_embree_renderer_1a26111fa107361000539a403c17fc39c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdEmbreeRenderer</definition>
        <argsstring>()</argsstring>
        <name>HdEmbreeRenderer</name>
        <briefdescription>
<para>Renderer constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a2817814d3a22cddab53ec19a1cc0dcc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~HdEmbreeRenderer</definition>
        <argsstring>()</argsstring>
        <name>~HdEmbreeRenderer</name>
        <briefdescription>
<para>Renderer destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1aa0897b124fc469f73d034c19b96b6783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetScene</definition>
        <argsstring>(RTCScene scene)</argsstring>
        <name>SetScene</name>
        <param>
          <type>RTCScene</type>
          <declname>scene</declname>
        </param>
        <briefdescription>
<para>Set the embree scene that this renderer should raycast into. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scene</parametername>
</parameternamelist>
<parameterdescription>
<para>The embree scene to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1ac333272bad19406feb162fd1eab4a373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetDataWindow</definition>
        <argsstring>(const GfRect2i &amp;dataWindow)</argsstring>
        <name>SetDataWindow</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>dataWindow</declname>
        </param>
        <briefdescription>
<para>Set the data window to fill (same meaning as in <ref refid="class_camera_util_framing" kindref="compound">CameraUtilFraming</ref> with coordinate system also being y-Down). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1aa5e93ceac08d87d6ac36c708049d4abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetCamera</definition>
        <argsstring>(const GfMatrix4d &amp;viewMatrix, const GfMatrix4d &amp;projMatrix)</argsstring>
        <name>SetCamera</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>viewMatrix</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>projMatrix</declname>
        </param>
        <briefdescription>
<para>Set the camera to use for rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>viewMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera&apos;s world-to-view matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>projMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>The camera&apos;s view-to-NDC projection matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a4020ad5c85f1334e788327aadc103fdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAovBindings</definition>
        <argsstring>(HdRenderPassAovBindingVector const &amp;aovBindings)</argsstring>
        <name>SetAovBindings</name>
        <param>
          <type>HdRenderPassAovBindingVector const &amp;</type>
          <declname>aovBindings</declname>
        </param>
        <briefdescription>
<para>Set the aov bindings to use for rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>aovBindings</parametername>
</parameternamelist>
<parameterdescription>
<para>A list of aov bindings. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a8f72e76f37056942ed180dde11285ff3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdRenderPassAovBindingVector const  &amp;</type>
        <definition>HdRenderPassAovBindingVector const&amp; GetAovBindings</definition>
        <argsstring>() const</argsstring>
        <name>GetAovBindings</name>
        <briefdescription>
<para>Get the aov bindings being used for rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the current aov bindings. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="82" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a040eee048aee16496582dde49c8f8ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetSamplesToConvergence</definition>
        <argsstring>(int samplesToConvergence)</argsstring>
        <name>SetSamplesToConvergence</name>
        <param>
          <type>int</type>
          <declname>samplesToConvergence</declname>
        </param>
        <briefdescription>
<para>Set how many samples to render before considering an image converged. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>samplesToConvergence</parametername>
</parameternamelist>
<parameterdescription>
<para>How many samples are needed, per-pixel, before the image is considered finished. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a1e34a37d6cf448121b7a44298df48e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetAmbientOcclusionSamples</definition>
        <argsstring>(int ambientOcclusionSamples)</argsstring>
        <name>SetAmbientOcclusionSamples</name>
        <param>
          <type>int</type>
          <declname>ambientOcclusionSamples</declname>
        </param>
        <briefdescription>
<para>Set how many samples to use for ambient occlusion. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ambientOcclusionSamples</parametername>
</parameternamelist>
<parameterdescription>
<para>How many samples are needed for ambient occlusion? 0 = disable. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a2362a583d04637117a7fa9be0c94444b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SetEnableSceneColors</definition>
        <argsstring>(bool enableSceneColors)</argsstring>
        <name>SetEnableSceneColors</name>
        <param>
          <type>bool</type>
          <declname>enableSceneColors</declname>
        </param>
        <briefdescription>
<para>Sets whether to use scene colors while rendering. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>enableSceneColors</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether drawing should sample color, or draw everything as white. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a23b68037d096ba7abb3deade30bd9b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Render</definition>
        <argsstring>(HdRenderThread *renderThread)</argsstring>
        <name>Render</name>
        <param>
          <type><ref refid="class_hd_render_thread" kindref="compound">HdRenderThread</ref> *</type>
          <declname>renderThread</declname>
        </param>
        <briefdescription>
<para>Rendering entrypoint: add one sample per pixel to the whole sample buffer, and then loop until the image is converged. </para>
        </briefdescription>
        <detaileddescription>
<para>After each pass, the image will be resolved into a color buffer. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderThread</parametername>
</parameternamelist>
<parameterdescription>
<para>A handle to the render thread, used for checking for cancellation and locking the color buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clear the bound aov buffers (typically before rendering). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a2c1144ff67c1070c5e49802700da44b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MarkAovBuffersUnconverged</definition>
        <argsstring>()</argsstring>
        <name>MarkAovBuffersUnconverged</name>
        <briefdescription>
<para>Mark the aov buffers as unconverged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a90676ee87d166422883a5d5169b47c91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int GetCompletedSamples</definition>
        <argsstring>() const</argsstring>
        <name>GetCompletedSamples</name>
        <briefdescription>
<para>Get the number of samples completed so far. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_embree_renderer_1a9d3359e3ea2305622832025294ed619b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _ValidateAovBindings</definition>
        <argsstring>()</argsstring>
        <name>_ValidateAovBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1aaf561ca46035ff99fbacad575ba9f71d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _RenderTiles</definition>
        <argsstring>(HdRenderThread *renderThread, size_t tileStart, size_t tileEnd)</argsstring>
        <name>_RenderTiles</name>
        <param>
          <type><ref refid="class_hd_render_thread" kindref="compound">HdRenderThread</ref> *</type>
          <declname>renderThread</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tileStart</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>tileEnd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1ad066e680fab5900bdba616d70f2e7426" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _TraceRay</definition>
        <argsstring>(unsigned int x, unsigned int y, GfVec3f const &amp;origin, GfVec3f const &amp;dir, std::default_random_engine &amp;random)</argsstring>
        <name>_TraceRay</name>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>origin</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>dir</declname>
        </param>
        <param>
          <type>std::default_random_engine &amp;</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a1c3903e66794224d86e7c7795b0a3622" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>GfVec4f _ComputeColor</definition>
        <argsstring>(RTCRayHit const &amp;rayHit, std::default_random_engine &amp;random, GfVec4f const &amp;clearColor)</argsstring>
        <name>_ComputeColor</name>
        <param>
          <type>RTCRayHit const &amp;</type>
          <declname>rayHit</declname>
        </param>
        <param>
          <type>std::default_random_engine &amp;</type>
          <declname>random</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref> const &amp;</type>
          <declname>clearColor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1ae9f3dd80d3cd6b61707d75b4da985a6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _ComputeDepth</definition>
        <argsstring>(RTCRayHit const &amp;rayHit, float *depth, bool clip)</argsstring>
        <name>_ComputeDepth</name>
        <param>
          <type>RTCRayHit const &amp;</type>
          <declname>rayHit</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1ab31bc7dcb4a7ad6ed4fc7b52602f9be0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _ComputeId</definition>
        <argsstring>(RTCRayHit const &amp;rayHit, TfToken const &amp;idType, int32_t *id)</argsstring>
        <name>_ComputeId</name>
        <param>
          <type>RTCRayHit const &amp;</type>
          <declname>rayHit</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>idType</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a5f38244f911c16e381d3e38dfeceac72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _ComputeNormal</definition>
        <argsstring>(RTCRayHit const &amp;rayHit, GfVec3f *normal, bool eye)</argsstring>
        <name>_ComputeNormal</name>
        <param>
          <type>RTCRayHit const &amp;</type>
          <declname>rayHit</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>normal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eye</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1ac72679516e0385b9ab11166c1a0ce1ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _ComputePrimvar</definition>
        <argsstring>(RTCRayHit const &amp;rayHit, TfToken const &amp;primvar, GfVec3f *value)</argsstring>
        <name>_ComputePrimvar</name>
        <param>
          <type>RTCRayHit const &amp;</type>
          <declname>rayHit</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>primvar</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_renderer_1a74cf2c82b5d8034244dd9e600b5afe7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float _ComputeAmbientOcclusion</definition>
        <argsstring>(GfVec3f const &amp;position, GfVec3f const &amp;normal, std::default_random_engine &amp;random)</argsstring>
        <name>_ComputeAmbientOcclusion</name>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>position</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>normal</declname>
        </param>
        <param>
          <type>std::default_random_engine &amp;</type>
          <declname>random</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="164" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_hd_embree_renderer_1ab0d45994739a18dfb985661487df2dee" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref></type>
        <definition>static GfVec4f _GetClearColor</definition>
        <argsstring>(VtValue const &amp;clearValue)</argsstring>
        <name>_GetClearColor</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>clearValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/renderer.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_hd_embree_renderer" kindref="compound">HdEmbreeRenderer</ref> implements a renderer on top of Embree&apos;s raycasting abilities. </para>
    </briefdescription>
    <detaileddescription>
<para>This is currently a very simple renderer. It breaks the framebuffer into tiles for multithreading; sends out jittered camera rays; and implements the following shading:<itemizedlist>
<listitem><para>Colors via the &quot;color&quot; primvar.</para>
</listitem><listitem><para>Lighting via N dot Camera-ray, simulating a point light at the camera origin.</para>
</listitem><listitem><para>Ambient occlusion. </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="pxr/imaging/hdEmbree/renderer.h" line="55" column="1" bodyfile="pxr/imaging/hdEmbree/renderer.h" bodystart="54" bodyend="207"/>
    <listofallmembers>
      <member refid="class_hd_embree_renderer_1aba85f194696368e3597f54a4d3448b0f" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ambientOcclusionSamples</name></member>
      <member refid="class_hd_embree_renderer_1a21cece5f580f5106d1a7783e4a47bccd" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_aovBindings</name></member>
      <member refid="class_hd_embree_renderer_1af367582ad19fc9f7839ff3cd1753bb13" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_aovBindingsNeedValidation</name></member>
      <member refid="class_hd_embree_renderer_1a08f30a4cf6bcfbddeae12b131daba2bf" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_aovBindingsValid</name></member>
      <member refid="class_hd_embree_renderer_1a2fe4f80a8400ca30d0b25e59845a7703" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_aovNames</name></member>
      <member refid="class_hd_embree_renderer_1a799162693022b69f2c08cb61b855a52a" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_completedSamples</name></member>
      <member refid="class_hd_embree_renderer_1a74cf2c82b5d8034244dd9e600b5afe7f" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ComputeAmbientOcclusion</name></member>
      <member refid="class_hd_embree_renderer_1a1c3903e66794224d86e7c7795b0a3622" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ComputeColor</name></member>
      <member refid="class_hd_embree_renderer_1ae9f3dd80d3cd6b61707d75b4da985a6c" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ComputeDepth</name></member>
      <member refid="class_hd_embree_renderer_1ab31bc7dcb4a7ad6ed4fc7b52602f9be0" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ComputeId</name></member>
      <member refid="class_hd_embree_renderer_1a5f38244f911c16e381d3e38dfeceac72" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ComputeNormal</name></member>
      <member refid="class_hd_embree_renderer_1ac72679516e0385b9ab11166c1a0ce1ac" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ComputePrimvar</name></member>
      <member refid="class_hd_embree_renderer_1a3da9381a755704b5b3c5b6fc7eeb768a" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_dataWindow</name></member>
      <member refid="class_hd_embree_renderer_1a978b73ef7db1f75f244cc8f891f51f8c" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_enableSceneColors</name></member>
      <member refid="class_hd_embree_renderer_1ab0d45994739a18dfb985661487df2dee" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_GetClearColor</name></member>
      <member refid="class_hd_embree_renderer_1ae56087f20883e5dac738adf23c2bfd5b" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_height</name></member>
      <member refid="class_hd_embree_renderer_1a474419386ac4528f4bcc4f62a3f9a8bf" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_inverseProjMatrix</name></member>
      <member refid="class_hd_embree_renderer_1a11e6bc4bfc00ebab0aa9a04dc614a63e" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_inverseViewMatrix</name></member>
      <member refid="class_hd_embree_renderer_1aab6c68e82d58a9e0f8fbb26290d4ffa2" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_projMatrix</name></member>
      <member refid="class_hd_embree_renderer_1aaf561ca46035ff99fbacad575ba9f71d" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_RenderTiles</name></member>
      <member refid="class_hd_embree_renderer_1ad7c679a410700a3ce5f9e1fcb7693fbb" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_samplesToConvergence</name></member>
      <member refid="class_hd_embree_renderer_1a9368a65db0d4b44cc9a912d6cff84851" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_scene</name></member>
      <member refid="class_hd_embree_renderer_1ad066e680fab5900bdba616d70f2e7426" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_TraceRay</name></member>
      <member refid="class_hd_embree_renderer_1a9d3359e3ea2305622832025294ed619b" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_ValidateAovBindings</name></member>
      <member refid="class_hd_embree_renderer_1ac23874223ef3230add9cb80499c337aa" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_viewMatrix</name></member>
      <member refid="class_hd_embree_renderer_1ac8435c09234cd6b9bf78d0d9f513b19c" prot="private" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>_width</name></member>
      <member refid="class_hd_embree_renderer_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>Clear</name></member>
      <member refid="class_hd_embree_renderer_1a8f72e76f37056942ed180dde11285ff3" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>GetAovBindings</name></member>
      <member refid="class_hd_embree_renderer_1a90676ee87d166422883a5d5169b47c91" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>GetCompletedSamples</name></member>
      <member refid="class_hd_embree_renderer_1a26111fa107361000539a403c17fc39c3" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>HdEmbreeRenderer</name></member>
      <member refid="class_hd_embree_renderer_1a2c1144ff67c1070c5e49802700da44b6" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>MarkAovBuffersUnconverged</name></member>
      <member refid="class_hd_embree_renderer_1a23b68037d096ba7abb3deade30bd9b05" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>Render</name></member>
      <member refid="class_hd_embree_renderer_1a1e34a37d6cf448121b7a44298df48e1a" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetAmbientOcclusionSamples</name></member>
      <member refid="class_hd_embree_renderer_1a4020ad5c85f1334e788327aadc103fdb" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetAovBindings</name></member>
      <member refid="class_hd_embree_renderer_1aa5e93ceac08d87d6ac36c708049d4abb" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetCamera</name></member>
      <member refid="class_hd_embree_renderer_1ac333272bad19406feb162fd1eab4a373" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetDataWindow</name></member>
      <member refid="class_hd_embree_renderer_1a2362a583d04637117a7fa9be0c94444b" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetEnableSceneColors</name></member>
      <member refid="class_hd_embree_renderer_1a040eee048aee16496582dde49c8f8ffc" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetSamplesToConvergence</name></member>
      <member refid="class_hd_embree_renderer_1aa0897b124fc469f73d034c19b96b6783" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>SetScene</name></member>
      <member refid="class_hd_embree_renderer_1a2817814d3a22cddab53ec19a1cc0dcc5" prot="public" virt="non-virtual"><scope>HdEmbreeRenderer</scope><name>~HdEmbreeRenderer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
