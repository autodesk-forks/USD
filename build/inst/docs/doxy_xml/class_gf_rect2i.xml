<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_rect2i" kind="class" language="C++" prot="public">
    <compoundname>GfRect2i</compoundname>
    <includes refid="rect2i_8h" local="no">rect2i.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_rect2i_1ab2b7632454d98a0d32cf55e686b7970d" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i _min</definition>
        <argsstring></argsstring>
        <name>_min</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="296" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_gf_rect2i_1abcb76597bf50800a6aaaa9129b8df84b" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i _max</definition>
        <argsstring></argsstring>
        <name>_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="296" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_rect2i_1a154be15df09066bb4341ed991634e035" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfRect2i</definition>
        <argsstring>()</argsstring>
        <name>GfRect2i</name>
        <briefdescription>
<para>Constructs an empty rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="63" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a29d63e516f9688cb9d6dfa0551bb0562" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfRect2i</definition>
        <argsstring>(const GfVec2i &amp;min, const GfVec2i &amp;max)</argsstring>
        <name>GfRect2i</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Constructs a rectangle with <computeroutput>min</computeroutput> and <computeroutput>max</computeroutput> corners. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="68" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1ace34b38e3ff8473be66ce513e199812f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfRect2i</definition>
        <argsstring>(const GfVec2i &amp;min, int width, int height)</argsstring>
        <name>GfRect2i</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Constructs a rectangle with <computeroutput>min</computeroutput> corner and the indicated <computeroutput>width</computeroutput> and <computeroutput>height</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="75" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1ac4d637a0dec45d546495c1660c9f6047" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsNull</definition>
        <argsstring>() const</argsstring>
        <name>IsNull</name>
        <briefdescription>
<para>Returns true if the rectangle is a null rectangle. </para>
        </briefdescription>
        <detaileddescription>
<para>A null rectangle has both the width and the height set to 0, that is <programlisting><codeline><highlight class="normal">GetMaxX()<sp/>==<sp/>GetMinX()<sp/>-<sp/>1</highlight></codeline>
</programlisting> and <programlisting><codeline><highlight class="normal">GetMaxY()<sp/>==<sp/>GetMinY()<sp/>-<sp/>1</highlight></codeline>
</programlisting> Remember that if <computeroutput><ref refid="class_gf_rect2i_1a230d1d80d100ce850647e89c7287b3c1" kindref="member">GetMinX()</ref></computeroutput> and <computeroutput><ref refid="class_gf_rect2i_1a4fb430aad4d0fb9965c6c76bdee07d4e" kindref="member">GetMaxX()</ref></computeroutput> return the same value then the rectangle has width 1, and similarly for the height.</para>
<para>A null rectangle is both empty, and not valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="94" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a8e12342fc420701fbffd97025421575a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Returns true if the rectangle is empty. </para>
        </briefdescription>
        <detaileddescription>
<para>An empty rectangle has one or both of its min coordinates strictly greater than the corresponding max coordinate.</para>
<para>An empty rectangle is not valid. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="104" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Return true if the rectangle is valid (equivalently, not empty). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="109" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a8b7fa824b18846d8046f8c81036d8e27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GF_API GfRect2i GetNormalized</definition>
        <argsstring>() const</argsstring>
        <name>GetNormalized</name>
        <briefdescription>
<para>Returns a normalized rectangle, i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>one that has a non-negative width and height.</para>
<para><computeroutput><ref refid="class_gf_rect2i_1a8b7fa824b18846d8046f8c81036d8e27" kindref="member">GetNormalized()</ref></computeroutput> swaps the min and max x-coordinates to ensure a non-negative width, and similarly for the y-coordinates. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a91b73cc00be7e0721170111c0ad1b741" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>const GfVec2i&amp; GetMin</definition>
        <argsstring>() const</argsstring>
        <name>GetMin</name>
        <briefdescription>
<para>Returns the min corner of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="123" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a978c73bd6bf5c63d964f185c882ebb85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
        <definition>const GfVec2i&amp; GetMax</definition>
        <argsstring>() const</argsstring>
        <name>GetMax</name>
        <briefdescription>
<para>Returns the max corner of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="128" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a230d1d80d100ce850647e89c7287b3c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetMinX</definition>
        <argsstring>() const</argsstring>
        <name>GetMinX</name>
        <briefdescription>
<para>Return the X value of min corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="134" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a07394fe81a493caa8344ae18e236dd2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMinX</definition>
        <argsstring>(int x)</argsstring>
        <name>SetMinX</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set the X value of the min corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="140" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a4fb430aad4d0fb9965c6c76bdee07d4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetMaxX</definition>
        <argsstring>() const</argsstring>
        <name>GetMaxX</name>
        <briefdescription>
<para>Return the X value of the max corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="146" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1aa966a32922b8aa77dd2f634ef2e01c61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMaxX</definition>
        <argsstring>(int x)</argsstring>
        <name>SetMaxX</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Set the X value of the max corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="151" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a7518195d5e8f249f9a0808b7f83dced7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetMinY</definition>
        <argsstring>() const</argsstring>
        <name>GetMinY</name>
        <briefdescription>
<para>Return the Y value of the min corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="157" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a68cec892602d6c5fcfd5db975e9fffc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMinY</definition>
        <argsstring>(int y)</argsstring>
        <name>SetMinY</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set the Y value of the min corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="163" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a8fe1b27d80c80f6e34a55fef25518c9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetMaxY</definition>
        <argsstring>() const</argsstring>
        <name>GetMaxY</name>
        <briefdescription>
<para>Return the Y value of the max corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="168" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a8816760f7d0ca1f27c5d59f96739afff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMaxY</definition>
        <argsstring>(int y)</argsstring>
        <name>SetMaxY</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Set the Y value of the max corner. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="173" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1aabf03d34bfa86a81a2879bd5a884e6e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMin</definition>
        <argsstring>(const GfVec2i &amp;min)</argsstring>
        <name>SetMin</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>min</declname>
        </param>
        <briefdescription>
<para>Sets the min corner of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="178" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a15bf375eab22a3d08de7bff8262cf6b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetMax</definition>
        <argsstring>(const GfVec2i &amp;max)</argsstring>
        <name>SetMax</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>max</declname>
        </param>
        <briefdescription>
<para>Sets the max corner of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="183" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="183" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a7ce51a62d166a03943364b2bbe3f5a06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i GetCenter</definition>
        <argsstring>() const</argsstring>
        <name>GetCenter</name>
        <briefdescription>
<para>Returns the center point of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="188" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1af98736b8af1fb9c009a58d8d5a0596b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Translate</definition>
        <argsstring>(const GfVec2i &amp;displacement)</argsstring>
        <name>Translate</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>displacement</declname>
        </param>
        <briefdescription>
<para>Move the rectangle by <computeroutput>displ</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="193" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a98f4914e083f76ea8ee53d5c61aeff7c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long GetArea</definition>
        <argsstring>() const</argsstring>
        <name>GetArea</name>
        <briefdescription>
<para>Return the area of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="199" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a6b9fdf85a7921c2e904fa95ba853e714" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Returns the size of the rectangle as a vector (width,height). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="204" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a2dee2c4ac8d7969e62c2f5c01644d173" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetWidth</definition>
        <argsstring>() const</argsstring>
        <name>GetWidth</name>
        <briefdescription>
<para>Returns the width of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the min and max x-coordinates are coincident, the width is one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="212" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a382af9c2b40d2b65ad5f8776873fdb85" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetHeight</definition>
        <argsstring>() const</argsstring>
        <name>GetHeight</name>
        <briefdescription>
<para>Returns the height of the rectangle. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If the min and max y-coordinates are coincident, the height is one. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="220" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a2500660fc4c37c6eb00e2a230c6bd5d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i GetIntersection</definition>
        <argsstring>(const GfRect2i &amp;that) const</argsstring>
        <name>GetIntersection</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Computes the intersection of two rectangles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="225" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="225" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a2bf0ff531f700dc9ba1487713fa7222c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i Intersect</definition>
        <argsstring>(const GfRect2i &amp;that) const</argsstring>
        <name>Intersect</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Computes the intersection of two rectangles. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000055"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_gf_rect2i_1a2500660fc4c37c6eb00e2a230c6bd5d8" kindref="member">GetIntersection()</ref> instead </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="239" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1ac02e7bc6800697012d5113d18fa479f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i GetUnion</definition>
        <argsstring>(const GfRect2i &amp;that) const</argsstring>
        <name>GetUnion</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Computes the union of two rectangles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="244" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="244" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1a5ca8e18e16e46f5642092fdcdebc2f3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i Union</definition>
        <argsstring>(const GfRect2i &amp;that) const</argsstring>
        <name>Union</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Computes the union of two rectangles. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000056"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_gf_rect2i_1ac02e7bc6800697012d5113d18fa479f3" kindref="member">GetUnion()</ref> instead.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="258" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1aac80436340b0d56342ed3d9750fa9449" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Contains</definition>
        <argsstring>(const GfVec2i &amp;p) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Returns true if the specified point in the rectangle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="263" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_rect2i_1aad70bac6bdf65ac3e6b7b51bff029915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i operator+=</definition>
        <argsstring>(const GfRect2i &amp;that)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>that</declname>
        </param>
        <briefdescription>
<para>Computes the union of two rectangles. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_gf_rect2i_1ac02e7bc6800697012d5113d18fa479f3" kindref="member">GetUnion()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="284" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="284" bodyend="287"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_rect2i_1a2a9287ab5ace7a23ea51a246f8b27a29" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(const GfRect2i &amp;r)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="268" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_rect2i_1ac64ffb6a20f732ff57ab7516d4cea70c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const GfRect2i &amp;r1, const GfRect2i &amp;r2)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>r1</computeroutput> and <computeroutput>r2</computeroutput> are equal. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="273" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_rect2i_1ab47de4ca5b41b5d1774511f3034f120b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const GfRect2i &amp;r1, const GfRect2i &amp;r2)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>r1</computeroutput> and <computeroutput>r2</computeroutput> are different. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="278" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="278" bodyend="280"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_rect2i_1a2f45a3ce7ee13f0b42d74f14f7ec9d1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
        <definition>GfRect2i operator+</definition>
        <argsstring>(const GfRect2i r1, const GfRect2i &amp;r2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref></type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/rect2i.h" line="289" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="289" bodyend="293"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A 2D rectangle with integer coordinates. </para>
    </briefdescription>
    <detaileddescription>
<para>A rectangle is internally represented as two corners. We refer to these as the min and max corner where the min&apos;s x-coordinate and y-coordinate are assumed to be less than or equal to the max&apos;s corresponding coordinates. Normally, it is expressed as a min corner and a size.</para>
<para>Note that the max corner is included when computing the size (width and height) of a rectangle as the number of integral points in the x- and y-direction. In particular, if the min corner and max corner are the same, then the width and the height of the rectangle will both be one since we have exactly one integral point with coordinates greater or equal to the min corner and less or equal to the max corner.</para>
<para>Specifically, <emphasis> width = maxX - minX + 1</emphasis> and <emphasis>height = maxY - minY + 1.</emphasis> </para>
    </detaileddescription>
    <location file="pxr/base/gf/rect2i.h" line="60" column="1" bodyfile="pxr/base/gf/rect2i.h" bodystart="60" bodyend="297"/>
    <listofallmembers>
      <member refid="class_gf_rect2i_1abcb76597bf50800a6aaaa9129b8df84b" prot="private" virt="non-virtual"><scope>GfRect2i</scope><name>_max</name></member>
      <member refid="class_gf_rect2i_1ab2b7632454d98a0d32cf55e686b7970d" prot="private" virt="non-virtual"><scope>GfRect2i</scope><name>_min</name></member>
      <member refid="class_gf_rect2i_1aac80436340b0d56342ed3d9750fa9449" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>Contains</name></member>
      <member refid="class_gf_rect2i_1a98f4914e083f76ea8ee53d5c61aeff7c" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetArea</name></member>
      <member refid="class_gf_rect2i_1a7ce51a62d166a03943364b2bbe3f5a06" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetCenter</name></member>
      <member refid="class_gf_rect2i_1a382af9c2b40d2b65ad5f8776873fdb85" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetHeight</name></member>
      <member refid="class_gf_rect2i_1a2500660fc4c37c6eb00e2a230c6bd5d8" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetIntersection</name></member>
      <member refid="class_gf_rect2i_1a978c73bd6bf5c63d964f185c882ebb85" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetMax</name></member>
      <member refid="class_gf_rect2i_1a4fb430aad4d0fb9965c6c76bdee07d4e" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetMaxX</name></member>
      <member refid="class_gf_rect2i_1a8fe1b27d80c80f6e34a55fef25518c9a" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetMaxY</name></member>
      <member refid="class_gf_rect2i_1a91b73cc00be7e0721170111c0ad1b741" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetMin</name></member>
      <member refid="class_gf_rect2i_1a230d1d80d100ce850647e89c7287b3c1" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetMinX</name></member>
      <member refid="class_gf_rect2i_1a7518195d5e8f249f9a0808b7f83dced7" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetMinY</name></member>
      <member refid="class_gf_rect2i_1a8b7fa824b18846d8046f8c81036d8e27" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetNormalized</name></member>
      <member refid="class_gf_rect2i_1a6b9fdf85a7921c2e904fa95ba853e714" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetSize</name></member>
      <member refid="class_gf_rect2i_1ac02e7bc6800697012d5113d18fa479f3" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetUnion</name></member>
      <member refid="class_gf_rect2i_1a2dee2c4ac8d7969e62c2f5c01644d173" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GetWidth</name></member>
      <member refid="class_gf_rect2i_1a154be15df09066bb4341ed991634e035" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GfRect2i</name></member>
      <member refid="class_gf_rect2i_1a29d63e516f9688cb9d6dfa0551bb0562" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GfRect2i</name></member>
      <member refid="class_gf_rect2i_1ace34b38e3ff8473be66ce513e199812f" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>GfRect2i</name></member>
      <member refid="class_gf_rect2i_1a2a9287ab5ace7a23ea51a246f8b27a29" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>hash_value</name></member>
      <member refid="class_gf_rect2i_1a2bf0ff531f700dc9ba1487713fa7222c" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>Intersect</name></member>
      <member refid="class_gf_rect2i_1a8e12342fc420701fbffd97025421575a" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>IsEmpty</name></member>
      <member refid="class_gf_rect2i_1ac4d637a0dec45d546495c1660c9f6047" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>IsNull</name></member>
      <member refid="class_gf_rect2i_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>IsValid</name></member>
      <member refid="class_gf_rect2i_1ab47de4ca5b41b5d1774511f3034f120b" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>operator!=</name></member>
      <member refid="class_gf_rect2i_1a2f45a3ce7ee13f0b42d74f14f7ec9d1b" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>operator+</name></member>
      <member refid="class_gf_rect2i_1aad70bac6bdf65ac3e6b7b51bff029915" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>operator+=</name></member>
      <member refid="class_gf_rect2i_1ac64ffb6a20f732ff57ab7516d4cea70c" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>operator==</name></member>
      <member refid="class_gf_rect2i_1a15bf375eab22a3d08de7bff8262cf6b5" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>SetMax</name></member>
      <member refid="class_gf_rect2i_1aa966a32922b8aa77dd2f634ef2e01c61" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>SetMaxX</name></member>
      <member refid="class_gf_rect2i_1a8816760f7d0ca1f27c5d59f96739afff" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>SetMaxY</name></member>
      <member refid="class_gf_rect2i_1aabf03d34bfa86a81a2879bd5a884e6e5" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>SetMin</name></member>
      <member refid="class_gf_rect2i_1a07394fe81a493caa8344ae18e236dd2c" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>SetMinX</name></member>
      <member refid="class_gf_rect2i_1a68cec892602d6c5fcfd5db975e9fffc4" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>SetMinY</name></member>
      <member refid="class_gf_rect2i_1af98736b8af1fb9c009a58d8d5a0596b4" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>Translate</name></member>
      <member refid="class_gf_rect2i_1a5ca8e18e16e46f5642092fdcdebc2f3f" prot="public" virt="non-virtual"><scope>GfRect2i</scope><name>Union</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
