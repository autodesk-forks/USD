<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_basis_curves_topology" kind="class" language="C++" prot="public">
    <compoundname>HdBasisCurvesTopology</compoundname>
    <basecompoundref prot="public" virt="non-virtual">HdTopology</basecompoundref>
    <includes refid="basis_curves_topology_8h" local="no">basisCurvesTopology.h</includes>
      <sectiondef kind="user-defined">
      <header>Topological invisibility</header>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ac73b19bf11eabd0748dcfaf6ab143d14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetInvisiblePoints</definition>
        <argsstring>(VtIntArray const &amp;invisiblePoints)</argsstring>
        <name>SetInvisiblePoints</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>invisiblePoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="98" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a6d6ff23f09e69c7ac4358756f7f3bb14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API VtIntArray const  &amp;</type>
        <definition>HD_API VtIntArray const&amp; GetInvisiblePoints</definition>
        <argsstring>() const</argsstring>
        <name>GetInvisiblePoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="103" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ab3451ff19dc1fccc9d1ae24e6f807de1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetInvisibleCurves</definition>
        <argsstring>(VtIntArray const &amp;invisibleCurves)</argsstring>
        <name>SetInvisibleCurves</name>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>invisibleCurves</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="108" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1afe431279c4335c05409bc6708dd07e29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API VtIntArray const  &amp;</type>
        <definition>HD_API VtIntArray const&amp; GetInvisibleCurves</definition>
        <argsstring>() const</argsstring>
        <name>GetInvisibleCurves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="113" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="113" bodyend="115"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a47b580214a8d3737656885ccfcb7191e" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _curveType</definition>
        <argsstring></argsstring>
        <name>_curveType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="166" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a6db0c01594c2c46ea91e9691472e3fc1" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _curveBasis</definition>
        <argsstring></argsstring>
        <name>_curveBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="167" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a05a8815281cf56cd16224cce58f86b46" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _curveWrap</definition>
        <argsstring></argsstring>
        <name>_curveWrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="168" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a35f36bbeda1a64842d26379cd77bda7c" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _curveVertexCounts</definition>
        <argsstring></argsstring>
        <name>_curveVertexCounts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="169" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a44340beac3ffd73888389aa68cd3a1b2" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _curveIndices</definition>
        <argsstring></argsstring>
        <name>_curveIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="170" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a90891c89315a939555acaf3e6dc59108" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _invisiblePoints</definition>
        <argsstring></argsstring>
        <name>_invisiblePoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="171" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a43448828e8059398e94c934be717edc9" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _invisibleCurves</definition>
        <argsstring></argsstring>
        <name>_invisibleCurves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="172" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_basis_curves_topology_1a0aa6676a8d309e97b3c85930b653c308" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _numPoints</definition>
        <argsstring></argsstring>
        <name>_numPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="173" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a3c228f5dcf431d064a804afd63d0e3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdBasisCurvesTopology</definition>
        <argsstring>()</argsstring>
        <name>HdBasisCurvesTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ad98ddc60b0b91351e4f64d619a837aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdBasisCurvesTopology</definition>
        <argsstring>(const HdBasisCurvesTopology &amp;src)</argsstring>
        <name>HdBasisCurvesTopology</name>
        <param>
          <type>const <ref refid="class_hd_basis_curves_topology" kindref="compound">HdBasisCurvesTopology</ref> &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a7fbba6af508fd7d793a81aafd1f3cb97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdBasisCurvesTopology</definition>
        <argsstring>(const TfToken &amp;curveType, const TfToken &amp;curveBasis, const TfToken &amp;curveWrap, const VtIntArray &amp;curveVertexCounts, const VtIntArray &amp;curveIndices)</argsstring>
        <name>HdBasisCurvesTopology</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>curveType</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>curveBasis</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>curveWrap</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>curveVertexCounts</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>curveIndices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ab7ef2162f21eb8a669c2815bfd85bca6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API</type>
        <definition>virtual HD_API ~HdBasisCurvesTopology</definition>
        <argsstring>()</argsstring>
        <name>~HdBasisCurvesTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a8cae651e9bbd6635005c320e8b0e581a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetCurveVertexCounts</definition>
        <argsstring>() const</argsstring>
        <name>GetCurveVertexCounts</name>
        <briefdescription>
<para>Returns segment vertex counts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="119" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a5454544ca93dceac3498a470577d520d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VtIntArray const  &amp;</type>
        <definition>VtIntArray const&amp; GetCurveIndices</definition>
        <argsstring>() const</argsstring>
        <name>GetCurveIndices</name>
        <briefdescription>
<para>Returns indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="124" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a8456a4c3cc21ace3ac634f3d661ad89e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetNumCurves</definition>
        <argsstring>() const</argsstring>
        <name>GetNumCurves</name>
        <briefdescription>
<para>Returns the number of curves. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="129" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ae1e3924091453aee32db6e6d4c9c6678" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HD_API size_t</type>
        <definition>HD_API size_t GetNumPoints</definition>
        <argsstring>() const</argsstring>
        <name>GetNumPoints</name>
        <briefdescription>
<para>Returns the number of points implied by vertex counts and indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="135" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a418dabd5db2f4c200d23053cb7319d76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken GetCurveType</definition>
        <argsstring>() const</argsstring>
        <name>GetCurveType</name>
        <briefdescription>
<para>See class documentation for valid combination of values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="140" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a72b28e02b55c3f49d4b68e6186a5c5cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken GetCurveBasis</definition>
        <argsstring>() const</argsstring>
        <name>GetCurveBasis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="141" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ad48ffce115f4cd1a0aff458f9befbeab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken GetCurveWrap</definition>
        <argsstring>() const</argsstring>
        <name>GetCurveWrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="142" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1abd2318ef5e97c0b98a63dc681755bd20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasIndices</definition>
        <argsstring>() const</argsstring>
        <name>HasIndices</name>
        <briefdescription>
<para>Does the topology use an index buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="145" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ad3b79308092e0867c3851247a01cd55b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API ID</type>
        <definition>virtual HD_API ID ComputeHash</definition>
        <argsstring>() const</argsstring>
        <name>ComputeHash</name>
        <briefdescription>
<para>Returns the hash value of this topology to be used for instancing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a85a1f2dcba69c85d90f2ce839d478087" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(HdBasisCurvesTopology const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_hd_basis_curves_topology" kindref="compound">HdBasisCurvesTopology</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality check between two basisCurves topologies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1a6257f4380a421f52e58c2ee013a852a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator!=</definition>
        <argsstring>(HdBasisCurvesTopology const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_hd_basis_curves_topology" kindref="compound">HdBasisCurvesTopology</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ab6c35756f51a68044cafdce883902c99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API size_t</type>
        <definition>HD_API size_t CalculateNeededNumberOfControlPoints</definition>
        <argsstring>() const</argsstring>
        <name>CalculateNeededNumberOfControlPoints</name>
        <briefdescription>
<para>Figure out how many vertices / control points this topology references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_basis_curves_topology_1ad68c2ba9a2fe5153cfb0686535166214" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API size_t</type>
        <definition>HD_API size_t CalculateNeededNumberOfVaryingControlPoints</definition>
        <argsstring>() const</argsstring>
        <name>CalculateNeededNumberOfVaryingControlPoints</name>
        <briefdescription>
<para>Figure out how many control points with varying data this topology needs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/basisCurvesTopology.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Topology data for basisCurves. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_hd_basis_curves_topology" kindref="compound">HdBasisCurvesTopology</ref> holds the raw input topology data for basisCurves</para>
<para>The Type, Basis and Wrap mode combined describe the curve and it&apos;s segments.</para>
<para>If Type == linear, the curve is a bunch of line segments and basis is ignored.</para>
<para>The wrap mode defines how the curve segments are specified:</para>
<para>If Wrap == segmented, this is equivalent to GL_LINES and curve vertex counts is 2 * number of segments (multiple entries in curve vertex array is optional).</para>
<para>If Wrap == nonperiodic, this is equivalent to GL_LINE_STRIP and curve counts is an array where each entry is the number of vertices in that line segment. The first and last vertex in the segment are not joined.</para>
<para>If Wrap == periodic, this is equivalent to GL_LINE_LOOP and curve counts is an array where each entry is the number of vertices in that line segment. An additional line is place between the first and last vertex in each segment.</para>
<para>If Type == cubic, the type of curve is specified by basis: The Basis can be bezier, bspline, catmullRom, or centripetalCatmullRom.</para>
<para>Wrap can be either periodic or nonperiodic (segmented is unsupported).</para>
<para>For each type of line, the generated vertex indices can pass through an optional index buffer to map the generated indices to actual indices in the vertex buffer. </para>
    </detaileddescription>
    <location file="pxr/imaging/hd/basisCurvesTopology.h" line="76" column="1" bodyfile="pxr/imaging/hd/basisCurvesTopology.h" bodystart="76" bodyend="174"/>
    <listofallmembers>
      <member refid="class_hd_basis_curves_topology_1a6db0c01594c2c46ea91e9691472e3fc1" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_curveBasis</name></member>
      <member refid="class_hd_basis_curves_topology_1a44340beac3ffd73888389aa68cd3a1b2" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_curveIndices</name></member>
      <member refid="class_hd_basis_curves_topology_1a47b580214a8d3737656885ccfcb7191e" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_curveType</name></member>
      <member refid="class_hd_basis_curves_topology_1a35f36bbeda1a64842d26379cd77bda7c" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_curveVertexCounts</name></member>
      <member refid="class_hd_basis_curves_topology_1a05a8815281cf56cd16224cce58f86b46" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_curveWrap</name></member>
      <member refid="class_hd_basis_curves_topology_1a43448828e8059398e94c934be717edc9" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_invisibleCurves</name></member>
      <member refid="class_hd_basis_curves_topology_1a90891c89315a939555acaf3e6dc59108" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_invisiblePoints</name></member>
      <member refid="class_hd_basis_curves_topology_1a0aa6676a8d309e97b3c85930b653c308" prot="private" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>_numPoints</name></member>
      <member refid="class_hd_basis_curves_topology_1ab6c35756f51a68044cafdce883902c99" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>CalculateNeededNumberOfControlPoints</name></member>
      <member refid="class_hd_basis_curves_topology_1ad68c2ba9a2fe5153cfb0686535166214" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>CalculateNeededNumberOfVaryingControlPoints</name></member>
      <member refid="class_hd_basis_curves_topology_1ad3b79308092e0867c3851247a01cd55b" prot="public" virt="virtual"><scope>HdBasisCurvesTopology</scope><name>ComputeHash</name></member>
      <member refid="class_hd_basis_curves_topology_1a72b28e02b55c3f49d4b68e6186a5c5cb" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetCurveBasis</name></member>
      <member refid="class_hd_basis_curves_topology_1a5454544ca93dceac3498a470577d520d" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetCurveIndices</name></member>
      <member refid="class_hd_basis_curves_topology_1a418dabd5db2f4c200d23053cb7319d76" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetCurveType</name></member>
      <member refid="class_hd_basis_curves_topology_1a8cae651e9bbd6635005c320e8b0e581a" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetCurveVertexCounts</name></member>
      <member refid="class_hd_basis_curves_topology_1ad48ffce115f4cd1a0aff458f9befbeab" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetCurveWrap</name></member>
      <member refid="class_hd_basis_curves_topology_1afe431279c4335c05409bc6708dd07e29" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetInvisibleCurves</name></member>
      <member refid="class_hd_basis_curves_topology_1a6d6ff23f09e69c7ac4358756f7f3bb14" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetInvisiblePoints</name></member>
      <member refid="class_hd_basis_curves_topology_1a8456a4c3cc21ace3ac634f3d661ad89e" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetNumCurves</name></member>
      <member refid="class_hd_basis_curves_topology_1ae1e3924091453aee32db6e6d4c9c6678" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>GetNumPoints</name></member>
      <member refid="class_hd_basis_curves_topology_1abd2318ef5e97c0b98a63dc681755bd20" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>HasIndices</name></member>
      <member refid="class_hd_basis_curves_topology_1a3c228f5dcf431d064a804afd63d0e3f3" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>HdBasisCurvesTopology</name></member>
      <member refid="class_hd_basis_curves_topology_1ad98ddc60b0b91351e4f64d619a837aa3" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>HdBasisCurvesTopology</name></member>
      <member refid="class_hd_basis_curves_topology_1a7fbba6af508fd7d793a81aafd1f3cb97" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>HdBasisCurvesTopology</name></member>
      <member refid="class_hd_topology_1a5b36bbe37d031405ef40a69f86da4e4d" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>HdTopology</name></member>
      <member refid="class_hd_topology_1affd566ae50348dcbfb42805843a2d59e" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>ID</name></member>
      <member refid="class_hd_basis_curves_topology_1a6257f4380a421f52e58c2ee013a852a5" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>operator!=</name></member>
      <member refid="class_hd_basis_curves_topology_1a85a1f2dcba69c85d90f2ce839d478087" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>operator==</name></member>
      <member refid="class_hd_basis_curves_topology_1ab3451ff19dc1fccc9d1ae24e6f807de1" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>SetInvisibleCurves</name></member>
      <member refid="class_hd_basis_curves_topology_1ac73b19bf11eabd0748dcfaf6ab143d14" prot="public" virt="non-virtual"><scope>HdBasisCurvesTopology</scope><name>SetInvisiblePoints</name></member>
      <member refid="class_hd_basis_curves_topology_1ab7ef2162f21eb8a669c2815bfd85bca6" prot="public" virt="virtual"><scope>HdBasisCurvesTopology</scope><name>~HdBasisCurvesTopology</name></member>
      <member refid="class_hd_topology_1a4ab93b79c07b99a7f72ac61fb5558329" prot="public" virt="virtual"><scope>HdBasisCurvesTopology</scope><name>~HdTopology</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
