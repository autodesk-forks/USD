<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_system_schema" kind="class" language="C++" prot="public">
    <compoundname>HdSystemSchema</compoundname>
    <basecompoundref refid="class_hd_schema" prot="public" virt="non-virtual">HdSchema</basecompoundref>
    <includes refid="system_schema_8h" local="no">systemSchema.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_system_schema_1a1a631eb5e93a45cfa8d39fa3242543d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdSystemSchema</definition>
        <argsstring>(HdContainerDataSourceHandle container)</argsstring>
        <name>HdSystemSchema</name>
        <param>
          <type>HdContainerDataSourceHandle</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="68" column="1" bodyfile="pxr/imaging/hd/systemSchema.h" bodystart="68" bodyend="69"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_system_schema_1af492d66f4ccc5fc8c3aa334968326ea1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdDataSourceBaseHandle</type>
        <definition>static HD_API HdDataSourceBaseHandle GetFromPath</definition>
        <argsstring>(HdSceneIndexBaseRefPtr const &amp;inputScene, SdfPath const &amp;fromPath, TfToken const &amp;key, SdfPath *foundAtPath)</argsstring>
        <name>GetFromPath</name>
        <param>
          <type>HdSceneIndexBaseRefPtr const &amp;</type>
          <declname>inputScene</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>fromPath</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>foundAtPath</declname>
        </param>
        <briefdescription>
<para>Evaluates the <computeroutput>key</computeroutput> at <computeroutput>fromPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>key</computeroutput> is found, the return value will be non-null and <computeroutput>foundAtPath</computeroutput> will contain the path at which the non-null result was found. Otherwise, this returns null.</para>
<para>This operation will be linear in the length of <computeroutput>fromPath</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_system_schema_1a276431a50fda788e0692db7b1e6db43c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdContainerDataSourceHandle</type>
        <definition>static HD_API HdContainerDataSourceHandle Compose</definition>
        <argsstring>(HdSceneIndexBaseRefPtr const &amp;inputScene, SdfPath const &amp;fromPath, SdfPath *foundAtPath)</argsstring>
        <name>Compose</name>
        <param>
          <type>HdSceneIndexBaseRefPtr const &amp;</type>
          <declname>inputScene</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>fromPath</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>foundAtPath</declname>
        </param>
        <briefdescription>
<para>Composes the system container in at <computeroutput>fromPath</computeroutput> by walking up the prim.dataSources in <computeroutput>inputScene</computeroutput> and composing any system containers it encounters. </para>
        </briefdescription>
        <detaileddescription>
<para>If no system containers were found, this returns null. Otherwise, this will return a container data source with the composed system data sources. If non-null, <computeroutput>foundAtPath</computeroutput> will be the last prim at which system data was found. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_system_schema_1a258871c6019ae3a8b41f2bb738ce907a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdContainerDataSourceHandle</type>
        <definition>static HD_API HdContainerDataSourceHandle ComposeAsPrimDataSource</definition>
        <argsstring>(HdSceneIndexBaseRefPtr const &amp;inputScene, SdfPath const &amp;fromPath, SdfPath *foundAtPath)</argsstring>
        <name>ComposeAsPrimDataSource</name>
        <param>
          <type>HdSceneIndexBaseRefPtr const &amp;</type>
          <declname>inputScene</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>fromPath</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
          <declname>foundAtPath</declname>
        </param>
        <briefdescription>
<para>Similar to <computeroutput>Compose</computeroutput> but this return value would be suitable for using with <ref refid="class_hd_overlay_container_data_source" kindref="compound">HdOverlayContainerDataSource</ref> for a prim&apos;s dataSource: </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">prim.dataSource<sp/>=<sp/>HdOverlayContainerDataSource::New(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>HdSystemSchema::ComposeAsPrimDataSource(...),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>prim.dataSource);</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_system_schema_1a01a85674ea799e737b67eb67d255ee88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_system_schema" kindref="compound">HdSystemSchema</ref></type>
        <definition>static HD_API HdSystemSchema GetFromParent</definition>
        <argsstring>(const HdContainerDataSourceHandle &amp;fromParentContainer)</argsstring>
        <name>GetFromParent</name>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>fromParentContainer</declname>
        </param>
        <briefdescription>
<para>Retrieves a container data source with the schema&apos;s default name token &quot;system&quot; from the parent container and constructs a <ref refid="class_hd_system_schema" kindref="compound">HdSystemSchema</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Because the requested container data source may not exist, the result should be checked with IsDefined() or a bool comparison before use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_system_schema_1a13f863d37918c123e3613f6972f77a91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>static HD_API const TfToken&amp; GetSchemaToken</definition>
        <argsstring>()</argsstring>
        <name>GetSchemaToken</name>
        <briefdescription>
<para>Returns a token where the container representing this schema is found in a container by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_system_schema_1a7822253290cf5a0af0fd50787fc38f54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetDefaultLocator</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the container representing this schema is found by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/systemSchema.h" line="132" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The SystemSchema specifies a container that will hold &quot;system&quot; data. </para>
    </briefdescription>
    <detaileddescription>
<para>Each piece of system data is identified by a key within the container. A piece of system data is evaluated at a given location by walking up the namespace looking for a system container that contains the corresponding key. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3403">
        <label>HdSystemSchema</label>
        <link refid="class_hd_system_schema"/>
        <childnode refid="3404" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3404">
        <label>HdSchema</label>
        <link refid="class_hd_schema"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3405">
        <label>HdSystemSchema</label>
        <link refid="class_hd_system_schema"/>
        <childnode refid="3406" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3406">
        <label>HdSchema</label>
        <link refid="class_hd_schema"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/systemSchema.h" line="66" column="1" bodyfile="pxr/imaging/hd/systemSchema.h" bodystart="65" bodyend="134"/>
    <listofallmembers>
      <member refid="class_hd_schema_1a0199d1b612f9eace744ec93edce137f4" prot="protected" virt="non-virtual"><scope>HdSystemSchema</scope><name>_container</name></member>
      <member refid="class_hd_schema_1a0b7d9bdabb5f9beed73770bbbbd7e8ed" prot="protected" virt="non-virtual"><scope>HdSystemSchema</scope><name>_GetTypedDataSource</name></member>
      <member refid="class_hd_system_schema_1a276431a50fda788e0692db7b1e6db43c" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>Compose</name></member>
      <member refid="class_hd_system_schema_1a258871c6019ae3a8b41f2bb738ce907a" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>ComposeAsPrimDataSource</name></member>
      <member refid="class_hd_schema_1abe3b2a98314ce888136534588e4fb990" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>GetContainer</name></member>
      <member refid="class_hd_system_schema_1a7822253290cf5a0af0fd50787fc38f54" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>GetDefaultLocator</name></member>
      <member refid="class_hd_system_schema_1a01a85674ea799e737b67eb67d255ee88" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>GetFromParent</name></member>
      <member refid="class_hd_system_schema_1af492d66f4ccc5fc8c3aa334968326ea1" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>GetFromPath</name></member>
      <member refid="class_hd_system_schema_1a13f863d37918c123e3613f6972f77a91" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>GetSchemaToken</name></member>
      <member refid="class_hd_schema_1a996c4a7891229be6cfec0c8915db550b" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>HdSchema</name></member>
      <member refid="class_hd_system_schema_1a1a631eb5e93a45cfa8d39fa3242543d7" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>HdSystemSchema</name></member>
      <member refid="class_hd_schema_1a39d97ef359ad169d83a9056229dd7d92" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>IsDefined</name></member>
      <member refid="class_hd_schema_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>HdSystemSchema</scope><name>operator bool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
