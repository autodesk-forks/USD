<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="imaging_2hd_2material_8h" kind="file" language="C++">
    <compoundname>material.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="imaging_2hd_2api_8h" local="yes">pxr/imaging/hd/api.h</includes>
    <includes refid="sprim_8h" local="yes">pxr/imaging/hd/sprim.h</includes>
    <includedby refid="material_network2_interface_8h" local="yes">pxr/imaging/hd/materialNetwork2Interface.h</includedby>
    <includedby refid="unit_test_delegate_8h" local="yes">pxr/imaging/hd/unitTestDelegate.h</includedby>
    <includedby refid="display_filter_8h" local="yes">pxr/imaging/hdPrman/displayFilter.h</includedby>
    <includedby refid="integrator_8h" local="yes">pxr/imaging/hdPrman/integrator.h</includedby>
    <includedby refid="imaging_2hd_prman_2material_8h" local="yes">pxr/imaging/hdPrman/material.h</includedby>
    <includedby refid="matfilt_convert_preview_material_8h" local="yes">pxr/imaging/hdPrman/matfiltConvertPreviewMaterial.h</includedby>
    <includedby refid="matfilt_resolve_vstructs_8h" local="yes">pxr/imaging/hdPrman/matfiltResolveVstructs.h</includedby>
    <includedby refid="sample_filter_8h" local="yes">pxr/imaging/hdPrman/sampleFilter.h</includedby>
    <includedby refid="imaging_2hd_st_2material_8h" local="yes">pxr/imaging/hdSt/material.h</includedby>
    <includedby refid="material_network_8h" local="yes">pxr/imaging/hdSt/materialNetwork.h</includedby>
    <incdepgraph>
      <node id="241700">
        <label>list</label>
      </node>
      <node id="241662">
        <label>locale</label>
      </node>
      <node id="241708">
        <label>atomic</label>
      </node>
      <node id="241743">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241698" relation="include">
        </childnode>
        <childnode refid="241708" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
      </node>
      <node id="241742">
        <label>stdarg.h</label>
      </node>
      <node id="241684">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="241685" relation="include">
        </childnode>
        <childnode refid="241679" relation="include">
        </childnode>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241686" relation="include">
        </childnode>
      </node>
      <node id="241655">
        <label>pxr/imaging/hd/types.h</label>
        <link refid="imaging_2hd_2types_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241650" relation="include">
        </childnode>
        <childnode refid="241656" relation="include">
        </childnode>
        <childnode refid="241654" relation="include">
        </childnode>
        <childnode refid="241657" relation="include">
        </childnode>
        <childnode refid="241734" relation="include">
        </childnode>
        <childnode refid="241692" relation="include">
        </childnode>
        <childnode refid="241732" relation="include">
        </childnode>
        <childnode refid="241679" relation="include">
        </childnode>
      </node>
      <node id="241704">
        <label>functional</label>
      </node>
      <node id="241752">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241753" relation="include">
        </childnode>
      </node>
      <node id="241651">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="241652" relation="include">
        </childnode>
      </node>
      <node id="241721">
        <label>limits</label>
      </node>
      <node id="241664">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="241754">
        <label>pxr/base/tf/iterator.h</label>
        <link refid="base_2tf_2iterator_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241724" relation="include">
        </childnode>
        <childnode refid="241755" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
      </node>
      <node id="241737">
        <label>pxr/usd/sdf/pool.h</label>
        <link refid="pool_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241736" relation="include">
        </childnode>
        <childnode refid="241670" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241660" relation="include">
        </childnode>
        <childnode refid="241738" relation="include">
        </childnode>
        <childnode refid="241743" relation="include">
        </childnode>
        <childnode refid="241744" relation="include">
        </childnode>
        <childnode refid="241708" relation="include">
        </childnode>
        <childnode refid="241745" relation="include">
        </childnode>
      </node>
      <node id="241733">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="241755">
        <label>iterator</label>
      </node>
      <node id="241679">
        <label>cstdint</label>
      </node>
      <node id="241740">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241683" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241662" relation="include">
        </childnode>
        <childnode refid="241741" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
      </node>
      <node id="241660">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="241652" relation="include">
        </childnode>
      </node>
      <node id="241656">
        <label>pxr/imaging/hd/enums.h</label>
        <link refid="hd_2enums_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241650" relation="include">
        </childnode>
      </node>
      <node id="241692">
        <label>cmath</label>
      </node>
      <node id="241689">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241690" relation="include">
        </childnode>
        <childnode refid="241691" relation="include">
        </childnode>
        <childnode refid="241684" relation="include">
        </childnode>
        <childnode refid="241693" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
      </node>
      <node id="241756">
        <label>pxr/usd/sdf/pathNode.h</label>
        <link refid="path_node_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241736" relation="include">
        </childnode>
        <childnode refid="241713" relation="include">
        </childnode>
        <childnode refid="241723" relation="include">
        </childnode>
        <childnode refid="241707" relation="include">
        </childnode>
        <childnode refid="241733" relation="include">
        </childnode>
      </node>
      <node id="241744">
        <label>tbb/concurrent_queue.h</label>
      </node>
      <node id="241678">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241660" relation="include">
        </childnode>
        <childnode refid="241679" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
      </node>
      <node id="241699">
        <label>cstdarg</label>
      </node>
      <node id="241672">
        <label>string</label>
      </node>
      <node id="241713">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241668" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
      </node>
      <node id="241683">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241695">
        <label>map</label>
      </node>
      <node id="241685">
        <label>cinttypes</label>
      </node>
      <node id="241746">
        <label>pxr/usd/sdf/tokens.h</label>
        <link refid="usd_2sdf_2tokens_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241736" relation="include">
        </childnode>
        <childnode refid="241747" relation="include">
        </childnode>
      </node>
      <node id="241649">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="241729">
        <label>unordered_set</label>
      </node>
      <node id="241706">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="241707" relation="include">
        </childnode>
      </node>
      <node id="241670">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241671" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
        <childnode refid="241674" relation="include">
        </childnode>
      </node>
      <node id="241710">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241736">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241727">
        <label>stddef.h</label>
      </node>
      <node id="241690">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
      </node>
      <node id="241698">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="241652" relation="include">
        </childnode>
      </node>
      <node id="241650">
        <label>pxr/imaging/hd/api.h</label>
        <link refid="imaging_2hd_2api_8h_source"/>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241681">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
      </node>
      <node id="241718">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241719" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
      </node>
      <node id="241717">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241718" relation="include">
        </childnode>
        <childnode refid="241720" relation="include">
        </childnode>
        <childnode refid="241722" relation="include">
        </childnode>
      </node>
      <node id="241719">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241661">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="241660" relation="include">
        </childnode>
        <childnode refid="241662" relation="include">
        </childnode>
        <childnode refid="241663" relation="include">
        </childnode>
      </node>
      <node id="241750">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="241735">
        <label>pxr/usd/sdf/path.h</label>
        <link refid="path_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241736" relation="include">
        </childnode>
        <childnode refid="241737" relation="include">
        </childnode>
        <childnode refid="241746" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241751" relation="include">
        </childnode>
        <childnode refid="241723" relation="include">
        </childnode>
        <childnode refid="241714" relation="include">
        </childnode>
        <childnode refid="241733" relation="include">
        </childnode>
        <childnode refid="241734" relation="include">
        </childnode>
        <childnode refid="241755" relation="include">
        </childnode>
        <childnode refid="241696" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
        <childnode refid="241756" relation="include">
        </childnode>
      </node>
      <node id="241741">
        <label>any</label>
      </node>
      <node id="241686">
        <label>sys/types.h</label>
      </node>
      <node id="241687">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241670" relation="include">
        </childnode>
        <childnode refid="241688" relation="include">
        </childnode>
        <childnode refid="241698" relation="include">
        </childnode>
        <childnode refid="241681" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
      </node>
      <node id="241673">
        <label>typeinfo</label>
      </node>
      <node id="241653">
        <label>pxr/imaging/hd/sprim.h</label>
        <link refid="sprim_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241650" relation="include">
        </childnode>
        <childnode refid="241654" relation="include">
        </childnode>
        <childnode refid="241655" relation="include">
        </childnode>
        <childnode refid="241735" relation="include">
        </childnode>
      </node>
      <node id="241666">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="241665">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="241723">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241724" relation="include">
        </childnode>
        <childnode refid="241688" relation="include">
        </childnode>
        <childnode refid="241728" relation="include">
        </childnode>
        <childnode refid="241678" relation="include">
        </childnode>
        <childnode refid="241708" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
        <childnode refid="241696" relation="include">
        </childnode>
      </node>
      <node id="241707">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241708" relation="include">
        </childnode>
        <childnode refid="241709" relation="include">
        </childnode>
        <childnode refid="241679" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
      </node>
      <node id="241691">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241684" relation="include">
        </childnode>
        <childnode refid="241692" relation="include">
        </childnode>
      </node>
      <node id="241697">
        <label>vector</label>
      </node>
      <node id="241711">
        <label>pxr/base/vt/hash.h</label>
        <link refid="vt_2hash_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241710" relation="include">
        </childnode>
        <childnode refid="241688" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
      </node>
      <node id="241659">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241669">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241661" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
      </node>
      <node id="241720">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="241721" relation="include">
        </childnode>
        <childnode refid="241718" relation="include">
        </childnode>
      </node>
      <node id="241680">
        <label>utility</label>
      </node>
      <node id="241739">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241671" relation="include">
        </childnode>
        <childnode refid="241726" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
      </node>
      <node id="241701">
        <label>sstream</label>
      </node>
      <node id="241748">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="241652">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="241714">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241710" relation="include">
        </childnode>
        <childnode refid="241698" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
      </node>
      <node id="241747">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241698" relation="include">
        </childnode>
        <childnode refid="241743" relation="include">
        </childnode>
        <childnode refid="241723" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
        <childnode refid="241748" relation="include">
        </childnode>
        <childnode refid="241749" relation="include">
        </childnode>
        <childnode refid="241730" relation="include">
        </childnode>
        <childnode refid="241731" relation="include">
        </childnode>
        <childnode refid="241750" relation="include">
        </childnode>
      </node>
      <node id="241675">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="241652" relation="include">
        </childnode>
      </node>
      <node id="241688">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241689" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241694" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241695" relation="include">
        </childnode>
        <childnode refid="241668" relation="include">
        </childnode>
        <childnode refid="241696" relation="include">
        </childnode>
        <childnode refid="241674" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
      </node>
      <node id="241693">
        <label>math.h</label>
      </node>
      <node id="241682">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241683" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241684" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241687" relation="include">
        </childnode>
        <childnode refid="241699" relation="include">
        </childnode>
        <childnode refid="241694" relation="include">
        </childnode>
        <childnode refid="241700" relation="include">
        </childnode>
        <childnode refid="241696" relation="include">
        </childnode>
        <childnode refid="241701" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
      </node>
      <node id="241667">
        <label>iosfwd</label>
      </node>
      <node id="241709">
        <label>cstdlib</label>
      </node>
      <node id="241725">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241726" relation="include">
        </childnode>
        <childnode refid="241727" relation="include">
        </childnode>
      </node>
      <node id="241702">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241703" relation="include">
        </childnode>
        <childnode refid="241705" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241668" relation="include">
        </childnode>
        <childnode refid="241696" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
        <childnode refid="241697" relation="include">
        </childnode>
        <childnode refid="241706" relation="include">
        </childnode>
      </node>
      <node id="241663">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="241715">
        <label>pxr/base/vt/types.h</label>
        <link refid="base_2vt_2types_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241710" relation="include">
        </childnode>
        <childnode refid="241714" relation="include">
        </childnode>
        <childnode refid="241684" relation="include">
        </childnode>
        <childnode refid="241716" relation="include">
        </childnode>
        <childnode refid="241717" relation="include">
        </childnode>
        <childnode refid="241698" relation="include">
        </childnode>
        <childnode refid="241723" relation="include">
        </childnode>
        <childnode refid="241730" relation="include">
        </childnode>
        <childnode refid="241731" relation="include">
        </childnode>
        <childnode refid="241732" relation="include">
        </childnode>
        <childnode refid="241694" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
      </node>
      <node id="241732">
        <label>cstddef</label>
      </node>
      <node id="241716">
        <label>pxr/base/gf/declare.h</label>
        <link refid="base_2gf_2declare_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
      </node>
      <node id="241705">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241668" relation="include">
        </childnode>
      </node>
      <node id="241753">
        <label>unordered_map</label>
      </node>
      <node id="241724">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241683" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241690" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241725" relation="include">
        </childnode>
        <childnode refid="241727" relation="include">
        </childnode>
      </node>
      <node id="241749">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="241745">
        <label>thread</label>
      </node>
      <node id="241658">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241660" relation="include">
        </childnode>
        <childnode refid="241661" relation="include">
        </childnode>
        <childnode refid="241664" relation="include">
        </childnode>
        <childnode refid="241665" relation="include">
        </childnode>
        <childnode refid="241666" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241668" relation="include">
        </childnode>
      </node>
      <node id="241751">
        <label>pxr/base/tf/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241689" relation="include">
        </childnode>
        <childnode refid="241752" relation="include">
        </childnode>
        <childnode refid="241728" relation="include">
        </childnode>
        <childnode refid="241754" relation="include">
        </childnode>
        <childnode refid="241734" relation="include">
        </childnode>
        <childnode refid="241755" relation="include">
        </childnode>
        <childnode refid="241695" relation="include">
        </childnode>
        <childnode refid="241696" relation="include">
        </childnode>
        <childnode refid="241680" relation="include">
        </childnode>
      </node>
      <node id="241731">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="241648">
        <label>pxr/imaging/hd/material.h</label>
        <link refid="imaging_2hd_2material_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241650" relation="include">
        </childnode>
        <childnode refid="241653" relation="include">
        </childnode>
      </node>
      <node id="241654">
        <label>pxr/imaging/hd/version.h</label>
        <link refid="imaging_2hd_2version_8h_source"/>
      </node>
      <node id="241677">
        <label>type_traits</label>
      </node>
      <node id="241696">
        <label>set</label>
      </node>
      <node id="241676">
        <label>pxr/base/tf/anyUniquePtr.h</label>
        <link refid="any_unique_ptr_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
      </node>
      <node id="241671">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="241651" relation="include">
        </childnode>
      </node>
      <node id="241726">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="241652" relation="include">
        </childnode>
      </node>
      <node id="241734">
        <label>algorithm</label>
      </node>
      <node id="241694">
        <label>cstring</label>
      </node>
      <node id="241722">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
      </node>
      <node id="241668">
        <label>memory</label>
      </node>
      <node id="241703">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241683" relation="include">
        </childnode>
        <childnode refid="241698" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241704" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
      </node>
      <node id="241738">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241739" relation="include">
        </childnode>
        <childnode refid="241724" relation="include">
        </childnode>
        <childnode refid="241659" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241740" relation="include">
        </childnode>
        <childnode refid="241727" relation="include">
        </childnode>
        <childnode refid="241742" relation="include">
        </childnode>
        <childnode refid="241672" relation="include">
        </childnode>
      </node>
      <node id="241728">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241652" relation="include">
        </childnode>
        <childnode refid="241729" relation="include">
        </childnode>
      </node>
      <node id="241674">
        <label>typeindex</label>
      </node>
      <node id="241657">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241658" relation="include">
        </childnode>
        <childnode refid="241669" relation="include">
        </childnode>
        <childnode refid="241670" relation="include">
        </childnode>
        <childnode refid="241675" relation="include">
        </childnode>
        <childnode refid="241660" relation="include">
        </childnode>
        <childnode refid="241676" relation="include">
        </childnode>
        <childnode refid="241678" relation="include">
        </childnode>
        <childnode refid="241681" relation="include">
        </childnode>
        <childnode refid="241682" relation="include">
        </childnode>
        <childnode refid="241689" relation="include">
        </childnode>
        <childnode refid="241702" relation="include">
        </childnode>
        <childnode refid="241710" relation="include">
        </childnode>
        <childnode refid="241711" relation="include">
        </childnode>
        <childnode refid="241712" relation="include">
        </childnode>
        <childnode refid="241714" relation="include">
        </childnode>
        <childnode refid="241715" relation="include">
        </childnode>
        <childnode refid="241733" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
      </node>
      <node id="241730">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="241712">
        <label>pxr/base/vt/streamOut.h</label>
        <link refid="stream_out_8h_source"/>
        <childnode refid="241649" relation="include">
        </childnode>
        <childnode refid="241710" relation="include">
        </childnode>
        <childnode refid="241687" relation="include">
        </childnode>
        <childnode refid="241713" relation="include">
        </childnode>
        <childnode refid="241667" relation="include">
        </childnode>
        <childnode refid="241673" relation="include">
        </childnode>
        <childnode refid="241677" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="241758">
        <label>pxr/imaging/hd/materialNetwork2Interface.h</label>
        <link refid="material_network2_interface_8h_source"/>
      </node>
      <node id="241766">
        <label>pxr/imaging/hdPrman/cone.h</label>
        <link refid="imaging_2hd_prman_2cone_8h_source"/>
      </node>
      <node id="241770">
        <label>pxr/imaging/hdPrman/sphere.h</label>
        <link refid="imaging_2hd_prman_2sphere_8h_source"/>
      </node>
      <node id="241772">
        <label>pxr/imaging/hdPrman/matfiltConvertPreviewMaterial.h</label>
        <link refid="matfilt_convert_preview_material_8h_source"/>
      </node>
      <node id="241760">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="241765">
        <label>pxr/imaging/hdPrman/basisCurves.h</label>
        <link refid="imaging_2hd_prman_2basis_curves_8h_source"/>
      </node>
      <node id="241759">
        <label>pxr/imaging/hd/unitTestDelegate.h</label>
        <link refid="unit_test_delegate_8h_source"/>
        <childnode refid="241760" relation="include">
        </childnode>
      </node>
      <node id="241761">
        <label>pxr/imaging/hdPrman/displayFilter.h</label>
        <link refid="display_filter_8h_source"/>
      </node>
      <node id="241771">
        <label>pxr/imaging/hdPrman/volume.h</label>
        <link refid="imaging_2hd_prman_2volume_8h_source"/>
      </node>
      <node id="241762">
        <label>pxr/imaging/hdPrman/integrator.h</label>
        <link refid="integrator_8h_source"/>
      </node>
      <node id="241767">
        <label>pxr/imaging/hdPrman/cylinder.h</label>
        <link refid="imaging_2hd_prman_2cylinder_8h_source"/>
      </node>
      <node id="241769">
        <label>pxr/imaging/hdPrman/points.h</label>
        <link refid="imaging_2hd_prman_2points_8h_source"/>
      </node>
      <node id="241763">
        <label>pxr/imaging/hdPrman/material.h</label>
        <link refid="imaging_2hd_prman_2material_8h_source"/>
        <childnode refid="241764" relation="include">
        </childnode>
      </node>
      <node id="241776">
        <label>pxr/imaging/hdSt/materialNetwork.h</label>
        <link refid="material_network_8h_source"/>
        <childnode refid="241775" relation="include">
        </childnode>
      </node>
      <node id="241757">
        <label>pxr/imaging/hd/material.h</label>
        <link refid="imaging_2hd_2material_8h"/>
        <childnode refid="241758" relation="include">
        </childnode>
        <childnode refid="241759" relation="include">
        </childnode>
        <childnode refid="241761" relation="include">
        </childnode>
        <childnode refid="241762" relation="include">
        </childnode>
        <childnode refid="241763" relation="include">
        </childnode>
        <childnode refid="241772" relation="include">
        </childnode>
        <childnode refid="241773" relation="include">
        </childnode>
        <childnode refid="241774" relation="include">
        </childnode>
        <childnode refid="241775" relation="include">
        </childnode>
        <childnode refid="241776" relation="include">
        </childnode>
      </node>
      <node id="241768">
        <label>pxr/imaging/hdPrman/mesh.h</label>
        <link refid="imaging_2hd_prman_2mesh_8h_source"/>
      </node>
      <node id="241773">
        <label>pxr/imaging/hdPrman/matfiltResolveVstructs.h</label>
        <link refid="matfilt_resolve_vstructs_8h_source"/>
      </node>
      <node id="241764">
        <label>pxr/imaging/hdPrman/gprim.h</label>
        <link refid="imaging_2hd_prman_2gprim_8h_source"/>
        <childnode refid="241765" relation="include">
        </childnode>
        <childnode refid="241766" relation="include">
        </childnode>
        <childnode refid="241767" relation="include">
        </childnode>
        <childnode refid="241768" relation="include">
        </childnode>
        <childnode refid="241769" relation="include">
        </childnode>
        <childnode refid="241770" relation="include">
        </childnode>
        <childnode refid="241771" relation="include">
        </childnode>
      </node>
      <node id="241774">
        <label>pxr/imaging/hdPrman/sampleFilter.h</label>
        <link refid="sample_filter_8h_source"/>
      </node>
      <node id="241775">
        <label>pxr/imaging/hdSt/material.h</label>
        <link refid="imaging_2hd_st_2material_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_hd_material" prot="public">HdMaterial</innerclass>
    <innerclass refid="struct_hd_material_relationship" prot="public">HdMaterialRelationship</innerclass>
    <innerclass refid="struct_hd_material_node" prot="public">HdMaterialNode</innerclass>
    <innerclass refid="struct_hd_material_network" prot="public">HdMaterialNetwork</innerclass>
    <innerclass refid="struct_hd_material_network_map" prot="public">HdMaterialNetworkMap</innerclass>
    <innerclass refid="struct_hd_material_connection2" prot="public">HdMaterialConnection2</innerclass>
    <innerclass refid="struct_hd_material_node2" prot="public">HdMaterialNode2</innerclass>
    <innerclass refid="struct_hd_material_network2" prot="public">HdMaterialNetwork2</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="imaging_2hd_2material_8h_1ad3865ce3f3b777b59223236c3d0a9fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(const HdMaterialRelationship &amp;lhs, const HdMaterialRelationship &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hd_material_relationship" kindref="compound">HdMaterialRelationship</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_relationship" kindref="compound">HdMaterialRelationship</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1aeb3c6a7f292dfe4a366088d14d0799b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(const HdMaterialNode &amp;lhs, const HdMaterialNode &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hd_material_node" kindref="compound">HdMaterialNode</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_node" kindref="compound">HdMaterialNode</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a2930b75f3c3ade08a040921a3dab9855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref></type>
        <definition>HD_API HdMaterialNetwork2 HdConvertToHdMaterialNetwork2</definition>
        <argsstring>(const HdMaterialNetworkMap &amp;hdNetworkMap, bool *isVolume=nullptr)</argsstring>
        <name>HdConvertToHdMaterialNetwork2</name>
        <param>
          <type>const <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> &amp;</type>
          <declname>hdNetworkMap</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>isVolume</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Converts a <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> to a <ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a503ef2a40afd8037ff334c2da2b463e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API std::ostream &amp;</type>
        <definition>HD_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const HdMaterialNetwork &amp;pv)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref> &amp;</type>
          <declname>pv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a61ddd68808532ea7f52736bd9aa93cb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(const HdMaterialNetwork &amp;lhs, const HdMaterialNetwork &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1ab587ff5daf011ca487323702717b2665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator!=</definition>
        <argsstring>(const HdMaterialNetwork &amp;lhs, const HdMaterialNetwork &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a248e30b83066a110a981f8fcc1f5e7a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API std::ostream &amp;</type>
        <definition>HD_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const HdMaterialNetworkMap &amp;pv)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> &amp;</type>
          <declname>pv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1acd5d7c929c38c2c95d59c3c6602091ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(const HdMaterialNetworkMap &amp;lhs, const HdMaterialNetworkMap &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a3ba40096d1732e96d8c10901d09e77e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator!=</definition>
        <argsstring>(const HdMaterialNetworkMap &amp;lhs, const HdMaterialNetworkMap &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1acd412fe6491b62ce33db86a38bca4335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API std::ostream &amp;</type>
        <definition>HD_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const HdMaterialNode2 &amp;pv)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> &amp;</type>
          <declname>pv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a5e643af979c44dc45589652ad28a20c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator==</definition>
        <argsstring>(const HdMaterialNode2 &amp;lhs, const HdMaterialNode2 &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2hd_2material_8h_1a5d9ceafc1d9eb78c06e3b8a909c1a799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool operator!=</definition>
        <argsstring>(const HdMaterialNode2 &amp;lhs, const HdMaterialNode2 &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="219" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_IMAGING_HD_MATERIAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_IMAGING_HD_MATERIAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hd/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hd/sprim.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_hd_material" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_hd_material" kindref="compound">HdMaterial</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_hd_sprim" kindref="compound">HdSprim</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>tracking<sp/>for<sp/>HdMaterial<sp/>prim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>DirtyBits<sp/>:<sp/>HdDirtyBits<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Clean<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX:<sp/>Got<sp/>to<sp/>skip<sp/>varying<sp/>and<sp/>force<sp/>sync<sp/>bits<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirtyParams<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DirtyResource<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AllDirty<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(DirtyParams<sp/>|<sp/>DirtyResource)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>HD_API</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_hd_material" kindref="compound">HdMaterial</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>HD_API</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hd_material" kindref="compound">HdMaterial</ref>(<ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Class<sp/>can<sp/>not<sp/>be<sp/>default<sp/>constructed<sp/>or<sp/>copied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hd_material" kindref="compound">HdMaterial</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hd_material" kindref="compound">HdMaterial</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_hd_material" kindref="compound">HdMaterial</ref><sp/>&amp;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hd_material" kindref="compound">HdMaterial</ref><sp/>&amp;operator<sp/>=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_hd_material" kindref="compound">HdMaterial</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_hd_material_relationship" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_relationship" kindref="compound">HdMaterialRelationship</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>inputId;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>inputName;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>outputId;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>outputName;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VtValue<sp/>requirements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_relationship" kindref="compound">HdMaterialRelationship</ref>&amp;<sp/>lhs,<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_relationship" kindref="compound">HdMaterialRelationship</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="struct_hd_material_node" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_node" kindref="compound">HdMaterialNode</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>path;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>identifier;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;TfToken,<sp/>VtValue&gt;<sp/>parameters;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VtValue<sp/>requirements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node" kindref="compound">HdMaterialNode</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node" kindref="compound">HdMaterialNode</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="struct_hd_material_network" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;HdMaterialRelationship&gt;<sp/>relationships;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;HdMaterialNode&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref><sp/>primvars;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="struct_hd_material_network_map" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref></highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;TfToken,<sp/>HdMaterialNetwork&gt;<sp/>map;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;SdfPath&gt;<sp/>terminals;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"></codeline>
<codeline lineno="146" refid="struct_hd_material_connection2" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_connection2" kindref="compound">HdMaterialConnection2</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>upstreamNode;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>upstreamOutputName;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_connection2" kindref="compound">HdMaterialConnection2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>upstreamNode<sp/>==<sp/>rhs.upstreamNode</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>upstreamOutputName<sp/>==<sp/>rhs.upstreamOutputName;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="struct_hd_material_node2" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>nodeTypeId;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;TfToken,<sp/>VtValue&gt;<sp/>parameters;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;TfToken,<sp/>std::vector&lt;HdMaterialConnection2&gt;&gt;<sp/>inputConnections;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="struct_hd_material_network2" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref></highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;SdfPath,<sp/>HdMaterialNode2&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;TfToken,<sp/>HdMaterialConnection2&gt;<sp/>terminals;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref><sp/>primvars;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref><sp/>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nodes<sp/>==<sp/>rhs.nodes<sp/></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>terminals<sp/>==<sp/>rhs.terminals</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>primvars<sp/>==<sp/>rhs.primvars;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><ref refid="struct_hd_material_network2" kindref="compound">HdMaterialNetwork2</ref><sp/>HdConvertToHdMaterialNetwork2(</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref><sp/>&amp;<sp/>hdNetworkMap,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*isVolume<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VtValue<sp/>requirements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="197"><highlight class="normal">std::ostream&amp;<sp/><ref refid="group__group__gf___debugging_output_1ga47c5c0767539988532dab982dd69f08d" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref>&amp;<sp/>pv);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network" kindref="compound">HdMaterialNetwork</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="204"><highlight class="normal">std::ostream&amp;<sp/><ref refid="group__group__gf___debugging_output_1ga47c5c0767539988532dab982dd69f08d" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref>&amp;<sp/>pv);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_network_map" kindref="compound">HdMaterialNetworkMap</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VtValue<sp/>requirements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="215"><highlight class="normal">std::ostream&amp;<sp/><ref refid="group__group__gf___debugging_output_1ga47c5c0767539988532dab982dd69f08d" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref>&amp;<sp/>pv);</highlight></codeline>
<codeline lineno="216"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">HD_API</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref>&amp;<sp/>lhs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hd_material_node2" kindref="compound">HdMaterialNode2</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_IMAGING_HD_MATERIAL_H</highlight></codeline>
    </programlisting>
    <location file="pxr/imaging/hd/material.h"/>
  </compounddef>
</doxygen>
