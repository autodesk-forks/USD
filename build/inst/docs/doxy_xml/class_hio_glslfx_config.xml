<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hio_glslfx_config" kind="class" language="C++" prot="public">
    <compoundname>HioGlslfxConfig</compoundname>
    <includes refid="glslfx_config_8h" local="no">glslfxConfig.h</includes>
    <innerclass refid="class_hio_glslfx_config_1_1_attribute" prot="public">HioGlslfxConfig::Attribute</innerclass>
    <innerclass refid="class_hio_glslfx_config_1_1_parameter" prot="public">HioGlslfxConfig::Parameter</innerclass>
    <innerclass refid="class_hio_glslfx_config_1_1_texture" prot="public">HioGlslfxConfig::Texture</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_hio_glslfx_config_1acdd79a1a4f81dd6ee5cddcb21149b951" prot="public" static="no" strong="no">
        <type></type>
        <name>Role</name>
        <enumvalue id="class_hio_glslfx_config_1acdd79a1a4f81dd6ee5cddcb21149b951af8bcd8079bac9ec135431890baf16d06" prot="public">
          <name>RoleNone</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hio_glslfx_config_1acdd79a1a4f81dd6ee5cddcb21149b951a81cb6c9faaad4aa9f0760e46979a74e6" prot="public">
          <name>RoleColor</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates Roles that parameters can have. </para>
        </briefdescription>
        <detaileddescription>
<para><bold>enum Role:</bold> <itemizedlist>
<listitem>
<para><bold><computeroutput> RoleNone = 0</computeroutput></bold> None: the default role </para>
</listitem>
<listitem>
<para><bold><computeroutput> RoleColor = 1</computeroutput></bold> Color: the role of a color </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="56" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_config_1af1f57499e5a60f21a9693cfc1fb46046" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_hio_glslfx_config_1_1_parameter" kindref="compound">Parameter</ref> &gt;</type>
        <definition>typedef std::vector&lt;Parameter&gt; Parameters</definition>
        <argsstring></argsstring>
        <name>Parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="82" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_config_1a78d4b304f3b091bada45cdb811c82a52" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_hio_glslfx_config_1_1_texture" kindref="compound">Texture</ref> &gt;</type>
        <definition>typedef std::vector&lt;Texture&gt; Textures</definition>
        <argsstring></argsstring>
        <name>Textures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="102" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_config_1ae7011cae46efae775409dabd61e85bdd" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_hio_glslfx_config_1_1_attribute" kindref="compound">Attribute</ref> &gt;</type>
        <definition>typedef std::vector&lt;Attribute&gt; Attributes</definition>
        <argsstring></argsstring>
        <name>Attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="122" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_config_1a2b9f123d87e3ad23a6bbc10d995d0a9b" prot="public" static="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>typedef std::vector&lt;std::string&gt; SourceKeys</definition>
        <argsstring></argsstring>
        <name>SourceKeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="134" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hio_glslfx_config_1abf997c02a7d9e0d3a563970f507789ea" prot="public" static="no">
        <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>typedef VtDictionary MetadataDictionary</definition>
        <argsstring></argsstring>
        <name>MetadataDictionary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="136" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hio_glslfx_config_1a5bba4f55deff0c4c88c4a5740cdbcefe" prot="private" static="no">
        <type>std::map&lt; std::string, SourceKeys &gt;</type>
        <definition>typedef std::map&lt;std::string, SourceKeys&gt; _SourceKeyMap</definition>
        <argsstring></argsstring>
        <name>_SourceKeyMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="177" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hio_glslfx_config_1a9c917a8f19d201c354128f518a2809cc" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _technique</definition>
        <argsstring></argsstring>
        <name>_technique</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="181" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hio_glslfx_config_1a186580c2f30b3d446f6197ede112d39d" prot="private" static="no" mutable="no">
        <type>Parameters</type>
        <definition>Parameters _params</definition>
        <argsstring></argsstring>
        <name>_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="182" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hio_glslfx_config_1abe20edc04560efb878da04594ebddee2" prot="private" static="no" mutable="no">
        <type>Textures</type>
        <definition>Textures _textures</definition>
        <argsstring></argsstring>
        <name>_textures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="183" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hio_glslfx_config_1afcc60808a3a414319b971399d0ce8246" prot="private" static="no" mutable="no">
        <type>Attributes</type>
        <definition>Attributes _attributes</definition>
        <argsstring></argsstring>
        <name>_attributes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="184" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hio_glslfx_config_1a65e65719226a9647f2ade79a17944802" prot="private" static="no" mutable="no">
        <type><ref refid="class_vt_dictionary" kindref="compound">MetadataDictionary</ref></type>
        <definition>MetadataDictionary _metadata</definition>
        <argsstring></argsstring>
        <name>_metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="185" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hio_glslfx_config_1a3c6eec4164c8178274577741f6d1487e" prot="private" static="no" mutable="no">
        <type>_SourceKeyMap</type>
        <definition>_SourceKeyMap _sourceKeyMap</definition>
        <argsstring></argsstring>
        <name>_sourceKeyMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="186" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hio_glslfx_config_1aaae65816f7a9f5881b2878a27c184f59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API <ref refid="class_hio_glslfx_config" kindref="compound">HioGlslfxConfig</ref> *</type>
        <definition>static HIO_API HioGlslfxConfig* Read</definition>
        <argsstring>(TfToken const &amp;technique, std::string const &amp;input, std::string const &amp;filename, std::string *errorStr)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>technique</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>input</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
<para>Create a new <ref refid="class_hio_glslfx_config" kindref="compound">HioGlslfxConfig</ref> from an input string. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>filename</computeroutput> parameter is only used for error reporting. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hio_glslfx_config_1ae5788137dddc976895ab10cdf144df15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API SourceKeys</type>
        <definition>HIO_API SourceKeys GetSourceKeys</definition>
        <argsstring>(TfToken const &amp;shaderStageKey) const</argsstring>
        <name>GetSourceKeys</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderStageKey</declname>
        </param>
        <briefdescription>
<para>Return the set of source keys for a particular shader stage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1ad8b18e0ae05dc5c2cc54c97e59a714f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API Parameters</type>
        <definition>HIO_API Parameters GetParameters</definition>
        <argsstring>() const</argsstring>
        <name>GetParameters</name>
        <briefdescription>
<para>Return the parameters specified in the configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a10cc1f08834cda5d429ec16e090e4e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API Textures</type>
        <definition>HIO_API Textures GetTextures</definition>
        <argsstring>() const</argsstring>
        <name>GetTextures</name>
        <briefdescription>
<para>Return the textures specified in the configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1aeec12c9268f5faa3059aed384c6dc0aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API Attributes</type>
        <definition>HIO_API Attributes GetAttributes</definition>
        <argsstring>() const</argsstring>
        <name>GetAttributes</name>
        <briefdescription>
<para>Returns the attributes specified in the configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a2820c0fa1dd84c6fb4a6fa3eb626a623" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HIO_API <ref refid="class_vt_dictionary" kindref="compound">MetadataDictionary</ref></type>
        <definition>HIO_API MetadataDictionary GetMetadata</definition>
        <argsstring>() const</argsstring>
        <name>GetMetadata</name>
        <briefdescription>
<para>Returns the metadata specified in the configuration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="156" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hio_glslfx_config_1a00bfca29e7af3a6974c03ebc954a1920" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HioGlslfxConfig</definition>
        <argsstring>(TfToken const &amp;technique, VtDictionary const &amp;dict, std::string *errorStr)</argsstring>
        <name>HioGlslfxConfig</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>technique</declname>
        </param>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a1147fef39a18b61348fdaa77c973d4ac" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _Init</definition>
        <argsstring>(VtDictionary const &amp;dict, std::string *errorStr)</argsstring>
        <name>_Init</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a245b76b9b7f441096876b76699df7324" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Parameters</type>
        <definition>Parameters _GetParameters</definition>
        <argsstring>(VtDictionary const &amp;dict, std::string *errorStr) const</argsstring>
        <name>_GetParameters</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a094fb1cbb7f2cf3d190d3b9e5782c5c5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Textures</type>
        <definition>Textures _GetTextures</definition>
        <argsstring>(VtDictionary const &amp;dict, std::string *errorStr) const</argsstring>
        <name>_GetTextures</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a586080aad066931f5f2ec265dfc8a515" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Attributes</type>
        <definition>Attributes _GetAttributes</definition>
        <argsstring>(VtDictionary const &amp;dict, std::string *errorStr) const</argsstring>
        <name>_GetAttributes</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a78f7494a8ffaf854b82770ab8c72ed80" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vt_dictionary" kindref="compound">MetadataDictionary</ref></type>
        <definition>MetadataDictionary _GetMetadata</definition>
        <argsstring>(VtDictionary const &amp;dict, std::string *errorStr) const</argsstring>
        <name>_GetMetadata</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hio_glslfx_config_1a1394ca6c51bb97c58124cd119f596d41" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>_SourceKeyMap</type>
        <definition>_SourceKeyMap _GetSourceKeyMap</definition>
        <argsstring>(VtDictionary const &amp;dict, std::string *errorStr) const</argsstring>
        <name>_GetSourceKeyMap</name>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> const &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errorStr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hio/glslfxConfig.h" line="178" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class representing the configuration of a glslfx file. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_hio_glslfx_config" kindref="compound">HioGlslfxConfig</ref> provides an API for querying the configuration of a glslfx file </para>
    </detaileddescription>
    <location file="pxr/imaging/hio/glslfxConfig.h" line="46" column="1" bodyfile="pxr/imaging/hio/glslfxConfig.h" bodystart="45" bodyend="187"/>
    <listofallmembers>
      <member refid="class_hio_glslfx_config_1afcc60808a3a414319b971399d0ce8246" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_attributes</name></member>
      <member refid="class_hio_glslfx_config_1a586080aad066931f5f2ec265dfc8a515" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_GetAttributes</name></member>
      <member refid="class_hio_glslfx_config_1a78f7494a8ffaf854b82770ab8c72ed80" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_GetMetadata</name></member>
      <member refid="class_hio_glslfx_config_1a245b76b9b7f441096876b76699df7324" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_GetParameters</name></member>
      <member refid="class_hio_glslfx_config_1a1394ca6c51bb97c58124cd119f596d41" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_GetSourceKeyMap</name></member>
      <member refid="class_hio_glslfx_config_1a094fb1cbb7f2cf3d190d3b9e5782c5c5" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_GetTextures</name></member>
      <member refid="class_hio_glslfx_config_1a1147fef39a18b61348fdaa77c973d4ac" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_Init</name></member>
      <member refid="class_hio_glslfx_config_1a65e65719226a9647f2ade79a17944802" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_metadata</name></member>
      <member refid="class_hio_glslfx_config_1a186580c2f30b3d446f6197ede112d39d" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_params</name></member>
      <member refid="class_hio_glslfx_config_1a5bba4f55deff0c4c88c4a5740cdbcefe" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_SourceKeyMap</name></member>
      <member refid="class_hio_glslfx_config_1a3c6eec4164c8178274577741f6d1487e" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_sourceKeyMap</name></member>
      <member refid="class_hio_glslfx_config_1a9c917a8f19d201c354128f518a2809cc" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_technique</name></member>
      <member refid="class_hio_glslfx_config_1abe20edc04560efb878da04594ebddee2" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>_textures</name></member>
      <member refid="class_hio_glslfx_config_1ae7011cae46efae775409dabd61e85bdd" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>Attributes</name></member>
      <member refid="class_hio_glslfx_config_1aeec12c9268f5faa3059aed384c6dc0aa" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>GetAttributes</name></member>
      <member refid="class_hio_glslfx_config_1a2820c0fa1dd84c6fb4a6fa3eb626a623" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>GetMetadata</name></member>
      <member refid="class_hio_glslfx_config_1ad8b18e0ae05dc5c2cc54c97e59a714f7" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>GetParameters</name></member>
      <member refid="class_hio_glslfx_config_1ae5788137dddc976895ab10cdf144df15" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>GetSourceKeys</name></member>
      <member refid="class_hio_glslfx_config_1a10cc1f08834cda5d429ec16e090e4e4e" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>GetTextures</name></member>
      <member refid="class_hio_glslfx_config_1a00bfca29e7af3a6974c03ebc954a1920" prot="private" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>HioGlslfxConfig</name></member>
      <member refid="class_hio_glslfx_config_1abf997c02a7d9e0d3a563970f507789ea" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>MetadataDictionary</name></member>
      <member refid="class_hio_glslfx_config_1af1f57499e5a60f21a9693cfc1fb46046" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>Parameters</name></member>
      <member refid="class_hio_glslfx_config_1aaae65816f7a9f5881b2878a27c184f59" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>Read</name></member>
      <member refid="class_hio_glslfx_config_1acdd79a1a4f81dd6ee5cddcb21149b951" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>Role</name></member>
      <member refid="class_hio_glslfx_config_1acdd79a1a4f81dd6ee5cddcb21149b951a81cb6c9faaad4aa9f0760e46979a74e6" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>RoleColor</name></member>
      <member refid="class_hio_glslfx_config_1acdd79a1a4f81dd6ee5cddcb21149b951af8bcd8079bac9ec135431890baf16d06" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>RoleNone</name></member>
      <member refid="class_hio_glslfx_config_1a2b9f123d87e3ad23a6bbc10d995d0a9b" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>SourceKeys</name></member>
      <member refid="class_hio_glslfx_config_1a78d4b304f3b091bada45cdb811c82a52" prot="public" virt="non-virtual"><scope>HioGlslfxConfig</scope><name>Textures</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
