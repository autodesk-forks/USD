<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_sampler" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HgiSampler</compoundname>
    <derivedcompoundref refid="class_hgi_g_l_sampler" prot="public" virt="non-virtual">HgiGLSampler</derivedcompoundref>
    <includes refid="hgi_2sampler_8h" local="no">sampler.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hgi_sampler_1a64eaf83b1bcfbc71280c5e2c12170168" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_hgi_sampler_desc" kindref="compound">HgiSamplerDesc</ref></type>
        <definition>HgiSamplerDesc _descriptor</definition>
        <argsstring></argsstring>
        <name>_descriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="135" column="1" bodyfile="pxr/imaging/hgi/sampler.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_sampler_1a1735535cf7372283db29a6e253320a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGI_API</type>
        <definition>virtual HGI_API ~HgiSampler</definition>
        <argsstring>()</argsstring>
        <name>~HgiSampler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_sampler_1a8b66805391ea68842368825747acc7f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API <ref refid="struct_hgi_sampler_desc" kindref="compound">HgiSamplerDesc</ref> const  &amp;</type>
        <definition>HGI_API HgiSamplerDesc const&amp; GetDescriptor</definition>
        <argsstring>() const</argsstring>
        <name>GetDescriptor</name>
        <briefdescription>
<para>The descriptor describes the object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_sampler_1a1c1b84de203362af87c23d73c8f8d395" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HGI_API uint64_t</type>
        <definition>virtual HGI_API uint64_t GetRawResource</definition>
        <argsstring>() const =0</argsstring>
        <name>GetRawResource</name>
        <reimplementedby refid="class_hgi_g_l_sampler_1adc3ffb4c04b3ab04225e25cf3f7dfe05">GetRawResource</reimplementedby>
        <briefdescription>
<para>This function returns the handle to the <ref refid="class_hgi" kindref="compound">Hgi</ref> backend&apos;s gpu resource, cast to a uint64_t. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients should avoid using this function and instead use <ref refid="class_hgi" kindref="compound">Hgi</ref> base classes so that client code works with any <ref refid="class_hgi" kindref="compound">Hgi</ref> platform. For transitioning code to <ref refid="class_hgi" kindref="compound">Hgi</ref>, it can however we useful to directly access a platform&apos;s internal resource handles. There is no safety provided in using this. If you by accident pass a HgiMetal resource into an OpenGL call, bad things may happen. In OpenGL this returns the GLuint resource name. In Metal this returns the id&lt;MTLSamplerState&gt; as uint64_t. In Vulkan this returns the VkSampler as uint64_t. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hgi_sampler_1a7fe35a8979c47312fe498bb0facaee9f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API</type>
        <definition>HGI_API HgiSampler</definition>
        <argsstring>(HgiSamplerDesc const &amp;desc)</argsstring>
        <name>HgiSampler</name>
        <param>
          <type><ref refid="struct_hgi_sampler_desc" kindref="compound">HgiSamplerDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hgi_sampler_1a8334376614e877ddef0c39b331b25c31" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiSampler</definition>
        <argsstring>()=delete</argsstring>
        <name>HgiSampler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_sampler_1a7b34f26a6068b74d302cc3f89f95cf40" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hgi_sampler" kindref="compound">HgiSampler</ref> &amp;</type>
        <definition>HgiSampler&amp; operator=</definition>
        <argsstring>(const HgiSampler &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hgi_sampler" kindref="compound">HgiSampler</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_sampler_1a4bc8372fea8ada88e431ad978695b2a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiSampler</definition>
        <argsstring>(const HgiSampler &amp;)=delete</argsstring>
        <name>HgiSampler</name>
        <param>
          <type>const <ref refid="class_hgi_sampler" kindref="compound">HgiSampler</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/sampler.h" line="140" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a graphics platform independent GPU sampler resource that perform texture sampling operations. </para>
    </briefdescription>
    <detaileddescription>
<para>Samplers should be created via <ref refid="class_hgi_1a1e30e202c0bae3a120840545e90567ce" kindref="member">Hgi::CreateSampler</ref>. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3943">
        <label>HgiSampler</label>
        <link refid="class_hgi_sampler"/>
      </node>
      <node id="3944">
        <label>HgiGLSampler</label>
        <link refid="class_hgi_g_l_sampler"/>
        <childnode refid="3943" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3945">
        <label>HgiSampler</label>
        <link refid="class_hgi_sampler"/>
        <childnode refid="3946" relation="usage">
          <edgelabel>_descriptor</edgelabel>
        </childnode>
      </node>
      <node id="3946">
        <label>HgiSamplerDesc</label>
        <link refid="struct_hgi_sampler_desc"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/sampler.h" line="109" column="1" bodyfile="pxr/imaging/hgi/sampler.h" bodystart="108" bodyend="141"/>
    <listofallmembers>
      <member refid="class_hgi_sampler_1a64eaf83b1bcfbc71280c5e2c12170168" prot="protected" virt="non-virtual"><scope>HgiSampler</scope><name>_descriptor</name></member>
      <member refid="class_hgi_sampler_1a8b66805391ea68842368825747acc7f5" prot="public" virt="non-virtual"><scope>HgiSampler</scope><name>GetDescriptor</name></member>
      <member refid="class_hgi_sampler_1a1c1b84de203362af87c23d73c8f8d395" prot="public" virt="pure-virtual"><scope>HgiSampler</scope><name>GetRawResource</name></member>
      <member refid="class_hgi_sampler_1a7fe35a8979c47312fe498bb0facaee9f" prot="protected" virt="non-virtual"><scope>HgiSampler</scope><name>HgiSampler</name></member>
      <member refid="class_hgi_sampler_1a8334376614e877ddef0c39b331b25c31" prot="private" virt="non-virtual"><scope>HgiSampler</scope><name>HgiSampler</name></member>
      <member refid="class_hgi_sampler_1a4bc8372fea8ada88e431ad978695b2a0" prot="private" virt="non-virtual"><scope>HgiSampler</scope><name>HgiSampler</name></member>
      <member refid="class_hgi_sampler_1a7b34f26a6068b74d302cc3f89f95cf40" prot="private" virt="non-virtual"><scope>HgiSampler</scope><name>operator=</name></member>
      <member refid="class_hgi_sampler_1a1735535cf7372283db29a6e253320a76" prot="public" virt="virtual"><scope>HgiSampler</scope><name>~HgiSampler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
