<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_sdf_predicate_library_1_1___overload_binder_base" kind="struct" language="C++" prot="private" abstract="yes">
    <compoundname>SdfPredicateLibrary::_OverloadBinderBase</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a24a6d3f5e74438f13db8bf470a51deca" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_sdf_predicate_param_names_and_defaults" kindref="compound">NamesAndDefaults</ref></type>
        <definition>NamesAndDefaults _namesAndDefaults</definition>
        <argsstring></argsstring>
        <name>_namesAndDefaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="680" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="680" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a8f9e7e4cf2b5111b93679fc8ed5dddf5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~_OverloadBinderBase</definition>
        <argsstring>()=default</argsstring>
        <name>~_OverloadBinderBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a1719dcf017e7a69ba9299ba428a5b458" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_predicate_library_1ad453cd5b71e405ca6a420ba3095c2c09" kindref="member">PredicateFunction</ref></type>
        <definition>PredicateFunction Bind</definition>
        <argsstring>(std::vector&lt; SdfPredicateExpression::FnArg &gt; const &amp;args) const</argsstring>
        <name>Bind</name>
        <param>
          <type>std::vector&lt; <ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">SdfPredicateExpression::FnArg</ref> &gt; const &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="666" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="666" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a710620d10054e40e7082774b8387c1a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; _OverloadBinderBase &gt;</type>
        <definition>virtual std::unique_ptr&lt;_OverloadBinderBase&gt; Clone</definition>
        <argsstring>() const =0</argsstring>
        <name>Clone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="669" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a8a6e64fa33f48d00ed20a1feb1129dc1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_OverloadBinderBase</definition>
        <argsstring>()=default</argsstring>
        <name>_OverloadBinderBase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a6fea1df8eb32b4319b3b63b27ace771e" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>_OverloadBinderBase</definition>
        <argsstring>(NamesAndDefaults const &amp;namesAndDefaults)</argsstring>
        <name>_OverloadBinderBase</name>
        <param>
          <type><ref refid="struct_sdf_predicate_param_names_and_defaults" kindref="compound">NamesAndDefaults</ref> const &amp;</type>
          <declname>namesAndDefaults</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="673" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="673" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_library_1_1___overload_binder_base_1a4e3001595cd34b151a9578b40bbb8b01" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_sdf_predicate_library_1ad453cd5b71e405ca6a420ba3095c2c09" kindref="member">PredicateFunction</ref></type>
        <definition>virtual PredicateFunction _Bind</definition>
        <argsstring>(std::vector&lt; SdfPredicateExpression::FnArg &gt; const &amp;args) const =0</argsstring>
        <name>_Bind</name>
        <param>
          <type>std::vector&lt; <ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">SdfPredicateExpression::FnArg</ref> &gt; const &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="677" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="376">
        <label>SdfPredicateLibrary&lt; DomainType &gt;::_OverloadBinderBase</label>
        <childnode refid="377" relation="usage">
          <edgelabel>_namesAndDefaults</edgelabel>
        </childnode>
      </node>
      <node id="377">
        <label>SdfPredicateParamNamesAndDefaults</label>
        <link refid="struct_sdf_predicate_param_names_and_defaults"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/predicateLibrary.h" line="663" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="662" bodyend="681"/>
    <listofallmembers>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a4e3001595cd34b151a9578b40bbb8b01" prot="protected" virt="pure-virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>_Bind</name></member>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a24a6d3f5e74438f13db8bf470a51deca" prot="protected" virt="non-virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>_namesAndDefaults</name></member>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a8a6e64fa33f48d00ed20a1feb1129dc1" prot="protected" virt="non-virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>_OverloadBinderBase</name></member>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a6fea1df8eb32b4319b3b63b27ace771e" prot="protected" virt="non-virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>_OverloadBinderBase</name></member>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a1719dcf017e7a69ba9299ba428a5b458" prot="public" virt="non-virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>Bind</name></member>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a710620d10054e40e7082774b8387c1a2" prot="public" virt="pure-virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>Clone</name></member>
      <member refid="struct_sdf_predicate_library_1_1___overload_binder_base_1a8f9e7e4cf2b5111b93679fc8ed5dddf5" prot="public" virt="virtual"><scope>SdfPredicateLibrary::_OverloadBinderBase</scope><name>~_OverloadBinderBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
