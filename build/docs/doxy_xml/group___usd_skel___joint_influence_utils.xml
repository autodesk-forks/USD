<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___usd_skel___joint_influence_utils" kind="group">
    <compoundname>UsdSkel_JointInfluenceUtils</compoundname>
    <title>Joint Influence Utils</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga7215dec9047e5143f7055a13813b8bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelNormalizeWeights</definition>
        <argsstring>(TfSpan&lt; float &gt; weights, int numInfluencesPerComponent, float eps=std::numeric_limits&lt; float &gt;::epsilon())</argsstring>
        <name>UsdSkelNormalizeWeights</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; float &gt;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerComponent</declname>
        </param>
        <param>
          <type>float</type>
          <declname>eps</declname>
          <defval>std::numeric_limits&lt; float &gt;::epsilon()</defval>
        </param>
        <briefdescription>
<para>Helper method to normalize weight values across each consecutive run of <computeroutput>numInfluencesPerComponent</computeroutput> elements. </para>
        </briefdescription>
        <detaileddescription>
<para>If the total weight for a run of elements is smaller than <computeroutput>eps</computeroutput>, the elements&apos; weights are set to zero. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga3021d3989a6265f6bbf09d72114edfed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelNormalizeWeights</definition>
        <argsstring>(VtFloatArray *weights, int numInfluencesPerComponent)</argsstring>
        <name>UsdSkelNormalizeWeights</name>
        <param>
          <type>VtFloatArray *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerComponent</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000133"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref>.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga932811131a008a8dfc6d96fb4273465c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSortInfluences</definition>
        <argsstring>(TfSpan&lt; int &gt; indices, TfSpan&lt; float &gt; weights, int numInfluencesPerComponent)</argsstring>
        <name>UsdSkelSortInfluences</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; int &gt;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; float &gt;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerComponent</declname>
        </param>
        <briefdescription>
<para>Sort joint influences such that highest weight values come first. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga58fea609ea13eb8b9f8c6fe7ab709307" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSortInfluences</definition>
        <argsstring>(VtIntArray *indices, VtFloatArray *weights, int numInfluencesPerComponent)</argsstring>
        <name>UsdSkelSortInfluences</name>
        <param>
          <type>VtIntArray *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>VtFloatArray *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerComponent</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000134"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga3a2c9106b3cfa29863691d6eb0bf9de0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelExpandConstantInfluencesToVarying</definition>
        <argsstring>(VtIntArray *indices, size_t size)</argsstring>
        <name>UsdSkelExpandConstantInfluencesToVarying</name>
        <param>
          <type>VtIntArray *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Convert an array of constant influences (joint weights or indices) to an array of varying influences. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>size</computeroutput> should match the size of required for &apos;vertex&apos; interpolation on the type geometry primitive. Typically, this is the number of points. This is a convenience function for clients that don&apos;t understand constant (rigid) weighting. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="428" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1gaa59dc369a78f21fbeeda0ee11292650f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelExpandConstantInfluencesToVarying</definition>
        <argsstring>(VtFloatArray *weights, size_t size)</argsstring>
        <name>UsdSkelExpandConstantInfluencesToVarying</name>
        <param>
          <type>VtFloatArray *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="433" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga062c9743f1bfb73b8274098c3349c4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelResizeInfluences</definition>
        <argsstring>(VtIntArray *indices, int srcNumInfluencesPerComponent, int newNumInfluencesPerComponent)</argsstring>
        <name>UsdSkelResizeInfluences</name>
        <param>
          <type>VtIntArray *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcNumInfluencesPerComponent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newNumInfluencesPerComponent</declname>
        </param>
        <briefdescription>
<para>Resize the number of influences per component in a weight or indices array, which initially has <computeroutput>srcNumInfluencesPerComponent</computeroutput> influences to have no more than <computeroutput>newNumInfluencesPerComponent</computeroutput> influences per component. </para>
        </briefdescription>
        <detaileddescription>
<para>If the size decreases, influences are additionally re-normalized. This is a convenience method for clients that require a fixed number of of influences. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="443" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1gaae0d70275a200052d4c1dba80fe388f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelResizeInfluences</definition>
        <argsstring>(VtFloatArray *weights, int srcNumInfluencesPerComponent, int newNumInfluencesPerComponent)</argsstring>
        <name>UsdSkelResizeInfluences</name>
        <param>
          <type>VtFloatArray *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>srcNumInfluencesPerComponent</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newNumInfluencesPerComponent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="450" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___joint_influence_utils_1ga287fe9c8119859f981674db403f53abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelInterleaveInfluences</definition>
        <argsstring>(const TfSpan&lt; const int &gt; &amp;indices, const TfSpan&lt; const float &gt; &amp;weights, TfSpan&lt; GfVec2f &gt; interleavedInfluences)</argsstring>
        <name>UsdSkelInterleaveInfluences</name>
        <param>
          <type>const <ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>interleavedInfluences</declname>
        </param>
        <briefdescription>
<para>Combine arrays of joint indices and weights into interleaved (index,weight) vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="458" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Collection of methods for working joint influences, as stored through <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>` </para>
    </detaileddescription>
  </compounddef>
</doxygen>
