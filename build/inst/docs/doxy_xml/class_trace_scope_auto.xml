<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_scope_auto" kind="class" language="C++" prot="public">
    <compoundname>TraceScopeAuto</compoundname>
    <includes refid="trace_8h" local="no">trace.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_scope_auto_1ae6a20b9d454fed2eb61a118d048f23f8" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_trace_static_key_data" kindref="compound">TraceStaticKeyData</ref> *const</type>
        <definition>const TraceStaticKeyData* const _key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/trace.h" line="240" column="1" bodyfile="pxr/base/trace/trace.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_scope_auto_1ae0ac75a8418ae6bcae5986e57094128c" prot="private" static="no" mutable="no">
        <type><ref refid="struct_arch_interval_timer" kindref="compound">ArchIntervalTimer</ref></type>
        <definition>ArchIntervalTimer _intervalTimer</definition>
        <argsstring></argsstring>
        <name>_intervalTimer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/trace.h" line="241" column="1" bodyfile="pxr/base/trace/trace.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_scope_auto_1a08c2831eed2f31bd79ee7ec510aff338" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceScopeAuto</definition>
        <argsstring>(const TraceStaticKeyData &amp;key) noexcept</argsstring>
        <name>TraceScopeAuto</name>
        <param>
          <type>const <ref refid="class_trace_static_key_data" kindref="compound">TraceStaticKeyData</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Constructor for TRACE_FUNCTION macro. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/trace.h" line="210" column="1" bodyfile="pxr/base/trace/trace.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_scope_auto_1ad5fddc131aa1b7fc9b5043a43223d201" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>TraceScopeAuto</definition>
        <argsstring>(const TraceStaticKeyData &amp;key, Args &amp;&amp;... args)</argsstring>
        <name>TraceScopeAuto</name>
        <param>
          <type>const <ref refid="class_trace_static_key_data" kindref="compound">TraceStaticKeyData</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Constructor that also records scope arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/trace.h" line="218" column="1" bodyfile="pxr/base/trace/trace.h" bodystart="218" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_scope_auto_1a9420a34372501669851c93450e90b6c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~TraceScopeAuto</definition>
        <argsstring>() noexcept</argsstring>
        <name>~TraceScopeAuto</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/trace.h" line="230" column="1" bodyfile="pxr/base/trace/trace.h" bodystart="230" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class which records a timestamp when it is created and a scope event when it is destructed. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/trace.h" line="206" column="1" bodyfile="pxr/base/trace/trace.h" bodystart="206" bodyend="242"/>
    <listofallmembers>
      <member refid="class_trace_scope_auto_1ae0ac75a8418ae6bcae5986e57094128c" prot="private" virt="non-virtual"><scope>TraceScopeAuto</scope><name>_intervalTimer</name></member>
      <member refid="class_trace_scope_auto_1ae6a20b9d454fed2eb61a118d048f23f8" prot="private" virt="non-virtual"><scope>TraceScopeAuto</scope><name>_key</name></member>
      <member refid="class_trace_scope_auto_1a08c2831eed2f31bd79ee7ec510aff338" prot="public" virt="non-virtual"><scope>TraceScopeAuto</scope><name>TraceScopeAuto</name></member>
      <member refid="class_trace_scope_auto_1ad5fddc131aa1b7fc9b5043a43223d201" prot="public" virt="non-virtual"><scope>TraceScopeAuto</scope><name>TraceScopeAuto</name></member>
      <member refid="class_trace_scope_auto_1a9420a34372501669851c93450e90b6c9" prot="public" virt="non-virtual"><scope>TraceScopeAuto</scope><name>~TraceScopeAuto</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
