<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hd_material_relationship" kind="struct" language="C++" prot="public">
    <compoundname>HdMaterialRelationship</compoundname>
    <includes refid="imaging_2hd_2material_8h" local="no">material.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hd_material_relationship_1a10f26ab6d89312809cfe41fab788359d" prot="public" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath inputId</definition>
        <argsstring></argsstring>
        <name>inputId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="84" column="1" bodyfile="pxr/imaging/hd/material.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_material_relationship_1a3ba729b563bc669fa28cbdf0e4125abe" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken inputName</definition>
        <argsstring></argsstring>
        <name>inputName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="85" column="1" bodyfile="pxr/imaging/hd/material.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_material_relationship_1a204796fc6bea1655c63b4056566c4607" prot="public" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath outputId</definition>
        <argsstring></argsstring>
        <name>outputId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="86" column="1" bodyfile="pxr/imaging/hd/material.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_material_relationship_1ae2037c15c727fc7e0023f360dcec4714" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken outputName</definition>
        <argsstring></argsstring>
        <name>outputName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/material.h" line="87" column="1" bodyfile="pxr/imaging/hd/material.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a connection between two nodes in a material. </para>
    </briefdescription>
    <detaileddescription>
<para>A brief discussion of terminology follows:</para>
<para><itemizedlist>
<listitem><para>Shading nodes have inputs and outputs.</para>
</listitem><listitem><para>Shading nodes consume input values and produce output values.</para>
</listitem><listitem><para>Connections also have inputs and outputs.</para>
</listitem><listitem><para>Connections consume a value from the (<emphasis>inputId</emphasis>, <emphasis>inputName</emphasis>) and pass that value to the (<emphasis>outputId</emphasis>, <emphasis>outputName</emphasis>).</para>
</listitem></itemizedlist>
</para>
<para>Note that a connection&apos;s input is considered an output on the upstream shading node, and the connection&apos;s output is an input on the downstream shading node.</para>
<para>A guideline to remember this terminology is that inputs are always upstream of outputs in the dataflow. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2241">
        <label>SdfPath</label>
        <link refid="class_sdf_path"/>
      </node>
      <node id="2240">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="2239">
        <label>HdMaterialRelationship</label>
        <link refid="struct_hd_material_relationship"/>
        <childnode refid="2240" relation="usage">
          <edgelabel>outputName</edgelabel>
          <edgelabel>inputName</edgelabel>
        </childnode>
        <childnode refid="2241" relation="usage">
          <edgelabel>outputId</edgelabel>
          <edgelabel>inputId</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/material.h" line="83" column="1" bodyfile="pxr/imaging/hd/material.h" bodystart="82" bodyend="88"/>
    <listofallmembers>
      <member refid="struct_hd_material_relationship_1a10f26ab6d89312809cfe41fab788359d" prot="public" virt="non-virtual"><scope>HdMaterialRelationship</scope><name>inputId</name></member>
      <member refid="struct_hd_material_relationship_1a3ba729b563bc669fa28cbdf0e4125abe" prot="public" virt="non-virtual"><scope>HdMaterialRelationship</scope><name>inputName</name></member>
      <member refid="struct_hd_material_relationship_1a204796fc6bea1655c63b4056566c4607" prot="public" virt="non-virtual"><scope>HdMaterialRelationship</scope><name>outputId</name></member>
      <member refid="struct_hd_material_relationship_1ae2037c15c727fc7e0023f360dcec4714" prot="public" virt="non-virtual"><scope>HdMaterialRelationship</scope><name>outputName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
