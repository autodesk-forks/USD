<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="conform_window_8h" kind="file" language="C++">
    <compoundname>conformWindow.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="imaging_2camera_util_2api_8h" local="yes">pxr/imaging/cameraUtil/api.h</includes>
    <includedby refid="framing_8h" local="yes">pxr/imaging/cameraUtil/framing.h</includedby>
    <includedby refid="imaging_2hd_2camera_8h" local="yes">pxr/imaging/hd/camera.h</includedby>
    <includedby refid="imaging_2hd_2utils_8h" local="yes">pxr/imaging/hd/utils.h</includedby>
    <includedby refid="free_camera_scene_delegate_8h" local="yes">pxr/imaging/hdx/freeCameraSceneDelegate.h</includedby>
    <includedby refid="shadow_matrix_computation_8h" local="yes">pxr/imaging/hdx/shadowMatrixComputation.h</includedby>
    <includedby refid="delegate_8h" local="yes">pxr/usdImaging/usdImaging/delegate.h</includedby>
    <includedby refid="usd_imaging_2usd_imaging_g_l_2engine_8h" local="yes">pxr/usdImaging/usdImagingGL/engine.h</includedby>
    <incdepgraph>
      <node id="97911">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="97912" relation="include">
        </childnode>
      </node>
      <node id="97908">
        <label>pxr/imaging/cameraUtil/conformWindow.h</label>
        <link refid="conform_window_8h"/>
        <childnode refid="97909" relation="include">
        </childnode>
        <childnode refid="97910" relation="include">
        </childnode>
      </node>
      <node id="97909">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="97910">
        <label>pxr/imaging/cameraUtil/api.h</label>
        <link refid="imaging_2camera_util_2api_8h_source"/>
        <childnode refid="97911" relation="include">
        </childnode>
      </node>
      <node id="97912">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="97924">
        <label>pxr/imaging/hdx/renderSetupTask.h</label>
        <link refid="render_setup_task_8h_source"/>
        <childnode refid="97920" relation="include">
        </childnode>
        <childnode refid="97925" relation="include">
        </childnode>
        <childnode refid="97926" relation="include">
        </childnode>
        <childnode refid="97927" relation="include">
        </childnode>
      </node>
      <node id="97919">
        <label>pxr/imaging/hdx/oitVolumeRenderTask.h</label>
        <link refid="oit_volume_render_task_8h_source"/>
      </node>
      <node id="97923">
        <label>pxr/imaging/hdx/pickFromRenderBufferTask.h</label>
        <link refid="pick_from_render_buffer_task_8h_source"/>
      </node>
      <node id="97932">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="97926" relation="include">
        </childnode>
      </node>
      <node id="97921">
        <label>pxr/imaging/hdx/oitRenderTask.h</label>
        <link refid="oit_render_task_8h_source"/>
      </node>
      <node id="97928">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="97925">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="97933">
        <label>pxr/imaging/hd/utils.h</label>
        <link refid="imaging_2hd_2utils_8h_source"/>
      </node>
      <node id="97913">
        <label>pxr/imaging/cameraUtil/conformWindow.h</label>
        <link refid="conform_window_8h"/>
        <childnode refid="97914" relation="include">
        </childnode>
        <childnode refid="97930" relation="include">
        </childnode>
        <childnode refid="97933" relation="include">
        </childnode>
        <childnode refid="97934" relation="include">
        </childnode>
        <childnode refid="97935" relation="include">
        </childnode>
        <childnode refid="97936" relation="include">
        </childnode>
        <childnode refid="97927" relation="include">
        </childnode>
      </node>
      <node id="97929">
        <label>pxr/imaging/hdx/simpleLightTask.h</label>
        <link refid="simple_light_task_8h_source"/>
      </node>
      <node id="97916">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="97927">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="97928" relation="include">
        </childnode>
      </node>
      <node id="97917">
        <label>pxr/imaging/hdEmbree/renderer.h</label>
        <link refid="renderer_8h_source"/>
      </node>
      <node id="97935">
        <label>pxr/imaging/hdx/shadowMatrixComputation.h</label>
        <link refid="shadow_matrix_computation_8h_source"/>
      </node>
      <node id="97926">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="97937">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="97920">
        <label>pxr/imaging/hdx/renderTask.h</label>
        <link refid="render_task_8h_source"/>
        <childnode refid="97921" relation="include">
        </childnode>
        <childnode refid="97919" relation="include">
        </childnode>
      </node>
      <node id="97914">
        <label>pxr/imaging/cameraUtil/framing.h</label>
        <link refid="framing_8h_source"/>
        <childnode refid="97915" relation="include">
        </childnode>
        <childnode refid="97924" relation="include">
        </childnode>
        <childnode refid="97929" relation="include">
        </childnode>
        <childnode refid="97926" relation="include">
        </childnode>
      </node>
      <node id="97938">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="97922">
        <label>pxr/imaging/hdx/pickTask.h</label>
        <link refid="pick_task_8h_source"/>
        <childnode refid="97923" relation="include">
        </childnode>
      </node>
      <node id="97918">
        <label>pxr/imaging/hdSt/renderPassState.h</label>
        <link refid="t_2render_pass_state_8h_source"/>
        <childnode refid="97919" relation="include">
        </childnode>
        <childnode refid="97920" relation="include">
        </childnode>
      </node>
      <node id="97936">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="97937" relation="include">
        </childnode>
        <childnode refid="97938" relation="include">
        </childnode>
      </node>
      <node id="97930">
        <label>pxr/imaging/hd/camera.h</label>
        <link refid="imaging_2hd_2camera_8h_source"/>
        <childnode refid="97931" relation="include">
        </childnode>
        <childnode refid="97932" relation="include">
        </childnode>
        <childnode refid="97923" relation="include">
        </childnode>
      </node>
      <node id="97931">
        <label>pxr/imaging/hdPrman/camera.h</label>
        <link refid="imaging_2hd_prman_2camera_8h_source"/>
      </node>
      <node id="97934">
        <label>pxr/imaging/hdx/freeCameraSceneDelegate.h</label>
        <link refid="free_camera_scene_delegate_8h_source"/>
      </node>
      <node id="97915">
        <label>pxr/imaging/hd/renderPassState.h</label>
        <link refid="render_pass_state_8h_source"/>
        <childnode refid="97916" relation="include">
        </childnode>
        <childnode refid="97917" relation="include">
        </childnode>
        <childnode refid="97918" relation="include">
        </childnode>
        <childnode refid="97922" relation="include">
        </childnode>
        <childnode refid="97924" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="conform_window_8h_1ad76e2860d878241eb1d0ec5be4246888" prot="public" static="no" strong="no">
        <type></type>
        <name>CameraUtilConformWindowPolicy</name>
        <enumvalue id="conform_window_8h_1ad76e2860d878241eb1d0ec5be4246888a0d22806b45bfe31224f04e6e8f6a6510" prot="public">
          <name>CameraUtilMatchVertically</name>
          <briefdescription>
<para>Modify width. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conform_window_8h_1ad76e2860d878241eb1d0ec5be4246888aca84203034b80251727200356500bd36" prot="public">
          <name>CameraUtilMatchHorizontally</name>
          <briefdescription>
<para>Modify height. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conform_window_8h_1ad76e2860d878241eb1d0ec5be4246888a0854c5b198139bd5f0cc042315c0833e" prot="public">
          <name>CameraUtilFit</name>
          <briefdescription>
<para>Increase width or height. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conform_window_8h_1ad76e2860d878241eb1d0ec5be4246888a18895ac08b534dea83ba2851329c0558" prot="public">
          <name>CameraUtilCrop</name>
          <briefdescription>
<para>Decrease width or height. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="conform_window_8h_1ad76e2860d878241eb1d0ec5be4246888a2d8e471d398fc01428d7183efe3fdd6d" prot="public">
          <name>CameraUtilDontConform</name>
          <briefdescription>
<para>Leave unchanged (This can result in stretching/shrinking if not pre-fit) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Policy of how to conform a window to the given aspect ratio. </para>
        </briefdescription>
        <detaileddescription>
<para>An ASCII-art explanation is given in the corresponding .cpp file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="44" column="1" bodyfile="pxr/imaging/cameraUtil/conformWindow.h" bodystart="44" bodyend="55"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="conform_window_8h_1ada7397081c3eb7335f28ebb290a376d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref></type>
        <definition>CAMERAUTIL_API GfRange2d CameraUtilConformedWindow</definition>
        <argsstring>(const GfRange2d &amp;window, CameraUtilConformWindowPolicy policy, double targetAspect)</argsstring>
        <name>CameraUtilConformedWindow</name>
        <param>
          <type>const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetAspect</declname>
        </param>
        <briefdescription>
<para>Returns a window with aspect ratio <computeroutput>targetAspect</computeroutput> by applying <computeroutput>policy</computeroutput> to <computeroutput>window</computeroutput> where <computeroutput>window</computeroutput> is encoded as <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conform_window_8h_1a5b977a1203e10c954fdf0f436d6fb1b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref></type>
        <definition>CAMERAUTIL_API GfVec4d CameraUtilConformedWindow</definition>
        <argsstring>(const GfVec4d &amp;window, CameraUtilConformWindowPolicy policy, double targetAspect)</argsstring>
        <name>CameraUtilConformedWindow</name>
        <param>
          <type>const <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetAspect</declname>
        </param>
        <briefdescription>
<para>Returns a window with aspect ratio <computeroutput>targetAspect</computeroutput> by applying <computeroutput>policy</computeroutput> to <computeroutput>window</computeroutput> where <computeroutput>window</computeroutput> is encoded as vector (left, right, bottom, top) similarly to RenderMan&apos;s RiScreenWindow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conform_window_8h_1ad9aa25b685482db4cd4b63eb99ce57e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref></type>
        <definition>CAMERAUTIL_API GfVec2d CameraUtilConformedWindow</definition>
        <argsstring>(const GfVec2d &amp;window, CameraUtilConformWindowPolicy policy, double targetAspect)</argsstring>
        <name>CameraUtilConformedWindow</name>
        <param>
          <type>const <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> &amp;</type>
          <declname>window</declname>
        </param>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetAspect</declname>
        </param>
        <briefdescription>
<para>Returns a window with aspect ratio <computeroutput>targetAspect</computeroutput> by applying <computeroutput>policy</computeroutput> to <computeroutput>window</computeroutput> where <computeroutput>window</computeroutput> is encoded as vector (width, height). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conform_window_8h_1a7d78fc3cb87bba9724f03dee630d75b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>CAMERAUTIL_API GfMatrix4d CameraUtilConformedWindow</definition>
        <argsstring>(const GfMatrix4d &amp;projectionMatrix, CameraUtilConformWindowPolicy policy, double targetAspect)</argsstring>
        <name>CameraUtilConformedWindow</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>projectionMatrix</declname>
        </param>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetAspect</declname>
        </param>
        <briefdescription>
<para>Conforms the given <computeroutput>projectionMatrix</computeroutput> to have aspect ratio <computeroutput>targetAspect</computeroutput> by applying <computeroutput>policy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that this function also supports mirroring about the x- or y-axis of the image corresponding to flipping all signs in the second, respectively, third column of the projection matrix. In other words, we get the same result whether we flip the signs in the matrix and then give it to this function or call this function first and flip the signs of the resulting matrix. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conform_window_8h_1a68304a7f96d610070b902bbbccea402f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API void</type>
        <definition>CAMERAUTIL_API void CameraUtilConformWindow</definition>
        <argsstring>(GfCamera *camera, CameraUtilConformWindowPolicy policy, double targetAspect)</argsstring>
        <name>CameraUtilConformWindow</name>
        <param>
          <type><ref refid="class_gf_camera" kindref="compound">GfCamera</ref> *</type>
          <declname>camera</declname>
        </param>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetAspect</declname>
        </param>
        <briefdescription>
<para>Conforms the given <computeroutput>camera</computeroutput> to have aspect ratio <computeroutput>targetAspect</computeroutput> by applying <computeroutput>policy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="conform_window_8h_1ac1043b76db47e3d2026f14f02e94b40b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>CAMERAUTIL_API void</type>
        <definition>CAMERAUTIL_API void CameraUtilConformWindow</definition>
        <argsstring>(GfFrustum *frustum, CameraUtilConformWindowPolicy policy, double targetAspect)</argsstring>
        <name>CameraUtilConformWindow</name>
        <param>
          <type><ref refid="class_gf_frustum" kindref="compound">GfFrustum</ref> *</type>
          <declname>frustum</declname>
        </param>
        <param>
          <type>CameraUtilConformWindowPolicy</type>
          <declname>policy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>targetAspect</declname>
        </param>
        <briefdescription>
<para>Conforms the given <computeroutput>frustum</computeroutput> to have aspect ratio <computeroutput>targetAspect</computeroutput> by applying <computeroutput>policy</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/cameraUtil/conformWindow.h" line="110" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_IMAGING_CAMERA_UTIL_CONFORM_WINDOW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_IMAGING_CAMERA_UTIL_CONFORM_WINDOW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/cameraUtil/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_camera" kindref="compound">GfCamera</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_gf_frustum" kindref="compound">GfFrustum</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>CameraUtilConformWindowPolicy<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilMatchVertically,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilMatchHorizontally,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilFit,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilCrop,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilDontConform</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">CAMERAUTIL_API</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref></highlight></codeline>
<codeline lineno="61"><highlight class="normal">CameraUtilConformedWindow(</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref><sp/>&amp;window,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilConformWindowPolicy<sp/>policy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>targetAspect);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">CAMERAUTIL_API</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">CameraUtilConformedWindow(</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref><sp/>&amp;window,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilConformWindowPolicy<sp/>policy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>targetAspect);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">CAMERAUTIL_API</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">CameraUtilConformedWindow(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref><sp/>&amp;window,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilConformWindowPolicy<sp/>policy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>targetAspect);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">CAMERAUTIL_API</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></highlight></codeline>
<codeline lineno="94"><highlight class="normal">CameraUtilConformedWindow(</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref><sp/>&amp;projectionMatrix,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilConformWindowPolicy<sp/>policy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>targetAspect);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">CAMERAUTIL_API</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">CameraUtilConformWindow(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gf_camera" kindref="compound">GfCamera</ref><sp/>*camera,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilConformWindowPolicy<sp/>policy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>targetAspect);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">CAMERAUTIL_API</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">CameraUtilConformWindow(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gf_frustum" kindref="compound">GfFrustum</ref><sp/>*frustum,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraUtilConformWindowPolicy<sp/>policy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>targetAspect);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/imaging/cameraUtil/conformWindow.h"/>
  </compounddef>
</doxygen>
