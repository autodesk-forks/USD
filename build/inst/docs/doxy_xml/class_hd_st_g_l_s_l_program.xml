<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_g_l_s_l_program" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStGLSLProgram</compoundname>
    <includes refid="glsl_program_8h" local="no">glslProgram.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_st_g_l_s_l_program_1a98561e8cb698fef2e90d441103da9db1" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t ID</definition>
        <argsstring></argsstring>
        <name>ID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="48" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_st_g_l_s_l_program_1a00886665149d567a6755ae84c92b57fa" prot="public" static="no">
        <type>std::function&lt; void(<ref refid="struct_hgi_shader_function_desc" kindref="compound">HgiShaderFunctionDesc</ref> &amp;computeDesc)&gt;</type>
        <definition>using PopulateDescriptorCallback =  std::function&lt;void(HgiShaderFunctionDesc &amp;computeDesc)&gt;</definition>
        <argsstring></argsstring>
        <name>PopulateDescriptorCallback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="86" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_g_l_s_l_program_1ade506c6a8e8fe6f169e8cdcd28df3ecc" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *const</type>
        <definition>HdStResourceRegistry* const _registry</definition>
        <argsstring></argsstring>
        <name>_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="114" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_g_l_s_l_program_1a5d3a810a0bf922a0ebf273b8ae54624a" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _role</definition>
        <argsstring></argsstring>
        <name>_role</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="115" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_g_l_s_l_program_1a88500a398c9ccf7a298bcfaadfbdcc84" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hgi_shader_program_desc" kindref="compound">HgiShaderProgramDesc</ref></type>
        <definition>HgiShaderProgramDesc _programDesc</definition>
        <argsstring></argsstring>
        <name>_programDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="117" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_g_l_s_l_program_1a9051c73b0e805123b5935009242f8e23" prot="private" static="no" mutable="no">
        <type><ref refid="class_hgi_handle" kindref="compound">HgiShaderProgramHandle</ref></type>
        <definition>HgiShaderProgramHandle _program</definition>
        <argsstring></argsstring>
        <name>_program</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="118" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_g_l_s_l_program_1acb0e05446e953d5c0c251e4c3dfad6a9" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _debugID</definition>
        <argsstring></argsstring>
        <name>_debugID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="124" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a7ab60c478c13f13e218f39916e8a7b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStGLSLProgram</definition>
        <argsstring>(TfToken const &amp;role, HdStResourceRegistry *const registry)</argsstring>
        <name>HdStGLSLProgram</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>role</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *const</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1ac41ad0f0b7bc71523e032406e3e05b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStGLSLProgram</definition>
        <argsstring>()</argsstring>
        <name>~HdStGLSLProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a31f52d59ddae95338e2c263a751706a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool CompileShader</definition>
        <argsstring>(HgiShaderStage stage, std::string const &amp;source)</argsstring>
        <name>CompileShader</name>
        <param>
          <type>HgiShaderStage</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Compile shader source for a shader stage. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a1e70a4f69f8f941a1d24364ad40844cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool CompileShader</definition>
        <argsstring>(HgiShaderFunctionDesc const &amp;desc)</argsstring>
        <name>CompileShader</name>
        <param>
          <type><ref refid="struct_hgi_shader_function_desc" kindref="compound">HgiShaderFunctionDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Compile shader source for a shader stage from an <ref refid="struct_hgi_shader_function_desc" kindref="compound">HgiShaderFunctionDesc</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1ac08572c6088f0859637260698103714c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool Link</definition>
        <argsstring>()</argsstring>
        <name>Link</name>
        <briefdescription>
<para>Link the compiled shaders together. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a93927db337b08859e5c59974fe3730ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool Validate</definition>
        <argsstring>() const</argsstring>
        <name>Validate</name>
        <briefdescription>
<para>Validate if this program is a valid progam in the current context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a609e90a5d6746086fca0c40cace49342" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_hgi_handle" kindref="compound">HgiShaderProgramHandle</ref> const  &amp;</type>
        <definition>HgiShaderProgramHandle const&amp; GetProgram</definition>
        <argsstring>() const</argsstring>
        <name>GetProgram</name>
        <briefdescription>
<para>Returns HgiShaderProgramHandle for the shader program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="72" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1aafbf8ee2945b8aea41e3627e502d6ec2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>TfToken const&amp; GetRole</definition>
        <argsstring>() const</argsstring>
        <name>GetRole</name>
        <briefdescription>
<para>Returns the role of the GPU data in this resource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="111" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1aca06c423a5b95027965e54a1fad98a26" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStGLSLProgramSharedPtr</type>
        <definition>static HDST_API HdStGLSLProgramSharedPtr GetComputeProgram</definition>
        <argsstring>(TfToken const &amp;shaderToken, HdStResourceRegistry *resourceRegistry)</argsstring>
        <name>GetComputeProgram</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderToken</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <briefdescription>
<para>Convenience method to get a shared compute shader program. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1ae5af8918c790f4dc89db13a86c89b9a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStGLSLProgramSharedPtr</type>
        <definition>static HDST_API HdStGLSLProgramSharedPtr GetComputeProgram</definition>
        <argsstring>(TfToken const &amp;shaderFileName, TfToken const &amp;shaderToken, HdStResourceRegistry *resourceRegistry)</argsstring>
        <name>GetComputeProgram</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderFileName</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderToken</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a16546ee1aa037596918d7ba7a5bd7d70" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStGLSLProgramSharedPtr</type>
        <definition>static HDST_API HdStGLSLProgramSharedPtr GetComputeProgram</definition>
        <argsstring>(TfToken const &amp;shaderToken, HdStResourceRegistry *resourceRegistry, PopulateDescriptorCallback populateDescriptor)</argsstring>
        <name>GetComputeProgram</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderToken</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type>PopulateDescriptorCallback</type>
          <declname>populateDescriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1a9ff397b00e438f10f8567ed33160ea8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStGLSLProgramSharedPtr</type>
        <definition>static HDST_API HdStGLSLProgramSharedPtr GetComputeProgram</definition>
        <argsstring>(TfToken const &amp;shaderToken, std::string const &amp;defines, HdStResourceRegistry *resourceRegistry, PopulateDescriptorCallback populateDescriptor)</argsstring>
        <name>GetComputeProgram</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderToken</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>defines</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type>PopulateDescriptorCallback</type>
          <declname>populateDescriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_g_l_s_l_program_1ac563a3b336dd70fbd456591fe950d181" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStGLSLProgramSharedPtr</type>
        <definition>static HDST_API HdStGLSLProgramSharedPtr GetComputeProgram</definition>
        <argsstring>(TfToken const &amp;shaderFileName, TfToken const &amp;shaderToken, std::string const &amp;defines, HdStResourceRegistry *resourceRegistry, PopulateDescriptorCallback populateDescriptor)</argsstring>
        <name>GetComputeProgram</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderFileName</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>shaderToken</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>defines</declname>
        </param>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type>PopulateDescriptorCallback</type>
          <declname>populateDescriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/glslProgram.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An instance of a glsl program. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/glslProgram.h" line="46" column="1" bodyfile="pxr/imaging/hdSt/glslProgram.h" bodystart="45" bodyend="125"/>
    <listofallmembers>
      <member refid="class_hd_st_g_l_s_l_program_1acb0e05446e953d5c0c251e4c3dfad6a9" prot="private" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>_debugID</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a9051c73b0e805123b5935009242f8e23" prot="private" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>_program</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a88500a398c9ccf7a298bcfaadfbdcc84" prot="private" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>_programDesc</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1ade506c6a8e8fe6f169e8cdcd28df3ecc" prot="private" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>_registry</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a5d3a810a0bf922a0ebf273b8ae54624a" prot="private" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>_role</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a31f52d59ddae95338e2c263a751706a7" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>CompileShader</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a1e70a4f69f8f941a1d24364ad40844cc" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>CompileShader</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1aca06c423a5b95027965e54a1fad98a26" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetComputeProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1ae5af8918c790f4dc89db13a86c89b9a7" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetComputeProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a16546ee1aa037596918d7ba7a5bd7d70" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetComputeProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a9ff397b00e438f10f8567ed33160ea8c" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetComputeProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1ac563a3b336dd70fbd456591fe950d181" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetComputeProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a609e90a5d6746086fca0c40cace49342" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1aafbf8ee2945b8aea41e3627e502d6ec2" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>GetRole</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a7ab60c478c13f13e218f39916e8a7b30" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>HdStGLSLProgram</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a98561e8cb698fef2e90d441103da9db1" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>ID</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1ac08572c6088f0859637260698103714c" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>Link</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a00886665149d567a6755ae84c92b57fa" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>PopulateDescriptorCallback</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1a93927db337b08859e5c59974fe3730ac" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>Validate</name></member>
      <member refid="class_hd_st_g_l_s_l_program_1ac41ad0f0b7bc71523e032406e3e05b9f" prot="public" virt="non-virtual"><scope>HdStGLSLProgram</scope><name>~HdStGLSLProgram</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
