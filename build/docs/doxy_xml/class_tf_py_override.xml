<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_py_override" kind="class" language="C++" prot="public">
    <compoundname>TfPyOverride</compoundname>
    <basecompoundref refid="class_tf_py_obj_wrapper" prot="public" virt="non-virtual">TfPyObjWrapper</basecompoundref>
    <includes refid="py_override_8h" local="no">pyOverride.h</includes>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_tf_py_override_1a92ce474e81db5606750c1818c6b509c0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Arg</type>
          </param>
        </templateparamlist>
        <type>constexpr char</type>
        <definition>static constexpr char _PyObjArg</definition>
        <argsstring>()</argsstring>
        <name>_PyObjArg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="118" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="118" bodyend="121"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_py_override_1a1a7352d2f0ffa615d023642b125be398" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfPyOverride</definition>
        <argsstring>(boost::python::handle&lt;&gt; callable)</argsstring>
        <name>TfPyOverride</name>
        <param>
          <type>boost::python::handle&lt;&gt;</type>
          <declname>callable</declname>
        </param>
        <briefdescription>
<para>Clients must hold the GIL to construct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="125" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_override_1ae2fa26a1f035508502d30bf83d600215" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_tf_py_method_result" kindref="compound">TfPyMethodResult</ref></type>
        <definition>TfPyMethodResult operator()</definition>
        <argsstring>(Args const &amp;... args) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Args const &amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
<para>Call the override. </para>
        </briefdescription>
        <detaileddescription>
<para>Clients need not hold the GIL to invoke the call operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="133" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="133" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A reimplementation of boost::python::override. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is reimplemented from the boost class simply because the provided class only allows construction from, ultimately, boost::python::wrapper::get_override(). Unfortunately, that method returns the wrong result when the overridden function we are asking about lives not on the directly wrapped C++ class, but a wrapped ancestor. So we provide our own version, <ref refid="class_tf_py_override" kindref="compound">TfPyOverride</ref>, with a public constructor.</para>
<para>Note that clients must have the python GIL when constructing a <ref refid="class_tf_py_override" kindref="compound">TfPyOverride</ref> object. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5500">
        <label>TfPyOverride</label>
        <link refid="class_tf_py_override"/>
        <childnode refid="5501" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5501">
        <label>TfPyObjWrapper</label>
        <link refid="class_tf_py_obj_wrapper"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5502">
        <label>TfPyOverride</label>
        <link refid="class_tf_py_override"/>
        <childnode refid="5503" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5503">
        <label>TfPyObjWrapper</label>
        <link refid="class_tf_py_obj_wrapper"/>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/pyOverride.h" line="115" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="114" bodyend="148"/>
    <listofallmembers>
      <member refid="class_tf_py_override_1a92ce474e81db5606750c1818c6b509c0" prot="private" virt="non-virtual"><scope>TfPyOverride</scope><name>_PyObjArg</name></member>
      <member refid="class_tf_py_obj_wrapper_1a115702fc3cb62a3c3bf4b3c89f3bc373" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>Get</name></member>
      <member refid="class_tf_py_obj_wrapper_1ac9250e102e555cde5d6c968dfe831456" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>operator!=</name></member>
      <member refid="class_tf_py_override_1ae2fa26a1f035508502d30bf83d600215" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>operator()</name></member>
      <member refid="class_tf_py_obj_wrapper_1a1c108a8743c168d71c9731e5e9f63596" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>operator==</name></member>
      <member refid="class_tf_py_obj_wrapper_1aeddca8ee3f8a757ae8fdf114260df477" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>ptr</name></member>
      <member refid="class_tf_py_obj_wrapper_1ad9e36ff89e234ccad53d4618dc5fa475" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>TfPyObjWrapper</name></member>
      <member refid="class_tf_py_obj_wrapper_1af5b9924c62126e5aeb241d21cb9a3295" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>TfPyObjWrapper</name></member>
      <member refid="class_tf_py_override_1a1a7352d2f0ffa615d023642b125be398" prot="public" virt="non-virtual"><scope>TfPyOverride</scope><name>TfPyOverride</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
