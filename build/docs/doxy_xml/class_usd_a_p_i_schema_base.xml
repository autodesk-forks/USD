<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_a_p_i_schema_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>UsdAPISchemaBase</compoundname>
    <basecompoundref refid="class_usd_schema_base" prot="public" virt="non-virtual">UsdSchemaBase</basecompoundref>
    <derivedcompoundref refid="class_usd_clips_a_p_i" prot="public" virt="non-virtual">UsdClipsAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_collection_a_p_i" prot="public" virt="non-virtual">UsdCollectionAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_model_a_p_i" prot="public" virt="non-virtual">UsdGeomModelAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_motion_a_p_i" prot="public" virt="non-virtual">UsdGeomMotionAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_primvars_a_p_i" prot="public" virt="non-virtual">UsdGeomPrimvarsAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_visibility_a_p_i" prot="public" virt="non-virtual">UsdGeomVisibilityAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_xform_common_a_p_i" prot="public" virt="non-virtual">UsdGeomXformCommonAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_hydra_generative_procedural_a_p_i" prot="public" virt="non-virtual">UsdHydraGenerativeProceduralAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_light_a_p_i" prot="public" virt="non-virtual">UsdLuxLightAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_light_list_a_p_i" prot="public" virt="non-virtual">UsdLuxLightListAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_list_a_p_i" prot="public" virt="non-virtual">UsdLuxListAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_mesh_light_a_p_i" prot="public" virt="non-virtual">UsdLuxMeshLightAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_shadow_a_p_i" prot="public" virt="non-virtual">UsdLuxShadowAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_shaping_a_p_i" prot="public" virt="non-virtual">UsdLuxShapingAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_volume_light_a_p_i" prot="public" virt="non-virtual">UsdLuxVolumeLightAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_media_asset_previews_a_p_i" prot="public" virt="non-virtual">UsdMediaAssetPreviewsAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_model_a_p_i" prot="public" virt="non-virtual">UsdModelAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_articulation_root_a_p_i" prot="public" virt="non-virtual">UsdPhysicsArticulationRootAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_collision_a_p_i" prot="public" virt="non-virtual">UsdPhysicsCollisionAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_drive_a_p_i" prot="public" virt="non-virtual">UsdPhysicsDriveAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_filtered_pairs_a_p_i" prot="public" virt="non-virtual">UsdPhysicsFilteredPairsAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_limit_a_p_i" prot="public" virt="non-virtual">UsdPhysicsLimitAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_mass_a_p_i" prot="public" virt="non-virtual">UsdPhysicsMassAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_material_a_p_i" prot="public" virt="non-virtual">UsdPhysicsMaterialAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_mesh_collision_a_p_i" prot="public" virt="non-virtual">UsdPhysicsMeshCollisionAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_physics_rigid_body_a_p_i" prot="public" virt="non-virtual">UsdPhysicsRigidBodyAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_material_a_p_i" prot="public" virt="non-virtual">UsdRiMaterialAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_render_pass_a_p_i" prot="public" virt="non-virtual">UsdRiRenderPassAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_spline_a_p_i" prot="public" virt="non-virtual">UsdRiSplineAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_ri_statements_a_p_i" prot="public" virt="non-virtual">UsdRiStatementsAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_shade_connectable_a_p_i" prot="public" virt="non-virtual">UsdShadeConnectableAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_shade_coord_sys_a_p_i" prot="public" virt="non-virtual">UsdShadeCoordSysAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_shade_material_binding_a_p_i" prot="public" virt="non-virtual">UsdShadeMaterialBindingAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_shade_node_def_a_p_i" prot="public" virt="non-virtual">UsdShadeNodeDefAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_skel_binding_a_p_i" prot="public" virt="non-virtual">UsdSkelBindingAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_u_i_node_graph_node_a_p_i" prot="public" virt="non-virtual">UsdUINodeGraphNodeAPI</derivedcompoundref>
    <derivedcompoundref refid="class_usd_u_i_scene_graph_prim_a_p_i" prot="public" virt="non-virtual">UsdUISceneGraphPrimAPI</derivedcompoundref>
    <includes refid="api_schema_base_8h" local="no">apiSchemaBase.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_a_p_i_schema_base_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741a1823d42f4a7ead4b97d8c73167795ef8" kindref="member">UsdSchemaKind::AbstractBase</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="122" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_a_p_i_schema_base_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="162" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_a_p_i_schema_base_1a8868bac30a008f56722ea4c463f835e9" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _instanceName</definition>
        <argsstring></argsstring>
        <name>_instanceName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="238" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1a693760be7357b341ca92cae42af89a2a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdAPISchemaBase</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdAPISchemaBase</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_a_p_i_schema_base" kindref="compound">UsdAPISchemaBase</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to UsdAPISchemaBase::Get(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="128" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1aa02eade67d6ca4c0d58fe3b7e5a4cc9a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdAPISchemaBase</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdAPISchemaBase</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_a_p_i_schema_base" kindref="compound">UsdAPISchemaBase</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_a_p_i_schema_base" kindref="compound">UsdAPISchemaBase</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="136" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1a426f2a53141cc3eefa43fce755f83108" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>USD_API</type>
        <definition>virtual USD_API ~UsdAPISchemaBase</definition>
        <argsstring>()=0</argsstring>
        <name>~UsdAPISchemaBase</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1a5988bc4012f6a54f866f883727b9ce10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USD_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="150" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1a408aa7d080a2672e88403126cc197095" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USD_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USD_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_schema_base_1ae6ef66077029b8412b299e9bd86f9dee">_GetSchemaKind</reimplements>
        <reimplementedby refid="class_usd_model_a_p_i_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_connectable_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_primvars_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_common_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_material_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_mass_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_shaping_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_collision_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_shadow_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_filtered_pairs_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_articulation_root_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_rigid_body_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_u_i_scene_graph_prim_a_p_i_1ad15ffdc5353a19f2de4cb27a4f1dd47d">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_u_i_node_graph_node_a_p_i_1ad15ffdc5353a19f2de4cb27a4f1dd47d">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_mesh_collision_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_list_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_volume_light_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_mesh_light_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_hydra_generative_procedural_a_p_i_1a113835345147dc6018981898cc88edfa">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_clips_a_p_i_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_motion_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_statements_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_binding_a_p_i_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_material_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_spline_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_render_pass_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_node_def_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_visibility_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_media_asset_previews_a_p_i_1a4b449c2d8fd036608b3560779b7be4a3">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_limit_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_drive_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_coord_sys_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_material_binding_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_model_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_list_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_collection_a_p_i_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1ae1aaced053a4cc13c21b444b27130c75" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdAPISchemaBase</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;instanceName)</argsstring>
        <name>UsdAPISchemaBase</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>instanceName</declname>
        </param>
        <briefdescription>
<para>Construct a multiple-apply <ref refid="class_usd_a_p_i_schema_base" kindref="compound">UsdAPISchemaBase</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> with the specified <computeroutput>instanceName</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="187" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1ac9df31df96c3346f55ba31be7472f106" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdAPISchemaBase</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj, const TfToken &amp;instanceName)</argsstring>
        <name>UsdAPISchemaBase</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>instanceName</declname>
        </param>
        <briefdescription>
<para>Construct a multiple-apply <ref refid="class_usd_a_p_i_schema_base" kindref="compound">UsdAPISchemaBase</ref> on the prim held by <computeroutput>schemaObj</computeroutput> with the given <computeroutput>instanceName</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="196" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="196" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1aa27e613f624c34d85fc17cbf58956245" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; _GetInstanceName</definition>
        <argsstring>() const</argsstring>
        <name>_GetInstanceName</name>
        <briefdescription>
<para>Returns the instance name of the API schema object belonging to a multiple-apply API schema. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned instance name will be empty for non-applied and single-apply API schemas. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="208" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1ad91204cc9fb92f0306372e074052190f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool _IsCompatible</definition>
        <argsstring>() const override</argsstring>
        <name>_IsCompatible</name>
        <reimplements refid="class_usd_schema_base_1a4c09b7ee5dadb4e6f1013a1a4d56d264">_IsCompatible</reimplements>
        <reimplementedby refid="class_usd_shade_connectable_a_p_i_1a4cd8715d75f7760f93c0b718376da36e">_IsCompatible</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_common_a_p_i_1aff69515f1800a9df4b3b2a443b3b427a">_IsCompatible</reimplementedby>
        <briefdescription>
<para>Check whether this APISchema object is valid for the currently held. </para>
        </briefdescription>
        <detaileddescription>
<para>prim.</para>
<para>If this is an applied API schema, this returns true if the held prim is valid and already has the API schema applied to it, along with the instanceName (in the case of multiple-apply). The instanceName should not be empty in the case of a multiple-apply API schema.</para>
<para>This check is performed when clients invoke the explicit bool conversion operator, implemented in <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref>.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_prim_1a582b449631f9e073e0e04582c66ce04a" kindref="member">UsdPrim::HasAPI()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="232" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1a86866fae65e3b935e7bd24b845c8e37e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USD_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1a6f7a3688b0129a59c6e70e925d7ac732" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USD_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USD_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_schema_base_1aa4577cccb4c5a966a0eddedfa31dc0e5">_GetTfType</reimplements>
        <reimplementedby refid="class_usd_model_a_p_i_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_connectable_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_primvars_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_common_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_material_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_mass_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_shaping_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_collision_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_shadow_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_filtered_pairs_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_articulation_root_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_rigid_body_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_u_i_scene_graph_prim_a_p_i_1ad926ae18bb68d07cd9c093d4722ad3d2">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_u_i_node_graph_node_a_p_i_1ad926ae18bb68d07cd9c093d4722ad3d2">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_mesh_collision_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_list_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_volume_light_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_mesh_light_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_hydra_generative_procedural_a_p_i_1a10fabff05825a4646fd9f5f86510ea08">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_clips_a_p_i_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_motion_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_statements_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_binding_a_p_i_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_material_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_spline_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_render_pass_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_node_def_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_visibility_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_media_asset_previews_a_p_i_1a0761fce9ddea0f86c69c833dfb52348b">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_limit_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_drive_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_coord_sys_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_material_binding_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_model_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_list_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_collection_a_p_i_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="170" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_usd_a_p_i_schema_base_1aaf34e3836e442b3a04d517febdb69cc3" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>static USD_API TfTokenVector _GetMultipleApplyInstanceNames</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfType &amp;schemaType)</argsstring>
        <name>_GetMultipleApplyInstanceNames</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
          <declname>schemaType</declname>
        </param>
        <briefdescription>
<para>Returns a vector of names of API schema objects belonging to a multiple-apply API schema applied to a given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/apiSchemaBase.h" line="215" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class for all <emphasis>API</emphasis> schemas. </para>
    </briefdescription>
    <detaileddescription>
<para>An API schema provides an interface to a prim&apos;s qualities, but does not specify a typeName for the underlying prim. The prim&apos;s qualities include its inheritance structure, attributes, relationships etc. Since it cannot provide a typeName, an API schema is considered to be non-concrete.</para>
<para>To auto-generate an API schema using usdGenSchema, simply leave the typeName empty and make it inherit from &quot;/APISchemaBase&quot; or from another API schema. See <ref refid="class_usd_model_a_p_i" kindref="compound">UsdModelAPI</ref>, <ref refid="class_usd_clips_a_p_i" kindref="compound">UsdClipsAPI</ref> and <ref refid="class_usd_collection_a_p_i" kindref="compound">UsdCollectionAPI</ref> for examples.</para>
<para>API schemas are classified into applied and non-applied API schemas. The author of an API schema has to decide on the type of API schema at the time of its creation by setting customData[&apos;apiSchemaType&apos;] in the schema definition (i.e. in the associated primSpec inside the schema.usda file). <ref refid="class_usd_a_p_i_schema_base" kindref="compound">UsdAPISchemaBase</ref> implements methods that are used to record the application of an API schema on a USD prim.</para>
<para>If an API schema only provides an interface to set certain core bits of metadata (like <ref refid="class_usd_model_a_p_i" kindref="compound">UsdModelAPI</ref>, which sets model kind and <ref refid="class_usd_clips_a_p_i" kindref="compound">UsdClipsAPI</ref>, which sets clips-related metadata) OR if the API schema can apply to any type of prim or only to a known fixed set of prim types OR if there is no use of recording the application of the API schema, in such cases, it would be better to make it a non-applied API schema. Examples of non-applied API schemas include <ref refid="class_usd_model_a_p_i" kindref="compound">UsdModelAPI</ref>, <ref refid="class_usd_clips_a_p_i" kindref="compound">UsdClipsAPI</ref>, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> and <ref refid="class_usd_geom_primvars_a_p_i" kindref="compound">UsdGeomPrimvarsAPI</ref>.</para>
<para>If there is a need to discover (or record) whether a prim contains or subscribes to a given API schema, it would be advantageous to make the API schema be &quot;applied&quot;. In general, API schemas that add one or more properties to a prim should be tagged as applied API schemas. A public Apply() method is generated for applied API schemas by usdGenSchema. An applied API schema must be applied to a prim via a call to the generated Apply() method, for the schema object to evaluate to true when converted to a bool using the explicit bool conversion operator. Examples of applied API schemas include <ref refid="class_usd_collection_a_p_i" kindref="compound">UsdCollectionAPI</ref>, <ref refid="class_usd_geom_model_a_p_i" kindref="compound">UsdGeomModelAPI</ref> and <ref refid="class_usd_geom_motion_a_p_i" kindref="compound">UsdGeomMotionAPI</ref></para>
<para><anchor id="class_usd_a_p_i_schema_base_1UsdAPISchemaBase_SingleVsMultipleApply"/></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5989">
        <label>UsdLuxMeshLightAPI</label>
        <link refid="class_usd_lux_mesh_light_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5999">
        <label>UsdPhysicsLimitAPI</label>
        <link refid="class_usd_physics_limit_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6012">
        <label>UsdSkelBindingAPI</label>
        <link refid="class_usd_skel_binding_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6010">
        <label>UsdShadeMaterialBindingAPI</label>
        <link refid="class_usd_shade_material_binding_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5994">
        <label>UsdModelAPI</label>
        <link refid="class_usd_model_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5986">
        <label>UsdLuxLightAPI</label>
        <link refid="class_usd_lux_light_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6006">
        <label>UsdRiSplineAPI</label>
        <link refid="class_usd_ri_spline_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5998">
        <label>UsdPhysicsFilteredPairsAPI</label>
        <link refid="class_usd_physics_filtered_pairs_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6011">
        <label>UsdShadeNodeDefAPI</label>
        <link refid="class_usd_shade_node_def_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5982">
        <label>UsdGeomPrimvarsAPI</label>
        <link refid="class_usd_geom_primvars_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6000">
        <label>UsdPhysicsMassAPI</label>
        <link refid="class_usd_physics_mass_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6009">
        <label>UsdShadeCoordSysAPI</label>
        <link refid="class_usd_shade_coord_sys_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5991">
        <label>UsdLuxShapingAPI</label>
        <link refid="class_usd_lux_shaping_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5979">
        <label>UsdCollectionAPI</label>
        <link refid="class_usd_collection_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6001">
        <label>UsdPhysicsMaterialAPI</label>
        <link refid="class_usd_physics_material_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6013">
        <label>UsdUINodeGraphNodeAPI</label>
        <link refid="class_usd_u_i_node_graph_node_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6002">
        <label>UsdPhysicsMeshCollisionAPI</label>
        <link refid="class_usd_physics_mesh_collision_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5985">
        <label>UsdHydraGenerativeProceduralAPI</label>
        <link refid="class_usd_hydra_generative_procedural_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5977">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="5983">
        <label>UsdGeomVisibilityAPI</label>
        <link refid="class_usd_geom_visibility_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6004">
        <label>UsdRiMaterialAPI</label>
        <link refid="class_usd_ri_material_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5993">
        <label>UsdMediaAssetPreviewsAPI</label>
        <link refid="class_usd_media_asset_previews_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5996">
        <label>UsdPhysicsCollisionAPI</label>
        <link refid="class_usd_physics_collision_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5990">
        <label>UsdLuxShadowAPI</label>
        <link refid="class_usd_lux_shadow_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6014">
        <label>UsdUISceneGraphPrimAPI</label>
        <link refid="class_usd_u_i_scene_graph_prim_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5984">
        <label>UsdGeomXformCommonAPI</label>
        <link refid="class_usd_geom_xform_common_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6003">
        <label>UsdPhysicsRigidBodyAPI</label>
        <link refid="class_usd_physics_rigid_body_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5988">
        <label>UsdLuxListAPI</label>
        <link refid="class_usd_lux_list_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5981">
        <label>UsdGeomMotionAPI</label>
        <link refid="class_usd_geom_motion_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6005">
        <label>UsdRiRenderPassAPI</label>
        <link refid="class_usd_ri_render_pass_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5995">
        <label>UsdPhysicsArticulationRootAPI</label>
        <link refid="class_usd_physics_articulation_root_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5976">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="5977" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5980">
        <label>UsdGeomModelAPI</label>
        <link refid="class_usd_geom_model_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5978">
        <label>UsdClipsAPI</label>
        <link refid="class_usd_clips_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6008">
        <label>UsdShadeConnectableAPI</label>
        <link refid="class_usd_shade_connectable_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6007">
        <label>UsdRiStatementsAPI</label>
        <link refid="class_usd_ri_statements_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5987">
        <label>UsdLuxLightListAPI</label>
        <link refid="class_usd_lux_light_list_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5997">
        <label>UsdPhysicsDriveAPI</label>
        <link refid="class_usd_physics_drive_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5992">
        <label>UsdLuxVolumeLightAPI</label>
        <link refid="class_usd_lux_volume_light_a_p_i"/>
        <childnode refid="5976" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6016">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6015">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="6016" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usd/apiSchemaBase.h" line="117" column="1" bodyfile="pxr/usd/usd/apiSchemaBase.h" bodystart="116" bodyend="239"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa27e613f624c34d85fc17cbf58956245" prot="protected" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_GetInstanceName</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aaf34e3836e442b3a04d517febdb69cc3" prot="protected" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_GetMultipleApplyInstanceNames</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a408aa7d080a2672e88403126cc197095" prot="protected" virt="virtual"><scope>UsdAPISchemaBase</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdAPISchemaBase</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a86866fae65e3b935e7bd24b845c8e37e" prot="private" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a6f7a3688b0129a59c6e70e925d7ac732" prot="private" virt="virtual"><scope>UsdAPISchemaBase</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_GetType</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a8868bac30a008f56722ea4c463f835e9" prot="private" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_instanceName</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdAPISchemaBase</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_a_p_i_schema_base_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>GetPrim</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a5988bc4012f6a54f866f883727b9ce10" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>operator bool</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>schemaKind</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a693760be7357b341ca92cae42af89a2a" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa02eade67d6ca4c0d58fe3b7e5a4cc9a" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ae1aaced053a4cc13c21b444b27130c75" prot="protected" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ac9df31df96c3346f55ba31be7472f106" prot="protected" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdAPISchemaBase</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a426f2a53141cc3eefa43fce755f83108" prot="public" virt="pure-virtual"><scope>UsdAPISchemaBase</scope><name>~UsdAPISchemaBase</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdAPISchemaBase</scope><name>~UsdSchemaBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
