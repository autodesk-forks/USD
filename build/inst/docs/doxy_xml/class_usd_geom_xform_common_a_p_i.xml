<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_geom_xform_common_a_p_i" kind="class" language="C++" prot="public">
    <compoundname>UsdGeomXformCommonAPI</compoundname>
    <basecompoundref refid="class_usd_a_p_i_schema_base" prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="xform_common_a_p_i_8h" local="no">xformCommonAPI.h</includes>
    <innerclass refid="struct_usd_geom_xform_common_a_p_i_1_1_ops" prot="public">UsdGeomXformCommonAPI::Ops</innerclass>
      <sectiondef kind="user-defined">
      <header>API for setting individual ops independently.</header>
      <description><para><anchor id="class_usd_geom_xform_common_a_p_i_1UsdGeomXformCommonAPI_Set_Individual_Ops"/></para>
</description>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1afe7c6ce49674b038379987aaaf8170c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetTranslate</definition>
        <argsstring>(const GfVec3d &amp;translation, const UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>SetTranslate</name>
        <param>
          <type>const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Set translation at <computeroutput>time</computeroutput> to <computeroutput>translation</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a8f6423b5281dd7f6e0d4992d6fc9869f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetPivot</definition>
        <argsstring>(const GfVec3f &amp;pivot, const UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>SetPivot</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Set pivot position at <computeroutput>time</computeroutput> to <computeroutput>pivot</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="281" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ad7a76ddb58be72ac762e9c9e161917ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetRotate</definition>
        <argsstring>(const GfVec3f &amp;rotation, UsdGeomXformCommonAPI::RotationOrder rotOrder=RotationOrderXYZ, const UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>SetRotate</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">UsdGeomXformCommonAPI::RotationOrder</ref></type>
          <declname>rotOrder</declname>
          <defval>RotationOrderXYZ</defval>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Set rotation at <computeroutput>time</computeroutput> to <computeroutput>rotation</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a728d50e3320c6d1043ce1ba8ae28845c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetScale</definition>
        <argsstring>(const GfVec3f &amp;scale, const UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>SetScale</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Set scale at <computeroutput>time</computeroutput> to <computeroutput>scale</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ac28ed3e559c5a1c1b5e1b4046ec69995" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetResetXformStack</definition>
        <argsstring>(bool resetXformStack) const</argsstring>
        <name>SetResetXformStack</name>
        <param>
          <type>bool</type>
          <declname>resetXformStack</declname>
        </param>
        <briefdescription>
<para>Set whether the xformable resets the transform stack. </para>
        </briefdescription>
        <detaileddescription>
<para>i.e., does not inherit the parent transformation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1afe02745ce2b8d0cdb8a2f13d04b2c1d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="struct_usd_geom_xform_common_a_p_i_1_1_ops" kindref="compound">Ops</ref></type>
        <definition>USDGEOM_API Ops CreateXformOps</definition>
        <argsstring>(RotationOrder rotOrder, OpFlags op1=OpNone, OpFlags op2=OpNone, OpFlags op3=OpNone, OpFlags op4=OpNone) const</argsstring>
        <name>CreateXformOps</name>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">RotationOrder</ref></type>
          <declname>rotOrder</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op1</declname>
          <defval>OpNone</defval>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op2</declname>
          <defval>OpNone</defval>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op3</declname>
          <defval>OpNone</defval>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op4</declname>
          <defval>OpNone</defval>
        </param>
        <briefdescription>
<para>Creates the specified XformCommonAPI-compatible xform ops, or returns the existing ops if they already exist. </para>
        </briefdescription>
        <detaileddescription>
<para>If successful, returns an <ref refid="struct_usd_geom_xform_common_a_p_i_1_1_ops" kindref="compound">Ops</ref> object with all the ops on this prim, identified by type. If the requested xform ops couldn&apos;t be created or the prim is not XformCommonAPI-compatible, returns an <ref refid="struct_usd_geom_xform_common_a_p_i_1_1_ops" kindref="compound">Ops</ref> object with all invalid ops.</para>
<para>The <computeroutput>rotOrder</computeroutput> is only used if OpRotate is specified. Otherwise, it is ignored. (If you don&apos;t need to create a rotate op, you might find it helpful to use the other overload that takes no rotation order.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a7fe26f4075505f0e302695478931f3e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="struct_usd_geom_xform_common_a_p_i_1_1_ops" kindref="compound">Ops</ref></type>
        <definition>USDGEOM_API Ops CreateXformOps</definition>
        <argsstring>(OpFlags op1=OpNone, OpFlags op2=OpNone, OpFlags op3=OpNone, OpFlags op4=OpNone) const</argsstring>
        <name>CreateXformOps</name>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op1</declname>
          <defval>OpNone</defval>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op2</declname>
          <defval>OpNone</defval>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op3</declname>
          <defval>OpNone</defval>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" kindref="member">OpFlags</ref></type>
          <declname>op4</declname>
          <defval>OpNone</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. This overload does not take a rotation order. </para>
        </briefdescription>
        <detaileddescription>
<para>If you specify OpRotate, then this overload assumes RotationOrderXYZ or the previously-authored rotation order. (If you do need to create a rotate op, you might find it helpful to use the other overload that explicitly takes a rotation order.) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="324" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Computing transforms</header>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ac5bacc1e5b8385e73be23e44a59ed434" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>static USDGEOM_API GfMatrix4d GetRotationTransform</definition>
        <argsstring>(const GfVec3f &amp;rotation, const UsdGeomXformCommonAPI::RotationOrder rotationOrder)</argsstring>
        <name>GetRotationTransform</name>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">UsdGeomXformCommonAPI::RotationOrder</ref></type>
          <declname>rotationOrder</declname>
        </param>
        <briefdescription>
<para>Return the 4x4 matrix that applies the rotation encoded by rotation vector <computeroutput>rotation</computeroutput> using the rotation order <computeroutput>rotationOrder</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000082"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use the result of <ref refid="class_usd_geom_xform_common_a_p_i_1addb6cf0eeb8f75316bb5280fc3a1d078" kindref="member">ConvertRotationOrderToOpType()</ref> along with <ref refid="class_usd_geom_xform_op_1a4eba3e8ff2317982f9bf0bccb7626a2b" kindref="member">UsdGeomXformOp::GetOpTransform()</ref> instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="341" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" prot="public" static="no" strong="no">
        <type></type>
        <name>RotationOrder</name>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca237049d3d0bf4cd498ba40a0d2ab6c1e" prot="public">
          <name>RotationOrderXYZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca5ed841b2f3b4903a414c11dbb759c380" prot="public">
          <name>RotationOrderXZY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca0ba57af15149aa2a01287a6f3c3406af" prot="public">
          <name>RotationOrderYXZ</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca45991c45c1cd1c2faaee659b812d1804" prot="public">
          <name>RotationOrderYZX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca20f2a987eff301c69e7019e0a7e30298" prot="public">
          <name>RotationOrderZXY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca9b51ac1b6efc95a30e16c8eac0d9d5f6" prot="public">
          <name>RotationOrderZYX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates the rotation order of the 3-angle Euler rotation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="171" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="171" bodyend="178"/>
      </memberdef>
      <memberdef kind="enum" id="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" prot="public" static="no" strong="no">
        <type></type>
        <name>OpFlags</name>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7ad7f5f4202f8eeb44edacefccd6c4cd84" prot="public">
          <name>OpNone</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7abc3b32720a5f9dc7e4de097e9b066e49" prot="public">
          <name>OpTranslate</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7aa7bc16603407d9694f4d14ce12e88fae" prot="public">
          <name>OpPivot</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7a4978dea0cd4353ef088d28404a8bae27" prot="public">
          <name>OpRotate</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7a9010d8ec6977fd64e9a7a607810f5251" prot="public">
          <name>OpScale</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumerates the categories of ops that can be handled by XformCommonAPI. </para>
        </briefdescription>
        <detaileddescription>
<para>For use with <ref refid="class_usd_geom_xform_common_a_p_i_1afe02745ce2b8d0cdb8a2f13d04b2c1d0" kindref="member">CreateXformOps()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="182" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="182" bodyend="188"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_geom_xform_common_a_p_i_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741ad802a365d69ea33e7b2921b9c4f58ba4" kindref="member">UsdSchemaKind::NonAppliedAPI</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="95" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_geom_xform_common_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="148" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ad5186f63e691b36ace010b87ccce6050" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomXformCommonAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdGeomXformCommonAPI</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_xform_common_a_p_i" kindref="compound">UsdGeomXformCommonAPI</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_geom_xform_common_a_p_i_1a95bcdee90590af82c8356a70512dca78" kindref="member">UsdGeomXformCommonAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="101" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ab81b53f4027010aa8e937c51db3bfebc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomXformCommonAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdGeomXformCommonAPI</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_xform_common_a_p_i" kindref="compound">UsdGeomXformCommonAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_geom_xform_common_a_p_i" kindref="compound">UsdGeomXformCommonAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="109" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1adcd7d40feec97906d079a6d44ea25025" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API</type>
        <definition>virtual USDGEOM_API ~UsdGeomXformCommonAPI</definition>
        <argsstring>()</argsstring>
        <name>~UsdGeomXformCommonAPI</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ae9e0f53ac2057a45501e70bafe8e5429" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetXformVectors</definition>
        <argsstring>(const GfVec3d &amp;translation, const GfVec3f &amp;rotation, const GfVec3f &amp;scale, const GfVec3f &amp;pivot, RotationOrder rotOrder, const UsdTimeCode time) const</argsstring>
        <name>SetXformVectors</name>
        <param>
          <type>const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;</type>
          <declname>translation</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">RotationOrder</ref></type>
          <declname>rotOrder</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Set values for the various component xformOps at a given <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Calling this method will call all of the supported ops to be created, even if they only contain default (identity) values.</para>
<para>To author individual operations selectively, use the Set[OpType]() API.</para>
<para><simplesect kind="note"><para>Once the rotation order has been established for a given xformable (either because of an already defined (and compatible) rotate op or from calling <ref refid="class_usd_geom_xform_common_a_p_i_1ae9e0f53ac2057a45501e70bafe8e5429" kindref="member">SetXformVectors()</ref> or <ref refid="class_usd_geom_xform_common_a_p_i_1ad7a76ddb58be72ac762e9c9e161917ad" kindref="member">SetRotate()</ref>), it cannot be changed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1aa68ad1fa10d34610396f6986c4691161" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool GetXformVectors</definition>
        <argsstring>(GfVec3d *translation, GfVec3f *rotation, GfVec3f *scale, GfVec3f *pivot, RotationOrder *rotOrder, const UsdTimeCode time) const</argsstring>
        <name>GetXformVectors</name>
        <param>
          <type><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> *</type>
          <declname>translation</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">RotationOrder</ref> *</type>
          <declname>rotOrder</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Retrieve values of the various component xformOps at a given <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Identity values are filled in for the component xformOps that don&apos;t exist or don&apos;t have an authored value.</para>
<para><simplesect kind="note"><para>This method works even on prims with an incompatible xform schema, i.e. when the bool operator returns false.</para>
</simplesect>
When the underlying xformable has an incompatible xform schema, it performs a full-on matrix decomposition to XYZ rotation order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="233" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a69aea2094c23fec6abf43341793d5a26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool GetXformVectorsByAccumulation</definition>
        <argsstring>(GfVec3d *translation, GfVec3f *rotation, GfVec3f *scale, GfVec3f *pivot, UsdGeomXformCommonAPI::RotationOrder *rotOrder, const UsdTimeCode time) const</argsstring>
        <name>GetXformVectorsByAccumulation</name>
        <param>
          <type><ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> *</type>
          <declname>translation</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>rotation</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>pivot</declname>
        </param>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">UsdGeomXformCommonAPI::RotationOrder</ref> *</type>
          <declname>rotOrder</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Retrieve values of the various component xformOps at a given <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Identity values are filled in for the component xformOps that don&apos;t exist or don&apos;t have an authored value.</para>
<para>This method allows some additional flexibility for xform schemas that do not strictly adhere to the xformCommonAPI. For incompatible schemas, this method will attempt to reduce the schema into one from which component vectors can be extracted by accumulating xformOp transforms of the common types.</para>
<para><simplesect kind="note"><para>When the underlying xformable has a compatible xform schema, the usual component value extraction method is used instead. When the xform schema is incompatible and it cannot be reduced by accumulating transforms, it performs a full-on matrix decomposition to XYZ rotation order. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a6d16bc5455344e131683d91e14ab62db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool GetResetXformStack</definition>
        <argsstring>() const</argsstring>
        <name>GetResetXformStack</name>
        <briefdescription>
<para>Returns whether the xformable resets the transform stack. </para>
        </briefdescription>
        <detaileddescription>
<para>i.e., does not inherit the parent transformation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="267" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ae40ae43320babff8a254a3a8107a255a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDGEOM_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a95bcdee90590af82c8356a70512dca78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_xform_common_a_p_i" kindref="compound">UsdGeomXformCommonAPI</ref></type>
        <definition>static USDGEOM_API UsdGeomXformCommonAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_geom_xform_common_a_p_i" kindref="compound">UsdGeomXformCommonAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdGeomXformCommonAPI(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1addb6cf0eeb8f75316bb5280fc3a1d078" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref></type>
        <definition>static USDGEOM_API UsdGeomXformOp::Type ConvertRotationOrderToOpType</definition>
        <argsstring>(RotationOrder rotOrder)</argsstring>
        <name>ConvertRotationOrderToOpType</name>
        <param>
          <type><ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">RotationOrder</ref></type>
          <declname>rotOrder</declname>
        </param>
        <briefdescription>
<para>Converts the given <computeroutput>rotOrder</computeroutput> to the corresponding value in the <ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref> enum. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, RotationOrderYZX corresponds to TypeRotateYZX. Raises a coding error if <computeroutput>rotOrder</computeroutput> is not one of the named enumerators of RotationOrder. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a52d1ec00a14829a11bc6a0b2b92136e1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">RotationOrder</ref></type>
        <definition>static USDGEOM_API RotationOrder ConvertOpTypeToRotationOrder</definition>
        <argsstring>(UsdGeomXformOp::Type opType)</argsstring>
        <name>ConvertOpTypeToRotationOrder</name>
        <param>
          <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref></type>
          <declname>opType</declname>
        </param>
        <briefdescription>
<para>Converts the given <computeroutput>opType</computeroutput> to the corresponding value in the <ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">UsdGeomXformCommonAPI::RotationOrder</ref> enum. </para>
        </briefdescription>
        <detaileddescription>
<para>For example, TypeRotateYZX corresponds to RotationOrderYZX. Raises a coding error if <computeroutput>opType</computeroutput> is not convertible to RotationOrder (i.e., if it isn&apos;t a three-axis rotation) and returns the default RotationOrderXYZ instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a57c7417049ef9a71d89fdfa95cfc679e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool CanConvertOpTypeToRotationOrder</definition>
        <argsstring>(UsdGeomXformOp::Type opType)</argsstring>
        <name>CanConvertOpTypeToRotationOrder</name>
        <param>
          <type><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref></type>
          <declname>opType</declname>
        </param>
        <briefdescription>
<para>Whether the given <computeroutput>opType</computeroutput> has a corresponding value in the <ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">UsdGeomXformCommonAPI::RotationOrder</ref> enum (i.e., whether it is a three-axis rotation). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="368" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDGEOM_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="144" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1aff69515f1800a9df4b3b2a443b3b427a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool _IsCompatible</definition>
        <argsstring>() const override</argsstring>
        <name>_IsCompatible</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1ad91204cc9fb92f0306372e074052190f">_IsCompatible</reimplements>
        <briefdescription>
<para>Returns whether the underlying xformable is compatible with the API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="374" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDGEOM_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="152" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_geom_xform_common_a_p_i_1a1e6b9f0da5624212c58019b749c21286" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDGEOM_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="156" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides API for authoring and retrieving a standard set of component transformations which include a scale, a rotation, a scale-rotate pivot and a translation. </para>
    </briefdescription>
    <detaileddescription>
<para>The goal of the API is to enhance component-wise interchange. It achieves this by limiting the set of allowed basic ops and by specifying the order in which they are applied. In addition to the basic set of ops, the &apos;resetXformStack&apos; bit can also be set to indicate whether the underlying xformable resets the parent transformation (i.e. does not inherit it&apos;s parent&apos;s transformation).</para>
<para><simplesect kind="see"><para><ref refid="class_usd_geom_xform_common_a_p_i_1a6d16bc5455344e131683d91e14ab62db" kindref="member">UsdGeomXformCommonAPI::GetResetXformStack()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_geom_xform_common_a_p_i_1ac28ed3e559c5a1c1b5e1b4046ec69995" kindref="member">UsdGeomXformCommonAPI::SetResetXformStack()</ref></para>
</simplesect>
The operator-bool for the class will inform you whether an existing xformable is compatible with this API.</para>
<para>The scale-rotate pivot is represented by a pair of (translate, inverse-translate) xformOps around the scale and rotate operations. The rotation operation can be any of the six allowed Euler angle sets. <simplesect kind="see"><para><ref refid="class_usd_geom_xform_op_1a1d1cfd8ffb84e947f82999c682b666a7" kindref="member">UsdGeomXformOp::Type</ref>.</para>
</simplesect>
The xformOpOrder of an xformable that has all of the supported basic ops is as follows: [&quot;xformOp:translate&quot;, &quot;xformOp:translate:pivot&quot;, &quot;xformOp:rotateXYZ&quot;, &quot;xformOp:scale&quot;, &quot;!invert!xformOp:translate:pivot&quot;].</para>
<para>It is worth noting that all of the ops are optional. For example, an xformable may have only a translate or a rotate. It would still be considered as compatible with this API. Individual <ref refid="class_usd_geom_xform_common_a_p_i_1afe7c6ce49674b038379987aaaf8170c4" kindref="member">SetTranslate()</ref>, <ref refid="class_usd_geom_xform_common_a_p_i_1ad7a76ddb58be72ac762e9c9e161917ad" kindref="member">SetRotate()</ref>, <ref refid="class_usd_geom_xform_common_a_p_i_1a728d50e3320c6d1043ce1ba8ae28845c" kindref="member">SetScale()</ref> and <ref refid="class_usd_geom_xform_common_a_p_i_1a8f6423b5281dd7f6e0d4992d6fc9869f" kindref="member">SetPivot()</ref> methods are provided by this API to allow such sparse authoring. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6570">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6568">
        <label>UsdGeomXformCommonAPI</label>
        <link refid="class_usd_geom_xform_common_a_p_i"/>
        <childnode refid="6569" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6569">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="6570" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6573">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6571">
        <label>UsdGeomXformCommonAPI</label>
        <link refid="class_usd_geom_xform_common_a_p_i"/>
        <childnode refid="6572" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6572">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="6573" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdGeom/xformCommonAPI.h" line="90" column="1" bodyfile="pxr/usd/usdGeom/xformCommonAPI.h" bodystart="89" bodyend="375"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa27e613f624c34d85fc17cbf58956245" prot="protected" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetInstanceName</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aaf34e3836e442b3a04d517febdb69cc3" prot="protected" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetMultipleApplyInstanceNames</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" virt="virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a1e6b9f0da5624212c58019b749c21286" prot="private" virt="virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>_GetType</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1aff69515f1800a9df4b3b2a443b3b427a" prot="protected" virt="virtual"><scope>UsdGeomXformCommonAPI</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a57c7417049ef9a71d89fdfa95cfc679e" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>CanConvertOpTypeToRotationOrder</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a52d1ec00a14829a11bc6a0b2b92136e1" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>ConvertOpTypeToRotationOrder</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1addb6cf0eeb8f75316bb5280fc3a1d078" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>ConvertRotationOrderToOpType</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1afe02745ce2b8d0cdb8a2f13d04b2c1d0" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>CreateXformOps</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7fe26f4075505f0e302695478931f3e0" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>CreateXformOps</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a95bcdee90590af82c8356a70512dca78" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>Get</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a6d16bc5455344e131683d91e14ab62db" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetResetXformStack</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ac5bacc1e5b8385e73be23e44a59ed434" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetRotationTransform</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ae40ae43320babff8a254a3a8107a255a" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1aa68ad1fa10d34610396f6986c4691161" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetXformVectors</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a69aea2094c23fec6abf43341793d5a26" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>GetXformVectorsByAccumulation</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>operator bool</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>OpFlags</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7ad7f5f4202f8eeb44edacefccd6c4cd84" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>OpNone</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7aa7bc16603407d9694f4d14ce12e88fae" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>OpPivot</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7a4978dea0cd4353ef088d28404a8bae27" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>OpRotate</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7a9010d8ec6977fd64e9a7a607810f5251" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>OpScale</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a7d27e39e7296f72c2280257925143bb7abc3b32720a5f9dc7e4de097e9b066e49" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>OpTranslate</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrder</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca237049d3d0bf4cd498ba40a0d2ab6c1e" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrderXYZ</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca5ed841b2f3b4903a414c11dbb759c380" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrderXZY</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca0ba57af15149aa2a01287a6f3c3406af" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrderYXZ</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca45991c45c1cd1c2faaee659b812d1804" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrderYZX</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca20f2a987eff301c69e7019e0a7e30298" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrderZXY</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bca9b51ac1b6efc95a30e16c8eac0d9d5f6" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>RotationOrderZYX</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a8f6423b5281dd7f6e0d4992d6fc9869f" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>SetPivot</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ac28ed3e559c5a1c1b5e1b4046ec69995" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>SetResetXformStack</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ad7a76ddb58be72ac762e9c9e161917ad" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>SetRotate</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1a728d50e3320c6d1043ce1ba8ae28845c" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>SetScale</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1afe7c6ce49674b038379987aaaf8170c4" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>SetTranslate</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ae9e0f53ac2057a45501e70bafe8e5429" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>SetXformVectors</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a693760be7357b341ca92cae42af89a2a" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa02eade67d6ca4c0d58fe3b7e5a4cc9a" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ae1aaced053a4cc13c21b444b27130c75" prot="protected" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ac9df31df96c3346f55ba31be7472f106" prot="protected" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ad5186f63e691b36ace010b87ccce6050" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdGeomXformCommonAPI</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1ab81b53f4027010aa8e937c51db3bfebc" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdGeomXformCommonAPI</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdGeomXformCommonAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a426f2a53141cc3eefa43fce755f83108" prot="public" virt="pure-virtual"><scope>UsdGeomXformCommonAPI</scope><name>~UsdAPISchemaBase</name></member>
      <member refid="class_usd_geom_xform_common_a_p_i_1adcd7d40feec97906d079a6d44ea25025" prot="public" virt="virtual"><scope>UsdGeomXformCommonAPI</scope><name>~UsdGeomXformCommonAPI</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdGeomXformCommonAPI</scope><name>~UsdSchemaBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
