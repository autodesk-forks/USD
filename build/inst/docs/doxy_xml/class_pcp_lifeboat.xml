<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_lifeboat" kind="class" language="C++" prot="public">
    <compoundname>PcpLifeboat</compoundname>
    <includes refid="changes_8h" local="no">changes.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pcp_lifeboat_1a58282dc6c56dfbd4b225e5d10f4d16ea" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="class_tf_ref_ptr" kindref="compound">SdfLayerRefPtr</ref> &gt;</type>
        <definition>std::set&lt;SdfLayerRefPtr&gt; _layers</definition>
        <argsstring></argsstring>
        <name>_layers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="178" column="1" bodyfile="pxr/usd/pcp/changes.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_lifeboat_1aa59e3c272695e495c41844bf7ea151c1" prot="private" static="no" mutable="no">
        <type>std::set&lt; PcpLayerStackRefPtr &gt;</type>
        <definition>std::set&lt;PcpLayerStackRefPtr&gt; _layerStacks</definition>
        <argsstring></argsstring>
        <name>_layerStacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="179" column="1" bodyfile="pxr/usd/pcp/changes.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_lifeboat_1a9cd8ced825147219b46aa80a9d14cb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PcpLifeboat</definition>
        <argsstring>()</argsstring>
        <name>PcpLifeboat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_lifeboat_1aefc81d25a974449f56d2ba0031d9cf35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~PcpLifeboat</definition>
        <argsstring>()</argsstring>
        <name>~PcpLifeboat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_lifeboat_1ac447b2f1a32b78454af6aaa88f1445f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Retain</definition>
        <argsstring>(const SdfLayerRefPtr &amp;layer)</argsstring>
        <name>Retain</name>
        <param>
          <type>const <ref refid="class_tf_ref_ptr" kindref="compound">SdfLayerRefPtr</ref> &amp;</type>
          <declname>layer</declname>
        </param>
        <briefdescription>
<para>Ensure that <computeroutput>layer</computeroutput> exists until this object is destroyed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_lifeboat_1a17e47a93666fbc5d8a7d3a736dd5a7c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Retain</definition>
        <argsstring>(const PcpLayerStackRefPtr &amp;layerStack)</argsstring>
        <name>Retain</name>
        <param>
          <type>const PcpLayerStackRefPtr &amp;</type>
          <declname>layerStack</declname>
        </param>
        <briefdescription>
<para>Ensure that <computeroutput>layerStack</computeroutput> exists until this object is destroyed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_lifeboat_1a8100375fc4bc80a3443d0fffefa11251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::set&lt; PcpLayerStackRefPtr &gt; &amp;</type>
        <definition>const std::set&lt;PcpLayerStackRefPtr&gt;&amp; GetLayerStacks</definition>
        <argsstring>() const</argsstring>
        <name>GetLayerStacks</name>
        <briefdescription>
<para>Returns reference to the set of layer stacks currently being held in the lifeboat. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_lifeboat_1a1b57a6583d4b578c84937b220bb54a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Swap</definition>
        <argsstring>(PcpLifeboat &amp;other)</argsstring>
        <name>Swap</name>
        <param>
          <type><ref refid="class_pcp_lifeboat" kindref="compound">PcpLifeboat</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swap the contents of this and <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/changes.h" line="175" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Structure used to temporarily retain layers and layerStacks within a code block. </para>
    </briefdescription>
    <detaileddescription>
<para>Analogous to the autorelease pool in obj-c. </para>
    </detaileddescription>
    <location file="pxr/usd/pcp/changes.h" line="159" column="1" bodyfile="pxr/usd/pcp/changes.h" bodystart="159" bodyend="180"/>
    <listofallmembers>
      <member refid="class_pcp_lifeboat_1a58282dc6c56dfbd4b225e5d10f4d16ea" prot="private" virt="non-virtual"><scope>PcpLifeboat</scope><name>_layers</name></member>
      <member refid="class_pcp_lifeboat_1aa59e3c272695e495c41844bf7ea151c1" prot="private" virt="non-virtual"><scope>PcpLifeboat</scope><name>_layerStacks</name></member>
      <member refid="class_pcp_lifeboat_1a8100375fc4bc80a3443d0fffefa11251" prot="public" virt="non-virtual"><scope>PcpLifeboat</scope><name>GetLayerStacks</name></member>
      <member refid="class_pcp_lifeboat_1a9cd8ced825147219b46aa80a9d14cb0e" prot="public" virt="non-virtual"><scope>PcpLifeboat</scope><name>PcpLifeboat</name></member>
      <member refid="class_pcp_lifeboat_1ac447b2f1a32b78454af6aaa88f1445f5" prot="public" virt="non-virtual"><scope>PcpLifeboat</scope><name>Retain</name></member>
      <member refid="class_pcp_lifeboat_1a17e47a93666fbc5d8a7d3a736dd5a7c6" prot="public" virt="non-virtual"><scope>PcpLifeboat</scope><name>Retain</name></member>
      <member refid="class_pcp_lifeboat_1a1b57a6583d4b578c84937b220bb54a8b" prot="public" virt="non-virtual"><scope>PcpLifeboat</scope><name>Swap</name></member>
      <member refid="class_pcp_lifeboat_1aefc81d25a974449f56d2ba0031d9cf35" prot="public" virt="non-virtual"><scope>PcpLifeboat</scope><name>~PcpLifeboat</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
