<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_error_transport" kind="class" language="C++" prot="public">
    <compoundname>TfErrorTransport</compoundname>
    <includes refid="error_transport_8h" local="no">errorTransport.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_error_transport_1a65a06b4f95a5826751077dc8394252fe" prot="public" static="no">
        <type>TfDiagnosticMgr::ErrorList</type>
        <definition>typedef TfDiagnosticMgr::ErrorList ErrorList</definition>
        <argsstring></argsstring>
        <name>ErrorList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="49" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_error_transport_1abf35913dc33f1379907a1caa1ed1613a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TfErrorMark</definition>
        <argsstring></argsstring>
        <name>TfErrorMark</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="73" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_error_transport_1a7ae59c47b56b9cd452f441ff67928fd7" prot="private" static="no" mutable="no">
        <type>ErrorList</type>
        <definition>ErrorList _errorList</definition>
        <argsstring></argsstring>
        <name>_errorList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="84" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_error_transport_1af6d2c5d6f89a31f137e4a72ee91ddc80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfErrorTransport</definition>
        <argsstring>()</argsstring>
        <name>TfErrorTransport</name>
        <briefdescription>
<para>Construct an empty <ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="52" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_error_transport_1a26bb434223a472d5c8abb371db0d88ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Post</definition>
        <argsstring>()</argsstring>
        <name>Post</name>
        <briefdescription>
<para>Post all contained errors to the current thread&apos;s error list, leaving this <ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref> empty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="56" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_error_transport_1a8e12342fc420701fbffd97025421575a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Return true if this <ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref> contains no errors, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="63" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_error_transport_1a51d78688520a3778e0bbd5b9d51e2147" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(TfErrorTransport &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swap this <ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref>&apos;s content with <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This provides a lightweight way to move the contents of one <ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref> to another. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="68" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="68" bodyend="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_error_transport_1ad2ddd1d943a5fa3f47e8b820f241dbc0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfErrorTransport</definition>
        <argsstring>(ErrorList &amp;src, ErrorList::iterator first, ErrorList::iterator last)</argsstring>
        <name>TfErrorTransport</name>
        <param>
          <type>ErrorList &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>ErrorList::iterator</type>
          <declname>first</declname>
        </param>
        <param>
          <type>ErrorList::iterator</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="75" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_error_transport_1a6504dda21f29383cca16162a7aa93f14" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void _PostImpl</definition>
        <argsstring>()</argsstring>
        <name>_PostImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorTransport.h" line="82" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A facility for transporting errors from thread to thread. </para>
    </briefdescription>
    <detaileddescription>
<para>Typical use is to create a <ref refid="class_tf_error_mark" kindref="compound">TfErrorMark</ref> in the thread that is the error source (e.g. the child thread), then call <ref refid="class_tf_error_mark_1a8cb520487e1a12b3c38a752d90b34f4a" kindref="member">TfErrorMark::Transport()</ref> or <ref refid="class_tf_error_mark_1a692adf55b3f11cce02f2bba2c73ee56a" kindref="member">TfErrorMark::TransportTo()</ref> to lift generated errors out into a <ref refid="class_tf_error_transport" kindref="compound">TfErrorTransport</ref> object. Later the thread that wants to sink those errors (e.g. the parent thread) invokes <ref refid="class_tf_error_transport_1a26bb434223a472d5c8abb371db0d88ed" kindref="member">TfErrorTransport::Post()</ref> to post all contained errors to its own thread&apos;s error list. </para>
    </detaileddescription>
    <location file="pxr/base/tf/errorTransport.h" line="47" column="1" bodyfile="pxr/base/tf/errorTransport.h" bodystart="46" bodyend="85"/>
    <listofallmembers>
      <member refid="class_tf_error_transport_1a7ae59c47b56b9cd452f441ff67928fd7" prot="private" virt="non-virtual"><scope>TfErrorTransport</scope><name>_errorList</name></member>
      <member refid="class_tf_error_transport_1a6504dda21f29383cca16162a7aa93f14" prot="private" virt="non-virtual"><scope>TfErrorTransport</scope><name>_PostImpl</name></member>
      <member refid="class_tf_error_transport_1a65a06b4f95a5826751077dc8394252fe" prot="public" virt="non-virtual"><scope>TfErrorTransport</scope><name>ErrorList</name></member>
      <member refid="class_tf_error_transport_1a8e12342fc420701fbffd97025421575a" prot="public" virt="non-virtual"><scope>TfErrorTransport</scope><name>IsEmpty</name></member>
      <member refid="class_tf_error_transport_1a26bb434223a472d5c8abb371db0d88ed" prot="public" virt="non-virtual"><scope>TfErrorTransport</scope><name>Post</name></member>
      <member refid="class_tf_error_transport_1a51d78688520a3778e0bbd5b9d51e2147" prot="public" virt="non-virtual"><scope>TfErrorTransport</scope><name>swap</name></member>
      <member refid="class_tf_error_transport_1abf35913dc33f1379907a1caa1ed1613a" prot="private" virt="non-virtual"><scope>TfErrorTransport</scope><name>TfErrorMark</name></member>
      <member refid="class_tf_error_transport_1af6d2c5d6f89a31f137e4a72ee91ddc80" prot="public" virt="non-virtual"><scope>TfErrorTransport</scope><name>TfErrorTransport</name></member>
      <member refid="class_tf_error_transport_1ad2ddd1d943a5fa3f47e8b820f241dbc0" prot="private" virt="non-virtual"><scope>TfErrorTransport</scope><name>TfErrorTransport</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
