<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_utils_time_code_range_1_1const__iterator" kind="class" language="C++" prot="public">
    <compoundname>UsdUtilsTimeCodeRange::const_iterator</compoundname>
    <includes refid="time_code_range_8h" local="no">timeCodeRange.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_usd_utils_time_code_range_1_1const__iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="83" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_utils_time_code_range_1_1const__iterator_1aa8143951d4e6ee68aa216237c9f81b94" prot="public" static="no">
        <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
        <definition>using value_type =  UsdTimeCode</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="84" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_utils_time_code_range_1_1const__iterator_1a5149d52dfbb55739cb906f3f4a44ced8" prot="public" static="no">
        <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> &amp;</type>
        <definition>using reference =  const UsdTimeCode&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="85" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_utils_time_code_range_1_1const__iterator_1a8dd4b8584dd0e8b695cee9bd23c5a120" prot="public" static="no">
        <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> *</type>
        <definition>using pointer =  const UsdTimeCode*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="86" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_utils_time_code_range_1_1const__iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="87" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_utils_time_code_range_1_1const__iterator_1ac78369c30c5957b12cdeb902c53dc385" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdUtilsTimeCodeRange</definition>
        <argsstring></argsstring>
        <name>UsdUtilsTimeCodeRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="137" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_utils_time_code_range_1_1const__iterator_1ad877c52b2e7cd8169e21b5fbf4defee1" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_usd_utils_time_code_range" kindref="compound">UsdUtilsTimeCodeRange</ref> *</type>
        <definition>const UsdUtilsTimeCodeRange* _timeCodeRange</definition>
        <argsstring></argsstring>
        <name>_timeCodeRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="174" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_utils_time_code_range_1_1const__iterator_1a0f5f31afdb90ec71790be48a5dff3ae0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _currStep</definition>
        <argsstring></argsstring>
        <name>_currStep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="175" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_utils_time_code_range_1_1const__iterator_1aa18c77122e1bdf38537304be90d0a35f" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _maxSteps</definition>
        <argsstring></argsstring>
        <name>_maxSteps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="176" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_utils_time_code_range_1_1const__iterator_1ab2df424028bd807be83432e13126276c" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
        <definition>UsdTimeCode _currTimeCode</definition>
        <argsstring></argsstring>
        <name>_currTimeCode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="177" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1a6ee9dc5776b24dedfd849715bcc3bebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_time_code" kindref="compound">reference</ref></type>
        <definition>reference operator *</definition>
        <argsstring>()</argsstring>
        <name>operator *</name>
        <briefdescription>
<para>Returns the <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> referenced by this iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="90" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1a170c65e2b49f7a77927598d053661ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_time_code" kindref="compound">pointer</ref></type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Returns a pointer to the <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> referenced by this iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="95" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1ad5a73e69afab11500e7c48e766bc869e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_utils_time_code_range_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
        <definition>const_iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Pre-increment operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Advances this iterator to the next <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> in the range.</para>
<para>This iterator is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="103" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="103" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1a644114c330bd0e27ee08a7e1087beaef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_utils_time_code_range_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-increment operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Advances this iterator to the next <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> in the range.</para>
<para>A copy of this iterator prior to the increment is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="119" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1aa0d0e755b4e77d2fd9dbb17d4f72255c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_utils_time_code_range_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if this iterator is equivalent to <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="126" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1afd4fe054b435cd231a06114dbc9f7135" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator !=</definition>
        <argsstring>(const const_iterator &amp;other) const</argsstring>
        <name>operator !=</name>
        <param>
          <type>const <ref refid="class_usd_utils_time_code_range_1_1const__iterator" kindref="compound">const_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if this iterator is not equivalent to <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="132" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="132" bodyend="134"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1a9b3b9c8df8a4d90c89fce86339e3127c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>const_iterator</definition>
        <argsstring>(const UsdUtilsTimeCodeRange *timeCodeRange)</argsstring>
        <name>const_iterator</name>
        <param>
          <type>const <ref refid="class_usd_utils_time_code_range" kindref="compound">UsdUtilsTimeCodeRange</ref> *</type>
          <declname>timeCodeRange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="139" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="139" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_time_code_range_1_1const__iterator_1ac088492eb9caffa476aa6593a04a80dd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _InvalidateIfExhausted</definition>
        <argsstring>()</argsstring>
        <name>_InvalidateIfExhausted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/timeCodeRange.h" line="158" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="158" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A forward iterator into a <ref refid="class_usd_utils_time_code_range" kindref="compound">UsdUtilsTimeCodeRange</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usdUtils/timeCodeRange.h" line="81" column="1" bodyfile="pxr/usd/usdUtils/timeCodeRange.h" bodystart="80" bodyend="178"/>
    <listofallmembers>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a0f5f31afdb90ec71790be48a5dff3ae0" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>_currStep</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1ab2df424028bd807be83432e13126276c" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>_currTimeCode</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1ac088492eb9caffa476aa6593a04a80dd" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>_InvalidateIfExhausted</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1aa18c77122e1bdf38537304be90d0a35f" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>_maxSteps</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1ad877c52b2e7cd8169e21b5fbf4defee1" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>_timeCodeRange</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a9b3b9c8df8a4d90c89fce86339e3127c" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>const_iterator</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>difference_type</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>iterator_category</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1afd4fe054b435cd231a06114dbc9f7135" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>operator !=</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a6ee9dc5776b24dedfd849715bcc3bebc" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>operator *</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1ad5a73e69afab11500e7c48e766bc869e" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>operator++</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a644114c330bd0e27ee08a7e1087beaef" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>operator++</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a170c65e2b49f7a77927598d053661ddb" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1aa0d0e755b4e77d2fd9dbb17d4f72255c" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>operator==</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a8dd4b8584dd0e8b695cee9bd23c5a120" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>pointer</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1a5149d52dfbb55739cb906f3f4a44ced8" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>reference</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1ac78369c30c5957b12cdeb902c53dc385" prot="private" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>UsdUtilsTimeCodeRange</name></member>
      <member refid="class_usd_utils_time_code_range_1_1const__iterator_1aa8143951d4e6ee68aa216237c9f81b94" prot="public" virt="non-virtual"><scope>UsdUtilsTimeCodeRange::const_iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
