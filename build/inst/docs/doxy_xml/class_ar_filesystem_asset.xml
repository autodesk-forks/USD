<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_ar_filesystem_asset" kind="class" language="C++" prot="public">
    <compoundname>ArFilesystemAsset</compoundname>
    <basecompoundref refid="class_ar_asset" prot="public" virt="non-virtual">ArAsset</basecompoundref>
    <includes refid="filesystem_asset_8h" local="no">filesystemAsset.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ar_filesystem_asset_1ab6ff60a43f6b3e9326c5079f40d27065" prot="private" static="no" mutable="no">
        <type>FILE *</type>
        <definition>FILE* _file</definition>
        <argsstring></argsstring>
        <name>_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="92" column="1" bodyfile="pxr/usd/ar/filesystemAsset.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_ar_filesystem_asset_1a6cda64f080c508afa6a9c634df1d882e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API std::shared_ptr&lt; <ref refid="class_ar_filesystem_asset" kindref="compound">ArFilesystemAsset</ref> &gt;</type>
        <definition>static AR_API std::shared_ptr&lt;ArFilesystemAsset&gt; Open</definition>
        <argsstring>(const ArResolvedPath &amp;resolvedPath)</argsstring>
        <name>Open</name>
        <param>
          <type>const <ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref> &amp;</type>
          <declname>resolvedPath</declname>
        </param>
        <briefdescription>
<para>Constructs a new <ref refid="class_ar_filesystem_asset" kindref="compound">ArFilesystemAsset</ref> for the file at <computeroutput>resolvedPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a null pointer if the file could not be opened. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_asset_1ae4c29c531b61763a26f18c68189f9611" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref></type>
        <definition>static AR_API ArTimestamp GetModificationTimestamp</definition>
        <argsstring>(const ArResolvedPath &amp;resolvedPath)</argsstring>
        <name>GetModificationTimestamp</name>
        <param>
          <type>const <ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref> &amp;</type>
          <declname>resolvedPath</declname>
        </param>
        <briefdescription>
<para>Returns an <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> holding the mtime of the file at <computeroutput>resolvedPath</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns an invalid <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> if the mtime could not be retrieved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ar_filesystem_asset_1acf68675942e73735d0512a785e03c811" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>AR_API</type>
        <definition>AR_API ArFilesystemAsset</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>ArFilesystemAsset</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>Constructs an <ref refid="class_ar_filesystem_asset" kindref="compound">ArFilesystemAsset</ref> for the given <computeroutput>file</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="class_ar_filesystem_asset" kindref="compound">ArFilesystemAsset</ref> object takes ownership of <computeroutput>file</computeroutput> and will close the file handle on destruction. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_asset_1a415176d9b9aad9c497416ad1c7812d1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API</type>
        <definition>AR_API ~ArFilesystemAsset</definition>
        <argsstring>()</argsstring>
        <name>~ArFilesystemAsset</name>
        <briefdescription>
<para>Closes the file owned by this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_asset_1a4c75b9df7adc569f713fb6db016ba788" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>AR_API size_t</type>
        <definition>virtual AR_API size_t GetSize</definition>
        <argsstring>() const override</argsstring>
        <name>GetSize</name>
        <reimplements refid="class_ar_asset_1a45d4833aaf393870cac659c7a2ba586f">GetSize</reimplements>
        <briefdescription>
<para>Returns the size of the file held by this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_asset_1aaf4934112f61e138229da8d7e1732a2c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>AR_API std::shared_ptr&lt; const char &gt;</type>
        <definition>virtual AR_API std::shared_ptr&lt;const char&gt; GetBuffer</definition>
        <argsstring>() const override</argsstring>
        <name>GetBuffer</name>
        <reimplements refid="class_ar_asset_1a0e56e6a4e2d1e605f6042b9ebf0d5824">GetBuffer</reimplements>
        <briefdescription>
<para>Creates a read-only memory map for the file held by this object and returns a pointer to the start of the mapped contents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_asset_1ade9a4b94cfc8aa308ca2cd06e910dc13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>AR_API size_t</type>
        <definition>virtual AR_API size_t Read</definition>
        <argsstring>(void *buffer, size_t count, size_t offset) const override</argsstring>
        <name>Read</name>
        <reimplements refid="class_ar_asset_1abc073195b37726763b29e298ecbac49c">Read</reimplements>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Reads <computeroutput>count</computeroutput> bytes from the file held by this object at the given <computeroutput>offset</computeroutput> into <computeroutput>buffer</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_filesystem_asset_1ac4aee20f7469537abbbb706e6c7920c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>AR_API std::pair&lt; FILE *, size_t &gt;</type>
        <definition>virtual AR_API std::pair&lt;FILE*, size_t&gt; GetFileUnsafe</definition>
        <argsstring>() const override</argsstring>
        <name>GetFileUnsafe</name>
        <reimplements refid="class_ar_asset_1a8742ef428d57cd5e896374ffc86aeeb1">GetFileUnsafe</reimplements>
        <briefdescription>
<para>Returns the FILE* handle this object was created with and an offset of 0, since the asset&apos;s contents are located at the beginning of the file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/filesystemAsset.h" line="89" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_ar_asset" kindref="compound">ArAsset</ref> implementation for asset represented by a file on a filesystem. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="710">
        <label>ArAsset</label>
        <link refid="class_ar_asset"/>
      </node>
      <node id="709">
        <label>ArFilesystemAsset</label>
        <link refid="class_ar_filesystem_asset"/>
        <childnode refid="710" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="712">
        <label>ArAsset</label>
        <link refid="class_ar_asset"/>
      </node>
      <node id="711">
        <label>ArFilesystemAsset</label>
        <link refid="class_ar_filesystem_asset"/>
        <childnode refid="712" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/ar/filesystemAsset.h" line="46" column="1" bodyfile="pxr/usd/ar/filesystemAsset.h" bodystart="44" bodyend="93"/>
    <listofallmembers>
      <member refid="class_ar_filesystem_asset_1ab6ff60a43f6b3e9326c5079f40d27065" prot="private" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>_file</name></member>
      <member refid="class_ar_asset_1a30b108616ea5f8f1f7e6ea587ba25341" prot="public" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>ArAsset</name></member>
      <member refid="class_ar_asset_1ace3fa46a458e5a3ce8a4562cc9617d86" prot="protected" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>ArAsset</name></member>
      <member refid="class_ar_filesystem_asset_1acf68675942e73735d0512a785e03c811" prot="public" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>ArFilesystemAsset</name></member>
      <member refid="class_ar_filesystem_asset_1aaf4934112f61e138229da8d7e1732a2c" prot="public" virt="virtual"><scope>ArFilesystemAsset</scope><name>GetBuffer</name></member>
      <member refid="class_ar_asset_1af177e038784be42c9c086177e0961266" prot="public" virt="virtual"><scope>ArFilesystemAsset</scope><name>GetDetachedAsset</name></member>
      <member refid="class_ar_filesystem_asset_1ac4aee20f7469537abbbb706e6c7920c3" prot="public" virt="virtual"><scope>ArFilesystemAsset</scope><name>GetFileUnsafe</name></member>
      <member refid="class_ar_filesystem_asset_1ae4c29c531b61763a26f18c68189f9611" prot="public" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>GetModificationTimestamp</name></member>
      <member refid="class_ar_filesystem_asset_1a4c75b9df7adc569f713fb6db016ba788" prot="public" virt="virtual"><scope>ArFilesystemAsset</scope><name>GetSize</name></member>
      <member refid="class_ar_filesystem_asset_1a6cda64f080c508afa6a9c634df1d882e" prot="public" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>Open</name></member>
      <member refid="class_ar_asset_1ac085a311281b960a466f432f5784b1fc" prot="public" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>operator=</name></member>
      <member refid="class_ar_filesystem_asset_1ade9a4b94cfc8aa308ca2cd06e910dc13" prot="public" virt="virtual"><scope>ArFilesystemAsset</scope><name>Read</name></member>
      <member refid="class_ar_asset_1a411ef6f441b58bfa88fb66147dda562f" prot="public" virt="virtual"><scope>ArFilesystemAsset</scope><name>~ArAsset</name></member>
      <member refid="class_ar_filesystem_asset_1a415176d9b9aad9c497416ad1c7812d1e" prot="public" virt="non-virtual"><scope>ArFilesystemAsset</scope><name>~ArFilesystemAsset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
