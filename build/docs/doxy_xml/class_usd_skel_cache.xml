<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_cache" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelCache</compoundname>
    <includes refid="usd_skel_2cache_8h" local="no">cache.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_skel_cache_1a6d692d22abb89ae5873f4666bf0c71a9" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; class UsdSkel_CacheImpl &gt;</type>
        <definition>std::shared_ptr&lt;class UsdSkel_CacheImpl&gt; _impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="126" column="1" bodyfile="pxr/usd/usdSkel/cache.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_skel_cache_1a40f1592e602e0bf962fb4433ff7d26ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSkelAnimQuery</definition>
        <argsstring></argsstring>
        <name>UsdSkelAnimQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="128" column="1" bodyfile="pxr/usd/usdSkel/cache.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_usd_skel_cache_1a491c3a02c28398bbb862506f270c5b44" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSkelSkeletonQuery</definition>
        <argsstring></argsstring>
        <name>UsdSkelSkeletonQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="129" column="1" bodyfile="pxr/usd/usdSkel/cache.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_cache_1ad95ee64562eac78f7811c538db2310e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelCache</definition>
        <argsstring>()</argsstring>
        <name>UsdSkelCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1a8f790cf2c926e68c3be83c217a3e13a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API void</type>
        <definition>USDSKEL_API void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool Populate</definition>
        <argsstring>(const UsdSkelRoot &amp;root, Usd_PrimFlagsPredicate predicate) const</argsstring>
        <name>Populate</name>
        <param>
          <type>const <ref refid="class_usd_skel_root" kindref="compound">UsdSkelRoot</ref> &amp;</type>
          <declname>root</declname>
        </param>
        <param>
          <type>Usd_PrimFlagsPredicate</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>Populate the cache for the skeletal data beneath prim <computeroutput>root</computeroutput>, as traversed using <computeroutput>predicate</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Population resolves inherited skel bindings set using the <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>, making resolved bindings available through <ref refid="class_usd_skel_cache_1a182cd014ee50683dc1774e1b2a1d0db1" kindref="member">GetSkinningQuery()</ref>, <ref refid="class_usd_skel_cache_1a40eaa8fe8550ccc00b96258f5dfd4876" kindref="member">ComputeSkelBinding()</ref> and <ref refid="class_usd_skel_cache_1a4637404879063e53d1c0187b2d336d06" kindref="member">ComputeSkelBindings()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1aaef141286813bfeb6998a8f0ac08b43b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref></type>
        <definition>USDSKEL_API UsdSkelSkeletonQuery GetSkelQuery</definition>
        <argsstring>(const UsdSkelSkeleton &amp;skel) const</argsstring>
        <name>GetSkelQuery</name>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton" kindref="compound">UsdSkelSkeleton</ref> &amp;</type>
          <declname>skel</declname>
        </param>
        <briefdescription>
<para>Get a skel query for computing properties of <computeroutput>skel</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This does not require <ref refid="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" kindref="member">Populate()</ref> to be called on the cache. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1a75a4c20ac4f44bc3be1792cc89d4d5e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref></type>
        <definition>USDSKEL_API UsdSkelAnimQuery GetAnimQuery</definition>
        <argsstring>(const UsdSkelAnimation &amp;anim) const</argsstring>
        <name>GetAnimQuery</name>
        <param>
          <type>const <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref> &amp;</type>
          <declname>anim</declname>
        </param>
        <briefdescription>
<para>Get an anim query corresponding to <computeroutput>anim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This does not require <ref refid="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" kindref="member">Populate()</ref> to be called on the cache. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1a1834c65bd4252488718234266726531f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref></type>
        <definition>USDSKEL_API UsdSkelAnimQuery GetAnimQuery</definition>
        <argsstring>(const UsdPrim &amp;prim) const</argsstring>
        <name>GetAnimQuery</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000120"><xreftitle>Deprecated</xreftitle><xrefdescription></xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1a182cd014ee50683dc1774e1b2a1d0db1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_skinning_query" kindref="compound">UsdSkelSkinningQuery</ref></type>
        <definition>USDSKEL_API UsdSkelSkinningQuery GetSkinningQuery</definition>
        <argsstring>(const UsdPrim &amp;prim) const</argsstring>
        <name>GetSkinningQuery</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Get a skinning query at <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Skinning queries are defined at any skinnable prims (I.e., boundable prims with fully defined joint influences).</para>
<para>The caller must first <ref refid="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" kindref="member">Populate()</ref> the cache with the skel root containing <computeroutput>prim</computeroutput>, with a predicate that will visit <computeroutput>prim</computeroutput>, in order for a skinning query to be discoverable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1a4637404879063e53d1c0187b2d336d06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeSkelBindings</definition>
        <argsstring>(const UsdSkelRoot &amp;skelRoot, std::vector&lt; UsdSkelBinding &gt; *bindings, Usd_PrimFlagsPredicate predicate) const</argsstring>
        <name>ComputeSkelBindings</name>
        <param>
          <type>const <ref refid="class_usd_skel_root" kindref="compound">UsdSkelRoot</ref> &amp;</type>
          <declname>skelRoot</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_usd_skel_binding" kindref="compound">UsdSkelBinding</ref> &gt; *</type>
          <declname>bindings</declname>
        </param>
        <param>
          <type>Usd_PrimFlagsPredicate</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>Compute the set of skeleton bindings beneath <computeroutput>skelRoot</computeroutput>, as discovered through a traversal using <computeroutput>predicate</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Skinnable prims are only discoverable by this method if <ref refid="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" kindref="member">Populate()</ref> has already been called for <computeroutput>skelRoot</computeroutput>, with an equivalent predicate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_cache_1a40eaa8fe8550ccc00b96258f5dfd4876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeSkelBinding</definition>
        <argsstring>(const UsdSkelRoot &amp;skelRoot, const UsdSkelSkeleton &amp;skel, UsdSkelBinding *binding, Usd_PrimFlagsPredicate predicate) const</argsstring>
        <name>ComputeSkelBinding</name>
        <param>
          <type>const <ref refid="class_usd_skel_root" kindref="compound">UsdSkelRoot</ref> &amp;</type>
          <declname>skelRoot</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_skel_skeleton" kindref="compound">UsdSkelSkeleton</ref> &amp;</type>
          <declname>skel</declname>
        </param>
        <param>
          <type><ref refid="class_usd_skel_binding" kindref="compound">UsdSkelBinding</ref> *</type>
          <declname>binding</declname>
        </param>
        <param>
          <type>Usd_PrimFlagsPredicate</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>Compute the bindings corresponding to a single skeleton, bound beneath <computeroutput>skelRoot</computeroutput>, as discovered through a traversal using <computeroutput>predicate</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Skinnable prims are only discoverable by this method if <ref refid="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" kindref="member">Populate()</ref> has already been called for <computeroutput>skelRoot</computeroutput>, with an equivalent predicate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/cache.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thread-safe cache for accessing query objects for evaluating skeletal data. </para>
    </briefdescription>
    <detaileddescription>
<para>This provides caching of major structural components, such as skeletal topology. In a streaming context, this cache is intended to persist. </para>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/cache.h" line="58" column="1" bodyfile="pxr/usd/usdSkel/cache.h" bodystart="57" bodyend="130"/>
    <listofallmembers>
      <member refid="class_usd_skel_cache_1a6d692d22abb89ae5873f4666bf0c71a9" prot="private" virt="non-virtual"><scope>UsdSkelCache</scope><name>_impl</name></member>
      <member refid="class_usd_skel_cache_1a8f790cf2c926e68c3be83c217a3e13a5" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>Clear</name></member>
      <member refid="class_usd_skel_cache_1a40eaa8fe8550ccc00b96258f5dfd4876" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>ComputeSkelBinding</name></member>
      <member refid="class_usd_skel_cache_1a4637404879063e53d1c0187b2d336d06" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>ComputeSkelBindings</name></member>
      <member refid="class_usd_skel_cache_1a75a4c20ac4f44bc3be1792cc89d4d5e6" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>GetAnimQuery</name></member>
      <member refid="class_usd_skel_cache_1a1834c65bd4252488718234266726531f" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>GetAnimQuery</name></member>
      <member refid="class_usd_skel_cache_1aaef141286813bfeb6998a8f0ac08b43b" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>GetSkelQuery</name></member>
      <member refid="class_usd_skel_cache_1a182cd014ee50683dc1774e1b2a1d0db1" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>GetSkinningQuery</name></member>
      <member refid="class_usd_skel_cache_1abe0fe7ed06f122fda9ffd7924c231d3f" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>Populate</name></member>
      <member refid="class_usd_skel_cache_1a40f1592e602e0bf962fb4433ff7d26ea" prot="private" virt="non-virtual"><scope>UsdSkelCache</scope><name>UsdSkelAnimQuery</name></member>
      <member refid="class_usd_skel_cache_1ad95ee64562eac78f7811c538db2310e8" prot="public" virt="non-virtual"><scope>UsdSkelCache</scope><name>UsdSkelCache</name></member>
      <member refid="class_usd_skel_cache_1a491c3a02c28398bbb862506f270c5b44" prot="private" virt="non-virtual"><scope>UsdSkelCache</scope><name>UsdSkelSkeletonQuery</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
