<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="dense_hash_set_8h" kind="file" language="C++">
    <compoundname>denseHashSet.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="attributes_8h" local="yes">pxr/base/arch/attributes.h</includes>
    <includes refid="hashmap_8h" local="yes">pxr/base/tf/hashmap.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">vector</includes>
    <includedby refid="dependency_forwarding_scene_index_8h" local="yes">pxr/imaging/hd/dependencyForwardingSceneIndex.h</includedby>
    <includedby refid="scene_index_8h" local="yes">pxr/imaging/hd/sceneIndex.h</includedby>
    <includedby refid="generative_procedural_resolving_scene_index_8h" local="yes">pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h</includedby>
    <includedby refid="delegate_8h" local="yes">pxr/usdImaging/usdImaging/delegate.h</includedby>
    <incdepgraph>
      <node id="54687">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="54683" relation="include">
        </childnode>
        <childnode refid="54686" relation="include">
        </childnode>
        <childnode refid="54688" relation="include">
        </childnode>
      </node>
      <node id="54685">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="54686" relation="include">
        </childnode>
      </node>
      <node id="54684">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="54683" relation="include">
        </childnode>
        <childnode refid="54685" relation="include">
        </childnode>
      </node>
      <node id="54683">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="54690">
        <label>vector</label>
      </node>
      <node id="54682">
        <label>pxr/base/tf/denseHashSet.h</label>
        <link refid="dense_hash_set_8h"/>
        <childnode refid="54683" relation="include">
        </childnode>
        <childnode refid="54684" relation="include">
        </childnode>
        <childnode refid="54687" relation="include">
        </childnode>
        <childnode refid="54689" relation="include">
        </childnode>
        <childnode refid="54690" relation="include">
        </childnode>
      </node>
      <node id="54686">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="54688">
        <label>unordered_map</label>
      </node>
      <node id="54689">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="54741">
        <label>pxr/imaging/hdx/renderSetupTask.h</label>
        <link refid="render_setup_task_8h_source"/>
        <childnode refid="54742" relation="include">
        </childnode>
        <childnode refid="54745" relation="include">
        </childnode>
        <childnode refid="54746" relation="include">
        </childnode>
        <childnode refid="54729" relation="include">
        </childnode>
      </node>
      <node id="54777">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="54744">
        <label>pxr/imaging/hdx/oitVolumeRenderTask.h</label>
        <link refid="oit_volume_render_task_8h_source"/>
      </node>
      <node id="54817">
        <label>pxr/imaging/hdsi/coordSysPrimSceneIndex.h</label>
        <link refid="coord_sys_prim_scene_index_8h_source"/>
      </node>
      <node id="54737">
        <label>pxr/imaging/hdx/pickFromRenderBufferTask.h</label>
        <link refid="pick_from_render_buffer_task_8h_source"/>
      </node>
      <node id="54752">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="54746" relation="include">
        </childnode>
      </node>
      <node id="54831">
        <label>pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h</label>
        <link refid="ni_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="54821">
        <label>pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h</label>
        <link refid="material_binding_resolving_scene_index_8h_source"/>
      </node>
      <node id="54816">
        <label>pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h</label>
        <link refid="generative_procedural_resolving_scene_index_8h_source"/>
      </node>
      <node id="54798">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="54799" relation="include">
        </childnode>
        <childnode refid="54800" relation="include">
        </childnode>
        <childnode refid="54801" relation="include">
        </childnode>
        <childnode refid="54802" relation="include">
        </childnode>
      </node>
      <node id="54743">
        <label>pxr/imaging/hdx/oitRenderTask.h</label>
        <link refid="oit_render_task_8h_source"/>
      </node>
      <node id="54846">
        <label>pxr/imaging/hdPrman/renderTerminalOutputInvalidatingSceneIndexPlugin.h</label>
        <link refid="render_terminal_output_invalidating_scene_index_plugin_8h_source"/>
      </node>
      <node id="54859">
        <label>pxr/usdImaging/usdImaging/lightAPIAdapter.h</label>
        <link refid="light_a_p_i_adapter_8h_source"/>
      </node>
      <node id="54707">
        <label>pxr/imaging/hdSt/basisCurves.h</label>
        <link refid="imaging_2hd_st_2basis_curves_8h_source"/>
      </node>
      <node id="54730">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="54745">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="54796">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="54748">
        <label>pxr/imaging/hdx/shadowTask.h</label>
        <link refid="shadow_task_8h_source"/>
        <childnode refid="54746" relation="include">
        </childnode>
      </node>
      <node id="54731">
        <label>pxr/imaging/hd/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="54728" relation="include">
        </childnode>
        <childnode refid="54732" relation="include">
        </childnode>
        <childnode refid="54733" relation="include">
        </childnode>
        <childnode refid="54734" relation="include">
        </childnode>
        <childnode refid="54735" relation="include">
        </childnode>
        <childnode refid="54736" relation="include">
        </childnode>
        <childnode refid="54724" relation="include">
        </childnode>
      </node>
      <node id="54787">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="54788" relation="include">
        </childnode>
        <childnode refid="54789" relation="include">
        </childnode>
        <childnode refid="54790" relation="include">
        </childnode>
        <childnode refid="54791" relation="include">
        </childnode>
        <childnode refid="54792" relation="include">
        </childnode>
        <childnode refid="54793" relation="include">
        </childnode>
        <childnode refid="54794" relation="include">
        </childnode>
        <childnode refid="54795" relation="include">
        </childnode>
        <childnode refid="54796" relation="include">
        </childnode>
        <childnode refid="54797" relation="include">
        </childnode>
      </node>
      <node id="54851">
        <label>pxr/imaging/hd/sceneIndexPluginRegistry.h</label>
        <link refid="scene_index_plugin_registry_8h_source"/>
      </node>
      <node id="54782">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="54830">
        <label>pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h</label>
        <link refid="extent_resolving_scene_index_8h_source"/>
      </node>
      <node id="54853">
        <label>pxr/imaging/hdGp/generativeProceduralPlugin.h</label>
        <link refid="generative_procedural_plugin_8h_source"/>
        <childnode refid="54854" relation="include">
        </childnode>
      </node>
      <node id="54717">
        <label>pxr/imaging/hdSt/volume.h</label>
        <link refid="imaging_2hd_st_2volume_8h_source"/>
      </node>
      <node id="54850">
        <label>pxr/imaging/hdSt/nurbsApproximatingSceneIndexPlugin.h</label>
        <link refid="nurbs_approximating_scene_index_plugin_8h_source"/>
      </node>
      <node id="54799">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="54794">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="54849">
        <label>pxr/imaging/hdSt/implicitSurfaceSceneIndexPlugin.h</label>
        <link refid="implicit_surface_scene_index_plugin_8h_source"/>
      </node>
      <node id="54825">
        <label>pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h</label>
        <link refid="prim_type_notice_batching_scene_index_8h"/>
      </node>
      <node id="54698">
        <label>pxr/imaging/hd/mergingSceneIndex.h</label>
        <link refid="merging_scene_index_8h_source"/>
        <childnode refid="54699" relation="include">
        </childnode>
      </node>
      <node id="54718">
        <label>pxr/imaging/hdPrman/cone.h</label>
        <link refid="imaging_2hd_prman_2cone_8h_source"/>
      </node>
      <node id="54788">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="54810">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="54757">
        <label>pxr/imaging/hdx/visualizeAovTask.h</label>
        <link refid="visualize_aov_task_8h_source"/>
      </node>
      <node id="54722">
        <label>pxr/imaging/hdPrman/sphere.h</label>
        <link refid="imaging_2hd_prman_2sphere_8h_source"/>
      </node>
      <node id="54772">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="54781">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="54848">
        <label>pxr/imaging/hdSt/dependencySceneIndexPlugin.h</label>
        <link refid="dependency_scene_index_plugin_8h_source"/>
      </node>
      <node id="54749">
        <label>pxr/imaging/hdx/simpleLightTask.h</label>
        <link refid="simple_light_task_8h_source"/>
      </node>
      <node id="54726">
        <label>pxr/imaging/hd/task.h</label>
        <link refid="task_8h_source"/>
        <childnode refid="54727" relation="include">
        </childnode>
        <childnode refid="54731" relation="include">
        </childnode>
        <childnode refid="54738" relation="include">
        </childnode>
        <childnode refid="54739" relation="include">
        </childnode>
        <childnode refid="54740" relation="include">
        </childnode>
        <childnode refid="54736" relation="include">
        </childnode>
        <childnode refid="54741" relation="include">
        </childnode>
        <childnode refid="54747" relation="include">
        </childnode>
        <childnode refid="54748" relation="include">
        </childnode>
        <childnode refid="54749" relation="include">
        </childnode>
        <childnode refid="54750" relation="include">
        </childnode>
        <childnode refid="54746" relation="include">
        </childnode>
      </node>
      <node id="54728">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="54854">
        <label>pxr/imaging/hdGp/generativeProceduralPluginRegistry.h</label>
        <link refid="generative_procedural_plugin_registry_8h_source"/>
      </node>
      <node id="54827">
        <label>pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h</label>
        <link refid="render_settings_filtering_scene_index_8h_source"/>
      </node>
      <node id="54790">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="54819">
        <label>pxr/imaging/hdsi/implicitSurfaceSceneIndex.h</label>
        <link refid="implicit_surface_scene_index_8h_source"/>
      </node>
      <node id="54754">
        <label>pxr/imaging/hdx/colorCorrectionTask.h</label>
        <link refid="color_correction_task_8h_source"/>
        <childnode refid="54746" relation="include">
        </childnode>
      </node>
      <node id="54829">
        <label>pxr/usdImaging/usdImaging/drawModeSceneIndex.h</label>
        <link refid="draw_mode_scene_index_8h_source"/>
      </node>
      <node id="54805">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="54793">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="54706">
        <label>pxr/imaging/hdPrman/basisCurves.h</label>
        <link refid="imaging_2hd_prman_2basis_curves_8h_source"/>
      </node>
      <node id="54843">
        <label>pxr/imaging/hdGp/sceneIndexPlugin.h</label>
        <link refid="p_2scene_index_plugin_8h_source"/>
      </node>
      <node id="54729">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="54730" relation="include">
        </childnode>
      </node>
      <node id="54809">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="54758">
        <label>pxr/imaging/hd/unitTestDelegate.h</label>
        <link refid="unit_test_delegate_8h_source"/>
        <childnode refid="54728" relation="include">
        </childnode>
      </node>
      <node id="54708">
        <label>pxr/imaging/hd/mesh.h</label>
        <link refid="imaging_2hd_2mesh_8h_source"/>
        <childnode refid="54709" relation="include">
        </childnode>
        <childnode refid="54710" relation="include">
        </childnode>
        <childnode refid="54711" relation="include">
        </childnode>
      </node>
      <node id="54824">
        <label>pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h</label>
        <link refid="pinned_curve_expanding_scene_index_8h_source"/>
      </node>
      <node id="54766">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="54697">
        <label>pxr/imaging/hd/materialFilteringSceneIndexBase.h</label>
        <link refid="material_filtering_scene_index_base_8h_source"/>
      </node>
      <node id="54797">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="54765">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="54778">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="54714">
        <label>pxr/imaging/hdSt/points.h</label>
        <link refid="imaging_2hd_st_2points_8h_source"/>
      </node>
      <node id="54768">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="54803">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="54732">
        <label>pxr/imaging/hd/unitTestNullRenderPass.h</label>
        <link refid="unit_test_null_render_pass_8h_source"/>
        <childnode refid="54724" relation="include">
        </childnode>
      </node>
      <node id="54734">
        <label>pxr/imaging/hdSt/imageShaderRenderPass.h</label>
        <link refid="image_shader_render_pass_8h_source"/>
      </node>
      <node id="54700">
        <label>pxr/imaging/hd/sceneDelegate.h</label>
        <link refid="scene_delegate_8h_source"/>
        <childnode refid="54701" relation="include">
        </childnode>
        <childnode refid="54702" relation="include">
        </childnode>
        <childnode refid="54704" relation="include">
        </childnode>
        <childnode refid="54725" relation="include">
        </childnode>
        <childnode refid="54726" relation="include">
        </childnode>
        <childnode refid="54758" relation="include">
        </childnode>
        <childnode refid="54759" relation="include">
        </childnode>
        <childnode refid="54723" relation="include">
        </childnode>
        <childnode refid="54760" relation="include">
        </childnode>
        <childnode refid="54746" relation="include">
        </childnode>
        <childnode refid="54761" relation="include">
        </childnode>
        <childnode refid="54763" relation="include">
        </childnode>
      </node>
      <node id="54861">
        <label>pxr/usdImaging/usdImaging/sceneIndices.h</label>
        <link refid="scene_indices_8h_source"/>
      </node>
      <node id="54814">
        <label>pxr/imaging/hd/noticeBatchingSceneIndex.h</label>
        <link refid="notice_batching_scene_index_8h_source"/>
        <childnode refid="54699" relation="include">
        </childnode>
      </node>
      <node id="54818">
        <label>pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h</label>
        <link refid="ext_computation_primvar_pruning_scene_index_8h_source"/>
      </node>
      <node id="54775">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="54786">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="54840">
        <label>pxr/imaging/hd/legacyPrimSceneIndex.h</label>
        <link refid="legacy_prim_scene_index_8h_source"/>
        <childnode refid="54699" relation="include">
        </childnode>
      </node>
      <node id="54842">
        <label>pxr/imaging/hd/sceneIndexPlugin.h</label>
        <link refid="scene_index_plugin_8h_source"/>
        <childnode refid="54843" relation="include">
        </childnode>
        <childnode refid="54844" relation="include">
        </childnode>
        <childnode refid="54845" relation="include">
        </childnode>
        <childnode refid="54846" relation="include">
        </childnode>
        <childnode refid="54847" relation="include">
        </childnode>
        <childnode refid="54848" relation="include">
        </childnode>
        <childnode refid="54849" relation="include">
        </childnode>
        <childnode refid="54850" relation="include">
        </childnode>
      </node>
      <node id="54746">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="54795">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="54716">
        <label>pxr/imaging/hdPrman/volume.h</label>
        <link refid="imaging_2hd_prman_2volume_8h_source"/>
      </node>
      <node id="54789">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="54852">
        <label>pxr/imaging/hdGp/generativeProcedural.h</label>
        <link refid="imaging_2hd_gp_2generative_procedural_8h_source"/>
        <childnode refid="54853" relation="include">
        </childnode>
        <childnode refid="54816" relation="include">
        </childnode>
      </node>
      <node id="54762">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="54832">
        <label>pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h</label>
        <link refid="pi_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="54695">
        <label>pxr/imaging/hd/filteringSceneIndex.h</label>
        <link refid="filtering_scene_index_8h_source"/>
        <childnode refid="54692" relation="include">
        </childnode>
        <childnode refid="54696" relation="include">
        </childnode>
        <childnode refid="54697" relation="include">
        </childnode>
        <childnode refid="54698" relation="include">
        </childnode>
        <childnode refid="54814" relation="include">
        </childnode>
        <childnode refid="54815" relation="include">
        </childnode>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54817" relation="include">
        </childnode>
        <childnode refid="54818" relation="include">
        </childnode>
        <childnode refid="54819" relation="include">
        </childnode>
        <childnode refid="54820" relation="include">
        </childnode>
        <childnode refid="54821" relation="include">
        </childnode>
        <childnode refid="54822" relation="include">
        </childnode>
        <childnode refid="54823" relation="include">
        </childnode>
        <childnode refid="54824" relation="include">
        </childnode>
        <childnode refid="54825" relation="include">
        </childnode>
        <childnode refid="54826" relation="include">
        </childnode>
        <childnode refid="54827" relation="include">
        </childnode>
        <childnode refid="54828" relation="include">
        </childnode>
        <childnode refid="54829" relation="include">
        </childnode>
        <childnode refid="54830" relation="include">
        </childnode>
        <childnode refid="54831" relation="include">
        </childnode>
        <childnode refid="54832" relation="include">
        </childnode>
        <childnode refid="54833" relation="include">
        </childnode>
        <childnode refid="54834" relation="include">
        </childnode>
        <childnode refid="54835" relation="include">
        </childnode>
        <childnode refid="54836" relation="include">
        </childnode>
        <childnode refid="54837" relation="include">
        </childnode>
      </node>
      <node id="54785">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="54742">
        <label>pxr/imaging/hdx/renderTask.h</label>
        <link refid="render_task_8h_source"/>
        <childnode refid="54743" relation="include">
        </childnode>
        <childnode refid="54744" relation="include">
        </childnode>
      </node>
      <node id="54823">
        <label>pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h</label>
        <link refid="nurbs_approximating_scene_index_8h_source"/>
      </node>
      <node id="54837">
        <label>pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h</label>
        <link refid="unloaded_draw_mode_scene_index_8h_source"/>
      </node>
      <node id="54770">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="54771" relation="include">
        </childnode>
        <childnode refid="54772" relation="include">
        </childnode>
      </node>
      <node id="54783">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="54763">
        <label>pxr/usdImaging/usdImaging/primvarDescCache.h</label>
        <link refid="primvar_desc_cache_8h"/>
        <childnode refid="54761" relation="include">
        </childnode>
        <childnode refid="54764" relation="include">
        </childnode>
      </node>
      <node id="54833">
        <label>pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h</label>
        <link refid="render_settings_flattening_scene_index_8h_source"/>
      </node>
      <node id="54709">
        <label>pxr/imaging/hdEmbree/mesh.h</label>
        <link refid="imaging_2hd_embree_2mesh_8h_source"/>
      </node>
      <node id="54820">
        <label>pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h</label>
        <link refid="legacy_display_style_override_scene_index_8h_source"/>
      </node>
      <node id="54764">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="54765" relation="include">
        </childnode>
        <childnode refid="54766" relation="include">
        </childnode>
        <childnode refid="54767" relation="include">
        </childnode>
        <childnode refid="54768" relation="include">
        </childnode>
        <childnode refid="54769" relation="include">
        </childnode>
        <childnode refid="54770" relation="include">
        </childnode>
        <childnode refid="54773" relation="include">
        </childnode>
        <childnode refid="54777" relation="include">
        </childnode>
        <childnode refid="54786" relation="include">
        </childnode>
        <childnode refid="54787" relation="include">
        </childnode>
        <childnode refid="54798" relation="include">
        </childnode>
        <childnode refid="54803" relation="include">
        </childnode>
        <childnode refid="54778" relation="include">
        </childnode>
        <childnode refid="54779" relation="include">
        </childnode>
        <childnode refid="54780" relation="include">
        </childnode>
        <childnode refid="54782" relation="include">
        </childnode>
        <childnode refid="54783" relation="include">
        </childnode>
        <childnode refid="54804" relation="include">
        </childnode>
        <childnode refid="54805" relation="include">
        </childnode>
        <childnode refid="54806" relation="include">
        </childnode>
        <childnode refid="54807" relation="include">
        </childnode>
        <childnode refid="54784" relation="include">
        </childnode>
        <childnode refid="54785" relation="include">
        </childnode>
        <childnode refid="54808" relation="include">
        </childnode>
        <childnode refid="54809" relation="include">
        </childnode>
        <childnode refid="54810" relation="include">
        </childnode>
        <childnode refid="54811" relation="include">
        </childnode>
        <childnode refid="54812" relation="include">
        </childnode>
        <childnode refid="54813" relation="include">
        </childnode>
      </node>
      <node id="54863">
        <label>pxr/usdImaging/usdviewq/hydraObserver.h</label>
        <link refid="hydra_observer_8h_source"/>
      </node>
      <node id="54847">
        <label>pxr/imaging/hdSt/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_st_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="54838">
        <label>pxr/imaging/hd/primDataSourceOverlayCache.h</label>
        <link refid="prim_data_source_overlay_cache_8h_source"/>
      </node>
      <node id="54759">
        <label>pxr/imaging/hdPrman/instancer.h</label>
        <link refid="rman_2instancer_8h_source"/>
        <childnode refid="54721" relation="include">
        </childnode>
      </node>
      <node id="54808">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="54815">
        <label>pxr/imaging/hd/prefixingSceneIndex.h</label>
        <link refid="prefixing_scene_index_8h_source"/>
      </node>
      <node id="54771">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="54724">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="54826">
        <label>pxr/imaging/hdsi/primTypePruningSceneIndex.h</label>
        <link refid="prim_type_pruning_scene_index_8h_source"/>
      </node>
      <node id="54822">
        <label>pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h</label>
        <link refid="material_primvar_transfer_scene_index_8h_source"/>
      </node>
      <node id="54828">
        <label>pxr/imaging/hdsi/sceneGlobalsSceneIndex.h</label>
        <link refid="scene_globals_scene_index_8h_source"/>
      </node>
      <node id="54691">
        <label>pxr/base/tf/denseHashSet.h</label>
        <link refid="dense_hash_set_8h"/>
        <childnode refid="54692" relation="include">
        </childnode>
        <childnode refid="54693" relation="include">
        </childnode>
        <childnode refid="54816" relation="include">
        </childnode>
        <childnode refid="54761" relation="include">
        </childnode>
      </node>
      <node id="54800">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="54725">
        <label>pxr/imaging/hd/sceneIndexAdapterSceneDelegate.h</label>
        <link refid="scene_index_adapter_scene_delegate_8h_source"/>
      </node>
      <node id="54856">
        <label>pxr/usdImaging/usdImaging/collectionAPIAdapter.h</label>
        <link refid="collection_a_p_i_adapter_8h_source"/>
      </node>
      <node id="54719">
        <label>pxr/imaging/hdPrman/cylinder.h</label>
        <link refid="imaging_2hd_prman_2cylinder_8h_source"/>
      </node>
      <node id="54735">
        <label>pxr/imaging/hdSt/renderPass.h</label>
        <link refid="t_2render_pass_8h_source"/>
      </node>
      <node id="54806">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="54715">
        <label>pxr/imaging/hd/volume.h</label>
        <link refid="imaging_2hd_2volume_8h_source"/>
        <childnode refid="54716" relation="include">
        </childnode>
        <childnode refid="54717" relation="include">
        </childnode>
      </node>
      <node id="54705">
        <label>pxr/imaging/hd/basisCurves.h</label>
        <link refid="imaging_2hd_2basis_curves_8h_source"/>
        <childnode refid="54706" relation="include">
        </childnode>
        <childnode refid="54707" relation="include">
        </childnode>
      </node>
      <node id="54813">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="54801">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="54712">
        <label>pxr/imaging/hd/points.h</label>
        <link refid="imaging_2hd_2points_8h_source"/>
        <childnode refid="54713" relation="include">
        </childnode>
        <childnode refid="54714" relation="include">
        </childnode>
      </node>
      <node id="54839">
        <label>pxr/imaging/hd/retainedSceneIndex.h</label>
        <link refid="retained_scene_index_8h_source"/>
        <childnode refid="54840" relation="include">
        </childnode>
      </node>
      <node id="54751">
        <label>pxr/imaging/hdx/aovInputTask.h</label>
        <link refid="aov_input_task_8h_source"/>
      </node>
      <node id="54836">
        <label>pxr/usdImaging/usdImaging/selectionSceneIndex.h</label>
        <link refid="selection_scene_index_8h_source"/>
      </node>
      <node id="54699">
        <label>pxr/imaging/hd/renderIndex.h</label>
        <link refid="render_index_8h_source"/>
        <childnode refid="54700" relation="include">
        </childnode>
        <childnode refid="54746" relation="include">
        </childnode>
        <childnode refid="54724" relation="include">
        </childnode>
      </node>
      <node id="54713">
        <label>pxr/imaging/hdPrman/points.h</label>
        <link refid="imaging_2hd_prman_2points_8h_source"/>
      </node>
      <node id="54862">
        <label>pxr/usdImaging/usdImaging/stageSceneIndex.h</label>
        <link refid="stage_scene_index_8h_source"/>
      </node>
      <node id="54701">
        <label>pxr/imaging/hd/extComputation.h</label>
        <link refid="ext_computation_8h_source"/>
        <childnode refid="54702" relation="include">
        </childnode>
        <childnode refid="54703" relation="include">
        </childnode>
      </node>
      <node id="54835">
        <label>pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h</label>
        <link refid="root_overrides_scene_index_8h_source"/>
      </node>
      <node id="54784">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="54774">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="54767">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="54807">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="54803" relation="include">
        </childnode>
      </node>
      <node id="54720">
        <label>pxr/imaging/hdPrman/gprimbase.h</label>
        <link refid="gprimbase_8h_source"/>
        <childnode refid="54721" relation="include">
        </childnode>
      </node>
      <node id="54694">
        <label>pxr/imaging/hd/dataSourceLegacyPrim.h</label>
        <link refid="data_source_legacy_prim_8h_source"/>
      </node>
      <node id="54802">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="54755">
        <label>pxr/imaging/hdx/colorizeSelectionTask.h</label>
        <link refid="colorize_selection_task_8h_source"/>
      </node>
      <node id="54736">
        <label>pxr/imaging/hdx/pickTask.h</label>
        <link refid="pick_task_8h_source"/>
        <childnode refid="54737" relation="include">
        </childnode>
      </node>
      <node id="54858">
        <label>pxr/usdImaging/usdImaging/geomModelAPIAdapter.h</label>
        <link refid="geom_model_a_p_i_adapter_8h_source"/>
      </node>
      <node id="54792">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="54747">
        <label>pxr/imaging/hdx/selectionTask.h</label>
        <link refid="selection_task_8h_source"/>
      </node>
      <node id="54761">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="54762" relation="include">
        </childnode>
        <childnode refid="54724" relation="include">
        </childnode>
      </node>
      <node id="54857">
        <label>pxr/usdImaging/usdImaging/coordSysAPIAdapter.h</label>
        <link refid="coord_sys_a_p_i_adapter_8h_source"/>
      </node>
      <node id="54692">
        <label>pxr/imaging/hd/dependencyForwardingSceneIndex.h</label>
        <link refid="dependency_forwarding_scene_index_8h_source"/>
      </node>
      <node id="54703">
        <label>pxr/imaging/hdSt/extComputation.h</label>
        <link refid="t_2ext_computation_8h_source"/>
      </node>
      <node id="54693">
        <label>pxr/imaging/hd/sceneIndex.h</label>
        <link refid="scene_index_8h_source"/>
        <childnode refid="54694" relation="include">
        </childnode>
        <childnode refid="54695" relation="include">
        </childnode>
        <childnode refid="54838" relation="include">
        </childnode>
        <childnode refid="54699" relation="include">
        </childnode>
        <childnode refid="54839" relation="include">
        </childnode>
        <childnode refid="54841" relation="include">
        </childnode>
        <childnode refid="54725" relation="include">
        </childnode>
        <childnode refid="54842" relation="include">
        </childnode>
        <childnode refid="54851" relation="include">
        </childnode>
        <childnode refid="54852" relation="include">
        </childnode>
        <childnode refid="54855" relation="include">
        </childnode>
        <childnode refid="54861" relation="include">
        </childnode>
        <childnode refid="54862" relation="include">
        </childnode>
        <childnode refid="54863" relation="include">
        </childnode>
      </node>
      <node id="54738">
        <label>pxr/imaging/hdx/drawTargetTask.h</label>
        <link refid="draw_target_task_8h_source"/>
      </node>
      <node id="54733">
        <label>pxr/imaging/hdEmbree/renderPass.h</label>
        <link refid="mbree_2render_pass_8h_source"/>
      </node>
      <node id="54711">
        <label>pxr/imaging/hdSt/mesh.h</label>
        <link refid="imaging_2hd_st_2mesh_8h_source"/>
      </node>
      <node id="54739">
        <label>pxr/imaging/hdx/oitBufferAccessor.h</label>
        <link refid="oit_buffer_accessor_8h_source"/>
      </node>
      <node id="54780">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="54845">
        <label>pxr/imaging/hdPrman/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_prman_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="54696">
        <label>pxr/imaging/hd/flatteningSceneIndex.h</label>
        <link refid="flattening_scene_index_8h_source"/>
      </node>
      <node id="54727">
        <label>pxr/imaging/hd/engine.h</label>
        <link refid="imaging_2hd_2engine_8h_source"/>
        <childnode refid="54728" relation="include">
        </childnode>
        <childnode refid="54724" relation="include">
        </childnode>
        <childnode refid="54729" relation="include">
        </childnode>
      </node>
      <node id="54779">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="54710">
        <label>pxr/imaging/hdPrman/mesh.h</label>
        <link refid="imaging_2hd_prman_2mesh_8h_source"/>
      </node>
      <node id="54760">
        <label>pxr/imaging/hdx/freeCameraSceneDelegate.h</label>
        <link refid="free_camera_scene_delegate_8h_source"/>
      </node>
      <node id="54804">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="54753">
        <label>pxr/imaging/hdx/colorChannelTask.h</label>
        <link refid="color_channel_task_8h_source"/>
      </node>
      <node id="54791">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="54773">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="54765" relation="include">
        </childnode>
        <childnode refid="54774" relation="include">
        </childnode>
        <childnode refid="54775" relation="include">
        </childnode>
        <childnode refid="54768" relation="include">
        </childnode>
        <childnode refid="54776" relation="include">
        </childnode>
        <childnode refid="54777" relation="include">
        </childnode>
        <childnode refid="54778" relation="include">
        </childnode>
        <childnode refid="54779" relation="include">
        </childnode>
        <childnode refid="54780" relation="include">
        </childnode>
        <childnode refid="54781" relation="include">
        </childnode>
        <childnode refid="54782" relation="include">
        </childnode>
        <childnode refid="54783" relation="include">
        </childnode>
        <childnode refid="54784" relation="include">
        </childnode>
        <childnode refid="54785" relation="include">
        </childnode>
      </node>
      <node id="54723">
        <label>pxr/imaging/hdSt/primUtils.h</label>
        <link refid="prim_utils_8h_source"/>
      </node>
      <node id="54721">
        <label>pxr/imaging/hdPrman/gprim.h</label>
        <link refid="imaging_2hd_prman_2gprim_8h_source"/>
        <childnode refid="54706" relation="include">
        </childnode>
        <childnode refid="54718" relation="include">
        </childnode>
        <childnode refid="54719" relation="include">
        </childnode>
        <childnode refid="54710" relation="include">
        </childnode>
        <childnode refid="54713" relation="include">
        </childnode>
        <childnode refid="54722" relation="include">
        </childnode>
        <childnode refid="54716" relation="include">
        </childnode>
      </node>
      <node id="54750">
        <label>pxr/imaging/hdx/task.h</label>
        <link refid="_2task_8h_source"/>
        <childnode refid="54751" relation="include">
        </childnode>
        <childnode refid="54752" relation="include">
        </childnode>
        <childnode refid="54753" relation="include">
        </childnode>
        <childnode refid="54754" relation="include">
        </childnode>
        <childnode refid="54755" relation="include">
        </childnode>
        <childnode refid="54737" relation="include">
        </childnode>
        <childnode refid="54756" relation="include">
        </childnode>
        <childnode refid="54742" relation="include">
        </childnode>
        <childnode refid="54745" relation="include">
        </childnode>
        <childnode refid="54757" relation="include">
        </childnode>
      </node>
      <node id="54776">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="54844">
        <label>pxr/imaging/hdPrman/coordSysPrimSceneIndexPlugin.h</label>
        <link refid="coord_sys_prim_scene_index_plugin_8h_source"/>
      </node>
      <node id="54812">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="54834">
        <label>pxr/usdImaging/usdImaging/rerootingSceneIndex.h</label>
        <link refid="rerooting_scene_index_8h_source"/>
      </node>
      <node id="54769">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="54756">
        <label>pxr/imaging/hdx/presentTask.h</label>
        <link refid="present_task_8h_source"/>
      </node>
      <node id="54860">
        <label>pxr/usdImaging/usdImaging/materialBindingAPIAdapter.h</label>
        <link refid="material_binding_a_p_i_adapter_8h_source"/>
      </node>
      <node id="54704">
        <label>pxr/imaging/hd/rprim.h</label>
        <link refid="rprim_8h_source"/>
        <childnode refid="54705" relation="include">
        </childnode>
        <childnode refid="54708" relation="include">
        </childnode>
        <childnode refid="54712" relation="include">
        </childnode>
        <childnode refid="54715" relation="include">
        </childnode>
        <childnode refid="54718" relation="include">
        </childnode>
        <childnode refid="54719" relation="include">
        </childnode>
        <childnode refid="54720" relation="include">
        </childnode>
        <childnode refid="54722" relation="include">
        </childnode>
        <childnode refid="54723" relation="include">
        </childnode>
        <childnode refid="54724" relation="include">
        </childnode>
      </node>
      <node id="54702">
        <label>pxr/imaging/hd/extComputationUtils.h</label>
        <link refid="ext_computation_utils_8h_source"/>
      </node>
      <node id="54811">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
      <node id="54841">
        <label>pxr/imaging/hd/sceneGlobalsSchema.h</label>
        <link refid="scene_globals_schema_8h_source"/>
      </node>
      <node id="54855">
        <label>pxr/usdImaging/usdImaging/apiSchemaAdapter.h</label>
        <link refid="api_schema_adapter_8h"/>
        <childnode refid="54856" relation="include">
        </childnode>
        <childnode refid="54857" relation="include">
        </childnode>
        <childnode refid="54858" relation="include">
        </childnode>
        <childnode refid="54859" relation="include">
        </childnode>
        <childnode refid="54860" relation="include">
        </childnode>
      </node>
      <node id="54740">
        <label>pxr/imaging/hdx/oitResolveTask.h</label>
        <link refid="oit_resolve_task_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_tf_dense_hash_set" prot="public">TfDenseHashSet</innerclass>
    <innerclass refid="struct_tf_dense_hash_set_1_1___compressed_storage" prot="private">TfDenseHashSet::_CompressedStorage</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_DENSE_HASH_SET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_DENSE_HASH_SET_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="attributes_8h" kindref="compound">pxr/base/arch/attributes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/hashmap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/><sp/><sp/><sp/></highlight><highlight class="normal">Element,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/><sp/><sp/><sp/></highlight><highlight class="normal">HashFn,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/><sp/><sp/><sp/></highlight><highlight class="normal">EqualElement<sp/><sp/>=<sp/>std::equal_to&lt;Element&gt;,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>Threshold<sp/>=<sp/>128</highlight></codeline>
<codeline lineno="54"><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="55" refid="class_tf_dense_hash_set" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Element<sp/>value_type;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vector<sp/>type<sp/>holding<sp/>all<sp/>data<sp/>for<sp/>this<sp/>dense<sp/>hash<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;Element&gt;<sp/>_Vector;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>hash<sp/>map<sp/>used<sp/>when<sp/>the<sp/>map<sp/>holds<sp/>more<sp/>than<sp/>Threshold<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>TfHashMap&lt;Element,<sp/>size_t,<sp/>HashFn,<sp/>EqualElement&gt;<sp/>_HashMap;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_tf_dense_hash_set_1aee1bb806f3c64abc7c0e8be705c00128" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Vector::const_iterator<sp/><ref refid="class_tf_dense_hash_set_1aee1bb806f3c64abc7c0e8be705c00128" kindref="member">iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Vector::const_iterator<sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_tf_dense_hash_set_1a887c3e50a99b920fb36fcbbc18cc7279" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;const_iterator,<sp/>bool&gt;<sp/><ref refid="class_tf_dense_hash_set_1a887c3e50a99b920fb36fcbbc18cc7279" kindref="member">insert_result</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_tf_dense_hash_set_1a532fb6d2b77f1288f27c914d8cd644fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a532fb6d2b77f1288f27c914d8cd644fc" kindref="member">TfDenseHashSet</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HashFn<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;hashFn<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>HashFn(),</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EqualElement<sp/>&amp;equalElement<sp/>=<sp/>EqualElement())</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_hash()<sp/>=<sp/>hashFn;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_equ()<sp/><sp/>=<sp/>equalElement;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_tf_dense_hash_set_1af55c81ed852462a09d3a45fa7406ab8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1af55c81ed852462a09d3a45fa7406ab8f" kindref="member">TfDenseHashSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;rhs)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><sp/><sp/>_storage(rhs._storage)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs._h)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h<sp/>=<sp/>std::make_unique&lt;_HashMap&gt;(*rhs._h);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a532fb6d2b77f1288f27c914d8cd644fc" kindref="member">TfDenseHashSet</ref>(<ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;&amp;rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="114" refid="class_tf_dense_hash_set_1a2ec67abf262019900886552568b3340d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a2ec67abf262019900886552568b3340d" kindref="member">TfDenseHashSet</ref>(Iterator<sp/><ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>,<sp/>Iterator<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert</ref>(<ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>,<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_tf_dense_hash_set_1a8f87b71accb88be03283db285683878e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a8f87b71accb88be03283db285683878e" kindref="member">TfDenseHashSet</ref>(std::initializer_list&lt;Element&gt;<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert</ref>(l.begin(),<sp/>l.end());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="class_tf_dense_hash_set_1ac443e270882db6f680d32379a92ac5bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;<ref refid="class_tf_dense_hash_set_1ac443e270882db6f680d32379a92ac5bb" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>temp(rhs);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" kindref="member">swap</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;<ref refid="class_tf_dense_hash_set_1ac443e270882db6f680d32379a92ac5bb" kindref="member">operator=</ref>(<ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;&amp;rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_tf_dense_hash_set_1a3ab07571fd3579c01c0459d2cae16061" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;<ref refid="class_tf_dense_hash_set_1a3ab07571fd3579c01c0459d2cae16061" kindref="member">operator=</ref>(std::initializer_list&lt;Element&gt;<sp/>l)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert</ref>(l.begin(),<sp/>l.end());</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="class_tf_dense_hash_set_1abe0ce6886bbbff1c2a1b57b2c4bca2f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1abe0ce6886bbbff1c2a1b57b2c4bca2f8" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()<sp/>!=<sp/>rhs.<ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>())</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//XXX:<sp/>Should<sp/>we<sp/>compare<sp/>the<sp/>HashFn<sp/>and<sp/>EqualElement<sp/>too?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/>tend<sp/>=<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/>iter<sp/>=<sp/><ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>();<sp/>iter<sp/>!=<sp/>tend;<sp/>++iter)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rhs.<ref refid="class_tf_dense_hash_set_1a50bf15af593e4df67875f8e44d6a2e83" kindref="member">count</ref>(*iter))</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_tf_dense_hash_set_1ac8bb3912a3ce86b15842e79d0b421204" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1ac8bb3912a3ce86b15842e79d0b421204" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vec().clear();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h.reset();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" kindref="member">swap</ref>(<ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_storage.swap(rhs._storage);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h.swap(rhs._h);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_tf_dense_hash_set_1a644718bb2fb240de962dc3c9a1fdf0dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a644718bb2fb240de962dc3c9a1fdf0dc" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vec().empty();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vec().size();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/><ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vec().begin();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="202" refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vec().end();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_tf_dense_hash_set_1a8bd6ed0be5783d9dd85b4f2c1395c210" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/><ref refid="class_tf_dense_hash_set_1a8bd6ed0be5783d9dd85b4f2c1395c210" kindref="member">find</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Element<sp/>&amp;k)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_h)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_HashMap::const_iterator<sp/>iter<sp/>=<sp/>_h-&gt;find(k);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>==<sp/>_h-&gt;end())</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vec().begin()<sp/>+<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_Vector::const_iterator<sp/>iter,<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref><sp/>=<sp/>_vec().end();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(iter<sp/>=<sp/>_vec().<ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>();<sp/>iter<sp/>!=<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>;<sp/>++iter)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_equ()(*iter,<sp/>k))</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iter;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="class_tf_dense_hash_set_1a50bf15af593e4df67875f8e44d6a2e83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a50bf15af593e4df67875f8e44d6a2e83" kindref="member">count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Element<sp/>&amp;k)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a8bd6ed0be5783d9dd85b4f2c1395c210" kindref="member">find</ref>(k)<sp/>!=<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a887c3e50a99b920fb36fcbbc18cc7279" kindref="member">insert_result</ref><sp/><ref refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path" kindref="compound">value_type</ref><sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_h)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>insert<sp/>the<sp/>new<sp/>index.<sp/><sp/>If<sp/>this<sp/>fails,<sp/>we<sp/>can&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>v.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;typename<sp/>_HashMap::iterator,<sp/>bool&gt;<sp/>res<sp/>=</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h-&gt;insert(std::make_pair(v,<sp/><ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res.second)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a887c3e50a99b920fb36fcbbc18cc7279" kindref="member">insert_result</ref>(_vec().<ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>()<sp/>+<sp/>res.first-&gt;second,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bail<sp/>if<sp/>already<sp/>inserted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/>iter<sp/>=<sp/><ref refid="class_tf_dense_hash_set_1a8bd6ed0be5783d9dd85b4f2c1395c210" kindref="member">find</ref>(v);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>())</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a887c3e50a99b920fb36fcbbc18cc7279" kindref="member">insert_result</ref>(iter,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>at<sp/>end<sp/>and<sp/>create<sp/>table<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vec().push_back(v);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CreateTableIfNeeded();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a887c3e50a99b920fb36fcbbc18cc7279" kindref="member">insert_result</ref>(std::prev(<ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>()),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="268" refid="class_tf_dense_hash_set_1a4dc81021f31a69b7388000bf67c4d53d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a4dc81021f31a69b7388000bf67c4d53d" kindref="member">insert</ref>(IteratorType<sp/>i0,<sp/>IteratorType<sp/>i1)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>elements<sp/>are<sp/>more<sp/>often<sp/>than<sp/>not<sp/>unique,<sp/>so<sp/>if<sp/>the<sp/>sum<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>size<sp/>and<sp/>the<sp/>size<sp/>of<sp/>the<sp/>range<sp/>is<sp/>greater<sp/>than<sp/>or<sp/>equal<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>threshold,<sp/>we<sp/>create<sp/>the<sp/>table<sp/>immediately<sp/>so<sp/>we<sp/>don&apos;t<sp/>do<sp/>m*n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>work<sp/>before<sp/>creating<sp/>the<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()<sp/>+<sp/>std::distance(i0,<sp/>i1)<sp/>&gt;=<sp/>Threshold)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CreateTable();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(IteratorType<sp/>iter<sp/>=<sp/>i0;<sp/>iter<sp/>!=<sp/>i1;<sp/>++iter)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert</ref>(*iter);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="285" refid="class_tf_dense_hash_set_1acc57ffc33ddac4a5d15a48c96ca772a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1acc57ffc33ddac4a5d15a48c96ca772a3" kindref="member">insert_unique</ref>(Iterator<sp/><ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>,<sp/>Iterator<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special-case<sp/>empty<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_dense_hash_set_1a644718bb2fb240de962dc3c9a1fdf0dc" kindref="member">empty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vec().assign(<ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>,<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CreateTableIfNeeded();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>insert,<sp/>since<sp/>duplicate<sp/>checking<sp/>will<sp/>use<sp/>the<sp/>hash.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert</ref>(<ref refid="class_tf_dense_hash_set_1a29305669b60ca1680752e2fc3592ba99" kindref="member">begin</ref>,<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="class_tf_dense_hash_set_1a07fa7e609af4c6464c6769ccf6c055d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a07fa7e609af4c6464c6769ccf6c055d3" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Element<sp/>&amp;k)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/>iter<sp/>=<sp/><ref refid="class_tf_dense_hash_set_1a8bd6ed0be5783d9dd85b4f2c1395c210" kindref="member">find</ref>(k);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/><ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a07fa7e609af4c6464c6769ccf6c055d3" kindref="member">erase</ref>(iter);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_tf_dense_hash_set_1a7141824657e2ff88f95ab43e1bcdffb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a7141824657e2ff88f95ab43e1bcdffb6" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1aee1bb806f3c64abc7c0e8be705c00128" kindref="member">iterator</ref><sp/>&amp;iter)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Erase<sp/>key<sp/>from<sp/>hash<sp/>table<sp/>if<sp/>applicable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_h)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h-&gt;erase(*iter);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>not<sp/>removing<sp/>that<sp/>last<sp/>element...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>std::prev(<ref refid="class_tf_dense_hash_set_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" kindref="member">end</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>move<sp/>the<sp/>last<sp/>element<sp/>into<sp/>the<sp/>erased<sp/>placed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>can<sp/>cast<sp/>constness<sp/>away<sp/>because<sp/>we<sp/>explicitly<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>TfHashMap<sp/>_h<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" kindref="member">swap</ref>(*const_cast&lt;Element<sp/>*&gt;(&amp;(*iter)),<sp/>_vec().back());</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>update<sp/>the<sp/>moved<sp/>element&apos;s<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_h)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*_h)[*iter]<sp/>=<sp/>iter<sp/>-<sp/>_vec().begin();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vec().pop_back();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="class_tf_dense_hash_set_1a6b6f4c240e6de70c969fde9c9848be56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a6b6f4c240e6de70c969fde9c9848be56" kindref="member">erase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1aee1bb806f3c64abc7c0e8be705c00128" kindref="member">iterator</ref><sp/>&amp;i0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1aee1bb806f3c64abc7c0e8be705c00128" kindref="member">iterator</ref><sp/>&amp;i1)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_h)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/>iter<sp/>=<sp/>i0;<sp/>iter<sp/>!=<sp/>i1;<sp/>++iter)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h-&gt;erase(iter-&gt;first);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1abae83d2b975d312a1d35691c87397297" kindref="member">const_iterator</ref><sp/>vremain<sp/>=<sp/>_vec().erase(i0,<sp/>i1);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_h)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;<sp/>vremain<sp/>!=<sp/>_vec().end();<sp/>++vremain)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*_h)[*vremain]<sp/>=<sp/>vremain<sp/>-<sp/>_vec().begin();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_tf_dense_hash_set_1a5f16304f80b6fb253c7b0ead3e16dd18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a5f16304f80b6fb253c7b0ead3e16dd18" kindref="member">shrink_to_fit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shrink<sp/>the<sp/>vector<sp/>to<sp/>best<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vec().shrink_to_fit();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_h)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>have<sp/>a<sp/>hash<sp/>map<sp/>and<sp/>are<sp/>underneath<sp/>the<sp/>threshold,<sp/>discard<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&lt;<sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h.reset();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>allocate<sp/>a<sp/>new<sp/>hash<sp/>map<sp/>with<sp/>the<sp/>optimal<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>_HashMap(sz,<sp/>_hash(),<sp/>_equ()));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sz;<sp/>++i)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*_h)[_vec()[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_tf_dense_hash_set_1ab9c3de425823fed6a8146e2c2e3b57c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Element<sp/>&amp;<ref refid="class_tf_dense_hash_set_1ab9c3de425823fed6a8146e2c2e3b57c7" kindref="member">operator[]</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1gaf621af3398d45d5d1108db257abc0ebd" kindref="member">TF_VERIFY</ref>(index<sp/>&lt;<sp/><ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>());</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_vec()[index];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>the<sp/>storage<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>_Vector<sp/>&amp;_vec()<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_storage.vector;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>the<sp/>hash<sp/>functor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>HashFn<sp/>&amp;_hash()<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_storage;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>the<sp/>equality<sp/>functor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>EqualElement<sp/>&amp;_equ()<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_storage;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>the<sp/>storage<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Vector<sp/>&amp;_vec()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_storage.vector;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>the<sp/>hash<sp/>functor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HashFn<sp/>&amp;_hash()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_storage;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>access<sp/>the<sp/>equality<sp/>functor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EqualElement<sp/>&amp;_equ()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_storage;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>create<sp/>the<sp/>acceleration<sp/>table<sp/>if<sp/>size<sp/>dictates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_CreateTableIfNeeded()<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>()<sp/>&gt;=<sp/>Threshold)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CreateTable();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unconditionally<sp/>create<sp/>the<sp/>acceleration<sp/>table<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>already</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exist.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_CreateTable()<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_h)<sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_h.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>_HashMap(Threshold,<sp/>_hash(),<sp/>_equ()));</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_tf_dense_hash_set_1a259cb5a711406a8c3e5d937eb9350cca" kindref="member">size</ref>();<sp/>++i)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*_h)[_vec()[i]]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>sizeof(EqualElement)<sp/>==<sp/>0<sp/>and<sp/>sizeof(HashFn)<sp/>==<sp/>0<sp/>in<sp/>many<sp/>cases</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>use<sp/>the<sp/>empty<sp/>base<sp/>optimization<sp/>to<sp/>not<sp/>pay<sp/>a<sp/>size<sp/>penalty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>C++20,<sp/>explore<sp/>using<sp/>[[no_unique_address]]<sp/>as<sp/>an<sp/>alternative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>way<sp/>to<sp/>get<sp/>this<sp/>optimization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="attributes_8h_1a5198338fbe4d306bf490e00c1fec184b" kindref="member">ARCH_EMPTY_BASES</ref><sp/>_CompressedStorage<sp/>:</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>EqualElement,<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>HashFn<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(!std::is_same&lt;EqualElement,<sp/>HashFn&gt;::value,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;EqualElement<sp/>and<sp/>HashFn<sp/>must<sp/>be<sp/>distinct<sp/>types.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CompressedStorage()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CompressedStorage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>EqualElement&amp;<sp/>equal,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HashFn&amp;<sp/>hashFn)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>EqualElement(equal),<sp/>HashFn(hashFn)<sp/>{}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" kindref="member">swap</ref>(_CompressedStorage&amp;<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector.swap(other.vector);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" kindref="member">swap</ref>(static_cast&lt;EqualElement&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_cast&lt;EqualElement&amp;&gt;(other));</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_dense_hash_set_1a8260ecbf623a40187c4cafda19aaf5c6" kindref="member">swap</ref>(static_cast&lt;HashFn&amp;&gt;(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">),<sp/>static_cast&lt;HashFn&amp;&gt;(other));</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Vector<sp/>vector;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_dense_hash_set" kindref="compound">TfDenseHashSet</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>_CompressedStorage<sp/>_storage;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>hash<sp/>map<sp/>that<sp/>maps<sp/>from<sp/>keys<sp/>to<sp/>vector<sp/>indices.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;_HashMap&gt;<sp/>_h;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">};</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_DENSE_HASH_SET_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/denseHashSet.h"/>
  </compounddef>
</doxygen>
