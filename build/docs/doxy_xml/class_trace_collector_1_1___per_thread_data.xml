<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_collector_1_1___per_thread_data" kind="class" language="C++" prot="private">
    <compoundname>TraceCollector::_PerThreadData</compoundname>
    <innerclass refid="class_trace_collector_1_1___per_thread_data_1_1_atomic_ref" prot="private">TraceCollector::_PerThreadData::AtomicRef</innerclass>
    <innerclass refid="struct_trace_collector_1_1___per_thread_data_1_1_py_scope" prot="private">TraceCollector::_PerThreadData::PyScope</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_trace_collector_1_1___per_thread_data_1a1756829847964c64a02464da01463f93" prot="public" static="no">
        <type><ref refid="class_trace_event_list" kindref="compound">TraceCollection::EventList</ref></type>
        <definition>using EventList =  TraceCollection::EventList</definition>
        <argsstring></argsstring>
        <name>EventList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="510" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="510" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_collector_1_1___per_thread_data_1a9176b2f8908b7a0975ca48e6a51a37fe" prot="private" static="no" mutable="yes">
        <type>std::atomic&lt; bool &gt;</type>
        <definition>std::atomic&lt;bool&gt; _writing</definition>
        <argsstring></argsstring>
        <name>_writing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="587" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_collector_1_1___per_thread_data_1a97e4dc97162a25278c74a5dd1b3e75e8" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; <ref refid="class_trace_event_list" kindref="compound">EventList</ref> * &gt;</type>
        <definition>std::atomic&lt;EventList*&gt; _events</definition>
        <argsstring></argsstring>
        <name>_events</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="588" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_collector_1_1___per_thread_data_1a2945e68011ed567d2131fc2fcdbf0bb7" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref></type>
        <definition>TraceThreadId _threadIndex</definition>
        <argsstring></argsstring>
        <name>_threadIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="606" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="606" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_collector_1_1___per_thread_data_1a53daed0d17e7782874cf2812fe34fe6e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; PyScope &gt;</type>
        <definition>std::vector&lt;PyScope&gt; _pyScopes</definition>
        <argsstring></argsstring>
        <name>_pyScopes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="612" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a7e706d9d7e19fd5fdfde538266cd2517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>_PerThreadData</definition>
        <argsstring>()</argsstring>
        <name>_PerThreadData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1af3b5a206ae417063196e6db9d8229f1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~_PerThreadData</definition>
        <argsstring>()</argsstring>
        <name>~_PerThreadData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="513" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a094d4a4eb573363005a711cdc29c573a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_trace_thread_id" kindref="compound">TraceThreadId</ref> &amp;</type>
        <definition>const TraceThreadId&amp; GetThreadId</definition>
        <argsstring>() const</argsstring>
        <name>GetThreadId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="515" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="515" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a9b7b3da660a2256cac9b64fd1bd98ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TimeStamp</type>
        <definition>TimeStamp BeginEvent</definition>
        <argsstring>(const Key &amp;key, TraceCategoryId cat)</argsstring>
        <name>BeginEvent</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a6973dca29bab828d7016be82c52d25d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TimeStamp</type>
        <definition>TimeStamp EndEvent</definition>
        <argsstring>(const Key &amp;key, TraceCategoryId cat)</argsstring>
        <name>EndEvent</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="519" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a1878350a8a7ac149776bea739930662b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TimeStamp</type>
        <definition>TimeStamp MarkerEvent</definition>
        <argsstring>(const Key &amp;key, TraceCategoryId cat)</argsstring>
        <name>MarkerEvent</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a1ec5432aef0c621b6b98cdec86b21fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void BeginEventAtTime</definition>
        <argsstring>(const Key &amp;key, double ms, TraceCategoryId cat)</argsstring>
        <name>BeginEventAtTime</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ms</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="523" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a0440cacebcd57654dabe999ba0c79c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void EndEventAtTime</definition>
        <argsstring>(const Key &amp;key, double ms, TraceCategoryId cat)</argsstring>
        <name>EndEventAtTime</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ms</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a1c1e29f628eb164563db4909bf2396ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void MarkerEventAtTime</definition>
        <argsstring>(const Key &amp;key, double ms, TraceCategoryId cat)</argsstring>
        <name>MarkerEventAtTime</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ms</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a1e75630aca42c4b48ced5e1d7dcac0de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BeginScope</definition>
        <argsstring>(const TraceKey &amp;key, TraceCategoryId cat)</argsstring>
        <name>BeginScope</name>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">TraceKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="528" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="528" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1ac2c113508d3d2af35a389e9385bdc81e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void EndScope</definition>
        <argsstring>(const TraceKey &amp;key, TraceCategoryId cat)</argsstring>
        <name>EndScope</name>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">TraceKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="533" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="533" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a806ae606299000ffe01f58c735fb9421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void CounterDelta</definition>
        <argsstring>(const Key &amp;, double value, TraceCategoryId cat)</argsstring>
        <name>CounterDelta</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a258c433b6b2917456581764f39e42336" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void CounterValue</definition>
        <argsstring>(const Key &amp;, double value, TraceCategoryId cat)</argsstring>
        <name>CounterValue</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a47517baa74de467dbee0b220d90c76dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void StoreData</definition>
        <argsstring>(const TraceKey &amp;key, const T &amp;data, TraceCategoryId cat)</argsstring>
        <name>StoreData</name>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">TraceKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="545" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="545" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a64e87ca5b1ca5cb1223e51b24b5bc7dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void StoreLargeData</definition>
        <argsstring>(const TraceKey &amp;key, const T &amp;data, TraceCategoryId cat)</argsstring>
        <name>StoreLargeData</name>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">TraceKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="553" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="553" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1ac3fdd337035c3ebf22d195945f965a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void EmplaceEvent</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>EmplaceEvent</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="562" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="562" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1ad9b0d5f8558773dd77ec49bd5fb182f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PushPyScope</definition>
        <argsstring>(const Key &amp;key, bool enabled)</argsstring>
        <name>PushPyScope</name>
        <param>
          <type>const <ref refid="class_trace_dynamic_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a07a553055ce082f95bd6eee8196bb56c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PopPyScope</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>PopPyScope</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a8257487932fe937c10ee17d6b626d10a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_trace_event_list" kindref="compound">EventList</ref> &gt;</type>
        <definition>std::unique_ptr&lt;EventList&gt; GetCollectionData</definition>
        <argsstring>()</argsstring>
        <name>GetCollectionData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="575" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="576" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a25d96cd3be1665917cc1070eb8a84b39" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _BeginScope</definition>
        <argsstring>(const TraceKey &amp;key, TraceCategoryId cat)</argsstring>
        <name>_BeginScope</name>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">TraceKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="579" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="579" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collector_1_1___per_thread_data_1a4ccfe604211a2c72c3fc323b13db793b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _EndScope</definition>
        <argsstring>(const TraceKey &amp;key, TraceCategoryId cat)</argsstring>
        <name>_EndScope</name>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">TraceKey</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collector.h" line="584" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/collector.h" line="508" column="1" bodyfile="pxr/base/trace/collector.h" bodystart="508" bodyend="613"/>
    <listofallmembers>
      <member refid="class_trace_collector_1_1___per_thread_data_1a25d96cd3be1665917cc1070eb8a84b39" prot="private" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_BeginScope</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a4ccfe604211a2c72c3fc323b13db793b" prot="private" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_EndScope</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a97e4dc97162a25278c74a5dd1b3e75e8" prot="private" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_events</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a7e706d9d7e19fd5fdfde538266cd2517" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_PerThreadData</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a53daed0d17e7782874cf2812fe34fe6e" prot="private" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_pyScopes</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a2945e68011ed567d2131fc2fcdbf0bb7" prot="private" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_threadIndex</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a9176b2f8908b7a0975ca48e6a51a37fe" prot="private" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>_writing</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a9b7b3da660a2256cac9b64fd1bd98ef8" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>BeginEvent</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a1ec5432aef0c621b6b98cdec86b21fac" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>BeginEventAtTime</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a1e75630aca42c4b48ced5e1d7dcac0de" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>BeginScope</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1aa71d36872f416feaa853788a7a7a7ef8" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>Clear</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a806ae606299000ffe01f58c735fb9421" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>CounterDelta</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a258c433b6b2917456581764f39e42336" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>CounterValue</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1ac3fdd337035c3ebf22d195945f965a67" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>EmplaceEvent</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a6973dca29bab828d7016be82c52d25d7" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>EndEvent</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a0440cacebcd57654dabe999ba0c79c06" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>EndEventAtTime</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1ac2c113508d3d2af35a389e9385bdc81e" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>EndScope</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a1756829847964c64a02464da01463f93" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>EventList</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a8257487932fe937c10ee17d6b626d10a" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>GetCollectionData</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a094d4a4eb573363005a711cdc29c573a" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>GetThreadId</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a1878350a8a7ac149776bea739930662b" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>MarkerEvent</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a1c1e29f628eb164563db4909bf2396ff" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>MarkerEventAtTime</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a07a553055ce082f95bd6eee8196bb56c" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>PopPyScope</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1ad9b0d5f8558773dd77ec49bd5fb182f7" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>PushPyScope</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a47517baa74de467dbee0b220d90c76dd" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>StoreData</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1a64e87ca5b1ca5cb1223e51b24b5bc7dc" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>StoreLargeData</name></member>
      <member refid="class_trace_collector_1_1___per_thread_data_1af3b5a206ae417063196e6db9d8229f1c" prot="public" virt="non-virtual"><scope>TraceCollector::_PerThreadData</scope><name>~_PerThreadData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
