<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_geom_subset" kind="class" language="C++" prot="public">
    <compoundname>UsdGeomSubset</compoundname>
    <basecompoundref refid="class_usd_typed" prot="public" virt="non-virtual">UsdTyped</basecompoundref>
    <includes refid="subset_8h" local="no">subset.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_geom_subset_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa6650141c3d230f8e4e51461e1d9e645" kindref="member">UsdSchemaKind::ConcreteTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="91" column="1" bodyfile="pxr/usd/usdGeom/subset.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_geom_subset_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="169" column="1" bodyfile="pxr/usd/usdGeom/subset.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_geom_subset_1a6973626deb3d11d798b23462e1121f5e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomSubset</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdGeomSubset</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_geom_subset_1a4118ad483bac2d76d42b218959f5644a" kindref="member">UsdGeomSubset::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="97" column="1" bodyfile="pxr/usd/usdGeom/subset.h" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a1f5bb67f1a2f53279f42279a0a307cd5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomSubset</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdGeomSubset</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="105" column="1" bodyfile="pxr/usd/usdGeom/subset.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1afed537ffff9b27e69177c833266f6c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API</type>
        <definition>virtual USDGEOM_API ~UsdGeomSubset</definition>
        <argsstring>()</argsstring>
        <name>~UsdGeomSubset</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a74ba2657851f6c0884e72b4a762d1607" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetElementTypeAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetElementTypeAttr</name>
        <briefdescription>
<para>The type of element that the indices target. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;elementType&quot; can have one of the following values: <itemizedlist>
<listitem>
<para><bold>face</bold>: for a <ref refid="class_usd_geom_mesh" kindref="compound">UsdGeomMesh</ref>, each element of the indices attribute would refer to an element of the Mesh&apos;s faceCounts attribute </para>
</listitem>
<listitem>
<para><bold>point</bold>: for any <ref refid="class_usd_geom_point_based" kindref="compound">UsdGeomPointBased</ref>, each element of the indices attribute would refer to an element of the Mesh&apos;s points attribute</para>
</listitem>
</itemizedlist>
</para>
<para><table rows="6" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform token elementType = &quot;face&quot;</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2usd_geom_2tokens_8h_1ad9e3544e015f99ed697804fd6bfe1a88" kindref="member">Allowed Values</ref>  </para>
</entry><entry thead="no"><para>face, point   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a22a41254b002dadf889093dc31155368" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateElementTypeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateElementTypeAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_subset_1a74ba2657851f6c0884e72b4a762d1607" kindref="member">GetElementTypeAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1adc3cf34c4a7aa5689619d84474b55cfa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetIndicesAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetIndicesAttr</name>
        <briefdescription>
<para>The set of indices included in this subset. </para>
        </briefdescription>
        <detaileddescription>
<para>The indices need not be sorted, but the same index should not appear more than once.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>int[] indices = []</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;int&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;IntArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1aa2de5daeb9b9e0739c69a985df045c9b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateIndicesAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateIndicesAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_subset_1adc3cf34c4a7aa5689619d84474b55cfa" kindref="member">GetIndicesAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1af278c1bd6603a66ffcb1a033f395a876" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetFamilyNameAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetFamilyNameAttr</name>
        <briefdescription>
<para>The name of the family of subsets that this subset belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para>This is optional and is primarily useful when there are multiple families of subsets under a geometric prim. In some cases, this could also be used for achieving proper roundtripping of subset data between DCC apps. When multiple subsets belonging to a prim have the same familyName, they are said to belong to the family. A <emphasis>familyType</emphasis> value can be encoded on the owner of a family of subsets as a token using the static method <ref refid="class_usd_geom_subset_1ad0c186e761984f80850e2e820f5ac6f9" kindref="member">UsdGeomSubset::SetFamilyType()</ref>. &quot;familyType&quot; can have one of the following values: <itemizedlist>
<listitem>
<para><bold>UsdGeomTokens-&gt;partition</bold>: implies that every element of the whole geometry appears exactly once in only one of the subsets belonging to the family. </para>
</listitem>
<listitem>
<para><bold>UsdGeomTokens-&gt;nonOverlapping</bold>: an element that appears in one subset may not appear in any other subset belonging to the family. </para>
</listitem>
<listitem>
<para><bold>UsdGeomTokens-&gt;unrestricted</bold>: implies that there are no restrictions w.r.t. the membership of elements in the subsets. They could be overlapping and the union of all subsets in the family may not represent the whole. </para>
</listitem>
</itemizedlist>
<simplesect kind="note"><para>The validity of subset data is not enforced by the authoring APIs, however they can be checked using <ref refid="class_usd_geom_subset_1a4b4369228e501996f6a692aec34f9b33" kindref="member">UsdGeomSubset::ValidateFamily()</ref>.</para>
</simplesect>
<table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform token familyName = &quot;&quot;</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a99dd3efb13e02e9cf7174abfb5596d4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateFamilyNameAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateFamilyNameAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_subset_1af278c1bd6603a66ffcb1a033f395a876" kindref="member">GetFamilyNameAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="276" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_geom_subset_1ae40ae43320babff8a254a3a8107a255a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDGEOM_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a4118ad483bac2d76d42b218959f5644a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref></type>
        <definition>static USDGEOM_API UsdGeomSubset Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdGeomSubset(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a5293070a94b59f941c0d938d457ea50a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref></type>
        <definition>static USDGEOM_API UsdGeomSubset Define</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Define</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Attempt to ensure a <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis> adhering to this schema at <computeroutput>path</computeroutput> is defined (according to <ref refid="class_usd_prim_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">UsdPrim::IsDefined()</ref>) on this stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If a prim adhering to this schema at <computeroutput>path</computeroutput> is already defined on this stage, return that prim. Otherwise author an <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> with <emphasis>specifier</emphasis> == <emphasis>SdfSpecifierDef</emphasis> and this schema&apos;s prim type name for the prim at <computeroutput>path</computeroutput> at the current EditTarget. Author <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> s with <computeroutput>specifier</computeroutput> == <emphasis>SdfSpecifierDef</emphasis> and empty typeName at the current EditTarget for any nonexistent, or existing but not <emphasis>Defined</emphasis> ancestors.</para>
<para>The given <emphasis>path</emphasis> must be an absolute prim path that does not contain any variant selections.</para>
<para>If it is impossible to author any of the necessary PrimSpecs, (for example, in case <emphasis>path</emphasis> cannot map to the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>&apos;s namespace) issue an error and return an invalid <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis>.</para>
<para>Note that this method may return a defined prim whose typeName does not specify this schema class, in case a stronger typeName opinion overrides the opinion at the current EditTarget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a5a2ec15c1a98596d8dbe8479d834ab1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref></type>
        <definition>static USDGEOM_API UsdGeomSubset CreateGeomSubset</definition>
        <argsstring>(const UsdGeomImageable &amp;geom, const TfToken &amp;subsetName, const TfToken &amp;elementType, const VtIntArray &amp;indices, const TfToken &amp;familyName=TfToken(), const TfToken &amp;familyType=TfToken())</argsstring>
        <name>CreateGeomSubset</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>subsetName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>elementType</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyName</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyType</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
<para>Creates a new GeomSubset below the given <computeroutput>geom</computeroutput> with the given name, <computeroutput>subsetName</computeroutput>, element type, <computeroutput>elementType</computeroutput> and <computeroutput>indices</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If a subset named <computeroutput>subsetName</computeroutput> already exists below <computeroutput>geom</computeroutput>, then this updates its attributes with the values of the provided arguments (indices value at time &apos;default&apos; will be updated) and returns it.</para>
<para>The family type is set / updated on <computeroutput>geom</computeroutput> only if a non-empty value is passed in for <computeroutput>familyType</computeroutput> and <computeroutput>familyName</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1aa9c5ba37a4cc13e9c980df55407a60c7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref></type>
        <definition>static USDGEOM_API UsdGeomSubset CreateUniqueGeomSubset</definition>
        <argsstring>(const UsdGeomImageable &amp;geom, const TfToken &amp;subsetName, const TfToken &amp;elementType, const VtIntArray &amp;indices, const TfToken &amp;familyName=TfToken(), const TfToken &amp;familyType=TfToken())</argsstring>
        <name>CreateUniqueGeomSubset</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>subsetName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>elementType</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyName</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyType</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
<para>Creates a new GeomSubset below the given imageable, <computeroutput>geom</computeroutput> with the given name, <computeroutput>subsetName</computeroutput>, element type, <computeroutput>elementType</computeroutput> and <computeroutput>indices</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If a subset named <computeroutput>subsetName</computeroutput> already exists below <computeroutput>geom</computeroutput>, then this creates a new subset by appending a suitable index as suffix to <computeroutput>subsetName</computeroutput> (eg, subsetName_1) to avoid name collisions.</para>
<para>The family type is set / updated on <computeroutput>geom</computeroutput> only if a non-empty value is passed in for <computeroutput>familyType</computeroutput> and <computeroutput>familyName</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a46acf3bef46504c071ab3a54ed4be0c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API std::vector&lt; <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> &gt;</type>
        <definition>static USDGEOM_API std::vector&lt;UsdGeomSubset&gt; GetAllGeomSubsets</definition>
        <argsstring>(const UsdGeomImageable &amp;geom)</argsstring>
        <name>GetAllGeomSubsets</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>Returns all the GeomSubsets defined on the given imageable, <computeroutput>geom</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="328" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a9276aa3d6fde871af3a5cbd71bd45715" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API std::vector&lt; <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> &gt;</type>
        <definition>static USDGEOM_API std::vector&lt;UsdGeomSubset&gt; GetGeomSubsets</definition>
        <argsstring>(const UsdGeomImageable &amp;geom, const TfToken &amp;elementType=TfToken(), const TfToken &amp;familyName=TfToken())</argsstring>
        <name>GetGeomSubsets</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>elementType</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyName</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns all the GeomSubsets of the given <computeroutput>elementType</computeroutput> belonging to the specified family, <computeroutput>familyName</computeroutput> on the given imageable, <computeroutput>geom</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>elementType</computeroutput> is empty, then subsets containing all element types are returned. If <computeroutput>familyName</computeroutput> is left empty, then all subsets of the specified <computeroutput>elementType</computeroutput> will be returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a95f14a041419aedc7fec022e5b4d3b00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_tf_token_1a1cb3dc318038c0a24f3c39427b05b977" kindref="member">TfToken::Set</ref></type>
        <definition>static USDGEOM_API TfToken::Set GetAllGeomSubsetFamilyNames</definition>
        <argsstring>(const UsdGeomImageable &amp;geom)</argsstring>
        <name>GetAllGeomSubsetFamilyNames</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <briefdescription>
<para>Returns the names of all the families of GeomSubsets defined on the given imageable, <computeroutput>geom</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1ad0c186e761984f80850e2e820f5ac6f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool SetFamilyType</definition>
        <argsstring>(const UsdGeomImageable &amp;geom, const TfToken &amp;familyName, const TfToken &amp;familyType)</argsstring>
        <name>SetFamilyType</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyName</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyType</declname>
        </param>
        <briefdescription>
<para>This method is used to encode the type of family that the GeomSubsets on the given geometric prim <computeroutput>geom</computeroutput>, with the given family name, <computeroutput>familyName</computeroutput> belong to. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_usd_geom_subset_1af278c1bd6603a66ffcb1a033f395a876" kindref="member">UsdGeomSubset::GetFamilyNameAttr</ref> for the possible values for <computeroutput>familyType</computeroutput>.</para>
<para>When a family of GeomSubsets is tagged as a UsdGeomTokens-&gt;partition or UsdGeomTokens-&gt;nonOverlapping, the validity of the data (i.e. mutual exclusivity and/or wholeness) is not enforced by the authoring APIs. Use <ref refid="class_usd_geom_subset_1a4b4369228e501996f6a692aec34f9b33" kindref="member">ValidateFamily()</ref> to validate the data in a family of GeomSubsets.</para>
<para><simplesect kind="return"><para>Returns false upon failure to create or set the appropriate attribute on <computeroutput>geom</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a541b961512dfe7ccc62d1f7a0159dcf8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>static USDGEOM_API TfToken GetFamilyType</definition>
        <argsstring>(const UsdGeomImageable &amp;geom, const TfToken &amp;familyName)</argsstring>
        <name>GetFamilyType</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyName</declname>
        </param>
        <briefdescription>
<para>Returns the type of family that the GeomSubsets on the given geometric prim <computeroutput>geom</computeroutput>, with the given family name, <computeroutput>familyName</computeroutput> belong to. </para>
        </briefdescription>
        <detaileddescription>
<para>This only returns the token that&apos;s encoded on <computeroutput>geom</computeroutput> and does not perform any actual validation on the family of GeomSubsets. Please use <ref refid="class_usd_geom_subset_1a4b4369228e501996f6a692aec34f9b33" kindref="member">ValidateFamily()</ref> for such validation.</para>
<para>When familyType is not set on <computeroutput>geom</computeroutput>, the fallback value UsdTokens-&gt;unrestricted is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a68e2168be7af6f8681320f1207988e38" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API VtIntArray</type>
        <definition>static USDGEOM_API VtIntArray GetUnassignedIndices</definition>
        <argsstring>(const std::vector&lt; UsdGeomSubset &gt; &amp;subsets, const size_t elementCount, const UsdTimeCode &amp;time=UsdTimeCode::EarliestTime())</argsstring>
        <name>GetUnassignedIndices</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> &gt; &amp;</type>
          <declname>subsets</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>elementCount</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> &amp;</type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a4f38fe7a93e620b03fdb37616a4d88b9" kindref="member">UsdTimeCode::EarliestTime</ref>()</defval>
        </param>
        <briefdescription>
<para>Utility for getting the list of indices that are not assigned to any of the GeomSubsets in <computeroutput>subsets</computeroutput> at the timeCode, <computeroutput>time</computeroutput>, given the element count (total number of indices in the array being subdivided), <computeroutput>elementCount</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a4d5c834b7ed4aab8c674eda183d2ba4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool ValidateSubsets</definition>
        <argsstring>(const std::vector&lt; UsdGeomSubset &gt; &amp;subsets, const size_t elementCount, const TfToken &amp;familyType, std::string *const reason)</argsstring>
        <name>ValidateSubsets</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_usd_geom_subset" kindref="compound">UsdGeomSubset</ref> &gt; &amp;</type>
          <declname>subsets</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>elementCount</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyType</declname>
        </param>
        <param>
          <type>std::string *const</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Validates the data in the given set of GeomSubsets, <computeroutput>subsets</computeroutput>, given the total number of elements in the array being subdivided, <computeroutput>elementCount</computeroutput> and the <computeroutput>familyType</computeroutput> that the subsets belong to. </para>
        </briefdescription>
        <detaileddescription>
<para>For proper validation of indices in <computeroutput>subsets</computeroutput>, all of the GeomSubsets must have the same &apos;elementType&apos;.</para>
<para>If one or more subsets contain invalid data, then false is returned and <computeroutput>reason</computeroutput> is populated with a string explaining the reason why it is invalid.</para>
<para>The python version of this method returns a tuple containing a (bool, string), where the bool has the validity of the subsets and the string contains the reason (if they&apos;re invalid). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1a4b4369228e501996f6a692aec34f9b33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool ValidateFamily</definition>
        <argsstring>(const UsdGeomImageable &amp;geom, const TfToken &amp;elementType, const TfToken &amp;familyName, std::string *const reason)</argsstring>
        <name>ValidateFamily</name>
        <param>
          <type>const <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref> &amp;</type>
          <declname>geom</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>elementType</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>familyName</declname>
        </param>
        <param>
          <type>std::string *const</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>Validates whether the family of subsets identified by the given <computeroutput>familyName</computeroutput> and <computeroutput>elementType</computeroutput> on the given imageable, <computeroutput>geom</computeroutput> contain valid data. </para>
        </briefdescription>
        <detaileddescription>
<para>If the family is designated as a partition or as non-overlapping using <ref refid="class_usd_geom_subset_1ad0c186e761984f80850e2e820f5ac6f9" kindref="member">SetFamilyType()</ref>, then the validity of the data is checked. If the familyType is &quot;unrestricted&quot;, then this performs only bounds checking of the values in the &quot;indices&quot; arrays.</para>
<para>If <computeroutput>reason</computeroutput> is not NULL, then it is populated with a string explaining why the family is invalid, if it is invalid.</para>
<para>The python version of this method returns a tuple containing a (bool, string), where the bool has the validity of the family and the string contains the reason (if it&apos;s invalid). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="431" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_geom_subset_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDGEOM_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_typed_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="165" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_geom_subset_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDGEOM_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_subset_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="173" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_geom_subset_1a1e6b9f0da5624212c58019b749c21286" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDGEOM_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_typed_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/subset.h" line="177" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encodes a subset of a piece of geometry (i.e. </para>
    </briefdescription>
    <detaileddescription>
<para>a <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref>) as a set of indices. Currently only supports encoding of face-subsets and point-subsets, but could be extended in the future to support subsets representing edges, segments, tetrahedrons, etc.</para>
<para>To apply to a geometric prim, a GeomSubset prim must be the prim&apos;s direct child in namespace, and possess a concrete defining specifier (i.e. def). This restriction makes it easy and efficient to discover subsets of a prim. We might want to relax this restriction if it&apos;s common to have multiple <bold>families</bold> of subsets on a gprim and if it&apos;s useful to be able to organize subsets belonging to a family under a common scope. See &apos;familyName&apos; attribute for more info on defining a family of subsets.</para>
<para>Note that a GeomSubset isn&apos;t an imageable (i.e. doesn&apos;t derive from <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref>). So, you can&apos;t author <bold>visibility</bold> for it or override its <bold>purpose</bold>.</para>
<para>Materials are bound to GeomSubsets just as they are for regular geometry using API available in UsdShade (UsdShadeMaterial::Bind).</para>
<para>For any described attribute <emphasis>Fallback</emphasis> <emphasis>Value</emphasis> or <emphasis>Allowed</emphasis> <emphasis>Values</emphasis> below that are text/tokens, the actual token is published and defined in <ref refid="usd_2usd_geom_2tokens_8h_1ad9e3544e015f99ed697804fd6bfe1a88" kindref="member">UsdGeomTokens</ref>. So to set an attribute to the value &quot;rightHanded&quot;, use UsdGeomTokens-&gt;rightHanded as the value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6489">
        <label>UsdGeomSubset</label>
        <link refid="class_usd_geom_subset"/>
        <childnode refid="6490" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6490">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6491" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6491">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6492">
        <label>UsdGeomSubset</label>
        <link refid="class_usd_geom_subset"/>
        <childnode refid="6493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6493">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6494">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdGeom/subset.h" line="86" column="1" bodyfile="pxr/usd/usdGeom/subset.h" bodystart="85" bodyend="436"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdGeomSubset</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_geom_subset_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" virt="virtual"><scope>UsdGeomSubset</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdGeomSubset</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_geom_subset_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" virt="non-virtual"><scope>UsdGeomSubset</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_geom_subset_1a1e6b9f0da5624212c58019b749c21286" prot="private" virt="virtual"><scope>UsdGeomSubset</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdGeomSubset</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdGeomSubset</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_geom_subset_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdGeomSubset</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_subset_1a22a41254b002dadf889093dc31155368" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>CreateElementTypeAttr</name></member>
      <member refid="class_usd_geom_subset_1a99dd3efb13e02e9cf7174abfb5596d4c" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>CreateFamilyNameAttr</name></member>
      <member refid="class_usd_geom_subset_1a5a2ec15c1a98596d8dbe8479d834ab1e" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>CreateGeomSubset</name></member>
      <member refid="class_usd_geom_subset_1aa2de5daeb9b9e0739c69a985df045c9b" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>CreateIndicesAttr</name></member>
      <member refid="class_usd_geom_subset_1aa9c5ba37a4cc13e9c980df55407a60c7" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>CreateUniqueGeomSubset</name></member>
      <member refid="class_usd_geom_subset_1a5293070a94b59f941c0d938d457ea50a" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>Define</name></member>
      <member refid="class_usd_geom_subset_1a4118ad483bac2d76d42b218959f5644a" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>Get</name></member>
      <member refid="class_usd_geom_subset_1a95f14a041419aedc7fec022e5b4d3b00" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetAllGeomSubsetFamilyNames</name></member>
      <member refid="class_usd_geom_subset_1a46acf3bef46504c071ab3a54ed4be0c1" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetAllGeomSubsets</name></member>
      <member refid="class_usd_geom_subset_1a74ba2657851f6c0884e72b4a762d1607" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetElementTypeAttr</name></member>
      <member refid="class_usd_geom_subset_1af278c1bd6603a66ffcb1a033f395a876" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetFamilyNameAttr</name></member>
      <member refid="class_usd_geom_subset_1a541b961512dfe7ccc62d1f7a0159dcf8" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetFamilyType</name></member>
      <member refid="class_usd_geom_subset_1a9276aa3d6fde871af3a5cbd71bd45715" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetGeomSubsets</name></member>
      <member refid="class_usd_geom_subset_1adc3cf34c4a7aa5689619d84474b55cfa" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetIndicesAttr</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_subset_1ae40ae43320babff8a254a3a8107a255a" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_geom_subset_1a68e2168be7af6f8681320f1207988e38" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>GetUnassignedIndices</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>operator bool</name></member>
      <member refid="class_usd_geom_subset_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_subset_1ad0c186e761984f80850e2e820f5ac6f9" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>SetFamilyType</name></member>
      <member refid="class_usd_geom_subset_1a6973626deb3d11d798b23462e1121f5e" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdGeomSubset</name></member>
      <member refid="class_usd_geom_subset_1a1f5bb67f1a2f53279f42279a0a307cd5" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdGeomSubset</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_geom_subset_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>UsdTyped</name></member>
      <member refid="class_usd_geom_subset_1a4b4369228e501996f6a692aec34f9b33" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>ValidateFamily</name></member>
      <member refid="class_usd_geom_subset_1a4d5c834b7ed4aab8c674eda183d2ba4b" prot="public" virt="non-virtual"><scope>UsdGeomSubset</scope><name>ValidateSubsets</name></member>
      <member refid="class_usd_geom_subset_1afed537ffff9b27e69177c833266f6c21" prot="public" virt="virtual"><scope>UsdGeomSubset</scope><name>~UsdGeomSubset</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdGeomSubset</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdGeomSubset</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
