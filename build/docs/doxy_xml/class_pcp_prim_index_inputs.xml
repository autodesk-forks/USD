<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_prim_index_inputs" kind="class" language="C++" prot="public">
    <compoundname>PcpPrimIndexInputs</compoundname>
    <includes refid="prim_index_8h" local="no">primIndex.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_pcp_prim_index_inputs_1a006884c57fc666f8f69292cd68497d66" prot="public" static="no">
        <type>std::unordered_set&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, SdfPath::Hash &gt;</type>
        <definition>using PayloadSet =  std::unordered_set&lt;SdfPath, SdfPath::Hash&gt;</definition>
        <argsstring></argsstring>
        <name>PayloadSet</name>
        <briefdescription>
<para>Set of paths to prims that should have their payloads included during composition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="377" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1ae45c9303d7d894fc1a213e049dd584fc" prot="public" static="no" mutable="no">
        <type><ref refid="class_pcp_cache" kindref="compound">PcpCache</ref> *</type>
        <definition>PcpCache* cache</definition>
        <argsstring></argsstring>
        <name>cache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="410" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1afac90b56c053c22b54aef15453bb394f" prot="public" static="no" mutable="no">
        <type>const <ref refid="usd_2pcp_2types_8h_1a72ae489ff9c2601b5f289baf87cece28" kindref="member">PcpVariantFallbackMap</ref> *</type>
        <definition>const PcpVariantFallbackMap* variantFallbacks</definition>
        <argsstring></argsstring>
        <name>variantFallbacks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="411" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="411" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1a3bef282d2d63457d06c0f305764ff5d4" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_pcp_prim_index_inputs_1a006884c57fc666f8f69292cd68497d66" kindref="member">PayloadSet</ref> *</type>
        <definition>const PayloadSet* includedPayloads</definition>
        <argsstring></argsstring>
        <name>includedPayloads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="412" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="412" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1a80bb13a0ccd45e3216382d9b6241d71e" prot="public" static="no" mutable="no">
        <type>tbb::spin_rw_mutex *</type>
        <definition>tbb::spin_rw_mutex* includedPayloadsMutex</definition>
        <argsstring></argsstring>
        <name>includedPayloadsMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="413" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="413" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1a66ef01e12752a701fc0a847abc47cc87" prot="public" static="no" mutable="no">
        <type>std::function&lt; bool(const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;)&gt;</type>
        <definition>std::function&lt;bool (const SdfPath &amp;)&gt; includePayloadPredicate</definition>
        <argsstring></argsstring>
        <name>includePayloadPredicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="414" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1a3c223bdc57438f309e21fe293aace1de" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_pcp_prim_index" kindref="compound">PcpPrimIndex</ref> *</type>
        <definition>const PcpPrimIndex* parentIndex</definition>
        <argsstring></argsstring>
        <name>parentIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="415" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="415" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1acb4d939ce3fd0e393a3368655d2e2af3" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string fileFormatTarget</definition>
        <argsstring></argsstring>
        <name>fileFormatTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="416" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1a478e80bdf6f085e96c7e183166c473aa" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool cull</definition>
        <argsstring></argsstring>
        <name>cull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="417" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_prim_index_inputs_1af6c5910ea0542fbe24e7c610a5eb364e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool usd</definition>
        <argsstring></argsstring>
        <name>usd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="418" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="418" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1a92e04e213ecd71e3161b0f0b88858288" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PcpPrimIndexInputs</definition>
        <argsstring>()</argsstring>
        <name>PcpPrimIndexInputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="351" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="351" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1a820865ab119dbbce4c97664df8867d29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsEquivalentTo</definition>
        <argsstring>(const PcpPrimIndexInputs &amp;params) const</argsstring>
        <name>IsEquivalentTo</name>
        <param>
          <type>const <ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Returns true if prim index computations using this parameters object would be equivalent to computations using <computeroutput>params</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="363" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1aeaaa9a56dffbaed3ff8098b84c9683a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; Cache</definition>
        <argsstring>(PcpCache *cache_)</argsstring>
        <name>Cache</name>
        <param>
          <type><ref refid="class_pcp_cache" kindref="compound">PcpCache</ref> *</type>
          <declname>cache_</declname>
        </param>
        <briefdescription>
<para>If supplied, the given <ref refid="class_pcp_cache" kindref="compound">PcpCache</ref> will be used where possible to compute needed intermediate results. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="367" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="367" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1ac799ff28b1457f683f040eea3a8d9ee5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; VariantFallbacks</definition>
        <argsstring>(const PcpVariantFallbackMap *map)</argsstring>
        <name>VariantFallbacks</name>
        <param>
          <type>const <ref refid="usd_2pcp_2types_8h_1a72ae489ff9c2601b5f289baf87cece28" kindref="member">PcpVariantFallbackMap</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
<para>Ordered list of variant names to use for the &quot;standin&quot; variant set if there is no authored opinion in scene description. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="372" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="372" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1a0f272d25c8be9fc4bb3d68d2979b5f75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; IncludedPayloads</definition>
        <argsstring>(const PayloadSet *payloadSet)</argsstring>
        <name>IncludedPayloads</name>
        <param>
          <type>const <ref refid="class_pcp_prim_index_inputs_1a006884c57fc666f8f69292cd68497d66" kindref="member">PayloadSet</ref> *</type>
          <declname>payloadSet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="378" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="378" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1a6277af1c891b0236e898b46412e2d923" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; IncludedPayloadsMutex</definition>
        <argsstring>(tbb::spin_rw_mutex *mutex)</argsstring>
        <name>IncludedPayloadsMutex</name>
        <param>
          <type>tbb::spin_rw_mutex *</type>
          <declname>mutex</declname>
        </param>
        <briefdescription>
<para>Optional mutex for accessing includedPayloads. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="382" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="382" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1ad6a5d0bb08246010d60f34e313f2a2ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; IncludePayloadPredicate</definition>
        <argsstring>(std::function&lt; bool(const SdfPath &amp;)&gt; predicate)</argsstring>
        <name>IncludePayloadPredicate</name>
        <param>
          <type>std::function&lt; bool(const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;)&gt;</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
<para>Optional predicate evaluated when a not-yet-included payload is discovered while indexing. </para>
        </briefdescription>
        <detaileddescription>
<para>If the predicate returns true, indexing includes the payload and sets the includedDiscoveredPayload bit in the outputs. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="389" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1a849002766ac88932ffc863a855dbdfbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; Cull</definition>
        <argsstring>(bool doCulling=true)</argsstring>
        <name>Cull</name>
        <param>
          <type>bool</type>
          <declname>doCulling</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Whether subtrees that contribute no opinions should be culled from the index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="395" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="395" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1aa55e5af02ff66b5a874dc1ac096cb9e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; USD</definition>
        <argsstring>(bool doUSD=true)</argsstring>
        <name>USD</name>
        <param>
          <type>bool</type>
          <declname>doUSD</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Whether the prim stack should be computed, and whether relocates, inherits, permissions, symmetry, or payloads should be considered during prim index computation,. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="401" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="401" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_prim_index_inputs_1a0095b81e9710c9c45ca0d134b2ef7e79" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_pcp_prim_index_inputs" kindref="compound">PcpPrimIndexInputs</ref> &amp;</type>
        <definition>PcpPrimIndexInputs&amp; FileFormatTarget</definition>
        <argsstring>(const std::string &amp;target)</argsstring>
        <name>FileFormatTarget</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>The file format target for scene description layers encountered during prim index computation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/primIndex.h" line="406" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="406" bodyend="407"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Inputs for the prim indexing procedure. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4763">
        <label>PcpPrimIndexInputs</label>
        <link refid="class_pcp_prim_index_inputs"/>
        <childnode refid="4764" relation="usage">
          <edgelabel>cache</edgelabel>
        </childnode>
        <childnode refid="4765" relation="usage">
          <edgelabel>parentIndex</edgelabel>
        </childnode>
      </node>
      <node id="4764">
        <label>PcpCache</label>
        <link refid="class_pcp_cache"/>
      </node>
      <node id="4765">
        <label>PcpPrimIndex</label>
        <link refid="class_pcp_prim_index"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/pcp/primIndex.h" line="349" column="1" bodyfile="pxr/usd/pcp/primIndex.h" bodystart="349" bodyend="419"/>
    <listofallmembers>
      <member refid="class_pcp_prim_index_inputs_1ae45c9303d7d894fc1a213e049dd584fc" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>cache</name></member>
      <member refid="class_pcp_prim_index_inputs_1aeaaa9a56dffbaed3ff8098b84c9683a8" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>Cache</name></member>
      <member refid="class_pcp_prim_index_inputs_1a478e80bdf6f085e96c7e183166c473aa" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>cull</name></member>
      <member refid="class_pcp_prim_index_inputs_1a849002766ac88932ffc863a855dbdfbf" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>Cull</name></member>
      <member refid="class_pcp_prim_index_inputs_1acb4d939ce3fd0e393a3368655d2e2af3" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>fileFormatTarget</name></member>
      <member refid="class_pcp_prim_index_inputs_1a0095b81e9710c9c45ca0d134b2ef7e79" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>FileFormatTarget</name></member>
      <member refid="class_pcp_prim_index_inputs_1a3bef282d2d63457d06c0f305764ff5d4" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>includedPayloads</name></member>
      <member refid="class_pcp_prim_index_inputs_1a0f272d25c8be9fc4bb3d68d2979b5f75" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>IncludedPayloads</name></member>
      <member refid="class_pcp_prim_index_inputs_1a6277af1c891b0236e898b46412e2d923" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>IncludedPayloadsMutex</name></member>
      <member refid="class_pcp_prim_index_inputs_1a80bb13a0ccd45e3216382d9b6241d71e" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>includedPayloadsMutex</name></member>
      <member refid="class_pcp_prim_index_inputs_1ad6a5d0bb08246010d60f34e313f2a2ed" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>IncludePayloadPredicate</name></member>
      <member refid="class_pcp_prim_index_inputs_1a66ef01e12752a701fc0a847abc47cc87" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>includePayloadPredicate</name></member>
      <member refid="class_pcp_prim_index_inputs_1a820865ab119dbbce4c97664df8867d29" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>IsEquivalentTo</name></member>
      <member refid="class_pcp_prim_index_inputs_1a3c223bdc57438f309e21fe293aace1de" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>parentIndex</name></member>
      <member refid="class_pcp_prim_index_inputs_1a006884c57fc666f8f69292cd68497d66" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>PayloadSet</name></member>
      <member refid="class_pcp_prim_index_inputs_1a92e04e213ecd71e3161b0f0b88858288" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>PcpPrimIndexInputs</name></member>
      <member refid="class_pcp_prim_index_inputs_1af6c5910ea0542fbe24e7c610a5eb364e" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>usd</name></member>
      <member refid="class_pcp_prim_index_inputs_1aa55e5af02ff66b5a874dc1ac096cb9e4" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>USD</name></member>
      <member refid="class_pcp_prim_index_inputs_1ac799ff28b1457f683f040eea3a8d9ee5" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>VariantFallbacks</name></member>
      <member refid="class_pcp_prim_index_inputs_1afac90b56c053c22b54aef15453bb394f" prot="public" virt="non-virtual"><scope>PcpPrimIndexInputs</scope><name>variantFallbacks</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
