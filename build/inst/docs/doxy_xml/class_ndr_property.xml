<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_ndr_property" kind="class" language="C++" prot="public">
    <compoundname>NdrProperty</compoundname>
    <derivedcompoundref refid="class_sdr_shader_property" prot="public" virt="non-virtual">SdrShaderProperty</derivedcompoundref>
    <includes refid="ndr_2property_8h" local="no">property.h</includes>
      <sectiondef kind="user-defined">
      <header>The Basics</header>
      <memberdef kind="function" id="class_ndr_property_1adcca7e656f249c40dd0c26621d8cf452" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>NDR_API const TfToken&amp; GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Gets the name of the property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="74" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1ae889bdab396b859efa5d6b0084793112" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>NDR_API const TfToken&amp; GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Gets the type of the property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="78" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1aa450d3be5b8d50d7a85b94bb71e98924" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
        <definition>NDR_API const VtValue&amp; GetDefaultValue</definition>
        <argsstring>() const</argsstring>
        <name>GetDefaultValue</name>
        <briefdescription>
<para>Gets this property&apos;s default value associated with the type of the property. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_ndr_property_1ae889bdab396b859efa5d6b0084793112" kindref="member">GetType()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="85" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1a3ffdc73c7885a8d4bd16e86e93233601" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API bool</type>
        <definition>NDR_API bool IsOutput</definition>
        <argsstring>() const</argsstring>
        <name>IsOutput</name>
        <briefdescription>
<para>Whether this property is an output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="89" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1af05a671118e51d26a292ae9b45db3198" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API bool</type>
        <definition>NDR_API bool IsArray</definition>
        <argsstring>() const</argsstring>
        <name>IsArray</name>
        <briefdescription>
<para>Whether this property&apos;s type is an array type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="93" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1aab8cd6b193568f59eea66f2f018725fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API bool</type>
        <definition>NDR_API bool IsDynamicArray</definition>
        <argsstring>() const</argsstring>
        <name>IsDynamicArray</name>
        <briefdescription>
<para>Whether this property&apos;s array type is dynamically-sized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="97" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1ae22e8bcaf96b1115005bf39e5f5faec5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>NDR_API int</type>
        <definition>NDR_API int GetArraySize</definition>
        <argsstring>() const</argsstring>
        <name>GetArraySize</name>
        <briefdescription>
<para>Gets this property&apos;s array size. </para>
        </briefdescription>
        <detaileddescription>
<para>If this property is a fixed-size array type, the array size is returned. In the case of a dynamically-sized array, this method returns the array size that the parser reports, and should not be relied upon to be accurate. A parser may report -1 for the array size, for example, to indicate a dynamically-sized array. For types that are not a fixed-size array or dynamic array, this returns 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="108" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1a81c8a5b9c158bfd6bb2682c469c44fd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>NDR_API std::string</type>
        <definition>virtual NDR_API std::string GetInfoString</definition>
        <argsstring>() const</argsstring>
        <name>GetInfoString</name>
        <briefdescription>
<para>Gets a string with basic information about this property. </para>
        </briefdescription>
        <detaileddescription>
<para>Helpful for things like adding this property to a log. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Metadata</header>
      <description><para>The metadata returned here is a direct result of what the parser plugin is able to determine about the node.</para>
<para>See the documentation for a specific parser plugin to get help on what the parser is looking for to populate these values. </para>
</description>
      <memberdef kind="function" id="class_ndr_property_1a75e64878834c66af8bdb03e94118b033" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>NDR_API const NdrTokenMap &amp;</type>
        <definition>virtual NDR_API const NdrTokenMap&amp; GetMetadata</definition>
        <argsstring>() const</argsstring>
        <name>GetMetadata</name>
        <briefdescription>
<para>All of the metadata that came from the parse process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="127" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="127" bodyend="127"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Connection Information</header>
      <memberdef kind="function" id="class_ndr_property_1a55ad4a609ccbb167054a1c404ab6da17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>NDR_API bool</type>
        <definition>virtual NDR_API bool IsConnectable</definition>
        <argsstring>() const</argsstring>
        <name>IsConnectable</name>
        <reimplementedby refid="class_sdr_shader_property_1a2133b1d45d85afaa6769d11469cc374d">IsConnectable</reimplementedby>
        <briefdescription>
<para>Whether this property can be connected to other properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1a617a7ceb0475600f9af0d30472b2ec4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>NDR_API bool</type>
        <definition>virtual NDR_API bool CanConnectTo</definition>
        <argsstring>(const NdrProperty &amp;other) const</argsstring>
        <name>CanConnectTo</name>
        <reimplementedby refid="class_sdr_shader_property_1a299b371d0fe9adc78629f7aa211bf308">CanConnectTo</reimplementedby>
        <param>
          <type>const <ref refid="class_ndr_property" kindref="compound">NdrProperty</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Determines if this property can be connected to the specified property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Utilities</header>
      <memberdef kind="function" id="class_ndr_property_1a745131719893cb9b0a0efbf0e97277cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>NDR_API const NdrSdfTypeIndicator</type>
        <definition>virtual NDR_API const NdrSdfTypeIndicator GetTypeAsSdfType</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeAsSdfType</name>
        <reimplementedby refid="class_sdr_shader_property_1aa309fc39ada3ee61360607118f4fae65">GetTypeAsSdfType</reimplementedby>
        <briefdescription>
<para>Converts the property&apos;s type from <computeroutput><ref refid="class_ndr_property_1ae889bdab396b859efa5d6b0084793112" kindref="member">GetType()</ref></computeroutput> into a <computeroutput><ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Two scenarios can result: an exact mapping from property type to Sdf type, and an inexact mapping. In the first scenario, the first element in the pair will be the cleanly-mapped Sdf type, and the second element, a <ref refid="class_tf_token" kindref="compound">TfToken</ref>, will be empty. In the second scenario, the Sdf type will be set to <computeroutput>Token</computeroutput> to indicate an unclean mapping, and the second element will be set to the original type returned by <computeroutput><ref refid="class_ndr_property_1ae889bdab396b859efa5d6b0084793112" kindref="member">GetType()</ref></computeroutput>.</para>
<para>This base property class is generic and cannot know ahead of time how to perform this mapping reliably, thus it will always fall into the second scenario. It is up to specialized properties to perform the mapping.</para>
<para><simplesect kind="see"><para><ref refid="class_ndr_property_1a43445128f92d6e0e80eb02d6d0a9f432" kindref="member">GetDefaultValueAsSdfType()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1a43445128f92d6e0e80eb02d6d0a9f432" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>NDR_API const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
        <definition>virtual NDR_API const VtValue&amp; GetDefaultValueAsSdfType</definition>
        <argsstring>() const</argsstring>
        <name>GetDefaultValueAsSdfType</name>
        <reimplementedby refid="class_sdr_shader_property_1afaaa146ff9f5bc4f85dfe5be8698ba03">GetDefaultValueAsSdfType</reimplementedby>
        <briefdescription>
<para>Provides default value corresponding to the <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> returned by GetTypeAsSdfType. </para>
        </briefdescription>
        <detaileddescription>
<para>Derived classes providing an implementation for GetTypeAsSdfType should also provide an implementation for this.</para>
<para><simplesect kind="see"><para><ref refid="class_ndr_property_1a745131719893cb9b0a0efbf0e97277cb" kindref="member">GetTypeAsSdfType()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="174" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_ndr_property_1a073299b165fbc77310a8ada4902f85f8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="181" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1ace359eebf6de802073494d39d7423580" prot="protected" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="182" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1a107f3227cf974400e5b650c2db1e2224" prot="protected" static="no" mutable="no">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue _defaultValue</definition>
        <argsstring></argsstring>
        <name>_defaultValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="183" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1a6d8686a17ceb19d603d6633abd968c99" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isOutput</definition>
        <argsstring></argsstring>
        <name>_isOutput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="184" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1a78298368cd7a3bb4682b59b94f97f0e3" prot="protected" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _arraySize</definition>
        <argsstring></argsstring>
        <name>_arraySize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="185" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1a8fe9bf8d2b1046de5e715a7c6dfa3d67" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isDynamicArray</definition>
        <argsstring></argsstring>
        <name>_isDynamicArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="186" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1af59908923a0b2695a6a47a987d9c6423" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isConnectable</definition>
        <argsstring></argsstring>
        <name>_isConnectable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="187" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_ndr_property_1a27c7adcfc5510ce6b0e8962c31aaef5e" prot="protected" static="no" mutable="no">
        <type>NdrTokenMap</type>
        <definition>NdrTokenMap _metadata</definition>
        <argsstring></argsstring>
        <name>_metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="188" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ndr_property_1aaad0022460659703706bb6246225ddc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>NDR_API</type>
        <definition>NDR_API NdrProperty</definition>
        <argsstring>(const TfToken &amp;name, const TfToken &amp;type, const VtValue &amp;defaultValue, bool isOutput, size_t arraySize, bool isDynamicArray, const NdrTokenMap &amp;metadata)</argsstring>
        <name>NdrProperty</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isOutput</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>arraySize</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isDynamicArray</declname>
        </param>
        <param>
          <type>const NdrTokenMap &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_ndr_property_1a99c3f6a5a2c093b60fb67b3cfa792ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>NDR_API</type>
        <definition>virtual NDR_API ~NdrProperty</definition>
        <argsstring>()</argsstring>
        <name>~NdrProperty</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_ndr_property_1a0f62ad9d8e921e0c14c13ae3a7c9cc6e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_ndr_property" kindref="compound">NdrProperty</ref> &amp;</type>
        <definition>NdrProperty&amp; operator=</definition>
        <argsstring>(const NdrProperty &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_ndr_property" kindref="compound">NdrProperty</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ndr/property.h" line="179" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a property (input or output) that is part of a <computeroutput><ref refid="class_ndr_node" kindref="compound">NdrNode</ref></computeroutput> instance. </para>
    </briefdescription>
    <detaileddescription>
<para>A property must have a name and type, but may also specify a host of additional metadata. Instances can also be queried to determine if another <computeroutput><ref refid="class_ndr_property" kindref="compound">NdrProperty</ref></computeroutput> instance can be connected to it.</para>
<para>In almost all cases, this class will not be used directly. More specialized properties can be created that derive from <computeroutput><ref refid="class_ndr_property" kindref="compound">NdrProperty</ref></computeroutput>; those specialized properties can add their own domain-specific data and methods. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4315">
        <label>SdrShaderProperty</label>
        <link refid="class_sdr_shader_property"/>
        <childnode refid="4314" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4314">
        <label>NdrProperty</label>
        <link refid="class_ndr_property"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4317">
        <label>VtValue</label>
        <link refid="class_vt_value"/>
      </node>
      <node id="4318">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="4316">
        <label>NdrProperty</label>
        <link refid="class_ndr_property"/>
        <childnode refid="4317" relation="usage">
          <edgelabel>_defaultValue</edgelabel>
        </childnode>
        <childnode refid="4318" relation="usage">
          <edgelabel>_type</edgelabel>
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/ndr/property.h" line="51" column="1" bodyfile="pxr/usd/ndr/property.h" bodystart="50" bodyend="189"/>
    <listofallmembers>
      <member refid="class_ndr_property_1a78298368cd7a3bb4682b59b94f97f0e3" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_arraySize</name></member>
      <member refid="class_ndr_property_1a107f3227cf974400e5b650c2db1e2224" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_defaultValue</name></member>
      <member refid="class_ndr_property_1af59908923a0b2695a6a47a987d9c6423" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_isConnectable</name></member>
      <member refid="class_ndr_property_1a8fe9bf8d2b1046de5e715a7c6dfa3d67" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_isDynamicArray</name></member>
      <member refid="class_ndr_property_1a6d8686a17ceb19d603d6633abd968c99" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_isOutput</name></member>
      <member refid="class_ndr_property_1a27c7adcfc5510ce6b0e8962c31aaef5e" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_metadata</name></member>
      <member refid="class_ndr_property_1a073299b165fbc77310a8ada4902f85f8" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_name</name></member>
      <member refid="class_ndr_property_1ace359eebf6de802073494d39d7423580" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>_type</name></member>
      <member refid="class_ndr_property_1a617a7ceb0475600f9af0d30472b2ec4e" prot="public" virt="virtual"><scope>NdrProperty</scope><name>CanConnectTo</name></member>
      <member refid="class_ndr_property_1ae22e8bcaf96b1115005bf39e5f5faec5" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>GetArraySize</name></member>
      <member refid="class_ndr_property_1aa450d3be5b8d50d7a85b94bb71e98924" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>GetDefaultValue</name></member>
      <member refid="class_ndr_property_1a43445128f92d6e0e80eb02d6d0a9f432" prot="public" virt="virtual"><scope>NdrProperty</scope><name>GetDefaultValueAsSdfType</name></member>
      <member refid="class_ndr_property_1a81c8a5b9c158bfd6bb2682c469c44fd9" prot="public" virt="virtual"><scope>NdrProperty</scope><name>GetInfoString</name></member>
      <member refid="class_ndr_property_1a75e64878834c66af8bdb03e94118b033" prot="public" virt="virtual"><scope>NdrProperty</scope><name>GetMetadata</name></member>
      <member refid="class_ndr_property_1adcca7e656f249c40dd0c26621d8cf452" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>GetName</name></member>
      <member refid="class_ndr_property_1ae889bdab396b859efa5d6b0084793112" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>GetType</name></member>
      <member refid="class_ndr_property_1a745131719893cb9b0a0efbf0e97277cb" prot="public" virt="virtual"><scope>NdrProperty</scope><name>GetTypeAsSdfType</name></member>
      <member refid="class_ndr_property_1af05a671118e51d26a292ae9b45db3198" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>IsArray</name></member>
      <member refid="class_ndr_property_1a55ad4a609ccbb167054a1c404ab6da17" prot="public" virt="virtual"><scope>NdrProperty</scope><name>IsConnectable</name></member>
      <member refid="class_ndr_property_1aab8cd6b193568f59eea66f2f018725fd" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>IsDynamicArray</name></member>
      <member refid="class_ndr_property_1a3ffdc73c7885a8d4bd16e86e93233601" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>IsOutput</name></member>
      <member refid="class_ndr_property_1aaad0022460659703706bb6246225ddc3" prot="public" virt="non-virtual"><scope>NdrProperty</scope><name>NdrProperty</name></member>
      <member refid="class_ndr_property_1a0f62ad9d8e921e0c14c13ae3a7c9cc6e" prot="protected" virt="non-virtual"><scope>NdrProperty</scope><name>operator=</name></member>
      <member refid="class_ndr_property_1a99c3f6a5a2c093b60fb67b3cfa792ab2" prot="public" virt="virtual"><scope>NdrProperty</scope><name>~NdrProperty</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
