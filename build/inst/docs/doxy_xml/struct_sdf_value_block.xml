<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_sdf_value_block" kind="class" language="C++" prot="public">
    <compoundname>SdfValueBlock</compoundname>
    <includes refid="usd_2sdf_2types_8h" local="no">types.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_sdf_value_block_1aa009682b1edc2255d39f956333f3c82e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const SdfValueBlock &amp;block) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_sdf_value_block" kindref="compound">SdfValueBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/types.h" line="591" column="1" bodyfile="pxr/usd/sdf/types.h" bodystart="591" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_value_block_1a277a50871b4dece3ffb47caf2f57a0af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const SdfValueBlock &amp;block) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_sdf_value_block" kindref="compound">SdfValueBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/types.h" line="592" column="1" bodyfile="pxr/usd/sdf/types.h" bodystart="592" bodyend="592"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_sdf_value_block_1a64a136181a2d19d615b39b98a5d65136" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(const SdfValueBlock &amp;block)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const <ref refid="struct_sdf_value_block" kindref="compound">SdfValueBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/types.h" line="595" column="1" bodyfile="pxr/usd/sdf/types.h" bodystart="595" bodyend="595"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A special value type that can be used to explicitly author an opinion for an attribute&apos;s default value or time sample value that represents having no value. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that this is different from not having a value authored.</para>
<para>One could author such a value in two ways.</para>
<para><programlisting><codeline><highlight class="normal">attribute-&gt;SetDefaultValue(VtValue(SdfValueBlock());</highlight></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline><highlight class="normal">layer-&gt;SetTimeSample(attribute-&gt;GetPath(),<sp/>101,<sp/>VtValue(SdfValueBlock()));</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pxr/usd/sdf/types.h" line="590" column="1" bodyfile="pxr/usd/sdf/types.h" bodystart="590" bodyend="596"/>
    <listofallmembers>
      <member refid="struct_sdf_value_block_1a64a136181a2d19d615b39b98a5d65136" prot="private" virt="non-virtual"><scope>SdfValueBlock</scope><name>hash_value</name></member>
      <member refid="struct_sdf_value_block_1a277a50871b4dece3ffb47caf2f57a0af" prot="public" virt="non-virtual"><scope>SdfValueBlock</scope><name>operator!=</name></member>
      <member refid="struct_sdf_value_block_1aa009682b1edc2255d39f956333f3c82e" prot="public" virt="non-virtual"><scope>SdfValueBlock</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
