<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_animation" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelAnimation</compoundname>
    <basecompoundref refid="class_usd_typed" prot="public" virt="non-virtual">UsdTyped</basecompoundref>
    <includes refid="animation_8h" local="no">animation.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_skel_animation_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa6650141c3d230f8e4e51461e1d9e645" kindref="member">UsdSchemaKind::ConcreteTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="68" column="1" bodyfile="pxr/usd/usdSkel/animation.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_skel_animation_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="146" column="1" bodyfile="pxr/usd/usdSkel/animation.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_animation_1aa341cc575c79cdbd71686a3ffa21af93" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdSkelAnimation</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdSkelAnimation</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_skel_animation_1ab3b972c7087365f13751b0ae3bf664de" kindref="member">UsdSkelAnimation::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="74" column="1" bodyfile="pxr/usd/usdSkel/animation.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a082b5596e9a7dc1cd3935c632044d756" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdSkelAnimation</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdSkelAnimation</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="82" column="1" bodyfile="pxr/usd/usdSkel/animation.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1aab9da57a5028329d656c312f9da55635" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDSKEL_API</type>
        <definition>virtual USDSKEL_API ~UsdSkelAnimation</definition>
        <argsstring>()</argsstring>
        <name>~UsdSkelAnimation</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1aa6bf8297f4aae6de9fbf1b784c524d30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetJointsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetJointsAttr</name>
        <briefdescription>
<para>Array of tokens identifying which joints this animation&apos;s data applies to. </para>
        </briefdescription>
        <detaileddescription>
<para>The tokens for joints correspond to the tokens of Skeleton primitives. The order of the joints as listed here may vary from the order of joints on the Skeleton itself.</para>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform token[] joints</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;TfToken&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;TokenArray   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a9505799804594b8cff6a0a168607348b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateJointsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateJointsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_animation_1aa6bf8297f4aae6de9fbf1b784c524d30" kindref="member">GetJointsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="180" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1ab6ddc18d7b4fa99e70a4a7156c586709" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetTranslationsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetTranslationsAttr</name>
        <briefdescription>
<para>Joint-local translations of all affected joints. </para>
        </briefdescription>
        <detaileddescription>
<para>Array length should match the size of the <emphasis>joints</emphasis> attribute.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float3[] translations</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;GfVec3f&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float3Array   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a4e19a6a716d050a69d47990247537302" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateTranslationsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateTranslationsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_animation_1ab6ddc18d7b4fa99e70a4a7156c586709" kindref="member">GetTranslationsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1ae5b5e56899e900a378ee6affb7897a4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetRotationsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetRotationsAttr</name>
        <briefdescription>
<para>Joint-local unit quaternion rotations of all affected joints, in 32-bit precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Array length should match the size of the <emphasis>joints</emphasis> attribute.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>quatf[] rotations</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;GfQuatf&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;QuatfArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a0eb4110c4350bfc88b2fba5dd9adcea4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateRotationsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateRotationsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_animation_1ae5b5e56899e900a378ee6affb7897a4e" kindref="member">GetRotationsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1afbac799bc27cc87416d3e8b656e1ed9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetScalesAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetScalesAttr</name>
        <briefdescription>
<para>Joint-local scales of all affected joints, in 16 bit precision. </para>
        </briefdescription>
        <detaileddescription>
<para>Array length should match the size of the <emphasis>joints</emphasis> attribute.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>half3[] scales</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;GfVec3h&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Half3Array   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a87e9c92c009407dea21265b46f9c4ca9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateScalesAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateScalesAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_animation_1afbac799bc27cc87416d3e8b656e1ed9a" kindref="member">GetScalesAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a6710e9da273103fea8821250cd60eef4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetBlendShapesAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetBlendShapesAttr</name>
        <briefdescription>
<para>Array of tokens identifying which blend shapes this animation&apos;s data applies to. </para>
        </briefdescription>
        <detaileddescription>
<para>The tokens for blendShapes correspond to the tokens set in the <emphasis>skel:blendShapes</emphasis> binding property of the <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>.</para>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform token[] blendShapes</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;TfToken&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;TokenArray   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1ad0da3dff9aa76fd11f41c7ff853a3354" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateBlendShapesAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateBlendShapesAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_animation_1a6710e9da273103fea8821250cd60eef4" kindref="member">GetBlendShapesAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a27debf99b2752445ac0fb0d08a1fd9cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute GetBlendShapeWeightsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetBlendShapeWeightsAttr</name>
        <briefdescription>
<para>Array of weight values for each blend shape. </para>
        </briefdescription>
        <detaileddescription>
<para>Each weight value is associated with the corresponding blend shape identified within the <emphasis>blendShapes</emphasis> token array, and therefore must have the same length as *blendShapes.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float[] blendShapeWeights</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;float&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;FloatArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1aa40caf1fc41fe464711235245a63cd92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDSKEL_API UsdAttribute CreateBlendShapeWeightsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateBlendShapeWeightsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_skel_animation_1a27debf99b2752445ac0fb0d08a1fd9cb" kindref="member">GetBlendShapeWeightsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="302" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a3ef7674c9147d49c2875559630a7be18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetTransforms</definition>
        <argsstring>(VtMatrix4dArray *xforms, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>GetTransforms</name>
        <param>
          <type>VtMatrix4dArray *</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Convenience method for querying resolved transforms at <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that it is more efficient to query transforms through <ref refid="class_usd_skel_anim_query" kindref="compound">UsdSkelAnimQuery</ref> or <ref refid="class_usd_skel_skeleton_query" kindref="compound">UsdSkelSkeletonQuery</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a0bdf0f733d58eefc30787a0721e1c889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool SetTransforms</definition>
        <argsstring>(const VtMatrix4dArray &amp;xforms, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>SetTransforms</name>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Convenience method for setting an array of transforms. </para>
        </briefdescription>
        <detaileddescription>
<para>The given transforms must be <emphasis>orthogonal</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="326" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_skel_animation_1a83e60aafcd3454c8cd1b5bb86a585296" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDSKEL_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1ab3b972c7087365f13751b0ae3bf664de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref></type>
        <definition>static USDSKEL_API UsdSkelAnimation Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdSkelAnimation(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1a81230ba662e765774cc2a956c1820c95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_usd_skel_animation" kindref="compound">UsdSkelAnimation</ref></type>
        <definition>static USDSKEL_API UsdSkelAnimation Define</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Define</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Attempt to ensure a <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis> adhering to this schema at <computeroutput>path</computeroutput> is defined (according to <ref refid="class_usd_prim_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">UsdPrim::IsDefined()</ref>) on this stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If a prim adhering to this schema at <computeroutput>path</computeroutput> is already defined on this stage, return that prim. Otherwise author an <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> with <emphasis>specifier</emphasis> == <emphasis>SdfSpecifierDef</emphasis> and this schema&apos;s prim type name for the prim at <computeroutput>path</computeroutput> at the current EditTarget. Author <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> s with <computeroutput>specifier</computeroutput> == <emphasis>SdfSpecifierDef</emphasis> and empty typeName at the current EditTarget for any nonexistent, or existing but not <emphasis>Defined</emphasis> ancestors.</para>
<para>The given <emphasis>path</emphasis> must be an absolute prim path that does not contain any variant selections.</para>
<para>If it is impossible to author any of the necessary PrimSpecs, (for example, in case <emphasis>path</emphasis> cannot map to the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>&apos;s namespace) issue an error and return an invalid <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis>.</para>
<para>Note that this method may return a defined prim whose typeName does not specify this schema class, in case a stronger typeName opinion overrides the opinion at the current EditTarget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_skel_animation_1a79df5075439172ba191c1de8af616879" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDSKEL_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDSKEL_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_typed_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_skel_animation_1a258038030b384afda931797f88484054" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDSKEL_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_animation_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="150" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_skel_animation_1a55221575e16049b1dbd6147c54af4f43" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDSKEL_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDSKEL_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_typed_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/animation.h" line="154" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a skel animation, where joint animation is stored in a vectorized form. </para>
    </briefdescription>
    <detaileddescription>
<para>See the extended <ref refid="_usd_skel__schemas_1UsdSkel_SkelAnimation" kindref="member">Skel Animation</ref> documentation for more information. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8212">
        <label>UsdSkelAnimation</label>
        <link refid="class_usd_skel_animation"/>
        <childnode refid="8213" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8213">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8214" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8214">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8215">
        <label>UsdSkelAnimation</label>
        <link refid="class_usd_skel_animation"/>
        <childnode refid="8216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8216">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8217" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8217">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdSkel/animation.h" line="63" column="1" bodyfile="pxr/usd/usdSkel/animation.h" bodystart="62" bodyend="328"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_skel_animation_1a79df5075439172ba191c1de8af616879" prot="protected" virt="virtual"><scope>UsdSkelAnimation</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdSkelAnimation</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_skel_animation_1a258038030b384afda931797f88484054" prot="private" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_skel_animation_1a55221575e16049b1dbd6147c54af4f43" prot="private" virt="virtual"><scope>UsdSkelAnimation</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdSkelAnimation</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_skel_animation_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_skel_animation_1ad0da3dff9aa76fd11f41c7ff853a3354" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>CreateBlendShapesAttr</name></member>
      <member refid="class_usd_skel_animation_1aa40caf1fc41fe464711235245a63cd92" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>CreateBlendShapeWeightsAttr</name></member>
      <member refid="class_usd_skel_animation_1a9505799804594b8cff6a0a168607348b" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>CreateJointsAttr</name></member>
      <member refid="class_usd_skel_animation_1a0eb4110c4350bfc88b2fba5dd9adcea4" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>CreateRotationsAttr</name></member>
      <member refid="class_usd_skel_animation_1a87e9c92c009407dea21265b46f9c4ca9" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>CreateScalesAttr</name></member>
      <member refid="class_usd_skel_animation_1a4e19a6a716d050a69d47990247537302" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>CreateTranslationsAttr</name></member>
      <member refid="class_usd_skel_animation_1a81230ba662e765774cc2a956c1820c95" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>Define</name></member>
      <member refid="class_usd_skel_animation_1ab3b972c7087365f13751b0ae3bf664de" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>Get</name></member>
      <member refid="class_usd_skel_animation_1a6710e9da273103fea8821250cd60eef4" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetBlendShapesAttr</name></member>
      <member refid="class_usd_skel_animation_1a27debf99b2752445ac0fb0d08a1fd9cb" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetBlendShapeWeightsAttr</name></member>
      <member refid="class_usd_skel_animation_1aa6bf8297f4aae6de9fbf1b784c524d30" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetJointsAttr</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetPrim</name></member>
      <member refid="class_usd_skel_animation_1ae5b5e56899e900a378ee6affb7897a4e" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetRotationsAttr</name></member>
      <member refid="class_usd_skel_animation_1afbac799bc27cc87416d3e8b656e1ed9a" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetScalesAttr</name></member>
      <member refid="class_usd_skel_animation_1a83e60aafcd3454c8cd1b5bb86a585296" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_skel_animation_1a3ef7674c9147d49c2875559630a7be18" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetTransforms</name></member>
      <member refid="class_usd_skel_animation_1ab6ddc18d7b4fa99e70a4a7156c586709" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>GetTranslationsAttr</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>operator bool</name></member>
      <member refid="class_usd_skel_animation_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>schemaKind</name></member>
      <member refid="class_usd_skel_animation_1a0bdf0f733d58eefc30787a0721e1c889" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>SetTransforms</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_skel_animation_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_skel_animation_1aa341cc575c79cdbd71686a3ffa21af93" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdSkelAnimation</name></member>
      <member refid="class_usd_skel_animation_1a082b5596e9a7dc1cd3935c632044d756" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdSkelAnimation</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdSkelAnimation</scope><name>UsdTyped</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdSkelAnimation</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_skel_animation_1aab9da57a5028329d656c312f9da55635" prot="public" virt="virtual"><scope>UsdSkelAnimation</scope><name>~UsdSkelAnimation</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdSkelAnimation</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
