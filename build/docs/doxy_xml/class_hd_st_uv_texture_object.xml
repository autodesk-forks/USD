<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_uv_texture_object" kind="class" language="C++" prot="public">
    <compoundname>HdStUvTextureObject</compoundname>
    <basecompoundref refid="class_hd_st_texture_object" prot="public" virt="non-virtual">HdStTextureObject</basecompoundref>
    <derivedcompoundref refid="class_hd_st_asset_uv_texture_object" prot="public" virt="non-virtual">HdStAssetUvTextureObject</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_dynamic_uv_texture_object" prot="public" virt="non-virtual">HdStDynamicUvTextureObject</derivedcompoundref>
    <includes refid="texture_object_8h" local="no">textureObject.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_uv_texture_object_1ac44a61678356dc2c05dc8fecab1ceb0c" prot="private" static="no" mutable="no">
        <type>std::pair&lt; HdWrap, HdWrap &gt;</type>
        <definition>std::pair&lt;HdWrap, HdWrap&gt; _wrapParameters</definition>
        <argsstring></argsstring>
        <name>_wrapParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="194" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_uv_texture_object_1ad5246185f49069f2d07b7d54de887fd6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_hd_st_texture_cpu_data" kindref="compound">HdStTextureCpuData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;HdStTextureCpuData&gt; _cpuData</definition>
        <argsstring></argsstring>
        <name>_cpuData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="195" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_uv_texture_object_1a48a7f66326d9f440aaac7d7be29569ed" prot="private" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle _gpuTexture</definition>
        <argsstring></argsstring>
        <name>_gpuTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="196" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a573f0e58a864a6a402da62508c7820c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~HdStUvTextureObject</definition>
        <argsstring>() override</argsstring>
        <name>~HdStUvTextureObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a0f8a0f2f3d393395bdfdaf350b31dbd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HgiTextureHandle const  &amp;</type>
        <definition>HgiTextureHandle const&amp; GetTexture</definition>
        <argsstring>() const</argsstring>
        <name>GetTexture</name>
        <briefdescription>
<para>Get the handle to the actual GPU resource. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="164" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1acea1437099c8656f01b970a2e9d9e14d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::pair&lt; HdWrap, HdWrap &gt; &amp;</type>
        <definition>const std::pair&lt;HdWrap, HdWrap&gt;&amp; GetWrapParameters</definition>
        <argsstring>() const</argsstring>
        <name>GetWrapParameters</name>
        <briefdescription>
<para>Opinion about wrapS and wrapT parameters from the texture file. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after commit phase. Can be HdWrapNoOpinion. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="171" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a35b02f34208ef57a2e23cb5c85a9733d" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>HDST_API HdTextureType</type>
        <definition>HDST_API HdTextureType GetTextureType</definition>
        <argsstring>() const override final</argsstring>
        <name>GetTextureType</name>
        <reimplements refid="class_hd_st_texture_object_1a78a9450bcebcd13da2e1b124fe241a2b">GetTextureType</reimplements>
        <briefdescription>
<para>Get texture type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a93875e84dc0bbe39a338c244b2a4b010" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStUvTextureObject</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId, HdSt_TextureObjectRegistry *textureObjectRegistry)</argsstring>
        <name>HdStUvTextureObject</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>HdSt_TextureObjectRegistry *</type>
          <declname>textureObjectRegistry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a6f6c689588c3e78139badbf3b45adfe0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SetWrapParameters</definition>
        <argsstring>(const std::pair&lt; HdWrap, HdWrap &gt; &amp;wrapParameters)</argsstring>
        <name>_SetWrapParameters</name>
        <param>
          <type>const std::pair&lt; HdWrap, HdWrap &gt; &amp;</type>
          <declname>wrapParameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1ae43d860efb6e15205ec4bd5a98634cca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SetCpuData</definition>
        <argsstring>(std::unique_ptr&lt; HdStTextureCpuData &gt; &amp;&amp;)</argsstring>
        <name>_SetCpuData</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="class_hd_st_texture_cpu_data" kindref="compound">HdStTextureCpuData</ref> &gt; &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a0e90a006de1d81725757ce9ef72a804b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_st_texture_cpu_data" kindref="compound">HdStTextureCpuData</ref> *</type>
        <definition>HdStTextureCpuData* _GetCpuData</definition>
        <argsstring>() const</argsstring>
        <name>_GetCpuData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1ae234c5328af14bfa133ea43478bbb053" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _CreateTexture</definition>
        <argsstring>(const HgiTextureDesc &amp;desc)</argsstring>
        <name>_CreateTexture</name>
        <param>
          <type>const <ref refid="struct_hgi_texture_desc" kindref="compound">HgiTextureDesc</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1a31f741c42da5e3274fcaaf9339882b70" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GenerateMipmaps</definition>
        <argsstring>()</argsstring>
        <name>_GenerateMipmaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_uv_texture_object_1af28eecb85858ff4ad809f79491b3d284" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _DestroyTexture</definition>
        <argsstring>()</argsstring>
        <name>_DestroyTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/textureObject.h" line="191" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A base class for uv textures. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3373">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
      <node id="3372">
        <label>HdStUvTextureObject</label>
        <link refid="class_hd_st_uv_texture_object"/>
        <childnode refid="3373" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3374">
        <label>HdStDynamicUvTextureObject</label>
        <link refid="class_hd_st_dynamic_uv_texture_object"/>
        <childnode refid="3372" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3376">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
      <node id="3375">
        <label>HdStUvTextureObject</label>
        <link refid="class_hd_st_uv_texture_object"/>
        <childnode refid="3376" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/textureObject.h" line="156" column="1" bodyfile="pxr/imaging/hdSt/textureObject.h" bodystart="155" bodyend="197"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_object_1a4bb9e349d6ac5c6cb101c3b76c444909" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_AddToTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1a498f50b8bbbe346da6e294b0551ae51f" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_AdjustTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1af9c7ea62423805492df6200fa37b0452" prot="protected" virt="pure-virtual"><scope>HdStUvTextureObject</scope><name>_Commit</name></member>
      <member refid="class_hd_st_uv_texture_object_1ad5246185f49069f2d07b7d54de887fd6" prot="private" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_cpuData</name></member>
      <member refid="class_hd_st_uv_texture_object_1ae234c5328af14bfa133ea43478bbb053" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_CreateTexture</name></member>
      <member refid="class_hd_st_uv_texture_object_1af28eecb85858ff4ad809f79491b3d284" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_DestroyTexture</name></member>
      <member refid="class_hd_st_uv_texture_object_1a31f741c42da5e3274fcaaf9339882b70" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GenerateMipmaps</name></member>
      <member refid="class_hd_st_uv_texture_object_1a0e90a006de1d81725757ce9ef72a804b" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GetCpuData</name></member>
      <member refid="class_hd_st_texture_object_1a6ecfd8fb0c62f45e1a8978fb53a025f9" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GetDebugName</name></member>
      <member refid="class_hd_st_texture_object_1a5a7b6bc152ae4b062a7aa5f10e7d1bab" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GetHgi</name></member>
      <member refid="class_hd_st_texture_object_1a0328339184490ba78de07142381a31ce" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GetPremultiplyAlpha</name></member>
      <member refid="class_hd_st_texture_object_1aecf3efc41bd50e8e4598620301ca7890" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GetResourceRegistry</name></member>
      <member refid="class_hd_st_texture_object_1aab2a86741f445fd5c73d0707912e8d11" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_GetSourceColorSpace</name></member>
      <member refid="class_hd_st_uv_texture_object_1a48a7f66326d9f440aaac7d7be29569ed" prot="private" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_gpuTexture</name></member>
      <member refid="class_hd_st_texture_object_1a53f612f5be05577bafd37e4ca630aba8" prot="protected" virt="pure-virtual"><scope>HdStUvTextureObject</scope><name>_Load</name></member>
      <member refid="class_hd_st_uv_texture_object_1ae43d860efb6e15205ec4bd5a98634cca" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_SetCpuData</name></member>
      <member refid="class_hd_st_uv_texture_object_1a6f6c689588c3e78139badbf3b45adfe0" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_SetWrapParameters</name></member>
      <member refid="class_hd_st_texture_object_1a656982d9323adc3d53decc0dcc731c35" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_SubtractFromTotalTextureMemory</name></member>
      <member refid="class_hd_st_uv_texture_object_1ac44a61678356dc2c05dc8fecab1ceb0c" prot="private" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>_wrapParameters</name></member>
      <member refid="class_hd_st_texture_object_1a1604cec087550d6968d8050060ef414f" prot="public" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>GetTargetMemory</name></member>
      <member refid="class_hd_st_uv_texture_object_1a0f8a0f2f3d393395bdfdaf350b31dbd1" prot="public" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>GetTexture</name></member>
      <member refid="class_hd_st_texture_object_1a9b0c375568692c0b631a211b92fb3fbc" prot="public" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>GetTextureIdentifier</name></member>
      <member refid="class_hd_st_uv_texture_object_1a35b02f34208ef57a2e23cb5c85a9733d" prot="public" virt="virtual"><scope>HdStUvTextureObject</scope><name>GetTextureType</name></member>
      <member refid="class_hd_st_uv_texture_object_1acea1437099c8656f01b970a2e9d9e14d" prot="public" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>GetWrapParameters</name></member>
      <member refid="class_hd_st_texture_object_1a91c3c2ce5a3fe4bee791c2b2e539a436" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>HdStTextureObject</name></member>
      <member refid="class_hd_st_uv_texture_object_1a93875e84dc0bbe39a338c244b2a4b010" prot="protected" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>HdStUvTextureObject</name></member>
      <member refid="class_hd_st_texture_object_1a83d17ce2f1f540385d21e9f81b3dae76" prot="public" virt="pure-virtual"><scope>HdStUvTextureObject</scope><name>IsValid</name></member>
      <member refid="class_hd_st_texture_object_1a6ded25aed3b249789c7d7ea438be2076" prot="public" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>SetTargetMemory</name></member>
      <member refid="class_hd_st_texture_object_1a17729686cf8e982e36553a33d4c1ee7c" prot="public" virt="virtual"><scope>HdStUvTextureObject</scope><name>~HdStTextureObject</name></member>
      <member refid="class_hd_st_uv_texture_object_1a573f0e58a864a6a402da62508c7820c4" prot="public" virt="non-virtual"><scope>HdStUvTextureObject</scope><name>~HdStUvTextureObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
