<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hgi_buffer_to_texture_op" kind="struct" language="C++" prot="public">
    <compoundname>HgiBufferToTextureOp</compoundname>
    <includes refid="blit_cmds_ops_8h" local="no">blitCmdsOps.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hgi_buffer_to_texture_op_1a78682c688bfb7cbc87918afe2d6a01df" prot="public" static="no" mutable="no">
        <type><ref refid="class_hgi_handle" kindref="compound">HgiBufferHandle</ref></type>
        <definition>HgiBufferHandle gpuSourceBuffer</definition>
        <argsstring></argsstring>
        <name>gpuSourceBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="325" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_buffer_to_texture_op_1a507efd10fb43e6ab6ca0b962e948c606" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t sourceByteOffset</definition>
        <argsstring></argsstring>
        <name>sourceByteOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="326" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_buffer_to_texture_op_1ae2a8fed4ebb1726760068eb1f310fdb0" prot="public" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle gpuDestinationTexture</definition>
        <argsstring></argsstring>
        <name>gpuDestinationTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="327" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_buffer_to_texture_op_1a6a28e908cc9370510e1f2a6e03c74ea1" prot="public" static="no" mutable="no">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i destinationTexelOffset</definition>
        <argsstring></argsstring>
        <name>destinationTexelOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="328" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_buffer_to_texture_op_1a6bee6dfccd29b97a64df2beb8fe41b58" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t mipLevel</definition>
        <argsstring></argsstring>
        <name>mipLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="329" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_buffer_to_texture_op_1ab3671481708018bfed6e89b9cd54affe" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t byteSize</definition>
        <argsstring></argsstring>
        <name>byteSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="330" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_hgi_buffer_to_texture_op_1aa7c797b5cc6994ff55ad3a412c90cb5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HgiBufferToTextureOp</definition>
        <argsstring>()</argsstring>
        <name>HgiBufferToTextureOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="316" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="316" bodyend="323"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes the properties needed to copy GPU buffer data into a GPU texture. </para>
    </briefdescription>
    <detaileddescription>
<para>It is the responsibility of the caller to:<itemizedlist>
<listitem><para>ensure the destination textures is large enough to receive the data.</para>
</listitem><listitem><para>ensure the source buffer and destination texture are valid at the time the command is executed.</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>gpuSourceBuffer: The gpu buffer to copy data from. </para>
</listitem>
<listitem>
<para>sourceByteOffset: The byte offset in source buffer to start copying the data from. </para>
</listitem>
<listitem>
<para>gpuDestinationTexture: The GPU texture to upload the data into. </para>
</listitem>
<listitem>
<para>destinationTexelOffset: The texel offset (width, height, depth) of where to upload the data. If the texture is a 2d_array the third element is the layer/slice. </para>
</listitem>
<listitem>
<para>mipLevel: Mip level to upload into. </para>
</listitem>
<listitem>
<para>byteSize: Size of the data (in bytes) to copy </para>
</listitem>
</itemizedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="3736">
        <label>HgiHandle&lt; HgiBuffer &gt;</label>
        <link refid="class_hgi_handle"/>
      </node>
      <node id="3733">
        <label>HgiBufferToTextureOp</label>
        <link refid="struct_hgi_buffer_to_texture_op"/>
        <childnode refid="3734" relation="usage">
          <edgelabel>gpuDestinationTexture</edgelabel>
        </childnode>
        <childnode refid="3735" relation="usage">
          <edgelabel>destinationTexelOffset</edgelabel>
        </childnode>
        <childnode refid="3736" relation="usage">
          <edgelabel>gpuSourceBuffer</edgelabel>
        </childnode>
      </node>
      <node id="3734">
        <label>HgiHandle&lt; class HgiTexture &gt;</label>
        <link refid="class_hgi_handle"/>
      </node>
      <node id="3735">
        <label>GfVec3i</label>
        <link refid="class_gf_vec3i"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/blitCmdsOps.h" line="315" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="314" bodyend="332"/>
    <listofallmembers>
      <member refid="struct_hgi_buffer_to_texture_op_1ab3671481708018bfed6e89b9cd54affe" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>byteSize</name></member>
      <member refid="struct_hgi_buffer_to_texture_op_1a6a28e908cc9370510e1f2a6e03c74ea1" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>destinationTexelOffset</name></member>
      <member refid="struct_hgi_buffer_to_texture_op_1ae2a8fed4ebb1726760068eb1f310fdb0" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>gpuDestinationTexture</name></member>
      <member refid="struct_hgi_buffer_to_texture_op_1a78682c688bfb7cbc87918afe2d6a01df" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>gpuSourceBuffer</name></member>
      <member refid="struct_hgi_buffer_to_texture_op_1aa7c797b5cc6994ff55ad3a412c90cb5e" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>HgiBufferToTextureOp</name></member>
      <member refid="struct_hgi_buffer_to_texture_op_1a6bee6dfccd29b97a64df2beb8fe41b58" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>mipLevel</name></member>
      <member refid="struct_hgi_buffer_to_texture_op_1a507efd10fb43e6ab6ca0b962e948c606" prot="public" virt="non-virtual"><scope>HgiBufferToTextureOp</scope><name>sourceByteOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
