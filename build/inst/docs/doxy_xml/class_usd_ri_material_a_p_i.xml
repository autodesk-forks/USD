<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_ri_material_a_p_i" kind="class" language="C++" prot="public">
    <compoundname>UsdRiMaterialAPI</compoundname>
    <basecompoundref refid="class_usd_a_p_i_schema_base" prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="usd_ri_2material_a_p_i_8h" local="no">materialAPI.h</includes>
      <sectiondef kind="user-defined">
      <header>Outputs API</header>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a90d8cd358bb62e664375255929844ff8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref></type>
        <definition>USDRI_API UsdShadeOutput GetSurfaceOutput</definition>
        <argsstring>() const</argsstring>
        <name>GetSurfaceOutput</name>
        <briefdescription>
<para>Returns the &quot;surface&quot; output associated with the material. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1aee34c69b7e6430ad772ac369451ad063" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref></type>
        <definition>USDRI_API UsdShadeOutput GetDisplacementOutput</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplacementOutput</name>
        <briefdescription>
<para>Returns the &quot;displacement&quot; output associated with the material. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="275" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a1b35ddc6cda29319a7d6643e4ef915f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref></type>
        <definition>USDRI_API UsdShadeOutput GetVolumeOutput</definition>
        <argsstring>() const</argsstring>
        <name>GetVolumeOutput</name>
        <briefdescription>
<para>Returns the &quot;volume&quot; output associated with the material. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="279" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>API for setting sources of outputs</header>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1af5b80759d32efa4466026563b6bea672" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API bool</type>
        <definition>USDRI_API bool SetSurfaceSource</definition>
        <argsstring>(const SdfPath &amp;surfacePath) const</argsstring>
        <name>SetSurfaceSource</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>surfacePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a81a21faa1d31da93deadae58fe693663" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API bool</type>
        <definition>USDRI_API bool SetDisplacementSource</definition>
        <argsstring>(const SdfPath &amp;displacementPath) const</argsstring>
        <name>SetDisplacementSource</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>displacementPath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="292" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1af85a53aaaec9ced5fb5d05cef765aa37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API bool</type>
        <definition>USDRI_API bool SetVolumeSource</definition>
        <argsstring>(const SdfPath &amp;volumePath) const</argsstring>
        <name>SetVolumeSource</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>volumePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="295" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Shaders API</header>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a976bf26af6a7a53f685ecf4fcbc3c28e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_shader" kindref="compound">UsdShadeShader</ref></type>
        <definition>USDRI_API UsdShadeShader GetSurface</definition>
        <argsstring>(bool ignoreBaseMaterial=false) const</argsstring>
        <name>GetSurface</name>
        <param>
          <type>bool</type>
          <declname>ignoreBaseMaterial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns a valid shader object if the &quot;surface&quot; output on the material is connected to one. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>ignoreBaseMaterial</computeroutput> is true and if the &quot;surface&quot; shader source is specified in the base-material of this material, then this returns an invalid shader object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="311" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a5fb4f37317f6374beefd641822c163f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_shader" kindref="compound">UsdShadeShader</ref></type>
        <definition>USDRI_API UsdShadeShader GetDisplacement</definition>
        <argsstring>(bool ignoreBaseMaterial=false) const</argsstring>
        <name>GetDisplacement</name>
        <param>
          <type>bool</type>
          <declname>ignoreBaseMaterial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns a valid shader object if the &quot;displacement&quot; output on the material is connected to one. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>ignoreBaseMaterial</computeroutput> is true and if the &quot;displacement&quot; shader source is specified in the base-material of this material, then this returns an invalid shader object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a88878d40c10aa6e62ff4e775287dae73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_shader" kindref="compound">UsdShadeShader</ref></type>
        <definition>USDRI_API UsdShadeShader GetVolume</definition>
        <argsstring>(bool ignoreBaseMaterial=false) const</argsstring>
        <name>GetVolume</name>
        <param>
          <type>bool</type>
          <declname>ignoreBaseMaterial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns a valid shader object if the &quot;volume&quot; output on the material is connected to one. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>ignoreBaseMaterial</computeroutput> is true and if the &quot;volume&quot; shader source is specified in the base-material of this material, then this returns an invalid shader object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="329" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_ri_material_a_p_i_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa02d2addc2bb693dde0851595872f1aa" kindref="member">UsdSchemaKind::SingleApplyAPI</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="78" column="1" bodyfile="pxr/usd/usdRi/materialAPI.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_ri_material_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="170" column="1" bodyfile="pxr/usd/usdRi/materialAPI.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a231cf6ac4fe077d968f94f9800c39c64" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdRiMaterialAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdRiMaterialAPI</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_ri_material_a_p_i_1a35bf659f64177e8108d127fd5627ed8f" kindref="member">UsdRiMaterialAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="84" column="1" bodyfile="pxr/usd/usdRi/materialAPI.h" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a7ce6378dc9712bc7a0b855af62a3b103" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdRiMaterialAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdRiMaterialAPI</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="92" column="1" bodyfile="pxr/usd/usdRi/materialAPI.h" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a2236ac5bfa1e3485c2d8f1be6b54a877" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDRI_API</type>
        <definition>virtual USDRI_API ~UsdRiMaterialAPI</definition>
        <argsstring>()</argsstring>
        <name>~UsdRiMaterialAPI</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1aa9d422bff925cd4fe52304222ffaccc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDRI_API UsdAttribute GetSurfaceAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetSurfaceAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>token outputs:ri:surface</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a3f32be3aef6bcb1e740bbf4f55d38cba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDRI_API UsdAttribute CreateSurfaceAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateSurfaceAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_ri_material_a_p_i_1aa9d422bff925cd4fe52304222ffaccc6" kindref="member">GetSurfaceAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1aa2bf83ccc366215977a0cf6650f8739a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDRI_API UsdAttribute GetDisplacementAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplacementAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>token outputs:ri:displacement</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a2e19805cb1cc34e8fba0a84b95544626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDRI_API UsdAttribute CreateDisplacementAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateDisplacementAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_ri_material_a_p_i_1aa2bf83ccc366215977a0cf6650f8739a" kindref="member">GetDisplacementAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1af71a7c62373b18f87d635861f1b444cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDRI_API UsdAttribute GetVolumeAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetVolumeAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>token outputs:ri:volume</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a86bbcd75fe57611bd8763403aec00b60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDRI_API UsdAttribute CreateVolumeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateVolumeAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_ri_material_a_p_i_1af71a7c62373b18f87d635861f1b444cc" kindref="member">GetVolumeAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1aca6fcc8cb29669020671ceafe548d4f5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdRiMaterialAPI</definition>
        <argsstring>(const UsdShadeMaterial &amp;material)</argsstring>
        <name>UsdRiMaterialAPI</name>
        <param>
          <type>const <ref refid="class_usd_shade_material" kindref="compound">UsdShadeMaterial</ref> &amp;</type>
          <declname>material</declname>
        </param>
        <briefdescription>
<para>A constructor for creating a MaterialAPI object from a material prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="259" column="1" bodyfile="pxr/usd/usdRi/materialAPI.h" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a6f02d6ec19bfb6e9920c3f9dc49e6c42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_shade_node_graph_1a237557b6ace8a23f99df0dc159a4395c" kindref="member">UsdShadeNodeGraph::InterfaceInputConsumersMap</ref></type>
        <definition>USDRI_API UsdShadeNodeGraph::InterfaceInputConsumersMap ComputeInterfaceInputConsumersMap</definition>
        <argsstring>(bool computeTransitiveConsumers=false) const</argsstring>
        <name>ComputeInterfaceInputConsumersMap</name>
        <param>
          <type>bool</type>
          <declname>computeTransitiveConsumers</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Walks the namespace subtree below the material and computes a map containing the list of all inputs on the material and the associated vector of consumers of their values. </para>
        </briefdescription>
        <detaileddescription>
<para>The consumers can be inputs on shaders within the material or on node-graphs under it. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="340" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1af263256d7a1c28267a0de9d26e208f41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDRI_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a35bf659f64177e8108d127fd5627ed8f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref></type>
        <definition>static USDRI_API UsdRiMaterialAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdRiMaterialAPI(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a96de51323375de6caa77c42f6bd9e199" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API bool</type>
        <definition>static USDRI_API bool CanApply</definition>
        <argsstring>(const UsdPrim &amp;prim, std::string *whyNot=nullptr)</argsstring>
        <name>CanApply</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>whyNot</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Returns true if this <bold>single-apply</bold> API schema can be applied to the given <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If this schema can not be a applied to the prim, this returns false and, if provided, populates <computeroutput>whyNot</computeroutput> with the reason it can not be applied.</para>
<para>Note that if CanApply returns false, that does not necessarily imply that calling Apply will fail. Callers are expected to call CanApply before calling Apply if they want to ensure that it is valid to apply a schema.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_prim_1a42cfbef37f98df2c20c15044c333fe4a" kindref="member">UsdPrim::GetAppliedSchemas()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a582b449631f9e073e0e04582c66ce04a" kindref="member">UsdPrim::HasAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a2e4b59a7cf7fa0d677270163ea6ad029" kindref="member">UsdPrim::CanApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1ad3ef9d2cec618a0f43fce5295b5b176e" kindref="member">UsdPrim::ApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1aab70d4fa20d53a6675734205ded2da22" kindref="member">UsdPrim::RemoveAPI()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1aab6d9635e7f40a7b57596cb35f885425" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref></type>
        <definition>static USDRI_API UsdRiMaterialAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;RiMaterialAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para>
<para><simplesect kind="return"><para>A valid <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref> object is returned upon failure. See <ref refid="class_usd_prim_1ad3ef9d2cec618a0f43fce5295b5b176e" kindref="member">UsdPrim::ApplyAPI()</ref> for conditions resulting in failure.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a42cfbef37f98df2c20c15044c333fe4a" kindref="member">UsdPrim::GetAppliedSchemas()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a582b449631f9e073e0e04582c66ce04a" kindref="member">UsdPrim::HasAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1a2e4b59a7cf7fa0d677270163ea6ad029" kindref="member">UsdPrim::CanApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1ad3ef9d2cec618a0f43fce5295b5b176e" kindref="member">UsdPrim::ApplyAPI()</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_prim_1aab70d4fa20d53a6675734205ded2da22" kindref="member">UsdPrim::RemoveAPI()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="159" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a33433d6be99bff8201f850170177dec7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDRI_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDRI_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="166" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a7ce06d7f0925f71015cc1361926bd278" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDRI_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDRI_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="174" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDRI_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDRI_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_a_p_i_schema_base_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1a291cc6106a6c45e1fb097930d77eec53" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_shade_shader" kindref="compound">UsdShadeShader</ref></type>
        <definition>UsdShadeShader _GetSourceShaderObject</definition>
        <argsstring>(const UsdShadeOutput &amp;output, bool ignoreBaseMaterial) const</argsstring>
        <name>_GetSourceShaderObject</name>
        <param>
          <type>const <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ignoreBaseMaterial</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_ri_material_a_p_i_1ae71e0d49a220f6a07edc393ffdf3ae8f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref></type>
        <definition>UsdShadeOutput _GetBxdfOutput</definition>
        <argsstring>(const UsdPrim &amp;materialPrim) const</argsstring>
        <name>_GetBxdfOutput</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>materialPrim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdRi/materialAPI.h" line="350" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000085"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Materials should use <ref refid="class_usd_shade_material" kindref="compound">UsdShadeMaterial</ref> instead.</para>
</xrefdescription></xrefsect>This schema will be removed in a future release.</para>
<para>This API provides outputs that connect a material prim to prman shaders and RIS objects.</para>
<para>For any described attribute <emphasis>Fallback</emphasis> <emphasis>Value</emphasis> or <emphasis>Allowed</emphasis> <emphasis>Values</emphasis> below that are text/tokens, the actual token is published and defined in <ref refid="usd_2usd_ri_2tokens_8h_1a9009dd5e9633019f91f5673bd5f761c3" kindref="member">UsdRiTokens</ref>. So to set an attribute to the value &quot;rightHanded&quot;, use UsdRiTokens-&gt;rightHanded as the value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7971">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="7969">
        <label>UsdRiMaterialAPI</label>
        <link refid="class_usd_ri_material_a_p_i"/>
        <childnode refid="7970" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7970">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="7971" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7974">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="7972">
        <label>UsdRiMaterialAPI</label>
        <link refid="class_usd_ri_material_a_p_i"/>
        <childnode refid="7973" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7973">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="7974" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdRi/materialAPI.h" line="73" column="1" bodyfile="pxr/usd/usdRi/materialAPI.h" bodystart="72" bodyend="351"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1ae71e0d49a220f6a07edc393ffdf3ae8f" prot="private" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_GetBxdfOutput</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa27e613f624c34d85fc17cbf58956245" prot="protected" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_GetInstanceName</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aaf34e3836e442b3a04d517febdb69cc3" prot="protected" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_GetMultipleApplyInstanceNames</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a33433d6be99bff8201f850170177dec7" prot="protected" virt="virtual"><scope>UsdRiMaterialAPI</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdRiMaterialAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a291cc6106a6c45e1fb097930d77eec53" prot="private" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_GetSourceShaderObject</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a7ce06d7f0925f71015cc1361926bd278" prot="private" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e" prot="private" virt="virtual"><scope>UsdRiMaterialAPI</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_GetType</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdRiMaterialAPI</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_ri_material_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_ri_material_a_p_i_1aab6d9635e7f40a7b57596cb35f885425" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>Apply</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a96de51323375de6caa77c42f6bd9e199" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>CanApply</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a6f02d6ec19bfb6e9920c3f9dc49e6c42" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>ComputeInterfaceInputConsumersMap</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a2e19805cb1cc34e8fba0a84b95544626" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>CreateDisplacementAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a3f32be3aef6bcb1e740bbf4f55d38cba" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>CreateSurfaceAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a86bbcd75fe57611bd8763403aec00b60" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>CreateVolumeAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a35bf659f64177e8108d127fd5627ed8f" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>Get</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a5fb4f37317f6374beefd641822c163f4" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetDisplacement</name></member>
      <member refid="class_usd_ri_material_a_p_i_1aa2bf83ccc366215977a0cf6650f8739a" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetDisplacementAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1aee34c69b7e6430ad772ac369451ad063" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetDisplacementOutput</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetPrim</name></member>
      <member refid="class_usd_ri_material_a_p_i_1af263256d7a1c28267a0de9d26e208f41" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a976bf26af6a7a53f685ecf4fcbc3c28e" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetSurface</name></member>
      <member refid="class_usd_ri_material_a_p_i_1aa9d422bff925cd4fe52304222ffaccc6" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetSurfaceAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a90d8cd358bb62e664375255929844ff8" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetSurfaceOutput</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a88878d40c10aa6e62ff4e775287dae73" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetVolume</name></member>
      <member refid="class_usd_ri_material_a_p_i_1af71a7c62373b18f87d635861f1b444cc" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetVolumeAttr</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a1b35ddc6cda29319a7d6643e4ef915f5" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>GetVolumeOutput</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>operator bool</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>schemaKind</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a81a21faa1d31da93deadae58fe693663" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>SetDisplacementSource</name></member>
      <member refid="class_usd_ri_material_a_p_i_1af5b80759d32efa4466026563b6bea672" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>SetSurfaceSource</name></member>
      <member refid="class_usd_ri_material_a_p_i_1af85a53aaaec9ced5fb5d05cef765aa37" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>SetVolumeSource</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a693760be7357b341ca92cae42af89a2a" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1aa02eade67d6ca4c0d58fe3b7e5a4cc9a" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ae1aaced053a4cc13c21b444b27130c75" prot="protected" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_a_p_i_schema_base_1ac9df31df96c3346f55ba31be7472f106" prot="protected" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdAPISchemaBase</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a231cf6ac4fe077d968f94f9800c39c64" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdRiMaterialAPI</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a7ce6378dc9712bc7a0b855af62a3b103" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdRiMaterialAPI</name></member>
      <member refid="class_usd_ri_material_a_p_i_1aca6fcc8cb29669020671ceafe548d4f5" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdRiMaterialAPI</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_ri_material_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdRiMaterialAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_a_p_i_schema_base_1a426f2a53141cc3eefa43fce755f83108" prot="public" virt="pure-virtual"><scope>UsdRiMaterialAPI</scope><name>~UsdAPISchemaBase</name></member>
      <member refid="class_usd_ri_material_a_p_i_1a2236ac5bfa1e3485c2d8f1be6b54a877" prot="public" virt="virtual"><scope>UsdRiMaterialAPI</scope><name>~UsdRiMaterialAPI</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdRiMaterialAPI</scope><name>~UsdSchemaBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
