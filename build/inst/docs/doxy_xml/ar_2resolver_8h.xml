<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="ar_2resolver_8h" kind="file" language="C++">
    <compoundname>resolver.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2ar_2api_8h" local="yes">pxr/usd/ar/api.h</includes>
    <includes refid="ar_8h" local="yes">pxr/usd/ar/ar.h</includes>
    <includes refid="resolved_path_8h" local="yes">pxr/usd/ar/resolvedPath.h</includes>
    <includes refid="resolver_context_8h" local="yes">pxr/usd/ar/resolverContext.h</includes>
    <includes refid="timestamp_8h" local="yes">pxr/usd/ar/timestamp.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="default_resolver_8h" local="yes">pxr/usd/ar/defaultResolver.h</includedby>
    <includedby refid="define_resolver_8h" local="yes">pxr/usd/ar/defineResolver.h</includedby>
    <includedby refid="filesystem_writable_asset_8h" local="yes">pxr/usd/ar/filesystemWritableAsset.h</includedby>
    <incdepgraph>
      <node id="156960">
        <label>locale</label>
      </node>
      <node id="156941">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="156942" relation="include">
        </childnode>
        <childnode refid="156943" relation="include">
        </childnode>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156934" relation="include">
        </childnode>
        <childnode refid="156944" relation="include">
        </childnode>
      </node>
      <node id="156933">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="156934" relation="include">
        </childnode>
      </node>
      <node id="156973">
        <label>limits</label>
      </node>
      <node id="156966">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="156957">
        <label>pxr/usd/ar/resolverContext.h</label>
        <link refid="resolver_context_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156932" relation="include">
        </childnode>
        <childnode refid="156935" relation="include">
        </childnode>
        <childnode refid="156937" relation="include">
        </childnode>
        <childnode refid="156958" relation="include">
        </childnode>
        <childnode refid="156960" relation="include">
        </childnode>
        <childnode refid="156961" relation="include">
        </childnode>
        <childnode refid="156965" relation="include">
        </childnode>
        <childnode refid="156970" relation="include">
        </childnode>
        <childnode refid="156952" relation="include">
        </childnode>
        <childnode refid="156950" relation="include">
        </childnode>
        <childnode refid="156955" relation="include">
        </childnode>
        <childnode refid="156959" relation="include">
        </childnode>
        <childnode refid="156956" relation="include">
        </childnode>
      </node>
      <node id="156943">
        <label>cstdint</label>
      </node>
      <node id="156935">
        <label>pxr/usd/ar/ar.h</label>
        <link refid="ar_8h_source"/>
      </node>
      <node id="156963">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="156934" relation="include">
        </childnode>
      </node>
      <node id="156971">
        <label>pxr/usd/ar/timestamp.h</label>
        <link refid="timestamp_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156932" relation="include">
        </childnode>
        <childnode refid="156972" relation="include">
        </childnode>
        <childnode refid="156937" relation="include">
        </childnode>
        <childnode refid="156973" relation="include">
        </childnode>
      </node>
      <node id="156945">
        <label>cmath</label>
      </node>
      <node id="156938">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156939" relation="include">
        </childnode>
        <childnode refid="156940" relation="include">
        </childnode>
        <childnode refid="156941" relation="include">
        </childnode>
        <childnode refid="156946" relation="include">
        </childnode>
        <childnode refid="156947" relation="include">
        </childnode>
      </node>
      <node id="156950">
        <label>string</label>
      </node>
      <node id="156951">
        <label>map</label>
      </node>
      <node id="156942">
        <label>cinttypes</label>
      </node>
      <node id="156931">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="156939">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156934" relation="include">
        </childnode>
      </node>
      <node id="156958">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156959" relation="include">
        </childnode>
      </node>
      <node id="156962">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="156963" relation="include">
        </childnode>
        <childnode refid="156960" relation="include">
        </childnode>
        <childnode refid="156964" relation="include">
        </childnode>
      </node>
      <node id="156930">
        <label>pxr/usd/ar/resolver.h</label>
        <link refid="ar_2resolver_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156932" relation="include">
        </childnode>
        <childnode refid="156935" relation="include">
        </childnode>
        <childnode refid="156936" relation="include">
        </childnode>
        <childnode refid="156957" relation="include">
        </childnode>
        <childnode refid="156971" relation="include">
        </childnode>
        <childnode refid="156952" relation="include">
        </childnode>
        <childnode refid="156950" relation="include">
        </childnode>
        <childnode refid="156956" relation="include">
        </childnode>
      </node>
      <node id="156944">
        <label>sys/types.h</label>
      </node>
      <node id="156959">
        <label>typeinfo</label>
      </node>
      <node id="156968">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="156967">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="156940">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156934" relation="include">
        </childnode>
        <childnode refid="156941" relation="include">
        </childnode>
        <childnode refid="156945" relation="include">
        </childnode>
      </node>
      <node id="156956">
        <label>vector</label>
      </node>
      <node id="156948">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="156933" relation="include">
        </childnode>
      </node>
      <node id="156961">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156962" relation="include">
        </childnode>
        <childnode refid="156948" relation="include">
        </childnode>
      </node>
      <node id="156947">
        <label>utility</label>
      </node>
      <node id="156934">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="156972">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="156934" relation="include">
        </childnode>
      </node>
      <node id="156937">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156938" relation="include">
        </childnode>
        <childnode refid="156948" relation="include">
        </childnode>
        <childnode refid="156949" relation="include">
        </childnode>
        <childnode refid="156950" relation="include">
        </childnode>
        <childnode refid="156951" relation="include">
        </childnode>
        <childnode refid="156952" relation="include">
        </childnode>
        <childnode refid="156953" relation="include">
        </childnode>
        <childnode refid="156954" relation="include">
        </childnode>
        <childnode refid="156955" relation="include">
        </childnode>
        <childnode refid="156947" relation="include">
        </childnode>
        <childnode refid="156956" relation="include">
        </childnode>
      </node>
      <node id="156946">
        <label>math.h</label>
      </node>
      <node id="156936">
        <label>pxr/usd/ar/resolvedPath.h</label>
        <link refid="resolved_path_8h"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156932" relation="include">
        </childnode>
        <childnode refid="156937" relation="include">
        </childnode>
        <childnode refid="156950" relation="include">
        </childnode>
      </node>
      <node id="156969">
        <label>iosfwd</label>
      </node>
      <node id="156964">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="156932">
        <label>pxr/usd/ar/api.h</label>
        <link refid="usd_2ar_2api_8h_source"/>
        <childnode refid="156933" relation="include">
        </childnode>
      </node>
      <node id="156965">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="156931" relation="include">
        </childnode>
        <childnode refid="156948" relation="include">
        </childnode>
        <childnode refid="156963" relation="include">
        </childnode>
        <childnode refid="156962" relation="include">
        </childnode>
        <childnode refid="156966" relation="include">
        </childnode>
        <childnode refid="156967" relation="include">
        </childnode>
        <childnode refid="156968" relation="include">
        </childnode>
        <childnode refid="156969" relation="include">
        </childnode>
        <childnode refid="156952" relation="include">
        </childnode>
      </node>
      <node id="156955">
        <label>type_traits</label>
      </node>
      <node id="156953">
        <label>set</label>
      </node>
      <node id="156970">
        <label>algorithm</label>
      </node>
      <node id="156949">
        <label>cstring</label>
      </node>
      <node id="156952">
        <label>memory</label>
      </node>
      <node id="156954">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="156975">
        <label>pxr/usd/ar/defaultResolver.h</label>
        <link refid="default_resolver_8h"/>
      </node>
      <node id="156977">
        <label>pxr/usd/ar/filesystemWritableAsset.h</label>
        <link refid="filesystem_writable_asset_8h"/>
      </node>
      <node id="156974">
        <label>pxr/usd/ar/resolver.h</label>
        <link refid="ar_2resolver_8h"/>
        <childnode refid="156975" relation="include">
        </childnode>
        <childnode refid="156976" relation="include">
        </childnode>
        <childnode refid="156977" relation="include">
        </childnode>
      </node>
      <node id="156976">
        <label>pxr/usd/ar/defineResolver.h</label>
        <link refid="define_resolver_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ar_resolver" prot="public">ArResolver</innerclass>
      <sectiondef kind="user-defined">
      <header>Advanced API</header>
      <description><para><simplesect kind="warning"><para>These functions should typically not be used by consumers except in very specific cases. Consumers who want to retrieve an <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> to perform asset resolution should use <ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref>. </para>
</simplesect>
</para>
</description>
      <memberdef kind="function" id="ar_2resolver_8h_1a458381a7f5909e03b2b4b8a85974584f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> &amp;</type>
        <definition>AR_API ArResolver&amp; ArGetUnderlyingResolver</definition>
        <argsstring>()</argsstring>
        <name>ArGetUnderlyingResolver</name>
        <briefdescription>
<para>Returns the underlying <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> instance used by ArGetResolver. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the instance of the <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass used by ArGetResolver and can be dynamic_cast to that type.</para>
<para><simplesect kind="warning"><para>This functions should typically not be used by consumers except in very specific cases. Consumers who want to retrieve an <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> to perform asset resolution should use <ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/resolver.h" line="920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ar_2resolver_8h_1af79d4965f373f675a66f1103f8620422" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API std::vector&lt; <ref refid="class_tf_type" kindref="compound">TfType</ref> &gt;</type>
        <definition>AR_API std::vector&lt;TfType&gt; ArGetAvailableResolvers</definition>
        <argsstring>()</argsstring>
        <name>ArGetAvailableResolvers</name>
        <briefdescription>
<para>Returns list of TfTypes for available <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclasses. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the list of <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclasses used to determine the resolver implementation returned by <ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref>. See documentation on that function for more details.</para>
<para>If this function is called from within a call (or calls) to <ref refid="ar_2resolver_8h_1a517ff392abd5eeaa8a50a2dd9bff8126" kindref="member">ArCreateResolver</ref>, the <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass(es) being created will be removed from the returned list.</para>
<para>This function is not safe to call concurrently with itself or <ref refid="ar_2resolver_8h_1a517ff392abd5eeaa8a50a2dd9bff8126" kindref="member">ArCreateResolver</ref>.</para>
<para><simplesect kind="warning"><para>This functions should typically not be used by consumers except in very specific cases. Consumers who want to retrieve an <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> to perform asset resolution should use <ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/resolver.h" line="939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ar_2resolver_8h_1a517ff392abd5eeaa8a50a2dd9bff8126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API std::unique_ptr&lt; <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> &gt;</type>
        <definition>AR_API std::unique_ptr&lt;ArResolver&gt; ArCreateResolver</definition>
        <argsstring>(const TfType &amp;resolverType)</argsstring>
        <name>ArCreateResolver</name>
        <param>
          <type>const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
          <declname>resolverType</declname>
        </param>
        <briefdescription>
<para>Construct an instance of the <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass specified by <computeroutput>resolverType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will load the plugin for the given <computeroutput>resolverType</computeroutput> and construct and return a new instance of the specified <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass. If an error occurs, coding errors will be emitted and this function will return an <ref refid="class_ar_default_resolver" kindref="compound">ArDefaultResolver</ref> instance.</para>
<para>Note that this function <emphasis>does not</emphasis> change the resolver used by <ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref> to an instance of <computeroutput>resolverType</computeroutput>.</para>
<para>This function is not safe to call concurrently with itself or <ref refid="ar_2resolver_8h_1af79d4965f373f675a66f1103f8620422" kindref="member">ArGetAvailableResolvers</ref>.</para>
<para><simplesect kind="warning"><para>This functions should typically not be used by consumers except in very specific cases. Consumers who want to retrieve an <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> to perform asset resolution should use <ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/resolver.h" line="959" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> &amp;</type>
        <definition>AR_API ArResolver&amp; ArGetResolver</definition>
        <argsstring>()</argsstring>
        <name>ArGetResolver</name>
        <briefdescription>
<para>Returns the configured asset resolver. </para>
        </briefdescription>
        <detaileddescription>
<para>When first called, this function will determine the <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass to use for asset resolution via the following process:</para>
<para><itemizedlist>
<listitem><para>If a preferred resolver has been set via <ref refid="ar_2resolver_8h_1a1f7f3d12bb7cb86cb60798434448aa5d" kindref="member">ArSetPreferredResolver</ref>, it will be selected.</para>
</listitem><listitem><para>Otherwise, a list of available <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclasses in plugins will be generated. If multiple <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclasses are found, the list will be sorted by typename. <ref refid="class_ar_default_resolver" kindref="compound">ArDefaultResolver</ref> will be added as the last element of this list, and the first resolver in the list will be selected.</para>
</listitem><listitem><para>The plugin for the selected subclass will be loaded and an instance of the subclass will be constructed.</para>
</listitem><listitem><para>If an error occurs, an <ref refid="class_ar_default_resolver" kindref="compound">ArDefaultResolver</ref> will be constructed.</para>
</listitem></itemizedlist>
</para>
<para>The constructed <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass will be cached and used to service function calls made on the returned resolver.</para>
<para>Note that this function may not return the constructed subclass itself, meaning that dynamic casts to the subclass type may fail. See ArGetUnderlyingResolver if access to this object is needed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/resolver.h" line="887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ar_2resolver_8h_1a1f7f3d12bb7cb86cb60798434448aa5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API void</type>
        <definition>AR_API void ArSetPreferredResolver</definition>
        <argsstring>(const std::string &amp;resolverTypeName)</argsstring>
        <name>ArSetPreferredResolver</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>resolverTypeName</declname>
        </param>
        <briefdescription>
<para>Set the preferred <ref refid="class_ar_resolver" kindref="compound">ArResolver</ref> subclass used by ArGetResolver. </para>
        </briefdescription>
        <detaileddescription>
<para>Consumers may override ArGetResolver&apos;s plugin resolver discovery and force the use of a specific resolver subclass by calling this function with the typename of the implementation to use.</para>
<para>If the subclass specified by <computeroutput>resolverTypeName</computeroutput> cannot be found, ArGetResolver will issue a warning and fall back to using <ref refid="class_ar_default_resolver" kindref="compound">ArDefaultResolver</ref>.</para>
<para>This must be called before the first call to ArGetResolver. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/resolver.h" line="901" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_AR_RESOLVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_AR_RESOLVER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/ar/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/ar/ar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resolved_path_8h" kindref="compound">pxr/usd/ar/resolvedPath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="resolver_context_8h" kindref="compound">pxr/usd/ar/resolverContext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timestamp_8h" kindref="compound">pxr/usd/ar/timestamp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ar_asset" kindref="compound">ArAsset</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ar_asset_info" kindref="compound">ArAssetInfo</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ar_writable_asset" kindref="compound">ArWritableAsset</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_type" kindref="compound">TfType</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vt_value" kindref="compound">VtValue</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="class_ar_resolver" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Disallow<sp/>copies</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_ar_resolver_1a68e5ae6385d1733b79f734c59682ff61" kindref="member">CreateIdentifier</ref>(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>anchorAssetPath<sp/>=<sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_ar_resolver_1aabfb26c05d314299ddf596fc1defeb6c" kindref="member">CreateIdentifierForNewAsset</ref>(</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>anchorAssetPath<sp/>=<sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref><sp/><ref refid="class_ar_resolver_1a1b824f00c46b2a5001f492698fd8f5c1" kindref="member">Resolve</ref>(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref><sp/><ref refid="class_ar_resolver_1ae9bdf8eab4d4ebf70a0d2df3727ff9b8" kindref="member">ResolveForNewAsset</ref>(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="141"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a85ae1972e7c5791b3155ec04c213d29d" kindref="member">BindContext</ref>(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>&amp;<sp/>context,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>bindingData);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a8aaa1f17eef5b4d8facae03cc70c54de" kindref="member">UnbindContext</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>&amp;<sp/>context,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>bindingData);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a1524962aa020859a589e786b1ad3c28f" kindref="member">CreateDefaultContext</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a0a174a99676ff983a183d391973c7ebe" kindref="member">CreateDefaultContextForAsset</ref>(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a5b165aaf701119f4b3bc26cdebd38b93" kindref="member">CreateContextFromString</ref>(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>contextStr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a5b165aaf701119f4b3bc26cdebd38b93" kindref="member">CreateContextFromString</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>uriScheme,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>contextStr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a37d32052831939332ecbff965ef94caf" kindref="member">CreateContextFromStrings</ref>(</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;std::string,<sp/>std::string&gt;&gt;&amp;<sp/>contextStrs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a6d9a29a4e375bbdafde5e6e3f836291a" kindref="member">RefreshContext</ref>(</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>&amp;<sp/>context);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a9e318a8e5693b4103d88443780c1fb5a" kindref="member">GetCurrentContext</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1ad616f0a0fc1e5dce08929604f3b95f8f" kindref="member">IsContextDependentPath</ref>(</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="276"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_ar_resolver_1ab8e1e7ab9dc4e2a390019b3b6384a504" kindref="member">GetExtension</ref>(</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_asset_info" kindref="compound">ArAssetInfo</ref><sp/><ref refid="class_ar_resolver_1a6078df1f5f1d1f4cf4d5b1411b7b88c8" kindref="member">GetAssetInfo</ref>(</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref><sp/><ref refid="class_ar_resolver_1af0820bb01d47be4f215a661f061e2200" kindref="member">GetModificationTimestamp</ref>(</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ArAsset&gt;<sp/><ref refid="class_ar_resolver_1aa3a964db701e93c26fc8365ac98fb758" kindref="member">OpenAsset</ref>(</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76d" kindref="member">WriteMode</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76da06933067aafd48425d67bcb01bba5cb6" kindref="member">Update</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76da0ebe6df8a3ac338e0512acc741823fdb" kindref="member">Replace</ref></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ArWritableAsset&gt;<sp/><ref refid="class_ar_resolver_1a91c07b55b6807adb47805ff0037b6c44" kindref="member">OpenAssetForWrite</ref>(</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76d" kindref="member">WriteMode</ref><sp/>writeMode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a843b3ef2aacbedf6fe6f9deeb01696d7" kindref="member">CanWriteAssetToPath</ref>(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>whyNot<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="379"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a522ae6b8a14dc87c9116109e619f062b" kindref="member">BeginCacheScope</ref>(</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>cacheScopeData);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a266aaced9fc6decb4ae2ad884bd46517" kindref="member">EndCacheScope</ref>(</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>cacheScopeData);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="419"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a966c6fe671e427a7d8a01f9d068879a7" kindref="member">IsRepositoryPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="437"><highlight class="comment"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/>_CreateIdentifier(</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>anchorAssetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_ar_resolver_1a8eac0ab4acfa5276713bee14b8e11308" kindref="member">_CreateIdentifierForNewAsset</ref>(</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>anchorAssetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref><sp/><ref refid="class_ar_resolver_1a3b0b5d475de0d5fb0d17756b07696014" kindref="member">_Resolve</ref>(</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref><sp/><ref refid="class_ar_resolver_1a66bbf8128c2c2253eff9b34ba9d5baae" kindref="member">_ResolveForNewAsset</ref>(</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="522"><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1aea5ca0e868d149785b777baf8cfcde5e" kindref="member">_BindContext</ref>(</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>&amp;<sp/>context,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>bindingData);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a060c4070673ae89cb680d2f544de5557" kindref="member">_UnbindContext</ref>(</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>&amp;<sp/>context,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>bindingData);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a8ea0d703db16ed156b942bb7e1b130ea" kindref="member">_CreateDefaultContext</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a5b0e0ea52ac80bb4a4b6d1f881331df1" kindref="member">_CreateDefaultContextForAsset</ref>(</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1ab67c369f100fd0488e74c3293c688156" kindref="member">_CreateContextFromString</ref>(</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>contextStr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1af454d5a00d4dd1c2b1022d8b38d36bef" kindref="member">_RefreshContext</ref>(</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>&amp;<sp/>context);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref><sp/><ref refid="class_ar_resolver_1a111e120876d4dd8f717c7bdccffd86d5" kindref="member">_GetCurrentContext</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a618cc648520d613dbebadc1eaa57d688" kindref="member">_IsContextDependentPath</ref>(</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="679"><highlight class="comment"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_ar_resolver_1a754a31a6d1ab02063db5c9b9f312c737" kindref="member">_GetExtension</ref>(</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info" kindref="compound">ArAssetInfo</ref><sp/><ref refid="class_ar_resolver_1adc0f04bf685974a9d41d1503d3ce8e0d" kindref="member">_GetAssetInfo</ref>(</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref><sp/><ref refid="class_ar_resolver_1a51c771ddc5d3882b3ece763fbb60e507" kindref="member">_GetModificationTimestamp</ref>(</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>assetPath,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ArAsset&gt;<sp/><ref refid="class_ar_resolver_1ac2b5b770ce42d1d20b638eeb231c86eb" kindref="member">_OpenAsset</ref>(</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1aa9be097a3054cd75a38ff68030bf9c67" kindref="member">_CanWriteAssetToPath</ref>(</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>whyNot)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ArWritableAsset&gt;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_1a8a70fbd567fd56d9567f8ab9796a4d69" kindref="member">_OpenAssetForWrite</ref>(</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolved_path" kindref="compound">ArResolvedPath</ref>&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ar_resolver_1a61d23b393fdc35f2f0e30a1ed566c76d" kindref="member">WriteMode</ref><sp/>writeMode)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="776"><highlight class="comment"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a02b1f3d70b0771e0e399af8625edeb15" kindref="member">_BeginCacheScope</ref>(</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>cacheScopeData);</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1ab36e690e66b26c1cea5268ff2bef5400" kindref="member">_EndCacheScope</ref>(</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>*<sp/>cacheScopeData);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_1a9758cb2f1e4bf228ad8f9c47fa38adf9" kindref="member">_IsRepositoryPath</ref>(</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------<sp/>//</highlight></codeline>
<codeline lineno="816"><highlight class="comment"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ContextObj&gt;</highlight></codeline>
<codeline lineno="843" refid="class_ar_resolver_1ab93ccf0957571994e79ade8bf4d5f793" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ContextObj*<sp/><ref refid="class_ar_resolver_1ab93ccf0957571994e79ade8bf4d5f793" kindref="member">_GetCurrentContextObject</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="844"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>*<sp/>ctx<sp/>=<sp/>_GetInternallyManagedCurrentContext();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ctx<sp/>?<sp/>ctx-&gt;<ref refid="class_ar_resolver_context_1a5a283210215fca23873e19202d5d745f" kindref="member">Get</ref>&lt;ContextObj&gt;()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>pointer<sp/>to<sp/>ArResolverContext<sp/>that<sp/>was<sp/>most<sp/>recently<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>BindContext.<sp/>This<sp/>is<sp/>*not*<sp/>the<sp/>same<sp/>as<sp/>GetCurrentContext,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>since<sp/>subclasses<sp/>may<sp/>return<sp/>an<sp/>ArResolverContext<sp/>that<sp/>hasn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>been<sp/>bound<sp/>via<sp/>BindContext<sp/>in<sp/>their<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>AR_API</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_resolver_context" kindref="compound">ArResolverContext</ref>*<sp/>_GetInternallyManagedCurrentContext()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal">};</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal">AR_API</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>&amp;<sp/><ref refid="ar_2resolver_8h_1ab0913ebfd579684add6b59b44983a633" kindref="member">ArGetResolver</ref>();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal">AR_API</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ar_2resolver_8h_1a1f7f3d12bb7cb86cb60798434448aa5d" kindref="member">ArSetPreferredResolver</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>resolverTypeName);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"></codeline>
<codeline lineno="919"><highlight class="normal">AR_API</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><ref refid="class_ar_resolver" kindref="compound">ArResolver</ref>&amp;<sp/><ref refid="ar_2resolver_8h_1a458381a7f5909e03b2b4b8a85974584f" kindref="member">ArGetUnderlyingResolver</ref>();</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal">AR_API</highlight></codeline>
<codeline lineno="939"><highlight class="normal">std::vector&lt;TfType&gt;<sp/><ref refid="ar_2resolver_8h_1af79d4965f373f675a66f1103f8620422" kindref="member">ArGetAvailableResolvers</ref>();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal">AR_API</highlight></codeline>
<codeline lineno="959"><highlight class="normal">std::unique_ptr&lt;ArResolver&gt;<sp/><ref refid="ar_2resolver_8h_1a517ff392abd5eeaa8a50a2dd9bff8126" kindref="member">ArCreateResolver</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_type" kindref="compound">TfType</ref>&amp;<sp/>resolverType);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/ar/resolver.h"/>
  </compounddef>
</doxygen>
