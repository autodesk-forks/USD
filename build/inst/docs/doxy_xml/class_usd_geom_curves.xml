<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_geom_curves" kind="class" language="C++" prot="public">
    <compoundname>UsdGeomCurves</compoundname>
    <basecompoundref refid="class_usd_geom_point_based" prot="public" virt="non-virtual">UsdGeomPointBased</basecompoundref>
    <derivedcompoundref refid="class_usd_geom_basis_curves" prot="public" virt="non-virtual">UsdGeomBasisCurves</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_hermite_curves" prot="public" virt="non-virtual">UsdGeomHermiteCurves</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_nurbs_curves" prot="public" virt="non-virtual">UsdGeomNurbsCurves</derivedcompoundref>
    <includes refid="curves_8h" local="no">curves.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_geom_curves_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741a033ea5f40e4407ad16629e9a769ac9c1" kindref="member">UsdSchemaKind::AbstractTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="81" column="1" bodyfile="pxr/usd/usdGeom/curves.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_geom_curves_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="134" column="1" bodyfile="pxr/usd/usdGeom/curves.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_geom_curves_1a1657d044804af476231fb61808695deb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomCurves</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdGeomCurves</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_curves" kindref="compound">UsdGeomCurves</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_geom_curves_1a34d0ea23b101187e36275f62710226ef" kindref="member">UsdGeomCurves::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="87" column="1" bodyfile="pxr/usd/usdGeom/curves.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1ae31d2c7eb6c423d94806b38a61f9b7da" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomCurves</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdGeomCurves</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_curves" kindref="compound">UsdGeomCurves</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_geom_curves" kindref="compound">UsdGeomCurves</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="95" column="1" bodyfile="pxr/usd/usdGeom/curves.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a151c6a250a18899c82dd0e8a989abb2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API</type>
        <definition>virtual USDGEOM_API ~UsdGeomCurves</definition>
        <argsstring>()</argsstring>
        <name>~UsdGeomCurves</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1af505aabdf525fe48f76eeb4f626ca3ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetCurveVertexCountsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetCurveVertexCountsAttr</name>
        <briefdescription>
<para>Curves-derived primitives can represent multiple distinct, potentially disconnected curves. </para>
        </briefdescription>
        <detaileddescription>
<para>The length of &apos;curveVertexCounts&apos; gives the number of such curves, and each element describes the number of vertices in the corresponding curve</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>int[] curveVertexCounts</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;int&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;IntArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a1d8e27f6b7283c5f918f90a5d7d6ec94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateCurveVertexCountsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateCurveVertexCountsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_curves_1af505aabdf525fe48f76eeb4f626ca3ea" kindref="member">GetCurveVertexCountsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a6ca7cc8980d11766db4a9a25801db215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetWidthsAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetWidthsAttr</name>
        <briefdescription>
<para>Provides width specification for the curves, whose application will depend on whether the curve is oriented (normals are defined for it), in which case widths are &quot;ribbon width&quot;, or unoriented, in which case widths are cylinder width. </para>
        </briefdescription>
        <detaileddescription>
<para>&apos;widths&apos; is not a generic Primvar, but the number of elements in this attribute will be determined by its &apos;interpolation&apos;. See <ref refid="class_usd_geom_curves_1ac0d209cd546af10f5e3597dea5d50955" kindref="member">SetWidthsInterpolation()</ref> . If &apos;widths&apos; and &apos;primvars:widths&apos; are both specified, the latter has precedence.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float[] widths</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;float&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;FloatArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a3b5c5f41eebd5eaf344f9a2aa3688e56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateWidthsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateWidthsAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_curves_1a6ca7cc8980d11766db4a9a25801db215" kindref="member">GetWidthsAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a914fb16c11a5e0d5e30fd55968a6fd7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDGEOM_API TfToken GetWidthsInterpolation</definition>
        <argsstring>() const</argsstring>
        <name>GetWidthsInterpolation</name>
        <briefdescription>
<para>Get the <ref refid="class_usd_geom_primvar_1Usd_InterpolationVals" kindref="member">interpolation</ref> for the <emphasis>widths</emphasis> attribute. </para>
        </briefdescription>
        <detaileddescription>
<para>Although &apos;widths&apos; is not classified as a generic <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref> (and will not be included in the results of <ref refid="class_usd_geom_primvars_a_p_i_1a7b17c4b3c0b6c13fbbb6d406f9971814" kindref="member">UsdGeomPrimvarsAPI::GetPrimvars()</ref> ) it does require an interpolation specification. The fallback interpolation, if left unspecified, is UsdGeomTokens-&gt;vertex , which means a width value is specified at the end of each curve segment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1ac0d209cd546af10f5e3597dea5d50955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>USDGEOM_API bool SetWidthsInterpolation</definition>
        <argsstring>(TfToken const &amp;interpolation)</argsstring>
        <name>SetWidthsInterpolation</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>interpolation</declname>
        </param>
        <briefdescription>
<para>Set the <ref refid="class_usd_geom_primvar_1Usd_InterpolationVals" kindref="member">interpolation</ref> for the <emphasis>widths</emphasis> attribute. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true upon success, false if <computeroutput>interpolation</computeroutput> is not a legal value as defined by UsdPrimvar::IsValidInterpolation(), or if there was a problem setting the value. No attempt is made to validate that the widths attr&apos;s value contains the right number of elements to match its interpolation to its prim&apos;s topology.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_usd_geom_curves_1a914fb16c11a5e0d5e30fd55968a6fd7a" kindref="member">GetWidthsInterpolation()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="231" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a902e505e0c605c7c38ea7d447762c979" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API size_t</type>
        <definition>USDGEOM_API size_t GetCurveCount</definition>
        <argsstring>(UsdTimeCode timeCode=UsdTimeCode::Default()) const</argsstring>
        <name>GetCurveCount</name>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>timeCode</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Returns the number of curves as defined by the size of the <emphasis>curveVertexCounts</emphasis> array at <emphasis>timeCode</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para><para><simplesect kind="note"><para>For most code, this check will be performant. When using file formats where the cost of attribute reading is high and the time sampled array will be read into memory later, it may be better to explicitly read the value once and check the size of the array directly. </para>
</simplesect>
</para>
<simplesect kind="see"><para><ref refid="class_usd_geom_curves_1af505aabdf525fe48f76eeb4f626ca3ea" kindref="member">GetCurveVertexCountsAttr()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="260" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_geom_curves_1ae40ae43320babff8a254a3a8107a255a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDGEOM_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1a34d0ea23b101187e36275f62710226ef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_curves" kindref="compound">UsdGeomCurves</ref></type>
        <definition>static USDGEOM_API UsdGeomCurves Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_geom_curves" kindref="compound">UsdGeomCurves</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdGeomCurves(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1ac20abf671ac9b3bec5aba52db778add7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool ComputeExtent</definition>
        <argsstring>(const VtVec3fArray &amp;points, const VtFloatArray &amp;widths, VtVec3fArray *extent)</argsstring>
        <name>ComputeExtent</name>
        <param>
          <type>const VtVec3fArray &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const VtFloatArray &amp;</type>
          <declname>widths</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>Compute the extent for the curves defined by points and widths. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true upon success, false if unable to calculate extent.</para>
</simplesect>
On success, extent will contain an approximate axis-aligned bounding box of the curve defined by points with the given widths.</para>
<para>This function is to provide easy authoring of extent for usd authoring tools, hence it is static and acts outside a specific prim (as in attribute based methods). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1aa7ad2498cd097e47f5ae39698b6f9c4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API bool</type>
        <definition>static USDGEOM_API bool ComputeExtent</definition>
        <argsstring>(const VtVec3fArray &amp;points, const VtFloatArray &amp;widths, const GfMatrix4d &amp;transform, VtVec3fArray *extent)</argsstring>
        <name>ComputeExtent</name>
        <param>
          <type>const VtVec3fArray &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const VtFloatArray &amp;</type>
          <declname>widths</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>extent</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. Computes the extent as if the matrix <computeroutput>transform</computeroutput> was first applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="250" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_geom_curves_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDGEOM_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_geom_boundable_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplements>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_geom_curves_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDGEOM_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_curves_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_geom_curves_1a1e6b9f0da5624212c58019b749c21286" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDGEOM_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_geom_boundable_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplements>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/curves.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for <ref refid="class_usd_geom_basis_curves" kindref="compound">UsdGeomBasisCurves</ref>, <ref refid="class_usd_geom_nurbs_curves" kindref="compound">UsdGeomNurbsCurves</ref>, and <ref refid="class_usd_geom_hermite_curves" kindref="compound">UsdGeomHermiteCurves</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>The BasisCurves schema is designed to be analagous to offline renderers&apos; notion of batched curves (such as the classical RIB definition via Basis and Curves statements), while the NurbsCurve schema is designed to be analgous to the NURBS curves found in packages like Maya and Houdini while retaining their consistency with the RenderMan specification for NURBS Patches. HermiteCurves are useful for the interchange of animation guides and paths.</para>
<para>It is safe to use the length of the curve vertex count to derive the number of curves and the number and layout of curve vertices, but this schema should NOT be used to derive the number of curve points. While vertex indices are implicit in all shipped descendent types of this schema, one should not assume that all internal or future shipped schemas will follow this pattern. Be sure to key any indexing behavior off the concrete type, not this abstract type. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6188">
        <label>UsdGeomBasisCurves</label>
        <link refid="class_usd_geom_basis_curves"/>
        <childnode refid="6180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6185">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="6186" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6180">
        <label>UsdGeomCurves</label>
        <link refid="class_usd_geom_curves"/>
        <childnode refid="6181" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6182">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="6183" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6181">
        <label>UsdGeomPointBased</label>
        <link refid="class_usd_geom_point_based"/>
        <childnode refid="6182" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6186">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6187" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6190">
        <label>UsdGeomNurbsCurves</label>
        <link refid="class_usd_geom_nurbs_curves"/>
        <childnode refid="6180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6187">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6189">
        <label>UsdGeomHermiteCurves</label>
        <link refid="class_usd_geom_hermite_curves"/>
        <childnode refid="6180" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6183">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="6184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6184">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="6185" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6196">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="6197" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6191">
        <label>UsdGeomCurves</label>
        <link refid="class_usd_geom_curves"/>
        <childnode refid="6192" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6193">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="6194" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6192">
        <label>UsdGeomPointBased</label>
        <link refid="class_usd_geom_point_based"/>
        <childnode refid="6193" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6197">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6198" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6198">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6194">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="6195" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6195">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="6196" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdGeom/curves.h" line="76" column="1" bodyfile="pxr/usd/usdGeom/curves.h" bodystart="75" bodyend="261"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdGeomCurves</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_geom_curves_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" virt="virtual"><scope>UsdGeomCurves</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdGeomCurves</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_geom_curves_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" virt="non-virtual"><scope>UsdGeomCurves</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_geom_curves_1a1e6b9f0da5624212c58019b749c21286" prot="private" virt="virtual"><scope>UsdGeomCurves</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdGeomCurves</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdGeomCurves</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_geom_curves_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdGeomCurves</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_xformable_1a8b0d6e551f3705724405ddf6795756a7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddOrientOp</name></member>
      <member refid="class_usd_geom_xformable_1ac01badf7416ca43636d9e479bc47da33" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1aba511327f305e9a8b3f8941e244c8992" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1a63ffbff66e60a314adac3380d533469f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4af9af5dc523e80fce81a88014edef19" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1ac7235be9524c6eb1a906f3247f9833f0" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1a353b43cb6f6d04b2db5b68c057d0494f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a9c089e1932ce91477becbc1f01bdfb02" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a6dd6174a48238d6a9564128f43362ce2" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a5938bf453b0f07bfaf80d121b916d720" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a4f84556fa9b1fab0432b8c4342e98045" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddScaleOp</name></member>
      <member refid="class_usd_geom_xformable_1a0fd59cb1cdd089e0d93fa755fb0da268" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1a782fe5d36ac6657235b80741d47a8b1f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddTranslateOp</name></member>
      <member refid="class_usd_geom_xformable_1ad6dfc740dcec052482489647af9ed36b" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>AddXformOp</name></member>
      <member refid="class_usd_geom_xformable_1a10a241711290631508cfc349ad4ab64d" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ClearXformOpOrder</name></member>
      <member refid="class_usd_geom_imageable_1a1174d9985088dd364f6a56925073fe76" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeEffectiveVisibility</name></member>
      <member refid="class_usd_geom_curves_1ac20abf671ac9b3bec5aba52db778add7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_curves_1aa7ad2498cd097e47f5ae39698b6f9c4d" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_point_based_1a66d1156f15021eb44b2cb646f4cc066a" prot="public" virt="non-virtual" ambiguityscope="UsdGeomPointBased::"><scope>UsdGeomCurves</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_point_based_1a47310cb36cb5dab8509959573e1ca417" prot="public" virt="non-virtual" ambiguityscope="UsdGeomPointBased::"><scope>UsdGeomCurves</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" prot="public" virt="non-virtual" ambiguityscope="UsdGeomGprim::"><scope>UsdGeomCurves</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_boundable_1a413c9eb5b4e1d8fddd627cf33ed4a106" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_boundable_1a7fa34cebf9339958ad25099dd635c9c7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_imageable_1a503f6d39abbd1b62c3c55f227461334d" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeLocalBound</name></member>
      <member refid="class_usd_geom_imageable_1a8e3fb09253ba63d63921f665d63cd270" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeLocalToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1a4313664fa692f724da56cc254bce70fc" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeParentToWorldTransform</name></member>
      <member refid="class_usd_geom_point_based_1a007aedc5640c36c1b656ae4406593a15" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputePointsAtTime</name></member>
      <member refid="class_usd_geom_point_based_1aaa8d359dfd5a70ff311683b6bb989c74" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputePointsAtTime</name></member>
      <member refid="class_usd_geom_point_based_1ae6f15a2de15825522391c72252c4cdc1" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputePointsAtTimes</name></member>
      <member refid="class_usd_geom_imageable_1ad5a114f3776eb75edc651e8c2d67f8ff" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a1aa2ea4240e7e12f11122d7ff8ad7f90" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputePurpose</name></member>
      <member refid="class_usd_geom_imageable_1a2a7d61f7af1a02e095e6a8abcf8e641f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a00c5620a09313aa39cb0d79f492b340f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a54086b2386d22b1de4aaeb5b3005533d" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeUntransformedBound</name></member>
      <member refid="class_usd_geom_imageable_1ac0bfa1554d9b57303c14f71d084c578d" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeVisibility</name></member>
      <member refid="class_usd_geom_imageable_1ae616043b0f7fbc631ef9e5c784132a6c" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>ComputeWorldBound</name></member>
      <member refid="class_usd_geom_point_based_1ae13702eda2c800254bc40d3948420457" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateAccelerationsAttr</name></member>
      <member refid="class_usd_geom_curves_1a1d8e27f6b7283c5f918f90a5d7d6ec94" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateCurveVertexCountsAttr</name></member>
      <member refid="class_usd_geom_gprim_1a7fd86a311b27d9b4fdd82736bb423056" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateDisplayColorAttr</name></member>
      <member refid="class_usd_geom_gprim_1a0915951c95ea904181354ac2d27c5ec6" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateDisplayColorPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1ad5be639be4c7963ef213b15594a1dbb6" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateDisplayOpacityAttr</name></member>
      <member refid="class_usd_geom_gprim_1af90ae547097a320fad7d3f7bd9e681f9" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateDisplayOpacityPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1a4cd597e15452c6b3f3fa8b0429023b65" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateDoubleSidedAttr</name></member>
      <member refid="class_usd_geom_boundable_1a20dfcd57796694016d7d852e798458d8" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateExtentAttr</name></member>
      <member refid="class_usd_geom_point_based_1a1143c66e2de7560cbd81fe377949ff89" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateNormalsAttr</name></member>
      <member refid="class_usd_geom_gprim_1a40d10614ef3494576ded1ef08fb75f6a" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateOrientationAttr</name></member>
      <member refid="class_usd_geom_point_based_1a2eb01bcff2e20a4b8809099496bad01d" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreatePointsAttr</name></member>
      <member refid="class_usd_geom_imageable_1aafc2e3aa91cf892f7937cc46a2351472" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1a3f4f6685ac7cef1d8ef94c44586b84bc" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreatePurposeAttr</name></member>
      <member refid="class_usd_geom_point_based_1aaf96c3a4bc0546725bc50c23067b7d1a" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateVelocitiesAttr</name></member>
      <member refid="class_usd_geom_imageable_1a96d4959f4d99367dfa3a79a3371e278a" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateVisibilityAttr</name></member>
      <member refid="class_usd_geom_curves_1a3b5c5f41eebd5eaf344f9a2aa3688e56" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateWidthsAttr</name></member>
      <member refid="class_usd_geom_xformable_1a03e49a63dc0bed6c97cee6bbc10aa182" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>CreateXformOpOrderAttr</name></member>
      <member refid="class_usd_geom_curves_1a34d0ea23b101187e36275f62710226ef" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>Get</name></member>
      <member refid="class_usd_geom_point_based_1abf4df1035f2f759d5119392f94a73626" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetAccelerationsAttr</name></member>
      <member refid="class_usd_geom_curves_1a902e505e0c605c7c38ea7d447762c979" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetCurveCount</name></member>
      <member refid="class_usd_geom_curves_1af505aabdf525fe48f76eeb4f626ca3ea" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetCurveVertexCountsAttr</name></member>
      <member refid="class_usd_geom_gprim_1a0f8310a9dbe0bfc4be2bf4aa32e4a3e4" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetDisplayColorAttr</name></member>
      <member refid="class_usd_geom_gprim_1ab36f805d674846aeeb296c8dbe661533" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetDisplayColorPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1af3b5a808697655fb58eddafb01003527" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetDisplayOpacityAttr</name></member>
      <member refid="class_usd_geom_gprim_1a4d68d7e0959dfef2db82a7a1f1a6eea8" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetDisplayOpacityPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1a63367a54086e014dda98cc79ad5f8602" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetDoubleSidedAttr</name></member>
      <member refid="class_usd_geom_boundable_1abecc87b5433fec139295a78b439b0531" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetExtentAttr</name></member>
      <member refid="class_usd_geom_xformable_1a9a04ccb1ba8aa16e8cc1e878c2c92969" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1a3bdae958563500cfdf2b4f3bcf34c465" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1ad0838e193af826f5bbde3c274e9839ce" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_point_based_1ac9a057e1f221d9a20b99887f35f84480" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetNormalsAttr</name></member>
      <member refid="class_usd_geom_point_based_1ae0ac6f60f8135799ba42a16fe466f89b" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetNormalsInterpolation</name></member>
      <member refid="class_usd_geom_imageable_1ac7d41ddd5b5d274785f4a109a7cebad5" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetOrderedPurposeTokens</name></member>
      <member refid="class_usd_geom_xformable_1a5e7cd1ac98925aa41af4f83d1efe6375" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetOrderedXformOps</name></member>
      <member refid="class_usd_geom_gprim_1a6d7f451cf0aa27125cc118b030ebb735" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetOrientationAttr</name></member>
      <member refid="class_usd_geom_xformable_1a618c9b0ad5f39a8ebfc7f8e1b9319e5f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetOrientOp</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetPath</name></member>
      <member refid="class_usd_geom_point_based_1ade9b7ab444b88ff2bb20ac5533dae030" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetPointsAttr</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_imageable_1a5be4a4143e2b9f89f9bea44d27639a92" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetPurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a2dfc306cddf0c522d39ba477e91ec161" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetPurposeVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a6d16bc5455344e131683d91e14ab62db" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1adbc1cc0684aad279a9f7954cce0ad083" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1a8b871424ffaff814ec4595b406198e12" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1aeabbd1a4b1e09254ddf700bfc1d83790" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a9846b234308946bb9f91e1520f97de05" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1a803cfbc1fe2750bf9c5aadd83bd50a4c" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1aa244d99dd6e7f5abecc57f8ece422c93" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a478e11c424f265543b333a00fb4268d0" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a12311efeb62f64b39a02a1c001169ec6" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4ac8cec6efb64e0cbdd4b7a72f71c7f3" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a2029e0b90a0684a9a8c31e62aa98d317" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetScaleOp</name></member>
      <member refid="class_usd_geom_curves_1ae40ae43320babff8a254a3a8107a255a" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_geom_xformable_1a0384cb87a595fa56c29463ff4fe73015" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1ab855f0ea37793df1f22d2bce3d68caff" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1a64d8dabfbe974503daf5e8f2057424f7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a582133c4e08813d891690f58497d4add" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a0b425fbfdfe0f254add07f904ab231aa" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1ab81f8a9eb062d2c726dbb8303188408c" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetTranslateOp</name></member>
      <member refid="class_usd_geom_point_based_1a2840a996c8a768ecea390147390dc222" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetVelocitiesAttr</name></member>
      <member refid="class_usd_geom_imageable_1a943eddc325190bd67789407400f122b7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetVisibilityAttr</name></member>
      <member refid="class_usd_geom_curves_1a6ca7cc8980d11766db4a9a25801db215" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetWidthsAttr</name></member>
      <member refid="class_usd_geom_curves_1a914fb16c11a5e0d5e30fd55968a6fd7a" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetWidthsInterpolation</name></member>
      <member refid="class_usd_geom_xformable_1ab153aead880eebecaf2138706c4bdbf2" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetXformOp</name></member>
      <member refid="class_usd_geom_xformable_1af8533621f9f141dfd016711171433caf" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>GetXformOpOrderAttr</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_geom_xformable_1adb444654a8443f3413213cc526ee6c1a" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>IsTransformationAffectedByAttrNamed</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>IsTyped</name></member>
      <member refid="class_usd_geom_imageable_1a91eda805326fd94cc9910cfaeb4ac4a0" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>MakeInvisible</name></member>
      <member refid="class_usd_geom_xformable_1a97e5c56a739490600e4e7e37b3953a08" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>MakeMatrixXform</name></member>
      <member refid="class_usd_geom_imageable_1a3fd30c76b787e7e32180c1b454b971c7" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>MakeVisible</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>operator bool</name></member>
      <member refid="class_usd_geom_curves_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_point_based_1a5ab0dc3cc838d49f4e8ac98d8f00ca00" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>SetNormalsInterpolation</name></member>
      <member refid="class_usd_geom_imageable_1a6b808012a6a5bc9df34e794ff82bb6f0" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a8c0c8b7faa4056a7267c586b2ffc0bd8" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_xformable_1a99c4c768f58d6375edad8c9c7cb4bee2" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>SetResetXformStack</name></member>
      <member refid="class_usd_geom_curves_1ac0d209cd546af10f5e3597dea5d50955" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>SetWidthsInterpolation</name></member>
      <member refid="class_usd_geom_xformable_1a4b6dd6e51eb84725c763d064c4f9f3ba" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>SetXformOpOrder</name></member>
      <member refid="class_usd_geom_xformable_1aca0c1f0eb2639bd9e126f5e6a16e856f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_xformable_1a43e63cb240ddb36f550b3c86a22252c6" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_boundable_1a93364dd184714cc86a93a4e6c943f54f" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_boundable_1acddb485259d4c8d3c0fdb9445b85a19e" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_curves_1a1657d044804af476231fb61808695deb" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomCurves</name></member>
      <member refid="class_usd_geom_curves_1ae31d2c7eb6c423d94806b38a61f9b7da" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomCurves</name></member>
      <member refid="class_usd_geom_gprim_1a10c1cc1805ae388635bba63c3653adb8" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomGprim</name></member>
      <member refid="class_usd_geom_gprim_1a2bb55640543c9629ee6f9b05d7dcd0cc" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomGprim</name></member>
      <member refid="class_usd_geom_imageable_1a00ea23bdac8d751c2b97dc8fe5cd7f73" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_imageable_1a912f3e5572536e0492914fe251446bc9" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_point_based_1a8c3ea3da2f4a09ade8912582173b68ec" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomPointBased</name></member>
      <member refid="class_usd_geom_point_based_1a8303da656cab834f26a58c92937d30f5" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomPointBased</name></member>
      <member refid="class_usd_geom_xformable_1adf53f566e1d4a6ff2c4e6e90590b0510" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_geom_xformable_1a4f5550d15c8a43ef4ac30a063f96d0cd" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_geom_curves_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdGeomCurves</scope><name>UsdTyped</name></member>
      <member refid="class_usd_geom_boundable_1af5dfc6e58452966f10c6f8d0a771c346" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_curves_1a151c6a250a18899c82dd0e8a989abb2a" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdGeomCurves</name></member>
      <member refid="class_usd_geom_gprim_1a0a03ad7c400946736b8d97a26cbf7211" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdGeomGprim</name></member>
      <member refid="class_usd_geom_imageable_1acbd981c2779c70ec4c3fd5d8cc610925" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdGeomImageable</name></member>
      <member refid="class_usd_geom_point_based_1ac327cfc78d950cc82baefe3111580200" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdGeomPointBased</name></member>
      <member refid="class_usd_geom_xformable_1a8c8f037aa67ff544aea009f0881ed530" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdGeomCurves</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
