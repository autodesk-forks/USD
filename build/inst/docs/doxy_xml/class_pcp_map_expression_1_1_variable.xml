<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_map_expression_1_1_variable" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>PcpMapExpression::Variable</compoundname>
    <includes refid="map_expression_8h" local="no">mapExpression.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1afec4dd788af34d51452a13a90d8cacb8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Variable</definition>
        <argsstring>(Variable const &amp;)=delete</argsstring>
        <name>Variable</name>
        <param>
          <type><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1abc20b3e1536cbee22688ab5a1d26194b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref> &amp;</type>
        <definition>Variable&amp; operator=</definition>
        <argsstring>(Variable const &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="98" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1ae66ae8ada34dafb779ee60b39f58459b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Variable</definition>
        <argsstring>()=default</argsstring>
        <name>Variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1a4319c110ceb0a5838046fa12e0720d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~Variable</definition>
        <argsstring>()</argsstring>
        <name>~Variable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1ac41f2c165ba74516a9a8b34004b37b56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref> &amp;</type>
        <definition>virtual const Value&amp; GetValue</definition>
        <argsstring>() const =0</argsstring>
        <name>GetValue</name>
        <briefdescription>
<para>Return the current value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1aeab2b4f8de6329ea6cf7b1c89469d008" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void SetValue</definition>
        <argsstring>(Value &amp;&amp;value)=0</argsstring>
        <name>SetValue</name>
        <param>
          <type><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref> &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Mutate the variable to have the new value. </para>
        </briefdescription>
        <detaileddescription>
<para>This will also invalidate dependant expressions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_map_expression_1_1_variable_1a81f1f079229ac5bfdb1fd0af6a073d0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref></type>
        <definition>virtual PcpMapExpression GetExpression</definition>
        <argsstring>() const =0</argsstring>
        <name>GetExpression</name>
        <briefdescription>
<para>Return an expression representing the value of this variable. </para>
        </briefdescription>
        <detaileddescription>
<para>This lets you use the variable as a sub-term in other expressions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/mapExpression.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref> is a mutable memory cell that holds a value. </para>
    </briefdescription>
    <detaileddescription>
<para>Changing a variable&apos;s value invalidates any expressions using that variable. </para>
    </detaileddescription>
    <location file="pxr/usd/pcp/mapExpression.h" line="96" column="1" bodyfile="pxr/usd/pcp/mapExpression.h" bodystart="96" bodyend="110"/>
    <listofallmembers>
      <member refid="class_pcp_map_expression_1_1_variable_1a81f1f079229ac5bfdb1fd0af6a073d0a" prot="public" virt="pure-virtual"><scope>PcpMapExpression::Variable</scope><name>GetExpression</name></member>
      <member refid="class_pcp_map_expression_1_1_variable_1ac41f2c165ba74516a9a8b34004b37b56" prot="public" virt="pure-virtual"><scope>PcpMapExpression::Variable</scope><name>GetValue</name></member>
      <member refid="class_pcp_map_expression_1_1_variable_1abc20b3e1536cbee22688ab5a1d26194b" prot="private" virt="non-virtual"><scope>PcpMapExpression::Variable</scope><name>operator=</name></member>
      <member refid="class_pcp_map_expression_1_1_variable_1aeab2b4f8de6329ea6cf7b1c89469d008" prot="public" virt="pure-virtual"><scope>PcpMapExpression::Variable</scope><name>SetValue</name></member>
      <member refid="class_pcp_map_expression_1_1_variable_1afec4dd788af34d51452a13a90d8cacb8" prot="private" virt="non-virtual"><scope>PcpMapExpression::Variable</scope><name>Variable</name></member>
      <member refid="class_pcp_map_expression_1_1_variable_1ae66ae8ada34dafb779ee60b39f58459b" prot="public" virt="non-virtual"><scope>PcpMapExpression::Variable</scope><name>Variable</name></member>
      <member refid="class_pcp_map_expression_1_1_variable_1a4319c110ceb0a5838046fa12e0720d31" prot="public" virt="virtual"><scope>PcpMapExpression::Variable</scope><name>~Variable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
