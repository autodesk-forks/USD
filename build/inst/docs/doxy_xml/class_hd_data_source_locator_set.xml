<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_data_source_locator_set" kind="class" language="C++" prot="public">
    <compoundname>HdDataSourceLocatorSet</compoundname>
    <includes refid="data_source_locator_8h" local="no">dataSourceLocator.h</includes>
    <innerclass refid="class_hd_data_source_locator_set_1_1_intersection_iterator" prot="public">HdDataSourceLocatorSet::IntersectionIterator</innerclass>
    <innerclass refid="class_hd_data_source_locator_set_1_1_intersection_view" prot="public">HdDataSourceLocatorSet::IntersectionView</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_data_source_locator_set_1a1473e14b1ec9a1e1e6a8fa733a064c50" prot="private" static="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">TfSmallVector</ref>&lt; <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref>, 8 &gt;</type>
        <definition>using _Locators =  TfSmallVector&lt;HdDataSourceLocator, 8&gt;</definition>
        <argsstring></argsstring>
        <name>_Locators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="239" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_data_source_locator_set_1affe7964dd53193d77c4e31f3f4f54f63" prot="public" static="no">
        <type>typename <ref refid="class_hd_data_source_locator" kindref="compound">_Locators::const_iterator</ref></type>
        <definition>using const_iterator =  typename _Locators::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="241" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_data_source_locator_set_1aa33df86d2ff07af876c3ccc91873298a" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_small_vector" kindref="compound">_Locators</ref></type>
        <definition>_Locators _locators</definition>
        <argsstring></argsstring>
        <name>_locators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="369" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a3060470a54120356ee5d77004b279b72" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdDataSourceLocatorSet</definition>
        <argsstring>()</argsstring>
        <name>HdDataSourceLocatorSet</name>
        <briefdescription>
<para>The empty set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="244" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="244" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a60963d0ea824d51b780df0b3a588e213" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocatorSet</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator)</argsstring>
        <name>HdDataSourceLocatorSet</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a8048eccf3ab7eeb06e2cb22a43ec5c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdDataSourceLocatorSet</definition>
        <argsstring>(const std::initializer_list&lt; const HdDataSourceLocator &gt; &amp;l)</argsstring>
        <name>HdDataSourceLocatorSet</name>
        <param>
          <type>const std::initializer_list&lt; const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &gt; &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a81769f48ab110a62788819213eaf1a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdDataSourceLocatorSet</definition>
        <argsstring>(const HdDataSourceLocatorSet &amp;rhs)=default</argsstring>
        <name>HdDataSourceLocatorSet</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy Ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a5b763c460c416a57893099b1e52e702c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdDataSourceLocatorSet</definition>
        <argsstring>(HdDataSourceLocatorSet &amp;&amp;rhs)=default</argsstring>
        <name>HdDataSourceLocatorSet</name>
        <param>
          <type><ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move Ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="262" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a394c1c6594a11e212da0174553bb17f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
        <definition>HdDataSourceLocatorSet&amp; operator=</definition>
        <argsstring>(HdDataSourceLocatorSet &amp;&amp;rhs)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1ae64c007f128c97815008d4bcefd23023" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
        <definition>HdDataSourceLocatorSet&amp; operator=</definition>
        <argsstring>(const HdDataSourceLocatorSet &amp;rhs)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a2eff826c5b12aaf2c6b49c871b2ec6e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void insert</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a4e6386c31fc0c0adfefeafa605a1b064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void insert</definition>
        <argsstring>(const HdDataSourceLocatorSet &amp;locatorSet)</argsstring>
        <name>insert</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
          <declname>locatorSet</declname>
        </param>
        <briefdescription>
<para>Changes this set to be the union of this set and the given set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a078c0fedbd998a0661e8be122b91cc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void insert</definition>
        <argsstring>(HdDataSourceLocatorSet &amp;&amp;locatorSet)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;&amp;</type>
          <declname>locatorSet</declname>
        </param>
        <briefdescription>
<para>Changes this set to be the union of this set and the given set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a95bb9a782ff41b6ec8b32094199f5d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void append</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
<para><ref refid="class_hd_data_source_locator_set_1a95bb9a782ff41b6ec8b32094199f5d36" kindref="member">append()</ref> is semantically equivalent to insert(), but works much faster if <computeroutput>locator</computeroutput> would be added to the end of the set, lexicographically. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="285" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a3b167f84b3b41bc2f6eee58c3c1d96b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const HdDataSourceLocatorSet &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="287" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="287" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a071d44d3ec94f17eb52e3c9881cffc0a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const HdDataSourceLocatorSet &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="291" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a3f69aa085d3e717185ef970c8065b853" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const_iterator</type>
        <definition>HD_API const_iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Iterates through minimal, lexicographically sorted list of data source locators generating this set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1ae9d7981ca440226360f05158271a76b3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const_iterator</type>
        <definition>HD_API const_iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a57b79d9e2b7dc9f5d9fe2d0be2459964" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool Intersects</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator) const</argsstring>
        <name>Intersects</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
<para>True if and only if locator or any of its descendants is in the set (closed under descendancy). </para>
        </briefdescription>
        <detaileddescription>
<para>In other words, true if and only if there is a generator of this set that intersects the given locator in the sense of <ref refid="class_hd_data_source_locator_1a328f3d3c60ae666a58f1be91cddbfc73" kindref="member">HdDataSourceLocator::Intersects</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1af4fb5d30c17e732c24e839ccd13d7763" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool Intersects</definition>
        <argsstring>(const HdDataSourceLocatorSet &amp;locatorSet) const</argsstring>
        <name>Intersects</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
          <declname>locatorSet</declname>
        </param>
        <briefdescription>
<para>True if and only if the two sets (closed under descendancy) intersect. </para>
        </briefdescription>
        <detaileddescription>
<para>In other words, true if and only if there is a generator x in this set and a generator y in the given set such that x and y intersect in the sense of <ref refid="class_hd_data_source_locator_1a328f3d3c60ae666a58f1be91cddbfc73" kindref="member">HdDataSourceLocator::Intersects</ref>. That is, one of the two sets contains a prefix of the other set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a519ed8819c00757febece7032308fd5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>True if and only if this set contains no data source locator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1adab1df338f5154b8873ac4d6a282e6ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool Contains</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator) const</argsstring>
        <name>Contains</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
<para>True if the set (closed under descendancy) contains the given locator. </para>
        </briefdescription>
        <detaileddescription>
<para>In other words, a prefix of the locator is a generator of the set in the sense of <ref refid="class_hd_data_source_locator_1a592f3c9581d65d9b8eb823e76a3ebf69" kindref="member">HdDataSourceLocator::HasPrefix</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a4a1f1fd0a5857974524e6564e938259b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref></type>
        <definition>HD_API HdDataSourceLocatorSet ReplacePrefix</definition>
        <argsstring>(const HdDataSourceLocator &amp;oldPrefix, const HdDataSourceLocator &amp;newPrefix) const</argsstring>
        <name>ReplacePrefix</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>oldPrefix</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>newPrefix</declname>
        </param>
        <briefdescription>
<para>Returns a lexicographically sorted locator set wherein locators in this set that have <computeroutput>oldPrefix</computeroutput> as a prefix use <computeroutput>newPrefix</computeroutput> instead. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned set is closed under descendancy and may have equal or fewer data source locators as a result. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a9439b0c3a0c0443f53bebf53052255c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API IntersectionView</type>
        <definition>HD_API IntersectionView Intersection</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator) const</argsstring>
        <name>Intersection</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
<para>Returns intersection with a locator as a range-like object so that it can be used in a for-loop. </para>
        </briefdescription>
        <detaileddescription>
<para>Every element in the intersection has locator as a prefix.</para>
<para>Examples: Intersection of { primvars:color } with primvars is { primvars:color }. Intersection of { primvars:color } with primvars:color:interpolation is { primvars:color:interpolation }. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="356" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_data_source_locator_set_1af934de6001313c783e8c0b30eaf7f9b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocatorSet&amp; UniversalSet</definition>
        <argsstring>()</argsstring>
        <name>UniversalSet</name>
        <briefdescription>
<para>The set containing everything. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="248" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a476167be1a9f4552ecaa627313cd98c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _Normalize</definition>
        <argsstring>()</argsstring>
        <name>_Normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1a4db503ede59f5585b0100519fbd2d457" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InsertAndDeleteSuffixes</definition>
        <argsstring>(_Locators::iterator *position, const HdDataSourceLocator &amp;locator)</argsstring>
        <name>_InsertAndDeleteSuffixes</name>
        <param>
          <type><ref refid="class_hd_data_source_locator" kindref="compound">_Locators::iterator</ref> *</type>
          <declname>position</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_data_source_locator_set_1aa716d9507a85da2c72e3fd480b940af5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator _FirstIntersection</definition>
        <argsstring>(const HdDataSourceLocator &amp;locator) const</argsstring>
        <name>_FirstIntersection</name>
        <param>
          <type>const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
          <declname>locator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/dataSourceLocator.h" line="365" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a set of data source locators closed under descendancy. </para>
    </briefdescription>
    <detaileddescription>
<para>That is, if a data source locator x is in the set (that is <ref refid="class_hd_data_source_locator_set_1adab1df338f5154b8873ac4d6a282e6ac" kindref="member">HdDataSourceLocatorSet::Contains</ref> returns true), then every data source locator y that has x as a prefix is implicitly also assumed to be in the set.</para>
<para>In particular, the data source locator set &lt;x, y&gt; generated by x and y is equivalent to (and will be simplified to) just &lt;x&gt; if x is a prefix of y.</para>
<para>Note that <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref>{<ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator()</ref>} is the universal set containing every data source locator. </para>
    </detaileddescription>
    <location file="pxr/imaging/hd/dataSourceLocator.h" line="237" column="1" bodyfile="pxr/imaging/hd/dataSourceLocator.h" bodystart="236" bodyend="370"/>
    <listofallmembers>
      <member refid="class_hd_data_source_locator_set_1aa716d9507a85da2c72e3fd480b940af5" prot="private" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>_FirstIntersection</name></member>
      <member refid="class_hd_data_source_locator_set_1a4db503ede59f5585b0100519fbd2d457" prot="private" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>_InsertAndDeleteSuffixes</name></member>
      <member refid="class_hd_data_source_locator_set_1a1473e14b1ec9a1e1e6a8fa733a064c50" prot="private" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>_Locators</name></member>
      <member refid="class_hd_data_source_locator_set_1aa33df86d2ff07af876c3ccc91873298a" prot="private" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>_locators</name></member>
      <member refid="class_hd_data_source_locator_set_1a476167be1a9f4552ecaa627313cd98c4" prot="private" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>_Normalize</name></member>
      <member refid="class_hd_data_source_locator_set_1a95bb9a782ff41b6ec8b32094199f5d36" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>append</name></member>
      <member refid="class_hd_data_source_locator_set_1a3f69aa085d3e717185ef970c8065b853" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>begin</name></member>
      <member refid="class_hd_data_source_locator_set_1affe7964dd53193d77c4e31f3f4f54f63" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>const_iterator</name></member>
      <member refid="class_hd_data_source_locator_set_1adab1df338f5154b8873ac4d6a282e6ac" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>Contains</name></member>
      <member refid="class_hd_data_source_locator_set_1ae9d7981ca440226360f05158271a76b3" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>end</name></member>
      <member refid="class_hd_data_source_locator_set_1a3060470a54120356ee5d77004b279b72" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>HdDataSourceLocatorSet</name></member>
      <member refid="class_hd_data_source_locator_set_1a60963d0ea824d51b780df0b3a588e213" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>HdDataSourceLocatorSet</name></member>
      <member refid="class_hd_data_source_locator_set_1a8048eccf3ab7eeb06e2cb22a43ec5c06" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>HdDataSourceLocatorSet</name></member>
      <member refid="class_hd_data_source_locator_set_1a81769f48ab110a62788819213eaf1a51" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>HdDataSourceLocatorSet</name></member>
      <member refid="class_hd_data_source_locator_set_1a5b763c460c416a57893099b1e52e702c" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>HdDataSourceLocatorSet</name></member>
      <member refid="class_hd_data_source_locator_set_1a2eff826c5b12aaf2c6b49c871b2ec6e6" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>insert</name></member>
      <member refid="class_hd_data_source_locator_set_1a4e6386c31fc0c0adfefeafa605a1b064" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>insert</name></member>
      <member refid="class_hd_data_source_locator_set_1a078c0fedbd998a0661e8be122b91cc66" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>insert</name></member>
      <member refid="class_hd_data_source_locator_set_1a9439b0c3a0c0443f53bebf53052255c1" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>Intersection</name></member>
      <member refid="class_hd_data_source_locator_set_1a57b79d9e2b7dc9f5d9fe2d0be2459964" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>Intersects</name></member>
      <member refid="class_hd_data_source_locator_set_1af4fb5d30c17e732c24e839ccd13d7763" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>Intersects</name></member>
      <member refid="class_hd_data_source_locator_set_1a519ed8819c00757febece7032308fd5e" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>IsEmpty</name></member>
      <member refid="class_hd_data_source_locator_set_1a071d44d3ec94f17eb52e3c9881cffc0a" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>operator!=</name></member>
      <member refid="class_hd_data_source_locator_set_1a394c1c6594a11e212da0174553bb17f5" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>operator=</name></member>
      <member refid="class_hd_data_source_locator_set_1ae64c007f128c97815008d4bcefd23023" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>operator=</name></member>
      <member refid="class_hd_data_source_locator_set_1a3b167f84b3b41bc2f6eee58c3c1d96b7" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>operator==</name></member>
      <member refid="class_hd_data_source_locator_set_1a4a1f1fd0a5857974524e6564e938259b" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>ReplacePrefix</name></member>
      <member refid="class_hd_data_source_locator_set_1af934de6001313c783e8c0b30eaf7f9b4" prot="public" virt="non-virtual"><scope>HdDataSourceLocatorSet</scope><name>UniversalSet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
