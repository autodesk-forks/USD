<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_notice_1_1___deliverer" kind="class" language="C++" prot="private">
    <compoundname>TfNotice::_Deliverer</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TfNotice::_StandardDeliverer&lt; _Deliverer&lt; LPtr, SPtr, Method, Notice &gt; &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename LPtr</type>
      </param>
      <param>
        <type>typename SPtr</type>
      </param>
      <param>
        <type>typename Method</type>
      </param>
      <param>
        <type>typename Notice</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_notice_1_1___deliverer_1a1365ae09e06ae8fec145fbace5ef33b2" prot="public" static="no">
        <type>Notice</type>
        <definition>typedef Notice NoticeType</definition>
        <argsstring></argsstring>
        <name>NoticeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="643" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_notice_1_1___deliverer_1af2ac8533a2703c06734143ca3b49421a" prot="public" static="no">
        <type>LPtr::DataType</type>
        <definition>typedef LPtr::DataType ListenerType</definition>
        <argsstring></argsstring>
        <name>ListenerType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="644" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="644" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_notice_1_1___deliverer_1a60cfe1c6c08183562a578716cfaf433b" prot="public" static="no">
        <type>Method</type>
        <definition>typedef Method MethodPtr</definition>
        <argsstring></argsstring>
        <name>MethodPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="645" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_tf_notice_1_1___deliverer_1a247c481b8b882d45a1190d1ca8ab3590" prot="public" static="no" mutable="no">
        <type>LPtr</type>
        <definition>LPtr _listener</definition>
        <argsstring></argsstring>
        <name>_listener</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="667" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_notice_1_1___deliverer_1ac57aa4663a42024ac97b57a51be95758" prot="public" static="no" mutable="no">
        <type>SPtr</type>
        <definition>SPtr _sender</definition>
        <argsstring></argsstring>
        <name>_sender</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="668" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_notice_1_1___deliverer_1a6e9a7c74bb4ca9750719f47815d7ee4a" prot="public" static="no" mutable="no">
        <type>MethodPtr</type>
        <definition>MethodPtr _method</definition>
        <argsstring></argsstring>
        <name>_method</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="669" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_notice_1_1___deliverer_1a94ae075cc07c7f2179368e8c304ee47d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>_Deliverer</definition>
        <argsstring>(LPtr const &amp;listener, MethodPtr const &amp;methodPtr, SPtr const &amp;sender=SPtr(), TfType const &amp;noticeType=TfType())</argsstring>
        <name>_Deliverer</name>
        <param>
          <type>LPtr const &amp;</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>MethodPtr const &amp;</type>
          <declname>methodPtr</declname>
        </param>
        <param>
          <type>SPtr const &amp;</type>
          <declname>sender</declname>
          <defval>SPtr()</defval>
        </param>
        <param>
          <type><ref refid="class_tf_type" kindref="compound">TfType</ref> const &amp;</type>
          <declname>noticeType</declname>
          <defval><ref refid="class_tf_type" kindref="compound">TfType</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="647" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="647" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_notice_1_1___deliverer_1a874efafdfcfdf1a3c06460571b6760bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _InvokeListenerMethod</definition>
        <argsstring>(ListenerType *listener, const NoticeType &amp;notice, const TfType &amp;noticeType, const TfWeakBase *, const void *, const std::type_info &amp;)</argsstring>
        <name>_InvokeListenerMethod</name>
        <param>
          <type>ListenerType *</type>
          <declname>listener</declname>
        </param>
        <param>
          <type>const NoticeType &amp;</type>
          <declname>notice</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
          <declname>noticeType</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref> *</type>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <param>
          <type>const std::type_info &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="657" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="657" bodyend="665"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/notice.h" line="641" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="639" bodyend="670"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1a1c6a397c917dd096237cba252c4a1827" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_BeginDelivery</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1a2c4def763e12bc01008bed923919c819" prot="protected" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_CastNotice</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1a476536f05f88f294864bf03d7d290f49" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_Deactivate</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1a94ae075cc07c7f2179368e8c304ee47d" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_Deliverer</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1a1b7f2b01cf5601a56fe1ef23dd617e2b" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_DelivererBase</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1ad0169074bf187d093e5bb3ff8b7249f6" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_EndDelivery</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_HasRemnant</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1a874efafdfcfdf1a3c06460571b6760bc" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_InvokeListenerMethod</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1ae2a5618896090abc86172d5f3db735af" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_IsActive</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1a5fcb32d9da37ac34de3a9177b6cd304b" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_IsMarkedForRemoval</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1a247c481b8b882d45a1190d1ca8ab3590" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_listener</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1a5a40ff3c56fe98a591bc15abf79cb03e" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_MarkForRemoval</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1a6e9a7c74bb4ca9750719f47815d7ee4a" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_method</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_Register</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1ac57aa4663a42024ac97b57a51be95758" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>_sender</name></member>
      <member refid="class_tf_notice_1_1___standard_deliverer_1a836af9921789465799f18b765a315d17" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>_SendToListener</name></member>
      <member refid="class_tf_notice_1_1___standard_deliverer_1aba208ced236fff1fcc18ab7bafdab505" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>Clone</name></member>
      <member refid="class_tf_notice_1_1___standard_deliverer_1af2db6f99f9106ab1ad487dd33e819cb8" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>Delivers</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>EnableNotification2</name></member>
      <member refid="class_tf_notice_1_1___standard_deliverer_1a65dc8e48c5f7f0dc837f9feac78c10b1" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>GetNoticeType</name></member>
      <member refid="class_tf_notice_1_1___standard_deliverer_1a1b9b87c2691b9b75c3ffcec6480a0e6c" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>GetSenderWeakBase</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1af2ac8533a2703c06734143ca3b49421a" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>ListenerType</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1a60cfe1c6c08183562a578716cfaf433b" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>MethodPtr</name></member>
      <member refid="class_tf_notice_1_1___deliverer_1a1365ae09e06ae8fec145fbace5ef33b2" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>NoticeType</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>operator=</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_notice_1_1___deliverer_base_1ab1aa8dc4324d077d62f173e105b4d0b9" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>~_DelivererBase</name></member>
      <member refid="class_tf_notice_1_1___standard_deliverer_1aa0cce6802f2af91b28fa53fa56f470ca" prot="public" virt="virtual"><scope>TfNotice::_Deliverer</scope><name>~_StandardDeliverer</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>TfNotice::_Deliverer</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
