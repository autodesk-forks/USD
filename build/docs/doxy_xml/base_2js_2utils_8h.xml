<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="base_2js_2utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="base_2js_2api_8h" local="yes">pxr/base/js/api.h</includes>
    <includes refid="js_2value_8h" local="yes">pxr/base/js/value.h</includes>
    <includes local="no">boost/none.hpp</includes>
    <includes local="no">boost/optional.hpp</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="46519">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="46520" relation="include">
        </childnode>
      </node>
      <node id="46527">
        <label>cstdint</label>
      </node>
      <node id="46530">
        <label>boost/none.hpp</label>
      </node>
      <node id="46524">
        <label>string</label>
      </node>
      <node id="46523">
        <label>map</label>
      </node>
      <node id="46517">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="46516">
        <label>pxr/base/js/utils.h</label>
        <link refid="base_2js_2utils_8h"/>
        <childnode refid="46517" relation="include">
        </childnode>
        <childnode refid="46518" relation="include">
        </childnode>
        <childnode refid="46521" relation="include">
        </childnode>
        <childnode refid="46530" relation="include">
        </childnode>
        <childnode refid="46531" relation="include">
        </childnode>
        <childnode refid="46524" relation="include">
        </childnode>
      </node>
      <node id="46521">
        <label>pxr/base/js/value.h</label>
        <link refid="js_2value_8h"/>
        <childnode refid="46517" relation="include">
        </childnode>
        <childnode refid="46518" relation="include">
        </childnode>
        <childnode refid="46522" relation="include">
        </childnode>
        <childnode refid="46526" relation="include">
        </childnode>
        <childnode refid="46527" relation="include">
        </childnode>
        <childnode refid="46528" relation="include">
        </childnode>
        <childnode refid="46524" relation="include">
        </childnode>
        <childnode refid="46529" relation="include">
        </childnode>
        <childnode refid="46525" relation="include">
        </childnode>
      </node>
      <node id="46518">
        <label>pxr/base/js/api.h</label>
        <link refid="base_2js_2api_8h_source"/>
        <childnode refid="46519" relation="include">
        </childnode>
      </node>
      <node id="46525">
        <label>vector</label>
      </node>
      <node id="46520">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="46522">
        <label>pxr/base/js/types.h</label>
        <link refid="base_2js_2types_8h"/>
        <childnode refid="46517" relation="include">
        </childnode>
        <childnode refid="46523" relation="include">
        </childnode>
        <childnode refid="46524" relation="include">
        </childnode>
        <childnode refid="46525" relation="include">
        </childnode>
      </node>
      <node id="46531">
        <label>boost/optional.hpp</label>
      </node>
      <node id="46529">
        <label>type_traits</label>
      </node>
      <node id="46526">
        <label>algorithm</label>
      </node>
      <node id="46528">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="base_2js_2utils_8h_1a89087d2d754432c693b4dbeba56d7a4d" prot="public" static="no">
        <type>boost::optional&lt; <ref refid="class_js_value" kindref="compound">JsValue</ref> &gt;</type>
        <definition>typedef boost::optional&lt;JsValue&gt; JsOptionalValue</definition>
        <argsstring></argsstring>
        <name>JsOptionalValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/utils.h" line="39" column="1" bodyfile="pxr/base/js/utils.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="base_2js_2utils_8h_1ae1ec205282aa50c2a2a77653692d2cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API JsOptionalValue</type>
        <definition>JS_API JsOptionalValue JsFindValue</definition>
        <argsstring>(const JsObject &amp;object, const std::string &amp;key, const JsOptionalValue &amp;defaultValue=boost::none)</argsstring>
        <name>JsFindValue</name>
        <param>
          <type>const JsObject &amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const JsOptionalValue &amp;</type>
          <declname>defaultValue</declname>
          <defval>boost::none</defval>
        </param>
        <briefdescription>
<para>Returns the value associated with <computeroutput>key</computeroutput> in the given <computeroutput>object</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no such key exists, and the supplied default is not supplied, this method returns an uninitialized optional <ref refid="class_js_value" kindref="compound">JsValue</ref>. Otherwise, the <computeroutput>defaultValue</computeroutput> is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/utils.h" line="46" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_JS_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_JS_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/js/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="js_2value_8h" kindref="compound">pxr/base/js/value.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/none.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/optional.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::optional&lt;JsValue&gt;<sp/>JsOptionalValue;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">JS_API</highlight></codeline>
<codeline lineno="46"><highlight class="normal">JsOptionalValue<sp/><ref refid="base_2js_2utils_8h_1ae1ec205282aa50c2a2a77653692d2cf1" kindref="member">JsFindValue</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JsObject&amp;<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>JsOptionalValue&amp;<sp/>defaultValue<sp/>=<sp/>boost::none);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_JS_UTILS_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/js/utils.h"/>
  </compounddef>
</doxygen>
