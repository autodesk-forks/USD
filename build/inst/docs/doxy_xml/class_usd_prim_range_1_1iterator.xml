<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_prim_range_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>UsdPrimRange::iterator</compoundname>
    <includes refid="prim_range_8h" local="no">primRange.h</includes>
    <innerclass refid="class_usd_prim_range_1_1iterator_1_1___ptr_proxy" prot="private">UsdPrimRange::iterator::_PtrProxy</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_usd_prim_range_1_1iterator_1ac0960b899198e65b616d83343ec27310" prot="private" static="no">
        <type>Usd_PrimDataConstPtr</type>
        <definition>using _UnderlyingIterator =  Usd_PrimDataConstPtr</definition>
        <argsstring></argsstring>
        <name>_UnderlyingIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="141" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_usd_prim_range_1_1iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="151" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_range_1_1iterator_1acea7b12e3299441f1d52ef7d4cfb9ac7" prot="public" static="no">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>using value_type =  UsdPrim</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="152" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_range_1_1iterator_1a56c7d9df59cc2545f6838747a68581bb" prot="public" static="no">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>using reference =  UsdPrim</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="153" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_range_1_1iterator_1a43aae23301e40e6834a080a920395b72" prot="public" static="no">
        <type>_PtrProxy</type>
        <definition>using pointer =  _PtrProxy</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="154" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_prim_range_1_1iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="155" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_prim_range_1_1iterator_1a1c2b2023172d5db277fe2520e2513823" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdPrimRange</definition>
        <argsstring></argsstring>
        <name>UsdPrimRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="214" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_prim_range_1_1iterator_1a18d7bf413b6453bfeb0bbdb8c25fa9bd" prot="private" static="no" mutable="no">
        <type>_UnderlyingIterator</type>
        <definition>_UnderlyingIterator _underlyingIterator</definition>
        <argsstring></argsstring>
        <name>_underlyingIterator</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="231" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_range_1_1iterator_1affdb1ef0be22a0b98c96d5816d932b7a" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim_range" kindref="compound">UsdPrimRange</ref> const  *</type>
        <definition>UsdPrimRange const* _range</definition>
        <argsstring></argsstring>
        <name>_range</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="232" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_range_1_1iterator_1abd8f9a9cb0fc872b6f7f6a8288440c7e" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _proxyPrimPath</definition>
        <argsstring></argsstring>
        <name>_proxyPrimPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="233" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_range_1_1iterator_1a99df125cd00b16a25af3a46bc3bb76dd" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int _depth</definition>
        <argsstring></argsstring>
        <name>_depth</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="234" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_range_1_1iterator_1a927c61763ad5fc2a5dbd5fdf5ae83ae9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _pruneChildrenFlag</definition>
        <argsstring></argsstring>
        <name>_pruneChildrenFlag</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="238" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_range_1_1iterator_1aeb01cb91854444e4268bd4993f8bfd2d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isPost</definition>
        <argsstring></argsstring>
        <name>_isPost</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="241" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a230cbb7a1d56ec8edb03f35e01525409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>()=default</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a5ef690ed791133d1b4a92a9ef21136a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>(EndSentinel e)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="class_usd_prim_range_1_1_end_sentinel" kindref="compound">EndSentinel</ref></type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Allow implicit conversion from <ref refid="class_usd_prim_range_1_1_end_sentinel" kindref="compound">EndSentinel</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="160" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim" kindref="compound">reference</ref></type>
        <definition>reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="164" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="165" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1af1b1c7856a59f34c7d3570f946a2ff00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_range_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="167" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a538d230f8b52d2bc0950e26ce74ec239" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim_range_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="172" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a0304af5400e5dc3c4010298c86557c89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsPostVisit</definition>
        <argsstring>() const</argsstring>
        <name>IsPostVisit</name>
        <briefdescription>
<para>Return true if the iterator points to a prim visited the second time (in post order) for a pre- and post-order iterator, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="180" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a133177263fafb6a36fa32f4800177cc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void PruneChildren</definition>
        <argsstring>()</argsstring>
        <name>PruneChildren</name>
        <briefdescription>
<para>Behave as if the current prim has no children when next advanced. </para>
        </briefdescription>
        <detaileddescription>
<para>Issue an error if this is a pre- and post-order iterator that <ref refid="class_usd_prim_range_1_1iterator_1a0304af5400e5dc3c4010298c86557c89" kindref="member">IsPostVisit()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a3af0f9fad8aaa077f5d7610a28b186ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(iterator const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_usd_prim_range_1_1iterator" kindref="compound">iterator</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if this iterator is equivalent to <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="188" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="188" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a1abc9c3afa9525576b5ffaec20f46f72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(EndSentinel const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_usd_prim_range_1_1_end_sentinel" kindref="compound">EndSentinel</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if this iterator is equivalent to <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="198" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a1a9ff0e32b10ffef72c74e93d501eced" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(iterator const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_usd_prim_range_1_1iterator" kindref="compound">iterator</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if this iterator is not equivalent to <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="204" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a42c42da34fadf7fe19f842e564a76e4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(EndSentinel const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_usd_prim_range_1_1_end_sentinel" kindref="compound">EndSentinel</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Return true if this iterator is not equivalent to <computeroutput>other</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="209" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="209" bodyend="211"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1acefb5ce188a8e96548662249d9cea0e6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>(UsdPrimRange const *range, Usd_PrimDataConstPtr prim, SdfPath proxyPrimPath, unsigned int depth)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="class_usd_prim_range" kindref="compound">UsdPrimRange</ref> const *</type>
          <declname>range</declname>
        </param>
        <param>
          <type>Usd_PrimDataConstPtr</type>
          <declname>prim</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
          <declname>proxyPrimPath</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="216" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="216" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1a663f77982b4600223ca2bdb1bab1b0f3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API void</type>
        <definition>USD_API void increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="225" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_range_1_1iterator_1afbda5def72ca573e3af2660546cb35f8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim" kindref="compound">reference</ref></type>
        <definition>reference dereference</definition>
        <argsstring>() const</argsstring>
        <name>dereference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primRange.h" line="227" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="227" bodyend="229"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A forward iterator into a <ref refid="class_usd_prim_range" kindref="compound">UsdPrimRange</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Iterators are valid for the range they were obtained from. An iterator <emphasis>i</emphasis> obtained from a range <emphasis>r</emphasis> is not valid for a range <emphasis>c</emphasis> copied from <emphasis>r</emphasis>. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/primRange.h" line="140" column="1" bodyfile="pxr/usd/usd/primRange.h" bodystart="140" bodyend="242"/>
    <listofallmembers>
      <member refid="class_usd_prim_range_1_1iterator_1a99df125cd00b16a25af3a46bc3bb76dd" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_depth</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1aeb01cb91854444e4268bd4993f8bfd2d" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_isPost</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1abd8f9a9cb0fc872b6f7f6a8288440c7e" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_proxyPrimPath</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a927c61763ad5fc2a5dbd5fdf5ae83ae9" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_pruneChildrenFlag</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1affdb1ef0be22a0b98c96d5816d932b7a" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_range</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a18d7bf413b6453bfeb0bbdb8c25fa9bd" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_underlyingIterator</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1ac0960b899198e65b616d83343ec27310" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>_UnderlyingIterator</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1afbda5def72ca573e3af2660546cb35f8" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>dereference</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>difference_type</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a663f77982b4600223ca2bdb1bab1b0f3" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>increment</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a0304af5400e5dc3c4010298c86557c89" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>IsPostVisit</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a230cbb7a1d56ec8edb03f35e01525409" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>iterator</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a5ef690ed791133d1b4a92a9ef21136a4" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>iterator</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1acefb5ce188a8e96548662249d9cea0e6" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>iterator</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>iterator_category</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator *</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a1a9ff0e32b10ffef72c74e93d501eced" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a42c42da34fadf7fe19f842e564a76e4f" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1af1b1c7856a59f34c7d3570f946a2ff00" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator++</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a538d230f8b52d2bc0950e26ce74ec239" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator++</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a3af0f9fad8aaa077f5d7610a28b186ab" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator==</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a1abc9c3afa9525576b5ffaec20f46f72" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>operator==</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a43aae23301e40e6834a080a920395b72" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>pointer</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a133177263fafb6a36fa32f4800177cc0" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>PruneChildren</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a56c7d9df59cc2545f6838747a68581bb" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>reference</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1a1c2b2023172d5db277fe2520e2513823" prot="private" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>UsdPrimRange</name></member>
      <member refid="class_usd_prim_range_1_1iterator_1acea7b12e3299441f1d52ef7d4cfb9ac7" prot="public" virt="non-virtual"><scope>UsdPrimRange::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
