<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_shadow_task" kind="class" language="C++" prot="public">
    <compoundname>HdxShadowTask</compoundname>
    <basecompoundref prot="public" virt="non-virtual">HdTask</basecompoundref>
    <includes refid="shadow_task_8h" local="no">shadowTask.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_shadow_task_1a3d704e686e77319680c8b9490e0898d9" prot="private" static="no" mutable="no">
        <type>HdRenderPassSharedPtrVector</type>
        <definition>HdRenderPassSharedPtrVector _passes</definition>
        <argsstring></argsstring>
        <name>_passes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="126" column="1" bodyfile="pxr/imaging/hdx/shadowTask.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_shadow_task_1a6c36edb1ca76f8d62cf710306c8510e2" prot="private" static="no" mutable="no">
        <type>HdStRenderPassStateSharedPtrVector</type>
        <definition>HdStRenderPassStateSharedPtrVector _renderPassStates</definition>
        <argsstring></argsstring>
        <name>_renderPassStates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="127" column="1" bodyfile="pxr/imaging/hdx/shadowTask.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_shadow_task_1ac2db8dbed050d343d64f707d4ba6faec" prot="private" static="no" mutable="no">
        <type>HdxShadowTaskParams</type>
        <definition>HdxShadowTaskParams _params</definition>
        <argsstring></argsstring>
        <name>_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="128" column="1" bodyfile="pxr/imaging/hdx/shadowTask.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_shadow_task_1ab4240dbb25786ef0d69778ecf3ed6ca1" prot="private" static="no" mutable="no">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _renderTags</definition>
        <argsstring></argsstring>
        <name>_renderTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="129" column="1" bodyfile="pxr/imaging/hdx/shadowTask.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_shadow_task_1adcbfb977c224da0234fae267993517b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxShadowTask</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdxShadowTask</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1a778fd161972e4e14832b1a15e946e20f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API ~HdxShadowTask</definition>
        <argsstring>() override</argsstring>
        <name>~HdxShadowTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1a65601d5e0b6d93e1df6b6618c5c040e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Sync</definition>
        <argsstring>(HdSceneDelegate *delegate, HdTaskContext *ctx, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Sync the render pass resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Prepare</definition>
        <argsstring>(HdTaskContext *ctx, HdRenderIndex *renderIndex) override</argsstring>
        <name>Prepare</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>renderIndex</declname>
        </param>
        <briefdescription>
<para>Prepare the tasks resources. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void Execute</definition>
        <argsstring>(HdTaskContext *ctx) override</argsstring>
        <name>Execute</name>
        <param>
          <type>HdTaskContext *</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Execute render pass task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1a4866840907139a2339b5eeb0d5fd8bce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>HDX_API const TfTokenVector&amp; GetRenderTags</definition>
        <argsstring>() const override</argsstring>
        <name>GetRenderTags</name>
        <briefdescription>
<para>Collect Render Tags used by the task. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="119" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_shadow_task_1a9d8a2c5ce9e537dadc248003540496a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _UpdateDirtyParams</definition>
        <argsstring>(HdStRenderPassStateSharedPtr &amp;renderPassState, HdxShadowTaskParams const &amp;params)</argsstring>
        <name>_UpdateDirtyParams</name>
        <param>
          <type>HdStRenderPassStateSharedPtr &amp;</type>
          <declname>renderPassState</declname>
        </param>
        <param>
          <type>HdxShadowTaskParams const &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1a2168a995240ff80340f0f3a1259c6915" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxShadowTask</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxShadowTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1a7476b7dfde03e1b2bc8bf9128bc793af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxShadowTask</definition>
        <argsstring>(const HdxShadowTask &amp;)=delete</argsstring>
        <name>HdxShadowTask</name>
        <param>
          <type>const <ref refid="class_hdx_shadow_task" kindref="compound">HdxShadowTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_shadow_task_1a9dc042337623bc83af23493be677f74b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hdx_shadow_task" kindref="compound">HdxShadowTask</ref> &amp;</type>
        <definition>HdxShadowTask&amp; operator=</definition>
        <argsstring>(const HdxShadowTask &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hdx_shadow_task" kindref="compound">HdxShadowTask</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/shadowTask.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A task for generating shadow maps. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/hdx/shadowTask.h" line="94" column="1" bodyfile="pxr/imaging/hdx/shadowTask.h" bodystart="93" bodyend="135"/>
    <listofallmembers>
      <member refid="class_hd_task_1ab4beed642380f0353cf158cef16c4f32" prot="protected" virt="non-virtual"><scope>HdxShadowTask</scope><name>_GetDriver</name></member>
      <member refid="class_hd_task_1a2ceca911620546c6b245d903f9ec5f78" prot="protected" virt="non-virtual"><scope>HdxShadowTask</scope><name>_GetTaskContextData</name></member>
      <member refid="class_hd_task_1a50bb64fcb3404805df436ad9e12ddd3c" prot="protected" virt="non-virtual"><scope>HdxShadowTask</scope><name>_GetTaskParams</name></member>
      <member refid="class_hd_task_1a7db1af254e4af3fbffc974c19968a6e7" prot="protected" virt="non-virtual"><scope>HdxShadowTask</scope><name>_GetTaskRenderTags</name></member>
      <member refid="class_hd_task_1a6f03b9a9e34350db200b0a7f252eaf8e" prot="protected" virt="non-virtual"><scope>HdxShadowTask</scope><name>_HasTaskContextData</name></member>
      <member refid="class_hdx_shadow_task_1ac2db8dbed050d343d64f707d4ba6faec" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>_params</name></member>
      <member refid="class_hdx_shadow_task_1a3d704e686e77319680c8b9490e0898d9" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>_passes</name></member>
      <member refid="class_hdx_shadow_task_1a6c36edb1ca76f8d62cf710306c8510e2" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>_renderPassStates</name></member>
      <member refid="class_hdx_shadow_task_1ab4240dbb25786ef0d69778ecf3ed6ca1" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>_renderTags</name></member>
      <member refid="class_hdx_shadow_task_1a9d8a2c5ce9e537dadc248003540496a2" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>_UpdateDirtyParams</name></member>
      <member refid="class_hdx_shadow_task_1ad8ba6cfb4cd173daa6931286678b7ea6" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>Execute</name></member>
      <member refid="class_hd_task_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>GetId</name></member>
      <member refid="class_hd_task_1ade051cd8ff53a108b7e6c27be99a5e3a" prot="public" virt="virtual"><scope>HdxShadowTask</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hdx_shadow_task_1a4866840907139a2339b5eeb0d5fd8bce" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>GetRenderTags</name></member>
      <member refid="class_hd_task_1a3df864dcce7538c1b130b105af7c2406" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>HdTask</name></member>
      <member refid="class_hdx_shadow_task_1adcbfb977c224da0234fae267993517b7" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>HdxShadowTask</name></member>
      <member refid="class_hdx_shadow_task_1a2168a995240ff80340f0f3a1259c6915" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>HdxShadowTask</name></member>
      <member refid="class_hdx_shadow_task_1a7476b7dfde03e1b2bc8bf9128bc793af" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>HdxShadowTask</name></member>
      <member refid="class_hdx_shadow_task_1a9dc042337623bc83af23493be677f74b" prot="private" virt="non-virtual"><scope>HdxShadowTask</scope><name>operator=</name></member>
      <member refid="class_hdx_shadow_task_1ad715ec971d8d1be92ef2aa0b4790bb64" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>Prepare</name></member>
      <member refid="class_hdx_shadow_task_1a65601d5e0b6d93e1df6b6618c5c040e0" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>Sync</name></member>
      <member refid="class_hd_task_1a08a2f7cc6d3767c8081f5098bd113d66" prot="public" virt="virtual"><scope>HdxShadowTask</scope><name>~HdTask</name></member>
      <member refid="class_hdx_shadow_task_1a778fd161972e4e14832b1a15e946e20f" prot="public" virt="non-virtual"><scope>HdxShadowTask</scope><name>~HdxShadowTask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
