<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_event" kind="class" language="C++" prot="public">
    <compoundname>TraceEvent</compoundname>
    <includes refid="event_8h" local="no">event.h</includes>
      <sectiondef kind="user-defined">
      <header>Tag enums to select constructors</header>
      <memberdef kind="enum" id="class_trace_event_1ab6c7250f8ae13fa09bcb0756684512c7" prot="public" static="no" strong="no">
        <type></type>
        <name>BeginTag</name>
        <enumvalue id="class_trace_event_1ab6c7250f8ae13fa09bcb0756684512c7aceeab2f518193e483de72124b377dd60" prot="public">
          <name>Begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="55" column="1" bodyfile="pxr/base/trace/event.h" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1acd58257cab8cfc50f4eab5b2b432530c" prot="public" static="no" strong="no">
        <type></type>
        <name>EndTag</name>
        <enumvalue id="class_trace_event_1acd58257cab8cfc50f4eab5b2b432530ca667876a6f108081ad524d7d29d23d506" prot="public">
          <name>End</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="56" column="1" bodyfile="pxr/base/trace/event.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1a0dc52c317d249a2fa32a573bd3e97c3a" prot="public" static="no" strong="no">
        <type></type>
        <name>TimespanTag</name>
        <enumvalue id="class_trace_event_1a0dc52c317d249a2fa32a573bd3e97c3aa25e40033727d721fc33af3b409b38769" prot="public">
          <name>Timespan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="57" column="1" bodyfile="pxr/base/trace/event.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1ab17b4ea2b5d7e9c926ab98240f0abb1e" prot="public" static="no" strong="no">
        <type></type>
        <name>MarkerTag</name>
        <enumvalue id="class_trace_event_1ab17b4ea2b5d7e9c926ab98240f0abb1eaf983f60e6ed7c43cce7651150e3082cd" prot="public">
          <name>Marker</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="58" column="1" bodyfile="pxr/base/trace/event.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1a31e30b996e762e501549aa82fb6a2d2f" prot="public" static="no" strong="no">
        <type></type>
        <name>CounterDeltaTag</name>
        <enumvalue id="class_trace_event_1a31e30b996e762e501549aa82fb6a2d2fa9640bfe505275ae13918c446abf8113c" prot="public">
          <name>CounterDelta</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="59" column="1" bodyfile="pxr/base/trace/event.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1a13a4825695122bbff4a796e9938576c9" prot="public" static="no" strong="no">
        <type></type>
        <name>CounterValueTag</name>
        <enumvalue id="class_trace_event_1a13a4825695122bbff4a796e9938576c9afa504d40d9df5457c929510813ac67f7" prot="public">
          <name>CounterValue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="60" column="1" bodyfile="pxr/base/trace/event.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1a9cc232db01836fe1deae588e0831f14a" prot="public" static="no" strong="no">
        <type></type>
        <name>DataTag</name>
        <enumvalue id="class_trace_event_1a9cc232db01836fe1deae588e0831f14aaa9703801ac7bd790f6f980532e4224c0" prot="public">
          <name>Data</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="61" column="1" bodyfile="pxr/base/trace/event.h" bodystart="61" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_trace_event_1a79e354bc48a341dd2fe367ca1a483e47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(BeginTag, const Key &amp;key, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>BeginTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Begin events that will automatically set the timestamp from the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="116" column="1" bodyfile="pxr/base/trace/event.h" bodystart="116" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a9d6232bf940dba81f7b926c706dfefe8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(BeginTag, const Key &amp;key, TimeStamp ts, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>BeginTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Begin events that takes a specific TimeStamp <emphasis>ts</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="124" column="1" bodyfile="pxr/base/trace/event.h" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1ae938432373ea35cebb9a7a005c9adb77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(EndTag, const Key &amp;key, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>EndTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for End events that will automatically set the timestamp from the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="136" column="1" bodyfile="pxr/base/trace/event.h" bodystart="136" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a6e7bf84f3dc39b613c2e21034a611483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(EndTag, const Key &amp;key, TimeStamp ts, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>EndTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for End events that takes a specific TimeStamp <emphasis>ts</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="144" column="1" bodyfile="pxr/base/trace/event.h" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a7ac9b748e6f2af35ba2f109ea583b62e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(TimespanTag, const Key &amp;key, TimeStamp startTime, TimeStamp endTime, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>TimespanTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
          <declname>startTime</declname>
        </param>
        <param>
          <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
          <declname>endTime</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Timespan events that takes the start time and end time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="155" column="1" bodyfile="pxr/base/trace/event.h" bodystart="155" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a2109e630a98b8d85c5d7654218be3459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(MarkerTag, const Key &amp;key, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>MarkerTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Marker events that will automatically set the timestamp from the current time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="168" column="1" bodyfile="pxr/base/trace/event.h" bodystart="168" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a446c1a4f6ebc476be1579647f6856582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(MarkerTag, const Key &amp;key, TimeStamp ts, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>MarkerTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Mark events that takes a specific TimeStamp <emphasis>ts</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="176" column="1" bodyfile="pxr/base/trace/event.h" bodystart="176" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1ab7cd6cba2611f81ebd2ab43f42fd54ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(CounterDeltaTag, const Key &amp;key, double value, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>CounterDeltaTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Counter delta events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="187" column="1" bodyfile="pxr/base/trace/event.h" bodystart="187" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a90cb26068d887d7afe3d89735c845314" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(CounterValueTag, const Key &amp;key, double value, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>CounterValueTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
<para>Constructor for Counter value events. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="199" column="1" bodyfile="pxr/base/trace/event.h" bodystart="199" bodyend="208"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Constructors for data events</header>
      <memberdef kind="function" id="class_trace_event_1a80ee0bd1f7d19ceab2cf12a8a30d2e0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(DataTag, const Key &amp;key, bool data, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>DataTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="212" column="1" bodyfile="pxr/base/trace/event.h" bodystart="212" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a94e67cd1b009f267d952ee1d36ee763b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(DataTag, const Key &amp;key, int data, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>DataTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="221" column="1" bodyfile="pxr/base/trace/event.h" bodystart="221" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a8f84ff89622ec6862c99699d19498fc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(DataTag, const Key &amp;key, int64_t data, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>DataTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="230" column="1" bodyfile="pxr/base/trace/event.h" bodystart="230" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1abebc804928577603dffd8ec00dc7760d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(DataTag, const Key &amp;key, uint64_t data, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>DataTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="239" column="1" bodyfile="pxr/base/trace/event.h" bodystart="239" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a74519d7d35d5c4f560ca62fcf4390aab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(DataTag, const Key &amp;key, double data, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>DataTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="248" column="1" bodyfile="pxr/base/trace/event.h" bodystart="248" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1ac65427a376a30b89259fbebb2a24b3ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(DataTag, const Key &amp;key, const char *data, TraceCategoryId cat)</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>DataTag</type>
        </param>
        <param>
          <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
          <declname>cat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="257" column="1" bodyfile="pxr/base/trace/event.h" bodystart="257" bodyend="264"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>EventType</name>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a88183b946cc5f0e8c96b2e66e1c74a7e" prot="public">
          <name>Unknown</name>
          <briefdescription>
<para>The event is an unknown type. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a1a06729125544cab7cee73195fc044f0" prot="public">
          <name>Begin</name>
          <briefdescription>
<para>The event represents the beginning timestamp of a scope. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a87557f11575c0ad78e4e28abedc13b6e" prot="public">
          <name>End</name>
          <briefdescription>
<para>The event represents the ending timestamp of a scope. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a0e024a19f9707cc61b34570b237b9bee" prot="public">
          <name>Timespan</name>
          <briefdescription>
<para>The event represents begin and end timestamp of a scope. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a0235c996b43b3799573658df41ef82f2" prot="public">
          <name>Marker</name>
          <briefdescription>
<para>The event represents an marker without a duration. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a5ddedfc9ca656d733f66c73f1174aa6e" prot="public">
          <name>CounterDelta</name>
          <briefdescription>
<para>The event represents a change in a counter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34aa09f575d0de81162f03f1928f54f9f22" prot="public">
          <name>CounterValue</name>
          <briefdescription>
<para>The event represents the value of a counter. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34a2219e2665f9fea013410b01a0bce2a31" prot="public">
          <name>ScopeData</name>
          <briefdescription>
<para>The event stores data that is associated with its enclosing scope. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Valid event types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="65" column="1" bodyfile="pxr/base/trace/event.h" bodystart="65" bodyend="75"/>
      </memberdef>
      <memberdef kind="enum" id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>DataType</name>
        <enumvalue id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3a27118326006d3829667a400ad23d5d98" prot="public">
          <name>String</name>
          <briefdescription>
<para>The event is storing a string. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3a27226c864bac7454a8504f8edb15d95b" prot="public">
          <name>Boolean</name>
          <briefdescription>
<para>The event is storing a bool. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3a1686a6c336b71b36d77354cea19a8b52" prot="public">
          <name>Int</name>
          <briefdescription>
<para>The event is storing an integer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3a0b1291eded63143ac04709711274785a" prot="public">
          <name>UInt</name>
          <briefdescription>
<para>The event is storing an unsigned integer. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3a22ae0e2b89e5e3d477f988cc36d3272b" prot="public">
          <name>Float</name>
          <briefdescription>
<para>The event is storing an double. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3a4bbb8f967da6d1a610596d7257179c2b" prot="public">
          <name>Invalid</name>
          <briefdescription>
<para>The event is not storing any data. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The different types of data that can be stored in a <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="78" column="1" bodyfile="pxr/base/trace/event.h" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_1a166027cc433a33197d502f882979d160" prot="public" static="no">
        <type>uint64_t</type>
        <definition>using TimeStamp =  uint64_t</definition>
        <argsstring></argsstring>
        <name>TimeStamp</name>
        <briefdescription>
<para>Time in &quot;ticks&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="50" column="1" bodyfile="pxr/base/trace/event.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_1abed113a1d6383a3576e16bc28b523566" prot="public" static="no">
        <type><ref refid="class_trace_key" kindref="compound">TraceKey</ref></type>
        <definition>using Key =  TraceKey</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="51" column="1" bodyfile="pxr/base/trace/event.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49e" prot="private" static="no" strong="yes">
        <type>uint8_t</type>
        <name>_InternalEventType</name>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea1a06729125544cab7cee73195fc044f0" prot="private">
          <name>Begin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea87557f11575c0ad78e4e28abedc13b6e" prot="private">
          <name>End</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea0e024a19f9707cc61b34570b237b9bee" prot="private">
          <name>Timespan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea0235c996b43b3799573658df41ef82f2" prot="private">
          <name>Marker</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea5ddedfc9ca656d733f66c73f1174aa6e" prot="private">
          <name>CounterDelta</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49eaa09f575d0de81162f03f1928f54f9f22" prot="private">
          <name>CounterValue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea2219e2665f9fea013410b01a0bce2a31" prot="private">
          <name>ScopeData</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49ea85587ca89c793c2dd8d4f562f92ef4f4" prot="private">
          <name>ScopeDataLarge</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="281" column="1" bodyfile="pxr/base/trace/event.h" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_event_1aa0b37268e18ef5693ccab2973be9fa83" prot="private" static="no">
        <type>std::aligned_storage&lt; 8, 8 &gt;::type</type>
        <definition>using PayloadStorage =  std::aligned_storage&lt;8, 8&gt;::type</definition>
        <argsstring></argsstring>
        <name>PayloadStorage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="292" column="1" bodyfile="pxr/base/trace/event.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_event_1a39f8da088cfffef63885df8ee533d355" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_key" kindref="compound">Key</ref></type>
        <definition>Key _key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="294" column="1" bodyfile="pxr/base/trace/event.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_1a51591f848f843aa4a089dc8c567fac3c" prot="private" static="no" mutable="no">
        <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
        <definition>TraceCategoryId _category</definition>
        <argsstring></argsstring>
        <name>_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="295" column="1" bodyfile="pxr/base/trace/event.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_1a241e9f8e43a3c0644b52b0de1f864689" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3" kindref="member">DataType</ref></type>
        <definition>DataType _dataType</definition>
        <argsstring></argsstring>
        <name>_dataType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="296" column="1" bodyfile="pxr/base/trace/event.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_1ac63a681350749b3db7258b96fa31b4eb" prot="private" static="no" mutable="no">
        <type>_InternalEventType</type>
        <definition>_InternalEventType _type</definition>
        <argsstring></argsstring>
        <name>_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="297" column="1" bodyfile="pxr/base/trace/event.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_1a4e89a7c84d995dbc3c65e962c7cb1358" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
        <definition>TimeStamp _time</definition>
        <argsstring></argsstring>
        <name>_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="298" column="1" bodyfile="pxr/base/trace/event.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_1a7c808725b2bbe68c0fea73d79cd177d6" prot="private" static="no" mutable="no">
        <type>PayloadStorage</type>
        <definition>PayloadStorage _payload</definition>
        <argsstring></argsstring>
        <name>_payload</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="299" column="1" bodyfile="pxr/base/trace/event.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_event_1a808feac09d89244344fe6c6c8c68384f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_trace_key" kindref="compound">Key</ref> &amp;</type>
        <definition>const Key&amp; GetKey</definition>
        <argsstring>() const</argsstring>
        <name>GetKey</name>
        <briefdescription>
<para>Return this event&apos;s key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="88" column="1" bodyfile="pxr/base/trace/event.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1aefbddf7f9370d1682e5f2aa0a9794434" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API <ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
        <definition>TRACE_API TimeStamp GetTimeStamp</definition>
        <argsstring>() const</argsstring>
        <name>GetTimeStamp</name>
        <briefdescription>
<para>Return the time stamp associated with this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a33f83feda5ff45e1a18e700536ab42e6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API double</type>
        <definition>TRACE_API double GetCounterValue</definition>
        <argsstring>() const</argsstring>
        <name>GetCounterValue</name>
        <briefdescription>
<para>Return the counter value associated with this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1aa44d155d2d860f59352df2430d51e369" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="category_8h_1a3a221cd36270fa5e1bee9476d0c6013e" kindref="member">TraceCategoryId</ref></type>
        <definition>TraceCategoryId GetCategory</definition>
        <argsstring>() const</argsstring>
        <name>GetCategory</name>
        <briefdescription>
<para>Returns the event&apos;s category id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="97" column="1" bodyfile="pxr/base/trace/event.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1af7b4ab9e56bb832addb3a632fc896a8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API <ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
        <definition>TRACE_API TimeStamp GetStartTimeStamp</definition>
        <argsstring>() const</argsstring>
        <name>GetStartTimeStamp</name>
        <briefdescription>
<para>Returns the start time of a timespan event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1ac2010f4b164bf49ac7f9d603bf8232a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API <ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
        <definition>TRACE_API TimeStamp GetEndTimeStamp</definition>
        <argsstring>() const</argsstring>
        <name>GetEndTimeStamp</name>
        <briefdescription>
<para>Returns the end time of a timespan event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a0ff63a82638118aa14f0cfe6d0635836" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API <ref refid="class_trace_event_data" kindref="compound">TraceEventData</ref></type>
        <definition>TRACE_API TraceEventData GetData</definition>
        <argsstring>() const</argsstring>
        <name>GetData</name>
        <briefdescription>
<para>Returns the data stored in a data event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a7e96dfbae09090e2fa4430f70f9241ea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API <ref refid="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34" kindref="member">EventType</ref></type>
        <definition>TRACE_API EventType GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Returns the type of the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a34edf0835c0d594a12e367fbd68ccea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(const TraceEvent &amp;)=delete</argsstring>
        <name>TraceEvent</name>
        <param>
          <type>const <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1ad993c808fbe3a7128fef8c7fd2eb7ebd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
        <definition>TraceEvent&amp; operator=</definition>
        <argsstring>(const TraceEvent &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1ae489d63f7d648aa2ffd8968943705604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEvent</definition>
        <argsstring>(TraceEvent &amp;&amp;)=default</argsstring>
        <name>TraceEvent</name>
        <param>
          <type><ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1a56ce9fdc96072206bb9b414fbdb10bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
        <definition>TraceEvent&amp; operator=</definition>
        <argsstring>(TraceEvent &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_1af2562636437f0988d7229afc3838e386" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetTimeStamp</definition>
        <argsstring>(TimeStamp time)</argsstring>
        <name>SetTimeStamp</name>
        <param>
          <type><ref refid="class_trace_event_1a166027cc433a33197d502f882979d160" kindref="member">TimeStamp</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Sets the events timestamp to <computeroutput>time</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/event.h" line="277" column="1" bodyfile="pxr/base/trace/event.h" bodystart="277" bodyend="277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This represents an event recorded by a <ref refid="class_trace_collector" kindref="compound">TraceCollector</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>It contains a key (name), categoryId, timestamp, type, and optional metadata. </para>
    </detaileddescription>
    <location file="pxr/base/trace/event.h" line="47" column="1" bodyfile="pxr/base/trace/event.h" bodystart="47" bodyend="300"/>
    <listofallmembers>
      <member refid="class_trace_event_1a51591f848f843aa4a089dc8c567fac3c" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_category</name></member>
      <member refid="class_trace_event_1a241e9f8e43a3c0644b52b0de1f864689" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_dataType</name></member>
      <member refid="class_trace_event_1ac95a6cd89bccedfefd95d93c1d84f49e" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_InternalEventType</name></member>
      <member refid="class_trace_event_1a39f8da088cfffef63885df8ee533d355" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_key</name></member>
      <member refid="class_trace_event_1a7c808725b2bbe68c0fea73d79cd177d6" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_payload</name></member>
      <member refid="class_trace_event_1a4e89a7c84d995dbc3c65e962c7cb1358" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_time</name></member>
      <member refid="class_trace_event_1ac63a681350749b3db7258b96fa31b4eb" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>_type</name></member>
      <member refid="class_trace_event_1ab6c7250f8ae13fa09bcb0756684512c7aceeab2f518193e483de72124b377dd60" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>Begin</name></member>
      <member refid="class_trace_event_1ab6c7250f8ae13fa09bcb0756684512c7" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>BeginTag</name></member>
      <member refid="class_trace_event_1a31e30b996e762e501549aa82fb6a2d2fa9640bfe505275ae13918c446abf8113c" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>CounterDelta</name></member>
      <member refid="class_trace_event_1a31e30b996e762e501549aa82fb6a2d2f" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>CounterDeltaTag</name></member>
      <member refid="class_trace_event_1a13a4825695122bbff4a796e9938576c9afa504d40d9df5457c929510813ac67f7" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>CounterValue</name></member>
      <member refid="class_trace_event_1a13a4825695122bbff4a796e9938576c9" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>CounterValueTag</name></member>
      <member refid="class_trace_event_1a9cc232db01836fe1deae588e0831f14aaa9703801ac7bd790f6f980532e4224c0" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>Data</name></member>
      <member refid="class_trace_event_1a9cc232db01836fe1deae588e0831f14a" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>DataTag</name></member>
      <member refid="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>DataType</name></member>
      <member refid="class_trace_event_1acd58257cab8cfc50f4eab5b2b432530ca667876a6f108081ad524d7d29d23d506" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>End</name></member>
      <member refid="class_trace_event_1acd58257cab8cfc50f4eab5b2b432530c" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>EndTag</name></member>
      <member refid="class_trace_event_1afdf2c10d40c582d9884ac5635a374a34" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>EventType</name></member>
      <member refid="class_trace_event_1aa44d155d2d860f59352df2430d51e369" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetCategory</name></member>
      <member refid="class_trace_event_1a33f83feda5ff45e1a18e700536ab42e6" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetCounterValue</name></member>
      <member refid="class_trace_event_1a0ff63a82638118aa14f0cfe6d0635836" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetData</name></member>
      <member refid="class_trace_event_1ac2010f4b164bf49ac7f9d603bf8232a8" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetEndTimeStamp</name></member>
      <member refid="class_trace_event_1a808feac09d89244344fe6c6c8c68384f" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetKey</name></member>
      <member refid="class_trace_event_1af7b4ab9e56bb832addb3a632fc896a8e" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetStartTimeStamp</name></member>
      <member refid="class_trace_event_1aefbddf7f9370d1682e5f2aa0a9794434" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetTimeStamp</name></member>
      <member refid="class_trace_event_1a7e96dfbae09090e2fa4430f70f9241ea" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>GetType</name></member>
      <member refid="class_trace_event_1abed113a1d6383a3576e16bc28b523566" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>Key</name></member>
      <member refid="class_trace_event_1ab17b4ea2b5d7e9c926ab98240f0abb1eaf983f60e6ed7c43cce7651150e3082cd" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>Marker</name></member>
      <member refid="class_trace_event_1ab17b4ea2b5d7e9c926ab98240f0abb1e" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>MarkerTag</name></member>
      <member refid="class_trace_event_1ad993c808fbe3a7128fef8c7fd2eb7ebd" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>operator=</name></member>
      <member refid="class_trace_event_1a56ce9fdc96072206bb9b414fbdb10bb4" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>operator=</name></member>
      <member refid="class_trace_event_1aa0b37268e18ef5693ccab2973be9fa83" prot="private" virt="non-virtual"><scope>TraceEvent</scope><name>PayloadStorage</name></member>
      <member refid="class_trace_event_1af2562636437f0988d7229afc3838e386" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>SetTimeStamp</name></member>
      <member refid="class_trace_event_1a0dc52c317d249a2fa32a573bd3e97c3aa25e40033727d721fc33af3b409b38769" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>Timespan</name></member>
      <member refid="class_trace_event_1a0dc52c317d249a2fa32a573bd3e97c3a" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TimespanTag</name></member>
      <member refid="class_trace_event_1a166027cc433a33197d502f882979d160" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TimeStamp</name></member>
      <member refid="class_trace_event_1a79e354bc48a341dd2fe367ca1a483e47" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a9d6232bf940dba81f7b926c706dfefe8" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1ae938432373ea35cebb9a7a005c9adb77" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a6e7bf84f3dc39b613c2e21034a611483" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a7ac9b748e6f2af35ba2f109ea583b62e" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a2109e630a98b8d85c5d7654218be3459" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a446c1a4f6ebc476be1579647f6856582" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1ab7cd6cba2611f81ebd2ab43f42fd54ba" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a90cb26068d887d7afe3d89735c845314" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a80ee0bd1f7d19ceab2cf12a8a30d2e0a" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a94e67cd1b009f267d952ee1d36ee763b" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a8f84ff89622ec6862c99699d19498fc3" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1abebc804928577603dffd8ec00dc7760d" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a74519d7d35d5c4f560ca62fcf4390aab" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1ac65427a376a30b89259fbebb2a24b3ce" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1a34edf0835c0d594a12e367fbd68ccea3" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
      <member refid="class_trace_event_1ae489d63f7d648aa2ffd8968943705604" prot="public" virt="non-virtual"><scope>TraceEvent</scope><name>TraceEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
