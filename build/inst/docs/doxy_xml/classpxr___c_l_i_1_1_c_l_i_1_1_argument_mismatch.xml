<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch" kind="class" language="C++" prot="public">
    <compoundname>pxr_CLI::CLI::ArgumentMismatch</compoundname>
    <basecompoundref refid="classpxr___c_l_i_1_1_c_l_i_1_1_parse_error" prot="public" virt="non-virtual">ParseError</basecompoundref>
    <includes refid="_c_l_i11_8h" local="no">CLI11.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a88444a529d1041d4ab94576cce973db4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ArgumentMismatch</definition>
        <argsstring>(std::string name, int expected, std::size_t received)</argsstring>
        <name>ArgumentMismatch</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="878" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="878" bodyend="883"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1af1ee5313ec45caad4821472fd64ea399" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch AtLeast</definition>
        <argsstring>(std::string name, int num, std::size_t received)</argsstring>
        <name>AtLeast</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="885" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="885" bodyend="888"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a286bb6084ccb345a270ba6ced56f4e1f" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch AtMost</definition>
        <argsstring>(std::string name, int num, std::size_t received)</argsstring>
        <name>AtMost</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>received</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="889" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="889" bodyend="892"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a5ccbbe858933e6454b9161b622aae96a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch TypedAtLeast</definition>
        <argsstring>(std::string name, int num, std::string type)</argsstring>
        <name>TypedAtLeast</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="893" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="893" bodyend="895"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a43b8745525c3397eb9a29c4031c13b54" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch FlagOverride</definition>
        <argsstring>(std::string name)</argsstring>
        <name>FlagOverride</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="896" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="896" bodyend="898"/>
      </memberdef>
      <memberdef kind="function" id="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a551fd1be9b56f11a530f9710381a074e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch" kindref="compound">ArgumentMismatch</ref></type>
        <definition>static ArgumentMismatch PartialType</definition>
        <argsstring>(std::string name, int num, std::string type)</argsstring>
        <name>PartialType</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="899" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="899" bodyend="902"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Thrown when the wrong number of arguments has been received. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="718">
        <label>ParseError</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_parse_error"/>
        <childnode refid="719" relation="public-inheritance">
        </childnode>
      </node>
      <node id="719">
        <label>Error</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_error"/>
      </node>
      <node id="717">
        <label>ArgumentMismatch</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch"/>
        <childnode refid="718" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="721">
        <label>ParseError</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_parse_error"/>
        <childnode refid="722" relation="public-inheritance">
        </childnode>
      </node>
      <node id="722">
        <label>Error</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_error"/>
      </node>
      <node id="720">
        <label>ArgumentMismatch</label>
        <link refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch"/>
        <childnode refid="721" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="875" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="875" bodyend="903"/>
    <listofallmembers>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a88444a529d1041d4ab94576cce973db4" prot="private" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>ArgumentMismatch</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1af1ee5313ec45caad4821472fd64ea399" prot="private" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>AtLeast</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a286bb6084ccb345a270ba6ced56f4e1f" prot="private" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>AtMost</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_error_1a7594f2dcd93fa8bfc3c05197adcd14e6" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>Error</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_error_1ac23478a527f020a5e3ad43b9121c62e7" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>Error</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a43b8745525c3397eb9a29c4031c13b54" prot="private" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>FlagOverride</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_error_1a559639ceac351425c183bc6871c92ca0" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>get_exit_code</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_error_1a8ab0632f58bdf74e0a11384ef1b5212f" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>get_name</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a551fd1be9b56f11a530f9710381a074e" prot="private" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>PartialType</name></member>
      <member refid="classpxr___c_l_i_1_1_c_l_i_1_1_argument_mismatch_1a5ccbbe858933e6454b9161b622aae96a" prot="private" virt="non-virtual"><scope>pxr_CLI::CLI::ArgumentMismatch</scope><name>TypedAtLeast</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
