<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_skinning_query" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelSkinningQuery</compoundname>
    <includes refid="skinning_query_8h" local="no">skinningQuery.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1acdc34f90758c0dce41b95b4ec86a717d" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>UsdPrim _prim</definition>
        <argsstring></argsstring>
        <name>_prim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="274" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1ae1b195c995daca9e8a3c905ada3b647a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _numInfluencesPerComponent</definition>
        <argsstring></argsstring>
        <name>_numInfluencesPerComponent</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="275" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1aa4a61b1d913f2bee1e0ed5d9daf26549" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _flags</definition>
        <argsstring></argsstring>
        <name>_flags</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="276" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1a99aa88bd8c4d5d653e50b186f90294cc" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _interpolation</definition>
        <argsstring></argsstring>
        <name>_interpolation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="277" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1a688b53f9ea33926a29fbad5831eedbaf" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>UsdGeomPrimvar _jointIndicesPrimvar</definition>
        <argsstring></argsstring>
        <name>_jointIndicesPrimvar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="279" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1ac9d7181995925c946e83bbbe1712fd21" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>UsdGeomPrimvar _jointWeightsPrimvar</definition>
        <argsstring></argsstring>
        <name>_jointWeightsPrimvar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="280" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1ae84eaf8e5d27d6eb6edb767d4b3a63b1" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>UsdAttribute _skinningMethodAttr</definition>
        <argsstring></argsstring>
        <name>_skinningMethodAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="281" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1ae0a79fba01cf68a778eddb7aa1f86334" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>UsdAttribute _geomBindTransformAttr</definition>
        <argsstring></argsstring>
        <name>_geomBindTransformAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="282" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="282" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1a2ae37d05223d454e7a6835eb4619025b" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>UsdAttribute _blendShapes</definition>
        <argsstring></argsstring>
        <name>_blendShapes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="283" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1a861f98c8c17f8651c353c472043631e6" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref></type>
        <definition>UsdRelationship _blendShapeTargets</definition>
        <argsstring></argsstring>
        <name>_blendShapeTargets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="284" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1ae1baf8f95e7537c6fa4cdf548d1e0592" prot="private" static="no" mutable="no">
        <type>UsdSkelAnimMapperRefPtr</type>
        <definition>UsdSkelAnimMapperRefPtr _jointMapper</definition>
        <argsstring></argsstring>
        <name>_jointMapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="285" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1acaba6b68f682d074d508b2fae2801ad8" prot="private" static="no" mutable="no">
        <type>UsdSkelAnimMapperRefPtr</type>
        <definition>UsdSkelAnimMapperRefPtr _blendShapeMapper</definition>
        <argsstring></argsstring>
        <name>_blendShapeMapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="286" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1a3faefaab6eca3a0ad0c48a51fdcdbe03" prot="private" static="no" mutable="no">
        <type>std::optional&lt; VtTokenArray &gt;</type>
        <definition>std::optional&lt;VtTokenArray&gt; _jointOrder</definition>
        <argsstring></argsstring>
        <name>_jointOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="287" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_skel_skinning_query_1ad87bd77c8963dc3a61703a5f29011de1" prot="private" static="no" mutable="no">
        <type>std::optional&lt; VtTokenArray &gt;</type>
        <definition>std::optional&lt;VtTokenArray&gt; _blendShapeOrder</definition>
        <argsstring></argsstring>
        <name>_blendShapeOrder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="288" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a51a6644ab664460ebe03b6e8d1a87d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelSkinningQuery</definition>
        <argsstring>()</argsstring>
        <name>UsdSkelSkinningQuery</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1aff50f2725f12bcda1cc2059a303401dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelSkinningQuery</definition>
        <argsstring>(const UsdPrim &amp;prim, const VtTokenArray &amp;skelJointOrder, const VtTokenArray &amp;blendShapeOrder, const UsdAttribute &amp;jointIndices, const UsdAttribute &amp;jointWeights, const UsdAttribute &amp;skinningMethod, const UsdAttribute &amp;geomBindTransform, const UsdAttribute &amp;joints, const UsdAttribute &amp;blendShapes, const UsdRelationship &amp;blendShapeTargets)</argsstring>
        <name>UsdSkelSkinningQuery</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>skelJointOrder</declname>
        </param>
        <param>
          <type>const VtTokenArray &amp;</type>
          <declname>blendShapeOrder</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>joints</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>blendShapes</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref> &amp;</type>
          <declname>blendShapeTargets</declname>
        </param>
        <briefdescription>
<para>Construct a new skining query for the resolved properties set through the <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>, as inherited on <computeroutput>prim</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The resulting query will be marked valid only if the inherited properties provide proper valid joint influences. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Returns true if this query is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="74" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Boolean conversion operator. Equivalent to <ref refid="class_usd_skel_skinning_query_1ac532c4b500b1a85ea22217f2c65a70ed" kindref="member">IsValid()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="77" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ac44ba4d2d2cd5b29ff6b2af537f5940c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
        <definition>const UsdPrim&amp; GetPrim</definition>
        <argsstring>() const</argsstring>
        <name>GetPrim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="79" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a1ecc112de06954c8111b5e52c19f8ceb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool HasBlendShapes</definition>
        <argsstring>() const</argsstring>
        <name>HasBlendShapes</name>
        <briefdescription>
<para>Returns true if there are blend shapes associated with this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ae41e31dd82e57a2edf98e9375864c04d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool HasJointInfluences</definition>
        <argsstring>() const</argsstring>
        <name>HasJointInfluences</name>
        <briefdescription>
<para>Returns true if joint influence data is associated with this prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1aa46856de74a7cbd97f9086fdfdde69dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetNumInfluencesPerComponent</definition>
        <argsstring>() const</argsstring>
        <name>GetNumInfluencesPerComponent</name>
        <briefdescription>
<para>Returns the number of influences encoded for each component. </para>
        </briefdescription>
        <detaileddescription>
<para>If the prim defines rigid joint influences, then this returns the number of influences that map to every point. Otherwise, this provides the number of influences per point. <simplesect kind="see"><para><ref refid="class_usd_skel_skinning_query_1a55b3d590dfab71d7d108f09d138d3351" kindref="member">IsRigidlyDeformed</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="94" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ab751926169251ce507277c10c4a65d01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; GetInterpolation</definition>
        <argsstring>() const</argsstring>
        <name>GetInterpolation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="98" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a55b3d590dfab71d7d108f09d138d3351" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool IsRigidlyDeformed</definition>
        <argsstring>() const</argsstring>
        <name>IsRigidlyDeformed</name>
        <briefdescription>
<para>Returns true if the held prim has the same joint influences across all points, or false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ab39bfc90a592aac40ec8d57a37b7219f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        <definition>const UsdAttribute&amp; GetSkinningMethodAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetSkinningMethodAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="105" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a378566cac08e7298fdf528510ec89b02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        <definition>const UsdAttribute&amp; GetGeomBindTransformAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetGeomBindTransformAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="109" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1aa0ffe9014e63033a993cb8d32e2a61de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref> &amp;</type>
        <definition>const UsdGeomPrimvar&amp; GetJointIndicesPrimvar</definition>
        <argsstring>() const</argsstring>
        <name>GetJointIndicesPrimvar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="113" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a5267f00a76d9f8844378d627a85d24a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref> &amp;</type>
        <definition>const UsdGeomPrimvar&amp; GetJointWeightsPrimvar</definition>
        <argsstring>() const</argsstring>
        <name>GetJointWeightsPrimvar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="117" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a50b46307e21f4d7195802469ef4c0323" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        <definition>const UsdAttribute&amp; GetBlendShapesAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetBlendShapesAttr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="121" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ad34a9bba5f3a188ad4e6d13c27fd356e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref> &amp;</type>
        <definition>const UsdRelationship&amp; GetBlendShapeTargetsRel</definition>
        <argsstring>() const</argsstring>
        <name>GetBlendShapeTargetsRel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="125" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a9301b912a3a696d617a05022d19d364c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const UsdSkelAnimMapperRefPtr &amp;</type>
        <definition>const UsdSkelAnimMapperRefPtr&amp; GetJointMapper</definition>
        <argsstring>() const</argsstring>
        <name>GetJointMapper</name>
        <briefdescription>
<para>Return a mapper for remapping from the joint order of the skeleton to the local joint order of this prim, if any. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a null pointer if the prim has no custom joint orer. The mapper maps data from the order given by the <emphasis>joints</emphasis> order on the Skeleton to the order given by the <emphasis>skel:joints</emphasis> property, as optionally set through the <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="135" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a01425a20b6107c59200262a5f3e7de18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const UsdSkelAnimMapperRefPtr &amp;</type>
        <definition>const UsdSkelAnimMapperRefPtr&amp; GetMapper</definition>
        <argsstring>() const</argsstring>
        <name>GetMapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000121"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetJointMapper. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="140" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a64f35cf1d3f5012b05a563525112c7e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const UsdSkelAnimMapperRefPtr &amp;</type>
        <definition>const UsdSkelAnimMapperRefPtr&amp; GetBlendShapeMapper</definition>
        <argsstring>() const</argsstring>
        <name>GetBlendShapeMapper</name>
        <briefdescription>
<para>Return the mapper for remapping blend shapes from the order of the bound SkelAnimation to the local blend shape order of this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a null reference if the underlying prim has no blend shapes. The mapper maps data from the order given by the <emphasis>blendShapes</emphasis> order on the SkelAnimation to the order given by the <emphasis>skel:blendShapes</emphasis> property, as set through the <ref refid="class_usd_skel_binding_a_p_i" kindref="compound">UsdSkelBindingAPI</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="149" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1aea958370dc06691a3c1740e87bfde910" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetJointOrder</definition>
        <argsstring>(VtTokenArray *jointOrder) const</argsstring>
        <name>GetJointOrder</name>
        <param>
          <type>VtTokenArray *</type>
          <declname>jointOrder</declname>
        </param>
        <briefdescription>
<para>Get the custom joint order for this skinning site, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a51e9c0379fe8424bf2c6c4abc908869e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetBlendShapeOrder</definition>
        <argsstring>(VtTokenArray *blendShapes) const</argsstring>
        <name>GetBlendShapeOrder</name>
        <param>
          <type>VtTokenArray *</type>
          <declname>blendShapes</declname>
        </param>
        <briefdescription>
<para>Get the blend shapes for this skinning site, if any. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ad4d830df6f208a065650ff7e4cb4554c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetTimeSamples</definition>
        <argsstring>(std::vector&lt; double &gt; *times) const</argsstring>
        <name>GetTimeSamples</name>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>times</declname>
        </param>
        <briefdescription>
<para>Populate <computeroutput>times</computeroutput> with the union of time samples for all properties that affect skinning, independent of joint transforms and any other prim-specific properties (such as points). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_attribute_1a0aba275933a77f28ab44b750964aa9a2" kindref="member">UsdAttribute::GetTimeSamples</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a7bc94ca1afa705303f1ad709ee1e74b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool GetTimeSamplesInInterval</definition>
        <argsstring>(const GfInterval &amp;interval, std::vector&lt; double &gt; *times) const</argsstring>
        <name>GetTimeSamplesInInterval</name>
        <param>
          <type>const <ref refid="class_gf_interval" kindref="compound">GfInterval</ref> &amp;</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>std::vector&lt; double &gt; *</type>
          <declname>times</declname>
        </param>
        <briefdescription>
<para>Populate <computeroutput>times</computeroutput> with the union of time samples within <computeroutput>interval</computeroutput>, for all properties that affect skinning, independent of joint. </para>
        </briefdescription>
        <detaileddescription>
<para>transforms and any other prim-specific properties (such as points).</para>
<para><simplesect kind="see"><para><ref refid="class_usd_attribute_1a47ff5d05a3872ef5061e8908fde2d559" kindref="member">UsdAttribute::GetTimeSamplesInInterval</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a8949c05d57489df1fbd2fcc6e2586dec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeJointInfluences</definition>
        <argsstring>(VtIntArray *indices, VtFloatArray *weights, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>ComputeJointInfluences</name>
        <param>
          <type>VtIntArray *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>VtFloatArray *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Convenience method for computing joint influences. </para>
        </briefdescription>
        <detaileddescription>
<para>In addition to querying influences, this will also perform validation of the basic form of the weight data <ndash/> although the array contents is not validated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ae9c6fae1e6724c31e15f04295da5e976" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeVaryingJointInfluences</definition>
        <argsstring>(size_t numPoints, VtIntArray *indices, VtFloatArray *weights, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>ComputeVaryingJointInfluences</name>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type>VtIntArray *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>VtFloatArray *</type>
          <declname>weights</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Convenience method for computing joint influence, where constant influences are expanded to hold values per point. </para>
        </briefdescription>
        <detaileddescription>
<para>In addition to querying influences, this will also perform validation of the basic form of the weight data <ndash/> although the array contents is not validated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1abbb7d64b9acc5f6c6b800c7e50adec1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeSkinnedPoints</definition>
        <argsstring>(const VtArray&lt; Matrix4 &gt; &amp;xforms, VtVec3fArray *points, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>ComputeSkinnedPoints</name>
        <param>
          <type>const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Compute skinned points using specified skinning method attr (fallback to linear blend skinning if not specified) Both <computeroutput>xforms</computeroutput> and <computeroutput>points</computeroutput> are given in <emphasis>skeleton space</emphasis>, using the joint order of the bound skeleton. </para>
        </briefdescription>
        <detaileddescription>
<para>Joint influences and the (optional) binding transform are computed at time <computeroutput>time</computeroutput> (which will typically be unvarying).</para>
<para><simplesect kind="see"><para><ref refid="class_usd_skel_skeleton_query_1ad37a92f259f583ff99b5f354c42f268a" kindref="member">UsdSkelSkeletonQuery::ComputeSkinningTransforms</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a3681d90596cd6d386a5994f9178b598d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeSkinnedNormals</definition>
        <argsstring>(const VtArray&lt; Matrix4 &gt; &amp;xforms, VtVec3fArray *points, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>ComputeSkinnedNormals</name>
        <param>
          <type>const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Compute skinned normals using specified skinning method attr (fallback to linear blend skinning if not specified) Both <computeroutput>xforms</computeroutput> and <computeroutput>points</computeroutput> are given in <emphasis>skeleton space</emphasis>, using the joint order of the bound skeleton. </para>
        </briefdescription>
        <detaileddescription>
<para>Joint influences and the (optional) binding transform are computed at time <computeroutput>time</computeroutput> (which will typically be unvarying).</para>
<para><simplesect kind="see"><para><ref refid="class_usd_skel_skeleton_query_1ad37a92f259f583ff99b5f354c42f268a" kindref="member">UsdSkelSkeletonQuery::ComputeSkinningTransforms</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ad7b952846ef499d29e812bb50d1ddf78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool ComputeSkinnedTransform</definition>
        <argsstring>(const VtArray&lt; Matrix4 &gt; &amp;xforms, Matrix4 *xform, UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>ComputeSkinnedTransform</name>
        <param>
          <type>const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; &amp;</type>
          <declname>xforms</declname>
        </param>
        <param>
          <type>Matrix4 *</type>
          <declname>xform</declname>
        </param>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
<para>Compute a skinning transform using specified skinning method attr (fallback to linear blend skinning if not specified) The <computeroutput>xforms</computeroutput> are given in <emphasis>skeleton space</emphasis>, using the joint order of the bound skeleton. </para>
        </briefdescription>
        <detaileddescription>
<para>Joint influences and the (optional) binding transform are computed at time <computeroutput>time</computeroutput> (which will typically be unvarying). If this skinning query holds non-constant joint influences, no transform will be computed, and the function will return false.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_skel_skeleton_query_1ad37a92f259f583ff99b5f354c42f268a" kindref="member">UsdSkelSkeletonQuery::ComputeSkinningTransforms</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a97a79b12c3b28d7eef3f718615b15f72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Matrix4</type>
          </param>
        </templateparamlist>
        <type>USDSKEL_API float</type>
        <definition>USDSKEL_API float ComputeExtentsPadding</definition>
        <argsstring>(const VtArray&lt; Matrix4 &gt; &amp;skelRestXforms, const UsdGeomBoundable &amp;boundable) const</argsstring>
        <name>ComputeExtentsPadding</name>
        <param>
          <type>const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; Matrix4 &gt; &amp;</type>
          <declname>skelRestXforms</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_geom_boundable" kindref="compound">UsdGeomBoundable</ref> &amp;</type>
          <declname>boundable</declname>
        </param>
        <briefdescription>
<para>Helper for computing an <emphasis>approximate</emphasis> padding for use in extents computations. </para>
        </briefdescription>
        <detaileddescription>
<para>The padding is computed as the difference between the pivots of the <computeroutput>skelRestXforms</computeroutput> <ndash/> <emphasis>skeleton space</emphasis> joint transforms at rest <ndash/> and the extents of the skinned primitive. This is intended to provide a suitable, constant metric for padding joint extents as computed by UsdSkelComputeJointsExtent. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ac421f77a12d3da3be6d743ca1bb02b3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USDSKEL_API TfToken GetSkinningMethod</definition>
        <argsstring>() const</argsstring>
        <name>GetSkinningMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="255" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a272ebcbe2053b523219257c94f041fa6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>USDSKEL_API GfMatrix4d GetGeomBindTransform</definition>
        <argsstring>(UsdTimeCode time=UsdTimeCode::Default()) const</argsstring>
        <name>GetGeomBindTransform</name>
        <param>
          <type><ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref></type>
          <declname>time</declname>
          <defval><ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1ac2f106a8aaf8118daa4fb88d1b193c27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API std::string</type>
        <definition>USDSKEL_API std::string GetDescription</definition>
        <argsstring>() const</argsstring>
        <name>GetDescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="262" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a91e109489bf8caf9714cd47fa41b54cd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitializeJointInfluenceBindings</definition>
        <argsstring>(const UsdAttribute &amp;jointIndices, const UsdAttribute &amp;jointWeights)</argsstring>
        <name>_InitializeJointInfluenceBindings</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>jointWeights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_skinning_query_1a3613de494fc3cee9fefdf7eeda3f0e54" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _InitializeBlendShapeBindings</definition>
        <argsstring>(const UsdAttribute &amp;blendShapes, const UsdRelationship &amp;blendShapeTargets)</argsstring>
        <name>_InitializeBlendShapeBindings</name>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
          <declname>blendShapes</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref> &amp;</type>
          <declname>blendShapeTargets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/skinningQuery.h" line="270" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Object used for querying resolved bindings for skinning. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/skinningQuery.h" line="52" column="1" bodyfile="pxr/usd/usdSkel/skinningQuery.h" bodystart="51" bodyend="289"/>
    <listofallmembers>
      <member refid="class_usd_skel_skinning_query_1acaba6b68f682d074d508b2fae2801ad8" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_blendShapeMapper</name></member>
      <member refid="class_usd_skel_skinning_query_1ad87bd77c8963dc3a61703a5f29011de1" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_blendShapeOrder</name></member>
      <member refid="class_usd_skel_skinning_query_1a2ae37d05223d454e7a6835eb4619025b" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_blendShapes</name></member>
      <member refid="class_usd_skel_skinning_query_1a861f98c8c17f8651c353c472043631e6" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_blendShapeTargets</name></member>
      <member refid="class_usd_skel_skinning_query_1aa4a61b1d913f2bee1e0ed5d9daf26549" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_flags</name></member>
      <member refid="class_usd_skel_skinning_query_1ae0a79fba01cf68a778eddb7aa1f86334" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_geomBindTransformAttr</name></member>
      <member refid="class_usd_skel_skinning_query_1a3613de494fc3cee9fefdf7eeda3f0e54" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_InitializeBlendShapeBindings</name></member>
      <member refid="class_usd_skel_skinning_query_1a91e109489bf8caf9714cd47fa41b54cd" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_InitializeJointInfluenceBindings</name></member>
      <member refid="class_usd_skel_skinning_query_1a99aa88bd8c4d5d653e50b186f90294cc" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_interpolation</name></member>
      <member refid="class_usd_skel_skinning_query_1a688b53f9ea33926a29fbad5831eedbaf" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_jointIndicesPrimvar</name></member>
      <member refid="class_usd_skel_skinning_query_1ae1baf8f95e7537c6fa4cdf548d1e0592" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_jointMapper</name></member>
      <member refid="class_usd_skel_skinning_query_1a3faefaab6eca3a0ad0c48a51fdcdbe03" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_jointOrder</name></member>
      <member refid="class_usd_skel_skinning_query_1ac9d7181995925c946e83bbbe1712fd21" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_jointWeightsPrimvar</name></member>
      <member refid="class_usd_skel_skinning_query_1ae1b195c995daca9e8a3c905ada3b647a" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_numInfluencesPerComponent</name></member>
      <member refid="class_usd_skel_skinning_query_1acdc34f90758c0dce41b95b4ec86a717d" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_prim</name></member>
      <member refid="class_usd_skel_skinning_query_1ae84eaf8e5d27d6eb6edb767d4b3a63b1" prot="private" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>_skinningMethodAttr</name></member>
      <member refid="class_usd_skel_skinning_query_1a97a79b12c3b28d7eef3f718615b15f72" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>ComputeExtentsPadding</name></member>
      <member refid="class_usd_skel_skinning_query_1a8949c05d57489df1fbd2fcc6e2586dec" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>ComputeJointInfluences</name></member>
      <member refid="class_usd_skel_skinning_query_1a3681d90596cd6d386a5994f9178b598d" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>ComputeSkinnedNormals</name></member>
      <member refid="class_usd_skel_skinning_query_1abbb7d64b9acc5f6c6b800c7e50adec1c" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>ComputeSkinnedPoints</name></member>
      <member refid="class_usd_skel_skinning_query_1ad7b952846ef499d29e812bb50d1ddf78" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>ComputeSkinnedTransform</name></member>
      <member refid="class_usd_skel_skinning_query_1ae9c6fae1e6724c31e15f04295da5e976" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>ComputeVaryingJointInfluences</name></member>
      <member refid="class_usd_skel_skinning_query_1a64f35cf1d3f5012b05a563525112c7e7" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetBlendShapeMapper</name></member>
      <member refid="class_usd_skel_skinning_query_1a51e9c0379fe8424bf2c6c4abc908869e" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetBlendShapeOrder</name></member>
      <member refid="class_usd_skel_skinning_query_1a50b46307e21f4d7195802469ef4c0323" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetBlendShapesAttr</name></member>
      <member refid="class_usd_skel_skinning_query_1ad34a9bba5f3a188ad4e6d13c27fd356e" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetBlendShapeTargetsRel</name></member>
      <member refid="class_usd_skel_skinning_query_1ac2f106a8aaf8118daa4fb88d1b193c27" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetDescription</name></member>
      <member refid="class_usd_skel_skinning_query_1a272ebcbe2053b523219257c94f041fa6" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetGeomBindTransform</name></member>
      <member refid="class_usd_skel_skinning_query_1a378566cac08e7298fdf528510ec89b02" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetGeomBindTransformAttr</name></member>
      <member refid="class_usd_skel_skinning_query_1ab751926169251ce507277c10c4a65d01" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetInterpolation</name></member>
      <member refid="class_usd_skel_skinning_query_1aa0ffe9014e63033a993cb8d32e2a61de" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetJointIndicesPrimvar</name></member>
      <member refid="class_usd_skel_skinning_query_1a9301b912a3a696d617a05022d19d364c" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetJointMapper</name></member>
      <member refid="class_usd_skel_skinning_query_1aea958370dc06691a3c1740e87bfde910" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetJointOrder</name></member>
      <member refid="class_usd_skel_skinning_query_1a5267f00a76d9f8844378d627a85d24a8" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetJointWeightsPrimvar</name></member>
      <member refid="class_usd_skel_skinning_query_1a01425a20b6107c59200262a5f3e7de18" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetMapper</name></member>
      <member refid="class_usd_skel_skinning_query_1aa46856de74a7cbd97f9086fdfdde69dd" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetNumInfluencesPerComponent</name></member>
      <member refid="class_usd_skel_skinning_query_1ac44ba4d2d2cd5b29ff6b2af537f5940c" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetPrim</name></member>
      <member refid="class_usd_skel_skinning_query_1ac421f77a12d3da3be6d743ca1bb02b3a" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetSkinningMethod</name></member>
      <member refid="class_usd_skel_skinning_query_1ab39bfc90a592aac40ec8d57a37b7219f" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetSkinningMethodAttr</name></member>
      <member refid="class_usd_skel_skinning_query_1ad4d830df6f208a065650ff7e4cb4554c" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_skel_skinning_query_1a7bc94ca1afa705303f1ad709ee1e74b8" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_skel_skinning_query_1a1ecc112de06954c8111b5e52c19f8ceb" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>HasBlendShapes</name></member>
      <member refid="class_usd_skel_skinning_query_1ae41e31dd82e57a2edf98e9375864c04d" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>HasJointInfluences</name></member>
      <member refid="class_usd_skel_skinning_query_1a55b3d590dfab71d7d108f09d138d3351" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>IsRigidlyDeformed</name></member>
      <member refid="class_usd_skel_skinning_query_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>IsValid</name></member>
      <member refid="class_usd_skel_skinning_query_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>operator bool</name></member>
      <member refid="class_usd_skel_skinning_query_1a51a6644ab664460ebe03b6e8d1a87d5f" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>UsdSkelSkinningQuery</name></member>
      <member refid="class_usd_skel_skinning_query_1aff50f2725f12bcda1cc2059a303401dd" prot="public" virt="non-virtual"><scope>UsdSkelSkinningQuery</scope><name>UsdSkelSkinningQuery</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
