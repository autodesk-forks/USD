<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_payloads" kind="class" language="C++" prot="public">
    <compoundname>UsdPayloads</compoundname>
    <includes refid="payloads_8h" local="no">payloads.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_payloads_1a2456ef04cace6b3b67dad91da7f430b8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdPrim</definition>
        <argsstring></argsstring>
        <name>UsdPrim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="44" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_payloads_1acdc34f90758c0dce41b95b4ec86a717d" prot="private" static="no" mutable="no">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>UsdPrim _prim</definition>
        <argsstring></argsstring>
        <name>_prim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="114" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_payloads_1a5225e635033ac4153bc396eeb4a86808" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPayloads</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>UsdPayloads</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="46" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="46" bodyend="46"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_payloads_1a85788d68b55baca537376f5166fbe0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool AddPayload</definition>
        <argsstring>(const SdfPayload &amp;payload, UsdListPosition position=UsdListPositionBackOfPrependList)</argsstring>
        <name>AddPayload</name>
        <param>
          <type>const <ref refid="class_sdf_payload" kindref="compound">SdfPayload</ref> &amp;</type>
          <declname>payload</declname>
        </param>
        <param>
          <type><ref refid="common_8h_1a28349701078995dc76a99331bb60c555" kindref="member">UsdListPosition</ref></type>
          <declname>position</declname>
          <defval><ref refid="common_8h_1a28349701078995dc76a99331bb60c555a681727d9e5aecd6058825ab1fe888028" kindref="member">UsdListPositionBackOfPrependList</ref></defval>
        </param>
        <briefdescription>
<para>Adds a payload to the payload listOp at the current EditTarget, in the position specified by <computeroutput>position</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_references_1Usd_Failing_References" kindref="member">Why adding references may fail</ref> for explanation of expectations on <computeroutput>payload</computeroutput> and what return values and errors to expect, and <ref refid="_usd__page__object_model_1Usd_OM_ListOps" kindref="member">ListOps and List Editing</ref> for details on list editing and composition of listOps. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1ac0d0f967eebb48f5a81f8099186fe7a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool AddPayload</definition>
        <argsstring>(const std::string &amp;identifier, const SdfPath &amp;primPath, const SdfLayerOffset &amp;layerOffset=SdfLayerOffset(), UsdListPosition position=UsdListPositionBackOfPrependList)</argsstring>
        <name>AddPayload</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref> &amp;</type>
          <declname>layerOffset</declname>
          <defval><ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref>()</defval>
        </param>
        <param>
          <type><ref refid="common_8h_1a28349701078995dc76a99331bb60c555" kindref="member">UsdListPosition</ref></type>
          <declname>position</declname>
          <defval><ref refid="common_8h_1a28349701078995dc76a99331bb60c555a681727d9e5aecd6058825ab1fe888028" kindref="member">UsdListPositionBackOfPrependList</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1a077d4cd4ae40b5341fa92a114618e76d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool AddPayload</definition>
        <argsstring>(const std::string &amp;identifier, const SdfLayerOffset &amp;layerOffset=SdfLayerOffset(), UsdListPosition position=UsdListPositionBackOfPrependList)</argsstring>
        <name>AddPayload</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref> &amp;</type>
          <declname>layerOffset</declname>
          <defval><ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref>()</defval>
        </param>
        <param>
          <type><ref refid="common_8h_1a28349701078995dc76a99331bb60c555" kindref="member">UsdListPosition</ref></type>
          <declname>position</declname>
          <defval><ref refid="common_8h_1a28349701078995dc76a99331bb60c555a681727d9e5aecd6058825ab1fe888028" kindref="member">UsdListPositionBackOfPrependList</ref></defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_references_1Usd_DefaultPrim_References" kindref="member">Payloads Without Prim Paths</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1ae561897a421f821b5f66f5ffcde5dcc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool AddInternalPayload</definition>
        <argsstring>(const SdfPath &amp;primPath, const SdfLayerOffset &amp;layerOffset=SdfLayerOffset(), UsdListPosition position=UsdListPositionBackOfPrependList)</argsstring>
        <name>AddInternalPayload</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primPath</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref> &amp;</type>
          <declname>layerOffset</declname>
          <defval><ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref>()</defval>
        </param>
        <param>
          <type><ref refid="common_8h_1a28349701078995dc76a99331bb60c555" kindref="member">UsdListPosition</ref></type>
          <declname>position</declname>
          <defval><ref refid="common_8h_1a28349701078995dc76a99331bb60c555a681727d9e5aecd6058825ab1fe888028" kindref="member">UsdListPositionBackOfPrependList</ref></defval>
        </param>
        <briefdescription>
<para>Add an internal payload to the specified prim. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_references_1Usd_Internal_References" kindref="member">Internal Payloads</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1ae346368ca5f48098b2212e916f1cb5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool RemovePayload</definition>
        <argsstring>(const SdfPayload &amp;ref)</argsstring>
        <name>RemovePayload</name>
        <param>
          <type>const <ref refid="class_sdf_payload" kindref="compound">SdfPayload</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Removes the specified payload from the payloads listOp at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>This does not necessarily eliminate the payload completely, as it may be added or set in another layer in the same LayerStack as the current EditTarget. <simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_ListOps" kindref="member">ListOps and List Editing</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1a79bbeb8f9b276b83cd5632c07a60b4b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool ClearPayloads</definition>
        <argsstring>()</argsstring>
        <name>ClearPayloads</name>
        <briefdescription>
<para>Removes the authored payload listOp edits at the current EditTarget. </para>
        </briefdescription>
        <detaileddescription>
<para>The same caveats for Remove() apply to Clear(). In fact, Clear() may actually increase the number of composed payloads, if the listOp being cleared contained the &quot;remove&quot; operator. <simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_ListOps" kindref="member">ListOps and List Editing</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1a4f58745c826a3688fc0c1f0cb1f299ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool SetPayloads</definition>
        <argsstring>(const SdfPayloadVector &amp;items)</argsstring>
        <name>SetPayloads</name>
        <param>
          <type>const SdfPayloadVector &amp;</type>
          <declname>items</declname>
        </param>
        <briefdescription>
<para>Explicitly set the payloads, potentially blocking weaker opinions that add or remove items. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_references_1Usd_Failing_References" kindref="member">Why adding payloads may fail</ref> for explanation of expectations on <computeroutput>items</computeroutput> and what return values and errors to expect, and <ref refid="_usd__page__object_model_1Usd_OM_ListOps" kindref="member">ListOps and List Editing</ref> for details on list editing and composition of listOps. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1ac44ba4d2d2cd5b29ff6b2af537f5940c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
        <definition>const UsdPrim&amp; GetPrim</definition>
        <argsstring>() const</argsstring>
        <name>GetPrim</name>
        <briefdescription>
<para>Return the prim this object is bound to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="106" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1ae819fcefe5dd54e01483fb7764b42112" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>UsdPrim GetPrim</definition>
        <argsstring>()</argsstring>
        <name>GetPrim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="109" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_payloads_1a9b3baad8c612d81b96e46f84d7e97580" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>()</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/payloads.h" line="111" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="111" bodyend="111"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_usd_payloads" kindref="compound">UsdPayloads</ref> provides an interface to authoring and introspecting payloads. </para>
    </briefdescription>
    <detaileddescription>
<para>Payloads behave the same as Usd references except that payloads can be optionally loaded. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/payloads.h" line="43" column="1" bodyfile="pxr/usd/usd/payloads.h" bodystart="43" bodyend="115"/>
    <listofallmembers>
      <member refid="class_usd_payloads_1acdc34f90758c0dce41b95b4ec86a717d" prot="private" virt="non-virtual"><scope>UsdPayloads</scope><name>_prim</name></member>
      <member refid="class_usd_payloads_1ae561897a421f821b5f66f5ffcde5dcc0" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>AddInternalPayload</name></member>
      <member refid="class_usd_payloads_1a85788d68b55baca537376f5166fbe0ce" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>AddPayload</name></member>
      <member refid="class_usd_payloads_1ac0d0f967eebb48f5a81f8099186fe7a7" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>AddPayload</name></member>
      <member refid="class_usd_payloads_1a077d4cd4ae40b5341fa92a114618e76d" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>AddPayload</name></member>
      <member refid="class_usd_payloads_1a79bbeb8f9b276b83cd5632c07a60b4b1" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>ClearPayloads</name></member>
      <member refid="class_usd_payloads_1ac44ba4d2d2cd5b29ff6b2af537f5940c" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>GetPrim</name></member>
      <member refid="class_usd_payloads_1ae819fcefe5dd54e01483fb7764b42112" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>GetPrim</name></member>
      <member refid="class_usd_payloads_1a9b3baad8c612d81b96e46f84d7e97580" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>operator bool</name></member>
      <member refid="class_usd_payloads_1ae346368ca5f48098b2212e916f1cb5e6" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>RemovePayload</name></member>
      <member refid="class_usd_payloads_1a4f58745c826a3688fc0c1f0cb1f299ad" prot="public" virt="non-virtual"><scope>UsdPayloads</scope><name>SetPayloads</name></member>
      <member refid="class_usd_payloads_1a5225e635033ac4153bc396eeb4a86808" prot="private" virt="non-virtual"><scope>UsdPayloads</scope><name>UsdPayloads</name></member>
      <member refid="class_usd_payloads_1a2456ef04cace6b3b67dad91da7f430b8" prot="private" virt="non-virtual"><scope>UsdPayloads</scope><name>UsdPrim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
