<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_sdf_predicate_expression_1_1_fn_arg" kind="class" language="C++" prot="public">
    <compoundname>SdfPredicateExpression::FnArg</compoundname>
    <includes refid="predicate_expression_8h" local="no">predicateExpression.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_sdf_predicate_expression_1_1_fn_arg_1ac36eef66ebbe94cf11cb843772a54fd7" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string argName</definition>
        <argsstring></argsstring>
        <name>argName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="99" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_predicate_expression_1_1_fn_arg_1abd5e37b648a0aad51008d3104f0d2a67" prot="public" static="no" mutable="no">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="100" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_sdf_predicate_expression_1_1_fn_arg_1a10ccd609c90e89c0bc36f1a86b9b89ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref></type>
        <definition>static FnArg Positional</definition>
        <argsstring>(VtValue const &amp;val)</argsstring>
        <name>Positional</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="93" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_expression_1_1_fn_arg_1a9cbec5a27aec3e3df1689ab357c9a2b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref></type>
        <definition>static FnArg Keyword</definition>
        <argsstring>(std::string const &amp;name, VtValue const &amp;val)</argsstring>
        <name>Keyword</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="96" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="96" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_arg_1ade636d3e235966f754ae7c477dd9b7be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HashState</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void TfHashAppend</definition>
        <argsstring>(HashState &amp;h, FnArg const &amp;arg)</argsstring>
        <name>TfHashAppend</name>
        <param>
          <type>HashState &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> const &amp;</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="103" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_arg_1ac2896c7f3a5cc9e7ae318697340d2b69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(FnArg const &amp;l, FnArg const &amp;r)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="107" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_arg_1aea297ba3bd1da58a133077f7354516f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(FnArg const &amp;l, FnArg const &amp;r)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="110" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="friend" id="struct_sdf_predicate_expression_1_1_fn_arg_1a4586cdd6377ce9e4a79dc704880587b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend void</type>
        <definition>void swap</definition>
        <argsstring>(FnArg &amp;l, FnArg &amp;r)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="struct_sdf_predicate_expression_1_1_fn_arg" kindref="compound">FnArg</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateExpression.h" line="114" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="114" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a function argument name and value. </para>
    </briefdescription>
    <detaileddescription>
<para>Positional arguments have empty names. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1194">
        <label>VtValue</label>
        <link refid="class_vt_value"/>
      </node>
      <node id="1193">
        <label>SdfPredicateExpression::FnArg</label>
        <link refid="struct_sdf_predicate_expression_1_1_fn_arg"/>
        <childnode refid="1194" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/predicateExpression.h" line="92" column="1" bodyfile="pxr/usd/sdf/predicateExpression.h" bodystart="92" bodyend="118"/>
    <listofallmembers>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1ac36eef66ebbe94cf11cb843772a54fd7" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>argName</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1a9cbec5a27aec3e3df1689ab357c9a2b5" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>Keyword</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1aea297ba3bd1da58a133077f7354516f3" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>operator!=</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1ac2896c7f3a5cc9e7ae318697340d2b69" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>operator==</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1a10ccd609c90e89c0bc36f1a86b9b89ef" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>Positional</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1a4586cdd6377ce9e4a79dc704880587b2" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>swap</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1ade636d3e235966f754ae7c477dd9b7be" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>TfHashAppend</name></member>
      <member refid="struct_sdf_predicate_expression_1_1_fn_arg_1abd5e37b648a0aad51008d3104f0d2a67" prot="public" virt="non-virtual"><scope>SdfPredicateExpression::FnArg</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
