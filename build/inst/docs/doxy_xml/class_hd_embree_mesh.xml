<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_embree_mesh" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdEmbreeMesh</compoundname>
    <basecompoundref refid="class_hd_mesh" prot="public" virt="non-virtual">HdMesh</basecompoundref>
    <includes refid="imaging_2hd_embree_2mesh_8h" local="no">mesh.h</includes>
    <innerclass refid="struct_hd_embree_mesh_1_1_primvar_source" prot="private">HdEmbreeMesh::PrimvarSource</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_embree_mesh_1a9edb23f833bafd2a974c27eb23e3651c" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned _rtcMeshId</definition>
        <argsstring></argsstring>
        <name>_rtcMeshId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="193" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a6c8577d3fa44b557c7fb5dcab4e0ed47" prot="private" static="no" mutable="no">
        <type>RTCScene</type>
        <definition>RTCScene _rtcMeshScene</definition>
        <argsstring></argsstring>
        <name>_rtcMeshScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="194" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a0a0a9c233e83c34b04e2aebd94e5438d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned &gt;</type>
        <definition>std::vector&lt;unsigned&gt; _rtcInstanceIds</definition>
        <argsstring></argsstring>
        <name>_rtcInstanceIds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="197" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a85b95435ab38ffd301d68ea906cf428c" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref></type>
        <definition>HdMeshTopology _topology</definition>
        <argsstring></argsstring>
        <name>_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="202" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1ae24531feed70a7863d5dfdb815e3be78" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref></type>
        <definition>GfMatrix4f _transform</definition>
        <argsstring></argsstring>
        <name>_transform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="203" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a10f9d1cb17f129704b99abe3431c061e" prot="private" static="no" mutable="no">
        <type>VtVec3fArray</type>
        <definition>VtVec3fArray _points</definition>
        <argsstring></argsstring>
        <name>_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="204" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a8cd555b6d2d431d5e3e1d3f75e5c3b4e" prot="private" static="no" mutable="no">
        <type>VtVec3iArray</type>
        <definition>VtVec3iArray _triangulatedIndices</definition>
        <argsstring></argsstring>
        <name>_triangulatedIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="213" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a0c291225e00d9c86d011cc5a36111c14" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _trianglePrimitiveParams</definition>
        <argsstring></argsstring>
        <name>_trianglePrimitiveParams</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="214" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a998ad72af83f440ed7930b7660ffc826" prot="private" static="no" mutable="no">
        <type>VtVec3fArray</type>
        <definition>VtVec3fArray _computedNormals</definition>
        <argsstring></argsstring>
        <name>_computedNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="215" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1ab61e0f7bd38b1db4b07e43c8c70eaf33" prot="private" static="no" mutable="no">
        <type>Hd_VertexAdjacency</type>
        <definition>Hd_VertexAdjacency _adjacency</definition>
        <argsstring></argsstring>
        <name>_adjacency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="222" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a350742f105bba8ff179ba300356c2760" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _adjacencyValid</definition>
        <argsstring></argsstring>
        <name>_adjacencyValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="223" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a93bff3bf526f71f5d9ae795a2bf62f57" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _normalsValid</definition>
        <argsstring></argsstring>
        <name>_normalsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="224" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a5ec724661b161f1ff8fb6ec54f5f0351" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _refined</definition>
        <argsstring></argsstring>
        <name>_refined</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="227" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1ac9318df34608fb5af2a4ac12a0eb611f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _smoothNormals</definition>
        <argsstring></argsstring>
        <name>_smoothNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="228" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1ad23ea0a4c8ca7a6f5459d5aa75a4b662" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _doubleSided</definition>
        <argsstring></argsstring>
        <name>_doubleSided</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="229" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a0d10aa0ce3116bd56034c5e4cbcb3c5b" prot="private" static="no" mutable="no">
        <type>HdCullStyle</type>
        <definition>HdCullStyle _cullStyle</definition>
        <argsstring></argsstring>
        <name>_cullStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="230" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a6b04647c9e9ac8ffe43c1cf256f84f17" prot="private" static="no" mutable="no">
        <type>TfHashMap&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, PrimvarSource, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>TfHashMap&lt;TfToken, PrimvarSource, TfToken::HashFunctor&gt; _primvarSourceMap</definition>
        <argsstring></argsstring>
        <name>_primvarSourceMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="240" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a0ce1e4aec56d498927b027932b913a04" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_embree_r_t_c_buffer_allocator" kindref="compound">HdEmbreeRTCBufferAllocator</ref></type>
        <definition>HdEmbreeRTCBufferAllocator _embreeBufferAllocator</definition>
        <argsstring></argsstring>
        <name>_embreeBufferAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="244" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1aadc911d56aafcefbace2d2ea64c7a2ef" prot="private" static="no" mutable="no">
        <type>RTCGeometry</type>
        <definition>RTCGeometry _geometry</definition>
        <argsstring></argsstring>
        <name>_geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="255" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_embree_mesh_1a0988227a5f4b2d18b91b9fcdcb59590e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; RTCGeometry &gt;</type>
        <definition>std::vector&lt;RTCGeometry&gt; _rtcInstanceGeometries</definition>
        <argsstring></argsstring>
        <name>_rtcInstanceGeometries</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="256" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_embree_mesh_1aee8308170af2d05e7f98b901469c3005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HF_MALLOC_TAG_NEW</definition>
        <argsstring>(&quot;new HdEmbreeMesh&quot;)</argsstring>
        <name>HF_MALLOC_TAG_NEW</name>
        <param>
          <type>&quot;new <ref refid="class_hd_embree_mesh" kindref="compound">HdEmbreeMesh</ref>&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1ace5083ca30d2c4bb6c854602807e72ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdEmbreeMesh</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>HdEmbreeMesh</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para><ref refid="class_hd_embree_mesh" kindref="compound">HdEmbreeMesh</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The scene-graph path to this mesh. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a36177ca275f645a6d6fbbcf943b38da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~HdEmbreeMesh</definition>
        <argsstring>()=default</argsstring>
        <name>~HdEmbreeMesh</name>
        <briefdescription>
<para><ref refid="class_hd_embree_mesh" kindref="compound">HdEmbreeMesh</ref> destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>(Note: Embree resources are released in <ref refid="class_hd_embree_mesh_1ab6be581d151f59624df35eebdb4f90f4" kindref="member">Finalize()</ref>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a5a06f66bb03f6494a9ba6f4ae01ca37e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HdDirtyBits</type>
        <definition>virtual HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <reimplements refid="class_hd_rprim_1ac05e81662ee475cfe52ce97e84e7205d">GetInitialDirtyBitsMask</reimplements>
        <briefdescription>
<para>Inform the scene graph which state needs to be downloaded in the first <ref refid="class_hd_embree_mesh_1a107d87885299e595bb0906b323392eb7" kindref="member">Sync()</ref> call: in this case, topology and points data to build the geometry object in the embree scene graph. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The initial dirty state this mesh wants to query. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a107d87885299e595bb0906b323392eb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits, TfToken const &amp;reprToken) override</argsstring>
        <name>Sync</name>
        <reimplements refid="class_hd_rprim_1accb912c87d0f4772cec8b9b51c6bed89">Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>reprToken</declname>
        </param>
        <briefdescription>
<para>Pull invalidated scene data and prepare/update the renderable representation. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is told which scene data to pull through the dirtyBits parameter. The first time it&apos;s called, dirtyBits comes from _GetInitialDirtyBits(), which provides initial dirty state, but after that it&apos;s driven by invalidation tracking in the scene delegate.</para>
<para>The contract for this function is that the prim can only pull on scene delegate buffers that are marked dirty. Scene delegates can and do implement just-in-time data schemes that mean that pulling on clean data will be at best incorrect, and at worst a crash.</para>
<para>This function is called in parallel from worker threads, so it needs to be threadsafe; calls into <ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> are ok.</para>
<para>Reprs are used by hydra for controlling per-item draw settings like flat/smooth shaded, wireframe, refined, etc. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sceneDelegate</parametername>
</parameternamelist>
<parameterdescription>
<para>The data source for this geometry item. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>renderParam</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="class_hd_embree_render_param" kindref="compound">HdEmbreeRenderParam</ref> object containing top-level embree state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirtyBits</parametername>
</parameternamelist>
<parameterdescription>
<para>A specifier for which scene data has changed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>reprToken</parametername>
</parameternamelist>
<parameterdescription>
<para>A specifier for which representation to draw with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1ab6be581d151f59624df35eebdb4f90f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void Finalize</definition>
        <argsstring>(HdRenderParam *renderParam) override</argsstring>
        <name>Finalize</name>
        <reimplements refid="class_hd_rprim_1a385eed04c15e636796b187bfdf0fcbf0">Finalize</reimplements>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <briefdescription>
<para>Release any resources this class is holding onto: in this case, destroy the geometry object in the embree scene graph. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderParam</parametername>
</parameternamelist>
<parameterdescription>
<para>An <ref refid="class_hd_embree_render_param" kindref="compound">HdEmbreeRenderParam</ref> object containing top-level embree state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="117" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_embree_mesh_1a77b739e190ba086a85ea51671e984682" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _InitRepr</definition>
        <argsstring>(TfToken const &amp;reprToken, HdDirtyBits *dirtyBits) override</argsstring>
        <name>_InitRepr</name>
        <reimplements refid="class_hd_rprim_1ae8808b3a20d4f5c297884e53490eafdc">_InitRepr</reimplements>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>reprToken</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Initialize the given representation of this Rprim. </para>
        </briefdescription>
        <detaileddescription>
<para>This is called prior to syncing the prim, the first time the repr is used.</para>
<para>reprToken is the name of the representation to initalize.</para>
<para>dirtyBits is an in/out value. It is initialized to the dirty bits from the change tracker. InitRepr can then set additional dirty bits if additional data is required from the scene delegate when this repr is synced. InitRepr occurs before dirty bit propagation.</para>
<para>See <ref refid="class_hd_rprim_1af62f2311f5580ddc32ecd571a0f559d4" kindref="member">HdRprim::InitRepr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1afe1f320d311e9bdad2013aec4d2af6bd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HdDirtyBits</type>
        <definition>virtual HdDirtyBits _PropagateDirtyBits</definition>
        <argsstring>(HdDirtyBits bits) const override</argsstring>
        <name>_PropagateDirtyBits</name>
        <reimplements refid="class_hd_rprim_1a6ab9057a8d24d811a6f99f8cfb2fc0fd">_PropagateDirtyBits</reimplements>
        <param>
          <type>HdDirtyBits</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
<para>This callback from Rprim gives the prim an opportunity to set additional dirty bits based on those already set. </para>
        </briefdescription>
        <detaileddescription>
<para>This is done before the dirty bits are passed to the scene delegate, so can be used to communicate that extra information is needed by the prim to process the changes.</para>
<para>The return value is the new set of dirty bits, which replaces the bits passed in.</para>
<para>See <ref refid="class_hd_rprim_1af80a9b6a6565e86769cf248698122958" kindref="member">HdRprim::PropagateRprimDirtyBits()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_embree_mesh_1a77b3e79e45a3b097b3e765e9bad08da6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_hd_embree_prototype_context" kindref="compound">HdEmbreePrototypeContext</ref> *</type>
        <definition>HdEmbreePrototypeContext* _GetPrototypeContext</definition>
        <argsstring>()</argsstring>
        <name>_GetPrototypeContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a2bc830a943e7ac75f6bc65d1ea3b7892" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_hd_embree_instance_context" kindref="compound">HdEmbreeInstanceContext</ref> *</type>
        <definition>HdEmbreeInstanceContext* _GetInstanceContext</definition>
        <argsstring>(RTCScene scene, size_t i)</argsstring>
        <name>_GetInstanceContext</name>
        <param>
          <type>RTCScene</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1adb775183139e1e12d3c56d956020679f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _PopulateRtMesh</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, RTCScene scene, RTCDevice device, HdDirtyBits *dirtyBits, HdMeshReprDesc const &amp;desc)</argsstring>
        <name>_PopulateRtMesh</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type>RTCScene</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>RTCDevice</type>
          <declname>device</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_mesh_repr_desc" kindref="compound">HdMeshReprDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a1f3de2799f2be65d7ecd27c6ea145e6b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _UpdatePrimvarSources</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdDirtyBits dirtyBits)</argsstring>
        <name>_UpdatePrimvarSources</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1ac3add0149b7df6ad611a46afeffc7784" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _UpdateComputedPrimvarSources</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdDirtyBits dirtyBits)</argsstring>
        <name>_UpdateComputedPrimvarSources</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a9463848a8d41f687cf4c602a25774464" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _CreatePrimvarSampler</definition>
        <argsstring>(TfToken const &amp;name, VtValue const &amp;data, HdInterpolation interpolation, bool refined)</argsstring>
        <name>_CreatePrimvarSampler</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>refined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1ad45061cb8cb06a2342812bb4d7f9e9e1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RTCGeometry</type>
        <definition>RTCGeometry _CreateEmbreeSubdivMesh</definition>
        <argsstring>(RTCScene scene, RTCDevice device)</argsstring>
        <name>_CreateEmbreeSubdivMesh</name>
        <param>
          <type>RTCScene</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>RTCDevice</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1ad1de274bf4e1c3bd59e597cde5be1c62" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>RTCGeometry</type>
        <definition>RTCGeometry _CreateEmbreeTriangleMesh</definition>
        <argsstring>(RTCScene scene, RTCDevice device)</argsstring>
        <name>_CreateEmbreeTriangleMesh</name>
        <param>
          <type>RTCScene</type>
          <declname>scene</declname>
        </param>
        <param>
          <type>RTCDevice</type>
          <declname>device</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1aa6727ba635f5a545f729338e3d94900f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdEmbreeMesh</definition>
        <argsstring>(const HdEmbreeMesh &amp;)=delete</argsstring>
        <name>HdEmbreeMesh</name>
        <param>
          <type>const <ref refid="class_hd_embree_mesh" kindref="compound">HdEmbreeMesh</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="259" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_embree_mesh_1a3fa3bc2e6067887c56f018ee6153182c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_embree_mesh" kindref="compound">HdEmbreeMesh</ref> &amp;</type>
        <definition>HdEmbreeMesh&amp; operator=</definition>
        <argsstring>(const HdEmbreeMesh &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_embree_mesh" kindref="compound">HdEmbreeMesh</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="260" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_hd_embree_mesh_1af75f0b6986c8df8db014f4738a5683cc" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void _EmbreeCullFaces</definition>
        <argsstring>(const RTCFilterFunctionNArguments *args)</argsstring>
        <name>_EmbreeCullFaces</name>
        <param>
          <type>const RTCFilterFunctionNArguments *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdEmbree/mesh.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An HdEmbree representation of a subdivision surface or poly-mesh object. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is an example of a hydra Rprim, or renderable object, and it gets created on a call to <ref refid="class_hd_render_index_1aaa49377f918b6d74c12eb90254d4ba16" kindref="member">HdRenderIndex::InsertRprim()</ref> with a type of HdPrimTypeTokens-&gt;mesh.</para>
<para>The prim object&apos;s main function is to bridge the scene description and the renderable representation. The Hydra image generation algorithm will call <ref refid="class_hd_render_index_1a4c0c8384764f03418660e24b66fa4c90" kindref="member">HdRenderIndex::SyncAll()</ref> before any drawing; this, in turn, will call <ref refid="class_hd_embree_mesh_1a107d87885299e595bb0906b323392eb7" kindref="member">Sync()</ref> for each mesh with new data.</para>
<para><ref refid="class_hd_embree_mesh_1a107d87885299e595bb0906b323392eb7" kindref="member">Sync()</ref> is passed a set of dirtyBits, indicating which scene buffers are dirty. It uses these to pull all of the new scene data and constructs updated embree geometry objects. Rebuilding the top-level acceleration datastructures is deferred to the start of HdEmbreeRender::Render().</para>
<para>An rprim&apos;s state is lazily populated in <ref refid="class_hd_embree_mesh_1a107d87885299e595bb0906b323392eb7" kindref="member">Sync()</ref>; matching this, <ref refid="class_hd_embree_mesh_1ab6be581d151f59624df35eebdb4f90f4" kindref="member">Finalize()</ref> does the heavy work of releasing state (such as handles into the top-level embree scene), so that object population and existence aren&apos;t tied to each other. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1856">
        <label>HdRprim</label>
        <link refid="class_hd_rprim"/>
      </node>
      <node id="1855">
        <label>HdMesh</label>
        <link refid="class_hd_mesh"/>
        <childnode refid="1856" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1854">
        <label>HdEmbreeMesh</label>
        <link refid="class_hd_embree_mesh"/>
        <childnode refid="1855" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1859">
        <label>HdRprim</label>
        <link refid="class_hd_rprim"/>
        <childnode refid="1860" relation="usage">
          <edgelabel>_renderTag</edgelabel>
        </childnode>
        <childnode refid="1861" relation="usage">
          <edgelabel>_authoredReprSelector</edgelabel>
        </childnode>
      </node>
      <node id="1858">
        <label>HdMesh</label>
        <link refid="class_hd_mesh"/>
        <childnode refid="1859" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1860">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="1857">
        <label>HdEmbreeMesh</label>
        <link refid="class_hd_embree_mesh"/>
        <childnode refid="1858" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1861">
        <label>HdReprSelector</label>
        <link refid="class_hd_repr_selector"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdEmbree/mesh.h" line="65" column="1" bodyfile="pxr/imaging/hdEmbree/mesh.h" bodystart="65" bodyend="261"/>
    <listofallmembers>
      <member refid="class_hd_embree_mesh_1ab61e0f7bd38b1db4b07e43c8c70eaf33" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_adjacency</name></member>
      <member refid="class_hd_embree_mesh_1a350742f105bba8ff179ba300356c2760" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_adjacencyValid</name></member>
      <member refid="class_hd_rprim_1af99cc7d4b20df2fd31786a21ebe68331" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_authoredReprSelector</name></member>
      <member refid="class_hd_embree_mesh_1a998ad72af83f440ed7930b7660ffc826" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_computedNormals</name></member>
      <member refid="class_hd_embree_mesh_1ad45061cb8cb06a2342812bb4d7f9e9e1" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_CreateEmbreeSubdivMesh</name></member>
      <member refid="class_hd_embree_mesh_1ad1de274bf4e1c3bd59e597cde5be1c62" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_CreateEmbreeTriangleMesh</name></member>
      <member refid="class_hd_embree_mesh_1a9463848a8d41f687cf4c602a25774464" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_CreatePrimvarSampler</name></member>
      <member refid="class_hd_embree_mesh_1a0d10aa0ce3116bd56034c5e4cbcb3c5b" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_cullStyle</name></member>
      <member refid="class_hd_embree_mesh_1ad23ea0a4c8ca7a6f5459d5aa75a4b662" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_doubleSided</name></member>
      <member refid="class_hd_embree_mesh_1a0ce1e4aec56d498927b027932b913a04" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_embreeBufferAllocator</name></member>
      <member refid="class_hd_embree_mesh_1af75f0b6986c8df8db014f4738a5683cc" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_EmbreeCullFaces</name></member>
      <member refid="class_hd_embree_mesh_1aadc911d56aafcefbace2d2ea64c7a2ef" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_geometry</name></member>
      <member refid="class_hd_embree_mesh_1a2bc830a943e7ac75f6bc65d1ea3b7892" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_GetInstanceContext</name></member>
      <member refid="class_hd_embree_mesh_1a77b3e79e45a3b097b3e765e9bad08da6" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_GetPrototypeContext</name></member>
      <member refid="class_hd_rprim_1a7536f2dc14a09b5e59047a845435d895" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_GetRepr</name></member>
      <member refid="class_hd_mesh_1acc46514b81355d00a235ae69612ff3f8" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_GetReprDesc</name></member>
      <member refid="class_hd_embree_mesh_1a77b739e190ba086a85ea51671e984682" prot="protected" virt="virtual"><scope>HdEmbreeMesh</scope><name>_InitRepr</name></member>
      <member refid="class_hd_mesh_1ad6d2f16f0664962d2a9697d6b1807cf8" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_MeshReprConfig</name></member>
      <member refid="class_hd_embree_mesh_1a93bff3bf526f71f5d9ae795a2bf62f57" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_normalsValid</name></member>
      <member refid="class_hd_embree_mesh_1a10f9d1cb17f129704b99abe3431c061e" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_points</name></member>
      <member refid="class_hd_embree_mesh_1adb775183139e1e12d3c56d956020679f" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_PopulateRtMesh</name></member>
      <member refid="class_hd_embree_mesh_1a6b04647c9e9ac8ffe43c1cf256f84f17" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_primvarSourceMap</name></member>
      <member refid="class_hd_embree_mesh_1afe1f320d311e9bdad2013aec4d2af6bd" prot="protected" virt="virtual"><scope>HdEmbreeMesh</scope><name>_PropagateDirtyBits</name></member>
      <member refid="class_hd_embree_mesh_1a5ec724661b161f1ff8fb6ec54f5f0351" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_refined</name></member>
      <member refid="class_hd_rprim_1ad83e4473062b97f26cf76c844bf7a3a1" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_renderTag</name></member>
      <member refid="class_hd_rprim_1a136710a8b140e2e6350f01f80f1d85a4" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_reprs</name></member>
      <member refid="class_hd_rprim_1aad438bd2af17cf2eafbfbd90cc2a2db1" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_ReprVector</name></member>
      <member refid="class_hd_embree_mesh_1a0988227a5f4b2d18b91b9fcdcb59590e" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_rtcInstanceGeometries</name></member>
      <member refid="class_hd_embree_mesh_1a0a0a9c233e83c34b04e2aebd94e5438d" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_rtcInstanceIds</name></member>
      <member refid="class_hd_embree_mesh_1a9edb23f833bafd2a974c27eb23e3651c" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_rtcMeshId</name></member>
      <member refid="class_hd_embree_mesh_1a6c8577d3fa44b557c7fb5dcab4e0ed47" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_rtcMeshScene</name></member>
      <member refid="class_hd_rprim_1ab47ac9b77df39ee8de77b10486ea24c5" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_sharedData</name></member>
      <member refid="class_hd_embree_mesh_1ac9318df34608fb5af2a4ac12a0eb611f" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_smoothNormals</name></member>
      <member refid="class_hd_embree_mesh_1a85b95435ab38ffd301d68ea906cf428c" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_topology</name></member>
      <member refid="class_hd_embree_mesh_1ae24531feed70a7863d5dfdb815e3be78" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_transform</name></member>
      <member refid="class_hd_embree_mesh_1a0c291225e00d9c86d011cc5a36111c14" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_trianglePrimitiveParams</name></member>
      <member refid="class_hd_embree_mesh_1a8cd555b6d2d431d5e3e1d3f75e5c3b4e" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_triangulatedIndices</name></member>
      <member refid="class_hd_embree_mesh_1ac3add0149b7df6ad611a46afeffc7784" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_UpdateComputedPrimvarSources</name></member>
      <member refid="class_hd_rprim_1a07b717bf883db5ca574acb6a17b0c192" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_UpdateInstancer</name></member>
      <member refid="class_hd_embree_mesh_1a1f3de2799f2be65d7ecd27c6ea145e6b" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_UpdatePrimvarSources</name></member>
      <member refid="class_hd_rprim_1a2a2640835d0c96bfa94425428ec00633" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>_UpdateVisibility</name></member>
      <member refid="class_hd_rprim_1ac363dc6fc79936a3e2147e4676b07472" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>CanSkipDirtyBitPropagationAndSync</name></member>
      <member refid="class_hd_mesh_1adacc042b89829aa332360a772d925d3b" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>ConfigureRepr</name></member>
      <member refid="class_hd_embree_mesh_1ab6be581d151f59624df35eebdb4f90f4" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>Finalize</name></member>
      <member refid="class_hd_mesh_1a9538b3d6f03d3ff12f61734caaa559a9" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>GetBuiltinPrimvarNames</name></member>
      <member refid="class_hd_mesh_1a963952eb300f82db0a7e9b491b283299" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetCullStyle</name></member>
      <member refid="class_hd_mesh_1a19272f8ea7e8b1e345bb9b8a7513dc0b" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetDisplayStyle</name></member>
      <member refid="class_hd_rprim_1acdeab568daeb62af72f3cf5f7359f216" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetDrawItems</name></member>
      <member refid="class_hd_rprim_1a606da02b739d7eb4d1b19fe04d985f2e" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetExtent</name></member>
      <member refid="class_hd_rprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetId</name></member>
      <member refid="class_hd_rprim_1a81f906afa368c0de559aba39fc57bff8" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetIndexedPrimvar</name></member>
      <member refid="class_hd_embree_mesh_1a5a06f66bb03f6494a9ba6f4ae01ca37e" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_rprim_1a7119f60143f27b3e561ffa04464c1ca7" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetInstancerId</name></member>
      <member refid="class_hd_rprim_1a8b6da4a9d65f37cc07b2647808093bbe" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetInstancerTransforms</name></member>
      <member refid="class_hd_rprim_1a8124f95bf477fa1aedd20bbb2dbf589e" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetMaterialId</name></member>
      <member refid="class_hd_mesh_1aecda8475e5a6c317284f20404891db23" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetMeshTopology</name></member>
      <member refid="class_hd_mesh_1a6c89cf314f569ee255a4a50c8d7b57c4" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetNormals</name></member>
      <member refid="class_hd_mesh_1a749b09c63040e8a4f7bfff82670c76a9" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetPoints</name></member>
      <member refid="class_hd_rprim_1ae37ae1625cd178d6d940eebcea42698f" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetPrimId</name></member>
      <member refid="class_hd_rprim_1a9065fe959f49db479d2e37e6daed9b2d" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetPrimvar</name></member>
      <member refid="class_hd_rprim_1a6d78d1d22dab6a2e814277c49f77d8da" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetPrimvarDescriptors</name></member>
      <member refid="class_hd_rprim_1ad69d62d157f59712c736b827eb212100" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetRenderTag</name></member>
      <member refid="class_hd_rprim_1ac759696985c687f4047ed065c999c3c1" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetRenderTag</name></member>
      <member refid="class_hd_rprim_1ae0a7b4f61b90ca488a28a7b075543612" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetReprSelector</name></member>
      <member refid="class_hd_mesh_1a703ec5862df1483b0fcb72832db4204a" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetShadingStyle</name></member>
      <member refid="class_hd_mesh_1a01475c67a75fabb15de2d08b317fba70" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>GetSubdivTags</name></member>
      <member refid="class_hd_mesh_1a6bec7096aa2c78aea762dce06dc86717" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>GetTopology</name></member>
      <member refid="class_hd_embree_mesh_1ace5083ca30d2c4bb6c854602807e72ee" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>HdEmbreeMesh</name></member>
      <member refid="class_hd_embree_mesh_1aa6727ba635f5a545f729338e3d94900f" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>HdEmbreeMesh</name></member>
      <member refid="class_hd_mesh_1a5f9767ffb3b3606a920d361e24b7bac1" prot="protected" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>HdMesh</name></member>
      <member refid="class_hd_rprim_1a3a4bcc257ba5af64bf9627291cc7ddb5" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>HdRprim</name></member>
      <member refid="class_hd_embree_mesh_1aee8308170af2d05e7f98b901469c3005" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>HF_MALLOC_TAG_NEW</name></member>
      <member refid="class_hd_rprim_1af62f2311f5580ddc32ecd571a0f559d4" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>InitRepr</name></member>
      <member refid="class_hd_rprim_1a894cef8181ed5adf7abc88616c3a8e94" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>IsDirty</name></member>
      <member refid="class_hd_mesh_1afcd0bc6b8619a8e33a3acd394f48df27" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>IsDoubleSided</name></member>
      <member refid="class_hd_rprim_1a638cd13b75c2dd9d1ccd84e9dd311d6f" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>IsVisible</name></member>
      <member refid="class_hd_embree_mesh_1a3fa3bc2e6067887c56f018ee6153182c" prot="private" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>operator=</name></member>
      <member refid="class_hd_rprim_1af80a9b6a6565e86769cf248698122958" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>PropagateRprimDirtyBits</name></member>
      <member refid="class_hd_rprim_1a9fc27f601b7bb56ab9f7c62f76bcb6fb" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>SetMaterialId</name></member>
      <member refid="class_hd_rprim_1a348af2854c0f8c81d848ed55795a1751" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>SetPrimId</name></member>
      <member refid="class_hd_embree_mesh_1a107d87885299e595bb0906b323392eb7" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>Sync</name></member>
      <member refid="class_hd_rprim_1af4ab6abf1e3c972387514dca88ebddce" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>UpdateRenderTag</name></member>
      <member refid="class_hd_rprim_1af70add9253213db0665940375da392a0" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>UpdateReprSelector</name></member>
      <member refid="class_hd_embree_mesh_1a36177ca275f645a6d6fbbcf943b38da1" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>~HdEmbreeMesh</name></member>
      <member refid="class_hd_mesh_1af6bb07dbd192dcc7646e172627b0bb07" prot="public" virt="non-virtual"><scope>HdEmbreeMesh</scope><name>~HdMesh</name></member>
      <member refid="class_hd_rprim_1a84054b7edae1ba797c1bd4f8b121001c" prot="public" virt="virtual"><scope>HdEmbreeMesh</scope><name>~HdRprim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
