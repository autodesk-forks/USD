<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_layer_stack_site" kind="class" language="C++" prot="public">
    <compoundname>PcpLayerStackSite</compoundname>
    <includes refid="pcp_2site_8h" local="no">site.h</includes>
    <innerclass refid="struct_pcp_layer_stack_site_1_1_hash" prot="public">PcpLayerStackSite::Hash</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pcp_layer_stack_site_1a7173a3eeb7a9e765f4f27e39d72acbae" prot="public" static="no" mutable="no">
        <type>PcpLayerStackRefPtr</type>
        <definition>PcpLayerStackRefPtr layerStack</definition>
        <argsstring></argsstring>
        <name>layerStack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="98" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_layer_stack_site_1a5c7d0fcc3e99fce68af2ad2d3d0b74c7" prot="public" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="99" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_layer_stack_site_1a9adfd0fa202a56cb2828e1db2e67d92c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpLayerStackSite</definition>
        <argsstring>()</argsstring>
        <name>PcpLayerStackSite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1ad3169c63e60e71406cd00d13833bfc36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpLayerStackSite</definition>
        <argsstring>(const PcpLayerStackRefPtr &amp;, const SdfPath &amp;path)</argsstring>
        <name>PcpLayerStackSite</name>
        <param>
          <type>const PcpLayerStackRefPtr &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1a2d3115c5a7bb35c609678b622e7131a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool operator==</definition>
        <argsstring>(const PcpLayerStackSite &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1a2dd2845414f7b519e356b868afaae0b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const PcpLayerStackSite &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="110" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1a020d212d13f93705053293e111f0ce76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool operator&lt;</definition>
        <argsstring>(const PcpLayerStackSite &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1a64bfdbf24868531badf0fe3596bc5d86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const PcpLayerStackSite &amp;rhs) const</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="117" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1ab027944330d2e99cb115184ae4d2237b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const PcpLayerStackSite &amp;rhs) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="121" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_layer_stack_site_1a886f0f28fac55dd76f53c65cc99dcd68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const PcpLayerStackSite &amp;rhs) const</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_pcp_layer_stack_site" kindref="compound">PcpLayerStackSite</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/site.h" line="125" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="125" bodyend="127"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A site specifies a path in a layer stack of scene description. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4744">
        <label>PcpLayerStackSite</label>
        <link refid="class_pcp_layer_stack_site"/>
        <childnode refid="4745" relation="usage">
          <edgelabel>path</edgelabel>
        </childnode>
      </node>
      <node id="4745">
        <label>SdfPath</label>
        <link refid="class_sdf_path"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/pcp/site.h" line="96" column="1" bodyfile="pxr/usd/pcp/site.h" bodystart="95" bodyend="134"/>
    <listofallmembers>
      <member refid="class_pcp_layer_stack_site_1a7173a3eeb7a9e765f4f27e39d72acbae" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>layerStack</name></member>
      <member refid="class_pcp_layer_stack_site_1a2dd2845414f7b519e356b868afaae0b2" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>operator!=</name></member>
      <member refid="class_pcp_layer_stack_site_1a020d212d13f93705053293e111f0ce76" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>operator&lt;</name></member>
      <member refid="class_pcp_layer_stack_site_1a64bfdbf24868531badf0fe3596bc5d86" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>operator&lt;=</name></member>
      <member refid="class_pcp_layer_stack_site_1a2d3115c5a7bb35c609678b622e7131a7" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>operator==</name></member>
      <member refid="class_pcp_layer_stack_site_1ab027944330d2e99cb115184ae4d2237b" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>operator&gt;</name></member>
      <member refid="class_pcp_layer_stack_site_1a886f0f28fac55dd76f53c65cc99dcd68" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>operator&gt;=</name></member>
      <member refid="class_pcp_layer_stack_site_1a5c7d0fcc3e99fce68af2ad2d3d0b74c7" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>path</name></member>
      <member refid="class_pcp_layer_stack_site_1a9adfd0fa202a56cb2828e1db2e67d92c" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>PcpLayerStackSite</name></member>
      <member refid="class_pcp_layer_stack_site_1ad3169c63e60e71406cd00d13833bfc36" prot="public" virt="non-virtual"><scope>PcpLayerStackSite</scope><name>PcpLayerStackSite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
