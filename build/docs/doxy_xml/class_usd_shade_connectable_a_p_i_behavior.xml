<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_shade_connectable_a_p_i_behavior" kind="class" language="C++" prot="public">
    <compoundname>UsdShadeConnectableAPIBehavior</compoundname>
    <includes refid="connectable_a_p_i_behavior_8h" local="no">connectableAPIBehavior.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649" prot="public" static="no" strong="no">
        <type></type>
        <name>ConnectableNodeTypes</name>
        <enumvalue id="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649aaa41c59488417b5e8ea6de5ee5d6c389" prot="public">
          <name>BasicNodes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649a5f0af9604ab3fde92d80d17e3a46e44a" prot="public">
          <name>DerivedContainerNodes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>An enum describing the types of connectable nodes which will govern what connectibility rule is invoked for these. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="55" column="1" bodyfile="pxr/usd/usdShade/connectableAPIBehavior.h" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_shade_connectable_a_p_i_behavior_1a3196ea8664dd44260dcdcfc67463b237" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _isContainer</definition>
        <argsstring></argsstring>
        <name>_isContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="156" column="1" bodyfile="pxr/usd/usdShade/connectableAPIBehavior.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_shade_connectable_a_p_i_behavior_1a2825113a59ad2289ae9df9c249c51fed" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _requiresEncapsulation</definition>
        <argsstring></argsstring>
        <name>_requiresEncapsulation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="157" column="1" bodyfile="pxr/usd/usdShade/connectableAPIBehavior.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1ac8c7868be412a8a9d5afd1a6a034b03c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDSHADE_API</type>
        <definition>USDSHADE_API UsdShadeConnectableAPIBehavior</definition>
        <argsstring>()</argsstring>
        <name>UsdShadeConnectableAPIBehavior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="63" column="1" bodyfile="pxr/usd/usdShade/connectableAPIBehavior.h" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1a94bde98967d0f147b33b32255fa07dfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>USDSHADE_API</type>
        <definition>USDSHADE_API UsdShadeConnectableAPIBehavior</definition>
        <argsstring>(const bool isContainer, const bool requiresEncapsulation)</argsstring>
        <name>UsdShadeConnectableAPIBehavior</name>
        <param>
          <type>const bool</type>
          <declname>isContainer</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>requiresEncapsulation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="67" column="1" bodyfile="pxr/usd/usdShade/connectableAPIBehavior.h" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1a1e31c7d30542033254078671edb3d882" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDSHADE_API</type>
        <definition>virtual USDSHADE_API ~UsdShadeConnectableAPIBehavior</definition>
        <argsstring>()</argsstring>
        <name>~UsdShadeConnectableAPIBehavior</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1ac9433faa4960ee3668c9370591ada93f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDSHADE_API bool</type>
        <definition>virtual USDSHADE_API bool CanConnectInputToSource</definition>
        <argsstring>(const UsdShadeInput &amp;, const UsdAttribute &amp;, std::string *reason) const</argsstring>
        <name>CanConnectInputToSource</name>
        <param>
          <type>const <ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        </param>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>The prim owning the input is guaranteed to be of the type this behavior was registered with. </para>
        </briefdescription>
        <detaileddescription>
<para>The function must be thread-safe.</para>
<para>It should return true if the connection is allowed, false otherwise. If the connection is prohibited and <computeroutput>reason</computeroutput> is non-NULL, it should be set to a user-facing description of the reason the connection is prohibited.</para>
<para>The base implementation checks that the input is defined; that the source attribute exists; and that the connectability metadata on the input allows a connection from the attribute <ndash/> see <ref refid="class_usd_shade_input_1afa9011143d42ee268e516231f94ba11d" kindref="member">UsdShadeInput::GetConnectability()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1ace591116803b93ae7956f13c1a07383c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDSHADE_API bool</type>
        <definition>virtual USDSHADE_API bool CanConnectOutputToSource</definition>
        <argsstring>(const UsdShadeOutput &amp;, const UsdAttribute &amp;, std::string *reason) const</argsstring>
        <name>CanConnectOutputToSource</name>
        <param>
          <type>const <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        </param>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
        </param>
        <briefdescription>
<para>The prim owning the output is guaranteed to be of the type this behavior was registered with. </para>
        </briefdescription>
        <detaileddescription>
<para>The function must be thread-safe.</para>
<para>It should return true if the connection is allowed, false otherwise. If the connection is prohibited and <computeroutput>reason</computeroutput> is non-NULL, it should be set to a user-facing description of the reason the connection is prohibited.</para>
<para>The base implementation returns false. Outputs of most prim types will be defined by the underlying node definition (see <ref refid="class_usd_shade_node_def_a_p_i" kindref="compound">UsdShadeNodeDefAPI</ref>), not a connection. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1a4ad93ea73275d863d5c1af3aec846a81" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>USDSHADE_API bool</type>
        <definition>virtual USDSHADE_API bool IsContainer</definition>
        <argsstring>() const final</argsstring>
        <name>IsContainer</name>
        <briefdescription>
<para>The function must be thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>It should return true if the associated prim type is considered a &quot;container&quot; for connected nodes. Returns the value set for _isContainer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1ac46a316ecd337efdc75cfeca1d874747" prot="public" static="no" const="yes" explicit="no" inline="no" final="yes" virt="virtual">
        <type>USDSHADE_API bool</type>
        <definition>virtual USDSHADE_API bool RequiresEncapsulation</definition>
        <argsstring>() const final</argsstring>
        <name>RequiresEncapsulation</name>
        <briefdescription>
<para>The function must be thread-safe. </para>
        </briefdescription>
        <detaileddescription>
<para>Determines if the behavior should respect container encapsulation rules (<ref refid="usd_shade_page_front_1UsdShadeConnectability" kindref="member">Connectability Rules for UsdShade Types</ref>), when evaluating CanConnectInputToSource or CanConnectOutputToSource. This should return true if the container encapsulation rules need to be respected, false otherwise. Returns the value set for _requiresEncapsulation.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_shade_connectable_a_p_i_behavior_1a4ad93ea73275d863d5c1af3aec846a81" kindref="member">IsContainer()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="134" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1a9a826198987b1fdec19bb43e2c7d4375" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSHADE_API bool</type>
        <definition>USDSHADE_API bool _CanConnectInputToSource</definition>
        <argsstring>(const UsdShadeInput &amp;, const UsdAttribute &amp;, std::string *reason, ConnectableNodeTypes nodeType=ConnectableNodeTypes::BasicNodes) const</argsstring>
        <name>_CanConnectInputToSource</name>
        <param>
          <type>const <ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        </param>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
        </param>
        <param>
          <type><ref refid="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649" kindref="member">ConnectableNodeTypes</ref></type>
          <declname>nodeType</declname>
          <defval>ConnectableNodeTypes::BasicNodes</defval>
        </param>
        <briefdescription>
<para>Helper function to separate and share special connectivity logic for specialized, NodeGraph-derived nodes, like Material (and other in other domains) that allow their inputs to be connected to an output of a source that they directly contain/encapsulate. </para>
        </briefdescription>
        <detaileddescription>
<para>The default behavior is for Shader Nodes or NodeGraphs which allow their input connections to output of a sibling source, both encapsulated by the same container node. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_shade_connectable_a_p_i_behavior_1a3eb223bef4e6ff64aafeaf7007fac7ca" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSHADE_API bool</type>
        <definition>USDSHADE_API bool _CanConnectOutputToSource</definition>
        <argsstring>(const UsdShadeOutput &amp;, const UsdAttribute &amp;, std::string *reason, ConnectableNodeTypes nodeType=ConnectableNodeTypes::BasicNodes) const</argsstring>
        <name>_CanConnectOutputToSource</name>
        <param>
          <type>const <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> &amp;</type>
        </param>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
        </param>
        <param>
          <type><ref refid="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649" kindref="member">ConnectableNodeTypes</ref></type>
          <declname>nodeType</declname>
          <defval>ConnectableNodeTypes::BasicNodes</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="151" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_usd_shade_connectable_a_p_i_behavior" kindref="compound">UsdShadeConnectableAPIBehavior</ref> defines the compatibilty and behavior UsdShadeConnectableAPIof when applied to a particular prim type. </para>
    </briefdescription>
    <detaileddescription>
<para>This enables schema libraries to enable <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> for their prim types and define its behavior. </para>
    </detaileddescription>
    <location file="pxr/usd/usdShade/connectableAPIBehavior.h" line="49" column="1" bodyfile="pxr/usd/usdShade/connectableAPIBehavior.h" bodystart="48" bodyend="158"/>
    <listofallmembers>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a9a826198987b1fdec19bb43e2c7d4375" prot="protected" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>_CanConnectInputToSource</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a3eb223bef4e6ff64aafeaf7007fac7ca" prot="protected" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>_CanConnectOutputToSource</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a3196ea8664dd44260dcdcfc67463b237" prot="private" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>_isContainer</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a2825113a59ad2289ae9df9c249c51fed" prot="private" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>_requiresEncapsulation</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649aaa41c59488417b5e8ea6de5ee5d6c389" prot="public" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>BasicNodes</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1ac9433faa4960ee3668c9370591ada93f" prot="public" virt="virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>CanConnectInputToSource</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1ace591116803b93ae7956f13c1a07383c" prot="public" virt="virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>CanConnectOutputToSource</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649" prot="public" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>ConnectableNodeTypes</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a256a801b7c93fc6ef35194d164ebd649a5f0af9604ab3fde92d80d17e3a46e44a" prot="public" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>DerivedContainerNodes</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a4ad93ea73275d863d5c1af3aec846a81" prot="public" virt="virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>IsContainer</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1ac46a316ecd337efdc75cfeca1d874747" prot="public" virt="virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>RequiresEncapsulation</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1ac8c7868be412a8a9d5afd1a6a034b03c" prot="public" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>UsdShadeConnectableAPIBehavior</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a94bde98967d0f147b33b32255fa07dfd" prot="public" virt="non-virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>UsdShadeConnectableAPIBehavior</name></member>
      <member refid="class_usd_shade_connectable_a_p_i_behavior_1a1e31c7d30542033254078671edb3d882" prot="public" virt="virtual"><scope>UsdShadeConnectableAPIBehavior</scope><name>~UsdShadeConnectableAPIBehavior</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
