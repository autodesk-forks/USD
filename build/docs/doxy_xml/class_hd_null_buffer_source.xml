<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_null_buffer_source" kind="class" language="C++" prot="public">
    <compoundname>HdNullBufferSource</compoundname>
    <basecompoundref refid="class_hd_buffer_source" prot="public" virt="non-virtual">HdBufferSource</basecompoundref>
    <derivedcompoundref refid="class_hd_st_ext_comp_cpu_computation" prot="public" virt="non-virtual">HdStExtCompCpuComputation</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_ext_comp_gpu_primvar_buffer_source" prot="public" virt="non-virtual">HdStExtCompGpuPrimvarBufferSource</derivedcompoundref>
    <includes refid="buffer_source_8h" local="no">bufferSource.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_null_buffer_source_1a0c0702fbc703090d28d34aa9fc210f63" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>virtual HD_API TfToken const&amp; GetName</definition>
        <argsstring>() const override</argsstring>
        <name>GetName</name>
        <reimplements refid="class_hd_buffer_source_1a97a114d26c6f6cd975cd1b6814b8d03e">GetName</reimplements>
        <reimplementedby refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4863768db52d4dd224e7414485b4e05e">GetName</reimplementedby>
        <reimplementedby refid="class_hd_st_ext_comp_cpu_computation_1a004da153eb975796ee16de8f57abb70c">GetName</reimplementedby>
        <briefdescription>
<para>Return the name of this buffer source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferSource.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_null_buffer_source_1ae9d406408fc27fe3ced169e41b5c1e34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API void const  *</type>
        <definition>virtual HD_API void const* GetData</definition>
        <argsstring>() const override</argsstring>
        <name>GetData</name>
        <reimplements refid="class_hd_buffer_source_1a308bd3c4ecd2721502e90069f6025587">GetData</reimplements>
        <briefdescription>
<para>Following interfaces will be called after Resolve. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the raw pointer to the underlying data. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferSource.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_null_buffer_source_1ae13441343bea925fd46537fd58a5aef8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API size_t</type>
        <definition>virtual HD_API size_t ComputeHash</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeHash</name>
        <reimplements refid="class_hd_buffer_source_1a97126c48679ed74509d0bb54fc2e47ae">ComputeHash</reimplements>
        <reimplementedby refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a61abd78afd3c71f52d23f6285735feaa">ComputeHash</reimplementedby>
        <briefdescription>
<para>Computes and returns a hash value for the underlying data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferSource.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_null_buffer_source_1aca2f47025f9b58504ed51ec9c2b913d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API size_t</type>
        <definition>virtual HD_API size_t GetNumElements</definition>
        <argsstring>() const override</argsstring>
        <name>GetNumElements</name>
        <reimplements refid="class_hd_buffer_source_1a23d40ffcfd073db47f9fb878fb3f67aa">GetNumElements</reimplements>
        <reimplementedby refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a03003d1fbd49a355dbeb95abe39fd889">GetNumElements</reimplementedby>
        <reimplementedby refid="class_hd_st_ext_comp_cpu_computation_1a749f69362c62d5a069d921f4d5987ac8">GetNumElements</reimplementedby>
        <briefdescription>
<para>Returns the number of elements (e.g. </para>
        </briefdescription>
        <detaileddescription>
<para>VtVec3dArray().GetLength()) from the source array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferSource.h" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_null_buffer_source_1a5ac174b7f9823eebc156c8820389598d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref></type>
        <definition>virtual HD_API HdTupleType GetTupleType</definition>
        <argsstring>() const override</argsstring>
        <name>GetTupleType</name>
        <reimplements refid="class_hd_buffer_source_1a4acce328dc83a1d73a1a62e8e2a2afc3">GetTupleType</reimplements>
        <reimplementedby refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a34ea05109a9ba9e8aafc804dcbd7e16e">GetTupleType</reimplementedby>
        <briefdescription>
<para>Returns the data type and count (array size) for this buffer source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferSource.h" line="249" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_null_buffer_source_1a49ccfc0b7d908c1a3e6bc28d23dfe7f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void GetBufferSpecs</definition>
        <argsstring>(HdBufferSpecVector *specs) const override</argsstring>
        <name>GetBufferSpecs</name>
        <reimplements refid="class_hd_buffer_source_1a8a168db3ae7e1b0a8e17ed98f40f9f4e">GetBufferSpecs</reimplements>
        <reimplementedby refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a6956e540dc762faecff2337312d0cae0">GetBufferSpecs</reimplementedby>
        <param>
          <type>HdBufferSpecVector *</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
<para>Add the buffer spec for this buffer source into given bufferspec vector. </para>
        </briefdescription>
        <detaileddescription>
<para>note: buffer specs has to be determined before the source resolution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/bufferSource.h" line="251" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A abstract base class for pure cpu computation. </para>
    </briefdescription>
    <detaileddescription>
<para>the result won&apos;t be scheduled for GPU transfer. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2302">
        <label>HdNullBufferSource</label>
        <link refid="class_hd_null_buffer_source"/>
        <childnode refid="2303" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2303">
        <label>HdBufferSource</label>
        <link refid="class_hd_buffer_source"/>
      </node>
      <node id="2304">
        <label>HdStExtCompCpuComputation</label>
        <link refid="class_hd_st_ext_comp_cpu_computation"/>
        <childnode refid="2302" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2305">
        <label>HdStExtCompGpuPrimvarBufferSource</label>
        <link refid="class_hd_st_ext_comp_gpu_primvar_buffer_source"/>
        <childnode refid="2302" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2306">
        <label>HdNullBufferSource</label>
        <link refid="class_hd_null_buffer_source"/>
        <childnode refid="2307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2307">
        <label>HdBufferSource</label>
        <link refid="class_hd_buffer_source"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/bufferSource.h" line="238" column="1" bodyfile="pxr/imaging/hd/bufferSource.h" bodystart="238" bodyend="252"/>
    <listofallmembers>
      <member refid="class_hd_buffer_source_1a0f0022a4bdf82e55a38f7aeae7156591" prot="protected" virt="pure-virtual"><scope>HdNullBufferSource</scope><name>_CheckValid</name></member>
      <member refid="class_hd_buffer_source_1aa9d9f62a29664a6353762c968c477c9a" prot="protected" virt="non-virtual"><scope>HdNullBufferSource</scope><name>_SetResolved</name></member>
      <member refid="class_hd_buffer_source_1aa93dec2f4f899e2edf89b0b20b9b0408" prot="protected" virt="non-virtual"><scope>HdNullBufferSource</scope><name>_SetResolveError</name></member>
      <member refid="class_hd_buffer_source_1a95fa005a2674cf5ab757a2d6baa1beaa" prot="protected" virt="non-virtual"><scope>HdNullBufferSource</scope><name>_TryLock</name></member>
      <member refid="class_hd_null_buffer_source_1ae13441343bea925fd46537fd58a5aef8" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>ComputeHash</name></member>
      <member refid="class_hd_null_buffer_source_1a49ccfc0b7d908c1a3e6bc28d23dfe7f0" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_buffer_source_1aa319054081d8cc83ea80e3b95a18e37b" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetChainedBuffers</name></member>
      <member refid="class_hd_null_buffer_source_1ae9d406408fc27fe3ced169e41b5c1e34" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetData</name></member>
      <member refid="class_hd_null_buffer_source_1a0c0702fbc703090d28d34aa9fc210f63" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetName</name></member>
      <member refid="class_hd_null_buffer_source_1aca2f47025f9b58504ed51ec9c2b913d1" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetNumElements</name></member>
      <member refid="class_hd_buffer_source_1a59b78074e9fcc70237524881864f8ad7" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetPreChainedBuffer</name></member>
      <member refid="class_hd_null_buffer_source_1a5ac174b7f9823eebc156c8820389598d" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>GetTupleType</name></member>
      <member refid="class_hd_buffer_source_1a6882660a1cb15d85f6dfece0d1e4e25d" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>HasChainedBuffer</name></member>
      <member refid="class_hd_buffer_source_1a600437657ebeb5a72da71300032e5532" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>HasPreChainedBuffer</name></member>
      <member refid="class_hd_buffer_source_1ae154f9dca5a409c46b8bdaca56b7d58f" prot="public" virt="non-virtual"><scope>HdNullBufferSource</scope><name>HasResolveError</name></member>
      <member refid="class_hd_buffer_source_1aee360bcdc56a9390c0da4dcbd86d6936" prot="public" virt="non-virtual"><scope>HdNullBufferSource</scope><name>HdBufferSource</name></member>
      <member refid="class_hd_buffer_source_1a2d798b9f36dd4187831ce00aaf720dd0" prot="public" virt="non-virtual"><scope>HdNullBufferSource</scope><name>IsResolved</name></member>
      <member refid="class_hd_buffer_source_1a55323f058382f1585d1e9cb3af59d87f" prot="public" virt="non-virtual"><scope>HdNullBufferSource</scope><name>IsValid</name></member>
      <member refid="class_hd_buffer_source_1a31cd8967840ac419b37e8059635896e7" prot="public" virt="pure-virtual"><scope>HdNullBufferSource</scope><name>Resolve</name></member>
      <member refid="class_hd_buffer_source_1a48f26b3afaa40d27e98c6dd91e410df0" prot="public" virt="virtual"><scope>HdNullBufferSource</scope><name>~HdBufferSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
