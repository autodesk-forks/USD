<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_unit_test_delegate" kind="class" language="C++" prot="public">
    <compoundname>HdUnitTestDelegate</compoundname>
    <basecompoundref refid="class_hd_scene_delegate" prot="public" virt="non-virtual">HdSceneDelegate</basecompoundref>
    <includes refid="unit_test_delegate_8h" local="no">unitTestDelegate.h</includes>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___camera" prot="private">HdUnitTestDelegate::_Camera</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___curves" prot="private">HdUnitTestDelegate::_Curves</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___instancer" prot="private">HdUnitTestDelegate::_Instancer</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___light" prot="private">HdUnitTestDelegate::_Light</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___mesh" prot="private">HdUnitTestDelegate::_Mesh</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___points" prot="private">HdUnitTestDelegate::_Points</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___primvar" prot="private">HdUnitTestDelegate::_Primvar</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___render_buffer" prot="private">HdUnitTestDelegate::_RenderBuffer</innerclass>
    <innerclass refid="struct_hd_unit_test_delegate_1_1___task" prot="private">HdUnitTestDelegate::_Task</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_unit_test_delegate_1a3ee858acb133d2ec29100ed1b788d7be" prot="private" static="no">
        <type>std::vector&lt; _Primvar &gt;</type>
        <definition>using _Primvars =  std::vector&lt;_Primvar&gt;</definition>
        <argsstring></argsstring>
        <name>_Primvars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="530" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="530" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_unit_test_delegate_1a9467ec9ed89e817e4b0591c727c35fc0" prot="private" static="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &gt;</type>
        <definition>typedef std::map&lt;SdfPath, SdfPath&gt; SdfPathMap</definition>
        <argsstring></argsstring>
        <name>SdfPathMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="568" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="568" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1af00732a8be491edcf93fd7c760b7fcba" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Mesh &gt;</type>
        <definition>std::map&lt;SdfPath, _Mesh&gt; _meshes</definition>
        <argsstring></argsstring>
        <name>_meshes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="556" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1aac6e490011b3e7bb74500f6427b51b48" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Curves &gt;</type>
        <definition>std::map&lt;SdfPath, _Curves&gt; _curves</definition>
        <argsstring></argsstring>
        <name>_curves</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="557" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1abc02da6f5c733a16a4e042030d217774" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Points &gt;</type>
        <definition>std::map&lt;SdfPath, _Points&gt; _points</definition>
        <argsstring></argsstring>
        <name>_points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="558" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="558" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a98e1b1ca6d660ac53339362dd2884d8d" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Instancer &gt;</type>
        <definition>std::map&lt;SdfPath, _Instancer&gt; _instancers</definition>
        <argsstring></argsstring>
        <name>_instancers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="559" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a9eacceb02a306c587cabdc2cb81b0c4e" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Primvars &gt;</type>
        <definition>std::map&lt;SdfPath, _Primvars&gt; _primvars</definition>
        <argsstring></argsstring>
        <name>_primvars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="560" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1aaabb9b5b5556f1e4af71376d917d4c93" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, <ref refid="class_vt_value" kindref="compound">VtValue</ref> &gt;</type>
        <definition>std::map&lt;SdfPath, VtValue&gt; _materials</definition>
        <argsstring></argsstring>
        <name>_materials</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="561" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1ab8172e95b80073747710215388e07f71" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Camera &gt;</type>
        <definition>std::map&lt;SdfPath, _Camera&gt; _cameras</definition>
        <argsstring></argsstring>
        <name>_cameras</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="562" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1ad06405ca96f15564a453a49d56ec47bb" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _RenderBuffer &gt;</type>
        <definition>std::map&lt;SdfPath, _RenderBuffer&gt; _renderBuffers</definition>
        <argsstring></argsstring>
        <name>_renderBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="563" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1ada6af0754b0f787b3ac4b9145f859f50" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Light &gt;</type>
        <definition>std::map&lt;SdfPath, _Light&gt; _lights</definition>
        <argsstring></argsstring>
        <name>_lights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="564" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a355261ece1e76e41781dc96234c4a018" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _Task &gt;</type>
        <definition>std::map&lt;SdfPath, _Task&gt; _tasks</definition>
        <argsstring></argsstring>
        <name>_tasks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="565" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1aa45e5511aa8d5f3c08edc0df520e66e5" prot="private" static="no" mutable="no">
        <type>TfHashSet&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, SdfPath::Hash &gt;</type>
        <definition>TfHashSet&lt;SdfPath, SdfPath::Hash&gt; _hiddenRprims</definition>
        <argsstring></argsstring>
        <name>_hiddenRprims</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="566" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1aa1ec788782303d8567f8e78b42498bae" prot="private" static="no" mutable="no">
        <type>SdfPathMap</type>
        <definition>SdfPathMap _materialBindings</definition>
        <argsstring></argsstring>
        <name>_materialBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="569" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a771a21ef53a04a230b4b5d767778de58" prot="private" static="no" mutable="no">
        <type>SdfPathMap</type>
        <definition>SdfPathMap _instancerBindings</definition>
        <argsstring></argsstring>
        <name>_instancerBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="570" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a36ee27283b584d279d65c6458f55dbb3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _hasInstancePrimvars</definition>
        <argsstring></argsstring>
        <name>_hasInstancePrimvars</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="572" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="572" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a53e70e5086b3c7786118fb7fbff88e8a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _refineLevel</definition>
        <argsstring></argsstring>
        <name>_refineLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="573" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a816e722e12320f84cb218cdcb98d1b16" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _visibility</definition>
        <argsstring></argsstring>
        <name>_visibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="574" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a24597f8e6a4c645100b5ff2548eca037" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, int &gt;</type>
        <definition>std::map&lt;SdfPath, int&gt; _refineLevels</definition>
        <argsstring></argsstring>
        <name>_refineLevels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="575" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_unit_test_delegate_1a8ac474be5aeba9ab0c21a679bacd070c" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, bool &gt;</type>
        <definition>std::map&lt;SdfPath, bool&gt; _visibilities</definition>
        <argsstring></argsstring>
        <name>_visibilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="576" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a3a570e0f29ee0b87592b4878f976bea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdUnitTestDelegate</definition>
        <argsstring>(HdRenderIndex *parentIndex, SdfPath const &amp;delegateID)</argsstring>
        <name>HdUnitTestDelegate</name>
        <param>
          <type><ref refid="class_hd_render_index" kindref="compound">HdRenderIndex</ref> *</type>
          <declname>parentIndex</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>delegateID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1af52ffb6c299df0aafff014eef3bae36a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SetUseInstancePrimvars</definition>
        <argsstring>(bool v)</argsstring>
        <name>SetUseInstancePrimvars</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="59" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a7b9e082d6ef60ad66dd150cafa343d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetRefineLevel</definition>
        <argsstring>(int level)</argsstring>
        <name>SetRefineLevel</name>
        <param>
          <type>int</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a77defdd43fa27cb12dcb075d954e05f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetVisibility</definition>
        <argsstring>(bool vis)</argsstring>
        <name>SetVisibility</name>
        <param>
          <type>bool</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a7f78b1b7063c4267bf09c1214af92701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddMesh</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>AddMesh</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a13120ff180c006064576f03136c92843" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddMesh</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, VtVec3fArray const &amp;points, VtIntArray const &amp;numVerts, VtIntArray const &amp;verts, bool guide=false, SdfPath const &amp;instancerId=SdfPath(), TfToken const &amp;scheme=PxOsdOpenSubdivTokens-&gt;catmullClark, TfToken const &amp;orientation=HdTokens-&gt;rightHanded, bool doubleSided=false)</argsstring>
        <name>AddMesh</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>guide</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
          <defval>PxOsdOpenSubdivTokens-&gt;catmullClark</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
          <defval>HdTokens-&gt;rightHanded</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aafb3a3e07dd1d7da98d793da9e09e2dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddMesh</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, VtVec3fArray const &amp;points, VtIntArray const &amp;numVerts, VtIntArray const &amp;verts, VtIntArray const &amp;holes, PxOsdSubdivTags const &amp;subdivTags, VtValue const &amp;color, HdInterpolation colorInterpolation, VtValue const &amp;opacity, HdInterpolation opacityInterpolation, bool guide=false, SdfPath const &amp;instancerId=SdfPath(), TfToken const &amp;scheme=PxOsdOpenSubdivTokens-&gt;catmullClark, TfToken const &amp;orientation=HdTokens-&gt;rightHanded, bool doubleSided=false)</argsstring>
        <name>AddMesh</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>holes</declname>
        </param>
        <param>
          <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const &amp;</type>
          <declname>subdivTags</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>opacity</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>opacityInterpolation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>guide</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
          <defval>PxOsdOpenSubdivTokens-&gt;catmullClark</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
          <defval>HdTokens-&gt;rightHanded</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ab459db20da937ee8ca25b52baa7f03df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddMesh</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, VtVec3fArray const &amp;points, VtIntArray const &amp;numVerts, VtIntArray const &amp;verts, VtIntArray const &amp;holes, PxOsdSubdivTags const &amp;subdivTags, VtValue const &amp;color, VtIntArray const &amp;colorIndices, HdInterpolation colorInterpolation, VtValue const &amp;opacity, VtIntArray const &amp;opacityIndices, HdInterpolation opacityInterpolation, bool guide=false, SdfPath const &amp;instancerId=SdfPath(), TfToken const &amp;scheme=PxOsdOpenSubdivTokens-&gt;catmullClark, TfToken const &amp;orientation=HdTokens-&gt;rightHanded, bool doubleSided=false)</argsstring>
        <name>AddMesh</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>numVerts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>holes</declname>
        </param>
        <param>
          <type><ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref> const &amp;</type>
          <declname>subdivTags</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>colorIndices</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>opacity</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>opacityIndices</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>opacityInterpolation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>guide</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
          <defval>PxOsdOpenSubdivTokens-&gt;catmullClark</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>orientation</declname>
          <defval>HdTokens-&gt;rightHanded</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a01d24d54cc3f971961e573c2530a8e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetMeshCullStyle</definition>
        <argsstring>(SdfPath const &amp;id, HdCullStyle const &amp;cullstyle)</argsstring>
        <name>SetMeshCullStyle</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>HdCullStyle const &amp;</type>
          <declname>cullstyle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ae8c20a8437820584520f250dc27a3026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddCube</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, bool guide=false, SdfPath const &amp;instancerId=SdfPath(), TfToken const &amp;scheme=PxOsdOpenSubdivTokens-&gt;catmullClark)</argsstring>
        <name>AddCube</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>guide</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>scheme</declname>
          <defval>PxOsdOpenSubdivTokens-&gt;catmullClark</defval>
        </param>
        <briefdescription>
<para>Add a cube. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1acc33320fa28f8899706d81a183d20a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddGrid</definition>
        <argsstring>(SdfPath const &amp;id, int x, int y, GfMatrix4f const &amp;transform, bool rightHanded=true, bool doubleSided=false, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddGrid</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rightHanded</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a grid with division x*y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a6a278a9221482b60f530923338917d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddGridWithFaceColor</definition>
        <argsstring>(SdfPath const &amp;id, int x, int y, GfMatrix4f const &amp;transform, bool rightHanded=true, bool doubleSided=false, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddGridWithFaceColor</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rightHanded</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a grid with division x*y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a86e4a0f2fbaf74569e9bd203be13c253" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddGridWithVertexColor</definition>
        <argsstring>(SdfPath const &amp;id, int x, int y, GfMatrix4f const &amp;transform, bool rightHanded=true, bool doubleSided=false, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddGridWithVertexColor</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rightHanded</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a grid with division x*y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ad4d8063d1ade70440f16a37166d6f47b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddGridWithFaceVaryingColor</definition>
        <argsstring>(SdfPath const &amp;id, int x, int y, GfMatrix4f const &amp;transform, bool rightHanded=true, bool doubleSided=false, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddGridWithFaceVaryingColor</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rightHanded</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a grid with division x*y. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a1f1345c325df821694d54becc4acec34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddGridWithCustomColor</definition>
        <argsstring>(SdfPath const &amp;id, int nx, int ny, GfMatrix4f const &amp;transform, VtValue const &amp;color, HdInterpolation colorInterpolation, bool rightHanded=true, bool doubleSided=false, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddGridWithCustomColor</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ny</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterpolation</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rightHanded</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>doubleSided</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a8f172915c36a69a68264d057b894071b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddPolygons</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, HdInterpolation colorInterp, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddPolygons</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterp</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a triangle, quad and pentagon. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a988a1fe9f6d42cefbc2aa8762e401b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddFaceVaryingPolygons</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddFaceVaryingPolygons</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a triangle, quad and pentagon with face-varying displayColor and displayOpacity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ac768fb8c4566c48e41364e1c6738e3a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddSubdiv</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, SdfPath const &amp;insatancerId=SdfPath())</argsstring>
        <name>AddSubdiv</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>insatancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a subdiv with various tags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1abac7e197ed1e4c3c0a2093690f5f3678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddBasisCurves</definition>
        <argsstring>(SdfPath const &amp;id, VtVec3fArray const &amp;points, VtIntArray const &amp;curveVertexCounts, VtIntArray const &amp;curveIndices, VtVec3fArray const &amp;normals, TfToken const &amp;type, TfToken const &amp;basis, VtValue const &amp;color, HdInterpolation colorInterpolation, VtValue const &amp;opacity, HdInterpolation opacityInterpolation, VtValue const &amp;width, HdInterpolation widthInterpolation, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddBasisCurves</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>curveVertexCounts</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>curveIndices</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>basis</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>opacity</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>opacityInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>widthInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1af5cb504f5599ab5de2d5947e0c32add5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddCurves</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;type, TfToken const &amp;basis, GfMatrix4f const &amp;transform, HdInterpolation colorInterp=HdInterpolationConstant, HdInterpolation widthInterp=HdInterpolationConstant, bool authoredNormals=false, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddCurves</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>basis</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterp</declname>
          <defval>HdInterpolationConstant</defval>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>widthInterp</declname>
          <defval>HdInterpolationConstant</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>authoredNormals</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a basis curves prim containing two curves. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a43f92c1e604c6965b421563a50169646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetCurveWrapMode</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;wrap)</argsstring>
        <name>SetCurveWrapMode</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>wrap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a7479f043a672e827162c7c8b943108d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddPoints</definition>
        <argsstring>(SdfPath const &amp;id, VtVec3fArray const &amp;points, VtValue const &amp;color, HdInterpolation colorInterpolation, VtValue const &amp;opacity, HdInterpolation opacityInterpolation, VtValue const &amp;width, HdInterpolation widthInterpolation, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddPoints</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>opacity</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>opacityInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>width</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>widthInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="216" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aa4726ad7639c9c702e01430beb32691c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddPoints</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;transform, HdInterpolation colorInterp=HdInterpolationConstant, HdInterpolation widthInterp=HdInterpolationConstant, SdfPath const &amp;instancerId=SdfPath())</argsstring>
        <name>AddPoints</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>transform</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>colorInterp</declname>
          <defval>HdInterpolationConstant</defval>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>widthInterp</declname>
          <defval>HdInterpolationConstant</defval>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <briefdescription>
<para>Add a points prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a5a88c49eaae7c3d8f1d71693137c9132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddInstancer</definition>
        <argsstring>(SdfPath const &amp;id, SdfPath const &amp;parentId=SdfPath(), GfMatrix4f const &amp;rootTransform=GfMatrix4f(1))</argsstring>
        <name>AddInstancer</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>parentId</declname>
          <defval><ref refid="class_sdf_path" kindref="compound">SdfPath</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>rootTransform</declname>
          <defval><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref>(1)</defval>
        </param>
        <briefdescription>
<para>Instancer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a521b868e383c25cfd3f397e0f6a56c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetInstancerProperties</definition>
        <argsstring>(SdfPath const &amp;id, VtIntArray const &amp;prototypeIndex, VtVec3fArray const &amp;scale, VtVec4fArray const &amp;rotate, VtVec3fArray const &amp;translate)</argsstring>
        <name>SetInstancerProperties</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>prototypeIndex</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>VtVec4fArray const &amp;</type>
          <declname>rotate</declname>
        </param>
        <param>
          <type>VtVec3fArray const &amp;</type>
          <declname>translate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a917b5f33665a03cf709c3ad4b5fb4208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateInstancer</definition>
        <argsstring>(SdfPath const &amp;rprimId, SdfPath const &amp;instancerId)</argsstring>
        <name>UpdateInstancer</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>rprimId</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1af0493edf49696cc7b0413c4102a9d282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddPrimvar</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;name, VtValue const &amp;value, HdInterpolation const &amp;interp, TfToken const &amp;role, VtIntArray const &amp;indices=VtIntArray(0))</argsstring>
        <name>AddPrimvar</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>HdInterpolation const &amp;</type>
          <declname>interp</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>role</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>indices</declname>
          <defval>VtIntArray(0)</defval>
        </param>
        <briefdescription>
<para>Primvars. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a6ff76c887587c2d2493ad36d56c8a5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdatePrimvarValue</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;name, VtValue const &amp;value, VtIntArray const &amp;indices=VtIntArray(0))</argsstring>
        <name>UpdatePrimvarValue</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>VtIntArray const &amp;</type>
          <declname>indices</declname>
          <defval>VtIntArray(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a1bf66b2825ee476850de2aa248669845" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void RemovePrimvar</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;name)</argsstring>
        <name>RemovePrimvar</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1acea825f5b9d7b82827123e1a0e75644c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateTransform</definition>
        <argsstring>(SdfPath const &amp;id, GfMatrix4f const &amp;mat)</argsstring>
        <name>UpdateTransform</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> const &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
<para>Transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a4c5c53014cfc9f33dc70524b3adbd4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddMaterialResource</definition>
        <argsstring>(SdfPath const &amp;id, VtValue materialResource)</argsstring>
        <name>AddMaterialResource</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
          <declname>materialResource</declname>
        </param>
        <briefdescription>
<para>Material. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a55043f37e515f30ffc2df0850d8688bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateMaterialResource</definition>
        <argsstring>(SdfPath const &amp;materialId, VtValue materialResource)</argsstring>
        <name>UpdateMaterialResource</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>materialId</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
          <declname>materialResource</declname>
        </param>
        <briefdescription>
<para>Update a material resource. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a0e1404844c4bf21057178332ca91c490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void BindMaterial</definition>
        <argsstring>(SdfPath const &amp;rprimId, SdfPath const &amp;materialId)</argsstring>
        <name>BindMaterial</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>rprimId</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>materialId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ad7fd1c97d0b51d994580aa1a25e186f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void RebindMaterial</definition>
        <argsstring>(SdfPath const &amp;rprimId, SdfPath const &amp;materialId)</argsstring>
        <name>RebindMaterial</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>rprimId</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>materialId</declname>
        </param>
        <briefdescription>
<para>Example to update a material binding on the fly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aed521b3bcaf3b8fcae4f013368fd11c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddRenderBuffer</definition>
        <argsstring>(SdfPath const &amp;id, HdRenderBufferDescriptor const &amp;desc)</argsstring>
        <name>AddRenderBuffer</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_render_buffer_descriptor" kindref="compound">HdRenderBufferDescriptor</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
<para>Render buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a68cc208b25a8a33e0b629012f25386d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateRenderBuffer</definition>
        <argsstring>(SdfPath const &amp;id, HdRenderBufferDescriptor const &amp;desc)</argsstring>
        <name>UpdateRenderBuffer</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_render_buffer_descriptor" kindref="compound">HdRenderBufferDescriptor</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a7c64f974fb342cb4b949f5706a6ca712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void AddCamera</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>AddCamera</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Camera. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="299" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a18603cc3a4d3991408a131bf235efcbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateCamera</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;key, VtValue value)</argsstring>
        <name>UpdateCamera</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a539fa0ea64d66573fba8328851c7e3a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void AddTask</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>AddTask</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Tasks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="305" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a18b25309ce522fb8e5784cbf67ebd13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateTask</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;key, VtValue value)</argsstring>
        <name>UpdateTask</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a1ccd5323018d9225a24d555a903b7017" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void Remove</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>Remove</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Remove a prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a3fde2d6e82e2df69ff2704963a388614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clear all prims. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="318" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a630a7e570460ba45c45408163c7b8fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void HideRprim</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>HideRprim</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="322" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aae80be4d41e94712e1c98acc15fa1d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UnhideRprim</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>UnhideRprim</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a6d990a1836ac54169ece3430f0332440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetReprSelector</definition>
        <argsstring>(SdfPath const &amp;id, HdReprSelector const &amp;reprSelector)</argsstring>
        <name>SetReprSelector</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref> const &amp;</type>
          <declname>reprSelector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="330" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aa3fbfb4450890e01032e908bcda40cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetRefineLevel</definition>
        <argsstring>(SdfPath const &amp;id, int refineLevel)</argsstring>
        <name>SetRefineLevel</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>int</type>
          <declname>refineLevel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a6d962fa6ca3ab9bfdadc7ad245161294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetVisibility</definition>
        <argsstring>(SdfPath const &amp;id, bool vis)</argsstring>
        <name>SetVisibility</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a63bbd6ed03c8e5eb7139672f4d22b193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void MarkRprimDirty</definition>
        <argsstring>(SdfPath path, HdDirtyBits flag)</argsstring>
        <name>MarkRprimDirty</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
          <declname>path</declname>
        </param>
        <param>
          <type>HdDirtyBits</type>
          <declname>flag</declname>
        </param>
        <briefdescription>
<para>Marks an rprim in the RenderIndex as dirty with the given dirty flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a3275347245189846b9746946fdfda705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdatePositions</definition>
        <argsstring>(SdfPath const &amp;id, float time)</argsstring>
        <name>UpdatePositions</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="345" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a683218d2ce09a5a16409fa26733d0768" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateRprims</definition>
        <argsstring>(float time)</argsstring>
        <name>UpdateRprims</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a5539cb006c967647742e9e5ec25c09c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateInstancerPrimvars</definition>
        <argsstring>(float time)</argsstring>
        <name>UpdateInstancerPrimvars</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a0be8a94b0acea3d59342cfc685036238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateInstancerPrototypes</definition>
        <argsstring>(float time)</argsstring>
        <name>UpdateInstancerPrototypes</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="351" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ae6f483c9b5ef9092a7d5427c06c1559b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void UpdateCurvePrimvarsInterpMode</definition>
        <argsstring>(float time)</argsstring>
        <name>UpdateCurvePrimvarsInterpMode</name>
        <param>
          <type>float</type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aea4d786ace8ca2d873073c33c15dcf82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>HD_API GfVec3f PopulateBasicTestSet</definition>
        <argsstring>()</argsstring>
        <name>PopulateBasicTestSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="359" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a5ad2a4cf6c53abb7440cc18f52d88283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref></type>
        <definition>HD_API GfVec3f PopulateInvalidPrimsSet</definition>
        <argsstring>()</argsstring>
        <name>PopulateInvalidPrimsSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a0bb1a9b7ef97ed2ab9d50928105b37a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_hd_mesh_topology" kindref="compound">HdMeshTopology</ref></type>
        <definition>virtual HD_API HdMeshTopology GetMeshTopology</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetMeshTopology</name>
        <reimplements refid="class_hd_scene_delegate_1acfaf1d4856f431e93d40b776491bb37c">GetMeshTopology</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the topological mesh data for a given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a8096fd702593d125d6858a07608219a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_hd_basis_curves_topology" kindref="compound">HdBasisCurvesTopology</ref></type>
        <definition>virtual HD_API HdBasisCurvesTopology GetBasisCurvesTopology</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetBasisCurvesTopology</name>
        <reimplements refid="class_hd_scene_delegate_1ae6ac3de94d899b9576f059e3214701b5">GetBasisCurvesTopology</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the topological curve data for a given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="369" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aad14891cede794390299f6f96d5d396c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>virtual HD_API TfToken GetRenderTag</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetRenderTag</name>
        <reimplements refid="class_hd_scene_delegate_1a0803b53559f3a982c669e8ba12ab5915">GetRenderTag</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the render tag that will be used to bucket prims during render pass bucketing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="372" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1adacc3b9627da393174803ba066eb776f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>virtual HD_API TfTokenVector GetTaskRenderTags</definition>
        <argsstring>(SdfPath const &amp;taskId) override</argsstring>
        <name>GetTaskRenderTags</name>
        <reimplements refid="class_hd_scene_delegate_1a938690fa1d2af271b0156a2bfd9a12da">GetTaskRenderTags</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>taskId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1afe398c4f483b9d64d8f8d46c22eef4fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_px_osd_subdiv_tags" kindref="compound">PxOsdSubdivTags</ref></type>
        <definition>virtual HD_API PxOsdSubdivTags GetSubdivTags</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetSubdivTags</name>
        <reimplements refid="class_hd_scene_delegate_1adaf716dc793d2fa4e17f83cef4604f40">GetSubdivTags</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the subdivision surface tags (sharpness, holes, etc). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="376" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a093a2aa699d9c19aa12b5e02b6563023" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref></type>
        <definition>virtual HD_API GfRange3d GetExtent</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetExtent</name>
        <reimplements refid="class_hd_scene_delegate_1a42def5fc0682ad1962df1a574224c808">GetExtent</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Gets the axis aligned bounds of a prim. </para>
        </briefdescription>
        <detaileddescription>
<para>The returned bounds are in the local space of the prim (transform is yet to be applied) and should contain the bounds of any child prims.</para>
<para>The returned bounds does not include any displacement that might occur as the result of running shaders on the prim. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="378" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1acfb1a2ad08026dd0ddf83f13ed37c2e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>virtual HD_API GfMatrix4d GetTransform</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetTransform</name>
        <reimplements refid="class_hd_scene_delegate_1a2081bef654e7e0b108c1652d47bf392f">GetTransform</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the object space transform, including all parent transforms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1af3e73f38dea62bff93487ab56cfed620" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API bool</type>
        <definition>virtual HD_API bool GetVisible</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetVisible</name>
        <reimplements refid="class_hd_scene_delegate_1af743cd05654ed005cb376fb58c05202b">GetVisible</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the authored visible state of the prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="382" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a30fbae4d8746fda1f47814fbbdd96baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API bool</type>
        <definition>virtual HD_API bool GetDoubleSided</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetDoubleSided</name>
        <reimplements refid="class_hd_scene_delegate_1a8aa249e1150994ee9623e062dd81e12c">GetDoubleSided</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the doubleSided state for the given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a79e5c4bb20c14b129b2b76b2ef504210" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="struct_hd_display_style" kindref="compound">HdDisplayStyle</ref></type>
        <definition>virtual HD_API HdDisplayStyle GetDisplayStyle</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetDisplayStyle</name>
        <reimplements refid="class_hd_scene_delegate_1a2e12e749cb49f1e35e8b0bf91fc6a906">GetDisplayStyle</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the refinement level for the given prim in the range [0,8]. </para>
        </briefdescription>
        <detaileddescription>
<para>The refinement level indicates how many iterations to apply when subdividing subdivision surfaces or other refinable primitives. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a5ddb9efb0061e2a474687ad9579e2c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API HdCullStyle</type>
        <definition>virtual HD_API HdCullStyle GetCullStyle</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetCullStyle</name>
        <reimplements refid="class_hd_scene_delegate_1afb706151d2cb528eb7df8d5c641a7092">GetCullStyle</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the cullstyle for the given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a0849d62bd65f119b5d0cb14309489b23" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual HD_API VtValue Get</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;key) override</argsstring>
        <name>Get</name>
        <reimplements refid="class_hd_scene_delegate_1ac4b8288076517adc9e44fccbbc140d9c">Get</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Returns a named value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="390" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ab0196f206b0f5e7b167ec3eecfe7da93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual HD_API VtValue GetIndexedPrimvar</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;key, VtIntArray *outIndices) override</argsstring>
        <name>GetIndexedPrimvar</name>
        <reimplements refid="class_hd_scene_delegate_1ac642fbff8fb615a2871456e436aa5927">GetIndexedPrimvar</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>VtIntArray *</type>
          <declname>outIndices</declname>
        </param>
        <briefdescription>
<para>Returns a named primvar value. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>*outIndices</emphasis> is not nullptr and the primvar has indices, it will return the unflattened primvar and set <emphasis>*outIndices</emphasis> to the primvar&apos;s associated indices, clearing the array if the primvar is not indexed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a7661ed94efe7f11560a1595a16b8bf8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_hd_repr_selector" kindref="compound">HdReprSelector</ref></type>
        <definition>virtual HD_API HdReprSelector GetReprSelector</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetReprSelector</name>
        <reimplements refid="class_hd_scene_delegate_1ad7651b83aa342893ff7e900e35edeec2">GetReprSelector</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the authored repr (if any) for the given prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ac1b14ef215a970b76d58a0df4bd44132" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API HdPrimvarDescriptorVector</type>
        <definition>virtual HD_API HdPrimvarDescriptorVector GetPrimvarDescriptors</definition>
        <argsstring>(SdfPath const &amp;id, HdInterpolation interpolation) override</argsstring>
        <name>GetPrimvarDescriptors</name>
        <reimplements refid="class_hd_scene_delegate_1a2d402698e716a161f0e10d9aebd0826c">GetPrimvarDescriptors</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>HdInterpolation</type>
          <declname>interpolation</declname>
        </param>
        <briefdescription>
<para>Returns descriptors for all primvars of the given interpolation type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a3adc30d63d07a1f68219653d7c44583b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API VtIntArray</type>
        <definition>virtual HD_API VtIntArray GetInstanceIndices</definition>
        <argsstring>(SdfPath const &amp;instancerId, SdfPath const &amp;prototypeId) override</argsstring>
        <name>GetInstanceIndices</name>
        <reimplements refid="class_hd_scene_delegate_1a3f473bdbe6c3b3d5d85003aa6f908a38">GetInstanceIndices</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>prototypeId</declname>
        </param>
        <briefdescription>
<para>Gets the extracted indices array of the prototype id used in the instancer. </para>
        </briefdescription>
        <detaileddescription>
<para>example instances: 0, 1, 2, 3, 4, 5 protoypes: A, B, A, A, B, C</para>
<para>GetInstanceIndices(A) : [0, 2, 3] GetInstanceIndices(B) : [1, 4] GetInstanceIndices(C) : [5] GetInstanceIndices(D) : [] </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a441ca798635083866ee8a9eb88ed7a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API SdfPathVector</type>
        <definition>virtual HD_API SdfPathVector GetInstancerPrototypes</definition>
        <argsstring>(SdfPath const &amp;instancerId) override</argsstring>
        <name>GetInstancerPrototypes</name>
        <reimplements refid="class_hd_scene_delegate_1a3c2dd2784015b3047b6d5cbcc47b7836">GetInstancerPrototypes</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
        </param>
        <briefdescription>
<para>Returns a list of prototypes of this instancer. </para>
        </briefdescription>
        <detaileddescription>
<para>The intent is to let renderers cache instance indices by giving them a complete set of prims to call GetInstanceIndices(instancer, prototype) on. XXX: This is currently unused, but may be used in the future. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1ae6554a911c44ef3742332503a15905f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>virtual HD_API GfMatrix4d GetInstancerTransform</definition>
        <argsstring>(SdfPath const &amp;instancerId) override</argsstring>
        <name>GetInstancerTransform</name>
        <reimplements refid="class_hd_scene_delegate_1a5aab8b5764cea69054ec3299899a87c0">GetInstancerTransform</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>instancerId</declname>
        </param>
        <briefdescription>
<para>Returns the instancer transform. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a38ef1d192d9b37af6f04ed1cb3bd178b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>virtual HD_API SdfPath GetMaterialId</definition>
        <argsstring>(SdfPath const &amp;rprimId) override</argsstring>
        <name>GetMaterialId</name>
        <reimplements refid="class_hd_scene_delegate_1a428d357d31cd676710ac3d82b6b8d57c">GetMaterialId</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>rprimId</declname>
        </param>
        <briefdescription>
<para>Returns the material ID bound to the rprim <computeroutput>rprimId</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="414" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a1bbb244b23df6fec56295e9ce2bd18b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>virtual HD_API SdfPath GetInstancerId</definition>
        <argsstring>(SdfPath const &amp;primId) override</argsstring>
        <name>GetInstancerId</name>
        <reimplements refid="class_hd_scene_delegate_1a10b7194fd79e3bd33e3283ba687e742a">GetInstancerId</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>primId</declname>
        </param>
        <briefdescription>
<para>Returns the parent instancer of the given rprim or instancer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="417" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a53c9d6a2acea7f9b6ab7a7749f4b589b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual HD_API VtValue GetMaterialResource</definition>
        <argsstring>(SdfPath const &amp;materialId) override</argsstring>
        <name>GetMaterialResource</name>
        <reimplements refid="class_hd_scene_delegate_1a2e99135d98c6c757ecc0885e0a82e12c">GetMaterialResource</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>materialId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1aed7eb422972fdda1bc2bb3ee7881f26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>virtual HD_API VtValue GetCameraParamValue</definition>
        <argsstring>(SdfPath const &amp;cameraId, TfToken const &amp;paramName) override</argsstring>
        <name>GetCameraParamValue</name>
        <reimplements refid="class_hd_scene_delegate_1a40d6e52c3139692b32e61ae78c40a22b">GetCameraParamValue</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>cameraId</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>paramName</declname>
        </param>
        <briefdescription>
<para>Returns a single value for a given camera and parameter. </para>
        </briefdescription>
        <detaileddescription>
<para>See HdCameraTokens for the list of paramters. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="423" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a275893e2f209dad7525b9dac3b1eea3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API <ref refid="struct_hd_render_buffer_descriptor" kindref="compound">HdRenderBufferDescriptor</ref></type>
        <definition>virtual HD_API HdRenderBufferDescriptor GetRenderBufferDescriptor</definition>
        <argsstring>(SdfPath const &amp;id) override</argsstring>
        <name>GetRenderBufferDescriptor</name>
        <reimplements refid="class_hd_scene_delegate_1a0507dd08e1dd737998166c873df79af3">GetRenderBufferDescriptor</reimplements>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the allocation descriptor for a given render buffer prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="427" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_unit_test_delegate_1a858388bf1d9e82559e5587ce8e5bb0e0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue _GetPrimvarValue</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;name)</argsstring>
        <name>_GetPrimvarValue</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_unit_test_delegate_1adc8de2644506a5feaa38cec9f322bd03" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _FindPrimvar</definition>
        <argsstring>(SdfPath const &amp;id, TfToken const &amp;name, _Primvars::iterator *pvIt)</argsstring>
        <name>_FindPrimvar</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>_Primvars::iterator *</type>
          <declname>pvIt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/unitTestDelegate.h" line="533" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A simple delegate class for unit test driver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3456">
        <label>HdSceneDelegate</label>
        <link refid="class_hd_scene_delegate"/>
      </node>
      <node id="3455">
        <label>HdUnitTestDelegate</label>
        <link refid="class_hd_unit_test_delegate"/>
        <childnode refid="3456" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3458">
        <label>HdSceneDelegate</label>
        <link refid="class_hd_scene_delegate"/>
      </node>
      <node id="3457">
        <label>HdUnitTestDelegate</label>
        <link refid="class_hd_unit_test_delegate"/>
        <childnode refid="3458" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/unitTestDelegate.h" line="53" column="1" bodyfile="pxr/imaging/hd/unitTestDelegate.h" bodystart="52" bodyend="577"/>
    <listofallmembers>
      <member refid="class_hd_unit_test_delegate_1ab8172e95b80073747710215388e07f71" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_cameras</name></member>
      <member refid="class_hd_unit_test_delegate_1aac6e490011b3e7bb74500f6427b51b48" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_curves</name></member>
      <member refid="class_hd_unit_test_delegate_1adc8de2644506a5feaa38cec9f322bd03" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_FindPrimvar</name></member>
      <member refid="class_hd_unit_test_delegate_1a858388bf1d9e82559e5587ce8e5bb0e0" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_GetPrimvarValue</name></member>
      <member refid="class_hd_unit_test_delegate_1a36ee27283b584d279d65c6458f55dbb3" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_hasInstancePrimvars</name></member>
      <member refid="class_hd_unit_test_delegate_1aa45e5511aa8d5f3c08edc0df520e66e5" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_hiddenRprims</name></member>
      <member refid="class_hd_unit_test_delegate_1a771a21ef53a04a230b4b5d767778de58" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_instancerBindings</name></member>
      <member refid="class_hd_unit_test_delegate_1a98e1b1ca6d660ac53339362dd2884d8d" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_instancers</name></member>
      <member refid="class_hd_unit_test_delegate_1ada6af0754b0f787b3ac4b9145f859f50" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_lights</name></member>
      <member refid="class_hd_unit_test_delegate_1aa1ec788782303d8567f8e78b42498bae" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_materialBindings</name></member>
      <member refid="class_hd_unit_test_delegate_1aaabb9b5b5556f1e4af71376d917d4c93" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_materials</name></member>
      <member refid="class_hd_unit_test_delegate_1af00732a8be491edcf93fd7c760b7fcba" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_meshes</name></member>
      <member refid="class_hd_unit_test_delegate_1abc02da6f5c733a16a4e042030d217774" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_points</name></member>
      <member refid="class_hd_unit_test_delegate_1a3ee858acb133d2ec29100ed1b788d7be" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_Primvars</name></member>
      <member refid="class_hd_unit_test_delegate_1a9eacceb02a306c587cabdc2cb81b0c4e" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_primvars</name></member>
      <member refid="class_hd_unit_test_delegate_1a53e70e5086b3c7786118fb7fbff88e8a" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_refineLevel</name></member>
      <member refid="class_hd_unit_test_delegate_1a24597f8e6a4c645100b5ff2548eca037" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_refineLevels</name></member>
      <member refid="class_hd_unit_test_delegate_1ad06405ca96f15564a453a49d56ec47bb" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_renderBuffers</name></member>
      <member refid="class_hd_unit_test_delegate_1a355261ece1e76e41781dc96234c4a018" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_tasks</name></member>
      <member refid="class_hd_unit_test_delegate_1a8ac474be5aeba9ab0c21a679bacd070c" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_visibilities</name></member>
      <member refid="class_hd_unit_test_delegate_1a816e722e12320f84cb218cdcb98d1b16" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>_visibility</name></member>
      <member refid="class_hd_unit_test_delegate_1abac7e197ed1e4c3c0a2093690f5f3678" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddBasisCurves</name></member>
      <member refid="class_hd_unit_test_delegate_1a7c64f974fb342cb4b949f5706a6ca712" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddCamera</name></member>
      <member refid="class_hd_unit_test_delegate_1ae8c20a8437820584520f250dc27a3026" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddCube</name></member>
      <member refid="class_hd_unit_test_delegate_1af5cb504f5599ab5de2d5947e0c32add5" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddCurves</name></member>
      <member refid="class_hd_unit_test_delegate_1a988a1fe9f6d42cefbc2aa8762e401b52" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddFaceVaryingPolygons</name></member>
      <member refid="class_hd_unit_test_delegate_1acc33320fa28f8899706d81a183d20a6d" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddGrid</name></member>
      <member refid="class_hd_unit_test_delegate_1a1f1345c325df821694d54becc4acec34" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddGridWithCustomColor</name></member>
      <member refid="class_hd_unit_test_delegate_1a6a278a9221482b60f530923338917d8e" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddGridWithFaceColor</name></member>
      <member refid="class_hd_unit_test_delegate_1ad4d8063d1ade70440f16a37166d6f47b" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddGridWithFaceVaryingColor</name></member>
      <member refid="class_hd_unit_test_delegate_1a86e4a0f2fbaf74569e9bd203be13c253" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddGridWithVertexColor</name></member>
      <member refid="class_hd_unit_test_delegate_1a5a88c49eaae7c3d8f1d71693137c9132" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddInstancer</name></member>
      <member refid="class_hd_unit_test_delegate_1a4c5c53014cfc9f33dc70524b3adbd4d6" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddMaterialResource</name></member>
      <member refid="class_hd_unit_test_delegate_1a7f78b1b7063c4267bf09c1214af92701" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddMesh</name></member>
      <member refid="class_hd_unit_test_delegate_1a13120ff180c006064576f03136c92843" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddMesh</name></member>
      <member refid="class_hd_unit_test_delegate_1aafb3a3e07dd1d7da98d793da9e09e2dc" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddMesh</name></member>
      <member refid="class_hd_unit_test_delegate_1ab459db20da937ee8ca25b52baa7f03df" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddMesh</name></member>
      <member refid="class_hd_unit_test_delegate_1a7479f043a672e827162c7c8b943108d1" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddPoints</name></member>
      <member refid="class_hd_unit_test_delegate_1aa4726ad7639c9c702e01430beb32691c" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddPoints</name></member>
      <member refid="class_hd_unit_test_delegate_1a8f172915c36a69a68264d057b894071b" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddPolygons</name></member>
      <member refid="class_hd_unit_test_delegate_1af0493edf49696cc7b0413c4102a9d282" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddPrimvar</name></member>
      <member refid="class_hd_unit_test_delegate_1aed521b3bcaf3b8fcae4f013368fd11c0" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddRenderBuffer</name></member>
      <member refid="class_hd_unit_test_delegate_1ac768fb8c4566c48e41364e1c6738e3a4" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddSubdiv</name></member>
      <member refid="class_hd_unit_test_delegate_1a539fa0ea64d66573fba8328851c7e3a8" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>AddTask</name></member>
      <member refid="class_hd_unit_test_delegate_1a0e1404844c4bf21057178332ca91c490" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>BindMaterial</name></member>
      <member refid="class_hd_unit_test_delegate_1a3fde2d6e82e2df69ff2704963a388614" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>Clear</name></member>
      <member refid="class_hd_unit_test_delegate_1a0849d62bd65f119b5d0cb14309489b23" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>Get</name></member>
      <member refid="class_hd_unit_test_delegate_1a8096fd702593d125d6858a07608219a1" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetBasisCurvesTopology</name></member>
      <member refid="class_hd_unit_test_delegate_1aed7eb422972fdda1bc2bb3ee7881f26a" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetCameraParamValue</name></member>
      <member refid="class_hd_scene_delegate_1a8973f50f161733c26a53652302790383" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetCategories</name></member>
      <member refid="class_hd_scene_delegate_1a9823c120d775a8fe3bb215a66e8332dc" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetCoordSysBindings</name></member>
      <member refid="class_hd_unit_test_delegate_1a5ddb9efb0061e2a474687ad9579e2c50" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetCullStyle</name></member>
      <member refid="class_hd_scene_delegate_1ab7439e7e33d17cadb44edcf2ecec6969" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>GetDelegateID</name></member>
      <member refid="class_hd_unit_test_delegate_1a79e5c4bb20c14b129b2b76b2ef504210" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetDisplayStyle</name></member>
      <member refid="class_hd_unit_test_delegate_1a30fbae4d8746fda1f47814fbbdd96baa" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetDoubleSided</name></member>
      <member refid="class_hd_scene_delegate_1a9935b600e222f99ad26e202c9ea1f149" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtComputationInput</name></member>
      <member refid="class_hd_scene_delegate_1acd5942621d9f8b8dafa1a7dc8372efdc" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtComputationInputDescriptors</name></member>
      <member refid="class_hd_scene_delegate_1af7a640993a4f6fae7f03de8d8f6176d7" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtComputationKernel</name></member>
      <member refid="class_hd_scene_delegate_1a2ab4c6d4ba95538551b7afc5c5c28472" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtComputationOutputDescriptors</name></member>
      <member refid="class_hd_scene_delegate_1a8362c6dae90eeb20b6cd584fe61b5121" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtComputationPrimvarDescriptors</name></member>
      <member refid="class_hd_scene_delegate_1a5f22260a74a589b65490ed1ea7b3d844" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtComputationSceneInputNames</name></member>
      <member refid="class_hd_unit_test_delegate_1a093a2aa699d9c19aa12b5e02b6563023" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetExtent</name></member>
      <member refid="class_hd_unit_test_delegate_1ab0196f206b0f5e7b167ec3eecfe7da93" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetIndexedPrimvar</name></member>
      <member refid="class_hd_scene_delegate_1a555b45b4c126d6448f0bed5d018953b8" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetInstanceCategories</name></member>
      <member refid="class_hd_unit_test_delegate_1a3adc30d63d07a1f68219653d7c44583b" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetInstanceIndices</name></member>
      <member refid="class_hd_unit_test_delegate_1a1bbb244b23df6fec56295e9ce2bd18b6" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetInstancerId</name></member>
      <member refid="class_hd_unit_test_delegate_1a441ca798635083866ee8a9eb88ed7a8b" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetInstancerPrototypes</name></member>
      <member refid="class_hd_unit_test_delegate_1ae6554a911c44ef3742332503a15905f1" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetInstancerTransform</name></member>
      <member refid="class_hd_scene_delegate_1ad958d086eddda888620ee2e80ed0c0eb" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetLightParamValue</name></member>
      <member refid="class_hd_unit_test_delegate_1a38ef1d192d9b37af6f04ed1cb3bd178b" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetMaterialId</name></member>
      <member refid="class_hd_unit_test_delegate_1a53c9d6a2acea7f9b6ab7a7749f4b589b" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetMaterialResource</name></member>
      <member refid="class_hd_unit_test_delegate_1a0bb1a9b7ef97ed2ab9d50928105b37a4" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetMeshTopology</name></member>
      <member refid="class_hd_scene_delegate_1adcab87eb59e47581955ca6da639a2188" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetModelDrawMode</name></member>
      <member refid="class_hd_unit_test_delegate_1ac1b14ef215a970b76d58a0df4bd44132" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetPrimvarDescriptors</name></member>
      <member refid="class_hd_unit_test_delegate_1a275893e2f209dad7525b9dac3b1eea3a" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetRenderBufferDescriptor</name></member>
      <member refid="class_hd_scene_delegate_1a36c7bb37e37e694970b49303046d0aa2" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>GetRenderIndex</name></member>
      <member refid="class_hd_unit_test_delegate_1aad14891cede794390299f6f96d5d396c" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetRenderTag</name></member>
      <member refid="class_hd_unit_test_delegate_1a7661ed94efe7f11560a1595a16b8bf8f" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetReprSelector</name></member>
      <member refid="class_hd_scene_delegate_1abf2d598723d5458ec074c92af3a4d318" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetScenePrimPath</name></member>
      <member refid="class_hd_scene_delegate_1a632cd4d98737ef615df8abfc3a3cae00" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetScenePrimPaths</name></member>
      <member refid="class_hd_scene_delegate_1a30fc236108f25b67b06ffaf1d250a0f8" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetShadingStyle</name></member>
      <member refid="class_hd_unit_test_delegate_1afe398c4f483b9d64d8f8d46c22eef4fa" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetSubdivTags</name></member>
      <member refid="class_hd_unit_test_delegate_1adacc3b9627da393174803ba066eb776f" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetTaskRenderTags</name></member>
      <member refid="class_hd_unit_test_delegate_1acfb1a2ad08026dd0ddf83f13ed37c2e8" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetTransform</name></member>
      <member refid="class_hd_unit_test_delegate_1af3e73f38dea62bff93487ab56cfed620" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetVisible</name></member>
      <member refid="class_hd_scene_delegate_1a4caa63d2108b228abd7301c6fa987a57" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>GetVolumeFieldDescriptors</name></member>
      <member refid="class_hd_scene_delegate_1a578a0b86f40c3e1dd589144eafb11a7b" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>HdSceneDelegate</name></member>
      <member refid="class_hd_unit_test_delegate_1a3a570e0f29ee0b87592b4878f976bea5" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>HdUnitTestDelegate</name></member>
      <member refid="class_hd_unit_test_delegate_1a630a7e570460ba45c45408163c7b8fe4" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>HideRprim</name></member>
      <member refid="class_hd_scene_delegate_1ab8d5b919ece633ae41b5a4d3b7cd9a6a" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>InvokeExtComputation</name></member>
      <member refid="class_hd_scene_delegate_1a326b9d1a1e75214cf26fd9b8e436de0d" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>IsEnabled</name></member>
      <member refid="class_hd_unit_test_delegate_1a63bbd6ed03c8e5eb7139672f4d22b193" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>MarkRprimDirty</name></member>
      <member refid="class_hd_unit_test_delegate_1aea4d786ace8ca2d873073c33c15dcf82" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>PopulateBasicTestSet</name></member>
      <member refid="class_hd_unit_test_delegate_1a5ad2a4cf6c53abb7440cc18f52d88283" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>PopulateInvalidPrimsSet</name></member>
      <member refid="class_hd_scene_delegate_1a6755e58ed360b29cc2282fbbe24fe647" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>PostSyncCleanup</name></member>
      <member refid="class_hd_unit_test_delegate_1ad7fd1c97d0b51d994580aa1a25e186f2" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>RebindMaterial</name></member>
      <member refid="class_hd_unit_test_delegate_1a1ccd5323018d9225a24d555a903b7017" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>Remove</name></member>
      <member refid="class_hd_unit_test_delegate_1a1bf66b2825ee476850de2aa248669845" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>RemovePrimvar</name></member>
      <member refid="class_hd_scene_delegate_1a0d1903d93b14fda1c6549bb473e0b0ce" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>SampleExtComputationInput</name></member>
      <member refid="class_hd_scene_delegate_1a1c90ab50682413462e92f1630f24dcb1" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SampleExtComputationInput</name></member>
      <member refid="class_hd_scene_delegate_1a0664f6c5132d8c113383e4f7bdc2eb7e" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>SampleIndexedPrimvar</name></member>
      <member refid="class_hd_scene_delegate_1a5c2cfbc0d7475d320e39f7516542bdc0" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SampleIndexedPrimvar</name></member>
      <member refid="class_hd_scene_delegate_1ab1498ca73626e7be29ddc569f0275139" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>SampleInstancerTransform</name></member>
      <member refid="class_hd_scene_delegate_1a0f698a29fecbb0aa330f3fec67e0730c" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SampleInstancerTransform</name></member>
      <member refid="class_hd_scene_delegate_1a487bdb0dc9804e6e42d3e0e7262bb592" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>SamplePrimvar</name></member>
      <member refid="class_hd_scene_delegate_1aa5a2fca0e7e8df2fde96d3f27ac3cf0c" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SamplePrimvar</name></member>
      <member refid="class_hd_scene_delegate_1a77b5da29281473d377d93c9b38ac99b4" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>SampleTransform</name></member>
      <member refid="class_hd_scene_delegate_1acecbea9221dad1768f23523fc3ec7b0d" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SampleTransform</name></member>
      <member refid="class_hd_unit_test_delegate_1a9467ec9ed89e817e4b0591c727c35fc0" prot="private" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SdfPathMap</name></member>
      <member refid="class_hd_unit_test_delegate_1a43f92c1e604c6965b421563a50169646" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetCurveWrapMode</name></member>
      <member refid="class_hd_unit_test_delegate_1a521b868e383c25cfd3f397e0f6a56c27" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetInstancerProperties</name></member>
      <member refid="class_hd_unit_test_delegate_1a01d24d54cc3f971961e573c2530a8e5f" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetMeshCullStyle</name></member>
      <member refid="class_hd_unit_test_delegate_1a7b9e082d6ef60ad66dd150cafa343d6f" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetRefineLevel</name></member>
      <member refid="class_hd_unit_test_delegate_1aa3fbfb4450890e01032e908bcda40cd4" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetRefineLevel</name></member>
      <member refid="class_hd_unit_test_delegate_1a6d990a1836ac54169ece3430f0332440" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetReprSelector</name></member>
      <member refid="class_hd_unit_test_delegate_1af52ffb6c299df0aafff014eef3bae36a" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetUseInstancePrimvars</name></member>
      <member refid="class_hd_unit_test_delegate_1a77defdd43fa27cb12dcb075d954e05f1" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetVisibility</name></member>
      <member refid="class_hd_unit_test_delegate_1a6d962fa6ca3ab9bfdadc7ad245161294" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>SetVisibility</name></member>
      <member refid="class_hd_scene_delegate_1a95bd13d07dfff95f8f314f2f5ee4d262" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>Sync</name></member>
      <member refid="class_hd_unit_test_delegate_1aae80be4d41e94712e1c98acc15fa1d09" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UnhideRprim</name></member>
      <member refid="class_hd_unit_test_delegate_1a18603cc3a4d3991408a131bf235efcbe" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateCamera</name></member>
      <member refid="class_hd_unit_test_delegate_1ae6f483c9b5ef9092a7d5427c06c1559b" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateCurvePrimvarsInterpMode</name></member>
      <member refid="class_hd_unit_test_delegate_1a917b5f33665a03cf709c3ad4b5fb4208" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateInstancer</name></member>
      <member refid="class_hd_unit_test_delegate_1a5539cb006c967647742e9e5ec25c09c3" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateInstancerPrimvars</name></member>
      <member refid="class_hd_unit_test_delegate_1a0be8a94b0acea3d59342cfc685036238" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateInstancerPrototypes</name></member>
      <member refid="class_hd_unit_test_delegate_1a55043f37e515f30ffc2df0850d8688bc" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateMaterialResource</name></member>
      <member refid="class_hd_unit_test_delegate_1a3275347245189846b9746946fdfda705" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdatePositions</name></member>
      <member refid="class_hd_unit_test_delegate_1a6ff76c887587c2d2493ad36d56c8a5d0" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdatePrimvarValue</name></member>
      <member refid="class_hd_unit_test_delegate_1a68cc208b25a8a33e0b629012f25386d6" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateRenderBuffer</name></member>
      <member refid="class_hd_unit_test_delegate_1a683218d2ce09a5a16409fa26733d0768" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateRprims</name></member>
      <member refid="class_hd_unit_test_delegate_1a18b25309ce522fb8e5784cbf67ebd13f" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateTask</name></member>
      <member refid="class_hd_unit_test_delegate_1acea825f5b9d7b82827123e1a0e75644c" prot="public" virt="non-virtual"><scope>HdUnitTestDelegate</scope><name>UpdateTransform</name></member>
      <member refid="class_hd_scene_delegate_1aa71a01c241e5f409c1f6b233b6f87501" prot="public" virt="virtual"><scope>HdUnitTestDelegate</scope><name>~HdSceneDelegate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
