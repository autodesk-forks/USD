<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_prman_instancer" kind="class" language="C++" prot="public">
    <compoundname>HdPrmanInstancer</compoundname>
    <basecompoundref refid="class_hd_instancer" prot="public" virt="non-virtual">HdInstancer</basecompoundref>
    <innerclass refid="struct_hd_prman_instancer_1_1___flatten_data" prot="private">HdPrmanInstancer::_FlattenData</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___instance_data" prot="private">HdPrmanInstancer::_InstanceData</innerclass>
    <innerclass refid="class_hd_prman_instancer_1_1___locking_map" prot="private">HdPrmanInstancer::_LockingMap</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___primvar_value" prot="private">HdPrmanInstancer::_PrimvarValue</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___proto_id_hash" prot="private">HdPrmanInstancer::_ProtoIdHash</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___proto_map_entry" prot="private">HdPrmanInstancer::_ProtoMapEntry</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___riley_instance_id" prot="private">HdPrmanInstancer::_RileyInstanceId</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___rt_param_list_equal_to_functor" prot="private">HdPrmanInstancer::_RtParamListEqualToFunctor</innerclass>
    <innerclass refid="struct_hd_prman_instancer_1_1___rt_param_list_hash_functor" prot="private">HdPrmanInstancer::_RtParamListHashFunctor</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_prman_instancer_1aaea03917643d2ff9abfefacced7040ff" prot="private" static="no">
        <type><ref refid="struct_hd_time_sample_array" kindref="compound">HdTimeSampleArray</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref>, HDPRMAN_MAX_TIME_SAMPLES &gt;</type>
        <definition>using _GfMatrixSA =  HdTimeSampleArray&lt;GfMatrix4d, HDPRMAN_MAX_TIME_SAMPLES&gt;</definition>
        <argsstring></argsstring>
        <name>_GfMatrixSA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="148" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_prman_instancer_1a9dc62f31e9d200abb67bf3cf287dbe99" prot="private" static="no">
        <type><ref refid="struct_hd_time_sample_array" kindref="compound">HdTimeSampleArray</ref>&lt; RtMatrix4x4, HDPRMAN_MAX_TIME_SAMPLES &gt;</type>
        <definition>using _RtMatrixSA =  HdTimeSampleArray&lt;RtMatrix4x4, HDPRMAN_MAX_TIME_SAMPLES&gt;</definition>
        <argsstring></argsstring>
        <name>_RtMatrixSA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="149" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_prman_instancer_1af1106fddada5877ddb8d2ae85517994c" prot="private" static="no">
        <type>_LockingMap&lt; _FlattenData, riley::GeometryPrototypeId, _FlattenData::HashFunctor &gt;</type>
        <definition>using _LockingFlattenGroupMap =  _LockingMap&lt; _FlattenData, riley::GeometryPrototypeId, _FlattenData::HashFunctor&gt;</definition>
        <argsstring></argsstring>
        <name>_LockingFlattenGroupMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="443" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_prman_instancer_1aa4b179bb8117237d53e2cea5b3ad15f4" prot="private" static="no">
        <type>std::vector&lt; _RileyInstanceId &gt;</type>
        <definition>using _InstanceIdVec =  std::vector&lt;_RileyInstanceId&gt;</definition>
        <argsstring></argsstring>
        <name>_InstanceIdVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="455" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_prman_instancer_1a0fdd88b32a01fc0e60a3f5301df86450" prot="private" static="no">
        <type>std::unordered_map&lt; riley::GeometryPrototypeId, _InstanceIdVec, _ProtoIdHash &gt;</type>
        <definition>using _ProtoInstMap =  std::unordered_map&lt; riley::GeometryPrototypeId, _InstanceIdVec, _ProtoIdHash&gt;</definition>
        <argsstring></argsstring>
        <name>_ProtoInstMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="465" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="468" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_prman_instancer_1aea61e33ea03709d91511ec7bbce10a6c" prot="private" static="no">
        <type>_LockingMap&lt; riley::GeometryPrototypeId, std::atomic&lt; int &gt;, _ProtoIdHash &gt;</type>
        <definition>using _LockingProtoGroupCounterMap =  _LockingMap&lt; riley::GeometryPrototypeId, std::atomic&lt;int&gt;, _ProtoIdHash&gt;</definition>
        <argsstring></argsstring>
        <name>_LockingProtoGroupCounterMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="470" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_prman_instancer_1a1122d91a356b6a1f59ccb1ef6a603b97" prot="private" static="no">
        <type>_LockingMap&lt; <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>, _ProtoMapEntry, SdfPath::Hash &gt;</type>
        <definition>using _LockingProtoMap =  _LockingMap&lt;SdfPath, _ProtoMapEntry, SdfPath::Hash&gt;</definition>
        <argsstring></argsstring>
        <name>_LockingProtoMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="481" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_prman_instancer_1afe933c590a35c6ef9411fb3bf7256a3f" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hd_time_sample_array" kindref="compound">HdTimeSampleArray</ref>&lt; VtMatrix4dArray, HDPRMAN_MAX_TIME_SAMPLES &gt;</type>
        <definition>HdTimeSampleArray&lt;VtMatrix4dArray, HDPRMAN_MAX_TIME_SAMPLES&gt; _sa</definition>
        <argsstring></argsstring>
        <name>_sa</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="619" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="619" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1af9eac37bfba1e571b65cd1412fb237dc" prot="private" static="no" mutable="no">
        <type>riley::CoordinateSystemList</type>
        <definition>riley::CoordinateSystemList _coordSysList</definition>
        <argsstring></argsstring>
        <name>_coordSysList</name>
        <initializer>= { 0, nullptr }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="622" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1a6273858e9c125af3e837d8b734b2a4bf" prot="private" static="no" mutable="no">
        <type>std::vector&lt; VtTokenArray &gt;</type>
        <definition>std::vector&lt;VtTokenArray&gt; _instanceCategories</definition>
        <argsstring></argsstring>
        <name>_instanceCategories</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="626" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1a64e98bef77510c42a814c3e2a6803629" prot="private" static="no" mutable="no">
        <type>_FlattenData</type>
        <definition>_FlattenData _instancerFlat</definition>
        <argsstring></argsstring>
        <name>_instancerFlat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="629" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1afdaa6cb21a793ad35a67b6f3b9cd6666" prot="private" static="no" mutable="no">
        <type>TfHashMap&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, _PrimvarValue, <ref refid="struct_tf_token_1_1_hash_functor" kindref="compound">TfToken::HashFunctor</ref> &gt;</type>
        <definition>TfHashMap&lt;TfToken, _PrimvarValue, TfToken::HashFunctor&gt; _primvarMap</definition>
        <argsstring></argsstring>
        <name>_primvarMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="632" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1a2bc26dace4084ea997074e4f6d089dd4" prot="private" static="no" mutable="no">
        <type>_LockingFlattenGroupMap</type>
        <definition>_LockingFlattenGroupMap _groupMap</definition>
        <argsstring></argsstring>
        <name>_groupMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="641" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="641" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1a273ed3f0c9179afb0cbd668538229a9d" prot="private" static="no" mutable="no">
        <type>_LockingProtoGroupCounterMap</type>
        <definition>_LockingProtoGroupCounterMap _groupCounters</definition>
        <argsstring></argsstring>
        <name>_groupCounters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="645" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="645" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1ac7531472a9a546d18085939c352d6437" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex _groupIdAcquisitionLock</definition>
        <argsstring></argsstring>
        <name>_groupIdAcquisitionLock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="650" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="650" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_prman_instancer_1a092aac41ee1a1653c1de19c12358a45d" prot="private" static="no" mutable="no">
        <type>_LockingProtoMap</type>
        <definition>_LockingProtoMap _protoMap</definition>
        <argsstring></argsstring>
        <name>_protoMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="661" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="661" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_prman_instancer_1aff8172e27a794486542445e0d8e8e04c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdPrmanInstancer</definition>
        <argsstring>(HdSceneDelegate *delegate, SdfPath const &amp;id)</argsstring>
        <name>HdPrmanInstancer</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>delegate</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a2652935584819b399aaf704b4278b986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~HdPrmanInstancer</definition>
        <argsstring>()</argsstring>
        <name>~HdPrmanInstancer</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a01d42ddc062aa607ea4c9fe02315189a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a96f70f13c9750967f0b70db1e2de1403" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Finalize</definition>
        <argsstring>(HdRenderParam *renderParam) override</argsstring>
        <name>Finalize</name>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1afe6942626c73d80a83771c3451568517" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HdDirtyBits</type>
        <definition>HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a35f1e26df660459b325712f1d9b6a3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Populate</definition>
        <argsstring>(HdRenderParam *renderParam, HdDirtyBits *dirtyBits, const SdfPath &amp;hydraPrototypeId, const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;rileyPrototypeIds, const riley::CoordinateSystemList &amp;coordSysList, const RtParamList protoParams, const HdTimeSampleArray&lt; GfMatrix4d, HDPRMAN_MAX_TIME_SAMPLES &gt; protoXform, const std::vector&lt; riley::MaterialId &gt; &amp;rileyMaterialIds, const SdfPathVector &amp;prototypePaths, const riley::LightShaderId &amp;lightShaderId=riley::LightShaderId::InvalidId())</argsstring>
        <name>Populate</name>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>hydraPrototypeId</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;</type>
          <declname>rileyPrototypeIds</declname>
        </param>
        <param>
          <type>const riley::CoordinateSystemList &amp;</type>
          <declname>coordSysList</declname>
        </param>
        <param>
          <type>const RtParamList</type>
          <declname>protoParams</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_time_sample_array" kindref="compound">HdTimeSampleArray</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref>, HDPRMAN_MAX_TIME_SAMPLES &gt;</type>
          <declname>protoXform</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::MaterialId &gt; &amp;</type>
          <declname>rileyMaterialIds</declname>
        </param>
        <param>
          <type>const SdfPathVector &amp;</type>
          <declname>prototypePaths</declname>
        </param>
        <param>
          <type>const riley::LightShaderId &amp;</type>
          <declname>lightShaderId</declname>
          <defval>riley::LightShaderId::InvalidId()</defval>
        </param>
        <briefdescription>
<para>Instructs the instancer to generate riley instances for the given prototypes. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller is responsible for the lifecycle of the riley prototypes, while the instancer will own the riley instances. This should only be called with all of the riley prototypes associated with a given hydra prototype path.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderParam</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dirtyBits</parametername>
</parameternamelist>
<parameterdescription>
<para>The hydra prototype&apos;s dirty bits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hydraPrototypeId</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the hydra prototype prim. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rileyPrototypeIds</parametername>
</parameternamelist>
<parameterdescription>
<para>The riley geometry prototype ids associated with this hydra prototype prim. There may be more than one, in the case of geomSubsets, or when a child instancer has more than one prototype group. If this is empty, all previously-populated instances associated with this hydraPrototypeId will be destroyed. It should not contain invalid prototype ids unless the hydra prototype is an analytic light, in which case it must contain exactly one invalid geometry prototype id. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coordSysList</parametername>
</parameternamelist>
<parameterdescription>
<para>The coordinate system list for the hydra prototype. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protoParams</parametername>
</parameternamelist>
<parameterdescription>
<para>The riley instance params derived from the hydra prototype. These will be applied to every riley instance except where they are overridden by riley instance params derived from the instancer. This collection may include visibility params, but should not include params used for light linking. These latter params will be derived by direct query of the scene delegate using hydraPrototypeId (or the appropriate prototypePrimPath, see below), and will be ignored and overwritten if they are present here. For a full list, see _GetLightLinkParams </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protoXform</parametername>
</parameternamelist>
<parameterdescription>
<para>The transform of the hydra prototype prim relative to the parent of the prototype root. This will be applied to the riley instances first, before the transform derived from the instancer&apos;s instancing mechanism or the instancer&apos;s own transform. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rileyMaterialIds</parametername>
</parameternamelist>
<parameterdescription>
<para>The riley material ids to be assigned to the instances of each of the supplied riley prototypes; this should match rileyPrototypeIds in length and indexing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prototypePaths</parametername>
</parameternamelist>
<parameterdescription>
<para>The stage paths of the (sub)prims each riley prototype id represents, e.g., the stage paths to the geomSubsets; this should always match prototypeIds in length and indexing. These are used for identification purposes and, when they are different from hydraPrototypeId, for retrieving light-linking categories, so they should (ideally) not be proxy paths. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lightShaderId</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) The riley light shader id associated with this hydra prototype. When this is provided, we assume the hydra prototype prim is a light. When this is provided, rileyPrototypeIds must either have the geometry prototype id(s) for a mesh light or have a single invalid id for an analytic light. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a1d2f4ac4b90326682a297af89672801b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Depopulate</definition>
        <argsstring>(HdRenderParam *renderParam, const SdfPath &amp;prototypePrimPath, const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;excludedPrototypeIds={})</argsstring>
        <name>Depopulate</name>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>prototypePrimPath</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;</type>
          <declname>excludedPrototypeIds</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Instructs the instancer to destroy any riley instances for the given hydra prototype prim path, optionally preserving those instances of a given list of prototype ids. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>renderParam</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prototypePrimPath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the hydra prototype. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>excludedPrototypeIds</parametername>
</parameternamelist>
<parameterdescription>
<para>List of riley prototype ids whose instances should be preserved. When empty or not provided, all instances of all prototypes for the given prototypePrimPath will be destroyed. HdPrmanInstancer itself uses this list to preserve instances of its own prototype groups when depopulating some instances from a parent instancer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="137" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_prman_instancer_1abaf821a51df9cd90b6e79774706080a8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SyncPrimvars</definition>
        <argsstring>(HdDirtyBits *dirtyBits)</argsstring>
        <name>_SyncPrimvars</name>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="488" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1ae7152228e7e5ce20a5342126802d5dcd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SyncTransforms</definition>
        <argsstring>(HdDirtyBits *dirtyBits)</argsstring>
        <name>_SyncTransforms</name>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a2e41c6fc4441d7aa975b24cff7e4e82c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SyncCategories</definition>
        <argsstring>(HdDirtyBits *dirtyBits)</argsstring>
        <name>_SyncCategories</name>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="494" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1ae24c2f0bf984944a0e4002f6bf1fcd45" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SyncVisibility</definition>
        <argsstring>(HdDirtyBits *dirtyBits)</argsstring>
        <name>_SyncVisibility</name>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="497" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a4fb42082a320f2f7f85ce68d9f1ac385" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ComposeInstances</definition>
        <argsstring>(const SdfPath &amp;protoId, const std::vector&lt; _InstanceData &gt; subInstances, std::vector&lt; _InstanceData &gt; &amp;instances)</argsstring>
        <name>_ComposeInstances</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>protoId</declname>
        </param>
        <param>
          <type>const std::vector&lt; _InstanceData &gt;</type>
          <declname>subInstances</declname>
        </param>
        <param>
          <type>std::vector&lt; _InstanceData &gt; &amp;</type>
          <declname>instances</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="501" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1ac87191b32677e6d9b2a39ccd2c9f98ef" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ComposeInstanceFlattenData</definition>
        <argsstring>(const size_t instanceId, RtParamList &amp;instanceParams, _FlattenData &amp;fd, const _FlattenData &amp;fromBelow=_FlattenData())</argsstring>
        <name>_ComposeInstanceFlattenData</name>
        <param>
          <type>const size_t</type>
          <declname>instanceId</declname>
        </param>
        <param>
          <type>RtParamList &amp;</type>
          <declname>instanceParams</declname>
        </param>
        <param>
          <type>_FlattenData &amp;</type>
          <declname>fd</declname>
        </param>
        <param>
          <type>const _FlattenData &amp;</type>
          <declname>fromBelow</declname>
          <defval>_FlattenData()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="509" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a6069f4f0b1db8fff88121d505fa03c53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ComposePrototypeData</definition>
        <argsstring>(const SdfPath &amp;protoPath, const RtParamList &amp;globalProtoParams, const bool isLight, const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;protoIds, const SdfPathVector &amp;subProtoPaths, const std::vector&lt; _FlattenData &gt; &amp;subProtoFlats, std::vector&lt; RtParamList &gt; &amp;protoParams, std::vector&lt; _FlattenData &gt; &amp;protoFlats)</argsstring>
        <name>_ComposePrototypeData</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>protoPath</declname>
        </param>
        <param>
          <type>const RtParamList &amp;</type>
          <declname>globalProtoParams</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>isLight</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;</type>
          <declname>protoIds</declname>
        </param>
        <param>
          <type>const SdfPathVector &amp;</type>
          <declname>subProtoPaths</declname>
        </param>
        <param>
          <type>const std::vector&lt; _FlattenData &gt; &amp;</type>
          <declname>subProtoFlats</declname>
        </param>
        <param>
          <type>std::vector&lt; RtParamList &gt; &amp;</type>
          <declname>protoParams</declname>
        </param>
        <param>
          <type>std::vector&lt; _FlattenData &gt; &amp;</type>
          <declname>protoFlats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a7227ad5eb75629fa8b29482fdfe27914" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _RemoveDeadInstances</definition>
        <argsstring>(riley::Riley *riley, const SdfPath &amp;prototypePrimPath, const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;protoIds)</argsstring>
        <name>_RemoveDeadInstances</name>
        <param>
          <type>riley::Riley *</type>
          <declname>riley</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>prototypePrimPath</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;</type>
          <declname>protoIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a2851c5783ab1d2cf7768d2c5c059055e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SetPrototypesDirty</definition>
        <argsstring>()</argsstring>
        <name>_SetPrototypesDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a298f37455e330618d83eef82f886d33b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _PopulateInstances</definition>
        <argsstring>(HdRenderParam *renderParam, HdDirtyBits *dirtyBits, const SdfPath &amp;hydraPrototypeId, const SdfPath &amp;prototypePrimPath, const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;rileyPrototypeIds, const riley::CoordinateSystemList &amp;coordSysList, const RtParamList protoParams, const HdTimeSampleArray&lt; GfMatrix4d, HDPRMAN_MAX_TIME_SAMPLES &gt; protoXform, const std::vector&lt; riley::MaterialId &gt; &amp;rileyMaterialIds, const SdfPathVector &amp;prototypePaths, const riley::LightShaderId &amp;lightShaderId, const std::vector&lt; _InstanceData &gt; &amp;subInstances, const std::vector&lt; _FlattenData &gt; &amp;prototypeFlats)</argsstring>
        <name>_PopulateInstances</name>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>hydraPrototypeId</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>prototypePrimPath</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;</type>
          <declname>rileyPrototypeIds</declname>
        </param>
        <param>
          <type>const riley::CoordinateSystemList &amp;</type>
          <declname>coordSysList</declname>
        </param>
        <param>
          <type>const RtParamList</type>
          <declname>protoParams</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_time_sample_array" kindref="compound">HdTimeSampleArray</ref>&lt; <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref>, HDPRMAN_MAX_TIME_SAMPLES &gt;</type>
          <declname>protoXform</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::MaterialId &gt; &amp;</type>
          <declname>rileyMaterialIds</declname>
        </param>
        <param>
          <type>const SdfPathVector &amp;</type>
          <declname>prototypePaths</declname>
        </param>
        <param>
          <type>const riley::LightShaderId &amp;</type>
          <declname>lightShaderId</declname>
        </param>
        <param>
          <type>const std::vector&lt; _InstanceData &gt; &amp;</type>
          <declname>subInstances</declname>
        </param>
        <param>
          <type>const std::vector&lt; _FlattenData &gt; &amp;</type>
          <declname>prototypeFlats</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1aa8bdf4e075a2c287b62e0e7fcf15f560" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HdPrmanInstancer *</type>
        <definition>HdPrmanInstancer* _GetParentInstancer</definition>
        <argsstring>()</argsstring>
        <name>_GetParentInstancer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a847a064a5a02c1dfcfb7767773f12ec9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _ResizeProtoMap</definition>
        <argsstring>(riley::Riley *riley, const SdfPath &amp;prototypePrimPath, const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;rileyPrototypeIds, const size_t newSize)</argsstring>
        <name>_ResizeProtoMap</name>
        <param>
          <type>riley::Riley *</type>
          <declname>riley</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>prototypePrimPath</declname>
        </param>
        <param>
          <type>const std::vector&lt; riley::GeometryPrototypeId &gt; &amp;</type>
          <declname>rileyPrototypeIds</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a0938afdf678e750e2988e57efdb7985f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _CleanDisusedGroupIds</definition>
        <argsstring>(HdPrman_RenderParam *param)</argsstring>
        <name>_CleanDisusedGroupIds</name>
        <param>
          <type>HdPrman_RenderParam *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1acfb2b951cf7aa1664dd6db075c91d0ca" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _AcquireGroupId</definition>
        <argsstring>(HdPrman_RenderParam *param, const _FlattenData &amp;flattenGroup, riley::GeometryPrototypeId &amp;groupId)</argsstring>
        <name>_AcquireGroupId</name>
        <param>
          <type>HdPrman_RenderParam *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const _FlattenData &amp;</type>
          <declname>flattenGroup</declname>
        </param>
        <param>
          <type>riley::GeometryPrototypeId &amp;</type>
          <declname>groupId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a1952e81e196576332d50da9fe727d2f6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GetInstanceParams</definition>
        <argsstring>(const size_t instanceIndex, RtParamList &amp;params)</argsstring>
        <name>_GetInstanceParams</name>
        <param>
          <type>const size_t</type>
          <declname>instanceIndex</declname>
        </param>
        <param>
          <type>RtParamList &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="590" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a417426a5edd6b185771b882bf6070e9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GetPrototypeParams</definition>
        <argsstring>(const SdfPath &amp;protoPath, RtParamList &amp;params)</argsstring>
        <name>_GetPrototypeParams</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>protoPath</declname>
        </param>
        <param>
          <type>RtParamList &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1a733226e14dd4e276717f259cc69fe31c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GetInstanceTransform</definition>
        <argsstring>(const size_t instanceIndex, _GfMatrixSA &amp;xform, const _GfMatrixSA &amp;left=_GfMatrixSA())</argsstring>
        <name>_GetInstanceTransform</name>
        <param>
          <type>const size_t</type>
          <declname>instanceIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_time_sample_array" kindref="compound">_GfMatrixSA</ref> &amp;</type>
          <declname>xform</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hd_time_sample_array" kindref="compound">_GfMatrixSA</ref> &amp;</type>
          <declname>left</declname>
          <defval><ref refid="struct_hd_time_sample_array" kindref="compound">_GfMatrixSA</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="602" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_prman_instancer_1aaaa61860e3111017e56aa4928ba3a542" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int _Depth</definition>
        <argsstring>()</argsstring>
        <name>_Depth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdPrman/instancer.h" line="611" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2514">
        <label>HdInstancer</label>
        <link refid="class_hd_instancer"/>
      </node>
      <node id="2513">
        <label>HdPrmanInstancer</label>
        <childnode refid="2514" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2516">
        <label>HdInstancer</label>
        <link refid="class_hd_instancer"/>
      </node>
      <node id="2515">
        <label>HdPrmanInstancer</label>
        <childnode refid="2516" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdPrman/instancer.h" line="47" column="1" bodyfile="pxr/imaging/hdPrman/instancer.h" bodystart="46" bodyend="662"/>
    <listofallmembers>
      <member refid="class_hd_prman_instancer_1acfb2b951cf7aa1664dd6db075c91d0ca" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_AcquireGroupId</name></member>
      <member refid="class_hd_prman_instancer_1a0938afdf678e750e2988e57efdb7985f" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_CleanDisusedGroupIds</name></member>
      <member refid="class_hd_prman_instancer_1ac87191b32677e6d9b2a39ccd2c9f98ef" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_ComposeInstanceFlattenData</name></member>
      <member refid="class_hd_prman_instancer_1a4fb42082a320f2f7f85ce68d9f1ac385" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_ComposeInstances</name></member>
      <member refid="class_hd_prman_instancer_1a6069f4f0b1db8fff88121d505fa03c53" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_ComposePrototypeData</name></member>
      <member refid="class_hd_prman_instancer_1af9eac37bfba1e571b65cd1412fb237dc" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_coordSysList</name></member>
      <member refid="class_hd_prman_instancer_1aaaa61860e3111017e56aa4928ba3a542" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_Depth</name></member>
      <member refid="class_hd_prman_instancer_1a1952e81e196576332d50da9fe727d2f6" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_GetInstanceParams</name></member>
      <member refid="class_hd_prman_instancer_1a733226e14dd4e276717f259cc69fe31c" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_GetInstanceTransform</name></member>
      <member refid="class_hd_prman_instancer_1aa8bdf4e075a2c287b62e0e7fcf15f560" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_GetParentInstancer</name></member>
      <member refid="class_hd_prman_instancer_1a417426a5edd6b185771b882bf6070e9e" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_GetPrototypeParams</name></member>
      <member refid="class_hd_prman_instancer_1aaea03917643d2ff9abfefacced7040ff" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_GfMatrixSA</name></member>
      <member refid="class_hd_prman_instancer_1a273ed3f0c9179afb0cbd668538229a9d" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_groupCounters</name></member>
      <member refid="class_hd_prman_instancer_1ac7531472a9a546d18085939c352d6437" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_groupIdAcquisitionLock</name></member>
      <member refid="class_hd_prman_instancer_1a2bc26dace4084ea997074e4f6d089dd4" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_groupMap</name></member>
      <member refid="class_hd_prman_instancer_1a6273858e9c125af3e837d8b734b2a4bf" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_instanceCategories</name></member>
      <member refid="class_hd_prman_instancer_1aa4b179bb8117237d53e2cea5b3ad15f4" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_InstanceIdVec</name></member>
      <member refid="class_hd_prman_instancer_1a64e98bef77510c42a814c3e2a6803629" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_instancerFlat</name></member>
      <member refid="class_hd_prman_instancer_1af1106fddada5877ddb8d2ae85517994c" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_LockingFlattenGroupMap</name></member>
      <member refid="class_hd_prman_instancer_1aea61e33ea03709d91511ec7bbce10a6c" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_LockingProtoGroupCounterMap</name></member>
      <member refid="class_hd_prman_instancer_1a1122d91a356b6a1f59ccb1ef6a603b97" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_LockingProtoMap</name></member>
      <member refid="class_hd_prman_instancer_1a298f37455e330618d83eef82f886d33b" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_PopulateInstances</name></member>
      <member refid="class_hd_prman_instancer_1afdaa6cb21a793ad35a67b6f3b9cd6666" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_primvarMap</name></member>
      <member refid="class_hd_prman_instancer_1a0fdd88b32a01fc0e60a3f5301df86450" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_ProtoInstMap</name></member>
      <member refid="class_hd_prman_instancer_1a092aac41ee1a1653c1de19c12358a45d" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_protoMap</name></member>
      <member refid="class_hd_prman_instancer_1a7227ad5eb75629fa8b29482fdfe27914" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_RemoveDeadInstances</name></member>
      <member refid="class_hd_prman_instancer_1a847a064a5a02c1dfcfb7767773f12ec9" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_ResizeProtoMap</name></member>
      <member refid="class_hd_prman_instancer_1a9dc62f31e9d200abb67bf3cf287dbe99" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_RtMatrixSA</name></member>
      <member refid="class_hd_prman_instancer_1afe933c590a35c6ef9411fb3bf7256a3f" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_sa</name></member>
      <member refid="class_hd_prman_instancer_1a2851c5783ab1d2cf7768d2c5c059055e" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_SetPrototypesDirty</name></member>
      <member refid="class_hd_prman_instancer_1a2e41c6fc4441d7aa975b24cff7e4e82c" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_SyncCategories</name></member>
      <member refid="class_hd_instancer_1a72e2aaa50810b72b5c322ca5c93c42a8" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_SyncInstancerAndParents</name></member>
      <member refid="class_hd_prman_instancer_1abaf821a51df9cd90b6e79774706080a8" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_SyncPrimvars</name></member>
      <member refid="class_hd_prman_instancer_1ae7152228e7e5ce20a5342126802d5dcd" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_SyncTransforms</name></member>
      <member refid="class_hd_prman_instancer_1ae24c2f0bf984944a0e4002f6bf1fcd45" prot="private" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_SyncVisibility</name></member>
      <member refid="class_hd_instancer_1aa0549b24aee8576e46bd2dbffddad752" prot="protected" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>_UpdateInstancer</name></member>
      <member refid="class_hd_prman_instancer_1a1d2f4ac4b90326682a297af89672801b" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>Depopulate</name></member>
      <member refid="class_hd_prman_instancer_1a96f70f13c9750967f0b70db1e2de1403" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>Finalize</name></member>
      <member refid="class_hd_instancer_1a0ac325c9543f5e9a831d1e87fc661348" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>GetBuiltinPrimvarNames</name></member>
      <member refid="class_hd_instancer_1a7a54e2c50b8cce793007581c7450b2af" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>GetDelegate</name></member>
      <member refid="class_hd_instancer_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>GetId</name></member>
      <member refid="class_hd_prman_instancer_1afe6942626c73d80a83771c3451568517" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_instancer_1afd35976486cc4ec447827980a44d97e5" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>GetInstancerNumLevels</name></member>
      <member refid="class_hd_instancer_1a1bb2fef816df9482f8c7f80799c312d1" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>GetParentId</name></member>
      <member refid="class_hd_instancer_1a68716c7888bc2c0125d10b6cd402c24d" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>HdInstancer</name></member>
      <member refid="class_hd_prman_instancer_1aff8172e27a794486542445e0d8e8e04c" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>HdPrmanInstancer</name></member>
      <member refid="class_hd_prman_instancer_1a35f1e26df660459b325712f1d9b6a3dd" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>Populate</name></member>
      <member refid="class_hd_prman_instancer_1a01d42ddc062aa607ea4c9fe02315189a" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>Sync</name></member>
      <member refid="class_hd_instancer_1abcc58e73a84dc6fe5ebaffe8fb2be87b" prot="public" virt="virtual"><scope>HdPrmanInstancer</scope><name>~HdInstancer</name></member>
      <member refid="class_hd_prman_instancer_1a2652935584819b399aaf704b4278b986" prot="public" virt="non-virtual"><scope>HdPrmanInstancer</scope><name>~HdPrmanInstancer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
