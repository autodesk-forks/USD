<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_lux_nonboundable_light_base" kind="class" language="C++" prot="public">
    <compoundname>UsdLuxNonboundableLightBase</compoundname>
    <basecompoundref refid="class_usd_geom_xformable" prot="public" virt="non-virtual">UsdGeomXformable</basecompoundref>
    <derivedcompoundref refid="class_usd_lux_distant_light" prot="public" virt="non-virtual">UsdLuxDistantLight</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_dome_light" prot="public" virt="non-virtual">UsdLuxDomeLight</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_dome_light__1" prot="public" virt="non-virtual">UsdLuxDomeLight_1</derivedcompoundref>
    <derivedcompoundref refid="class_usd_lux_geometry_light" prot="public" virt="non-virtual">UsdLuxGeometryLight</derivedcompoundref>
    <includes refid="nonboundable_light_base_8h" local="no">nonboundableLightBase.h</includes>
      <sectiondef kind="user-defined">
      <header>LightAPI</header>
      <description><para>Convenience accessors for the light&apos;s built-in <ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref></para>
</description>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a229cebcd21c7b6c8683655365c9be68f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref></type>
        <definition>USDLUX_API UsdLuxLightAPI LightAPI</definition>
        <argsstring>() const</argsstring>
        <name>LightAPI</name>
        <briefdescription>
<para>Contructs and returns a <ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> object for this light. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1aaa8abfb3def944066eca3eb7ddb2a340" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetIntensityAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetIntensityAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1aaa8abfb3def944066eca3eb7ddb2a340" kindref="member">UsdLuxLightAPI::GetIntensityAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a6e072625143be71e751dd5df6e424f32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateIntensityAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateIntensityAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a6e072625143be71e751dd5df6e424f32" kindref="member">UsdLuxLightAPI::CreateIntensityAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a9644cb90bd4e984bde1e539dec71909e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetExposureAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetExposureAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a9644cb90bd4e984bde1e539dec71909e" kindref="member">UsdLuxLightAPI::GetExposureAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1aa2476d5b2f457df829bff5c7ae945de1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateExposureAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateExposureAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1aa2476d5b2f457df829bff5c7ae945de1" kindref="member">UsdLuxLightAPI::CreateExposureAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a7f3e53a973a864890b6466500f1b9305" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetDiffuseAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetDiffuseAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a7f3e53a973a864890b6466500f1b9305" kindref="member">UsdLuxLightAPI::GetDiffuseAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1ad2fb42fcd363430bf22f67dbd6616cb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateDiffuseAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateDiffuseAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1ad2fb42fcd363430bf22f67dbd6616cb3" kindref="member">UsdLuxLightAPI::CreateDiffuseAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1adfd8a4d162bb0983eb6766eec7ae969c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetSpecularAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetSpecularAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1adfd8a4d162bb0983eb6766eec7ae969c" kindref="member">UsdLuxLightAPI::GetSpecularAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a38bbf350c4aed31f54fc25f8416f42ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateSpecularAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateSpecularAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a38bbf350c4aed31f54fc25f8416f42ff" kindref="member">UsdLuxLightAPI::CreateSpecularAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1acb777a3177e8ad3aeb13dcbafc03b921" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetNormalizeAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetNormalizeAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1acb777a3177e8ad3aeb13dcbafc03b921" kindref="member">UsdLuxLightAPI::GetNormalizeAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a258c14f40fd6752b0ce5b9f761ddef16" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateNormalizeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateNormalizeAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a258c14f40fd6752b0ce5b9f761ddef16" kindref="member">UsdLuxLightAPI::CreateNormalizeAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1afec0ec447ae09fb0208fc13bf1354744" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetColorAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetColorAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1afec0ec447ae09fb0208fc13bf1354744" kindref="member">UsdLuxLightAPI::GetColorAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1aeffd3f8ebffb0291e16928d79dfb5277" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateColorAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateColorAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1aeffd3f8ebffb0291e16928d79dfb5277" kindref="member">UsdLuxLightAPI::CreateColorAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a0d52e668b58caa585643f6f524914791" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetEnableColorTemperatureAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetEnableColorTemperatureAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a0d52e668b58caa585643f6f524914791" kindref="member">UsdLuxLightAPI::GetEnableColorTemperatureAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a9be67c10c9dc3bac947485338ce0b2fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateEnableColorTemperatureAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateEnableColorTemperatureAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a9be67c10c9dc3bac947485338ce0b2fe" kindref="member">UsdLuxLightAPI::CreateEnableColorTemperatureAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1ad990b3360a3c172c5340ce4e7af463a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute GetColorTemperatureAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetColorTemperatureAttr</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1ad990b3360a3c172c5340ce4e7af463a6" kindref="member">UsdLuxLightAPI::GetColorTemperatureAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a1a615e306620fce3931ee64c32f0408f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDLUX_API UsdAttribute CreateColorTemperatureAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateColorTemperatureAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1a1a615e306620fce3931ee64c32f0408f" kindref="member">UsdLuxLightAPI::CreateColorTemperatureAttr()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1aa485d9b82346018fbef817aafe00b40c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref></type>
        <definition>USDLUX_API UsdRelationship GetFiltersRel</definition>
        <argsstring>() const</argsstring>
        <name>GetFiltersRel</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1aa485d9b82346018fbef817aafe00b40c" kindref="member">UsdLuxLightAPI::GetFiltersRel()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1ab986f7f45bc7296c1700b2cadf49501a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_relationship" kindref="compound">UsdRelationship</ref></type>
        <definition>USDLUX_API UsdRelationship CreateFiltersRel</definition>
        <argsstring>() const</argsstring>
        <name>CreateFiltersRel</name>
        <briefdescription>
<para>See <ref refid="class_usd_lux_light_a_p_i_1ab986f7f45bc7296c1700b2cadf49501a" kindref="member">UsdLuxLightAPI::CreateFiltersRel()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="238" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_lux_nonboundable_light_base_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741a033ea5f40e4407ad16629e9a769ac9c1" kindref="member">UsdSchemaKind::AbstractTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="67" column="1" bodyfile="pxr/usd/usdLux/nonboundableLightBase.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_lux_nonboundable_light_base_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="120" column="1" bodyfile="pxr/usd/usdLux/nonboundableLightBase.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1afa2012afa90608a517675caa0573566e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdLuxNonboundableLightBase</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdLuxNonboundableLightBase</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_lux_nonboundable_light_base" kindref="compound">UsdLuxNonboundableLightBase</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_lux_nonboundable_light_base_1ad378a1ce7ac314ec724b96fe43df8b39" kindref="member">UsdLuxNonboundableLightBase::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="73" column="1" bodyfile="pxr/usd/usdLux/nonboundableLightBase.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a902f6d45deada9349feb64eba3247074" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdLuxNonboundableLightBase</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdLuxNonboundableLightBase</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_lux_nonboundable_light_base" kindref="compound">UsdLuxNonboundableLightBase</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_lux_nonboundable_light_base" kindref="compound">UsdLuxNonboundableLightBase</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="81" column="1" bodyfile="pxr/usd/usdLux/nonboundableLightBase.h" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a3a72a40df9118937ac505df1d959e192" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDLUX_API</type>
        <definition>virtual USDLUX_API ~UsdLuxNonboundableLightBase</definition>
        <argsstring>()</argsstring>
        <name>~UsdLuxNonboundableLightBase</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="88" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1aa95969c93c4bf00af4f4b7133d28152b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDLUX_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1ad378a1ce7ac314ec724b96fe43df8b39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API <ref refid="class_usd_lux_nonboundable_light_base" kindref="compound">UsdLuxNonboundableLightBase</ref></type>
        <definition>static USDLUX_API UsdLuxNonboundableLightBase Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_lux_nonboundable_light_base" kindref="compound">UsdLuxNonboundableLightBase</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdLuxNonboundableLightBase(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="108" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1ac19433aa62f0ecfb00450abefb7ccd4f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDLUX_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDLUX_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_geom_xformable_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="116" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a9bb91b8fbfd69050762b6a51b3ece78e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDLUX_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_lux_nonboundable_light_base_1a3c52f215cf5ae7b408293d0b504d07c0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDLUX_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDLUX_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_geom_xformable_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for intrinsic lights that are not boundable. </para>
    </briefdescription>
    <detaileddescription>
<para>The primary purpose of this class is to provide a direct API to the functions provided by LightAPI for concrete derived light types. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7592">
        <label>UsdLuxDomeLight_1</label>
        <link refid="class_usd_lux_dome_light__1"/>
        <childnode refid="7585" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7587">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="7588" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7585">
        <label>UsdLuxNonboundableLightBase</label>
        <link refid="class_usd_lux_nonboundable_light_base"/>
        <childnode refid="7586" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7591">
        <label>UsdLuxDomeLight</label>
        <link refid="class_usd_lux_dome_light"/>
        <childnode refid="7585" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7588">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="7589" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7589">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="7593">
        <label>UsdLuxGeometryLight</label>
        <link refid="class_usd_lux_geometry_light"/>
        <childnode refid="7585" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7590">
        <label>UsdLuxDistantLight</label>
        <link refid="class_usd_lux_distant_light"/>
        <childnode refid="7585" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7586">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="7587" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7596">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="7597" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7594">
        <label>UsdLuxNonboundableLightBase</label>
        <link refid="class_usd_lux_nonboundable_light_base"/>
        <childnode refid="7595" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7597">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="7598" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7598">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="7595">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="7596" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdLux/nonboundableLightBase.h" line="62" column="1" bodyfile="pxr/usd/usdLux/nonboundableLightBase.h" bodystart="61" bodyend="241"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1ac19433aa62f0ecfb00450abefb7ccd4f" prot="protected" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a9bb91b8fbfd69050762b6a51b3ece78e" prot="private" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a3c52f215cf5ae7b408293d0b504d07c0" prot="private" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_xformable_1a8b0d6e551f3705724405ddf6795756a7" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddOrientOp</name></member>
      <member refid="class_usd_geom_xformable_1ac01badf7416ca43636d9e479bc47da33" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1aba511327f305e9a8b3f8941e244c8992" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1a63ffbff66e60a314adac3380d533469f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4af9af5dc523e80fce81a88014edef19" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1ac7235be9524c6eb1a906f3247f9833f0" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1a353b43cb6f6d04b2db5b68c057d0494f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a9c089e1932ce91477becbc1f01bdfb02" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a6dd6174a48238d6a9564128f43362ce2" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a5938bf453b0f07bfaf80d121b916d720" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a4f84556fa9b1fab0432b8c4342e98045" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddScaleOp</name></member>
      <member refid="class_usd_geom_xformable_1a0fd59cb1cdd089e0d93fa755fb0da268" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1a782fe5d36ac6657235b80741d47a8b1f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddTranslateOp</name></member>
      <member refid="class_usd_geom_xformable_1ad6dfc740dcec052482489647af9ed36b" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>AddXformOp</name></member>
      <member refid="class_usd_geom_xformable_1a10a241711290631508cfc349ad4ab64d" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ClearXformOpOrder</name></member>
      <member refid="class_usd_geom_imageable_1a1174d9985088dd364f6a56925073fe76" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeEffectiveVisibility</name></member>
      <member refid="class_usd_geom_imageable_1a503f6d39abbd1b62c3c55f227461334d" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeLocalBound</name></member>
      <member refid="class_usd_geom_imageable_1a8e3fb09253ba63d63921f665d63cd270" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeLocalToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1a4313664fa692f724da56cc254bce70fc" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeParentToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1ad5a114f3776eb75edc651e8c2d67f8ff" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a1aa2ea4240e7e12f11122d7ff8ad7f90" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputePurpose</name></member>
      <member refid="class_usd_geom_imageable_1a2a7d61f7af1a02e095e6a8abcf8e641f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a00c5620a09313aa39cb0d79f492b340f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a54086b2386d22b1de4aaeb5b3005533d" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeUntransformedBound</name></member>
      <member refid="class_usd_geom_imageable_1ac0bfa1554d9b57303c14f71d084c578d" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeVisibility</name></member>
      <member refid="class_usd_geom_imageable_1ae616043b0f7fbc631ef9e5c784132a6c" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>ComputeWorldBound</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1aeffd3f8ebffb0291e16928d79dfb5277" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateColorAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a1a615e306620fce3931ee64c32f0408f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateColorTemperatureAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1ad2fb42fcd363430bf22f67dbd6616cb3" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateDiffuseAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a9be67c10c9dc3bac947485338ce0b2fe" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateEnableColorTemperatureAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1aa2476d5b2f457df829bff5c7ae945de1" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateExposureAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1ab986f7f45bc7296c1700b2cadf49501a" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateFiltersRel</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a6e072625143be71e751dd5df6e424f32" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateIntensityAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a258c14f40fd6752b0ce5b9f761ddef16" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateNormalizeAttr</name></member>
      <member refid="class_usd_geom_imageable_1aafc2e3aa91cf892f7937cc46a2351472" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1a3f4f6685ac7cef1d8ef94c44586b84bc" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreatePurposeAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a38bbf350c4aed31f54fc25f8416f42ff" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateSpecularAttr</name></member>
      <member refid="class_usd_geom_imageable_1a96d4959f4d99367dfa3a79a3371e278a" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a03e49a63dc0bed6c97cee6bbc10aa182" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>CreateXformOpOrderAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1ad378a1ce7ac314ec724b96fe43df8b39" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>Get</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1afec0ec447ae09fb0208fc13bf1354744" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetColorAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1ad990b3360a3c172c5340ce4e7af463a6" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetColorTemperatureAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a7f3e53a973a864890b6466500f1b9305" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetDiffuseAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a0d52e668b58caa585643f6f524914791" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetEnableColorTemperatureAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a9644cb90bd4e984bde1e539dec71909e" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetExposureAttr</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1aa485d9b82346018fbef817aafe00b40c" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetFiltersRel</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1aaa8abfb3def944066eca3eb7ddb2a340" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetIntensityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a9a04ccb1ba8aa16e8cc1e878c2c92969" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1a3bdae958563500cfdf2b4f3bcf34c465" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1ad0838e193af826f5bbde3c274e9839ce" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1acb777a3177e8ad3aeb13dcbafc03b921" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetNormalizeAttr</name></member>
      <member refid="class_usd_geom_imageable_1ac7d41ddd5b5d274785f4a109a7cebad5" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetOrderedPurposeTokens</name></member>
      <member refid="class_usd_geom_xformable_1a5e7cd1ac98925aa41af4f83d1efe6375" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetOrderedXformOps</name></member>
      <member refid="class_usd_geom_xformable_1a618c9b0ad5f39a8ebfc7f8e1b9319e5f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetOrientOp</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_imageable_1a5be4a4143e2b9f89f9bea44d27639a92" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetPurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a2dfc306cddf0c522d39ba477e91ec161" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetPurposeVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a6d16bc5455344e131683d91e14ab62db" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1adbc1cc0684aad279a9f7954cce0ad083" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1a8b871424ffaff814ec4595b406198e12" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1aeabbd1a4b1e09254ddf700bfc1d83790" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a9846b234308946bb9f91e1520f97de05" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1a803cfbc1fe2750bf9c5aadd83bd50a4c" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1aa244d99dd6e7f5abecc57f8ece422c93" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a478e11c424f265543b333a00fb4268d0" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a12311efeb62f64b39a02a1c001169ec6" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4ac8cec6efb64e0cbdd4b7a72f71c7f3" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a2029e0b90a0684a9a8c31e62aa98d317" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetScaleOp</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1aa95969c93c4bf00af4f4b7133d28152b" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1adfd8a4d162bb0983eb6766eec7ae969c" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetSpecularAttr</name></member>
      <member refid="class_usd_geom_xformable_1a0384cb87a595fa56c29463ff4fe73015" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1ab855f0ea37793df1f22d2bce3d68caff" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1a64d8dabfbe974503daf5e8f2057424f7" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a582133c4e08813d891690f58497d4add" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a0b425fbfdfe0f254add07f904ab231aa" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1ab81f8a9eb062d2c726dbb8303188408c" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetTranslateOp</name></member>
      <member refid="class_usd_geom_imageable_1a943eddc325190bd67789407400f122b7" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1ab153aead880eebecaf2138706c4bdbf2" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetXformOp</name></member>
      <member refid="class_usd_geom_xformable_1af8533621f9f141dfd016711171433caf" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>GetXformOpOrderAttr</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_geom_xformable_1adb444654a8443f3413213cc526ee6c1a" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>IsTransformationAffectedByAttrNamed</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>IsTyped</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a229cebcd21c7b6c8683655365c9be68f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>LightAPI</name></member>
      <member refid="class_usd_geom_imageable_1a91eda805326fd94cc9910cfaeb4ac4a0" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>MakeInvisible</name></member>
      <member refid="class_usd_geom_xformable_1a97e5c56a739490600e4e7e37b3953a08" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>MakeMatrixXform</name></member>
      <member refid="class_usd_geom_imageable_1a3fd30c76b787e7e32180c1b454b971c7" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>MakeVisible</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>operator bool</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_imageable_1a6b808012a6a5bc9df34e794ff82bb6f0" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a8c0c8b7faa4056a7267c586b2ffc0bd8" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_xformable_1a99c4c768f58d6375edad8c9c7cb4bee2" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>SetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1a4b6dd6e51eb84725c763d064c4f9f3ba" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>SetXformOpOrder</name></member>
      <member refid="class_usd_geom_xformable_1aca0c1f0eb2639bd9e126f5e6a16e856f" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_xformable_1a43e63cb240ddb36f550b3c86a22252c6" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_imageable_1a00ea23bdac8d751c2b97dc8fe5cd7f73" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_imageable_1a912f3e5572536e0492914fe251446bc9" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1adf53f566e1d4a6ff2c4e6e90590b0510" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_geom_xformable_1a4f5550d15c8a43ef4ac30a063f96d0cd" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1afa2012afa90608a517675caa0573566e" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdLuxNonboundableLightBase</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a902f6d45deada9349feb64eba3247074" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdLuxNonboundableLightBase</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdLuxNonboundableLightBase</scope><name>UsdTyped</name></member>
      <member refid="class_usd_geom_imageable_1acbd981c2779c70ec4c3fd5d8cc610925" prot="public" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>~UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1a8c8f037aa67ff544aea009f0881ed530" prot="public" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>~UsdGeomXformable</name></member>
      <member refid="class_usd_lux_nonboundable_light_base_1a3a72a40df9118937ac505df1d959e192" prot="public" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>~UsdLuxNonboundableLightBase</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdLuxNonboundableLightBase</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
