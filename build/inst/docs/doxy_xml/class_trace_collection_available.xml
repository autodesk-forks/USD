<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_collection_available" kind="class" language="C++" prot="public">
    <compoundname>TraceCollectionAvailable</compoundname>
    <basecompoundref refid="class_tf_notice" prot="public" virt="non-virtual">TfNotice</basecompoundref>
    <includes refid="collection_notice_8h" local="no">collectionNotice.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_collection_available_1ab659788d1d55df8db16f0bd7423aa77e" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt;</type>
        <definition>std::shared_ptr&lt;TraceCollection&gt; _collection</definition>
        <argsstring></argsstring>
        <name>_collection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collectionNotice.h" line="59" column="1" bodyfile="pxr/base/trace/collectionNotice.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_collection_available_1a56f58827f12172ccc02d2662aeb636ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceCollectionAvailable</definition>
        <argsstring>(const std::shared_ptr&lt; TraceCollection &gt; &amp;collection)</argsstring>
        <name>TraceCollectionAvailable</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt; &amp;</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collectionNotice.h" line="46" column="1" bodyfile="pxr/base/trace/collectionNotice.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_available_1abf8ecc08296210e323eb74237fb8e8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TRACE_API</type>
        <definition>virtual TRACE_API ~TraceCollectionAvailable</definition>
        <argsstring>()</argsstring>
        <name>~TraceCollectionAvailable</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collectionNotice.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_collection_available_1acc647955181d439bfc7161af2b48ee61" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::shared_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt; &amp;</type>
        <definition>const std::shared_ptr&lt;TraceCollection&gt;&amp; GetCollection</definition>
        <argsstring>() const</argsstring>
        <name>GetCollection</name>
        <briefdescription>
<para>Returns the <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> which was produced. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/collectionNotice.h" line="54" column="1" bodyfile="pxr/base/trace/collectionNotice.h" bodystart="54" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="class_tf_notice" kindref="compound">TfNotice</ref> that is sent when the <ref refid="class_trace_collector" kindref="compound">TraceCollector</ref> creates a <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>This can potentially be sent from multiple threads. Listeners must be thread safe. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5851">
        <label>TfNotice</label>
        <link refid="class_tf_notice"/>
      </node>
      <node id="5850">
        <label>TraceCollectionAvailable</label>
        <link refid="class_trace_collection_available"/>
        <childnode refid="5851" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5853">
        <label>TfNotice</label>
        <link refid="class_tf_notice"/>
      </node>
      <node id="5852">
        <label>TraceCollectionAvailable</label>
        <link refid="class_trace_collection_available"/>
        <childnode refid="5853" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/base/trace/collectionNotice.h" line="43" column="1" bodyfile="pxr/base/trace/collectionNotice.h" bodystart="42" bodyend="60"/>
    <listofallmembers>
      <member refid="class_trace_collection_available_1ab659788d1d55df8db16f0bd7423aa77e" prot="private" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>_collection</name></member>
      <member refid="class_trace_collection_available_1acc647955181d439bfc7161af2b48ee61" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>GetCollection</name></member>
      <member refid="class_tf_notice_1a32fa7dd9c926ede28304ba0fea5a0a57" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>InsertProbe</name></member>
      <member refid="class_tf_notice_1ae99914824a9e7ee4f109b0aecd927fab" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Keys</name></member>
      <member refid="class_tf_notice_1a68c24dba64e7a7135f62d1bdab33ca7f" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Register</name></member>
      <member refid="class_tf_notice_1af10135651f3124a42f325391ce12e1cb" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Register</name></member>
      <member refid="class_tf_notice_1a179046f55a4cf28983aecdae9e5f5ff5" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Register</name></member>
      <member refid="class_tf_notice_1a8f588ed9ae01d514c51ac36c255a7223" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>RemoveProbe</name></member>
      <member refid="class_tf_notice_1ab183e05189affeabc78270a9c1be4241" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Revoke</name></member>
      <member refid="class_tf_notice_1a5a994f26e22e2b2dfa28e36a11349f7a" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Revoke</name></member>
      <member refid="class_tf_notice_1a02732e32bee22f2efad0b07baa997a80" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Send</name></member>
      <member refid="class_tf_notice_1a3a0aa0bd6d35b4e26e01f932687690e6" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>Send</name></member>
      <member refid="class_tf_notice_1a94b84b1ac443ab812c795a9945bede00" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>SendWithWeakBase</name></member>
      <member refid="class_trace_collection_available_1a56f58827f12172ccc02d2662aeb636ce" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>TraceCollectionAvailable</name></member>
      <member refid="class_tf_notice_1ae0fdf4eb13bcd999def723fade0981bc" prot="public" virt="non-virtual"><scope>TraceCollectionAvailable</scope><name>WeakProbePtr</name></member>
      <member refid="class_tf_notice_1ac79079190e565d59be9fc80b94d0341c" prot="public" virt="virtual"><scope>TraceCollectionAvailable</scope><name>~TfNotice</name></member>
      <member refid="class_trace_collection_available_1abf8ecc08296210e323eb74237fb8e8d9" prot="public" virt="virtual"><scope>TraceCollectionAvailable</scope><name>~TraceCollectionAvailable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
