<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_schema_base" kind="class" language="C++" prot="public">
    <compoundname>UsdSchemaBase</compoundname>
    <derivedcompoundref refid="class_usd_a_p_i_schema_base" prot="public" virt="non-virtual">UsdAPISchemaBase</derivedcompoundref>
    <derivedcompoundref refid="class_usd_typed" prot="public" virt="non-virtual">UsdTyped</derivedcompoundref>
    <includes refid="schema_base_8h" local="no">schemaBase.h</includes>
      <sectiondef kind="user-defined">
      <header>Held prim access.</header>
      <memberdef kind="function" id="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></type>
        <definition>UsdPrim GetPrim</definition>
        <argsstring>() const</argsstring>
        <name>GetPrim</name>
        <briefdescription>
<para>Return this schema object&apos;s held prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="120" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath GetPath</definition>
        <argsstring>() const</argsstring>
        <name>GetPath</name>
        <briefdescription>
<para>Shorthand for <ref refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" kindref="member">GetPrim()</ref>-&gt;<ref refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" kindref="member">GetPath()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="123" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="123" bodyend="131"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>PrimDefinition access.</header>
      <memberdef kind="function" id="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> *</type>
        <definition>USD_API const UsdPrimDefinition* GetSchemaClassPrimDefinition</definition>
        <argsstring>() const</argsstring>
        <name>GetSchemaClassPrimDefinition</name>
        <briefdescription>
<para>Return the prim definition associated with this schema instance if one exists, otherwise return null. </para>
        </briefdescription>
        <detaileddescription>
<para>This does not use the held prim&apos;s type. To get the held prim instance&apos;s definition, use <ref refid="class_usd_prim_1a422bac96f602aa9983a203d86d48fd6d" kindref="member">UsdPrim::GetPrimDefinition()</ref>. <simplesect kind="see"><para><ref refid="class_usd_prim_1a422bac96f602aa9983a203d86d48fd6d" kindref="member">UsdPrim::GetPrimDefinition()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_schema_base_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741a1823d42f4a7ead4b97d8c73167795ef8" kindref="member">UsdSchemaKind::AbstractBase</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> in <ref refid="common_8h" kindref="compound">usd/common.h</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="61" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_schema_base_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="211" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_schema_base_1aaf4f179cf9a8ed5924af228c8155023b" prot="private" static="no" mutable="no">
        <type>Usd_PrimDataHandle</type>
        <definition>Usd_PrimDataHandle _primData</definition>
        <argsstring></argsstring>
        <name>_primData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="221" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_schema_base_1abd8f9a9cb0fc872b6f7f6a8288440c7e" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _proxyPrimPath</definition>
        <argsstring></argsstring>
        <name>_proxyPrimPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="222" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsConcrete</definition>
        <argsstring>() const</argsstring>
        <name>IsConcrete</name>
        <briefdescription>
<para>Returns whether or not this class corresponds to a concrete instantiable prim type in scene description. </para>
        </briefdescription>
        <detaileddescription>
<para>If this is true, GetStaticPrimDefinition() will return a valid prim definition with a non-empty typeName. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="67" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsTyped</definition>
        <argsstring>() const</argsstring>
        <name>IsTyped</name>
        <briefdescription>
<para>Returns whether or not this class inherits from <ref refid="class_usd_typed" kindref="compound">UsdTyped</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Types which inherit from <ref refid="class_usd_typed" kindref="compound">UsdTyped</ref> can impart a typename on a <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="73" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsAPISchema</definition>
        <argsstring>() const</argsstring>
        <name>IsAPISchema</name>
        <briefdescription>
<para>Returns whether this is an API schema or not. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="79" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsAppliedAPISchema</definition>
        <argsstring>() const</argsstring>
        <name>IsAppliedAPISchema</name>
        <briefdescription>
<para>Returns whether this is an applied API schema or not. </para>
        </briefdescription>
        <detaileddescription>
<para>If this returns true this class will have an Apply() method </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="87" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsMultipleApplyAPISchema</definition>
        <argsstring>() const</argsstring>
        <name>IsMultipleApplyAPISchema</name>
        <briefdescription>
<para>Returns whether this is an applied API schema or not. </para>
        </briefdescription>
        <detaileddescription>
<para>If this returns true the constructor, Get and Apply methods of this class will take in the name of the API schema instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="95" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>UsdSchemaKind GetSchemaKind</definition>
        <argsstring>() const</argsstring>
        <name>GetSchemaKind</name>
        <briefdescription>
<para>Returns the kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="100" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API UsdSchemaBase</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdSchemaBase</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct and store <computeroutput>prim</computeroutput> as the held prim. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API UsdSchemaBase</definition>
        <argsstring>(const UsdSchemaBase &amp;otherSchema)</argsstring>
        <name>UsdSchemaBase</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>otherSchema</declname>
        </param>
        <briefdescription>
<para>Construct and store for the same prim held by <computeroutput>otherSchema</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USD_API</type>
        <definition>virtual USD_API ~UsdSchemaBase</definition>
        <argsstring>()</argsstring>
        <name>~UsdSchemaBase</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><anchor id="class_usd_schema_base_1UsdSchemaBase_bool"/>Return true if this schema object is compatible with its held prim, false otherwise. For untyped schemas return true if the held prim is not expired, otherwise return false. For typed schemas return true if the held prim is not expired and its type is the schema&apos;s type or a subtype of the schema&apos;s type. Otherwise return false. This method invokes polymorphic behavior.</para>
<para><simplesect kind="see"><para><ref refid="class_usd_schema_base_1a4c09b7ee5dadb4e6f1013a1a4d56d264" kindref="member">UsdSchemaBase::_IsCompatible()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="165" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="165" bodyend="167"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_schema_base_1a47f45785a354d4ded0315458f4978980" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="148" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="148" bodyend="153"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_schema_base_1ae6ef66077029b8412b299e9bd86f9dee" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>virtual UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const</argsstring>
        <name>_GetSchemaKind</name>
        <reimplementedby refid="class_usd_vol_field_base_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_point_based_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_nonboundable_light_base_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_boundable_light_base_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_typed_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_vol_field_asset_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_render_settings_base_1ab337deeefb883bb6bcb563c6c7c9e1fd">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_gprim_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_model_a_p_i_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_imageable_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_connectable_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_scene_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_fixed_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_sphere_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_primvars_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_boundable_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_distance_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_distant_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_disk_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_portal_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_geometry_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_scope_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_cylinder_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_sphere_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cube_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_rect_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_animation_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_vol_open_v_d_b_asset_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_vol_field3_d_asset_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_skeleton_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_root_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_revolute_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_prismatic_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_plugin_light_filter_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_plugin_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_common_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_blend_shape_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_render_settings_1ab337deeefb883bb6bcb563c6c7c9e1fd">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_render_denoise_pass_1ab337deeefb883bb6bcb563c6c7c9e1fd">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_spherical_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_collision_group_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_points_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder__1_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_cone_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule__1_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_vol_volume_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_render_product_1ab337deeefb883bb6bcb563c6c7c9e1fd">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_material_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_mass_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_plane_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_render_var_1ab337deeefb883bb6bcb563c6c7c9e1fd">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_proc_generative_procedural_1a69f2b85c953c2cadf65f80ac0d4781af">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_shaping_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_collision_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_shadow_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_filtered_pairs_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_articulation_root_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_rigid_body_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_u_i_scene_graph_prim_a_p_i_1ad15ffdc5353a19f2de4cb27a4f1dd47d">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_u_i_node_graph_node_a_p_i_1ad15ffdc5353a19f2de4cb27a4f1dd47d">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_mesh_collision_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_filter_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_a_p_i_schema_base_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_list_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_node_graph_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_volume_light_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_mesh_light_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_hydra_generative_procedural_a_p_i_1a113835345147dc6018981898cc88edfa">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_clips_a_p_i_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_u_i_backdrop_1ad15ffdc5353a19f2de4cb27a4f1dd47d">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_motion_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_statements_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_shader_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_subset_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_skel_binding_a_p_i_1a79df5075439172ba191c1de8af616879">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_material_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_spline_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_dome_light_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_render_pass_1ab337deeefb883bb6bcb563c6c7c9e1fd">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_ri_render_pass_a_p_i_1a33433d6be99bff8201f850170177dec7">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_node_def_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_dome_light__1_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_visibility_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_media_spatial_audio_1a4b449c2d8fd036608b3560779b7be4a3">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_media_asset_previews_a_p_i_1a4b449c2d8fd036608b3560779b7be4a3">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_patch_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_camera_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_material_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_limit_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_mesh_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_physics_drive_a_p_i_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_coord_sys_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_shade_material_binding_a_p_i_1a9b47498492265f1a224b6ec58b109a88">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_model_a_p_i_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_list_a_p_i_1ac19433aa62f0ecfb00450abefb7ccd4f">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_xformable_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_collection_a_p_i_1a408aa7d080a2672e88403126cc197095">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_basis_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_point_instancer_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <briefdescription>
<para>Returns the kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_schema_base_1a3e5fc43aea5aea4908c3ce980fdf8908" kindref="member">UsdSchemaBase::schemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="173" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>virtual UsdSchemaKind _GetSchemaType</definition>
        <argsstring>() const</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000076"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This has been replace with _GetSchemaKind but is around for now for backwards compatibility while schemas are being updated.</para>
</xrefdescription></xrefsect></para>
<para>Leaving this around for one more release as schema classes up until now have been generated with an override of this function. We don&apos;t want those classes to immediately not compile before a chance is given to regenerate the schemas. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="185" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>const TfType&amp; _GetType</definition>
        <argsstring>() const</argsstring>
        <name>_GetType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="191" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="191" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USD_API UsdAttribute _CreateAttr</definition>
        <argsstring>(TfToken const &amp;attrName, SdfValueTypeName const &amp;typeName, bool custom, SdfVariability variability, VtValue const &amp;defaultValue, bool writeSparsely) const</argsstring>
        <name>_CreateAttr</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>attrName</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> const &amp;</type>
          <declname>typeName</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>custom</declname>
        </param>
        <param>
          <type><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">SdfVariability</ref></type>
          <declname>variability</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_schema_base_1a4c09b7ee5dadb4e6f1013a1a4d56d264" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USD_API bool</type>
        <definition>virtual USD_API bool _IsCompatible</definition>
        <argsstring>() const</argsstring>
        <name>_IsCompatible</name>
        <reimplementedby refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f">_IsCompatible</reimplementedby>
        <reimplementedby refid="class_usd_shade_connectable_a_p_i_1a4cd8715d75f7760f93c0b718376da36e">_IsCompatible</reimplementedby>
        <reimplementedby refid="class_usd_a_p_i_schema_base_1ad91204cc9fb92f0306372e074052190f">_IsCompatible</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_common_a_p_i_1aff69515f1800a9df4b3b2a443b3b427a">_IsCompatible</reimplementedby>
        <briefdescription>
<para>Subclasses may override _IsCompatible to do specific compatibility checking with the given prim, such as type compatibility or value compatibility. </para>
        </briefdescription>
        <detaileddescription>
<para>This check is performed when clients invoke the explicit bool operator. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="207" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_schema_base_1a86866fae65e3b935e7bd24b845c8e37e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USD_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="213" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_schema_base_1aa4577cccb4c5a966a0eddedfa31dc0e5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USD_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>virtual USD_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const</argsstring>
        <name>_GetTfType</name>
        <reimplementedby refid="class_usd_vol_field_base_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_point_based_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_nonboundable_light_base_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_boundable_light_base_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_typed_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_vol_field_asset_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_render_settings_base_1a6fb6bc8e96b6a96303733398a432ee9f">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_gprim_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_model_a_p_i_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_imageable_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_connectable_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_scene_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_fixed_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_sphere_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_primvars_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_boundable_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_distance_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_distant_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_disk_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_portal_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_geometry_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_scope_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_cylinder_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_sphere_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cube_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_rect_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_animation_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_vol_open_v_d_b_asset_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_vol_field3_d_asset_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_skeleton_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_root_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_revolute_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_prismatic_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_plugin_light_filter_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_plugin_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_xform_common_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_blend_shape_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_render_settings_1a6fb6bc8e96b6a96303733398a432ee9f">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_render_denoise_pass_1a6fb6bc8e96b6a96303733398a432ee9f">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_spherical_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_collision_group_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_points_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cylinder__1_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_cone_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule__1_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_capsule_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_vol_volume_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_render_product_1a6fb6bc8e96b6a96303733398a432ee9f">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_material_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_mass_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_plane_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_render_var_1a6fb6bc8e96b6a96303733398a432ee9f">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_proc_generative_procedural_1a66ed99efc245a0752bc7439dc47a593e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_shaping_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_collision_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_shadow_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_filtered_pairs_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_articulation_root_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_rigid_body_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_u_i_scene_graph_prim_a_p_i_1ad926ae18bb68d07cd9c093d4722ad3d2">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_u_i_node_graph_node_a_p_i_1ad926ae18bb68d07cd9c093d4722ad3d2">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_mesh_collision_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_filter_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_a_p_i_schema_base_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_list_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_node_graph_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_volume_light_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_mesh_light_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_hydra_generative_procedural_a_p_i_1a10fabff05825a4646fd9f5f86510ea08">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_clips_a_p_i_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_u_i_backdrop_1ad926ae18bb68d07cd9c093d4722ad3d2">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_motion_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_statements_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_shader_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_subset_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_skel_binding_a_p_i_1a55221575e16049b1dbd6147c54af4f43">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_material_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_spline_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_dome_light_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_render_pass_1a6fb6bc8e96b6a96303733398a432ee9f">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_ri_render_pass_a_p_i_1a3284a75ad1e5667bbbe2fcd79124282e">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_node_def_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_dome_light__1_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_visibility_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_media_spatial_audio_1a0761fce9ddea0f86c69c833dfb52348b">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_media_asset_previews_a_p_i_1a0761fce9ddea0f86c69c833dfb52348b">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_patch_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_camera_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_material_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_limit_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_mesh_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_physics_drive_a_p_i_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_coord_sys_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_shade_material_binding_a_p_i_1a5dfe3da94c3b2153585c9bd276122e76">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_model_a_p_i_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_lux_light_list_a_p_i_1a3c52f215cf5ae7b408293d0b504d07c0">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_xformable_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_collection_a_p_i_1a6f7a3688b0129a59c6e70e925d7ac732">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_basis_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_point_instancer_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/schemaBase.h" line="218" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The base class for all schema types in Usd. </para>
    </briefdescription>
    <detaileddescription>
<para>Schema objects hold a <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> internally and provide a layer of specific named API atop the underlying scene graph.</para>
<para>Schema objects are polymorphic but they are intended to be created as automatic local variables, so they may be passed and returned by-value. This leaves them subject to <ulink url="http://en.wikipedia.org/wiki/Object_slicing">slicing</ulink>. This means that if one passes a <computeroutput>SpecificSchema</computeroutput> instance to a function that takes a <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> <emphasis>by-value</emphasis>, all the polymorphic behavior specific to <computeroutput>SpecificSchema</computeroutput> is lost.</para>
<para>To avoid slicing, it is encouraged that functions taking schema object arguments take them by <computeroutput>const &amp;</computeroutput> if const access is sufficient, otherwise by non-const pointer. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8075">
        <label>UsdGeomCylinder</label>
        <link refid="class_usd_geom_cylinder"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8039">
        <label>UsdLuxMeshLightAPI</label>
        <link refid="class_usd_lux_mesh_light_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8083">
        <label>UsdGeomMesh</label>
        <link refid="class_usd_geom_mesh"/>
        <childnode refid="8078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8117">
        <label>UsdPhysicsRevoluteJoint</label>
        <link refid="class_usd_physics_revolute_joint"/>
        <childnode refid="8113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8049">
        <label>UsdPhysicsLimitAPI</label>
        <link refid="class_usd_physics_limit_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8094">
        <label>UsdLuxSphereLight</label>
        <link refid="class_usd_lux_sphere_light"/>
        <childnode refid="8089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8126">
        <label>UsdRenderSettings</label>
        <link refid="class_usd_render_settings"/>
        <childnode refid="8124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8105">
        <label>UsdLuxDomeLight_1</label>
        <link refid="class_usd_lux_dome_light__1"/>
        <childnode refid="8102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8130">
        <label>UsdShadeShader</label>
        <link refid="class_usd_shade_shader"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8062">
        <label>UsdSkelBindingAPI</label>
        <link refid="class_usd_skel_binding_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8097">
        <label>UsdSkelSkeleton</label>
        <link refid="class_usd_skel_skeleton"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8060">
        <label>UsdShadeMaterialBindingAPI</label>
        <link refid="class_usd_shade_material_binding_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8044">
        <label>UsdModelAPI</label>
        <link refid="class_usd_model_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8080">
        <label>UsdGeomBasisCurves</label>
        <link refid="class_usd_geom_basis_curves"/>
        <childnode refid="8079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8089">
        <label>UsdLuxBoundableLightBase</label>
        <link refid="class_usd_lux_boundable_light_base"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8073">
        <label>UsdGeomCone</label>
        <link refid="class_usd_geom_cone"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8036">
        <label>UsdLuxLightAPI</label>
        <link refid="class_usd_lux_light_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8121">
        <label>UsdPhysicsScene</label>
        <link refid="class_usd_physics_scene"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8056">
        <label>UsdRiSplineAPI</label>
        <link refid="class_usd_ri_spline_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8119">
        <label>UsdGeomSubset</label>
        <link refid="class_usd_geom_subset"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8072">
        <label>UsdGeomCapsule_1</label>
        <link refid="class_usd_geom_capsule__1"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8048">
        <label>UsdPhysicsFilteredPairsAPI</label>
        <link refid="class_usd_physics_filtered_pairs_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8088">
        <label>UsdGeomPointInstancer</label>
        <link refid="class_usd_geom_point_instancer"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8076">
        <label>UsdGeomCylinder_1</label>
        <link refid="class_usd_geom_cylinder__1"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8091">
        <label>UsdLuxDiskLight</label>
        <link refid="class_usd_lux_disk_light"/>
        <childnode refid="8089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8120">
        <label>UsdPhysicsCollisionGroup</label>
        <link refid="class_usd_physics_collision_group"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8066">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8061">
        <label>UsdShadeNodeDefAPI</label>
        <link refid="class_usd_shade_node_def_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8102">
        <label>UsdLuxNonboundableLightBase</label>
        <link refid="class_usd_lux_nonboundable_light_base"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8131">
        <label>UsdSkelAnimation</label>
        <link refid="class_usd_skel_animation"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8032">
        <label>UsdGeomPrimvarsAPI</label>
        <link refid="class_usd_geom_primvars_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8086">
        <label>UsdGeomSphere</label>
        <link refid="class_usd_geom_sphere"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8090">
        <label>UsdLuxCylinderLight</label>
        <link refid="class_usd_lux_cylinder_light"/>
        <childnode refid="8089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8050">
        <label>UsdPhysicsMassAPI</label>
        <link refid="class_usd_physics_mass_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8059">
        <label>UsdShadeCoordSysAPI</label>
        <link refid="class_usd_shade_coord_sys_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8079">
        <label>UsdGeomCurves</label>
        <link refid="class_usd_geom_curves"/>
        <childnode refid="8078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8087">
        <label>UsdVolVolume</label>
        <link refid="class_usd_vol_volume"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8041">
        <label>UsdLuxShapingAPI</label>
        <link refid="class_usd_lux_shaping_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8070">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8100">
        <label>UsdLuxLightFilter</label>
        <link refid="class_usd_lux_light_filter"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8104">
        <label>UsdLuxDomeLight</label>
        <link refid="class_usd_lux_dome_light"/>
        <childnode refid="8102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8129">
        <label>UsdShadeMaterial</label>
        <link refid="class_usd_shade_material"/>
        <childnode refid="8128" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8029">
        <label>UsdCollectionAPI</label>
        <link refid="class_usd_collection_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8122">
        <label>UsdRenderDenoisePass</label>
        <link refid="class_usd_render_denoise_pass"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8078">
        <label>UsdGeomPointBased</label>
        <link refid="class_usd_geom_point_based"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8107">
        <label>UsdLuxPluginLight</label>
        <link refid="class_usd_lux_plugin_light"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8065">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="8026" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8051">
        <label>UsdPhysicsMaterialAPI</label>
        <link refid="class_usd_physics_material_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8109">
        <label>UsdVolFieldBase</label>
        <link refid="class_usd_vol_field_base"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8063">
        <label>UsdUINodeGraphNodeAPI</label>
        <link refid="class_usd_u_i_node_graph_node_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8077">
        <label>UsdGeomPlane</label>
        <link refid="class_usd_geom_plane"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8074">
        <label>UsdGeomCube</label>
        <link refid="class_usd_geom_cube"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8052">
        <label>UsdPhysicsMeshCollisionAPI</label>
        <link refid="class_usd_physics_mesh_collision_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8084">
        <label>UsdGeomNurbsPatch</label>
        <link refid="class_usd_geom_nurbs_patch"/>
        <childnode refid="8078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8132">
        <label>UsdSkelBlendShape</label>
        <link refid="class_usd_skel_blend_shape"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8108">
        <label>UsdMediaSpatialAudio</label>
        <link refid="class_usd_media_spatial_audio"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8082">
        <label>UsdGeomNurbsCurves</label>
        <link refid="class_usd_geom_nurbs_curves"/>
        <childnode refid="8079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8115">
        <label>UsdPhysicsFixedJoint</label>
        <link refid="class_usd_physics_fixed_joint"/>
        <childnode refid="8113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8111">
        <label>UsdVolField3DAsset</label>
        <link refid="class_usd_vol_field3_d_asset"/>
        <childnode refid="8110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8085">
        <label>UsdGeomPoints</label>
        <link refid="class_usd_geom_points"/>
        <childnode refid="8078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8099">
        <label>UsdGeomXform</label>
        <link refid="class_usd_geom_xform"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8035">
        <label>UsdHydraGenerativeProceduralAPI</label>
        <link refid="class_usd_hydra_generative_procedural_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8026">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="8081">
        <label>UsdGeomHermiteCurves</label>
        <link refid="class_usd_geom_hermite_curves"/>
        <childnode refid="8079" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8128">
        <label>UsdShadeNodeGraph</label>
        <link refid="class_usd_shade_node_graph"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8106">
        <label>UsdLuxGeometryLight</label>
        <link refid="class_usd_lux_geometry_light"/>
        <childnode refid="8102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8127">
        <label>UsdRenderVar</label>
        <link refid="class_usd_render_var"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8098">
        <label>UsdGeomCamera</label>
        <link refid="class_usd_geom_camera"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8112">
        <label>UsdVolOpenVDBAsset</label>
        <link refid="class_usd_vol_open_v_d_b_asset"/>
        <childnode refid="8110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8114">
        <label>UsdPhysicsDistanceJoint</label>
        <link refid="class_usd_physics_distance_joint"/>
        <childnode refid="8113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8093">
        <label>UsdLuxRectLight</label>
        <link refid="class_usd_lux_rect_light"/>
        <childnode refid="8089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8103">
        <label>UsdLuxDistantLight</label>
        <link refid="class_usd_lux_distant_light"/>
        <childnode refid="8102" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8033">
        <label>UsdGeomVisibilityAPI</label>
        <link refid="class_usd_geom_visibility_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8110">
        <label>UsdVolFieldAsset</label>
        <link refid="class_usd_vol_field_asset"/>
        <childnode refid="8109" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8054">
        <label>UsdRiMaterialAPI</label>
        <link refid="class_usd_ri_material_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8043">
        <label>UsdMediaAssetPreviewsAPI</label>
        <link refid="class_usd_media_asset_previews_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8116">
        <label>UsdPhysicsPrismaticJoint</label>
        <link refid="class_usd_physics_prismatic_joint"/>
        <childnode refid="8113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8046">
        <label>UsdPhysicsCollisionAPI</label>
        <link refid="class_usd_physics_collision_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8040">
        <label>UsdLuxShadowAPI</label>
        <link refid="class_usd_lux_shadow_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8113">
        <label>UsdPhysicsJoint</label>
        <link refid="class_usd_physics_joint"/>
        <childnode refid="8066" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8064">
        <label>UsdUISceneGraphPrimAPI</label>
        <link refid="class_usd_u_i_scene_graph_prim_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8034">
        <label>UsdGeomXformCommonAPI</label>
        <link refid="class_usd_geom_xform_common_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8053">
        <label>UsdPhysicsRigidBodyAPI</label>
        <link refid="class_usd_physics_rigid_body_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8067">
        <label>UsdGeomScope</label>
        <link refid="class_usd_geom_scope"/>
        <childnode refid="8066" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8092">
        <label>UsdLuxPortalLight</label>
        <link refid="class_usd_lux_portal_light"/>
        <childnode refid="8089" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8095">
        <label>UsdProcGenerativeProcedural</label>
        <link refid="class_usd_proc_generative_procedural"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8038">
        <label>UsdLuxListAPI</label>
        <link refid="class_usd_lux_list_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8031">
        <label>UsdGeomMotionAPI</label>
        <link refid="class_usd_geom_motion_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8069">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="8068" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8125">
        <label>UsdRenderProduct</label>
        <link refid="class_usd_render_product"/>
        <childnode refid="8124" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8124">
        <label>UsdRenderSettingsBase</label>
        <link refid="class_usd_render_settings_base"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8123">
        <label>UsdRenderPass</label>
        <link refid="class_usd_render_pass"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8055">
        <label>UsdRiRenderPassAPI</label>
        <link refid="class_usd_ri_render_pass_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8101">
        <label>UsdLuxPluginLightFilter</label>
        <link refid="class_usd_lux_plugin_light_filter"/>
        <childnode refid="8100" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8045">
        <label>UsdPhysicsArticulationRootAPI</label>
        <link refid="class_usd_physics_articulation_root_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8027">
        <label>UsdAPISchemaBase</label>
        <link refid="class_usd_a_p_i_schema_base"/>
        <childnode refid="8026" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8030">
        <label>UsdGeomModelAPI</label>
        <link refid="class_usd_geom_model_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8096">
        <label>UsdSkelRoot</label>
        <link refid="class_usd_skel_root"/>
        <childnode refid="8069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8133">
        <label>UsdUIBackdrop</label>
        <link refid="class_usd_u_i_backdrop"/>
        <childnode refid="8065" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8028">
        <label>UsdClipsAPI</label>
        <link refid="class_usd_clips_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8071">
        <label>UsdGeomCapsule</label>
        <link refid="class_usd_geom_capsule"/>
        <childnode refid="8070" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8058">
        <label>UsdShadeConnectableAPI</label>
        <link refid="class_usd_shade_connectable_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8057">
        <label>UsdRiStatementsAPI</label>
        <link refid="class_usd_ri_statements_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8037">
        <label>UsdLuxLightListAPI</label>
        <link refid="class_usd_lux_light_list_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8047">
        <label>UsdPhysicsDriveAPI</label>
        <link refid="class_usd_physics_drive_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8042">
        <label>UsdLuxVolumeLightAPI</label>
        <link refid="class_usd_lux_volume_light_a_p_i"/>
        <childnode refid="8027" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8118">
        <label>UsdPhysicsSphericalJoint</label>
        <link refid="class_usd_physics_spherical_joint"/>
        <childnode refid="8113" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8068">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="8066" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/usd/usd/schemaBase.h" line="56" column="1" bodyfile="pxr/usd/usd/schemaBase.h" bodystart="56" bodyend="223"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdSchemaBase</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_schema_base_1ae6ef66077029b8412b299e9bd86f9dee" prot="protected" virt="virtual"><scope>UsdSchemaBase</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdSchemaBase</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_schema_base_1a86866fae65e3b935e7bd24b845c8e37e" prot="private" virt="non-virtual"><scope>UsdSchemaBase</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_schema_base_1aa4577cccb4c5a966a0eddedfa31dc0e5" prot="private" virt="virtual"><scope>UsdSchemaBase</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdSchemaBase</scope><name>_GetType</name></member>
      <member refid="class_usd_schema_base_1a4c09b7ee5dadb4e6f1013a1a4d56d264" prot="protected" virt="virtual"><scope>UsdSchemaBase</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_schema_base_1aaf4f179cf9a8ed5924af228c8155023b" prot="private" virt="non-virtual"><scope>UsdSchemaBase</scope><name>_primData</name></member>
      <member refid="class_usd_schema_base_1abd8f9a9cb0fc872b6f7f6a8288440c7e" prot="private" virt="non-virtual"><scope>UsdSchemaBase</scope><name>_proxyPrimPath</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>GetPrim</name></member>
      <member refid="class_usd_schema_base_1a47f45785a354d4ded0315458f4978980" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>IsTyped</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>operator bool</name></member>
      <member refid="class_usd_schema_base_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>schemaKind</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdSchemaBase</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdSchemaBase</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdSchemaBase</scope><name>~UsdSchemaBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
