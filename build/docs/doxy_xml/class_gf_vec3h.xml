<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_gf_vec3h" kind="class" language="C++" prot="public">
    <compoundname>GfVec3h</compoundname>
    <includes refid="vec3h_8h" local="no">vec3h.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_gf_vec3h_1a512284adad2afc1cb29997cf585d965d" prot="public" static="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>typedef GfHalf ScalarType</definition>
        <argsstring></argsstring>
        <name>ScalarType</name>
        <briefdescription>
<para>Scalar element type and dimension. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="67" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_gf_vec3h_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t dimension</definition>
        <argsstring></argsstring>
        <name>dimension</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="68" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_gf_vec3h_1afb5528b3f05faed5f73dea7388d2d759" prot="private" static="no" mutable="no">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf _data[3]</definition>
        <argsstring>[3]</argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="309" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_gf_vec3h_1aa5068374b70f2abed666346d7198a0a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GfVec3h</definition>
        <argsstring>()=default</argsstring>
        <name>GfVec3h</name>
        <briefdescription>
<para>Default constructor does no initialization. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a7d7554ba57881755235356e8faaf751e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec3h</definition>
        <argsstring>(GfHalf value)</argsstring>
        <name>GfVec3h</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Initialize all elements to a single value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="74" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1aef66dd39d2c824969e169a0a5f754598" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr GfVec3h</definition>
        <argsstring>(GfHalf s0, GfHalf s1, GfHalf s2)</argsstring>
        <name>GfVec3h</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Initialize all elements with explicit arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="80" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a8c014741c895394c94dd5d85d8c8c1fd" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Scl</type>
          </param>
        </templateparamlist>
        <type>constexpr</type>
        <definition>constexpr GfVec3h</definition>
        <argsstring>(Scl const *p)</argsstring>
        <name>GfVec3h</name>
        <param>
          <type>Scl const *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Construct with pointer to values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="87" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1ab5db3e3da1e9eff30bcd51c3243fe65d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec3h</definition>
        <argsstring>(class GfVec3d const &amp;other)</argsstring>
        <name>GfVec3h</name>
        <param>
          <type>class <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="93" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="326" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a868460d1bc8747be95260f3791b61b32" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec3h</definition>
        <argsstring>(class GfVec3f const &amp;other)</argsstring>
        <name>GfVec3h</name>
        <param>
          <type>class <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Construct from <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="96" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="333" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1adb118700058bef0160b782018fe3c443" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>GfVec3h</definition>
        <argsstring>(class GfVec3i const &amp;other)</argsstring>
        <name>GfVec3h</name>
        <param>
          <type>class <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implicitly convert from <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="99" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a087fcadda357bae0e028aae5eb8313c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>GfVec3h&amp; Set</definition>
        <argsstring>(GfHalf s0, GfHalf s1, GfHalf s2)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s1</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>s2</declname>
        </param>
        <briefdescription>
<para>Set all elements with passed arguments. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="130" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a6f0c7ec761566cdc21fdd51766773936" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>GfVec3h&amp; Set</definition>
        <argsstring>(GfHalf const *a)</argsstring>
        <name>Set</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>Set all elements with a pointer to data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="138" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1afafdbc3262e85ed2a72eb36060b3fc5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  *</type>
        <definition>GfHalf const* data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
<para>Direct data access. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="143" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a78cb19ccdc85588f4f9097d1f0f65eff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> *</type>
        <definition>GfHalf* data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="144" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a2353a58d92a73f16541a2732c5025c25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  *</type>
        <definition>GfHalf const* GetArray</definition>
        <argsstring>() const</argsstring>
        <name>GetArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="145" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a07e409d151715c0f1050f6c59701013b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> const  &amp;</type>
        <definition>GfHalf const&amp; operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Indexing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="148" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a90770070a228360ab6d6ebccbc7034fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref> &amp;</type>
        <definition>GfHalf&amp; operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="149" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a924508bbb3467b211256de29d09c2f94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(GfVec3h const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="157" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="157" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1aa9eebd41d0cdb410f545a0ca4099336d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(GfVec3h const &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="162" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a34b8031e6e165c02b00c1ed3366e7d30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec3d const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a44aeb62774052a6326b510f694451d5e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec3f const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1ad2f2927ae13aa143768635975dd4c5c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>GF_API bool operator==</definition>
        <argsstring>(class GfVec3i const &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>class <ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a2606f141e916191ad36a30da06832e55" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>Create a vec with negated elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="178" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="178" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a8fc65a73b6e6983b1e025450e1f8c27e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>GfVec3h&amp; operator+=</definition>
        <argsstring>(GfVec3h const &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Addition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="183" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="183" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a1d5844d3f3747a6d66f2248cc6ec3f60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>GfVec3h&amp; operator-=</definition>
        <argsstring>(GfVec3h const &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Subtraction. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="194" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1aeb28ae36ec5e5ba586938023cbce063d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>GfVec3h&amp; operator *=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Multiplication by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="205" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a2713bc6219d5bf568a6a260f443ab5f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h operator *</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="211" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a0998cdc803fd9fc721a93a36aa185c1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> &amp;</type>
        <definition>GfVec3h&amp; operator/=</definition>
        <argsstring>(double s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Division by scalar. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="220" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="220" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1af878e6676bfa5857d95c2752954b25ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h operator/</definition>
        <argsstring>(double s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="226" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1ae0c43073661172c2bf2c00984bbd792c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf operator *</definition>
        <argsstring>(GfVec3h const &amp;v) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>See <ref refid="dual_quatd_8h_1a630afdf6ab5e490ac0ac75a890aec03b" kindref="member">GfDot()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="231" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1af5db32f79621fa1bab1276455dc2a45c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h GetProjection</definition>
        <argsstring>(GfVec3h const &amp;v) const</argsstring>
        <name>GetProjection</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the projection of <computeroutput>this</computeroutput> onto <computeroutput>v</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">v<sp/>*<sp/>(*this<sp/>*<sp/>v)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="239" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a76b6cfd083f55b5bfe0cac52909c7bca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h GetComplement</definition>
        <argsstring>(GfVec3h const &amp;b) const</argsstring>
        <name>GetComplement</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the orthogonal complement of <computeroutput>this-&gt;GetProjection(b)</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>That is: <programlisting><codeline><highlight class="normal">*this<sp/>-<sp/>this-&gt;GetProjection(b)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="248" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a98273f3be3eaaafbf30c3ef142e6c570" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLengthSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLengthSq</name>
        <briefdescription>
<para>Squared length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="253" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf GetLength</definition>
        <argsstring>() const</argsstring>
        <name>GetLength</name>
        <briefdescription>
<para>Length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="258" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a865d492c9cd8cd8c0334f92b77b012e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
        <definition>GfHalf Normalize</definition>
        <argsstring>(GfHalf eps=0.001)</argsstring>
        <name>Normalize</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
<para>Normalizes the vector in place to unit length, returning the length before normalization. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length of the vector is smaller than <computeroutput>eps</computeroutput>, then the vector is set to vector/<computeroutput>eps</computeroutput>. The original length of the vector is returned. See also <ref refid="vec2d_8h_1aba4a21e52a2e2d5a01caaa5021d46e17" kindref="member">GfNormalize()</ref>.</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="270" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="270" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1afd7f422dad14597669e7007a490cce59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h GetNormalized</definition>
        <argsstring>(GfHalf eps=0.001) const</argsstring>
        <name>GetNormalized</name>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="278" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="278" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a38495bed870a66cb1684eaf2180580dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API void</type>
        <definition>GF_API void BuildOrthonormalFrame</definition>
        <argsstring>(GfVec3h *v1, GfVec3h *v2, GfHalf eps=0.001) const</argsstring>
        <name>BuildOrthonormalFrame</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>v1</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>v2</declname>
        </param>
        <param>
          <type><ref refid="half_8h_1a45f2f25266e2a34e02c26a2e61f67bd5" kindref="member">GfHalf</ref></type>
          <declname>eps</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
<para>Sets <computeroutput>v1</computeroutput> and <computeroutput>v2</computeroutput> to unit vectors such that v1, v2 and *this are mutually orthogonal. </para>
        </briefdescription>
        <detaileddescription>
<para>If the length L of *this is smaller than <computeroutput>eps</computeroutput>, then v1 and v2 will have magnitude L/eps. As a result, the function delivers a continuous result as *this shrinks in length. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="304" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_gf_vec3h_1aa0c540764d4175a8bba171ff75a74a1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>static GfVec3h XAxis</definition>
        <argsstring>()</argsstring>
        <name>XAxis</name>
        <briefdescription>
<para>Create a unit vector along the X-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="102" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1ac8749d9104ec4ffabb5c1c65404ed58b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>static GfVec3h YAxis</definition>
        <argsstring>()</argsstring>
        <name>YAxis</name>
        <briefdescription>
<para>Create a unit vector along the Y-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="108" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1aa798819ba583aab8bddbe4c799379e70" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>static GfVec3h ZAxis</definition>
        <argsstring>()</argsstring>
        <name>ZAxis</name>
        <briefdescription>
<para>Create a unit vector along the Z-axis. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="114" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="114" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1af2e1f4aefd10c25d0dd6f22adfac50a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>static GfVec3h Axis</definition>
        <argsstring>(size_t i)</argsstring>
        <name>Axis</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Create a unit vector along the i-th axis, zero-based. </para>
        </briefdescription>
        <detaileddescription>
<para>Return the zero vector if <computeroutput>i</computeroutput> is greater than or equal to 3. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="122" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="122" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_gf_vec3h_1a5a26f578ec922c51ff8a24ec149cfa69" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API bool</type>
        <definition>static GF_API bool OrthogonalizeBasis</definition>
        <argsstring>(GfVec3h *tx, GfVec3h *ty, GfVec3h *tz, const bool normalize, double eps=GF_MIN_ORTHO_TOLERANCE)</argsstring>
        <name>OrthogonalizeBasis</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>tx</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>ty</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *</type>
          <declname>tz</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>normalize</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval><ref refid="group__group__gf___linear_algebra_1ga85234a23eefa21de1dcf309d445b688e" kindref="member">GF_MIN_ORTHO_TOLERANCE</ref></defval>
        </param>
        <briefdescription>
<para>Orthogonalize and optionally normalize a set of basis vectors. </para>
        </briefdescription>
        <detaileddescription>
<para>This uses an iterative method that is very stable even when the vectors are far from orthogonal (close to colinear). The number of iterations and thus the computation time does increase as the vectors become close to colinear, however. Returns a bool specifying whether the solution converged after a number of iterations. If it did not converge, the returned vectors will be as close as possible to orthogonal within the iteration limit. Colinear vectors will be unaltered, and the method will return false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="294" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_gf_vec3h_1a8132b179536066594850bc8c0c18ddd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(GfVec3h const &amp;vec)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="152" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec3h_1a22af4ef061b708e4c3b65b83671d1c30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h operator+</definition>
        <argsstring>(GfVec3h const &amp;l, GfVec3h const &amp;r)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="189" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec3h_1aed08652a83d2aac3f3ab3a7d6b321dd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h operator-</definition>
        <argsstring>(GfVec3h const &amp;l, GfVec3h const &amp;r)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="200" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="friend" id="class_gf_vec3h_1a44c3fa6c2dd8e02c1309984ce5c646ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref></type>
        <definition>GfVec3h operator *</definition>
        <argsstring>(double s, GfVec3h const &amp;v)</argsstring>
        <name>operator *</name>
        <param>
          <type>double</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> const &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/vec3h.h" line="214" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="214" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Basic type for a vector of 3 GfHalf components. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a vector of 3 components of type <computeroutput>GfHalf</computeroutput>. It is intended to be fast and simple. </para>
    </detaileddescription>
    <location file="pxr/base/gf/vec3h.h" line="64" column="1" bodyfile="pxr/base/gf/vec3h.h" bodystart="63" bodyend="310"/>
    <listofallmembers>
      <member refid="class_gf_vec3h_1afb5528b3f05faed5f73dea7388d2d759" prot="private" virt="non-virtual"><scope>GfVec3h</scope><name>_data</name></member>
      <member refid="class_gf_vec3h_1af2e1f4aefd10c25d0dd6f22adfac50a1" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>Axis</name></member>
      <member refid="class_gf_vec3h_1a38495bed870a66cb1684eaf2180580dd" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>BuildOrthonormalFrame</name></member>
      <member refid="class_gf_vec3h_1afafdbc3262e85ed2a72eb36060b3fc5b" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>data</name></member>
      <member refid="class_gf_vec3h_1a78cb19ccdc85588f4f9097d1f0f65eff" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>data</name></member>
      <member refid="class_gf_vec3h_1a18dbd530c26457eb5c19d22bef9ebbe1" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>dimension</name></member>
      <member refid="class_gf_vec3h_1a2353a58d92a73f16541a2732c5025c25" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GetArray</name></member>
      <member refid="class_gf_vec3h_1a76b6cfd083f55b5bfe0cac52909c7bca" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GetComplement</name></member>
      <member refid="class_gf_vec3h_1a4379d7e58dd16f2ef0205e85bf7bb05e" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GetLength</name></member>
      <member refid="class_gf_vec3h_1a98273f3be3eaaafbf30c3ef142e6c570" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GetLengthSq</name></member>
      <member refid="class_gf_vec3h_1afd7f422dad14597669e7007a490cce59" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GetNormalized</name></member>
      <member refid="class_gf_vec3h_1af5db32f79621fa1bab1276455dc2a45c" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GetProjection</name></member>
      <member refid="class_gf_vec3h_1aa5068374b70f2abed666346d7198a0a2" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1a7d7554ba57881755235356e8faaf751e" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1aef66dd39d2c824969e169a0a5f754598" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1a8c014741c895394c94dd5d85d8c8c1fd" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1ab5db3e3da1e9eff30bcd51c3243fe65d" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1a868460d1bc8747be95260f3791b61b32" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1adb118700058bef0160b782018fe3c443" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>GfVec3h</name></member>
      <member refid="class_gf_vec3h_1a8132b179536066594850bc8c0c18ddd0" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>hash_value</name></member>
      <member refid="class_gf_vec3h_1a865d492c9cd8cd8c0334f92b77b012e3" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>Normalize</name></member>
      <member refid="class_gf_vec3h_1a2713bc6219d5bf568a6a260f443ab5f1" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator *</name></member>
      <member refid="class_gf_vec3h_1a44c3fa6c2dd8e02c1309984ce5c646ad" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator *</name></member>
      <member refid="class_gf_vec3h_1ae0c43073661172c2bf2c00984bbd792c" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator *</name></member>
      <member refid="class_gf_vec3h_1aeb28ae36ec5e5ba586938023cbce063d" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator *=</name></member>
      <member refid="class_gf_vec3h_1aa9eebd41d0cdb410f545a0ca4099336d" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator!=</name></member>
      <member refid="class_gf_vec3h_1a22af4ef061b708e4c3b65b83671d1c30" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator+</name></member>
      <member refid="class_gf_vec3h_1a8fc65a73b6e6983b1e025450e1f8c27e" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator+=</name></member>
      <member refid="class_gf_vec3h_1a2606f141e916191ad36a30da06832e55" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator-</name></member>
      <member refid="class_gf_vec3h_1aed08652a83d2aac3f3ab3a7d6b321dd5" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator-</name></member>
      <member refid="class_gf_vec3h_1a1d5844d3f3747a6d66f2248cc6ec3f60" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator-=</name></member>
      <member refid="class_gf_vec3h_1af878e6676bfa5857d95c2752954b25ca" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator/</name></member>
      <member refid="class_gf_vec3h_1a0998cdc803fd9fc721a93a36aa185c1b" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator/=</name></member>
      <member refid="class_gf_vec3h_1a924508bbb3467b211256de29d09c2f94" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator==</name></member>
      <member refid="class_gf_vec3h_1a34b8031e6e165c02b00c1ed3366e7d30" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator==</name></member>
      <member refid="class_gf_vec3h_1a44aeb62774052a6326b510f694451d5e" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator==</name></member>
      <member refid="class_gf_vec3h_1ad2f2927ae13aa143768635975dd4c5c8" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator==</name></member>
      <member refid="class_gf_vec3h_1a07e409d151715c0f1050f6c59701013b" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator[]</name></member>
      <member refid="class_gf_vec3h_1a90770070a228360ab6d6ebccbc7034fc" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>operator[]</name></member>
      <member refid="class_gf_vec3h_1a5a26f578ec922c51ff8a24ec149cfa69" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>OrthogonalizeBasis</name></member>
      <member refid="class_gf_vec3h_1a512284adad2afc1cb29997cf585d965d" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>ScalarType</name></member>
      <member refid="class_gf_vec3h_1a087fcadda357bae0e028aae5eb8313c4" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>Set</name></member>
      <member refid="class_gf_vec3h_1a6f0c7ec761566cdc21fdd51766773936" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>Set</name></member>
      <member refid="class_gf_vec3h_1aa0c540764d4175a8bba171ff75a74a1a" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>XAxis</name></member>
      <member refid="class_gf_vec3h_1ac8749d9104ec4ffabb5c1c65404ed58b" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>YAxis</name></member>
      <member refid="class_gf_vec3h_1aa798819ba583aab8bddbe4c799379e70" prot="public" virt="non-virtual"><scope>GfVec3h</scope><name>ZAxis</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
