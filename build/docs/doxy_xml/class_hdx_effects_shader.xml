<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hdx_effects_shader" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HdxEffectsShader</compoundname>
    <derivedcompoundref refid="class_hdx_fullscreen_shader" prot="public" virt="non-virtual">HdxFullscreenShader</derivedcompoundref>
    <includes refid="effects_shader_8h" local="no">effectsShader.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hdx_effects_shader_1a1a3ab6cafe5d5c90dbbd7f5fbd035ab6" prot="private" static="no" mutable="no">
        <type><ref refid="class_hgi" kindref="compound">Hgi</ref> *</type>
        <definition>Hgi* _hgi</definition>
        <argsstring></argsstring>
        <name>_hgi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="191" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1a60e28365d2ec670663a45a5ee4975117" prot="private" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string _debugName</definition>
        <argsstring></argsstring>
        <name>_debugName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="192" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1a2a4efef66b50226640d8a6b2a5e72410" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref></type>
        <definition>HgiGraphicsPipelineDesc _pipelineDesc</definition>
        <argsstring></argsstring>
        <name>_pipelineDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="193" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1ac4796e8befe211611a6c9d23f26cac3e" prot="private" static="no" mutable="no">
        <type><ref refid="class_hgi_handle" kindref="compound">HgiGraphicsPipelineHandle</ref></type>
        <definition>HgiGraphicsPipelineHandle _pipeline</definition>
        <argsstring></argsstring>
        <name>_pipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="194" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1adadf8e869740a2e36399b33ea8049e71" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; _constantsData</definition>
        <argsstring></argsstring>
        <name>_constantsData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="195" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1a84ee3ae66a0316fe2ddfe00b4a606ace" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hgi_resource_bindings_desc" kindref="compound">HgiResourceBindingsDesc</ref></type>
        <definition>HgiResourceBindingsDesc _resourceBindingsDesc</definition>
        <argsstring></argsstring>
        <name>_resourceBindingsDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="196" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1a019ebd502448baca33bb93dabbc8a626" prot="private" static="no" mutable="no">
        <type><ref refid="class_hgi_handle" kindref="compound">HgiResourceBindingsHandle</ref></type>
        <definition>HgiResourceBindingsHandle _resourceBindings</definition>
        <argsstring></argsstring>
        <name>_resourceBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="197" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hdx_effects_shader_1aef43ceddf168101e537f71693cd9cd35" prot="private" static="no" mutable="no">
        <type>HgiGraphicsCmdsUniquePtr</type>
        <definition>HgiGraphicsCmdsUniquePtr _gfxCmds</definition>
        <argsstring></argsstring>
        <name>_gfxCmds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="198" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hdx_effects_shader_1a39983ffb0ac3a7a04caf581e2fe74723" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDX_API</type>
        <definition>virtual HDX_API ~HdxEffectsShader</definition>
        <argsstring>()</argsstring>
        <name>~HdxEffectsShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="65" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hdx_effects_shader_1a06084c2d8eddccb1ef66d2a9666bda06" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void PrintCompileErrors</definition>
        <argsstring>(const HgiShaderFunctionHandle &amp;shaderFn)</argsstring>
        <name>PrintCompileErrors</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiShaderFunctionHandle</ref> &amp;</type>
          <declname>shaderFn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a881b91ab85cad984bd6a961bf86fa762" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void PrintCompileErrors</definition>
        <argsstring>(const HgiShaderProgramHandle &amp;shaderProgram)</argsstring>
        <name>PrintCompileErrors</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiShaderProgramHandle</ref> &amp;</type>
          <declname>shaderProgram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hdx_effects_shader_1a44237ea5ffc3d7a89a9c88e3fd12a0e6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxEffectsShader</definition>
        <argsstring>()=delete</argsstring>
        <name>HdxEffectsShader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a85653942d60a563fd895e1e122309aad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdxEffectsShader</definition>
        <argsstring>(const HdxEffectsShader &amp;)=delete</argsstring>
        <name>HdxEffectsShader</name>
        <param>
          <type>const <ref refid="class_hdx_effects_shader" kindref="compound">HdxEffectsShader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1ae5434818f55375d7ba3b511ab8333d59" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hdx_effects_shader" kindref="compound">HdxEffectsShader</ref> &amp;</type>
        <definition>HdxEffectsShader&amp; operator=</definition>
        <argsstring>(const HdxEffectsShader &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hdx_effects_shader" kindref="compound">HdxEffectsShader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1aa57e5ef18bd465059f2802789d07bf3a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API</type>
        <definition>HDX_API HdxEffectsShader</definition>
        <argsstring>(Hgi *hgi, const std::string &amp;debugName)</argsstring>
        <name>HdxEffectsShader</name>
        <param>
          <type><ref refid="class_hgi" kindref="compound">Hgi</ref> *</type>
          <declname>hgi</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>debugName</declname>
        </param>
        <briefdescription>
<para>Create a new shader object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hgi</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_hgi" kindref="compound">Hgi</ref> instance to use to create any GPU resources. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>debugName</parametername>
</parameternamelist>
<parameterdescription>
<para>Name used to tag GPU resources to aid in debugging. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a4c27a35b99638a86cd53b5595c6bf6b2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetColorAttachments</definition>
        <argsstring>(const HgiAttachmentDescVector &amp;colorAttachmentDescs)</argsstring>
        <name>_SetColorAttachments</name>
        <param>
          <type>const HgiAttachmentDescVector &amp;</type>
          <declname>colorAttachmentDescs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a011a68e050d609eef95f4904fae6ef24" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetDepthAttachment</definition>
        <argsstring>(const HgiAttachmentDesc &amp;depthAttachmentDesc)</argsstring>
        <name>_SetDepthAttachment</name>
        <param>
          <type>const <ref refid="struct_hgi_attachment_desc" kindref="compound">HgiAttachmentDesc</ref> &amp;</type>
          <declname>depthAttachmentDesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a2c7ced82471c136aa117eabcb560a351" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetPrimitiveType</definition>
        <argsstring>(HgiPrimitiveType primitiveType)</argsstring>
        <name>_SetPrimitiveType</name>
        <param>
          <type>HgiPrimitiveType</type>
          <declname>primitiveType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1aa5d796301a443da271140239a36b9b37" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetShaderProgram</definition>
        <argsstring>(const HgiShaderProgramHandle &amp;shaderProgram)</argsstring>
        <name>_SetShaderProgram</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiShaderProgramHandle</ref> &amp;</type>
          <declname>shaderProgram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1aa1a0f7fce0ae3cd2a1714c6ed69443f0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetVertexBufferDescs</definition>
        <argsstring>(const HgiVertexBufferDescVector &amp;vertexBufferDescs)</argsstring>
        <name>_SetVertexBufferDescs</name>
        <param>
          <type>const HgiVertexBufferDescVector &amp;</type>
          <declname>vertexBufferDescs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a516bcbbac28690c54cb201b09fa5923f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetDepthStencilState</definition>
        <argsstring>(const HgiDepthStencilState &amp;depthStencilState)</argsstring>
        <name>_SetDepthStencilState</name>
        <param>
          <type>const <ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref> &amp;</type>
          <declname>depthStencilState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1aad8271c029b30e2b3c47a42614deaf48" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetMultiSampleState</definition>
        <argsstring>(const HgiMultiSampleState &amp;multiSampleState)</argsstring>
        <name>_SetMultiSampleState</name>
        <param>
          <type>const <ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref> &amp;</type>
          <declname>multiSampleState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a91f10c2a6336b632f17e9a1dc29fedfe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetRasterizationState</definition>
        <argsstring>(const HgiRasterizationState &amp;rasterizationState)</argsstring>
        <name>_SetRasterizationState</name>
        <param>
          <type>const <ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref> &amp;</type>
          <declname>rasterizationState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1ac9808f565041c350da75064a07e85509" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetShaderConstants</definition>
        <argsstring>(uint32_t byteSize, const void *data, HgiShaderStage stageUsage)</argsstring>
        <name>_SetShaderConstants</name>
        <param>
          <type>uint32_t</type>
          <declname>byteSize</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>HgiShaderStage</type>
          <declname>stageUsage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a2ceaa071db5f8af15e083519156fea5f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetTextureBindings</definition>
        <argsstring>(const HgiTextureBindDescVector &amp;textures)</argsstring>
        <name>_SetTextureBindings</name>
        <param>
          <type>const HgiTextureBindDescVector &amp;</type>
          <declname>textures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a54290759f1fa20cc968e5500bf73536d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _SetBufferBindings</definition>
        <argsstring>(const HgiBufferBindDescVector &amp;buffers)</argsstring>
        <name>_SetBufferBindings</name>
        <param>
          <type>const HgiBufferBindDescVector &amp;</type>
          <declname>buffers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a8951fc4b2b28d6813be87fc7ca8a021a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _CreateAndSubmitGraphicsCmds</definition>
        <argsstring>(const HgiTextureHandleVector &amp;colorTextures, const HgiTextureHandleVector &amp;colorResolveTextures, const HgiTextureHandle &amp;depthTexture, const HgiTextureHandle &amp;depthResolveTexture, const GfVec4i &amp;viewport)</argsstring>
        <name>_CreateAndSubmitGraphicsCmds</name>
        <param>
          <type>const HgiTextureHandleVector &amp;</type>
          <declname>colorTextures</declname>
        </param>
        <param>
          <type>const HgiTextureHandleVector &amp;</type>
          <declname>colorResolveTextures</declname>
        </param>
        <param>
          <type>const HgiTextureHandle &amp;</type>
          <declname>depthTexture</declname>
        </param>
        <param>
          <type>const HgiTextureHandle &amp;</type>
          <declname>depthResolveTexture</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_vec4i" kindref="compound">GfVec4i</ref> &amp;</type>
          <declname>viewport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a5a87eb0e0f3f9835e6374a640312abd6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HDX_API void</type>
        <definition>virtual HDX_API void _RecordDrawCmds</definition>
        <argsstring>()=0</argsstring>
        <name>_RecordDrawCmds</name>
        <reimplementedby refid="class_hdx_fullscreen_shader_1a1f4c4d0b8eaab044cd94eeb5ca02e0ac">_RecordDrawCmds</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a324304e8512fce2fa56b5cae9a96ee64" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _DrawNonIndexed</definition>
        <argsstring>(const HgiBufferHandle &amp;vertexBuffer, uint32_t vertexCount, uint32_t baseVertex, uint32_t instanceCount, uint32_t baseInstance)</argsstring>
        <name>_DrawNonIndexed</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiBufferHandle</ref> &amp;</type>
          <declname>vertexBuffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>vertexCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baseVertex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baseInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a9b3f4e8b5d2faee43cd0fb47c899f9c5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _DrawIndexed</definition>
        <argsstring>(const HgiBufferHandle &amp;vertexBuffer, const HgiBufferHandle &amp;indexBuffer, uint32_t indexCount, uint32_t indexBufferByteOffset, uint32_t baseVertex, uint32_t instanceCount, uint32_t baseInstance)</argsstring>
        <name>_DrawIndexed</name>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiBufferHandle</ref> &amp;</type>
          <declname>vertexBuffer</declname>
        </param>
        <param>
          <type>const <ref refid="class_hgi_handle" kindref="compound">HgiBufferHandle</ref> &amp;</type>
          <declname>indexBuffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>indexCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>indexBufferByteOffset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baseVertex</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>instanceCount</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>baseInstance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a16f5049f3fc01c4beaff232f96bb3b89" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API <ref refid="class_hgi" kindref="compound">Hgi</ref> *</type>
        <definition>HDX_API Hgi* _GetHgi</definition>
        <argsstring>() const</argsstring>
        <name>_GetHgi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a9b9effa502a25d9dfd1f85ce763c60a2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API void</type>
        <definition>HDX_API void _DestroyShaderProgram</definition>
        <argsstring>(HgiShaderProgramHandle *shaderProgram)</argsstring>
        <name>_DestroyShaderProgram</name>
        <param>
          <type><ref refid="class_hgi_handle" kindref="compound">HgiShaderProgramHandle</ref> *</type>
          <declname>shaderProgram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a2307bdc7249c559fccb2e428bb6e6c15" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDX_API const std::string &amp;</type>
        <definition>HDX_API const std::string&amp; _GetDebugName</definition>
        <argsstring>() const</argsstring>
        <name>_GetDebugName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="178" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hdx_effects_shader_1a726beba33e86580e5fc64cf5eb04effc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _CreatePipeline</definition>
        <argsstring>(const HgiTextureHandleVector &amp;colorTextures, const HgiTextureHandleVector &amp;colorResolveTextures, const HgiTextureHandle &amp;depthTexture, const HgiTextureHandle &amp;depthResolveTexture)</argsstring>
        <name>_CreatePipeline</name>
        <param>
          <type>const HgiTextureHandleVector &amp;</type>
          <declname>colorTextures</declname>
        </param>
        <param>
          <type>const HgiTextureHandleVector &amp;</type>
          <declname>colorResolveTextures</declname>
        </param>
        <param>
          <type>const HgiTextureHandle &amp;</type>
          <declname>depthTexture</declname>
        </param>
        <param>
          <type>const HgiTextureHandle &amp;</type>
          <declname>depthResolveTexture</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1a99e438b39f1e166b800fd24dfc93175d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _DestroyPipeline</definition>
        <argsstring>()</argsstring>
        <name>_DestroyPipeline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1aa0b0ff99635f914281569b8fa80e0637" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _CreateResourceBindings</definition>
        <argsstring>()</argsstring>
        <name>_CreateResourceBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hdx_effects_shader_1aebec9f97c085400577e5c4c80ed4f4e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _DestroyResourceBindings</definition>
        <argsstring>()</argsstring>
        <name>_DestroyResourceBindings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdx/effectsShader.h" line="189" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides functionality to create and manage a single <ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref> instance and to issue draw calls to that instance. </para>
    </briefdescription>
    <detaileddescription>
<para>Sub-classes should define the actual interface for issuing the draw call leveraging the common functionality this class provides to facilitate that.</para>
<para>It is primarily intended to be used for full screen passes that perform a sceen-space effect. As an example, the <ref refid="class_hdx_fullscreen_shader" kindref="compound">HdxFullscreenShader</ref> class inherits from this class and makes use of the functions defined here to set up its pipeline and issue draw commands. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3542">
        <label>HdxFullscreenShader</label>
        <link refid="class_hdx_fullscreen_shader"/>
        <childnode refid="3541" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3541">
        <label>HdxEffectsShader</label>
        <link refid="class_hdx_effects_shader"/>
      </node>
    </inheritancegraph>
    <location file="pxr/imaging/hdx/effectsShader.h" line="62" column="1" bodyfile="pxr/imaging/hdx/effectsShader.h" bodystart="61" bodyend="199"/>
    <listofallmembers>
      <member refid="class_hdx_effects_shader_1adadf8e869740a2e36399b33ea8049e71" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_constantsData</name></member>
      <member refid="class_hdx_effects_shader_1a8951fc4b2b28d6813be87fc7ca8a021a" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_CreateAndSubmitGraphicsCmds</name></member>
      <member refid="class_hdx_effects_shader_1a726beba33e86580e5fc64cf5eb04effc" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_CreatePipeline</name></member>
      <member refid="class_hdx_effects_shader_1aa0b0ff99635f914281569b8fa80e0637" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_CreateResourceBindings</name></member>
      <member refid="class_hdx_effects_shader_1a60e28365d2ec670663a45a5ee4975117" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_debugName</name></member>
      <member refid="class_hdx_effects_shader_1a99e438b39f1e166b800fd24dfc93175d" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_DestroyPipeline</name></member>
      <member refid="class_hdx_effects_shader_1aebec9f97c085400577e5c4c80ed4f4e3" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_DestroyResourceBindings</name></member>
      <member refid="class_hdx_effects_shader_1a9b9effa502a25d9dfd1f85ce763c60a2" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_DestroyShaderProgram</name></member>
      <member refid="class_hdx_effects_shader_1a9b3f4e8b5d2faee43cd0fb47c899f9c5" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_DrawIndexed</name></member>
      <member refid="class_hdx_effects_shader_1a324304e8512fce2fa56b5cae9a96ee64" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_DrawNonIndexed</name></member>
      <member refid="class_hdx_effects_shader_1a2307bdc7249c559fccb2e428bb6e6c15" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_GetDebugName</name></member>
      <member refid="class_hdx_effects_shader_1a16f5049f3fc01c4beaff232f96bb3b89" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_GetHgi</name></member>
      <member refid="class_hdx_effects_shader_1aef43ceddf168101e537f71693cd9cd35" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_gfxCmds</name></member>
      <member refid="class_hdx_effects_shader_1a1a3ab6cafe5d5c90dbbd7f5fbd035ab6" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_hgi</name></member>
      <member refid="class_hdx_effects_shader_1ac4796e8befe211611a6c9d23f26cac3e" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_pipeline</name></member>
      <member refid="class_hdx_effects_shader_1a2a4efef66b50226640d8a6b2a5e72410" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_pipelineDesc</name></member>
      <member refid="class_hdx_effects_shader_1a5a87eb0e0f3f9835e6374a640312abd6" prot="protected" virt="pure-virtual"><scope>HdxEffectsShader</scope><name>_RecordDrawCmds</name></member>
      <member refid="class_hdx_effects_shader_1a019ebd502448baca33bb93dabbc8a626" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_resourceBindings</name></member>
      <member refid="class_hdx_effects_shader_1a84ee3ae66a0316fe2ddfe00b4a606ace" prot="private" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_resourceBindingsDesc</name></member>
      <member refid="class_hdx_effects_shader_1a54290759f1fa20cc968e5500bf73536d" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetBufferBindings</name></member>
      <member refid="class_hdx_effects_shader_1a4c27a35b99638a86cd53b5595c6bf6b2" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetColorAttachments</name></member>
      <member refid="class_hdx_effects_shader_1a011a68e050d609eef95f4904fae6ef24" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetDepthAttachment</name></member>
      <member refid="class_hdx_effects_shader_1a516bcbbac28690c54cb201b09fa5923f" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetDepthStencilState</name></member>
      <member refid="class_hdx_effects_shader_1aad8271c029b30e2b3c47a42614deaf48" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetMultiSampleState</name></member>
      <member refid="class_hdx_effects_shader_1a2c7ced82471c136aa117eabcb560a351" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetPrimitiveType</name></member>
      <member refid="class_hdx_effects_shader_1a91f10c2a6336b632f17e9a1dc29fedfe" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetRasterizationState</name></member>
      <member refid="class_hdx_effects_shader_1ac9808f565041c350da75064a07e85509" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetShaderConstants</name></member>
      <member refid="class_hdx_effects_shader_1aa5d796301a443da271140239a36b9b37" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetShaderProgram</name></member>
      <member refid="class_hdx_effects_shader_1a2ceaa071db5f8af15e083519156fea5f" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetTextureBindings</name></member>
      <member refid="class_hdx_effects_shader_1aa1a0f7fce0ae3cd2a1714c6ed69443f0" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>_SetVertexBufferDescs</name></member>
      <member refid="class_hdx_effects_shader_1a44237ea5ffc3d7a89a9c88e3fd12a0e6" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>HdxEffectsShader</name></member>
      <member refid="class_hdx_effects_shader_1a85653942d60a563fd895e1e122309aad" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>HdxEffectsShader</name></member>
      <member refid="class_hdx_effects_shader_1aa57e5ef18bd465059f2802789d07bf3a" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>HdxEffectsShader</name></member>
      <member refid="class_hdx_effects_shader_1ae5434818f55375d7ba3b511ab8333d59" prot="protected" virt="non-virtual"><scope>HdxEffectsShader</scope><name>operator=</name></member>
      <member refid="class_hdx_effects_shader_1a06084c2d8eddccb1ef66d2a9666bda06" prot="public" virt="non-virtual"><scope>HdxEffectsShader</scope><name>PrintCompileErrors</name></member>
      <member refid="class_hdx_effects_shader_1a881b91ab85cad984bd6a961bf86fa762" prot="public" virt="non-virtual"><scope>HdxEffectsShader</scope><name>PrintCompileErrors</name></member>
      <member refid="class_hdx_effects_shader_1a39983ffb0ac3a7a04caf581e2fe74723" prot="public" virt="virtual"><scope>HdxEffectsShader</scope><name>~HdxEffectsShader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
