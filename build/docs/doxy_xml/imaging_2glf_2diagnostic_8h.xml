<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="imaging_2glf_2diagnostic_8h" kind="file" language="C++">
    <compoundname>diagnostic.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="imaging_2glf_2api_8h" local="yes">pxr/imaging/glf/api.h</includes>
    <includes refid="gl_api_8h" local="yes">pxr/imaging/garch/glApi.h</includes>
    <includes refid="base_2tf_2diagnostic_8h" local="yes">pxr/base/tf/diagnostic.h</includes>
    <includes local="no">string</includes>
    <includes local="no">cstdint</includes>
    <incdepgraph>
      <node id="55774">
        <label>locale</label>
      </node>
      <node id="55754">
        <label>pxr/imaging/glf/api.h</label>
        <link refid="imaging_2glf_2api_8h_source"/>
        <childnode refid="55755" relation="include">
        </childnode>
      </node>
      <node id="55776">
        <label>stdarg.h</label>
      </node>
      <node id="55755">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="55756" relation="include">
        </childnode>
      </node>
      <node id="55777">
        <label>cstdint</label>
      </node>
      <node id="55773">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55768" relation="include">
        </childnode>
        <childnode refid="55767" relation="include">
        </childnode>
        <childnode refid="55756" relation="include">
        </childnode>
        <childnode refid="55774" relation="include">
        </childnode>
        <childnode refid="55775" relation="include">
        </childnode>
        <childnode refid="55765" relation="include">
        </childnode>
      </node>
      <node id="55760">
        <label>stdint.h</label>
      </node>
      <node id="55758">
        <label>pxr/imaging/garch/api.h</label>
        <link refid="imaging_2garch_2api_8h_source"/>
        <childnode refid="55755" relation="include">
        </childnode>
      </node>
      <node id="55765">
        <label>string</label>
      </node>
      <node id="55752">
        <label>pxr/imaging/glf/diagnostic.h</label>
        <link refid="imaging_2glf_2diagnostic_8h"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55754" relation="include">
        </childnode>
        <childnode refid="55757" relation="include">
        </childnode>
        <childnode refid="55761" relation="include">
        </childnode>
        <childnode refid="55765" relation="include">
        </childnode>
        <childnode refid="55777" relation="include">
        </childnode>
      </node>
      <node id="55767">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55755" relation="include">
        </childnode>
      </node>
      <node id="55753">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="55772">
        <label>stddef.h</label>
      </node>
      <node id="55769">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55756" relation="include">
        </childnode>
      </node>
      <node id="55759">
        <label>pxr/imaging/garch/khrplatform.h</label>
        <link refid="khrplatform_8h_source"/>
        <childnode refid="55760" relation="include">
        </childnode>
      </node>
      <node id="55757">
        <label>pxr/imaging/garch/glApi.h</label>
        <link refid="gl_api_8h_source"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55758" relation="include">
        </childnode>
        <childnode refid="55759" relation="include">
        </childnode>
      </node>
      <node id="55775">
        <label>any</label>
      </node>
      <node id="55768">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="55755" relation="include">
        </childnode>
      </node>
      <node id="55762">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55763" relation="include">
        </childnode>
        <childnode refid="55764" relation="include">
        </childnode>
        <childnode refid="55765" relation="include">
        </childnode>
      </node>
      <node id="55756">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="55770">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="55756" relation="include">
        </childnode>
      </node>
      <node id="55771">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55768" relation="include">
        </childnode>
        <childnode refid="55764" relation="include">
        </childnode>
        <childnode refid="55772" relation="include">
        </childnode>
      </node>
      <node id="55766">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55767" relation="include">
        </childnode>
        <childnode refid="55768" relation="include">
        </childnode>
        <childnode refid="55769" relation="include">
        </childnode>
        <childnode refid="55770" relation="include">
        </childnode>
        <childnode refid="55771" relation="include">
        </childnode>
        <childnode refid="55772" relation="include">
        </childnode>
      </node>
      <node id="55763">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="55755" relation="include">
        </childnode>
      </node>
      <node id="55764">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="55756" relation="include">
        </childnode>
      </node>
      <node id="55761">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="55753" relation="include">
        </childnode>
        <childnode refid="55762" relation="include">
        </childnode>
        <childnode refid="55766" relation="include">
        </childnode>
        <childnode refid="55768" relation="include">
        </childnode>
        <childnode refid="55770" relation="include">
        </childnode>
        <childnode refid="55773" relation="include">
        </childnode>
        <childnode refid="55772" relation="include">
        </childnode>
        <childnode refid="55776" relation="include">
        </childnode>
        <childnode refid="55765" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_glf_debug_group" prot="public">GlfDebugGroup</innerclass>
    <innerclass refid="class_glf_g_l_query_object" prot="public">GlfGLQueryObject</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="imaging_2glf_2diagnostic_8h_1aab87fcf1032c2719b00b03e7afd8ef09" prot="public" static="no">
        <name>GLF_POST_PENDING_GL_ERRORS</name>
        <param></param>
        <initializer><ref refid="imaging_2glf_2diagnostic_8h_1a8289404ff36b2e3ef09add524eeea32c" kindref="member">GlfPostPendingGLErrors</ref>(__ARCH_PRETTY_FUNCTION__)</initializer>
        <briefdescription>
<para>Posts diagnostic errors for all GL errors in the current context. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro tags the diagnostic errors with the name of the calling function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="43" column="9" bodyfile="pxr/imaging/glf/diagnostic.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imaging_2glf_2diagnostic_8h_1a101ffc1bce70919497826a4cd09b4594" prot="public" static="no">
        <name>GLF_GROUP_FUNCTION</name>
        <param></param>
        <initializer><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> __glf_group_function(__ARCH_PRETTY_FUNCTION__)</initializer>
        <briefdescription>
<para>Emit a <ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> tracing the current function. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="68" column="9" bodyfile="pxr/imaging/glf/diagnostic.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="imaging_2glf_2diagnostic_8h_1a1d71df3706a87c9b96d9dae79090fad2" prot="public" static="no">
        <name>GLF_GROUP_SCOPE</name>
        <param><defname>str</defname></param>
        <initializer><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> __glf_group_scope(str)</initializer>
        <briefdescription>
<para>Emit a <ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref> tracing the current scope with the given string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="72" column="9" bodyfile="pxr/imaging/glf/diagnostic.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1a8289404ff36b2e3ef09add524eeea32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void GlfPostPendingGLErrors</definition>
        <argsstring>(std::string const &amp;where=std::string())</argsstring>
        <name>GlfPostPendingGLErrors</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>where</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
<para>Posts diagnostic errors for all GL errors in the current context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1a32980bb2731318ce32e25557ef964bff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void GlfRegisterDefaultDebugOutputMessageCallback</definition>
        <argsstring>()</argsstring>
        <name>GlfRegisterDefaultDebugOutputMessageCallback</name>
        <briefdescription>
<para>Registers GlfDefaultDebugOutputMessageCallback as the debug message callback for the current GL context. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1a48cac20c371943169584abe0e6592c1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void GlfDefaultDebugOutputMessageCallback</definition>
        <argsstring>(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, char const *message, GLvoid const *userParam)</argsstring>
        <name>GlfDefaultDebugOutputMessageCallback</name>
        <param>
          <type>GLenum</type>
          <declname>source</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>severity</declname>
        </param>
        <param>
          <type>GLsizei</type>
          <declname>length</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>GLvoid const *</type>
          <declname>userParam</declname>
        </param>
        <briefdescription>
<para>A GL debug output message callback method which posts diagnostic errors for messages of type DEBUG_TYPE_ERROR and diagnostic warnings for other message types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1a7f273fb4a996ae5a1a12393c7b5f6a8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API char const  *</type>
        <definition>GLF_API char const* GlfDebugEnumToString</definition>
        <argsstring>(GLenum debugEnum)</argsstring>
        <name>GlfDebugEnumToString</name>
        <param>
          <type>GLenum</type>
          <declname>debugEnum</declname>
        </param>
        <briefdescription>
<para>Returns a string representation of debug output enum values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1a038e047017c8eb3d920b503bdb9b7762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void GlfDebugLabelBuffer</definition>
        <argsstring>(GLuint id, char const *label)</argsstring>
        <name>GlfDebugLabelBuffer</name>
        <param>
          <type>GLuint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Label a buffer object to improve tracing in the debug output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1ad865ee47facd79487f33514ed5ea2fc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void GlfDebugLabelShader</definition>
        <argsstring>(GLuint id, char const *label)</argsstring>
        <name>GlfDebugLabelShader</name>
        <param>
          <type>GLuint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Label a shader object to improve tracing in the debug output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="imaging_2glf_2diagnostic_8h_1a1d8687074276b1a97b91bbcf84ea478f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void GlfDebugLabelProgram</definition>
        <argsstring>(GLuint id, char const *label)</argsstring>
        <name>GlfDebugLabelProgram</name>
        <param>
          <type>GLuint</type>
          <declname>id</declname>
        </param>
        <param>
          <type>char const *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
<para>Label a program object to improve tracing in the debug output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/diagnostic.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_IMAGING_GLF_DIAGNOSTIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_IMAGING_GLF_DIAGNOSTIC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/glf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/garch/glApi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2diagnostic_8h" kindref="compound">pxr/base/tf/diagnostic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="imaging_2glf_2diagnostic_8h_1aab87fcf1032c2719b00b03e7afd8ef09" refkind="member"><highlight class="preprocessor">#define<sp/>GLF_POST_PENDING_GL_ERRORS()<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GlfPostPendingGLErrors(__ARCH_PRETTY_FUNCTION__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2diagnostic_8h_1a8289404ff36b2e3ef09add524eeea32c" kindref="member">GlfPostPendingGLErrors</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>where<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2diagnostic_8h_1a32980bb2731318ce32e25557ef964bff" kindref="member">GlfRegisterDefaultDebugOutputMessageCallback</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2diagnostic_8h_1a48cac20c371943169584abe0e6592c1b" kindref="member">GlfDefaultDebugOutputMessageCallback</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLenum<sp/>source,<sp/>GLenum<sp/>type,<sp/>GLuint<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>GLenum<sp/>severity,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>length,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>message,<sp/>GLvoid<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/>userParam);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<sp/><ref refid="imaging_2glf_2diagnostic_8h_1a7f273fb4a996ae5a1a12393c7b5f6a8f" kindref="member">GlfDebugEnumToString</ref>(GLenum<sp/>debugEnum);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="imaging_2glf_2diagnostic_8h_1a101ffc1bce70919497826a4cd09b4594" refkind="member"><highlight class="preprocessor">#define<sp/>GLF_GROUP_FUNCTION()<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GlfDebugGroup<sp/>__glf_group_function(__ARCH_PRETTY_FUNCTION__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="imaging_2glf_2diagnostic_8h_1a1d71df3706a87c9b96d9dae79090fad2" refkind="member"><highlight class="preprocessor">#define<sp/>GLF_GROUP_SCOPE(str)<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>GlfDebugGroup<sp/>__glf_group_scope(str)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_glf_debug_group" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*message);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_debug_group_1a97173664de4e111762876ae11a97f288" kindref="member">~GlfDebugGroup</ref>();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref>(<ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref>&amp;<sp/>operator<sp/>=(<ref refid="class_glf_debug_group" kindref="compound">GlfDebugGroup</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2diagnostic_8h_1a038e047017c8eb3d920b503bdb9b7762" kindref="member">GlfDebugLabelBuffer</ref>(GLuint<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*label);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2diagnostic_8h_1ad865ee47facd79487f33514ed5ea2fc8" kindref="member">GlfDebugLabelShader</ref>(GLuint<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*label);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">GLF_API</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="imaging_2glf_2diagnostic_8h_1a1d8687074276b1a97b91bbcf84ea478f" kindref="member">GlfDebugLabelProgram</ref>(GLuint<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*label);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_glf_g_l_query_object" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_glf_g_l_query_object_1a3e84c4e72e2445ba3de5d4ddce75d8ae" kindref="member">Begin</ref>(GLenum<sp/>target);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_glf_g_l_query_object_1aa0e662620239f1c3b5bea0484af1093b" kindref="member">BeginSamplesPassed</ref>();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_glf_g_l_query_object_1a2fb66101cf7190716a2b0e7f931ef12b" kindref="member">BeginPrimitivesGenerated</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_glf_g_l_query_object_1ad48e813cc4894c7e83131808ee9ba66d" kindref="member">BeginTimeElapsed</ref>();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_glf_g_l_query_object_1a78438559b2d14604356436c398bcc100" kindref="member">End</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="class_glf_g_l_query_object_1a419a0edb8addf1adbce9f4cfd4d60e1c" kindref="member">GetResult</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>GLF_API</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="class_glf_g_l_query_object_1a51b75b982649706526cae671e60586d0" kindref="member">GetResultNoWait</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref>(<ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref>&amp;<sp/>operator<sp/>=(<ref refid="class_glf_g_l_query_object" kindref="compound">GlfGLQueryObject</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>_id;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/>_target;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">};</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/imaging/glf/diagnostic.h"/>
  </compounddef>
</doxygen>
