<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_expression_variables_dependency_data" kind="class" language="C++" prot="public">
    <compoundname>PcpExpressionVariablesDependencyData</compoundname>
    <includes refid="expression_variables_dependency_data_8h" local="no">expressionVariablesDependencyData.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_pcp_expression_variables_dependency_data_1a45266d54a8111aa376d7dc8a0274c997" prot="private" static="no">
        <type><ref refid="class_tf_function_ref" kindref="compound">TfFunctionRef</ref>&lt; void(const PcpLayerStackPtr &amp;, const std::unordered_set&lt; std::string &gt; &amp;)&gt;</type>
        <definition>using _ForEachFunctionRef =  TfFunctionRef&lt;void( const PcpLayerStackPtr&amp;, const std::unordered_set&lt;std::string&gt;&amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>_ForEachFunctionRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="99" column="1" bodyfile="pxr/usd/pcp/expressionVariablesDependencyData.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_pcp_expression_variables_dependency_data_1aa400b3588207926628ea9ee1337c3063" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; _Data &gt;</type>
        <definition>std::unique_ptr&lt;_Data&gt; _data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="109" column="1" bodyfile="pxr/usd/pcp/expressionVariablesDependencyData.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a1c53c2a1fffd035dc12b052dec36722a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpExpressionVariablesDependencyData</definition>
        <argsstring>()</argsstring>
        <name>PcpExpressionVariablesDependencyData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a2614909e767f1e1e17efba6c3596b1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API PcpExpressionVariablesDependencyData</definition>
        <argsstring>(PcpExpressionVariablesDependencyData &amp;&amp;)</argsstring>
        <name>PcpExpressionVariablesDependencyData</name>
        <param>
          <type><ref refid="class_pcp_expression_variables_dependency_data" kindref="compound">PcpExpressionVariablesDependencyData</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a2e3533a80297a66853b09be20d41096b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API ~PcpExpressionVariablesDependencyData</definition>
        <argsstring>()</argsstring>
        <name>~PcpExpressionVariablesDependencyData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1aa3aafa8db28ea62a9adb23ec62ac9823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API <ref refid="class_pcp_expression_variables_dependency_data" kindref="compound">PcpExpressionVariablesDependencyData</ref> &amp;</type>
        <definition>PCP_API PcpExpressionVariablesDependencyData&amp; operator=</definition>
        <argsstring>(PcpExpressionVariablesDependencyData &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_pcp_expression_variables_dependency_data" kindref="compound">PcpExpressionVariablesDependencyData</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a23055e9a75bfa1af8ea4462f232b3ab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API bool</type>
        <definition>PCP_API bool IsEmpty</definition>
        <argsstring>() const</argsstring>
        <name>IsEmpty</name>
        <briefdescription>
<para>Returns true if any dependencies have been recorded, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1ab7dd0291e6aba7de81e12a100dc55a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API void</type>
        <definition>PCP_API void AppendDependencyData</definition>
        <argsstring>(PcpExpressionVariablesDependencyData &amp;&amp;data)</argsstring>
        <name>AppendDependencyData</name>
        <param>
          <type><ref refid="class_pcp_expression_variables_dependency_data" kindref="compound">PcpExpressionVariablesDependencyData</ref> &amp;&amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Moves dependencies in <computeroutput>data</computeroutput> and appends it to the dependencies in this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a5682a54d6605c5c294b1d0f21af2a155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API void</type>
        <definition>PCP_API void AddDependencies</definition>
        <argsstring>(const PcpLayerStackPtr &amp;layerStack, std::unordered_set&lt; std::string &gt; &amp;&amp;exprVarDependencies)</argsstring>
        <name>AddDependencies</name>
        <param>
          <type>const PcpLayerStackPtr &amp;</type>
          <declname>layerStack</declname>
        </param>
        <param>
          <type>std::unordered_set&lt; std::string &gt; &amp;&amp;</type>
          <declname>exprVarDependencies</declname>
        </param>
        <briefdescription>
<para>Adds dependencies on the expression variables in <computeroutput>exprVarDependencies</computeroutput> from <computeroutput>layerStack</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a0a8b250fba6fac2bed1fec46d6455041" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Callback</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ForEachDependency</definition>
        <argsstring>(const Callback &amp;callback) const</argsstring>
        <name>ForEachDependency</name>
        <param>
          <type>const Callback &amp;</type>
          <declname>callback</declname>
        </param>
        <briefdescription>
<para>Runs the given <computeroutput>callback</computeroutput> on all of the dependencies in this object. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>callback</computeroutput> must have the signature:</para>
<para>void(const PcpLayerStack&amp;, const std::unordered_set&lt;std::string&gt;&amp;)</para>
<para>The first argument is the layer stack associated with the expression variables in the second argument. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="85" column="1" bodyfile="pxr/usd/pcp/expressionVariablesDependencyData.h" bodystart="85" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a3fc0e4a618576c8cd1567d8595a0aec2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API const std::unordered_set&lt; std::string &gt; *</type>
        <definition>PCP_API const std::unordered_set&lt;std::string&gt;* GetDependenciesForLayerStack</definition>
        <argsstring>(const PcpLayerStackPtr &amp;layerStack) const</argsstring>
        <name>GetDependenciesForLayerStack</name>
        <param>
          <type>const PcpLayerStackPtr &amp;</type>
          <declname>layerStack</declname>
        </param>
        <briefdescription>
<para>Returns the expression variable dependencies associated with <computeroutput>layerStack</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no such dependencies have been added, returns nullptr. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a3b7a7cdaffd6e102242cfee8e00d5260" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API void</type>
        <definition>PCP_API void _ForEachDependency</definition>
        <argsstring>(const _ForEachFunctionRef &amp;fn) const</argsstring>
        <name>_ForEachDependency</name>
        <param>
          <type>const <ref refid="class_tf_function_ref" kindref="compound">_ForEachFunctionRef</ref> &amp;</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a222b54190f52fa0d73b385905b1d2df0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const _Data *</type>
        <definition>const _Data* _GetData</definition>
        <argsstring>() const</argsstring>
        <name>_GetData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_expression_variables_dependency_data_1a67c421329a2279c46fb63e1a4d5786a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>_Data &amp;</type>
        <definition>_Data&amp; _GetWritableData</definition>
        <argsstring>()</argsstring>
        <name>_GetWritableData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="107" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Captures the expression variables used by an associated prim index during composition. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/pcp/expressionVariablesDependencyData.h" line="45" column="1" bodyfile="pxr/usd/pcp/expressionVariablesDependencyData.h" bodystart="44" bodyend="110"/>
    <listofallmembers>
      <member refid="class_pcp_expression_variables_dependency_data_1aa400b3588207926628ea9ee1337c3063" prot="private" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>_data</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a3b7a7cdaffd6e102242cfee8e00d5260" prot="private" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>_ForEachDependency</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a45266d54a8111aa376d7dc8a0274c997" prot="private" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>_ForEachFunctionRef</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a222b54190f52fa0d73b385905b1d2df0" prot="private" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>_GetData</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a67c421329a2279c46fb63e1a4d5786a3" prot="private" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>_GetWritableData</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a5682a54d6605c5c294b1d0f21af2a155" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>AddDependencies</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1ab7dd0291e6aba7de81e12a100dc55a13" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>AppendDependencyData</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a0a8b250fba6fac2bed1fec46d6455041" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>ForEachDependency</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a3fc0e4a618576c8cd1567d8595a0aec2" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>GetDependenciesForLayerStack</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a23055e9a75bfa1af8ea4462f232b3ab1" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>IsEmpty</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1aa3aafa8db28ea62a9adb23ec62ac9823" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>operator=</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a1c53c2a1fffd035dc12b052dec36722a" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>PcpExpressionVariablesDependencyData</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a2614909e767f1e1e17efba6c3596b1c6" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>PcpExpressionVariablesDependencyData</name></member>
      <member refid="class_pcp_expression_variables_dependency_data_1a2e3533a80297a66853b09be20d41096b" prot="public" virt="non-virtual"><scope>PcpExpressionVariablesDependencyData</scope><name>~PcpExpressionVariablesDependencyData</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
