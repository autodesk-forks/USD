<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hgi_texture_gpu_to_cpu_op" kind="struct" language="C++" prot="public">
    <compoundname>HgiTextureGpuToCpuOp</compoundname>
    <includes refid="blit_cmds_ops_8h" local="no">blitCmdsOps.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hgi_texture_gpu_to_cpu_op_1a68948cf5c4eac9c6ac2e72b1fdad93bb" prot="public" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle gpuSourceTexture</definition>
        <argsstring></argsstring>
        <name>gpuSourceTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="78" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_texture_gpu_to_cpu_op_1ac124ae9f3ce5260ddaccf546d96d5da1" prot="public" static="no" mutable="no">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i sourceTexelOffset</definition>
        <argsstring></argsstring>
        <name>sourceTexelOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="79" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_texture_gpu_to_cpu_op_1a6bee6dfccd29b97a64df2beb8fe41b58" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t mipLevel</definition>
        <argsstring></argsstring>
        <name>mipLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="80" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_texture_gpu_to_cpu_op_1a4097521fbcc464f25e83b7d8d9cdd85a" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* cpuDestinationBuffer</definition>
        <argsstring></argsstring>
        <name>cpuDestinationBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="81" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_texture_gpu_to_cpu_op_1a2cdf10af03ac204d223619528a277562" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t destinationByteOffset</definition>
        <argsstring></argsstring>
        <name>destinationByteOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="82" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hgi_texture_gpu_to_cpu_op_1a28fb05d11874eaf9f2ac2dbcfe5acc72" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t destinationBufferByteSize</definition>
        <argsstring></argsstring>
        <name>destinationBufferByteSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="83" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_hgi_texture_gpu_to_cpu_op_1a739c5d3fc622938893f2dc9e26afc9d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HgiTextureGpuToCpuOp</definition>
        <argsstring>()</argsstring>
        <name>HgiTextureGpuToCpuOp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/blitCmdsOps.h" line="69" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="69" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes the properties needed to copy texture data from GPU to CPU. </para>
    </briefdescription>
    <detaileddescription>
<para>This copies one mip at a time.</para>
<para>It is the responsibility of the caller to:<itemizedlist>
<listitem><para>ensure the destination buffer is large enough to receive the data (keep in mind the destinationByteOffset, mipLevel, numLayers, etc).</para>
</listitem><listitem><para>ensure the source texture and destination buffer are valid at the time the command is executed.</para>
</listitem></itemizedlist>
</para>
<para><itemizedlist>
<listitem>
<para>gpuSourceTexture: The gpu texture to copy pixels from. </para>
</listitem>
<listitem>
<para>sourceTexelOffset: The texel offset (width, height, depth) of where to start copying. If the texture is a 2d_array the third element is the layer/slice. </para>
</listitem>
<listitem>
<para>mipLevel: Mip level to copy from. </para>
</listitem>
<listitem>
<para>cpuDestinationBuffer: The copy destination cpu buffer. </para>
</listitem>
<listitem>
<para>destinationByteOffset: The byte offset in destination buffer where to start copying the data to. </para>
</listitem>
<listitem>
<para>destinationBufferByteSize: Size of the destination buffer (in bytes) </para>
</listitem>
</itemizedlist>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4017">
        <label>HgiTextureGpuToCpuOp</label>
        <link refid="struct_hgi_texture_gpu_to_cpu_op"/>
        <childnode refid="4018" relation="usage">
          <edgelabel>gpuSourceTexture</edgelabel>
        </childnode>
        <childnode refid="4019" relation="usage">
          <edgelabel>sourceTexelOffset</edgelabel>
        </childnode>
      </node>
      <node id="4018">
        <label>HgiHandle&lt; class HgiTexture &gt;</label>
        <link refid="class_hgi_handle"/>
      </node>
      <node id="4019">
        <label>GfVec3i</label>
        <link refid="class_gf_vec3i"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/blitCmdsOps.h" line="68" column="1" bodyfile="pxr/imaging/hgi/blitCmdsOps.h" bodystart="67" bodyend="84"/>
    <listofallmembers>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1a4097521fbcc464f25e83b7d8d9cdd85a" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>cpuDestinationBuffer</name></member>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1a28fb05d11874eaf9f2ac2dbcfe5acc72" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>destinationBufferByteSize</name></member>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1a2cdf10af03ac204d223619528a277562" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>destinationByteOffset</name></member>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1a68948cf5c4eac9c6ac2e72b1fdad93bb" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>gpuSourceTexture</name></member>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1a739c5d3fc622938893f2dc9e26afc9d7" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>HgiTextureGpuToCpuOp</name></member>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1a6bee6dfccd29b97a64df2beb8fe41b58" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>mipLevel</name></member>
      <member refid="struct_hgi_texture_gpu_to_cpu_op_1ac124ae9f3ce5260ddaccf546d96d5da1" prot="public" virt="non-virtual"><scope>HgiTextureGpuToCpuOp</scope><name>sourceTexelOffset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
