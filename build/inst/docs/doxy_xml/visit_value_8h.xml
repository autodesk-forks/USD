<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="visit_value_8h" kind="file" language="C++">
    <compoundname>visitValue.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="vt_2value_8h" local="yes">pxr/base/vt/value.h</includes>
    <incdepgraph>
      <node id="96815">
        <label>list</label>
      </node>
      <node id="96777">
        <label>locale</label>
      </node>
      <node id="96823">
        <label>atomic</label>
      </node>
      <node id="96799">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="96800" relation="include">
        </childnode>
        <childnode refid="96794" relation="include">
        </childnode>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96774" relation="include">
        </childnode>
        <childnode refid="96801" relation="include">
        </childnode>
      </node>
      <node id="96819">
        <label>functional</label>
      </node>
      <node id="96773">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="96774" relation="include">
        </childnode>
      </node>
      <node id="96836">
        <label>limits</label>
      </node>
      <node id="96779">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="96848">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="96794">
        <label>cstdint</label>
      </node>
      <node id="96775">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="96774" relation="include">
        </childnode>
      </node>
      <node id="96807">
        <label>cmath</label>
      </node>
      <node id="96804">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96805" relation="include">
        </childnode>
        <childnode refid="96806" relation="include">
        </childnode>
        <childnode refid="96799" relation="include">
        </childnode>
        <childnode refid="96808" relation="include">
        </childnode>
        <childnode refid="96795" relation="include">
        </childnode>
      </node>
      <node id="96793">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96775" relation="include">
        </childnode>
        <childnode refid="96794" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
        <childnode refid="96795" relation="include">
        </childnode>
      </node>
      <node id="96814">
        <label>cstdarg</label>
      </node>
      <node id="96787">
        <label>string</label>
      </node>
      <node id="96828">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96783" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
        <childnode refid="96795" relation="include">
        </childnode>
      </node>
      <node id="96798">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96773" relation="include">
        </childnode>
      </node>
      <node id="96810">
        <label>map</label>
      </node>
      <node id="96800">
        <label>cinttypes</label>
      </node>
      <node id="96769">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="96844">
        <label>unordered_set</label>
      </node>
      <node id="96821">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="96822" relation="include">
        </childnode>
      </node>
      <node id="96785">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96786" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
        <childnode refid="96789" relation="include">
        </childnode>
      </node>
      <node id="96825">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="96773" relation="include">
        </childnode>
      </node>
      <node id="96842">
        <label>stddef.h</label>
      </node>
      <node id="96805">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96774" relation="include">
        </childnode>
      </node>
      <node id="96813">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="96774" relation="include">
        </childnode>
      </node>
      <node id="96796">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
      </node>
      <node id="96833">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96834" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
      </node>
      <node id="96832">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96833" relation="include">
        </childnode>
        <childnode refid="96835" relation="include">
        </childnode>
        <childnode refid="96837" relation="include">
        </childnode>
      </node>
      <node id="96834">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="96773" relation="include">
        </childnode>
      </node>
      <node id="96776">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="96775" relation="include">
        </childnode>
        <childnode refid="96777" relation="include">
        </childnode>
        <childnode refid="96778" relation="include">
        </childnode>
      </node>
      <node id="96801">
        <label>sys/types.h</label>
      </node>
      <node id="96802">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96774" relation="include">
        </childnode>
        <childnode refid="96785" relation="include">
        </childnode>
        <childnode refid="96803" relation="include">
        </childnode>
        <childnode refid="96813" relation="include">
        </childnode>
        <childnode refid="96796" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
        <childnode refid="96812" relation="include">
        </childnode>
      </node>
      <node id="96788">
        <label>typeinfo</label>
      </node>
      <node id="96781">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="96780">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="96838">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96839" relation="include">
        </childnode>
        <childnode refid="96803" relation="include">
        </childnode>
        <childnode refid="96843" relation="include">
        </childnode>
        <childnode refid="96793" relation="include">
        </childnode>
        <childnode refid="96823" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96812" relation="include">
        </childnode>
        <childnode refid="96811" relation="include">
        </childnode>
      </node>
      <node id="96822">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96823" relation="include">
        </childnode>
        <childnode refid="96824" relation="include">
        </childnode>
        <childnode refid="96794" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96812" relation="include">
        </childnode>
      </node>
      <node id="96806">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96774" relation="include">
        </childnode>
        <childnode refid="96799" relation="include">
        </childnode>
        <childnode refid="96807" relation="include">
        </childnode>
      </node>
      <node id="96768">
        <label>pxr/base/vt/visitValue.h</label>
        <link refid="visit_value_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96770" relation="include">
        </childnode>
      </node>
      <node id="96812">
        <label>vector</label>
      </node>
      <node id="96826">
        <label>pxr/base/vt/hash.h</label>
        <link refid="vt_2hash_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96825" relation="include">
        </childnode>
        <childnode refid="96803" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
        <childnode refid="96795" relation="include">
        </childnode>
      </node>
      <node id="96772">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="96773" relation="include">
        </childnode>
      </node>
      <node id="96784">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96776" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
      </node>
      <node id="96835">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="96836" relation="include">
        </childnode>
        <childnode refid="96833" relation="include">
        </childnode>
      </node>
      <node id="96795">
        <label>utility</label>
      </node>
      <node id="96816">
        <label>sstream</label>
      </node>
      <node id="96774">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="96829">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96825" relation="include">
        </childnode>
        <childnode refid="96813" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
      </node>
      <node id="96790">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="96774" relation="include">
        </childnode>
      </node>
      <node id="96803">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96804" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96809" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96810" relation="include">
        </childnode>
        <childnode refid="96783" relation="include">
        </childnode>
        <childnode refid="96811" relation="include">
        </childnode>
        <childnode refid="96789" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
        <childnode refid="96795" relation="include">
        </childnode>
        <childnode refid="96812" relation="include">
        </childnode>
      </node>
      <node id="96808">
        <label>math.h</label>
      </node>
      <node id="96797">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96798" relation="include">
        </childnode>
        <childnode refid="96790" relation="include">
        </childnode>
        <childnode refid="96799" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96802" relation="include">
        </childnode>
        <childnode refid="96814" relation="include">
        </childnode>
        <childnode refid="96809" relation="include">
        </childnode>
        <childnode refid="96815" relation="include">
        </childnode>
        <childnode refid="96811" relation="include">
        </childnode>
        <childnode refid="96816" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
        <childnode refid="96812" relation="include">
        </childnode>
      </node>
      <node id="96782">
        <label>iosfwd</label>
      </node>
      <node id="96824">
        <label>cstdlib</label>
      </node>
      <node id="96840">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96841" relation="include">
        </childnode>
        <childnode refid="96842" relation="include">
        </childnode>
      </node>
      <node id="96817">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96818" relation="include">
        </childnode>
        <childnode refid="96820" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96783" relation="include">
        </childnode>
        <childnode refid="96811" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
        <childnode refid="96812" relation="include">
        </childnode>
        <childnode refid="96821" relation="include">
        </childnode>
      </node>
      <node id="96778">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="96830">
        <label>pxr/base/vt/types.h</label>
        <link refid="base_2vt_2types_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96825" relation="include">
        </childnode>
        <childnode refid="96829" relation="include">
        </childnode>
        <childnode refid="96799" relation="include">
        </childnode>
        <childnode refid="96831" relation="include">
        </childnode>
        <childnode refid="96832" relation="include">
        </childnode>
        <childnode refid="96813" relation="include">
        </childnode>
        <childnode refid="96838" relation="include">
        </childnode>
        <childnode refid="96845" relation="include">
        </childnode>
        <childnode refid="96846" relation="include">
        </childnode>
        <childnode refid="96847" relation="include">
        </childnode>
        <childnode refid="96809" relation="include">
        </childnode>
        <childnode refid="96787" relation="include">
        </childnode>
      </node>
      <node id="96847">
        <label>cstddef</label>
      </node>
      <node id="96831">
        <label>pxr/base/gf/declare.h</label>
        <link refid="base_2gf_2declare_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
      </node>
      <node id="96820">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96783" relation="include">
        </childnode>
      </node>
      <node id="96839">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96798" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96805" relation="include">
        </childnode>
        <childnode refid="96790" relation="include">
        </childnode>
        <childnode refid="96840" relation="include">
        </childnode>
        <childnode refid="96842" relation="include">
        </childnode>
      </node>
      <node id="96771">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96775" relation="include">
        </childnode>
        <childnode refid="96776" relation="include">
        </childnode>
        <childnode refid="96779" relation="include">
        </childnode>
        <childnode refid="96780" relation="include">
        </childnode>
        <childnode refid="96781" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96783" relation="include">
        </childnode>
      </node>
      <node id="96846">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="96792">
        <label>type_traits</label>
      </node>
      <node id="96811">
        <label>set</label>
      </node>
      <node id="96791">
        <label>pxr/base/tf/anyUniquePtr.h</label>
        <link refid="any_unique_ptr_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
      </node>
      <node id="96786">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="96773" relation="include">
        </childnode>
      </node>
      <node id="96841">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="96774" relation="include">
        </childnode>
      </node>
      <node id="96809">
        <label>cstring</label>
      </node>
      <node id="96837">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
      </node>
      <node id="96783">
        <label>memory</label>
      </node>
      <node id="96818">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96798" relation="include">
        </childnode>
        <childnode refid="96813" relation="include">
        </childnode>
        <childnode refid="96772" relation="include">
        </childnode>
        <childnode refid="96819" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
      </node>
      <node id="96843">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96774" relation="include">
        </childnode>
        <childnode refid="96844" relation="include">
        </childnode>
      </node>
      <node id="96789">
        <label>typeindex</label>
      </node>
      <node id="96770">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96771" relation="include">
        </childnode>
        <childnode refid="96784" relation="include">
        </childnode>
        <childnode refid="96785" relation="include">
        </childnode>
        <childnode refid="96790" relation="include">
        </childnode>
        <childnode refid="96775" relation="include">
        </childnode>
        <childnode refid="96791" relation="include">
        </childnode>
        <childnode refid="96793" relation="include">
        </childnode>
        <childnode refid="96796" relation="include">
        </childnode>
        <childnode refid="96797" relation="include">
        </childnode>
        <childnode refid="96804" relation="include">
        </childnode>
        <childnode refid="96817" relation="include">
        </childnode>
        <childnode refid="96825" relation="include">
        </childnode>
        <childnode refid="96826" relation="include">
        </childnode>
        <childnode refid="96827" relation="include">
        </childnode>
        <childnode refid="96829" relation="include">
        </childnode>
        <childnode refid="96830" relation="include">
        </childnode>
        <childnode refid="96848" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
      </node>
      <node id="96845">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="96827">
        <label>pxr/base/vt/streamOut.h</label>
        <link refid="stream_out_8h_source"/>
        <childnode refid="96769" relation="include">
        </childnode>
        <childnode refid="96825" relation="include">
        </childnode>
        <childnode refid="96802" relation="include">
        </childnode>
        <childnode refid="96828" relation="include">
        </childnode>
        <childnode refid="96782" relation="include">
        </childnode>
        <childnode refid="96788" relation="include">
        </childnode>
        <childnode refid="96792" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="visit_value_8h_1a388d65e96f496e1dffa9605fc10a76d6" prot="public" static="no">
        <name>VT_CASE_FOR_TYPE_INDEX</name>
        <param><defname>r</defname></param>
        <param><defname>unused</defname></param>
        <param><defname>i</defname></param>
        <param><defname>elem</defname></param>
        <initializer>case i:                                                                \
            return Vt_ValueVisitDetail::Visit&lt;VT_TYPE(elem)&gt;(                  \
                value, std::forward&lt;Visitor&gt;(visitor), 0);                     \
            break;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/visitValue.h" line="112" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="visit_value_8h_1ac64cd88e170c3fed2eb50238bf769208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Visitor</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto VtVisitValue</definition>
        <argsstring>(VtValue const &amp;value, Visitor &amp;&amp;visitor)</argsstring>
        <name>VtVisitValue</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>Visitor &amp;&amp;</type>
          <declname>visitor</declname>
        </param>
        <briefdescription>
<para>Invoke <computeroutput>visitor</computeroutput> with <computeroutput>value&apos;s</computeroutput> held object if <computeroutput>value</computeroutput> holds an object of one of the &quot;known&quot; value types (those in VT_VALUE_TYPES, see <ref refid="base_2vt_2types_8h" kindref="compound">vt/types.h</ref>). </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>value</computeroutput> does not hold a known type, or if it is empty, or if <computeroutput>visitor</computeroutput> cannot be called with an object of the held type, then call <computeroutput>visitor</computeroutput> with <computeroutput>value</computeroutput> itself. Note this means that <computeroutput>visitor</computeroutput> must be callable with a <ref refid="class_vt_value" kindref="compound">VtValue</ref> argument.</para>
<para>VtVisitValue() can be lower overhead compared to a chained-if of <ref refid="class_vt_value_1ae5d3187e0408744ac959d6146de2f2bf" kindref="member">VtValue::IsHolding()</ref> calls, or a hash-table-lookup dispatch. Additionally, visitors can handle related types with a single case, rather than calling out all types individually. For example:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>If<sp/>the<sp/>value<sp/>holds<sp/>an<sp/>array<sp/>return<sp/>its<sp/>size,<sp/>otherwise<sp/>size_t(-1).</highlight></codeline>
<codeline><highlight class="normal">struct<sp/>GetArraySize<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>template<sp/>&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>operator()(VtArray&lt;T&gt;<sp/>const<sp/>&amp;array)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>array.size();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>operator()(VtValue<sp/>const<sp/>&amp;val)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>size_t(-1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(VtIntArray(123)),<sp/>GetArraySize())<sp/>-&gt;<sp/>123</highlight></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(VtDoubleArray(234)),<sp/>GetArraySize())<sp/>-&gt;<sp/>234</highlight></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(VtVec3fArray(345)),<sp/>GetArraySize())<sp/>-&gt;<sp/>345</highlight></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(&quot;not-a-vt-array&quot;),<sp/>GetArraySize())<sp/>-&gt;<sp/>size_t(-1)</highlight></codeline>
</programlisting></para>
<para>Note that the visitor is invoked as a normal C++ call expression, so implicit conversions and standard overload resolution (including controlling overload resolution via techniques like enable_if) can take place. For example, consider the following, where the double-specific overload is invoked for VtValues holding double, float, and GfHalf.</para>
<para><programlisting><codeline><highlight class="normal">struct<sp/>AsDouble<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>operator()(double<sp/>val)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>val;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>double<sp/>operator()(VtValue<sp/>const<sp/>&amp;)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>std::numeric_limits&lt;double&gt;::quiet_NaN();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(1.23),<sp/>AsDouble())<sp/>-&gt;<sp/>1.23</highlight></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(float(0.5f)),<sp/>AsDouble())<sp/>-&gt;<sp/>0.5</highlight></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(GfHalf(1.5f)),<sp/>AsDouble())<sp/>-&gt;<sp/>1.5</highlight></codeline>
<codeline><highlight class="normal">VtVisitValue(VtValue(&quot;not-convertible-to-double&quot;),<sp/>AsDouble())<sp/>-&gt;<sp/>NaN.</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/visitValue.h" line="105" column="1" bodyfile="pxr/base/vt/visitValue.h" bodystart="105" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2022<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_VT_VISIT_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_VT_VISIT_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/vt/value.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Vt_ValueVisitDetail<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>two<sp/>overloads<sp/>do<sp/>SFINAE<sp/>to<sp/>detect<sp/>whether<sp/>the<sp/>visitor<sp/>can<sp/>be<sp/>invoked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>given<sp/>held<sp/>type<sp/>T.<sp/><sp/>If<sp/>the<sp/>visitor<sp/>cannot<sp/>be<sp/>invoked<sp/>with<sp/>T,<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>instead<sp/>invoked<sp/>with<sp/>the<sp/>VtValue<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">T,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Visitor,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">=<sp/>decltype(std::declval&lt;Visitor&gt;()(std::declval&lt;T&gt;()))&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">Visit(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val,<sp/>Visitor<sp/>&amp;&amp;visitor,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::forward&lt;Visitor&gt;(visitor)(val.<ref refid="class_vt_value_1a60c1f31cc358d0d74f2dcbe9b686bc80" kindref="member">UncheckedGet</ref>&lt;T&gt;());</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">Visit(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val,<sp/>Visitor<sp/>&amp;&amp;visitor,<sp/>...)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::forward&lt;Visitor&gt;(visitor)(val);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>Vt_ValueVisitDetail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Visitor&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>VtVisitValue(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;value,<sp/>Visitor<sp/>&amp;&amp;visitor)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>generally<sp/>gets<sp/>the<sp/>compiler<sp/>to<sp/>emit<sp/>a<sp/>jump<sp/>table<sp/>to<sp/>dispatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directly<sp/>to<sp/>the<sp/>code<sp/>for<sp/>each<sp/>known<sp/>value<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(value.<ref refid="class_vt_value_1a15a28e9ffc782338499c0b3e3faee6a0" kindref="member">GetKnownValueTypeIndex</ref>())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cases<sp/>for<sp/>known<sp/>types.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VT_CASE_FOR_TYPE_INDEX(r,<sp/>unused,<sp/>i,<sp/>elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>i:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>Vt_ValueVisitDetail::Visit&lt;VT_TYPE(elem)&gt;(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>std::forward&lt;Visitor&gt;(visitor),<sp/>0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">BOOST_PP_SEQ_FOR_EACH_I(VT_CASE_FOR_TYPE_INDEX,<sp/>~,<sp/>VT_VALUE_TYPES)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VT_CASE_FOR_TYPE_INDEX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invoke<sp/>visitor<sp/>with<sp/>value<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vt_ValueVisitDetail::Visit&lt;VtValue&gt;(</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/>std::forward&lt;Visitor&gt;(visitor),<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_VT_VISIT_VALUE_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/vt/visitValue.h"/>
  </compounddef>
</doxygen>
