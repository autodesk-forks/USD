<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr__half_1_1half" kind="class" language="C++" prot="public">
    <compoundname>pxr_half::half</compoundname>
    <innerclass refid="unionpxr__half_1_1half_1_1uif" prot="public">pxr_half::half::uif</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpxr__half_1_1half_1a06590fb73c7398c398e0fb2537b6a6e7" prot="private" static="no" mutable="no">
        <type>unsigned short</type>
        <definition>unsigned short _h</definition>
        <argsstring></argsstring>
        <name>_h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="227" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classpxr__half_1_1half_1a9ab7fc9d1fdc6f363f86c35f3d8d0e97" prot="private" static="yes" mutable="no">
        <type>GF_API const uif</type>
        <definition>GF_API const uif _toFloat[1&lt;&lt; 16]</definition>
        <argsstring>[1&lt;&lt; 16]</argsstring>
        <name>_toFloat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="229" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpxr__half_1_1half_1ac0423af18be5d5dd30122a7885e5480b" prot="private" static="yes" mutable="no">
        <type>GF_API const unsigned short</type>
        <definition>GF_API const unsigned short _eLut[1&lt;&lt; 9]</definition>
        <argsstring>[1&lt;&lt; 9]</argsstring>
        <name>_eLut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="230" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr__half_1_1half_1a1777dc189fd37d243e6c60247ff792ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>half</definition>
        <argsstring>()=default</argsstring>
        <name>half</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a1e921fed569e671847625ada5f296ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>half</definition>
        <argsstring>(float f)</argsstring>
        <name>half</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="106" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="435" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a1c0a0c7344251fa9d404bd75ec162b08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~half</definition>
        <argsstring>()=default</argsstring>
        <name>~half</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a070ce3e2fe94495dfe7a5f6fbff26cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr half</definition>
        <argsstring>(const half &amp;) noexcept=default</argsstring>
        <name>half</name>
        <param>
          <type>const half &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a092be3907d311139983714a6315ce0e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr half</definition>
        <argsstring>(half &amp;&amp;) noexcept=default</argsstring>
        <name>half</name>
        <param>
          <type>half &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1abc4ec9f715112697477f2f425122ce21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator float</definition>
        <argsstring>() const</argsstring>
        <name>operator float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="116" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="499" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae93a45cbeb9463aeac1f46e5c5372efc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>half</type>
        <definition>half operator -</definition>
        <argsstring>() const</argsstring>
        <name>operator -</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="123" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="569" bodyend="574"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a1f3bb4e1027c44495eea6b7997a74a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half&amp; operator=</definition>
        <argsstring>(const half &amp;h)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const half &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a4c34c1f5724c5e51dac869182c527ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half&amp; operator=</definition>
        <argsstring>(half &amp;&amp;h) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type>half &amp;&amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1abf46cb86e280a06068c419a5082208e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator=</definition>
        <argsstring>(float f)</argsstring>
        <name>operator=</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="132" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="578" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1af9f41248339cc6caf97ce6488fb674f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator+=</definition>
        <argsstring>(half h)</argsstring>
        <name>operator+=</name>
        <param>
          <type>half</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="134" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="586" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae6dd1a729ebcaa0dbdedcaee305a23b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator+=</definition>
        <argsstring>(float f)</argsstring>
        <name>operator+=</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="135" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="594" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1aeb18bae7304993195a7c3d0edcf0acfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator -=</definition>
        <argsstring>(half h)</argsstring>
        <name>operator -=</name>
        <param>
          <type>half</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="137" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="602" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae9bcf3abe916b66217a9989a6ac5f667" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator -=</definition>
        <argsstring>(float f)</argsstring>
        <name>operator -=</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="138" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="610" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae3bff20fdbf93023c749358f3348ed6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator *=</definition>
        <argsstring>(half h)</argsstring>
        <name>operator *=</name>
        <param>
          <type>half</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="140" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="618" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ab11a8964cbed364a4a41e2ffa5df3507" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator *=</definition>
        <argsstring>(float f)</argsstring>
        <name>operator *=</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="141" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="626" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a14ec936c936eaa9af6cf706f7961149d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator/=</definition>
        <argsstring>(half h)</argsstring>
        <name>operator/=</name>
        <param>
          <type>half</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="143" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="634" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a4f4843cbf8fce24a739ff3d894d39988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half &amp;</type>
        <definition>half &amp; operator/=</definition>
        <argsstring>(float f)</argsstring>
        <name>operator/=</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="144" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="642" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a0d70d590edcba07c236189d5b3e56c53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>half</type>
        <definition>half round</definition>
        <argsstring>(unsigned int n) const</argsstring>
        <name>round</name>
        <param>
          <type>unsigned int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="153" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="510" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1affaa209189fcb8ff041ac466320a482b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isFinite</definition>
        <argsstring>() const</argsstring>
        <name>isFinite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="177" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="650" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae9ea214c71dd6daecc88d3644d25152b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isNormalized</definition>
        <argsstring>() const</argsstring>
        <name>isNormalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="178" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="658" bodyend="662"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1af661cb921d15787fa3b0459b730ca492" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isDenormalized</definition>
        <argsstring>() const</argsstring>
        <name>isDenormalized</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="179" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="666" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a1d50f30c2273c1645f1514b32d39077f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isZero</definition>
        <argsstring>() const</argsstring>
        <name>isZero</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="180" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="675" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1afa652f4316538813c5701214fb1d8c17" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isNan</definition>
        <argsstring>() const</argsstring>
        <name>isNan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="181" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="682" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1aada6a8934dc24f8e56eab6b28c42f2a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isInfinity</definition>
        <argsstring>() const</argsstring>
        <name>isInfinity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="182" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="691" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ac14adf29c832575388e1b999a4bd60f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool isNegative</definition>
        <argsstring>() const</argsstring>
        <name>isNegative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="183" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="700" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a9cc49426cb563dd96ec86fceb1bb4f0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>GF_API unsigned short</type>
        <definition>unsigned short bits</definition>
        <argsstring>() const</argsstring>
        <name>bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="210" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="743" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ad87f70a16fe432e4c03eb10ffd5699b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>GF_API void</type>
        <definition>void setBits</definition>
        <argsstring>(unsigned short bits)</argsstring>
        <name>setBits</name>
        <param>
          <type>unsigned short</type>
          <declname>bits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="211" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="750" bodyend="753"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classpxr__half_1_1half_1ac02aecac21d5a6e31a2c1febb6e63edf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half</type>
        <definition>half posInf</definition>
        <argsstring>()</argsstring>
        <name>posInf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="200" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="707" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ab159e2e242689f38ab3d24a9da01fa8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half</type>
        <definition>half negInf</definition>
        <argsstring>()</argsstring>
        <name>negInf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="201" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="716" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae4ac38a3d25c2376bbe581d2a92820c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half</type>
        <definition>half qNan</definition>
        <argsstring>()</argsstring>
        <name>qNan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="202" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="725" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1a0c6047e4ff4a39fe2dcdf5d1b3542278" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>half</type>
        <definition>half sNan</definition>
        <argsstring>()</argsstring>
        <name>sNan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="203" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="734" bodyend="739"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classpxr__half_1_1half_1a63666a4fd0676825ca65c16bea0c622e" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API short</type>
        <definition>static GF_API short convert</definition>
        <argsstring>(int i)</argsstring>
        <name>convert</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__half_1_1half_1ae517eeedc8ad15227dfd9c8988d3e695" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GF_API float</type>
        <definition>static GF_API float overflow</definition>
        <argsstring>()</argsstring>
        <name>overflow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/ilmbase_half.h" line="225" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/gf/ilmbase_half.h" line="98" column="1" bodyfile="pxr/base/gf/ilmbase_half.h" bodystart="97" bodyend="231"/>
    <listofallmembers>
      <member refid="classpxr__half_1_1half_1ac0423af18be5d5dd30122a7885e5480b" prot="private" virt="non-virtual"><scope>pxr_half::half</scope><name>_eLut</name></member>
      <member refid="classpxr__half_1_1half_1a06590fb73c7398c398e0fb2537b6a6e7" prot="private" virt="non-virtual"><scope>pxr_half::half</scope><name>_h</name></member>
      <member refid="classpxr__half_1_1half_1a9ab7fc9d1fdc6f363f86c35f3d8d0e97" prot="private" virt="non-virtual"><scope>pxr_half::half</scope><name>_toFloat</name></member>
      <member refid="classpxr__half_1_1half_1a9cc49426cb563dd96ec86fceb1bb4f0b" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>bits</name></member>
      <member refid="classpxr__half_1_1half_1a63666a4fd0676825ca65c16bea0c622e" prot="private" virt="non-virtual"><scope>pxr_half::half</scope><name>convert</name></member>
      <member refid="classpxr__half_1_1half_1a1777dc189fd37d243e6c60247ff792ca" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>half</name></member>
      <member refid="classpxr__half_1_1half_1a1e921fed569e671847625ada5f296ed5" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>half</name></member>
      <member refid="classpxr__half_1_1half_1a070ce3e2fe94495dfe7a5f6fbff26cd3" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>half</name></member>
      <member refid="classpxr__half_1_1half_1a092be3907d311139983714a6315ce0e0" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>half</name></member>
      <member refid="classpxr__half_1_1half_1af661cb921d15787fa3b0459b730ca492" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isDenormalized</name></member>
      <member refid="classpxr__half_1_1half_1affaa209189fcb8ff041ac466320a482b" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isFinite</name></member>
      <member refid="classpxr__half_1_1half_1aada6a8934dc24f8e56eab6b28c42f2a2" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isInfinity</name></member>
      <member refid="classpxr__half_1_1half_1afa652f4316538813c5701214fb1d8c17" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isNan</name></member>
      <member refid="classpxr__half_1_1half_1ac14adf29c832575388e1b999a4bd60f5" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isNegative</name></member>
      <member refid="classpxr__half_1_1half_1ae9ea214c71dd6daecc88d3644d25152b" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isNormalized</name></member>
      <member refid="classpxr__half_1_1half_1a1d50f30c2273c1645f1514b32d39077f" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>isZero</name></member>
      <member refid="classpxr__half_1_1half_1ab159e2e242689f38ab3d24a9da01fa8a" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>negInf</name></member>
      <member refid="classpxr__half_1_1half_1ae3bff20fdbf93023c749358f3348ed6d" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator *=</name></member>
      <member refid="classpxr__half_1_1half_1ab11a8964cbed364a4a41e2ffa5df3507" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator *=</name></member>
      <member refid="classpxr__half_1_1half_1ae93a45cbeb9463aeac1f46e5c5372efc" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator -</name></member>
      <member refid="classpxr__half_1_1half_1aeb18bae7304993195a7c3d0edcf0acfd" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator -=</name></member>
      <member refid="classpxr__half_1_1half_1ae9bcf3abe916b66217a9989a6ac5f667" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator -=</name></member>
      <member refid="classpxr__half_1_1half_1abc4ec9f715112697477f2f425122ce21" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator float</name></member>
      <member refid="classpxr__half_1_1half_1af9f41248339cc6caf97ce6488fb674f3" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator+=</name></member>
      <member refid="classpxr__half_1_1half_1ae6dd1a729ebcaa0dbdedcaee305a23b5" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator+=</name></member>
      <member refid="classpxr__half_1_1half_1a14ec936c936eaa9af6cf706f7961149d" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator/=</name></member>
      <member refid="classpxr__half_1_1half_1a4f4843cbf8fce24a739ff3d894d39988" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator/=</name></member>
      <member refid="classpxr__half_1_1half_1a1f3bb4e1027c44495eea6b7997a74a58" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator=</name></member>
      <member refid="classpxr__half_1_1half_1a4c34c1f5724c5e51dac869182c527ca7" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator=</name></member>
      <member refid="classpxr__half_1_1half_1abf46cb86e280a06068c419a5082208e6" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>operator=</name></member>
      <member refid="classpxr__half_1_1half_1ae517eeedc8ad15227dfd9c8988d3e695" prot="private" virt="non-virtual"><scope>pxr_half::half</scope><name>overflow</name></member>
      <member refid="classpxr__half_1_1half_1ac02aecac21d5a6e31a2c1febb6e63edf" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>posInf</name></member>
      <member refid="classpxr__half_1_1half_1ae4ac38a3d25c2376bbe581d2a92820c0" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>qNan</name></member>
      <member refid="classpxr__half_1_1half_1a0d70d590edcba07c236189d5b3e56c53" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>round</name></member>
      <member refid="classpxr__half_1_1half_1ad87f70a16fe432e4c03eb10ffd5699b6" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>setBits</name></member>
      <member refid="classpxr__half_1_1half_1a0c6047e4ff4a39fe2dcdf5d1b3542278" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>sNan</name></member>
      <member refid="classpxr__half_1_1half_1a1c0a0c7344251fa9d404bd75ec162b08" prot="public" virt="non-virtual"><scope>pxr_half::half</scope><name>~half</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
