<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_utils_conditional_abort_diagnostic_delegate" kind="class" language="C++" prot="public">
    <compoundname>UsdUtilsConditionalAbortDiagnosticDelegate</compoundname>
    <basecompoundref refid="class_tf_diagnostic_mgr_1_1_delegate" prot="public" virt="non-virtual">TfDiagnosticMgr::Delegate</basecompoundref>
    <includes refid="conditional_abort_diagnostic_delegate_8h" local="no">conditionalAbortDiagnosticDelegate.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a5e6aeb6bf81d20b23d0d9f718d0d8eb7" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_tf_pattern_matcher" kindref="compound">TfPatternMatcher</ref> &gt;</type>
        <definition>const std::vector&lt;TfPatternMatcher&gt; _includePatternStringFilters</definition>
        <argsstring></argsstring>
        <name>_includePatternStringFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="133" column="1" bodyfile="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_utils_conditional_abort_diagnostic_delegate_1affe1307b3506ae945c620f1fb659df8a" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_tf_pattern_matcher" kindref="compound">TfPatternMatcher</ref> &gt;</type>
        <definition>const std::vector&lt;TfPatternMatcher&gt; _includePatternCodePathFilters</definition>
        <argsstring></argsstring>
        <name>_includePatternCodePathFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="134" column="1" bodyfile="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a076487580da58381e459c983f2a95c08" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_tf_pattern_matcher" kindref="compound">TfPatternMatcher</ref> &gt;</type>
        <definition>const std::vector&lt;TfPatternMatcher&gt; _excludePatternStringFilters</definition>
        <argsstring></argsstring>
        <name>_excludePatternStringFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="135" column="1" bodyfile="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a1b1dcb2c4e8f59301201057a0f4b94e1" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_tf_pattern_matcher" kindref="compound">TfPatternMatcher</ref> &gt;</type>
        <definition>const std::vector&lt;TfPatternMatcher&gt; _excludePatternCodePathFilters</definition>
        <argsstring></argsstring>
        <name>_excludePatternCodePathFilters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="136" column="1" bodyfile="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a8ae5b6780b5dbc71a89d8a429af2712d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDUTILS_API</type>
        <definition>USDUTILS_API UsdUtilsConditionalAbortDiagnosticDelegate</definition>
        <argsstring>(const UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters &amp;includeFilters, const UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters &amp;excludeFilters)</argsstring>
        <name>UsdUtilsConditionalAbortDiagnosticDelegate</name>
        <param>
          <type>const <ref refid="class_usd_utils_conditional_abort_diagnostic_delegate_error_filters" kindref="compound">UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters</ref> &amp;</type>
          <declname>includeFilters</declname>
        </param>
        <param>
          <type>const <ref refid="class_usd_utils_conditional_abort_diagnostic_delegate_error_filters" kindref="compound">UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters</ref> &amp;</type>
          <declname>excludeFilters</declname>
        </param>
        <briefdescription>
<para>Constructor to initialize conditionalAbortDiagnosticDelegate. </para>
        </briefdescription>
        <detaileddescription>
<para>Responsible for adding this delegate instance to <ref refid="class_tf_diagnostic_mgr" kindref="compound">TfDiagnosticMgr</ref> and also sets the <computeroutput>includeFilters</computeroutput> and <computeroutput>excludeFilters</computeroutput> <simplesect kind="note"><para>The _includeFilters and _excludeFilters are immutable </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a274b100a4d56f87f02bba277e079a2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDUTILS_API</type>
        <definition>virtual USDUTILS_API ~UsdUtilsConditionalAbortDiagnosticDelegate</definition>
        <argsstring>()</argsstring>
        <name>~UsdUtilsConditionalAbortDiagnosticDelegate</name>
        <briefdescription>
<para>Handles the removal of this delegate from <ref refid="class_tf_diagnostic_mgr" kindref="compound">TfDiagnosticMgr</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a5233955ba15c54ee092d19b64d2bcdb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdUtilsConditionalAbortDiagnosticDelegate</definition>
        <argsstring>()=delete</argsstring>
        <name>UsdUtilsConditionalAbortDiagnosticDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1aa21daa5ae4fd69e1bea2d7357e5cdc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdUtilsConditionalAbortDiagnosticDelegate</definition>
        <argsstring>(const UsdUtilsConditionalAbortDiagnosticDelegate &amp;delegate)=delete</argsstring>
        <name>UsdUtilsConditionalAbortDiagnosticDelegate</name>
        <param>
          <type>const <ref refid="class_usd_utils_conditional_abort_diagnostic_delegate" kindref="compound">UsdUtilsConditionalAbortDiagnosticDelegate</ref> &amp;</type>
          <declname>delegate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a1785ef6cefda498879888f1f0c233f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_usd_utils_conditional_abort_diagnostic_delegate" kindref="compound">UsdUtilsConditionalAbortDiagnosticDelegate</ref> &amp;</type>
        <definition>UsdUtilsConditionalAbortDiagnosticDelegate&amp; operator=</definition>
        <argsstring>(const UsdUtilsConditionalAbortDiagnosticDelegate &amp;delegate)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_usd_utils_conditional_abort_diagnostic_delegate" kindref="compound">UsdUtilsConditionalAbortDiagnosticDelegate</ref> &amp;</type>
          <declname>delegate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1af4704d5546b58bc28db85dd6be6d028c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void IssueError</definition>
        <argsstring>(const TfError &amp;err) override</argsstring>
        <name>IssueError</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1a4a71214af7408a829d79b0127648516e">IssueError</reimplements>
        <param>
          <type>const <ref refid="class_tf_error" kindref="compound">TfError</ref> &amp;</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput><ref refid="class_tf_error" kindref="compound">TfError</ref></computeroutput> is posted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1af826dd5cf2bd2e7553afddbd3291217e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void IssueWarning</definition>
        <argsstring>(const TfWarning &amp;warning) override</argsstring>
        <name>IssueWarning</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1aa28e6dcae9b9131fb358a8706c841ea9">IssueWarning</reimplements>
        <param>
          <type>const <ref refid="class_tf_warning" kindref="compound">TfWarning</ref> &amp;</type>
          <declname>warning</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput>TF_WARNING()</computeroutput> is issued. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1abf364af897e33b1ffc67253dcf8733a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void IssueFatalError</definition>
        <argsstring>(const TfCallContext &amp;ctx, const std::string &amp;msg) override</argsstring>
        <name>IssueFatalError</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1ac4ef12d57756fe3a5de89de7cfa8f866">IssueFatalError</reimplements>
        <param>
          <type>const TfCallContext &amp;</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput>TF_FATAL_ERROR</computeroutput> is issued (or a failed <computeroutput>TF_AXIOM</computeroutput>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a94873437c454eb40964d4ed251d40ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void IssueStatus</definition>
        <argsstring>(const TfStatus &amp;status) override</argsstring>
        <name>IssueStatus</name>
        <reimplements refid="class_tf_diagnostic_mgr_1_1_delegate_1a3f80bd49fe9478472ef37ed5ca10befc">IssueStatus</reimplements>
        <param>
          <type>const <ref refid="class_tf_status" kindref="compound">TfStatus</ref> &amp;</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Called when a <computeroutput><ref refid="group__group__tf___diagnostic_1ga97dfb3da2a7be92953eda1e4ad268301" kindref="member">TF_STATUS()</ref></computeroutput> is issued. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_utils_conditional_abort_diagnostic_delegate_1a839dc8f047e5ed2bbe98c877494d0f18" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool _RuleMatcher</definition>
        <argsstring>(const TfDiagnosticBase &amp;err, const std::vector&lt; TfPatternMatcher &gt; &amp;stringPatternFilters, const std::vector&lt; TfPatternMatcher &gt; &amp;codePathPatternFilters)</argsstring>
        <name>_RuleMatcher</name>
        <param>
          <type>const <ref refid="class_tf_diagnostic_base" kindref="compound">TfDiagnosticBase</ref> &amp;</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_tf_pattern_matcher" kindref="compound">TfPatternMatcher</ref> &gt; &amp;</type>
          <declname>stringPatternFilters</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_tf_pattern_matcher" kindref="compound">TfPatternMatcher</ref> &gt; &amp;</type>
          <declname>codePathPatternFilters</declname>
        </param>
        <briefdescription>
<para>Helper to match <computeroutput>err</computeroutput> against a given set of <computeroutput>errorFilters</computeroutput> A client can override this to affect the behavior of the rule matcher. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class that allows client application to instantiate a diagnostic delegate that can be used to abort operations for a non fatal USD error or warning based on immutable include exclude rules defined for this instance. </para>
    </briefdescription>
    <detaileddescription>
<para>These rules are regex strings where case sensitive matching is done on error/warning text or the location of the code path where the error/warning occured. Note that these rules will be respected only during the lifetime of the delegate. Include Rules determine what errors or warnings will cause a fatal abort. Exclude Rules determine what errors or warnings matched from the Include Rules should not cause the fatal abort. Example: to abort on all errors and warnings coming from &quot;*pxr*&quot; codepath but not from &quot;*ConditionalAbortDiagnosticDelegate*&quot;, a client can create the following delegate:</para>
<para><programlisting><codeline><highlight class="normal">UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters<sp/>includeFilters;</highlight></codeline>
<codeline><highlight class="normal">UsdUtilsConditionalAbortDiagnosticDelegateErrorFilters<sp/>excludeFilters;</highlight></codeline>
<codeline><highlight class="normal">includeFilters.SetCodePathFilters({&quot;*pxr*&quot;});</highlight></codeline>
<codeline><highlight class="normal">excludeFilters.SetCodePathFilters({&quot;*ConditionalAbortDiagnosticDelegate*&quot;});</highlight></codeline>
<codeline><highlight class="normal">UsdUtilsConditionalAbortDiagnosticDelegate<sp/>delegate<sp/>=<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>UsdUtilsConditionalAbortDiagnosticDelegate(includeFilters,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>excludeFilters);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8448">
        <label>UsdUtilsConditionalAbortDiagnosticDelegate</label>
        <link refid="class_usd_utils_conditional_abort_diagnostic_delegate"/>
        <childnode refid="8449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8449">
        <label>Delegate</label>
        <link refid="class_tf_diagnostic_mgr_1_1_delegate"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8450">
        <label>UsdUtilsConditionalAbortDiagnosticDelegate</label>
        <link refid="class_usd_utils_conditional_abort_diagnostic_delegate"/>
        <childnode refid="8451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8451">
        <label>Delegate</label>
        <link refid="class_tf_diagnostic_mgr_1_1_delegate"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" line="98" column="1" bodyfile="pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h" bodystart="96" bodyend="144"/>
    <listofallmembers>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a1b1dcb2c4e8f59301201057a0f4b94e1" prot="private" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>_excludePatternCodePathFilters</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a076487580da58381e459c983f2a95c08" prot="private" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>_excludePatternStringFilters</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1affe1307b3506ae945c620f1fb659df8a" prot="private" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>_includePatternCodePathFilters</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a5e6aeb6bf81d20b23d0d9f718d0d8eb7" prot="private" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>_includePatternStringFilters</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a839dc8f047e5ed2bbe98c877494d0f18" prot="protected" virt="virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>_RuleMatcher</name></member>
      <member refid="class_tf_diagnostic_mgr_1_1_delegate_1a88dcc2a1d6c3096c3382b9f3590a4ebc" prot="protected" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>_UnhandledAbort</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1af4704d5546b58bc28db85dd6be6d028c" prot="public" virt="virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>IssueError</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1abf364af897e33b1ffc67253dcf8733a9" prot="public" virt="virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>IssueFatalError</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a94873437c454eb40964d4ed251d40ee6" prot="public" virt="virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>IssueStatus</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1af826dd5cf2bd2e7553afddbd3291217e" prot="public" virt="virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>IssueWarning</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a1785ef6cefda498879888f1f0c233f72" prot="public" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>operator=</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a8ae5b6780b5dbc71a89d8a429af2712d" prot="public" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>UsdUtilsConditionalAbortDiagnosticDelegate</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a5233955ba15c54ee092d19b64d2bcdb6" prot="public" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>UsdUtilsConditionalAbortDiagnosticDelegate</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1aa21daa5ae4fd69e1bea2d7357e5cdc48" prot="public" virt="non-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>UsdUtilsConditionalAbortDiagnosticDelegate</name></member>
      <member refid="class_tf_diagnostic_mgr_1_1_delegate_1ae96b831195b4f58f2755dd6c5d6c99b4" prot="public" virt="pure-virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>~Delegate</name></member>
      <member refid="class_usd_utils_conditional_abort_diagnostic_delegate_1a274b100a4d56f87f02bba277e079a2d1" prot="public" virt="virtual"><scope>UsdUtilsConditionalAbortDiagnosticDelegate</scope><name>~UsdUtilsConditionalAbortDiagnosticDelegate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
