<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_prim_type_info" kind="class" language="C++" prot="public">
    <compoundname>UsdPrimTypeInfo</compoundname>
    <includes refid="prim_type_info_8h" local="no">primTypeInfo.h</includes>
    <innerclass refid="struct_usd_prim_type_info_1_1___type_id" prot="private">UsdPrimTypeInfo::_TypeId</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_prim_type_info_1a312528ed98e1263192f3e94647efa305" prot="private" static="no" mutable="no">
        <type>_TypeId</type>
        <definition>_TypeId _typeId</definition>
        <argsstring></argsstring>
        <name>_typeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="185" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_type_info_1a97808fe26ec39e013cc140a1cd108907" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_type" kindref="compound">TfType</ref></type>
        <definition>TfType _schemaType</definition>
        <argsstring></argsstring>
        <name>_schemaType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="186" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_type_info_1ab20b84892cc96ab1b1ddb0fdd21040f0" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _schemaTypeName</definition>
        <argsstring></argsstring>
        <name>_schemaTypeName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="187" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_type_info_1aba9321797dd823b16c70513ca4e69de0" prot="private" static="no" mutable="yes">
        <type>std::atomic&lt; const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> * &gt;</type>
        <definition>std::atomic&lt;const UsdPrimDefinition *&gt; _primDefinition</definition>
        <argsstring></argsstring>
        <name>_primDefinition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="190" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_usd_prim_type_info_1a73f0bb95d6e956e2cd23cb17ab7453d0" prot="private" static="no" mutable="yes">
        <type>std::unique_ptr&lt; <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> &gt;</type>
        <definition>std::unique_ptr&lt;UsdPrimDefinition&gt; _ownedPrimDefinition</definition>
        <argsstring></argsstring>
        <name>_ownedPrimDefinition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="199" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_prim_type_info_1a8cc8a084710338ce2de6eeba7872c194" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; GetTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
<para>Returns the concrete prim type name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="51" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a6a432f1e0c050f831089bb2b546ad05a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>const TfTokenVector&amp; GetAppliedAPISchemas</definition>
        <argsstring>() const</argsstring>
        <name>GetAppliedAPISchemas</name>
        <briefdescription>
<para>Returns the list of applied API schemas, directly authored on the prim, that impart additional properties on its prim definition. </para>
        </briefdescription>
        <detaileddescription>
<para>This does NOT include the applied API schemas that may be defined in the conrete prim type&apos;s prim definition.. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="57" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a0240ba781401c7158a2f3871f055006e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>const TfType&amp; GetSchemaType</definition>
        <argsstring>() const</argsstring>
        <name>GetSchemaType</name>
        <briefdescription>
<para>Returns the <ref refid="class_tf_type" kindref="compound">TfType</ref> of the actual concrete schema that prims of this type will use to create their prim definition. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically, this will be the type registered in the schema registry for the concrete prim type returned by GetTypeName. But if the stage provided this type info with a fallback type because the prim type name is not a recognized schema, this will return the provided fallback schema type instead.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_FallbackPrimTypes" kindref="member">Fallback Prim Types</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="69" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a3ab73bf82d36535750e426f01d181ae4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>const TfToken&amp; GetSchemaTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetSchemaTypeName</name>
        <briefdescription>
<para>Returns the type name associated with the schema type returned from GetSchemaType. </para>
        </briefdescription>
        <detaileddescription>
<para>This will always be equivalent to calling <ref refid="class_usd_schema_registry_1a8a86752feac3ffdda386b45e1e7ae6d6" kindref="member">UsdSchemaRegistry::GetConcreteSchemaTypeName</ref> on the type returned by GetSchemaType and will typically be the same as GetTypeName as long as the prim type name is a recognized prim type.</para>
<para><simplesect kind="see"><para><ref refid="_usd__page__object_model_1Usd_OM_FallbackPrimTypes" kindref="member">Fallback Prim Types</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="78" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a422bac96f602aa9983a203d86d48fd6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> &amp;</type>
        <definition>const UsdPrimDefinition&amp; GetPrimDefinition</definition>
        <argsstring>() const</argsstring>
        <name>GetPrimDefinition</name>
        <briefdescription>
<para>Returns the prim definition associated with this prim type&apos;s schema type and applied API schemas. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="82" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a8242c6db6a9133a24f79c1fef53d9157" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdPrimTypeInfo &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_prim_type_info" kindref="compound">UsdPrimTypeInfo</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="94" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="94" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a15b46ba052fa7169d9b90dbeb29943f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdPrimTypeInfo &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_prim_type_info" kindref="compound">UsdPrimTypeInfo</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="100" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="100" bodyend="102"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_prim_type_info_1a0e8f5613b9f5b395bef436c2c3a8a2ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const <ref refid="class_usd_prim_type_info" kindref="compound">UsdPrimTypeInfo</ref> &amp;</type>
        <definition>static USD_API const UsdPrimTypeInfo&amp; GetEmptyPrimType</definition>
        <argsstring>()</argsstring>
        <name>GetEmptyPrimType</name>
        <briefdescription>
<para>Returns the empty prim type info. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="106" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_prim_type_info_1adfdec2c7026cc0f1c2dbc6baba7dcdf7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPrimTypeInfo</definition>
        <argsstring>()</argsstring>
        <name>UsdPrimTypeInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="172" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a4bc9a0a18479d1c9d8b10b62c79a2a13" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdPrimTypeInfo</definition>
        <argsstring>(_TypeId &amp;&amp;typeId)</argsstring>
        <name>UsdPrimTypeInfo</name>
        <param>
          <type>_TypeId &amp;&amp;</type>
          <declname>typeId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a8a665c89def952865498ddadd1209b0d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const _TypeId &amp;</type>
        <definition>const _TypeId&amp; _GetTypeId</definition>
        <argsstring>() const</argsstring>
        <name>_GetTypeId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="178" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_type_info_1a2a8a9fffc2be6ecef16b60018416547d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> *</type>
        <definition>USD_API const UsdPrimDefinition* _FindOrCreatePrimDefinition</definition>
        <argsstring>() const</argsstring>
        <name>_FindOrCreatePrimDefinition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primTypeInfo.h" line="183" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class that holds the full type information for a prim. </para>
    </briefdescription>
    <detaileddescription>
<para>It holds the type name, applied API schema names, and possibly a mapped schema type name which represent a unique full type. The info this holds is used to cache and provide the &quot;real&quot; schema type for the prim&apos;s type name regardless of whether it is a recognized prim type or not. The optional &quot;mapped schema type name&quot; is used to obtain a valid schema type for an unrecognized prim type name if the stage provides a fallback type for the unrecognized type. This class also provides access to the prim definition that defines all the built-in properties and metadata of a prim of this type. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/primTypeInfo.h" line="48" column="1" bodyfile="pxr/usd/usd/primTypeInfo.h" bodystart="47" bodyend="200"/>
    <listofallmembers>
      <member refid="class_usd_prim_type_info_1a2a8a9fffc2be6ecef16b60018416547d" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_FindOrCreatePrimDefinition</name></member>
      <member refid="class_usd_prim_type_info_1a8a665c89def952865498ddadd1209b0d" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_GetTypeId</name></member>
      <member refid="class_usd_prim_type_info_1a73f0bb95d6e956e2cd23cb17ab7453d0" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_ownedPrimDefinition</name></member>
      <member refid="class_usd_prim_type_info_1aba9321797dd823b16c70513ca4e69de0" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_primDefinition</name></member>
      <member refid="class_usd_prim_type_info_1a97808fe26ec39e013cc140a1cd108907" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_schemaType</name></member>
      <member refid="class_usd_prim_type_info_1ab20b84892cc96ab1b1ddb0fdd21040f0" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_schemaTypeName</name></member>
      <member refid="class_usd_prim_type_info_1a312528ed98e1263192f3e94647efa305" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>_typeId</name></member>
      <member refid="class_usd_prim_type_info_1a6a432f1e0c050f831089bb2b546ad05a" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>GetAppliedAPISchemas</name></member>
      <member refid="class_usd_prim_type_info_1a0e8f5613b9f5b395bef436c2c3a8a2ab" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>GetEmptyPrimType</name></member>
      <member refid="class_usd_prim_type_info_1a422bac96f602aa9983a203d86d48fd6d" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>GetPrimDefinition</name></member>
      <member refid="class_usd_prim_type_info_1a0240ba781401c7158a2f3871f055006e" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>GetSchemaType</name></member>
      <member refid="class_usd_prim_type_info_1a3ab73bf82d36535750e426f01d181ae4" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>GetSchemaTypeName</name></member>
      <member refid="class_usd_prim_type_info_1a8cc8a084710338ce2de6eeba7872c194" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>GetTypeName</name></member>
      <member refid="class_usd_prim_type_info_1a15b46ba052fa7169d9b90dbeb29943f0" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>operator!=</name></member>
      <member refid="class_usd_prim_type_info_1a8242c6db6a9133a24f79c1fef53d9157" prot="public" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>operator==</name></member>
      <member refid="class_usd_prim_type_info_1adfdec2c7026cc0f1c2dbc6baba7dcdf7" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>UsdPrimTypeInfo</name></member>
      <member refid="class_usd_prim_type_info_1a4bc9a0a18479d1c9d8b10b62c79a2a13" prot="private" virt="non-virtual"><scope>UsdPrimTypeInfo</scope><name>UsdPrimTypeInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
