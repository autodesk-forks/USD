<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_ext_comp_cpu_computation" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStExtCompCpuComputation</compoundname>
    <basecompoundref refid="class_hd_null_buffer_source" prot="public" virt="non-virtual">HdNullBufferSource</basecompoundref>
    <includes refid="ext_comp_cpu_computation_8h" local="no">extCompCpuComputation.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1ab153b2a91a39df4df59056f4e7d79d12" prot="public" static="yes" mutable="no">
        <type>HDST_API const size_t</type>
        <definition>HDST_API const size_t INVALID_OUTPUT_INDEX</definition>
        <argsstring></argsstring>
        <name>INVALID_OUTPUT_INDEX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="71" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1ae87c83b9f3d4f5ba91530df74da5e284" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="128" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1ab0c82311d2434318612cd381cde6a15c" prot="private" static="no" mutable="no">
        <type>HdSt_ExtCompInputSourceSharedPtrVector</type>
        <definition>HdSt_ExtCompInputSourceSharedPtrVector _inputs</definition>
        <argsstring></argsstring>
        <name>_inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="129" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1ac2d6207fec060fc6919ec61e8c3f68dd" prot="private" static="no" mutable="no">
        <type><ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>TfTokenVector _outputs</definition>
        <argsstring></argsstring>
        <name>_outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="130" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1af0109f15f53da97ea5c36ff3b4d023ac" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _numElements</definition>
        <argsstring></argsstring>
        <name>_numElements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="131" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1aaea38e39689cab0f2a585c24642241e2" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
        <definition>HdSceneDelegate* _sceneDelegate</definition>
        <argsstring></argsstring>
        <name>_sceneDelegate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="132" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_cpu_computation_1a191e4613c6f3949796ad51466bada462" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_vt_value" kindref="compound">VtValue</ref> &gt;</type>
        <definition>std::vector&lt;VtValue&gt; _outputValues</definition>
        <argsstring></argsstring>
        <name>_outputValues</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="134" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a5c8a461a5a4ca5479d6e5d74fe8d0d83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompCpuComputation</definition>
        <argsstring>(const SdfPath &amp;id, const HdSt_ExtCompInputSourceSharedPtrVector &amp;inputs, const TfTokenVector &amp;outputs, int numElements, HdSceneDelegate *sceneDelegate)</argsstring>
        <name>HdStExtCompCpuComputation</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>id</declname>
        </param>
        <param>
          <type>const HdSt_ExtCompInputSourceSharedPtrVector &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numElements</declname>
        </param>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <briefdescription>
<para>Constructs a new Cpu ExtComputation source. </para>
        </briefdescription>
        <detaileddescription>
<para>inputs provides a list of buffer sources that this computation requires. outputs is a list of outputs by names that the computation produces.</para>
<para>Num elements specifies the number of elements in the output.</para>
<para>sceneDelegate and id are used to callback to the scene delegate in order to invoke computation processing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a1de762e5835d2404eb402cc06171cc52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStExtCompCpuComputation</definition>
        <argsstring>() override</argsstring>
        <name>~HdStExtCompCpuComputation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a004da153eb975796ee16de8f57abb70c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API <ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>HDST_API TfToken const&amp; GetName</definition>
        <argsstring>() const override</argsstring>
        <name>GetName</name>
        <reimplements refid="class_hd_null_buffer_source_1a0c0702fbc703090d28d34aa9fc210f63">GetName</reimplements>
        <briefdescription>
<para>Returns the id for this computation as a token. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a0c003c53291d9f86bc7b0981cdd8f820" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool Resolve</definition>
        <argsstring>() override</argsstring>
        <name>Resolve</name>
        <reimplements refid="class_hd_buffer_source_1a31cd8967840ac419b37e8059635896e7">Resolve</reimplements>
        <briefdescription>
<para>Ask the scene delegate to run the computation and captures the output signals. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a749f69362c62d5a069d921f4d5987ac8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API size_t</type>
        <definition>HDST_API size_t GetNumElements</definition>
        <argsstring>() const override</argsstring>
        <name>GetNumElements</name>
        <reimplements refid="class_hd_null_buffer_source_1aca2f47025f9b58504ed51ec9c2b913d1">GetNumElements</reimplements>
        <briefdescription>
<para>Returns the number of elements (e.g. </para>
        </briefdescription>
        <detaileddescription>
<para>VtVec3dArray().GetLength()) from the source array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a8a26c5ba1cc088cebcef9d46cd436def" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API size_t</type>
        <definition>HDST_API size_t GetOutputIndex</definition>
        <argsstring>(const TfToken &amp;outputName) const</argsstring>
        <name>GetOutputIndex</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>outputName</declname>
        </param>
        <briefdescription>
<para>Converts a output name token into an index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a05df8fd91f6b26c10131187680faaed9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
        <definition>HDST_API const VtValue&amp; GetOutputByIndex</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>GetOutputByIndex</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the value of the specified output (after the computations been Resolved). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="120" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1a68ca79b091d2361334ec947492f1ca90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API HdStExtCompCpuComputationSharedPtr</type>
        <definition>static HDST_API HdStExtCompCpuComputationSharedPtr CreateComputation</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, const HdExtComputation &amp;computation, HdBufferSourceSharedPtrVector *computationSources)</argsstring>
        <name>CreateComputation</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type>const <ref refid="class_hd_ext_computation" kindref="compound">HdExtComputation</ref> &amp;</type>
          <declname>computation</declname>
        </param>
        <param>
          <type>HdBufferSourceSharedPtrVector *</type>
          <declname>computationSources</declname>
        </param>
        <briefdescription>
<para>Create a CPU computation implementing the given abstract computation. </para>
        </briefdescription>
        <detaileddescription>
<para>The scene delegate identifies which delegate to pull scene inputs from. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="96" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1ac969857fc76553a38db65408d27baa45" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool _CheckValid</definition>
        <argsstring>() const override</argsstring>
        <name>_CheckValid</name>
        <reimplements refid="class_hd_buffer_source_1a0f0022a4bdf82e55a38f7aeae7156591">_CheckValid</reimplements>
        <briefdescription>
<para>Returns if the computation is specified correctly. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="125" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1ab3f06455a05e6f4c2b74ff8e3123fbab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompCpuComputation</definition>
        <argsstring>()=delete</argsstring>
        <name>HdStExtCompCpuComputation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1ad392e73db902770a73e6749d21566d1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompCpuComputation</definition>
        <argsstring>(const HdStExtCompCpuComputation &amp;)=delete</argsstring>
        <name>HdStExtCompCpuComputation</name>
        <param>
          <type>const <ref refid="class_hd_st_ext_comp_cpu_computation" kindref="compound">HdStExtCompCpuComputation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_cpu_computation_1ae1d202afba5a00d13ce2394634cbd5f5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_st_ext_comp_cpu_computation" kindref="compound">HdStExtCompCpuComputation</ref> &amp;</type>
        <definition>HdStExtCompCpuComputation&amp; operator=</definition>
        <argsstring>(const HdStExtCompCpuComputation &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_st_ext_comp_cpu_computation" kindref="compound">HdStExtCompCpuComputation</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A Buffer Source that represents a CPU implementation of a ExtComputation. </para>
    </briefdescription>
    <detaileddescription>
<para>The computation implements the basic: input-&gt;processing-&gt;output model where the inputs are other buffer sources and processing happens during resolve.</para>
<para>As a computation may have many outputs, the outputs from the CPU Computation can not be directly associated with a BAR. Instead other buffer source computation bind the output to sources that can be used in a BAR.</para>
<para>Outputs to a computation are in SOA form, so a computation may have many outputs, but each output has the same number of elements in it. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3125">
        <label>HdNullBufferSource</label>
        <link refid="class_hd_null_buffer_source"/>
        <childnode refid="3126" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3126">
        <label>HdBufferSource</label>
        <link refid="class_hd_buffer_source"/>
      </node>
      <node id="3124">
        <label>HdStExtCompCpuComputation</label>
        <link refid="class_hd_st_ext_comp_cpu_computation"/>
        <childnode refid="3125" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3128">
        <label>HdNullBufferSource</label>
        <link refid="class_hd_null_buffer_source"/>
        <childnode refid="3129" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3129">
        <label>HdBufferSource</label>
        <link refid="class_hd_buffer_source"/>
      </node>
      <node id="3127">
        <label>HdStExtCompCpuComputation</label>
        <link refid="class_hd_st_ext_comp_cpu_computation"/>
        <childnode refid="3128" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/extCompCpuComputation.h" line="68" column="1" bodyfile="pxr/imaging/hdSt/extCompCpuComputation.h" bodystart="67" bodyend="141"/>
    <listofallmembers>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ac969857fc76553a38db65408d27baa45" prot="protected" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>_CheckValid</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ae87c83b9f3d4f5ba91530df74da5e284" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_id</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ab0c82311d2434318612cd381cde6a15c" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_inputs</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1af0109f15f53da97ea5c36ff3b4d023ac" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_numElements</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ac2d6207fec060fc6919ec61e8c3f68dd" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_outputs</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a191e4613c6f3949796ad51466bada462" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_outputValues</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1aaea38e39689cab0f2a585c24642241e2" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_sceneDelegate</name></member>
      <member refid="class_hd_buffer_source_1aa9d9f62a29664a6353762c968c477c9a" prot="protected" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_SetResolved</name></member>
      <member refid="class_hd_buffer_source_1aa93dec2f4f899e2edf89b0b20b9b0408" prot="protected" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_SetResolveError</name></member>
      <member refid="class_hd_buffer_source_1a95fa005a2674cf5ab757a2d6baa1beaa" prot="protected" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>_TryLock</name></member>
      <member refid="class_hd_null_buffer_source_1ae13441343bea925fd46537fd58a5aef8" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>ComputeHash</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a68ca79b091d2361334ec947492f1ca90" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>CreateComputation</name></member>
      <member refid="class_hd_null_buffer_source_1a49ccfc0b7d908c1a3e6bc28d23dfe7f0" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_buffer_source_1aa319054081d8cc83ea80e3b95a18e37b" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetChainedBuffers</name></member>
      <member refid="class_hd_null_buffer_source_1ae9d406408fc27fe3ced169e41b5c1e34" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetData</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a004da153eb975796ee16de8f57abb70c" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetName</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a749f69362c62d5a069d921f4d5987ac8" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetNumElements</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a05df8fd91f6b26c10131187680faaed9" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>GetOutputByIndex</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a8a26c5ba1cc088cebcef9d46cd436def" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>GetOutputIndex</name></member>
      <member refid="class_hd_buffer_source_1a59b78074e9fcc70237524881864f8ad7" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetPreChainedBuffer</name></member>
      <member refid="class_hd_null_buffer_source_1a5ac174b7f9823eebc156c8820389598d" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>GetTupleType</name></member>
      <member refid="class_hd_buffer_source_1a6882660a1cb15d85f6dfece0d1e4e25d" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>HasChainedBuffer</name></member>
      <member refid="class_hd_buffer_source_1a600437657ebeb5a72da71300032e5532" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>HasPreChainedBuffer</name></member>
      <member refid="class_hd_buffer_source_1ae154f9dca5a409c46b8bdaca56b7d58f" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>HasResolveError</name></member>
      <member refid="class_hd_buffer_source_1aee360bcdc56a9390c0da4dcbd86d6936" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>HdBufferSource</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a5c8a461a5a4ca5479d6e5d74fe8d0d83" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>HdStExtCompCpuComputation</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ab3f06455a05e6f4c2b74ff8e3123fbab" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>HdStExtCompCpuComputation</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ad392e73db902770a73e6749d21566d1a" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>HdStExtCompCpuComputation</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ab153b2a91a39df4df59056f4e7d79d12" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>INVALID_OUTPUT_INDEX</name></member>
      <member refid="class_hd_buffer_source_1a2d798b9f36dd4187831ce00aaf720dd0" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>IsResolved</name></member>
      <member refid="class_hd_buffer_source_1a55323f058382f1585d1e9cb3af59d87f" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>IsValid</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1ae1d202afba5a00d13ce2394634cbd5f5" prot="private" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>operator=</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a0c003c53291d9f86bc7b0981cdd8f820" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>Resolve</name></member>
      <member refid="class_hd_buffer_source_1a48f26b3afaa40d27e98c6dd91e410df0" prot="public" virt="virtual"><scope>HdStExtCompCpuComputation</scope><name>~HdBufferSource</name></member>
      <member refid="class_hd_st_ext_comp_cpu_computation_1a1de762e5835d2404eb402cc06171cc52" prot="public" virt="non-virtual"><scope>HdStExtCompCpuComputation</scope><name>~HdStExtCompCpuComputation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
