<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_sdf_predicate_param_names_and_defaults" kind="class" language="C++" prot="public">
    <compoundname>SdfPredicateParamNamesAndDefaults</compoundname>
    <includes refid="predicate_library_8h" local="no">predicateLibrary.h</includes>
    <innerclass refid="struct_sdf_predicate_param_names_and_defaults_1_1_param" prot="public">SdfPredicateParamNamesAndDefaults::Param</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_sdf_predicate_param_names_and_defaults_1a2835d373f1b906f2df9295ad035317e4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_sdf_predicate_param_names_and_defaults_1_1_param" kindref="compound">Param</ref> &gt;</type>
        <definition>std::vector&lt;Param&gt; _params</definition>
        <argsstring></argsstring>
        <name>_params</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="105" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_sdf_predicate_param_names_and_defaults_1ac60bce1983578375ae9438c0e5dc8796" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _numDefaults</definition>
        <argsstring></argsstring>
        <name>_numDefaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="106" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1a79856d0b777b8ffcef8b94d1017c87c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfPredicateParamNamesAndDefaults</definition>
        <argsstring>()</argsstring>
        <name>SdfPredicateParamNamesAndDefaults</name>
        <briefdescription>
<para>Default constructor produces empty set of names &amp; defaults. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="71" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1abf3355d885291adc3f32acd31c01bc46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfPredicateParamNamesAndDefaults</definition>
        <argsstring>(std::initializer_list&lt; Param &gt; const &amp;params)</argsstring>
        <name>SdfPredicateParamNamesAndDefaults</name>
        <param>
          <type>std::initializer_list&lt; <ref refid="struct_sdf_predicate_param_names_and_defaults_1_1_param" kindref="compound">Param</ref> &gt; const &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Construct or implicitly convert from initializer_list&lt;Param&gt;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="74" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1a571b19b8dac4bfba43d1da64a3935aa1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API bool</type>
        <definition>SDF_API bool CheckValidity</definition>
        <argsstring>() const</argsstring>
        <name>CheckValidity</name>
        <briefdescription>
<para>Check that all parameters have non-empty names and that all paramters following the first with a default value also have default values. </para>
        </briefdescription>
        <detaileddescription>
<para>Issue <ref refid="group__group__tf___diagnostic_1ga8265ac46fd87777ee25efaf4a3290bbe" kindref="member">TF_CODING_ERROR()</ref>s and return false if these conditions are violated, otherwise return true. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1aa07871df85dcc01ba40d47a4c199f51b" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_sdf_predicate_param_names_and_defaults_1_1_param" kindref="compound">Param</ref> &gt; const  &amp;</type>
        <definition>std::vector&lt;Param&gt; const&amp; GetParams</definition>
        <argsstring>() const &amp;</argsstring>
        <name>GetParams</name>
        <briefdescription>
<para>Return a reference to the parameters in a vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="87" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1a0d47346604fb84159698e603c88ba51a" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type>std::vector&lt; <ref refid="struct_sdf_predicate_param_names_and_defaults_1_1_param" kindref="compound">Param</ref> &gt;</type>
        <definition>std::vector&lt;Param&gt; GetParams</definition>
        <argsstring>() const &amp;&amp;</argsstring>
        <name>GetParams</name>
        <briefdescription>
<para>Move-return the parameters in a vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="92" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1a3e0fdb6def392ea404a516b2a8eca3a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetNumDefaults</definition>
        <argsstring>() const</argsstring>
        <name>GetNumDefaults</name>
        <briefdescription>
<para>Return the number of params with default values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="97" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="97" bodyend="99"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_sdf_predicate_param_names_and_defaults_1ae1abd586028dcd6097a5b0d3846b960e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API size_t</type>
        <definition>SDF_API size_t _CountDefaults</definition>
        <argsstring>() const</argsstring>
        <name>_CountDefaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateLibrary.h" line="103" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents named function parameters, with optional default values. </para>
    </briefdescription>
    <detaileddescription>
<para>These are generally constructed via an initializer_list and specified in <ref refid="class_sdf_predicate_library_1a8f4bd121d5db360270f43076790e3dad" kindref="member">SdfPredicateLibrary::Define()</ref>.</para>
<para>Valid parameter names and defaults have non-empty names, and all parameters following the first one with a default value must also have default values. </para>
    </detaileddescription>
    <location file="pxr/usd/sdf/predicateLibrary.h" line="53" column="1" bodyfile="pxr/usd/sdf/predicateLibrary.h" bodystart="53" bodyend="107"/>
    <listofallmembers>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1ae1abd586028dcd6097a5b0d3846b960e" prot="private" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>_CountDefaults</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1ac60bce1983578375ae9438c0e5dc8796" prot="private" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>_numDefaults</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1a2835d373f1b906f2df9295ad035317e4" prot="private" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>_params</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1a571b19b8dac4bfba43d1da64a3935aa1" prot="public" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>CheckValidity</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1a3e0fdb6def392ea404a516b2a8eca3a7" prot="public" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>GetNumDefaults</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1aa07871df85dcc01ba40d47a4c199f51b" prot="public" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>GetParams</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1a0d47346604fb84159698e603c88ba51a" prot="public" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>GetParams</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1a79856d0b777b8ffcef8b94d1017c87c9" prot="public" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>SdfPredicateParamNamesAndDefaults</name></member>
      <member refid="struct_sdf_predicate_param_names_and_defaults_1abf3355d885291adc3f32acd31c01bc46" prot="public" virt="non-virtual"><scope>SdfPredicateParamNamesAndDefaults</scope><name>SdfPredicateParamNamesAndDefaults</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
