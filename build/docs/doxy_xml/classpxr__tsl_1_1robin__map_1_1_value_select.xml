<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classpxr__tsl_1_1robin__map_1_1_value_select" kind="class" language="C++" prot="private">
    <compoundname>pxr_tsl::robin_map::ValueSelect</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpxr__tsl_1_1robin__map_1_1_value_select_1afb9ded5f49336ae503bb9f2035ea902b" prot="public" static="no">
        <type>T</type>
        <definition>using value_type =  T</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="117" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpxr__tsl_1_1robin__map_1_1_value_select_1ad3ecd3dae2f48e9caf5d137dde26eec3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const value_type &amp;</type>
        <definition>const value_type&amp; operator()</definition>
        <argsstring>(const std::pair&lt; Key, T &gt; &amp;key_value) const noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>const std::pair&lt; Key, T &gt; &amp;</type>
          <declname>key_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="119" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classpxr__tsl_1_1robin__map_1_1_value_select_1a92e57608a9a9a15ff42fe1d0a8a0f1af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type &amp;</type>
        <definition>value_type&amp; operator()</definition>
        <argsstring>(std::pair&lt; Key, T &gt; &amp;key_value) noexcept</argsstring>
        <name>operator()</name>
        <param>
          <type>std::pair&lt; Key, T &gt; &amp;</type>
          <declname>key_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="124" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="124" bodyend="126"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/pxrTslRobinMap/robin_map.h" line="115" column="1" bodyfile="pxr/base/tf/pxrTslRobinMap/robin_map.h" bodystart="115" bodyend="127"/>
    <listofallmembers>
      <member refid="classpxr__tsl_1_1robin__map_1_1_value_select_1ad3ecd3dae2f48e9caf5d137dde26eec3" prot="public" virt="non-virtual"><scope>pxr_tsl::robin_map::ValueSelect</scope><name>operator()</name></member>
      <member refid="classpxr__tsl_1_1robin__map_1_1_value_select_1a92e57608a9a9a15ff42fe1d0a8a0f1af" prot="public" virt="non-virtual"><scope>pxr_tsl::robin_map::ValueSelect</scope><name>operator()</name></member>
      <member refid="classpxr__tsl_1_1robin__map_1_1_value_select_1afb9ded5f49336ae503bb9f2035ea902b" prot="public" virt="non-virtual"><scope>pxr_tsl::robin_map::ValueSelect</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
