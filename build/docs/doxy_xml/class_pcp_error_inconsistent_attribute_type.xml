<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_pcp_error_inconsistent_attribute_type" kind="class" language="C++" prot="public">
    <compoundname>PcpErrorInconsistentAttributeType</compoundname>
    <basecompoundref prot="public" virt="non-virtual">PcpErrorInconsistentPropertyBase</basecompoundref>
    <includes refid="pcp_2errors_8h" local="no">errors.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_pcp_error_inconsistent_attribute_type_1a12917367f5448e22ca0b8902ef268be1" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken definingValueType</definition>
        <argsstring></argsstring>
        <name>definingValueType</name>
        <briefdescription>
<para>The value type from the defining spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="263" column="1" bodyfile="pxr/usd/pcp/errors.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_pcp_error_inconsistent_attribute_type_1a4b537717d9a78895d6ae6631b2767a47" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken conflictingValueType</definition>
        <argsstring></argsstring>
        <name>conflictingValueType</name>
        <briefdescription>
<para>The value type from the conflicting spec. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="265" column="1" bodyfile="pxr/usd/pcp/errors.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_pcp_error_inconsistent_attribute_type_1aceed40f25c0285193d46e2e946a42e9a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PcpErrorInconsistentAttributeTypePtr</type>
        <definition>static PcpErrorInconsistentAttributeTypePtr New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
<para>Returns a new error object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="256" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_pcp_error_inconsistent_attribute_type_1a518be96fda9b21981e9334222d9855bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PCP_API</type>
        <definition>PCP_API ~PcpErrorInconsistentAttributeType</definition>
        <argsstring>() override</argsstring>
        <name>~PcpErrorInconsistentAttributeType</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_pcp_error_inconsistent_attribute_type_1aa5ddec63c216bb23704d33a73efae798" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>PCP_API std::string</type>
        <definition>PCP_API std::string ToString</definition>
        <argsstring>() const override</argsstring>
        <name>ToString</name>
        <reimplements refid="class_pcp_error_base_1a7797ce7c715f383c3538fc93bab9ddf1">ToString</reimplements>
        <briefdescription>
<para>Converts error to string message. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="260" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_pcp_error_inconsistent_attribute_type_1a3f20d2020aa6dc813be8aaa4904c40c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PcpErrorInconsistentAttributeType</definition>
        <argsstring>()</argsstring>
        <name>PcpErrorInconsistentAttributeType</name>
        <briefdescription>
<para>Constructor is private. Use <ref refid="class_pcp_error_inconsistent_attribute_type_1aceed40f25c0285193d46e2e946a42e9a" kindref="member">New()</ref> instead. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/pcp/errors.h" line="269" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Attributes that have specs with conflicting definitions. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4521">
        <label>PcpErrorInconsistentAttributeType</label>
        <link refid="class_pcp_error_inconsistent_attribute_type"/>
        <childnode refid="4522" relation="usage">
          <edgelabel>conflictingValueType</edgelabel>
          <edgelabel>definingValueType</edgelabel>
        </childnode>
      </node>
      <node id="4522">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/pcp/errors.h" line="253" column="1" bodyfile="pxr/usd/pcp/errors.h" bodystart="252" bodyend="270"/>
    <listofallmembers>
      <member refid="class_pcp_error_inconsistent_property_base_1aadbfd190471c48fe3f38cc9490958f9d" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>conflictingLayerIdentifier</name></member>
      <member refid="class_pcp_error_inconsistent_property_base_1a8357980a06db8fa9774f9cd4e7a9a0b5" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>conflictingSpecPath</name></member>
      <member refid="class_pcp_error_inconsistent_attribute_type_1a4b537717d9a78895d6ae6631b2767a47" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>conflictingValueType</name></member>
      <member refid="class_pcp_error_inconsistent_property_base_1af7d7191a749b219391e9579945ab6f8e" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>definingLayerIdentifier</name></member>
      <member refid="class_pcp_error_inconsistent_property_base_1a743c1c9d1b8c35b820f972fc4ecb9322" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>definingSpecPath</name></member>
      <member refid="class_pcp_error_inconsistent_attribute_type_1a12917367f5448e22ca0b8902ef268be1" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>definingValueType</name></member>
      <member refid="class_pcp_error_base_1af0c36d3b2b60f40635b5ace0f81b4bd9" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>errorType</name></member>
      <member refid="class_pcp_error_inconsistent_attribute_type_1aceed40f25c0285193d46e2e946a42e9a" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>New</name></member>
      <member refid="class_pcp_error_base_1ace9c7e042b8d107893820423077007bb" prot="protected" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>PcpErrorBase</name></member>
      <member refid="class_pcp_error_inconsistent_attribute_type_1a3f20d2020aa6dc813be8aaa4904c40c4" prot="private" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>PcpErrorInconsistentAttributeType</name></member>
      <member refid="class_pcp_error_inconsistent_property_base_1af30aede525bc0c2fa775d776a3dc3f1f" prot="protected" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>PcpErrorInconsistentPropertyBase</name></member>
      <member refid="class_pcp_error_base_1ab16f7fd8acbb01e5e25606feeae63e43" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>rootSite</name></member>
      <member refid="class_pcp_error_inconsistent_attribute_type_1aa5ddec63c216bb23704d33a73efae798" prot="public" virt="virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>ToString</name></member>
      <member refid="class_pcp_error_base_1a2a6a9d97af335d20059cf598da17200e" prot="public" virt="virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>~PcpErrorBase</name></member>
      <member refid="class_pcp_error_inconsistent_attribute_type_1a518be96fda9b21981e9334222d9855bd" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>~PcpErrorInconsistentAttributeType</name></member>
      <member refid="class_pcp_error_inconsistent_property_base_1a36c8392de568a2e068c545254236574b" prot="public" virt="non-virtual"><scope>PcpErrorInconsistentAttributeType</scope><name>~PcpErrorInconsistentPropertyBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
