<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_glf_g_l_context_registration_interface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>GlfGLContextRegistrationInterface</compoundname>
    <includes refid="gl_context_8h" local="no">glContext.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_glf_g_l_context_registration_interface_1a93797f074ea1364629f8a6d6c3e72dba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GLF_API</type>
        <definition>virtual GLF_API ~GlfGLContextRegistrationInterface</definition>
        <argsstring>()</argsstring>
        <name>~GlfGLContextRegistrationInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/glContext.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_g_l_context_registration_interface_1a6600024b7179a9634d21ac4620b8554a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GlfGLContextRegistrationInterface</definition>
        <argsstring>(const GlfGLContextRegistrationInterface &amp;)=delete</argsstring>
        <name>GlfGLContextRegistrationInterface</name>
        <param>
          <type>const <ref refid="class_glf_g_l_context_registration_interface" kindref="compound">GlfGLContextRegistrationInterface</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/glContext.h" line="342" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_g_l_context_registration_interface_1a6e4a4adee6a17412fd3952066d4cfa40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_glf_g_l_context_registration_interface" kindref="compound">GlfGLContextRegistrationInterface</ref> &amp;</type>
        <definition>GlfGLContextRegistrationInterface&amp; operator=</definition>
        <argsstring>(const GlfGLContextRegistrationInterface &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_glf_g_l_context_registration_interface" kindref="compound">GlfGLContextRegistrationInterface</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/glContext.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_g_l_context_registration_interface_1afb53554c6f4a351d30fbac7fd888bc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>GlfGLContextSharedPtr</type>
        <definition>virtual GlfGLContextSharedPtr GetShared</definition>
        <argsstring>()=0</argsstring>
        <name>GetShared</name>
        <briefdescription>
<para>If this GLContext system supports a shared context this should return it. </para>
        </briefdescription>
        <detaileddescription>
<para>This will be called at most once. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/glContext.h" line="349" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_g_l_context_registration_interface_1a0cec0d447bd2c04a06f2b75c706f069e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>GlfGLContextSharedPtr</type>
        <definition>virtual GlfGLContextSharedPtr GetCurrent</definition>
        <argsstring>()=0</argsstring>
        <name>GetCurrent</name>
        <briefdescription>
<para>Whatever your GLContext system thinks is the current GL context may not really be the current context if another system has since changed the context. </para>
        </briefdescription>
        <detaileddescription>
<para>This method should return what it thinks is the current context. If it thinks there is no current context it should return <computeroutput>NULL</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/glContext.h" line="356" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_glf_g_l_context_registration_interface_1a2ae7c1f80934e86d4bcf742f2732533f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API GlfGLContextRegistrationInterface</definition>
        <argsstring>()</argsstring>
        <name>GlfGLContextRegistrationInterface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/glContext.h" line="360" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for registering a <ref refid="class_glf_g_l_context" kindref="compound">GlfGLContext</ref> system. </para>
    </briefdescription>
    <detaileddescription>
<para>If you subclass <ref refid="class_glf_g_l_context" kindref="compound">GlfGLContext</ref> you should subclass this type and instantiate an instance on the heap. It will be cleaned up automatically. </para>
    </detaileddescription>
    <location file="pxr/imaging/glf/glContext.h" line="336" column="1" bodyfile="pxr/imaging/glf/glContext.h" bodystart="335" bodyend="361"/>
    <listofallmembers>
      <member refid="class_glf_g_l_context_registration_interface_1a0cec0d447bd2c04a06f2b75c706f069e" prot="public" virt="pure-virtual"><scope>GlfGLContextRegistrationInterface</scope><name>GetCurrent</name></member>
      <member refid="class_glf_g_l_context_registration_interface_1afb53554c6f4a351d30fbac7fd888bc49" prot="public" virt="pure-virtual"><scope>GlfGLContextRegistrationInterface</scope><name>GetShared</name></member>
      <member refid="class_glf_g_l_context_registration_interface_1a6600024b7179a9634d21ac4620b8554a" prot="public" virt="non-virtual"><scope>GlfGLContextRegistrationInterface</scope><name>GlfGLContextRegistrationInterface</name></member>
      <member refid="class_glf_g_l_context_registration_interface_1a2ae7c1f80934e86d4bcf742f2732533f" prot="protected" virt="non-virtual"><scope>GlfGLContextRegistrationInterface</scope><name>GlfGLContextRegistrationInterface</name></member>
      <member refid="class_glf_g_l_context_registration_interface_1a6e4a4adee6a17412fd3952066d4cfa40" prot="public" virt="non-virtual"><scope>GlfGLContextRegistrationInterface</scope><name>operator=</name></member>
      <member refid="class_glf_g_l_context_registration_interface_1a93797f074ea1364629f8a6d6c3e72dba" prot="public" virt="virtual"><scope>GlfGLContextRegistrationInterface</scope><name>~GlfGLContextRegistrationInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
