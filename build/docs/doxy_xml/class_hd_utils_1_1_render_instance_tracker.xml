<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_utils_1_1_render_instance_tracker" kind="class" language="C++" prot="public">
    <compoundname>HdUtils::RenderInstanceTracker</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_utils_1_1_render_instance_tracker_1ad58726c5bf1416884dcf8fa3f9c2fe79" prot="public" static="no">
        <type>std::weak_ptr&lt; T &gt;</type>
        <definition>using TWeakPtr =  std::weak_ptr&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>TWeakPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="78" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_utils_1_1_render_instance_tracker_1a77868e9cb350844d9353e196077b38f7" prot="public" static="no">
        <type>std::shared_ptr&lt; T &gt;</type>
        <definition>using TSharedPtr =  std::shared_ptr&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>TSharedPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="79" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_utils_1_1_render_instance_tracker_1aec7e114b935ffb555ea2f9c95926b537" prot="private" static="no">
        <type>std::unordered_map&lt; std::string, TWeakPtr &gt;</type>
        <definition>using _IdToInstanceMap =  std::unordered_map&lt;std::string, TWeakPtr&gt;</definition>
        <argsstring></argsstring>
        <name>_IdToInstanceMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="125" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_utils_1_1_render_instance_tracker_1ad03988faeb24e154718657f0942bda95" prot="private" static="no" mutable="no">
        <type>_IdToInstanceMap</type>
        <definition>_IdToInstanceMap idInstanceMap</definition>
        <argsstring></argsstring>
        <name>idInstanceMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="126" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_utils_1_1_render_instance_tracker_1a13dffb3eff2c67502ccd7d84b5aae532" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void RegisterInstance</definition>
        <argsstring>(std::string const &amp;renderInstanceId, TSharedPtr const &amp;sp)</argsstring>
        <name>RegisterInstance</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>renderInstanceId</declname>
        </param>
        <param>
          <type>TSharedPtr const &amp;</type>
          <declname>sp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="81" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="81" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_utils_1_1_render_instance_tracker_1a15809b1eebf2811e88af696b9a10b6d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void UnregisterInstance</definition>
        <argsstring>(std::string const &amp;renderInstanceId)</argsstring>
        <name>UnregisterInstance</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>renderInstanceId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="105" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_utils_1_1_render_instance_tracker_1afe53ffd5d8622aea3ff0d1aeee2b8419" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>TSharedPtr</type>
        <definition>TSharedPtr GetInstance</definition>
        <argsstring>(std::string const &amp;id)</argsstring>
        <name>GetInstance</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/utils.h" line="111" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="111" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/imaging/hd/utils.h" line="76" column="1" bodyfile="pxr/imaging/hd/utils.h" bodystart="75" bodyend="127"/>
    <listofallmembers>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1aec7e114b935ffb555ea2f9c95926b537" prot="private" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>_IdToInstanceMap</name></member>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1afe53ffd5d8622aea3ff0d1aeee2b8419" prot="public" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>GetInstance</name></member>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1ad03988faeb24e154718657f0942bda95" prot="private" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>idInstanceMap</name></member>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1a13dffb3eff2c67502ccd7d84b5aae532" prot="public" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>RegisterInstance</name></member>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1a77868e9cb350844d9353e196077b38f7" prot="public" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>TSharedPtr</name></member>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1ad58726c5bf1416884dcf8fa3f9c2fe79" prot="public" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>TWeakPtr</name></member>
      <member refid="class_hd_utils_1_1_render_instance_tracker_1a15809b1eebf2811e88af696b9a10b6d3" prot="public" virt="non-virtual"><scope>HdUtils::RenderInstanceTracker</scope><name>UnregisterInstance</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
