<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_aggregation_strategy" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>HdStAggregationStrategy</compoundname>
    <derivedcompoundref refid="class_hd_st_interleaved_memory_manager" prot="public" virt="non-virtual">HdStInterleavedMemoryManager</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_v_b_o_memory_manager" prot="public" virt="non-virtual">HdStVBOMemoryManager</derivedcompoundref>
    <derivedcompoundref refid="class_hd_st_v_b_o_simple_memory_manager" prot="public" virt="non-virtual">HdStVBOSimpleMemoryManager</derivedcompoundref>
    <includes refid="strategy_base_8h" local="no">strategyBase.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_hd_st_aggregation_strategy_1a2047256c7e1de8d680e76721feb36004" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t AggregationId</definition>
        <argsstring></argsstring>
        <name>AggregationId</name>
        <briefdescription>
<para>Aggregation ID. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="51" column="1" bodyfile="pxr/imaging/hdSt/strategyBase.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1a9114b47d0deeac33c26fab387a5af13f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API</type>
        <definition>virtual HDST_API ~HdStAggregationStrategy</definition>
        <argsstring>()</argsstring>
        <name>~HdStAggregationStrategy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1a28828d280f4384459ac016b1fe46cce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HdBufferArraySharedPtr</type>
        <definition>virtual HdBufferArraySharedPtr CreateBufferArray</definition>
        <argsstring>(TfToken const &amp;role, HdBufferSpecVector const &amp;bufferSpecs, HdBufferArrayUsageHint usageHint)=0</argsstring>
        <name>CreateBufferArray</name>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1a21808210d9ca660d8bd0027cd2654ad8">CreateBufferArray</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1a21808210d9ca660d8bd0027cd2654ad8">CreateBufferArray</reimplementedby>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>role</declname>
        </param>
        <param>
          <type>HdBufferSpecVector const &amp;</type>
          <declname>bufferSpecs</declname>
        </param>
        <param>
          <type><ref refid="union_hd_buffer_array_usage_hint" kindref="compound">HdBufferArrayUsageHint</ref></type>
          <declname>usageHint</declname>
        </param>
        <briefdescription>
<para>Factory for creating <ref refid="class_hd_buffer_array" kindref="compound">HdBufferArray</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1a5d68fca2e02a7452185a8e2118d96a7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>HdBufferArrayRangeSharedPtr</type>
        <definition>virtual HdBufferArrayRangeSharedPtr CreateBufferArrayRange</definition>
        <argsstring>()=0</argsstring>
        <name>CreateBufferArrayRange</name>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1a6c196e859f1c2058ef734c53f6842ce6">CreateBufferArrayRange</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1a6c196e859f1c2058ef734c53f6842ce6">CreateBufferArrayRange</reimplementedby>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1af24bfb144844f8bec01f8cd6722fa02c">CreateBufferArrayRange</reimplementedby>
        <briefdescription>
<para>Factory for creating <ref refid="class_hd_buffer_array_range" kindref="compound">HdBufferArrayRange</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1aa4a521f22894f21feb81001f7be3b16b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_hd_st_aggregation_strategy_1a2047256c7e1de8d680e76721feb36004" kindref="member">AggregationId</ref></type>
        <definition>virtual AggregationId ComputeAggregationId</definition>
        <argsstring>(HdBufferSpecVector const &amp;bufferSpecs, HdBufferArrayUsageHint usageHint) const =0</argsstring>
        <name>ComputeAggregationId</name>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1ad26b4fb98e2b7abcc19b2aef53b8dad6">ComputeAggregationId</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1a6d15189ba4ea0c6e5a1beab4ded8516d">ComputeAggregationId</reimplementedby>
        <param>
          <type>HdBufferSpecVector const &amp;</type>
          <declname>bufferSpecs</declname>
        </param>
        <param>
          <type><ref refid="union_hd_buffer_array_usage_hint" kindref="compound">HdBufferArrayUsageHint</ref></type>
          <declname>usageHint</declname>
        </param>
        <briefdescription>
<para>Returns id for given bufferSpecs to be used for aggregation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1a9e8bf9c2b5227d0f0fe2ec91aeef766e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>HdBufferSpecVector</type>
        <definition>virtual HdBufferSpecVector GetBufferSpecs</definition>
        <argsstring>(HdBufferArraySharedPtr const &amp;bufferArray) const =0</argsstring>
        <name>GetBufferSpecs</name>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1aeedeb4bf34fb8228d7972b9493f587ce">GetBufferSpecs</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1aeedeb4bf34fb8228d7972b9493f587ce">GetBufferSpecs</reimplementedby>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1a73cb9a9afaeba145d00a333dfdcad6cc">GetBufferSpecs</reimplementedby>
        <param>
          <type>HdBufferArraySharedPtr const &amp;</type>
          <declname>bufferArray</declname>
        </param>
        <briefdescription>
<para>Returns the buffer specs from a given buffer array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1ab22944b6e642ce1274e3b84f8dd95d53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t GetResourceAllocation</definition>
        <argsstring>(HdBufferArraySharedPtr const &amp;bufferArray, VtDictionary &amp;result) const =0</argsstring>
        <name>GetResourceAllocation</name>
        <reimplementedby refid="class_hd_st_v_b_o_simple_memory_manager_1a1b0289ff2ec0fd297448442afddd55f1">GetResourceAllocation</reimplementedby>
        <reimplementedby refid="class_hd_st_v_b_o_memory_manager_1a1b0289ff2ec0fd297448442afddd55f1">GetResourceAllocation</reimplementedby>
        <reimplementedby refid="class_hd_st_interleaved_memory_manager_1a66bd3d0cef89a39663037e37947d21d0">GetResourceAllocation</reimplementedby>
        <param>
          <type>HdBufferArraySharedPtr const &amp;</type>
          <declname>bufferArray</declname>
        </param>
        <param>
          <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Returns the accumulated GPU resource allocation for items in the BufferArray passed as parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_aggregation_strategy_1ae28bed1a22e03e20bf40d880aa790b3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>HDST_API void</type>
        <definition>virtual HDST_API void Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>(Optional) called to Flush consolidated / staging buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/strategyBase.h" line="83" column="1" bodyfile="pxr/imaging/hdSt/strategyBase.h" bodystart="83" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Aggregation strategy base class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3046">
        <label>HdStVBOMemoryManager</label>
        <link refid="class_hd_st_v_b_o_memory_manager"/>
        <childnode refid="3044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3045">
        <label>HdStInterleavedMemoryManager</label>
        <link refid="class_hd_st_interleaved_memory_manager"/>
        <childnode refid="3044" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3044">
        <label>HdStAggregationStrategy</label>
        <link refid="class_hd_st_aggregation_strategy"/>
      </node>
      <node id="3047">
        <label>HdStVBOSimpleMemoryManager</label>
        <link refid="class_hd_st_v_b_o_simple_memory_manager"/>
        <childnode refid="3044" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="pxr/imaging/hdSt/strategyBase.h" line="48" column="1" bodyfile="pxr/imaging/hdSt/strategyBase.h" bodystart="48" bodyend="84"/>
    <listofallmembers>
      <member refid="class_hd_st_aggregation_strategy_1a2047256c7e1de8d680e76721feb36004" prot="public" virt="non-virtual"><scope>HdStAggregationStrategy</scope><name>AggregationId</name></member>
      <member refid="class_hd_st_aggregation_strategy_1aa4a521f22894f21feb81001f7be3b16b" prot="public" virt="pure-virtual"><scope>HdStAggregationStrategy</scope><name>ComputeAggregationId</name></member>
      <member refid="class_hd_st_aggregation_strategy_1a28828d280f4384459ac016b1fe46cce5" prot="public" virt="pure-virtual"><scope>HdStAggregationStrategy</scope><name>CreateBufferArray</name></member>
      <member refid="class_hd_st_aggregation_strategy_1a5d68fca2e02a7452185a8e2118d96a7a" prot="public" virt="pure-virtual"><scope>HdStAggregationStrategy</scope><name>CreateBufferArrayRange</name></member>
      <member refid="class_hd_st_aggregation_strategy_1ae28bed1a22e03e20bf40d880aa790b3e" prot="public" virt="virtual"><scope>HdStAggregationStrategy</scope><name>Flush</name></member>
      <member refid="class_hd_st_aggregation_strategy_1a9e8bf9c2b5227d0f0fe2ec91aeef766e" prot="public" virt="pure-virtual"><scope>HdStAggregationStrategy</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_st_aggregation_strategy_1ab22944b6e642ce1274e3b84f8dd95d53" prot="public" virt="pure-virtual"><scope>HdStAggregationStrategy</scope><name>GetResourceAllocation</name></member>
      <member refid="class_hd_st_aggregation_strategy_1a9114b47d0deeac33c26fab387a5af13f" prot="public" virt="virtual"><scope>HdStAggregationStrategy</scope><name>~HdStAggregationStrategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
