<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_event_data" kind="class" language="C++" prot="public">
    <compoundname>TraceEventData</compoundname>
    <includes refid="event_data_8h" local="no">eventData.h</includes>
    <innerclass refid="struct_trace_event_data_1_1___no_data" prot="private">TraceEventData::_NoData</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_trace_event_data_1aea5f8c0bf66c802c843a9841cbb4bd4f" prot="private" static="no">
        <type>std::variant&lt; _NoData, std::string, bool, int64_t, uint64_t, double &gt;</type>
        <definition>using Variant =  std::variant&lt;_NoData, std::string, bool, int64_t, uint64_t, double&gt;</definition>
        <argsstring></argsstring>
        <name>Variant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="90" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_event_data_1aad1850aab05ea47a39f2e49d15b332c9" prot="private" static="no" mutable="no">
        <type>Variant</type>
        <definition>Variant _data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="92" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_event_data_1abb04dfdc7707139a30bcb15f9afc8a1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventData</definition>
        <argsstring>()</argsstring>
        <name>TraceEventData</name>
        <briefdescription>
<para>Ctor for Invalid type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="48" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1aeb597fec851f2466adebe4dff08a2a20" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventData</definition>
        <argsstring>(bool b)</argsstring>
        <name>TraceEventData</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Ctor for Bool type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="51" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1a8ae702508e103780b67a3a2b0c68c4c0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventData</definition>
        <argsstring>(int64_t i)</argsstring>
        <name>TraceEventData</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Ctor for Int type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="54" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1a265b1c726e87cf728e6abf6daf2d7ea8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventData</definition>
        <argsstring>(uint64_t i)</argsstring>
        <name>TraceEventData</name>
        <param>
          <type>uint64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Ctor for UInt type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="57" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1afe4f19b68ebd208e9e63507e6644b6f5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventData</definition>
        <argsstring>(double d)</argsstring>
        <name>TraceEventData</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Ctor for Float type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="60" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1adea3474fee3c920536c00b6a2cd6b361" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TraceEventData</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>TraceEventData</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Ctor for String type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="63" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1a27c7d66fa703659f7ba4d14add088c76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API <ref refid="class_trace_event_1a75e7df7c4007df61cf3716ba2d3ed8e3" kindref="member">TraceEvent::DataType</ref></type>
        <definition>TRACE_API TraceEvent::DataType GetType</definition>
        <argsstring>() const</argsstring>
        <name>GetType</name>
        <briefdescription>
<para>Returns the Type of the data stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1aafda760b37e4576649ae719a6e54bb93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API const int64_t *</type>
        <definition>TRACE_API const int64_t* GetInt</definition>
        <argsstring>() const</argsstring>
        <name>GetInt</name>
        <briefdescription>
<para>Returns a pointer to the data or nullptr if the type is not Int. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1af0195428c6b639edc73c91f699f0f4d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API const uint64_t *</type>
        <definition>TRACE_API const uint64_t* GetUInt</definition>
        <argsstring>() const</argsstring>
        <name>GetUInt</name>
        <briefdescription>
<para>Returns a pointer to the data or nullptr if the type is not UInt. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1a422bb620aa95b68d6e95b95c65e7018f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API const double *</type>
        <definition>TRACE_API const double* GetFloat</definition>
        <argsstring>() const</argsstring>
        <name>GetFloat</name>
        <briefdescription>
<para>Returns a pointer to the data or nullptr if the type is not Float. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1ab995062aefb723e31feb96fa96be7380" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API const bool *</type>
        <definition>TRACE_API const bool* GetBool</definition>
        <argsstring>() const</argsstring>
        <name>GetBool</name>
        <briefdescription>
<para>Returns a pointer to the data or nullptr if the type is not Bool. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1aa5a9ee6656339814e5e78632fd2a7bd7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API const std::string *</type>
        <definition>TRACE_API const std::string* GetString</definition>
        <argsstring>() const</argsstring>
        <name>GetString</name>
        <briefdescription>
<para>Returns a pointer to the data or nullptr if the type is not String. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_data_1a5e94062058b78ce4015b693d207f77c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void WriteJson</definition>
        <argsstring>(JsWriter &amp;) const</argsstring>
        <name>WriteJson</name>
        <param>
          <type><ref refid="class_js_writer" kindref="compound">JsWriter</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Writes a json representation of the data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventData.h" line="84" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class holds data that can be stored in TraceEvents. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/eventData.h" line="45" column="1" bodyfile="pxr/base/trace/eventData.h" bodystart="45" bodyend="93"/>
    <listofallmembers>
      <member refid="class_trace_event_data_1aad1850aab05ea47a39f2e49d15b332c9" prot="private" virt="non-virtual"><scope>TraceEventData</scope><name>_data</name></member>
      <member refid="class_trace_event_data_1ab995062aefb723e31feb96fa96be7380" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>GetBool</name></member>
      <member refid="class_trace_event_data_1a422bb620aa95b68d6e95b95c65e7018f" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>GetFloat</name></member>
      <member refid="class_trace_event_data_1aafda760b37e4576649ae719a6e54bb93" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>GetInt</name></member>
      <member refid="class_trace_event_data_1aa5a9ee6656339814e5e78632fd2a7bd7" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>GetString</name></member>
      <member refid="class_trace_event_data_1a27c7d66fa703659f7ba4d14add088c76" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>GetType</name></member>
      <member refid="class_trace_event_data_1af0195428c6b639edc73c91f699f0f4d5" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>GetUInt</name></member>
      <member refid="class_trace_event_data_1abb04dfdc7707139a30bcb15f9afc8a1d" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>TraceEventData</name></member>
      <member refid="class_trace_event_data_1aeb597fec851f2466adebe4dff08a2a20" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>TraceEventData</name></member>
      <member refid="class_trace_event_data_1a8ae702508e103780b67a3a2b0c68c4c0" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>TraceEventData</name></member>
      <member refid="class_trace_event_data_1a265b1c726e87cf728e6abf6daf2d7ea8" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>TraceEventData</name></member>
      <member refid="class_trace_event_data_1afe4f19b68ebd208e9e63507e6644b6f5" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>TraceEventData</name></member>
      <member refid="class_trace_event_data_1adea3474fee3c920536c00b6a2cd6b361" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>TraceEventData</name></member>
      <member refid="class_trace_event_data_1aea5f8c0bf66c802c843a9841cbb4bd4f" prot="private" virt="non-virtual"><scope>TraceEventData</scope><name>Variant</name></member>
      <member refid="class_trace_event_data_1a5e94062058b78ce4015b693d207f77c2" prot="public" virt="non-virtual"><scope>TraceEventData</scope><name>WriteJson</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
