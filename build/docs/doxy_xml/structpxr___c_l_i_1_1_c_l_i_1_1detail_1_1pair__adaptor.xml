<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor" kind="struct" language="C++" prot="public">
    <compoundname>pxr_CLI::CLI::detail::pair_adaptor</compoundname>
    <basecompoundref prot="public" virt="non-virtual">false_type</basecompoundref>
    <includes refid="_c_l_i11_8h" local="no">CLI11.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>_</declname>
        <defname>_</defname>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a58b363a6c15dff89a9b7fad93191ea96" prot="public" static="no">
        <type>typename T::value_type</type>
        <definition>using value_type =  typename T::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="1050" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="1050" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a8447110dbb1d0f54cfe10705ac2f7034" prot="public" static="no">
        <type>typename std::remove_const&lt; value_type &gt;::type</type>
        <definition>using first_type =  typename std::remove_const&lt;value_type&gt;::type</definition>
        <argsstring></argsstring>
        <name>first_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="1051" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="1051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a32dc458ce015517b515a2073c4c686fa" prot="public" static="no">
        <type>typename std::remove_const&lt; value_type &gt;::type</type>
        <definition>using second_type =  typename std::remove_const&lt;value_type&gt;::type</definition>
        <argsstring></argsstring>
        <name>second_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="1052" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="1052" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1ab0629958fc5069cb83d8f69c33682257" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Q</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto first</definition>
        <argsstring>(Q &amp;&amp;pair_value) -&gt; decltype(std::forward&lt; Q &gt;(pair_value))</argsstring>
        <name>first</name>
        <param>
          <type>Q &amp;&amp;</type>
          <declname>pair_value</declname>
        </param>
        <briefdescription>
<para>Get the first value (really just the underlying value) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="1055" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="1055" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a31bb3a16383913744f1753da815e5cb4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Q</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto second</definition>
        <argsstring>(Q &amp;&amp;pair_value) -&gt; decltype(std::forward&lt; Q &gt;(pair_value))</argsstring>
        <name>second</name>
        <param>
          <type>Q &amp;&amp;</type>
          <declname>pair_value</declname>
        </param>
        <briefdescription>
<para>Get the second value (really just the underlying value) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="1059" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="1059" bodyend="1061"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Adaptor for set-like structure: This just wraps a normal container in a few utilities that do almost nothing. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/pxrCLI11/CLI11.h" line="1049" column="1" bodyfile="pxr/base/tf/pxrCLI11/CLI11.h" bodystart="1049" bodyend="1062"/>
    <listofallmembers>
      <member refid="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1ab0629958fc5069cb83d8f69c33682257" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::detail::pair_adaptor</scope><name>first</name></member>
      <member refid="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a8447110dbb1d0f54cfe10705ac2f7034" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::detail::pair_adaptor</scope><name>first_type</name></member>
      <member refid="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a31bb3a16383913744f1753da815e5cb4" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::detail::pair_adaptor</scope><name>second</name></member>
      <member refid="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a32dc458ce015517b515a2073c4c686fa" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::detail::pair_adaptor</scope><name>second_type</name></member>
      <member refid="structpxr___c_l_i_1_1_c_l_i_1_1detail_1_1pair__adaptor_1a58b363a6c15dff89a9b7fad93191ea96" prot="public" virt="non-virtual"><scope>pxr_CLI::CLI::detail::pair_adaptor</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
