<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__group__tf___tf_compiler_aids" kind="group">
    <compoundname>group_tf_TfCompilerAids</compoundname>
    <title>Compiler Aids</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__tf___tf_compiler_aids_1ga14d173d760921146a85f1db44f806916" prot="public" static="no">
        <name>TF_UNUSED</name>
        <param><defname>x</defname></param>
        <initializer>(void) x</initializer>
        <briefdescription>
<para>Stops compiler from producing unused argument or variable warnings. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful mainly in C, because in C++ you can just leave the variable unnamed. However, there are situations where this can be useful even in C++, such as <programlisting><codeline><highlight class="normal">void</highlight></codeline>
<codeline><highlight class="normal">MyClass::Method(<sp/>int<sp/>foo<sp/>)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal">#if<sp/>defined(__APPLE__)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TF_UNUSED(<sp/>foo<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>do<sp/>something<sp/>that<sp/>doesn&apos;t<sp/>need<sp/>foo...</highlight></codeline>
<codeline><highlight class="normal">#else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>do<sp/>something<sp/>that<sp/>needs<sp/>foo</highlight></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
<codeline><highlight class="normal">}<sp/></highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/tf.h" line="185" column="9" bodyfile="pxr/base/tf/tf.h" bodystart="185" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Classes/functions that help getting code compiled cleanly. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
