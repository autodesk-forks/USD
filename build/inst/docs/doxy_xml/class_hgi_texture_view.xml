<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hgi_texture_view" kind="class" language="C++" prot="public">
    <compoundname>HgiTextureView</compoundname>
    <includes refid="hgi_2texture_8h" local="no">texture.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hgi_texture_view_1ab35ab187e9a0df5da8b72e7e033f8ece" prot="protected" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle _viewTexture</definition>
        <argsstring></argsstring>
        <name>_viewTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="304" column="1" bodyfile="pxr/imaging/hgi/texture.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hgi_texture_view_1a4d235572ede36032d37fe1709017defa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API</type>
        <definition>HGI_API HgiTextureView</definition>
        <argsstring>(HgiTextureViewDesc const &amp;desc)</argsstring>
        <name>HgiTextureView</name>
        <param>
          <type><ref refid="struct_hgi_texture_view_desc" kindref="compound">HgiTextureViewDesc</ref> const &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_view_1a0de7fcca66943fe60f96c5a8ef8e1b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HGI_API</type>
        <definition>virtual HGI_API ~HgiTextureView</definition>
        <argsstring>()</argsstring>
        <name>~HgiTextureView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_view_1a187e16c1178d41473cb23eb2a432bc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API void</type>
        <definition>HGI_API void SetViewTexture</definition>
        <argsstring>(HgiTextureHandle const &amp;handle)</argsstring>
        <name>SetViewTexture</name>
        <param>
          <type>HgiTextureHandle const &amp;</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Set the handle to the texture that aliases another texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="297" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_view_1a53ab9a0fa2db1fc5bcab13b6fb90fb23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API HgiTextureHandle const  &amp;</type>
        <definition>HGI_API HgiTextureHandle const&amp; GetViewTexture</definition>
        <argsstring>() const</argsstring>
        <name>GetViewTexture</name>
        <briefdescription>
<para>Returns the handle to the texture that aliases another texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="301" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hgi_texture_view_1a3d471622b077ff58e0cb86ff5570a2da" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiTextureView</definition>
        <argsstring>()=delete</argsstring>
        <name>HgiTextureView</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="307" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_view_1ae84ba775af8040bc6424811f50261c98" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hgi_texture_view" kindref="compound">HgiTextureView</ref> &amp;</type>
        <definition>HgiTextureView&amp; operator=</definition>
        <argsstring>(const HgiTextureView &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hgi_texture_view" kindref="compound">HgiTextureView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hgi_texture_view_1a2232167a917c25fa2519914b15c89edf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HgiTextureView</definition>
        <argsstring>(const HgiTextureView &amp;)=delete</argsstring>
        <name>HgiTextureView</name>
        <param>
          <type>const <ref refid="class_hgi_texture_view" kindref="compound">HgiTextureView</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/texture.h" line="309" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a graphics platform independent GPU texture view resource. </para>
    </briefdescription>
    <detaileddescription>
<para>Texture Views should be created via <ref refid="class_hgi_1ab15f3473097b06ba3313a4d68993292f" kindref="member">Hgi::CreateTextureView</ref>.</para>
<para>A TextureView aliases the data of another texture and is a thin wrapper around a HgiTextureHandle. The embeded texture handle is used to add the texture to resource bindings for use in shaders.</para>
<para>For example when using a compute shader to fill the mip levels of a texture, like a lightDome texture, we can use a texture view to give the shader access to a specific mip level of a sourceTexture via a TextureView.</para>
<para>Another example is to conserve resources by reusing a RGBAF32 texture as a RGBAI32 texture once the F32 texture is no longer needed (transient resources). </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="4026">
        <label>HgiTextureView</label>
        <link refid="class_hgi_texture_view"/>
        <childnode refid="4027" relation="usage">
          <edgelabel>_viewTexture</edgelabel>
        </childnode>
      </node>
      <node id="4027">
        <label>HgiHandle&lt; class HgiTexture &gt;</label>
        <link refid="class_hgi_handle"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hgi/texture.h" line="287" column="1" bodyfile="pxr/imaging/hgi/texture.h" bodystart="286" bodyend="310"/>
    <listofallmembers>
      <member refid="class_hgi_texture_view_1ab35ab187e9a0df5da8b72e7e033f8ece" prot="protected" virt="non-virtual"><scope>HgiTextureView</scope><name>_viewTexture</name></member>
      <member refid="class_hgi_texture_view_1a53ab9a0fa2db1fc5bcab13b6fb90fb23" prot="public" virt="non-virtual"><scope>HgiTextureView</scope><name>GetViewTexture</name></member>
      <member refid="class_hgi_texture_view_1a4d235572ede36032d37fe1709017defa" prot="public" virt="non-virtual"><scope>HgiTextureView</scope><name>HgiTextureView</name></member>
      <member refid="class_hgi_texture_view_1a3d471622b077ff58e0cb86ff5570a2da" prot="private" virt="non-virtual"><scope>HgiTextureView</scope><name>HgiTextureView</name></member>
      <member refid="class_hgi_texture_view_1a2232167a917c25fa2519914b15c89edf" prot="private" virt="non-virtual"><scope>HgiTextureView</scope><name>HgiTextureView</name></member>
      <member refid="class_hgi_texture_view_1ae84ba775af8040bc6424811f50261c98" prot="private" virt="non-virtual"><scope>HgiTextureView</scope><name>operator=</name></member>
      <member refid="class_hgi_texture_view_1a187e16c1178d41473cb23eb2a432bc29" prot="public" virt="non-virtual"><scope>HgiTextureView</scope><name>SetViewTexture</name></member>
      <member refid="class_hgi_texture_view_1a0de7fcca66943fe60f96c5a8ef8e1b78" prot="public" virt="virtual"><scope>HgiTextureView</scope><name>~HgiTextureView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
