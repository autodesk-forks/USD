<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_skel_topology" kind="class" language="C++" prot="public">
    <compoundname>UsdSkelTopology</compoundname>
    <includes refid="usd_2usd_skel_2topology_8h" local="no">topology.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_skel_topology_1abba150eeef17e6e34513007b89c2909b" prot="private" static="no" mutable="no">
        <type>VtIntArray</type>
        <definition>VtIntArray _parentIndices</definition>
        <argsstring></argsstring>
        <name>_parentIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="95" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_skel_topology_1a608425cc4fc9efddf4c1634240464686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UsdSkelTopology</definition>
        <argsstring>()=default</argsstring>
        <name>UsdSkelTopology</name>
        <briefdescription>
<para>Construct an empty topology. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1aca08fcd28a81e0d1bb64265913251e78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelTopology</definition>
        <argsstring>(TfSpan&lt; const TfToken &gt; paths)</argsstring>
        <name>UsdSkelTopology</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;</type>
          <declname>paths</declname>
        </param>
        <briefdescription>
<para>Construct a skel topology from <computeroutput>paths</computeroutput>, an array holding ordered joint paths as tokens. </para>
        </briefdescription>
        <detaileddescription>
<para>Internally, each token must be converted to an <ref refid="class_sdf_path" kindref="compound">SdfPath</ref>. If <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> objects are already accessible, it is more efficient to use the construct taking an <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1ac2cb3cebe22327ef32b6deb3d09d29e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelTopology</definition>
        <argsstring>(TfSpan&lt; const SdfPath &gt; paths)</argsstring>
        <name>UsdSkelTopology</name>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &gt;</type>
          <declname>paths</declname>
        </param>
        <briefdescription>
<para>Construct a skel topology from <computeroutput>paths</computeroutput>, an array of joint paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a89a80a929d3716f244d9cd09a66b842e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API</type>
        <definition>USDSKEL_API UsdSkelTopology</definition>
        <argsstring>(const VtIntArray &amp;parentIndices)</argsstring>
        <name>UsdSkelTopology</name>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>parentIndices</declname>
        </param>
        <briefdescription>
<para>Construct a skel topology from an array of parent indices. </para>
        </briefdescription>
        <detaileddescription>
<para>For each joint, this provides the parent index of that joint, or -1 if none. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1ab8dd322bd2af52830487af0d2de84371" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool Validate</definition>
        <argsstring>(std::string *reason=nullptr) const</argsstring>
        <name>Validate</name>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Validate the topology. </para>
        </briefdescription>
        <detaileddescription>
<para>If validation is unsuccessful, a reason why will be written to <computeroutput>reason</computeroutput>, if provided. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a4970ec9f536d366700e01cf11f8f7e16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const VtIntArray &amp;</type>
        <definition>const VtIntArray&amp; GetParentIndices</definition>
        <argsstring>() const</argsstring>
        <name>GetParentIndices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="75" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a78446892823d2689510f68b4f11a63f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t GetNumJoints</definition>
        <argsstring>() const</argsstring>
        <name>GetNumJoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="77" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="79" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a779e634a4070d93af1e4b82bfe6c9149" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetParent</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>GetParent</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the parent joint of the <computeroutput>index&apos;th</computeroutput> joint, Returns -1 for joints with no parent (roots). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="83" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a4badff0d0915962e9dabcf0b507f0673" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsRoot</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>IsRoot</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns true if the <computeroutput>index&apos;th</computeroutput> joint is a root joint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="86" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a8504ba86de53b8ce90cf0afcffc769d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UsdSkelTopology &amp;o) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_skel_topology_1a9e5fad9978fbaa65b469bfea8a462f14" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UsdSkelTopology &amp;o) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/topology.h" line="90" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="90" bodyend="92"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Object holding information describing skeleton topology. </para>
    </briefdescription>
    <detaileddescription>
<para>This provides the hierarchical information needed to reason about joint relationships in a manner suitable to computations. </para>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/topology.h" line="46" column="1" bodyfile="pxr/usd/usdSkel/topology.h" bodystart="45" bodyend="96"/>
    <listofallmembers>
      <member refid="class_usd_skel_topology_1abba150eeef17e6e34513007b89c2909b" prot="private" virt="non-virtual"><scope>UsdSkelTopology</scope><name>_parentIndices</name></member>
      <member refid="class_usd_skel_topology_1a78446892823d2689510f68b4f11a63f4" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>GetNumJoints</name></member>
      <member refid="class_usd_skel_topology_1a779e634a4070d93af1e4b82bfe6c9149" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>GetParent</name></member>
      <member refid="class_usd_skel_topology_1a4970ec9f536d366700e01cf11f8f7e16" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>GetParentIndices</name></member>
      <member refid="class_usd_skel_topology_1a4badff0d0915962e9dabcf0b507f0673" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>IsRoot</name></member>
      <member refid="class_usd_skel_topology_1a9e5fad9978fbaa65b469bfea8a462f14" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>operator!=</name></member>
      <member refid="class_usd_skel_topology_1a8504ba86de53b8ce90cf0afcffc769d6" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>operator==</name></member>
      <member refid="class_usd_skel_topology_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>size</name></member>
      <member refid="class_usd_skel_topology_1a608425cc4fc9efddf4c1634240464686" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>UsdSkelTopology</name></member>
      <member refid="class_usd_skel_topology_1aca08fcd28a81e0d1bb64265913251e78" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>UsdSkelTopology</name></member>
      <member refid="class_usd_skel_topology_1ac2cb3cebe22327ef32b6deb3d09d29e6" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>UsdSkelTopology</name></member>
      <member refid="class_usd_skel_topology_1a89a80a929d3716f244d9cd09a66b842e" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>UsdSkelTopology</name></member>
      <member refid="class_usd_skel_topology_1ab8dd322bd2af52830487af0d2de84371" prot="public" virt="non-virtual"><scope>UsdSkelTopology</scope><name>Validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
