<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_ext_comp_gpu_computation_resource" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStExtCompGpuComputationResource</compoundname>
    <includes refid="ext_comp_gpu_computation_resource_8h" local="no">extCompGpuComputationResource.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1ae94cba2f1270fbabb8d6bc82370aea90" prot="private" static="no" mutable="no">
        <type>HdBufferSpecVector</type>
        <definition>HdBufferSpecVector _outputBufferSpecs</definition>
        <argsstring></argsstring>
        <name>_outputBufferSpecs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="115" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1a42c1f71bdedf408afb2b59e1d20ab533" prot="private" static="no" mutable="no">
        <type>HdSt_ExtCompComputeShaderSharedPtr</type>
        <definition>HdSt_ExtCompComputeShaderSharedPtr _kernel</definition>
        <argsstring></argsstring>
        <name>_kernel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="116" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1a3e6b44f158f4c198931d808e1d281d4a" prot="private" static="no" mutable="no">
        <type>HdStResourceRegistrySharedPtr</type>
        <definition>HdStResourceRegistrySharedPtr _registry</definition>
        <argsstring></argsstring>
        <name>_registry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="117" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1a32d303b11cf771d46e92b4b972ee9b0a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _shaderSourceHash</definition>
        <argsstring></argsstring>
        <name>_shaderSourceHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="119" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1aa6476ffe7d67b7aa9d0d479cd1ba2945" prot="private" static="no" mutable="no">
        <type>HdBufferArrayRangeSharedPtrVector</type>
        <definition>HdBufferArrayRangeSharedPtrVector _inputs</definition>
        <argsstring></argsstring>
        <name>_inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="120" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1a7fedc62c68720595db5ee3d8d71608bb" prot="private" static="no" mutable="no">
        <type>HdStGLSLProgramSharedPtr</type>
        <definition>HdStGLSLProgramSharedPtr _computeProgram</definition>
        <argsstring></argsstring>
        <name>_computeProgram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="121" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_computation_resource_1a39bc3e63a3f9acbfbf5d6f517c369846" prot="private" static="no" mutable="no">
        <type>HdSt_ResourceBinder</type>
        <definition>HdSt_ResourceBinder _resourceBinder</definition>
        <argsstring></argsstring>
        <name>_resourceBinder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="122" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a36b1d3209eb830ac7af74ea8cd3cca49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompGpuComputationResource</definition>
        <argsstring>(HdBufferSpecVector const &amp;outputBufferSpecs, HdSt_ExtCompComputeShaderSharedPtr const &amp;kernel, HdBufferArrayRangeSharedPtrVector const &amp;inputs, HdStResourceRegistrySharedPtr const &amp;registry)</argsstring>
        <name>HdStExtCompGpuComputationResource</name>
        <param>
          <type>HdBufferSpecVector const &amp;</type>
          <declname>outputBufferSpecs</declname>
        </param>
        <param>
          <type>HdSt_ExtCompComputeShaderSharedPtr const &amp;</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>HdBufferArrayRangeSharedPtrVector const &amp;</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>HdStResourceRegistrySharedPtr const &amp;</type>
          <declname>registry</declname>
        </param>
        <briefdescription>
<para>Creates a GPU computation resource that can bind resources matching the layout of the compute kernel. </para>
        </briefdescription>
        <detaileddescription>
<para>The registry passed is the registry that the kernel program will be shared amongst. De-duplication of the compiled and linked program for runtime execution happens on a per-registry basis.</para>
<para>Memory for the input computation buffers must be provided This must be done prior to a <ref refid="class_hd_resource_registry_1a6acc6a3bb2a22c95bbda2c268a52f99b" kindref="member">HdResourceRegistry::Commit</ref> in which the computation has been added. Note that the Resource allocates no memory on its own and can be speculatively created and later de-duplicated, or discarded, without wasting resources.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">outputBufferSpecs</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer specs that the computation is expecting to output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>the compute kernel source to run as the computation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">registry</parametername>
</parameternamelist>
<parameterdescription>
<para>the registry that the internal computation will cache and de-duplicate its compute shader instance with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a965cf31737e18e3f9e1d1773add00ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ~HdStExtCompGpuComputationResource</definition>
        <argsstring>()=default</argsstring>
        <name>~HdStExtCompGpuComputationResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a59543cb39b6003be893c2d1ed5202f7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HdBufferArrayRangeSharedPtrVector const  &amp;</type>
        <definition>HdBufferArrayRangeSharedPtrVector const&amp; GetInputs</definition>
        <argsstring>() const</argsstring>
        <name>GetInputs</name>
        <briefdescription>
<para>Gets the <ref refid="class_hd_buffer_array_range" kindref="compound">HdBufferArrayRange</ref> that inputs should be loaded into using the resource binder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="84" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1ac1fe111b3414a7caab0ee30c2ca199d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HdStGLSLProgramSharedPtr const  &amp;</type>
        <definition>HdStGLSLProgramSharedPtr const&amp; GetProgram</definition>
        <argsstring>()</argsstring>
        <name>GetProgram</name>
        <briefdescription>
<para>Gets the GPU <ref refid="class_hd_st_g_l_s_l_program" kindref="compound">HdStGLSLProgram</ref> to run to execute the computation. </para>
        </briefdescription>
        <detaileddescription>
<para>This may have been shared with many other instances in the same registry. The program is only valid for execution after Resolve has been called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="92" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a91653282c93570b268a88ab81f1bde7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HdSt_ResourceBinder const  &amp;</type>
        <definition>HdSt_ResourceBinder const&amp; GetResourceBinder</definition>
        <argsstring>()</argsstring>
        <name>GetResourceBinder</name>
        <briefdescription>
<para>Gets the resource binder that matches the layout of the compute program. </para>
        </briefdescription>
        <detaileddescription>
<para>The binder is only valid for resolving layouts after Resolve has been called. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="102" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="102" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a2486ade7c2dc4bf40dc78ba1a5c0954c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Resolve</definition>
        <argsstring>()</argsstring>
        <name>_Resolve</name>
        <briefdescription>
<para>Resolve the resource bindings and program for use by a computation. </para>
        </briefdescription>
        <detaileddescription>
<para>The compute program is resolved and linked against the input and output resource bindings and the kernel source in this step. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a448560c5e80e10edbb3a29ddd81ac52a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompGpuComputationResource</definition>
        <argsstring>()=delete</argsstring>
        <name>HdStExtCompGpuComputationResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a259b3fec4b962373e0cb80009c32e438" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompGpuComputationResource</definition>
        <argsstring>(const HdStExtCompGpuComputationResource &amp;)=delete</argsstring>
        <name>HdStExtCompGpuComputationResource</name>
        <param>
          <type>const <ref refid="class_hd_st_ext_comp_gpu_computation_resource" kindref="compound">HdStExtCompGpuComputationResource</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_computation_resource_1a856d0fa71c55c15f2e7ab20072d8028f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_st_ext_comp_gpu_computation_resource" kindref="compound">HdStExtCompGpuComputationResource</ref> &amp;</type>
        <definition>HdStExtCompGpuComputationResource&amp; operator=</definition>
        <argsstring>(const HdStExtCompGpuComputationResource &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_st_ext_comp_gpu_computation_resource" kindref="compound">HdStExtCompGpuComputationResource</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="127" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A resource that represents the persistent GPU resources of an ExtComputation. </para>
    </briefdescription>
    <detaileddescription>
<para>All program and binding data required for compiling and loading <ref refid="class_hd_rprim" kindref="compound">HdRprim</ref> and internal primvar data is held by this object. The companion source and computation appeal to this object to access the GPU resources.</para>
<para><simplesect kind="see"><para><ref refid="class_hd_st_ext_comp_gpu_computation" kindref="compound">HdStExtCompGpuComputation</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="pxr/imaging/hdSt/extCompGpuComputationResource.h" line="53" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuComputationResource.h" bodystart="53" bodyend="129"/>
    <listofallmembers>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a7fedc62c68720595db5ee3d8d71608bb" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_computeProgram</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1aa6476ffe7d67b7aa9d0d479cd1ba2945" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_inputs</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a42c1f71bdedf408afb2b59e1d20ab533" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_kernel</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1ae94cba2f1270fbabb8d6bc82370aea90" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_outputBufferSpecs</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a3e6b44f158f4c198931d808e1d281d4a" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_registry</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a2486ade7c2dc4bf40dc78ba1a5c0954c" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_Resolve</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a39bc3e63a3f9acbfbf5d6f517c369846" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_resourceBinder</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a32d303b11cf771d46e92b4b972ee9b0a" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>_shaderSourceHash</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a59543cb39b6003be893c2d1ed5202f7d" prot="public" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>GetInputs</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1ac1fe111b3414a7caab0ee30c2ca199d2" prot="public" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>GetProgram</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a91653282c93570b268a88ab81f1bde7a" prot="public" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>GetResourceBinder</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a36b1d3209eb830ac7af74ea8cd3cca49" prot="public" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>HdStExtCompGpuComputationResource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a448560c5e80e10edbb3a29ddd81ac52a" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>HdStExtCompGpuComputationResource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a259b3fec4b962373e0cb80009c32e438" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>HdStExtCompGpuComputationResource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a856d0fa71c55c15f2e7ab20072d8028f" prot="private" virt="non-virtual"><scope>HdStExtCompGpuComputationResource</scope><name>operator=</name></member>
      <member refid="class_hd_st_ext_comp_gpu_computation_resource_1a965cf31737e18e3f9e1d1773add00ed2" prot="public" virt="virtual"><scope>HdStExtCompGpuComputationResource</scope><name>~HdStExtCompGpuComputationResource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
