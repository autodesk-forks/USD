<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_render_buffer" kind="class" language="C++" prot="public">
    <compoundname>HdStRenderBuffer</compoundname>
    <basecompoundref refid="class_hd_render_buffer" prot="public" virt="non-virtual">HdRenderBuffer</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_render_buffer_1a33c5de4dfb2c30c6b2539a97affea45d" prot="private" static="no" mutable="no">
        <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
        <definition>HdStResourceRegistry* _resourceRegistry</definition>
        <argsstring></argsstring>
        <name>_resourceRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="127" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_buffer_1a1c902c739f46d08d675ba55ddcef19fb" prot="private" static="no" mutable="no">
        <type>HdFormat</type>
        <definition>HdFormat _format</definition>
        <argsstring></argsstring>
        <name>_format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="131" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_buffer_1abbb55368b3cdc8df333eae2c484664b6" prot="private" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t _msaaSampleCount</definition>
        <argsstring></argsstring>
        <name>_msaaSampleCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="133" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_buffer_1abb797edde0b393dff2a1244d825361d6" prot="private" static="no" mutable="no">
        <type>HdStDynamicUvTextureObjectSharedPtr</type>
        <definition>HdStDynamicUvTextureObjectSharedPtr _textureObject</definition>
        <argsstring></argsstring>
        <name>_textureObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="136" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_buffer_1a5939da061d8dec324a5c62480ede8dbe" prot="private" static="no" mutable="no">
        <type>HdStDynamicUvTextureObjectSharedPtr</type>
        <definition>HdStDynamicUvTextureObjectSharedPtr _textureMSAAObject</definition>
        <argsstring></argsstring>
        <name>_textureMSAAObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="139" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_buffer_1ac2b18bfc330a262e5b72534f48ce3817" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; int &gt;</type>
        <definition>std::atomic&lt;int&gt; _mappers</definition>
        <argsstring></argsstring>
        <name>_mappers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="142" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_render_buffer_1a11ae6c3d5f20b3a8c9989efba6a1139e" prot="private" static="no" mutable="no">
        <type>HdStTextureUtils::AlignedBuffer&lt; uint8_t &gt;</type>
        <definition>HdStTextureUtils::AlignedBuffer&lt;uint8_t&gt; _mappedBuffer</definition>
        <argsstring></argsstring>
        <name>_mappedBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="144" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_render_buffer_1a731b77fd448d253e5e24ef96876973ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStRenderBuffer</definition>
        <argsstring>(HdStResourceRegistry *resourceRegistry, SdfPath const &amp;id)</argsstring>
        <name>HdStRenderBuffer</name>
        <param>
          <type><ref refid="class_hd_st_resource_registry" kindref="compound">HdStResourceRegistry</ref> *</type>
          <declname>resourceRegistry</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1af329b78f6f60e15640b79003cd8cf40e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStRenderBuffer</definition>
        <argsstring>() override</argsstring>
        <name>~HdStRenderBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1aca9d480fbc24619777ed2b00ad551981" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool Allocate</definition>
        <argsstring>(GfVec3i const &amp;dimensions, HdFormat format, bool multiSampled) override</argsstring>
        <name>Allocate</name>
        <param>
          <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref> const &amp;</type>
          <declname>dimensions</declname>
        </param>
        <param>
          <type>HdFormat</type>
          <declname>format</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>multiSampled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a37ff718f13753437e92b68b4c1d16e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API unsigned int</type>
        <definition>HDST_API unsigned int GetWidth</definition>
        <argsstring>() const override</argsstring>
        <name>GetWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a9978bec09ab82a999487ffe6144e9509" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API unsigned int</type>
        <definition>HDST_API unsigned int GetHeight</definition>
        <argsstring>() const override</argsstring>
        <name>GetHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="66" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1ab90bebdbfbaa8c270b1c20cd88cef588" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API unsigned int</type>
        <definition>HDST_API unsigned int GetDepth</definition>
        <argsstring>() const override</argsstring>
        <name>GetDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a72e2e0dd3d97c9e5354fac2b9bdb5b33" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API HdFormat</type>
        <definition>HDST_API HdFormat GetFormat</definition>
        <argsstring>() const override</argsstring>
        <name>GetFormat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="72" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a2fbd896d054c9470bded771afed787c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool IsMultiSampled</definition>
        <argsstring>() const override</argsstring>
        <name>IsMultiSampled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1ae5b597b88c6b9a267416ae933210100a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API uint32_t</type>
        <definition>HDST_API uint32_t GetMSAASampleCount</definition>
        <argsstring>() const</argsstring>
        <name>GetMSAASampleCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a239d4c6c2186679f3ab87cd2f8ef8c42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void *</type>
        <definition>HDST_API void* Map</definition>
        <argsstring>() override</argsstring>
        <name>Map</name>
        <briefdescription>
<para>Map the buffer for reading. </para>
        </briefdescription>
        <detaileddescription>
<para>The control flow should be Map(), before any I/O, followed by memory access, followed by Unmap() when done. <simplesect kind="return"><para>The address of the buffer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a923efc01ef48ae4215c1542a6383102b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Unmap</definition>
        <argsstring>() override</argsstring>
        <name>Unmap</name>
        <briefdescription>
<para>Unmap the buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a58976cdd9d7ef32bec83cedec8c8d249" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool IsMapped</definition>
        <argsstring>() const override</argsstring>
        <name>IsMapped</name>
        <briefdescription>
<para>Return whether any clients have this buffer mapped currently. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the buffer is currently mapped by someone. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="94" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a2ac32f476aacc0cf77f7ec8523c3616d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool IsConverged</definition>
        <argsstring>() const override</argsstring>
        <name>IsConverged</name>
        <briefdescription>
<para>Is the buffer converged? </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the buffer is converged (not currently being rendered to). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="102" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a2f9fe16b0eb0cff85ade7642ccd74de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void Resolve</definition>
        <argsstring>() override</argsstring>
        <name>Resolve</name>
        <briefdescription>
<para>Resolve the sample buffer into final values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a2d09d4a3d64c4edc29959d68e928f76a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>HDST_API VtValue GetResource</definition>
        <argsstring>(bool multiSampled) const override</argsstring>
        <name>GetResource</name>
        <param>
          <type>bool</type>
          <declname>multiSampled</declname>
        </param>
        <briefdescription>
<para>Returns the texture handle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_render_buffer_1a6ce81f5e7b8407bfcb7906c171ccbea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref></type>
        <definition>HDST_API HdStTextureIdentifier GetTextureIdentifier</definition>
        <argsstring>(bool multiSampled)</argsstring>
        <name>GetTextureIdentifier</name>
        <param>
          <type>bool</type>
          <declname>multiSampled</declname>
        </param>
        <briefdescription>
<para>The identifier that can be passed to, e.g., <ref refid="class_hd_st_resource_registry_1aca726a511db9a2b74038bffedb4fe580" kindref="member">HdStResourceRegistry::AllocateTextureHandle</ref> so that a shader can bind this buffer as texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_render_buffer_1a682f44c1e00d13aaffff4da8bf34295a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _Deallocate</definition>
        <argsstring>() override</argsstring>
        <name>_Deallocate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/renderBuffer.h" line="122" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3275">
        <label>HdStRenderBuffer</label>
        <childnode refid="3276" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3276">
        <label>HdRenderBuffer</label>
        <link refid="class_hd_render_buffer"/>
        <childnode refid="3277" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3277">
        <label>HdBprim</label>
        <link refid="class_hd_bprim"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3278">
        <label>HdStRenderBuffer</label>
        <childnode refid="3279" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3279">
        <label>HdRenderBuffer</label>
        <link refid="class_hd_render_buffer"/>
        <childnode refid="3280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3280">
        <label>HdBprim</label>
        <link refid="class_hd_bprim"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/renderBuffer.h" line="44" column="1" bodyfile="pxr/imaging/hdSt/renderBuffer.h" bodystart="43" bodyend="145"/>
    <listofallmembers>
      <member refid="class_hd_st_render_buffer_1a682f44c1e00d13aaffff4da8bf34295a" prot="protected" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_Deallocate</name></member>
      <member refid="class_hd_st_render_buffer_1a1c902c739f46d08d675ba55ddcef19fb" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_format</name></member>
      <member refid="class_hd_st_render_buffer_1a11ae6c3d5f20b3a8c9989efba6a1139e" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_mappedBuffer</name></member>
      <member refid="class_hd_st_render_buffer_1ac2b18bfc330a262e5b72534f48ce3817" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_mappers</name></member>
      <member refid="class_hd_st_render_buffer_1abbb55368b3cdc8df333eae2c484664b6" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_msaaSampleCount</name></member>
      <member refid="class_hd_st_render_buffer_1a33c5de4dfb2c30c6b2539a97affea45d" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_resourceRegistry</name></member>
      <member refid="class_hd_st_render_buffer_1a5939da061d8dec324a5c62480ede8dbe" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_textureMSAAObject</name></member>
      <member refid="class_hd_st_render_buffer_1abb797edde0b393dff2a1244d825361d6" prot="private" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>_textureObject</name></member>
      <member refid="class_hd_render_buffer_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>AllDirty</name></member>
      <member refid="class_hd_st_render_buffer_1aca9d480fbc24619777ed2b00ad551981" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>Allocate</name></member>
      <member refid="class_hd_render_buffer_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>Clean</name></member>
      <member refid="class_hd_render_buffer_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>DirtyBits</name></member>
      <member refid="class_hd_render_buffer_1a2f2dbbbe47e871395a781c8105398c8fa8e5fc22bc32d32b3da6337b1c7ad2f39" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>DirtyDescription</name></member>
      <member refid="class_hd_render_buffer_1a580d2cd68564bd6eafec9294bbcfd0bb" prot="public" virt="virtual"><scope>HdStRenderBuffer</scope><name>Finalize</name></member>
      <member refid="class_hd_st_render_buffer_1ab90bebdbfbaa8c270b1c20cd88cef588" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetDepth</name></member>
      <member refid="class_hd_st_render_buffer_1a72e2e0dd3d97c9e5354fac2b9bdb5b33" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetFormat</name></member>
      <member refid="class_hd_st_render_buffer_1a9978bec09ab82a999487ffe6144e9509" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetHeight</name></member>
      <member refid="class_hd_bprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetId</name></member>
      <member refid="class_hd_render_buffer_1ad2a06c7fe9d266e21307307fc7a0dccd" prot="public" virt="virtual"><scope>HdStRenderBuffer</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_st_render_buffer_1ae5b597b88c6b9a267416ae933210100a" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetMSAASampleCount</name></member>
      <member refid="class_hd_st_render_buffer_1a2d09d4a3d64c4edc29959d68e928f76a" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetResource</name></member>
      <member refid="class_hd_st_render_buffer_1a6ce81f5e7b8407bfcb7906c171ccbea5" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetTextureIdentifier</name></member>
      <member refid="class_hd_st_render_buffer_1a37ff718f13753437e92b68b4c1d16e94" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>GetWidth</name></member>
      <member refid="class_hd_bprim_1aa5ee52b8b01515706d54cf147de7f884" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>HdBprim</name></member>
      <member refid="class_hd_render_buffer_1a95a6a2d6df2376353323e3a5081f0005" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>HdRenderBuffer</name></member>
      <member refid="class_hd_st_render_buffer_1a731b77fd448d253e5e24ef96876973ae" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>HdStRenderBuffer</name></member>
      <member refid="class_hd_st_render_buffer_1a2ac32f476aacc0cf77f7ec8523c3616d" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>IsConverged</name></member>
      <member refid="class_hd_st_render_buffer_1a58976cdd9d7ef32bec83cedec8c8d249" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>IsMapped</name></member>
      <member refid="class_hd_st_render_buffer_1a2fbd896d054c9470bded771afed787c1" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>IsMultiSampled</name></member>
      <member refid="class_hd_st_render_buffer_1a239d4c6c2186679f3ab87cd2f8ef8c42" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>Map</name></member>
      <member refid="class_hd_st_render_buffer_1a2f9fe16b0eb0cff85ade7642ccd74de5" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>Resolve</name></member>
      <member refid="class_hd_st_render_buffer_1a1ff320f5516aeeb22fb8316c87ce08de" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>Sync</name></member>
      <member refid="class_hd_st_render_buffer_1a923efc01ef48ae4215c1542a6383102b" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>Unmap</name></member>
      <member refid="class_hd_bprim_1a214b96ab3e11db88364e8b73b8a6940c" prot="public" virt="virtual"><scope>HdStRenderBuffer</scope><name>~HdBprim</name></member>
      <member refid="class_hd_render_buffer_1a37df1a3eb10072020e53ce8afc961304" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>~HdRenderBuffer</name></member>
      <member refid="class_hd_st_render_buffer_1af329b78f6f60e15640b79003cd8cf40e" prot="public" virt="non-virtual"><scope>HdStRenderBuffer</scope><name>~HdStRenderBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
