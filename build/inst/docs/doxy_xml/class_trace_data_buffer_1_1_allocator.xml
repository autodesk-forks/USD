<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_data_buffer_1_1_allocator" kind="class" language="C++" prot="private">
    <compoundname>TraceDataBuffer::Allocator</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_trace_data_buffer_1_1_allocator_1adb8cabc4ac5b90ae59717ab14b0c9d7f" prot="private" static="no">
        <type>std::uint8_t</type>
        <definition>using Byte =  std::uint8_t</definition>
        <argsstring></argsstring>
        <name>Byte</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="107" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_data_buffer_1_1_allocator_1a09ad9b12ecbcbe2b340ec2b0df4b7c5b" prot="private" static="no">
        <type>std::unique_ptr&lt; Byte[]&gt;</type>
        <definition>using BlockPtr =  std::unique_ptr&lt;Byte[]&gt;</definition>
        <argsstring></argsstring>
        <name>BlockPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="119" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_data_buffer_1_1_allocator_1a4516c2ca83e73a8a1a284eb933d93efa" prot="private" static="no" mutable="no">
        <type>Byte *</type>
        <definition>Byte* _blockEnd</definition>
        <argsstring></argsstring>
        <name>_blockEnd</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="117" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_data_buffer_1_1_allocator_1a663019c5c8144caa42fd8217fd263208" prot="private" static="no" mutable="no">
        <type>Byte *</type>
        <definition>Byte* _next</definition>
        <argsstring></argsstring>
        <name>_next</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="118" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_data_buffer_1_1_allocator_1a9abc790c55677c236b9594b0f6bdabbd" prot="private" static="no" mutable="no">
        <type>std::deque&lt; BlockPtr &gt;</type>
        <definition>std::deque&lt;BlockPtr&gt; _blocks</definition>
        <argsstring></argsstring>
        <name>_blocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="120" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_data_buffer_1_1_allocator_1a803e2cab70b9039794faa60e928dfc6d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _desiredBlockSize</definition>
        <argsstring></argsstring>
        <name>_desiredBlockSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="121" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1a168475c6bfc6fdc8b091b7225fb7b954" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Allocator</definition>
        <argsstring>(size_t blockSize)</argsstring>
        <name>Allocator</name>
        <param>
          <type>size_t</type>
          <declname>blockSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="86" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1aebfa745c0175c729ac5fdcef919379db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Allocator</definition>
        <argsstring>(Allocator &amp;&amp;)=default</argsstring>
        <name>Allocator</name>
        <param>
          <type>Allocator &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1a2552348ce92283cf01910157e88e821d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Allocator &amp;</type>
        <definition>Allocator&amp; operator=</definition>
        <argsstring>(Allocator &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>Allocator &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1a89a92888699d04b71b2c2add297a4da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Allocator</definition>
        <argsstring>(const Allocator &amp;)=delete</argsstring>
        <name>Allocator</name>
        <param>
          <type>const Allocator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1a46e6e855ed38ccfe04594a16c6061f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Allocator &amp;</type>
        <definition>Allocator&amp; operator=</definition>
        <argsstring>(const Allocator &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const Allocator &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1acae99c71c9c9fbdd16a43fa42ff0b750" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* Allocate</definition>
        <argsstring>(const size_t align, const size_t size)</argsstring>
        <name>Allocate</name>
        <param>
          <type>const size_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="94" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="94" bodyend="104"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1a4021c6b7e963e04ba0b969c0d399dc74" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Byte *</type>
        <definition>static Byte* AlignPointer</definition>
        <argsstring>(Byte *ptr, const size_t align)</argsstring>
        <name>AlignPointer</name>
        <param>
          <type>Byte *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="109" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="109" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_trace_data_buffer_1_1_allocator_1adfafe6f1b0807a276686bb68e970b24e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void AllocateBlock</definition>
        <argsstring>(const size_t align, const size_t desiredSize)</argsstring>
        <name>AllocateBlock</name>
        <param>
          <type>const size_t</type>
          <declname>align</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>desiredSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/dataBuffer.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/trace/dataBuffer.h" line="84" column="1" bodyfile="pxr/base/trace/dataBuffer.h" bodystart="84" bodyend="122"/>
    <listofallmembers>
      <member refid="class_trace_data_buffer_1_1_allocator_1a4516c2ca83e73a8a1a284eb933d93efa" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>_blockEnd</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a9abc790c55677c236b9594b0f6bdabbd" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>_blocks</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a803e2cab70b9039794faa60e928dfc6d" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>_desiredBlockSize</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a663019c5c8144caa42fd8217fd263208" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>_next</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a4021c6b7e963e04ba0b969c0d399dc74" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>AlignPointer</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1acae99c71c9c9fbdd16a43fa42ff0b750" prot="public" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>Allocate</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1adfafe6f1b0807a276686bb68e970b24e" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>AllocateBlock</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a168475c6bfc6fdc8b091b7225fb7b954" prot="public" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>Allocator</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1aebfa745c0175c729ac5fdcef919379db" prot="public" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>Allocator</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a89a92888699d04b71b2c2add297a4da5" prot="public" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>Allocator</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a09ad9b12ecbcbe2b340ec2b0df4b7c5b" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>BlockPtr</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1adb8cabc4ac5b90ae59717ab14b0c9d7f" prot="private" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>Byte</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a2552348ce92283cf01910157e88e821d" prot="public" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>operator=</name></member>
      <member refid="class_trace_data_buffer_1_1_allocator_1a46e6e855ed38ccfe04594a16c6061f68" prot="public" virt="non-virtual"><scope>TraceDataBuffer::Allocator</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
