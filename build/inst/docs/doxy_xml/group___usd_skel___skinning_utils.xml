<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group___usd_skel___skinning_utils" kind="group">
    <compoundname>UsdSkel_SkinningUtils</compoundname>
    <title>Skinning Implementations</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga77a8fb99b3ce4a23ba37345b9b5b2436" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPoints</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPoints</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Skin points using linear blend skinning (LBS) or dual quaternion skinning (DQS). </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>jointXforms</computeroutput> are skinning transforms, given in <emphasis>skeleton space</emphasis>, while the <computeroutput>geomBindTransform</computeroutput> provides the transform that transforms the initial <computeroutput>points</computeroutput> into the same <emphasis>skeleton space</emphasis> that the skinning transforms were computed in. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="479" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga5776ccbbe79ad7eb34473accefc44f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPoints</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPoints</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga7f807d6b938fd010cd2467db5b41425c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPoints</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPoints</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Skin points using linear blend skinning, with interleaved influences. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="505" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gadb4710d64d8138abe2440df8fb6d8def" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPoints</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPoints</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga6197521498405c78ab8b73fd3770f67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPoints</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, const VtMatrix4dArray &amp;jointXforms, const VtIntArray &amp;jointIndices, const VtFloatArray &amp;jointWeights, int numInfluencesPerPoint, VtVec3fArray *points)</argsstring>
        <name>UsdSkelSkinPoints</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const VtFloatArray &amp;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000135"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="530" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaff888911f410d6fd142c16bd66cd5c92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPoints</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, const GfMatrix4d *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, int numInfluencesPerPoint, GfVec3f *points, size_t numPoints, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPoints</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numJoints</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numInfluences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000136"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaf4936087fc756233585198ed1858b24d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPointsLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPointsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga30e181d099d6e93c6c78c8107461e9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPointsLBS</definition>
        <argsstring>(const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPointsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gabd775552ea1fffe7fe697b8f92eef5e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPointsLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPointsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Skin points using linear blend skinning, with interleaved influences. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="581" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga0dc79abf1eaf008e2507da4498acbc96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPointsLBS</definition>
        <argsstring>(const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; points, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPointsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaf823122c00cb14ef1b3a4785c4920d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPointsLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, const VtMatrix4dArray &amp;jointXforms, const VtIntArray &amp;jointIndices, const VtFloatArray &amp;jointWeights, int numInfluencesPerPoint, VtVec3fArray *points)</argsstring>
        <name>UsdSkelSkinPointsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const VtMatrix4dArray &amp;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type>const VtIntArray &amp;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const VtFloatArray &amp;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type>VtVec3fArray *</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000137"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaa4a379f5b3e530c1715077ad37b380d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinPointsLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, const GfMatrix4d *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, int numInfluencesPerPoint, GfVec3f *points, size_t numPoints, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinPointsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numJoints</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numInfluences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *</type>
          <declname>points</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numPoints</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000138"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga5b93789ff214583e3cca49ee922125ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormals</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix3d &amp;geomBindTransform, TfSpan&lt; const GfMatrix3d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormals</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Skin normals using linear blend skinning (LBS) or dual quaternion skinning (DQS), for normals with <emphasis>vertex</emphasis> or <emphasis>varying</emphasis> interpolation. </para>
        </briefdescription>
        <detaileddescription>
<para>Use <ref refid="group___usd_skel___skinning_utils_1gad855f7a0d48c46497eef276174810970" kindref="member">UsdSkelSkinFaceVaryingNormals()</ref> for normals with _faceVarying__ interpolation. The <computeroutput>jointXforms</computeroutput> are the <emphasis>inverse transposes</emphasis> of the 3x3 component of the UsdSkel_Term_SkinningTransforms&quot; &quot;skinning transforms", given in <emphasis>skeleton space</emphasis>. The <computeroutput>geomBindTransform</computeroutput> is the <emphasis>inverse transpose</emphasis> of the matrix that transforms points from a bind pose ino the same <emphasis>skeleton space</emphasis> that the skinning tranforms were computed in. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="639" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga99bd1ba9f9b5a0c8deee1e35eaac29e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormals</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix3f &amp;geomBindTransform, TfSpan&lt; const GfMatrix3f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormals</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="652" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga292275c129353fbc7df1116e25d79a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormals</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix3d &amp;geomBindTransform, TfSpan&lt; const GfMatrix3d &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormals</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga1e9c9139543f1ec64030c67a4b99f288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormals</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix3f &amp;geomBindTransform, TfSpan&lt; const GfMatrix3f &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormals</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gad855f7a0d48c46497eef276174810970" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinFaceVaryingNormals</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix3d &amp;geomBindTransform, TfSpan&lt; const GfMatrix3d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; const int &gt; faceVertexIndices, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinFaceVaryingNormals</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Skin normals with <emphasis>faceVarying</emphasis> interpolation using LBS or DQS. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaf9b26252961782c9a54c00181ac13732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinFaceVaryingNormals</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix3f &amp;geomBindTransform, TfSpan&lt; const GfMatrix3f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; const int &gt; faceVertexIndices, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinFaceVaryingNormals</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="702" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gacb2f40bce4b9796b0c11e7ed5a9b3e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormalsLBS</definition>
        <argsstring>(const GfMatrix3d &amp;geomBindTransform, TfSpan&lt; const GfMatrix3d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormalsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga2bf647e74bd2a4f73476de4b8737ad62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormalsLBS</definition>
        <argsstring>(const GfMatrix3f &amp;geomBindTransform, TfSpan&lt; const GfMatrix3f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormalsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga4e9a51b460fd6b640e46f12a8e3e30b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormalsLBS</definition>
        <argsstring>(const GfMatrix3d &amp;geomBindTransform, TfSpan&lt; const GfMatrix3d &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormalsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaabb0425de40997e05090f7cdc2df7e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinNormalsLBS</definition>
        <argsstring>(const GfMatrix3f &amp;geomBindTransform, TfSpan&lt; const GfMatrix3f &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, int numInfluencesPerPoint, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinNormalsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="750" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga23a671ecb37e8f1653132966d3d7307f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinFaceVaryingNormalsLBS</definition>
        <argsstring>(const GfMatrix3d &amp;geomBindTransform, TfSpan&lt; const GfMatrix3d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; const int &gt; faceVertexIndices, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinFaceVaryingNormalsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3d" kindref="compound">GfMatrix3d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Skin normals with <emphasis>faceVarying</emphasis> interpolation using linear blend skinning. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="760" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga4051b55bb1621ffef71af1da297c2cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinFaceVaryingNormalsLBS</definition>
        <argsstring>(const GfMatrix3f &amp;geomBindTransform, TfSpan&lt; const GfMatrix3f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, int numInfluencesPerPoint, TfSpan&lt; const int &gt; faceVertexIndices, TfSpan&lt; GfVec3f &gt; normals, bool inSerial=false)</argsstring>
        <name>UsdSkelSkinFaceVaryingNormalsLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix3f" kindref="compound">GfMatrix3f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numInfluencesPerPoint</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>faceVertexIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>normals</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inSerial</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga4b7ea49962f304dcc1eb20d373ed173d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransform</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, GfMatrix4d *xform)</argsstring>
        <name>UsdSkelSkinTransform</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
<para>Skin a transform using linear blend skinning (LBS) or dual quaternion skinning (DQS). </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>jointXforms</computeroutput> are skinning transforms, given in <emphasis>skeleton space</emphasis>, while the <computeroutput>geomBindTransform</computeroutput> provides the transform that initially places a primitive in that same <emphasis>skeleton space</emphasis>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="789" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gae3b9aa4c1d28c4698555940f9c73d6f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransform</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, GfMatrix4f *xform)</argsstring>
        <name>UsdSkelSkinTransform</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="799" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gac117b71ef3a8cebb298444f1e22201dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransform</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, GfMatrix4d *xform)</argsstring>
        <name>UsdSkelSkinTransform</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
<para>Overload taking interleaved joint influences. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="810" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga51075a25a22b53189876f249072c9ef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransform</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, GfMatrix4f *xform)</argsstring>
        <name>UsdSkelSkinTransform</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gadeaedc9a99d4393e5495c7958c85aa30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransform</definition>
        <argsstring>(const TfToken &amp;skinningMethod, const GfMatrix4d &amp;geomBindTransform, const GfMatrix4d *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, GfMatrix4d *xform)</argsstring>
        <name>UsdSkelSkinTransform</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>skinningMethod</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numJoints</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numInfluences</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000139"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="829" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gab7077ce395f80a3ca8e8fc36975ec7c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransformLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, GfMatrix4d *xform)</argsstring>
        <name>UsdSkelSkinTransformLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="841" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga06d1c6022526dd497766b4656449182d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransformLBS</definition>
        <argsstring>(const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const int &gt; jointIndices, TfSpan&lt; const float &gt; jointWeights, GfMatrix4f *xform)</argsstring>
        <name>UsdSkelSkinTransformLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const float &gt;</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="850" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1gaac72fe6371d07c0315a2906d04062b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransformLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, TfSpan&lt; const GfMatrix4d &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, GfMatrix4d *xform)</argsstring>
        <name>UsdSkelSkinTransformLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
<para>Overload taking interleaved joint influences. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga691776d32723b36baedd2943779f017e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransformLBS</definition>
        <argsstring>(const GfMatrix4f &amp;geomBindTransform, TfSpan&lt; const GfMatrix4f &gt; jointXforms, TfSpan&lt; const GfVec2f &gt; influences, GfMatrix4f *xform)</argsstring>
        <name>UsdSkelSkinTransformLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> &gt;</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &gt;</type>
          <declname>influences</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4f" kindref="compound">GfMatrix4f</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="868" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga72bef32e15231e5437335d487ccd12ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelSkinTransformLBS</definition>
        <argsstring>(const GfMatrix4d &amp;geomBindTransform, const GfMatrix4d *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, GfMatrix4d *xform)</argsstring>
        <name>UsdSkelSkinTransformLBS</name>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;</type>
          <declname>geomBindTransform</declname>
        </param>
        <param>
          <type>const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>jointXforms</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numJoints</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>jointIndices</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>jointWeights</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>numInfluences</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *</type>
          <declname>xform</declname>
        </param>
        <briefdescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000140"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="877" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group___usd_skel___skinning_utils_1ga371a54450f8a3fe151bc63548aa03c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDSKEL_API bool</type>
        <definition>USDSKEL_API bool UsdSkelApplyBlendShape</definition>
        <argsstring>(const float weight, const TfSpan&lt; const GfVec3f &gt; offsets, const TfSpan&lt; const int &gt; indices, TfSpan&lt; GfVec3f &gt; points)</argsstring>
        <name>UsdSkelApplyBlendShape</name>
        <param>
          <type>const float</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>offsets</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; const int &gt;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="class_tf_span" kindref="compound">TfSpan</ref>&lt; <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &gt;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
<para>Apply a single blend shape to <computeroutput>points</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The shape is given as a span of <computeroutput>offsets</computeroutput>. If the <computeroutput>indices</computeroutput> span is not empty, it provides the index into the <computeroutput>points</computeroutput> span at which each offset should be mapped. Otherwise, the <computeroutput>offsets</computeroutput> span must be the same size as the <computeroutput>points</computeroutput> span. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/utils.h" line="893" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reference skinning implementations for skinning points and transforms. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
