<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_abstract_data_value" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>SdfAbstractDataValue</compoundname>
    <derivedcompoundref refid="class_sdf_abstract_data_typed_value" prot="public" virt="non-virtual">SdfAbstractDataTypedValue&lt; T &gt;</derivedcompoundref>
    <includes refid="abstract_data_8h" local="no">abstractData.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_sdf_abstract_data_value_1a0f61d63b009d0880a89c843bd50d8d76" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="438" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="438" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_abstract_data_value_1aca21ea8d3375ec28c4571c5cad1f77f4" prot="public" static="no" mutable="no">
        <type>const std::type_info &amp;</type>
        <definition>const std::type_info&amp; valueType</definition>
        <argsstring></argsstring>
        <name>valueType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="439" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_abstract_data_value_1a002fe77542bb0873195316f19f0691f7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool isValueBlock</definition>
        <argsstring></argsstring>
        <name>isValueBlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="440" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_sdf_abstract_data_value_1ae6243efa956c8919de33ee5151bbf193" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool typeMismatch</definition>
        <argsstring></argsstring>
        <name>typeMismatch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="441" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdf_abstract_data_value_1a4ea9d070580ebc7f80da557581c143f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool StoreValue</definition>
        <argsstring>(const VtValue &amp;value)=0</argsstring>
        <name>StoreValue</name>
        <reimplementedby refid="class_sdf_abstract_data_typed_value_1a5fc442dd3d8c56540dfc05c8fdfd13dc">StoreValue</reimplementedby>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_abstract_data_value_1a7466ae2d92654653d72733ccf65ded6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool StoreValue</definition>
        <argsstring>(VtValue &amp;&amp;value)=0</argsstring>
        <name>StoreValue</name>
        <reimplementedby refid="class_sdf_abstract_data_typed_value_1aceaad83f15a0d33e2fe4bd3b82406b97">StoreValue</reimplementedby>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;&amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_abstract_data_value_1a652976ce152eea6e11035596c8061d54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool StoreValue</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>StoreValue</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="422" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="422" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_abstract_data_value_1a74c28b9a221b3cdc1a15c5375395ca63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool StoreValue</definition>
        <argsstring>(const SdfValueBlock &amp;block)</argsstring>
        <name>StoreValue</name>
        <param>
          <type>const <ref refid="struct_sdf_value_block" kindref="compound">SdfValueBlock</ref> &amp;</type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="432" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="432" bodyend="436"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_sdf_abstract_data_value_1a8e512eb4dd3fd6603f1e6ca87bd5c60d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SdfAbstractDataValue</definition>
        <argsstring>(void *value_, const std::type_info &amp;valueType_)</argsstring>
        <name>SdfAbstractDataValue</name>
        <param>
          <type>void *</type>
          <declname>value_</declname>
        </param>
        <param>
          <type>const std::type_info &amp;</type>
          <declname>valueType_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/abstractData.h" line="444" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="444" bodyend="449"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A type-erased container for a field value in an <ref refid="class_sdf_abstract_data" kindref="compound">SdfAbstractData</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_sdf_abstract_data_typed_value" kindref="compound">SdfAbstractDataTypedValue</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4998">
        <label>SdfAbstractDataTypedValue&lt; T &gt;</label>
        <link refid="class_sdf_abstract_data_typed_value"/>
        <childnode refid="4997" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4997">
        <label>SdfAbstractDataValue</label>
        <link refid="class_sdf_abstract_data_value"/>
      </node>
    </inheritancegraph>
    <location file="pxr/usd/sdf/abstractData.h" line="416" column="1" bodyfile="pxr/usd/sdf/abstractData.h" bodystart="415" bodyend="450"/>
    <listofallmembers>
      <member refid="class_sdf_abstract_data_value_1a002fe77542bb0873195316f19f0691f7" prot="public" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>isValueBlock</name></member>
      <member refid="class_sdf_abstract_data_value_1a8e512eb4dd3fd6603f1e6ca87bd5c60d" prot="protected" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>SdfAbstractDataValue</name></member>
      <member refid="class_sdf_abstract_data_value_1a4ea9d070580ebc7f80da557581c143f8" prot="public" virt="pure-virtual"><scope>SdfAbstractDataValue</scope><name>StoreValue</name></member>
      <member refid="class_sdf_abstract_data_value_1a7466ae2d92654653d72733ccf65ded6c" prot="public" virt="pure-virtual"><scope>SdfAbstractDataValue</scope><name>StoreValue</name></member>
      <member refid="class_sdf_abstract_data_value_1a652976ce152eea6e11035596c8061d54" prot="public" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>StoreValue</name></member>
      <member refid="class_sdf_abstract_data_value_1a74c28b9a221b3cdc1a15c5375395ca63" prot="public" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>StoreValue</name></member>
      <member refid="class_sdf_abstract_data_value_1ae6243efa956c8919de33ee5151bbf193" prot="public" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>typeMismatch</name></member>
      <member refid="class_sdf_abstract_data_value_1a0f61d63b009d0880a89c843bd50d8d76" prot="public" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>value</name></member>
      <member refid="class_sdf_abstract_data_value_1aca21ea8d3375ec28c4571c5cad1f77f4" prot="public" virt="non-virtual"><scope>SdfAbstractDataValue</scope><name>valueType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
