<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_tf_py_kw_arg" kind="struct" language="C++" prot="public">
    <compoundname>TfPyKwArg</compoundname>
    <includes refid="py_invoke_8h" local="no">pyInvoke.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_tf_py_kw_arg_1a9b45b3e13bd9167aab02e17e08916231" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyInvoke.h" line="99" column="1" bodyfile="pxr/base/tf/pyInvoke.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_tf_py_kw_arg_1ab4d57e2e731be9817220d4206d38f8c2" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref></type>
        <definition>TfPyObjWrapper value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyInvoke.h" line="100" column="1" bodyfile="pxr/base/tf/pyInvoke.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_tf_py_kw_arg_1acacb225a92dbce621dcd98d7089c92e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>TfPyKwArg</definition>
        <argsstring>(const std::string &amp;nameIn, const T &amp;valueIn)</argsstring>
        <name>TfPyKwArg</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>nameIn</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>valueIn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyInvoke.h" line="89" column="1" bodyfile="pxr/base/tf/pyInvoke.h" bodystart="89" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper object for a keyword-argument pair in a call to TfPyInvoke*. </para>
    </briefdescription>
    <detaileddescription>
<para>Any value type may be provided, as long as it is convertible to Python. Typically passed as an inline temporary object:</para>
<para><programlisting><codeline><highlight class="normal">const<sp/>bool<sp/>ok<sp/>=<sp/>TfPyInvoke(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;MyModule&quot;,<sp/>&quot;MyFunction&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>arg1value,<sp/>arg2value,<sp/>TfPyKwArg(&quot;arg4&quot;,<sp/>arg4value));</highlight></codeline>
</programlisting></para>
<para><programlisting filename=".py"><codeline><highlight class="keyword">def<sp/></highlight><highlight class="normal">MyFunction(arg1,<sp/>arg2,<sp/>arg3<sp/>=<sp/>None,<sp/>arg4<sp/>=<sp/>None,<sp/>arg5<sp/>=<sp/>None):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>...</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="5477">
        <label>TfPyKwArg</label>
        <link refid="struct_tf_py_kw_arg"/>
        <childnode refid="5478" relation="usage">
          <edgelabel>value</edgelabel>
        </childnode>
      </node>
      <node id="5478">
        <label>TfPyObjWrapper</label>
        <link refid="class_tf_py_obj_wrapper"/>
      </node>
    </collaborationgraph>
    <location file="pxr/base/tf/pyInvoke.h" line="87" column="1" bodyfile="pxr/base/tf/pyInvoke.h" bodystart="86" bodyend="101"/>
    <listofallmembers>
      <member refid="struct_tf_py_kw_arg_1a9b45b3e13bd9167aab02e17e08916231" prot="public" virt="non-virtual"><scope>TfPyKwArg</scope><name>name</name></member>
      <member refid="struct_tf_py_kw_arg_1acacb225a92dbce621dcd98d7089c92e4" prot="public" virt="non-virtual"><scope>TfPyKwArg</scope><name>TfPyKwArg</name></member>
      <member refid="struct_tf_py_kw_arg_1ab4d57e2e731be9817220d4206d38f8c2" prot="public" virt="non-virtual"><scope>TfPyKwArg</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
