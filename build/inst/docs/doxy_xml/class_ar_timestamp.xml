<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_ar_timestamp" kind="class" language="C++" prot="public">
    <compoundname>ArTimestamp</compoundname>
    <includes refid="timestamp_8h" local="no">timestamp.h</includes>
      <sectiondef kind="user-defined">
      <memberdef kind="friend" id="class_ar_timestamp_1a0c769070addd32b66d6290329973a05c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const ArTimestamp &amp;lhs, const ArTimestamp &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Comparison operators Note that invalid timestamps are considered less than all other timestamps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="79" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="79" bodyend="83"/>
      </memberdef>
      <memberdef kind="friend" id="class_ar_timestamp_1a02b959a3270d8d23e1a059cf08ba9f08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const ArTimestamp &amp;lhs, const ArTimestamp &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="85" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="friend" id="class_ar_timestamp_1a8fb73f7ab8b5e0abed3e3cc56cf7831e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const ArTimestamp &amp;lhs, const ArTimestamp &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="90" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="friend" id="class_ar_timestamp_1a394a1517102823043f5c8b473229914e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const ArTimestamp &amp;lhs, const ArTimestamp &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="96" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="friend" id="class_ar_timestamp_1a6b4fd2abb43927331d67bfb0c2747ad5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const ArTimestamp &amp;lhs, const ArTimestamp &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="101" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="friend" id="class_ar_timestamp_1a4df058db0b5423e1436e4dc252f6e6f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const ArTimestamp &amp;lhs, const ArTimestamp &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="106" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="106" bodyend="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_ar_timestamp_1a553b2aef800d8b71561cfb84513e159a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double _time</definition>
        <argsstring></argsstring>
        <name>_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="124" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_ar_timestamp_1a7919becd743f4ea2a69b6b7e6bf51898" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ArTimestamp</definition>
        <argsstring>()</argsstring>
        <name>ArTimestamp</name>
        <briefdescription>
<para>Create an invalid timestamp. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="46" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_timestamp_1a556ad8063d5d4ef07838ed20fd2350fa" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ArTimestamp</definition>
        <argsstring>(double time)</argsstring>
        <name>ArTimestamp</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Create a timestamp at <computeroutput>time</computeroutput>, which must be a Unix time value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="52" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_timestamp_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Return true if this timestamp is valid, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="58" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_ar_timestamp_1a401b553380971b1a7ee5b14a281bfc57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetTime</definition>
        <argsstring>() const</argsstring>
        <name>GetTime</name>
        <briefdescription>
<para>Return the time represented by this timestamp as a double. </para>
        </briefdescription>
        <detaileddescription>
<para>If this timestamp is invalid, issue a coding error and return a quiet NaN value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="66" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="66" bodyend="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_ar_timestamp_1a785dce45eeff2b7edee32a6a58d9bc35" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class HashState</type>
          </param>
        </templateparamlist>
        <type>friend void</type>
        <definition>void TfHashAppend</definition>
        <argsstring>(HashState &amp;h, const ArTimestamp &amp;t)</argsstring>
        <name>TfHashAppend</name>
        <param>
          <type>HashState &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="class_ar_timestamp" kindref="compound">ArTimestamp</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="119" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="119" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_ar_timestamp_1a71a9bc6728f0de975b6bab6fe5ca44c8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>AR_API void</type>
        <definition>AR_API void _IssueInvalidGetTimeError</definition>
        <argsstring>() const</argsstring>
        <name>_IssueInvalidGetTimeError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/ar/timestamp.h" line="115" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a timestamp for an asset. </para>
    </briefdescription>
    <detaileddescription>
<para>Timestamps are represented by Unix time, the number of seconds elapsed since 00:00:00 UTC 1/1/1970. </para>
    </detaileddescription>
    <location file="pxr/usd/ar/timestamp.h" line="43" column="1" bodyfile="pxr/usd/ar/timestamp.h" bodystart="42" bodyend="125"/>
    <listofallmembers>
      <member refid="class_ar_timestamp_1a71a9bc6728f0de975b6bab6fe5ca44c8" prot="private" virt="non-virtual"><scope>ArTimestamp</scope><name>_IssueInvalidGetTimeError</name></member>
      <member refid="class_ar_timestamp_1a553b2aef800d8b71561cfb84513e159a" prot="private" virt="non-virtual"><scope>ArTimestamp</scope><name>_time</name></member>
      <member refid="class_ar_timestamp_1a7919becd743f4ea2a69b6b7e6bf51898" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>ArTimestamp</name></member>
      <member refid="class_ar_timestamp_1a556ad8063d5d4ef07838ed20fd2350fa" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>ArTimestamp</name></member>
      <member refid="class_ar_timestamp_1a401b553380971b1a7ee5b14a281bfc57" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>GetTime</name></member>
      <member refid="class_ar_timestamp_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>IsValid</name></member>
      <member refid="class_ar_timestamp_1a02b959a3270d8d23e1a059cf08ba9f08" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>operator!=</name></member>
      <member refid="class_ar_timestamp_1a8fb73f7ab8b5e0abed3e3cc56cf7831e" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>operator&lt;</name></member>
      <member refid="class_ar_timestamp_1a6b4fd2abb43927331d67bfb0c2747ad5" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>operator&lt;=</name></member>
      <member refid="class_ar_timestamp_1a0c769070addd32b66d6290329973a05c" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>operator==</name></member>
      <member refid="class_ar_timestamp_1a4df058db0b5423e1436e4dc252f6e6f6" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>operator&gt;</name></member>
      <member refid="class_ar_timestamp_1a394a1517102823043f5c8b473229914e" prot="public" virt="non-virtual"><scope>ArTimestamp</scope><name>operator&gt;=</name></member>
      <member refid="class_ar_timestamp_1a785dce45eeff2b7edee32a6a58d9bc35" prot="private" virt="non-virtual"><scope>ArTimestamp</scope><name>TfHashAppend</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
