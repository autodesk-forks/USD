<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_glf_texture" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>GlfTexture</compoundname>
    <basecompoundref refid="class_tf_ref_base" prot="public" virt="non-virtual">TfRefBase</basecompoundref>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <derivedcompoundref refid="class_glf_draw_target_1_1_attachment" prot="public" virt="non-virtual">GlfDrawTarget::Attachment</derivedcompoundref>
    <includes refid="glf_2texture_8h" local="no">texture.h</includes>
    <innerclass refid="struct_glf_texture_1_1_binding" prot="public">GlfTexture::Binding</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_glf_texture_1ab306836d455e7d5b7cd3451cc856da97" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_glf_texture_1_1_binding" kindref="compound">Binding</ref> &gt;</type>
        <definition>typedef std::vector&lt;Binding&gt; BindingVector</definition>
        <argsstring></argsstring>
        <name>BindingVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="88" column="1" bodyfile="pxr/imaging/glf/texture.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_glf_texture_1ab68cb2cf9cfa60e02471eb2fa5fe262a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _memoryUsed</definition>
        <argsstring></argsstring>
        <name>_memoryUsed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="162" column="1" bodyfile="pxr/imaging/glf/texture.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_texture_1ab2928dab3014061fc554d0a4f638c1f5" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _memoryRequested</definition>
        <argsstring></argsstring>
        <name>_memoryRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="163" column="1" bodyfile="pxr/imaging/glf/texture.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_texture_1a9d18794614dc28a0505ba98b4a53b752" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _contentsID</definition>
        <argsstring></argsstring>
        <name>_contentsID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="164" column="1" bodyfile="pxr/imaging/glf/texture.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_texture_1aada3b4eb72f588452347d1bb60f3029b" prot="private" static="no" mutable="no">
        <type><ref refid="class_hio_image_1ad6ce89ecac0ea2be40a867f580fe4106" kindref="member">HioImage::ImageOriginLocation</ref></type>
        <definition>HioImage::ImageOriginLocation _originLocation</definition>
        <argsstring></argsstring>
        <name>_originLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="165" column="1" bodyfile="pxr/imaging/glf/texture.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_glf_texture_1aec2d39275de4c6640aba66abfe4d7b27" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>GLF_API</type>
        <definition>virtual GLF_API ~GlfTexture</definition>
        <argsstring>()=0</argsstring>
        <name>~GlfTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a9aaede97a316ae5b75bac653ab71d501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GlfTexture</definition>
        <argsstring>(const GlfTexture &amp;)=delete</argsstring>
        <name>GlfTexture</name>
        <param>
          <type>const <ref refid="class_glf_texture" kindref="compound">GlfTexture</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1ae98322fc946ca21d578558c02de54868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_glf_texture" kindref="compound">GlfTexture</ref> &amp;</type>
        <definition>GlfTexture&amp; operator=</definition>
        <argsstring>(const GlfTexture &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_glf_texture" kindref="compound">GlfTexture</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1aef79c2ec4052e1e916fcf4a0799776d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>BindingVector</type>
        <definition>virtual BindingVector GetBindings</definition>
        <argsstring>(TfToken const &amp;identifier, GLuint samplerId=0)=0</argsstring>
        <name>GetBindings</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>identifier</declname>
        </param>
        <param>
          <type>GLuint</type>
          <declname>samplerId</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the bindings to use this texture for the shader resource named <emphasis>identifier</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>samplerId</emphasis> is specified, the bindings returned will use this samplerId for resources which can be sampled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1affb716633159efef0f177d251db54e39" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>GLuint</type>
        <definition>virtual GLuint GetGlTextureName</definition>
        <argsstring>()=0</argsstring>
        <name>GetGlTextureName</name>
        <briefdescription>
<para>Returns the OpenGl texture name for the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a677c448d63ecc349fa56dc1d9cb26818" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API size_t</type>
        <definition>GLF_API size_t GetMemoryUsed</definition>
        <argsstring>() const</argsstring>
        <name>GetMemoryUsed</name>
        <briefdescription>
<para>Amount of memory used to store the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a73ffbf5bd40b9010c3d96abed1dfc203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API size_t</type>
        <definition>GLF_API size_t GetMemoryRequested</definition>
        <argsstring>() const</argsstring>
        <name>GetMemoryRequested</name>
        <briefdescription>
<para>Amount of memory the user wishes to allocate to the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a4cee42cb618991807da8ffaa5e33ae66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void SetMemoryRequested</definition>
        <argsstring>(size_t targetMemory)</argsstring>
        <name>SetMemoryRequested</name>
        <param>
          <type>size_t</type>
          <declname>targetMemory</declname>
        </param>
        <briefdescription>
<para>Specify the amount of memory the user wishes to allocate to the texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a5b48583c5637381951ff94d118cb3827" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>virtual VtDictionary GetTextureInfo</definition>
        <argsstring>(bool forceLoad)=0</argsstring>
        <name>GetTextureInfo</name>
        <param>
          <type>bool</type>
          <declname>forceLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a188c68dd31b0a704d0502cf7bd109bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GLF_API bool</type>
        <definition>virtual GLF_API bool IsMinFilterSupported</definition>
        <argsstring>(GLenum filter)</argsstring>
        <name>IsMinFilterSupported</name>
        <param>
          <type>GLenum</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a69c5dbfbb3b3cea140c0f5c44cc36234" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GLF_API bool</type>
        <definition>virtual GLF_API bool IsMagFilterSupported</definition>
        <argsstring>(GLenum filter)</argsstring>
        <name>IsMagFilterSupported</name>
        <param>
          <type>GLenum</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="124" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a63d22acd40d16a156acbea7739fb86d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API size_t</type>
        <definition>GLF_API size_t GetContentsID</definition>
        <argsstring>() const</argsstring>
        <name>GetContentsID</name>
        <briefdescription>
<para>Returns an identifier that can be used to determine when the contents of this texture (i.e. </para>
        </briefdescription>
        <detaileddescription>
<para>its image data) has changed.</para>
<para>The contents of most textures will be immutable for the lifetime of the texture. However, the contents of the texture attachments of a draw target change when the draw target is updated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a810ae884d652df9140728f2d4f363f4a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API <ref refid="class_hio_image_1ad6ce89ecac0ea2be40a867f580fe4106" kindref="member">HioImage::ImageOriginLocation</ref></type>
        <definition>GLF_API HioImage::ImageOriginLocation GetOriginLocation</definition>
        <argsstring>() const</argsstring>
        <name>GetOriginLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="140" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a97eeda0fd8ad6d2935a6505cf1f66c0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API bool</type>
        <definition>GLF_API bool IsOriginLowerLeft</definition>
        <argsstring>() const</argsstring>
        <name>IsOriginLowerLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_glf_texture_1a01dc715f99fa2cc01d5e61a6f71939c8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API size_t</type>
        <definition>static GLF_API size_t GetTextureMemoryAllocated</definition>
        <argsstring>()</argsstring>
        <name>GetTextureMemoryAllocated</name>
        <briefdescription>
<para>static reporting function </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_glf_texture_1a66a6c2ebb1932ccc136022cd1cfaf4b9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API GlfTexture</definition>
        <argsstring>()</argsstring>
        <name>GlfTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a6aaca022c713b250508dd11c273b99f4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API GlfTexture</definition>
        <argsstring>(HioImage::ImageOriginLocation originLocation)</argsstring>
        <name>GlfTexture</name>
        <param>
          <type><ref refid="class_hio_image_1ad6ce89ecac0ea2be40a867f580fe4106" kindref="member">HioImage::ImageOriginLocation</ref></type>
          <declname>originLocation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1a3d18c165976ac1b70b9a77fc1d2259e1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void _SetMemoryUsed</definition>
        <argsstring>(size_t size)</argsstring>
        <name>_SetMemoryUsed</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1af888e49e17285cd8bea4881190c5e3e0" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GLF_API void</type>
        <definition>virtual GLF_API void _OnMemoryRequestedDirty</definition>
        <argsstring>()</argsstring>
        <name>_OnMemoryRequestedDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_texture_1ad35d11b6faf75875c852a9e89a8e93e8" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void _UpdateContentsID</definition>
        <argsstring>()</argsstring>
        <name>_UpdateContentsID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/texture.h" line="159" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a texture object in Glf. </para>
    </briefdescription>
    <detaileddescription>
<para>A texture is typically defined by reading texture image data from an image file but a texture might also represent an attachment of a draw target. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1495">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="1493">
        <label>GlfTexture</label>
        <link refid="class_glf_texture"/>
        <childnode refid="1494" relation="public-inheritance">
        </childnode>
        <childnode refid="1495" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1494">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1498">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="1496">
        <label>GlfTexture</label>
        <link refid="class_glf_texture"/>
        <childnode refid="1497" relation="public-inheritance">
        </childnode>
        <childnode refid="1498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1497">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/glf/texture.h" line="63" column="1" bodyfile="pxr/imaging/glf/texture.h" bodystart="62" bodyend="166"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_glf_texture_1a9d18794614dc28a0505ba98b4a53b752" prot="private" virt="non-virtual"><scope>GlfTexture</scope><name>_contentsID</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>_HasRemnant</name></member>
      <member refid="class_glf_texture_1ab2928dab3014061fc554d0a4f638c1f5" prot="private" virt="non-virtual"><scope>GlfTexture</scope><name>_memoryRequested</name></member>
      <member refid="class_glf_texture_1ab68cb2cf9cfa60e02471eb2fa5fe262a" prot="private" virt="non-virtual"><scope>GlfTexture</scope><name>_memoryUsed</name></member>
      <member refid="class_glf_texture_1af888e49e17285cd8bea4881190c5e3e0" prot="protected" virt="virtual"><scope>GlfTexture</scope><name>_OnMemoryRequestedDirty</name></member>
      <member refid="class_glf_texture_1aada3b4eb72f588452347d1bb60f3029b" prot="private" virt="non-virtual"><scope>GlfTexture</scope><name>_originLocation</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>_Register</name></member>
      <member refid="class_glf_texture_1a3d18c165976ac1b70b9a77fc1d2259e1" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>_SetMemoryUsed</name></member>
      <member refid="class_glf_texture_1ad35d11b6faf75875c852a9e89a8e93e8" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>_UpdateContentsID</name></member>
      <member refid="class_glf_texture_1ab306836d455e7d5b7cd3451cc856da97" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>BindingVector</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>EnableNotification2</name></member>
      <member refid="class_glf_texture_1aef79c2ec4052e1e916fcf4a0799776d4" prot="public" virt="pure-virtual"><scope>GlfTexture</scope><name>GetBindings</name></member>
      <member refid="class_glf_texture_1a63d22acd40d16a156acbea7739fb86d6" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetContentsID</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetCurrentCount</name></member>
      <member refid="class_glf_texture_1affb716633159efef0f177d251db54e39" prot="public" virt="pure-virtual"><scope>GlfTexture</scope><name>GetGlTextureName</name></member>
      <member refid="class_glf_texture_1a73ffbf5bd40b9010c3d96abed1dfc203" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetMemoryRequested</name></member>
      <member refid="class_glf_texture_1a677c448d63ecc349fa56dc1d9cb26818" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetMemoryUsed</name></member>
      <member refid="class_glf_texture_1a810ae884d652df9140728f2d4f363f4a" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetOriginLocation</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetRefCount</name></member>
      <member refid="class_glf_texture_1a5b48583c5637381951ff94d118cb3827" prot="public" virt="pure-virtual"><scope>GlfTexture</scope><name>GetTextureInfo</name></member>
      <member refid="class_glf_texture_1a01dc715f99fa2cc01d5e61a6f71939c8" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetTextureMemoryAllocated</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_glf_texture_1a9aaede97a316ae5b75bac653ab71d501" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>GlfTexture</name></member>
      <member refid="class_glf_texture_1a66a6c2ebb1932ccc136022cd1cfaf4b9" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>GlfTexture</name></member>
      <member refid="class_glf_texture_1a6aaca022c713b250508dd11c273b99f4" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>GlfTexture</name></member>
      <member refid="class_glf_texture_1a69c5dbfbb3b3cea140c0f5c44cc36234" prot="public" virt="virtual"><scope>GlfTexture</scope><name>IsMagFilterSupported</name></member>
      <member refid="class_glf_texture_1a188c68dd31b0a704d0502cf7bd109bd3" prot="public" virt="virtual"><scope>GlfTexture</scope><name>IsMinFilterSupported</name></member>
      <member refid="class_glf_texture_1a97eeda0fd8ad6d2935a6505cf1f66c0a" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>IsOriginLowerLeft</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>IsUnique</name></member>
      <member refid="class_glf_texture_1ae98322fc946ca21d578558c02de54868" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>operator=</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual" ambiguityscope="TfWeakBase::"><scope>GlfTexture</scope><name>operator=</name></member>
      <member refid="class_glf_texture_1a4cee42cb618991807da8ffaa5e33ae66" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>SetMemoryRequested</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>GlfTexture</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_glf_texture_1aec2d39275de4c6640aba66abfe4d7b27" prot="public" virt="pure-virtual"><scope>GlfTexture</scope><name>~GlfTexture</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>GlfTexture</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>GlfTexture</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
