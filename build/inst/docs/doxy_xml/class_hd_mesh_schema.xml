<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_mesh_schema" kind="class" language="C++" prot="public">
    <compoundname>HdMeshSchema</compoundname>
    <basecompoundref refid="class_hd_schema" prot="public" virt="non-virtual">HdSchema</basecompoundref>
    <innerclass refid="class_hd_mesh_schema_1_1_builder" prot="public">HdMeshSchema::Builder</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_mesh_schema_1a3e2ee7bc4ee0cbbdd4ca858aed1e1d60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdMeshSchema</definition>
        <argsstring>(HdContainerDataSourceHandle container)</argsstring>
        <name>HdMeshSchema</name>
        <param>
          <type>HdContainerDataSourceHandle</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="61" column="1" bodyfile="pxr/imaging/hd/meshSchema.h" bodystart="61" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1aa93a86ad4d93c1a83faa60bc40ef98bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdMeshTopologySchema</type>
        <definition>HD_API HdMeshTopologySchema GetTopology</definition>
        <argsstring>()</argsstring>
        <name>GetTopology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1afac6f1a23bd1cefa5b09337363096760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdTokenDataSourceHandle</type>
        <definition>HD_API HdTokenDataSourceHandle GetSubdivisionScheme</definition>
        <argsstring>()</argsstring>
        <name>GetSubdivisionScheme</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1aeaebb0e7931dca678396529dd9776465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdSubdivisionTagsSchema</type>
        <definition>HD_API HdSubdivisionTagsSchema GetSubdivisionTags</definition>
        <argsstring>()</argsstring>
        <name>GetSubdivisionTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a45f30e174e345d7ca7cf8ee5ef2bee20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdGeomSubsetsSchema</type>
        <definition>HD_API HdGeomSubsetsSchema GetGeomSubsets</definition>
        <argsstring>()</argsstring>
        <name>GetGeomSubsets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a84412e4f00f2eecb87e048d203c82150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdBoolDataSourceHandle</type>
        <definition>HD_API HdBoolDataSourceHandle GetDoubleSided</definition>
        <argsstring>()</argsstring>
        <name>GetDoubleSided</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="75" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_mesh_schema_1a155caca25437f96d27cb0ff406638d3d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdContainerDataSourceHandle</type>
        <definition>static HD_API HdContainerDataSourceHandle BuildRetained</definition>
        <argsstring>(const HdContainerDataSourceHandle &amp;topology, const HdTokenDataSourceHandle &amp;subdivisionScheme, const HdContainerDataSourceHandle &amp;subdivisionTags, const HdContainerDataSourceHandle &amp;geomSubsets, const HdBoolDataSourceHandle &amp;doubleSided)</argsstring>
        <name>BuildRetained</name>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>topology</declname>
        </param>
        <param>
          <type>const HdTokenDataSourceHandle &amp;</type>
          <declname>subdivisionScheme</declname>
        </param>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>subdivisionTags</declname>
        </param>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>geomSubsets</declname>
        </param>
        <param>
          <type>const HdBoolDataSourceHandle &amp;</type>
          <declname>doubleSided</declname>
        </param>
        <briefdescription>
<para>Builds a container data source which includes the provided child data sources. </para>
        </briefdescription>
        <detaileddescription>
<para>Parameters with nullptr values are excluded. This is a low-level interface. For cases in which it&apos;s desired to define the container with a sparse set of child fields, the <ref refid="class_hd_mesh_schema_1_1_builder" kindref="compound">Builder</ref> class is often more convenient and readable. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1aebe825c2c91c2b884367f4c1df0edb60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API HdMeshSchema</type>
        <definition>static HD_API HdMeshSchema GetFromParent</definition>
        <argsstring>(const HdContainerDataSourceHandle &amp;fromParentContainer)</argsstring>
        <name>GetFromParent</name>
        <param>
          <type>const HdContainerDataSourceHandle &amp;</type>
          <declname>fromParentContainer</declname>
        </param>
        <briefdescription>
<para>Retrieves a container data source with the schema&apos;s default name token &quot;mesh&quot; from the parent container and constructs a HdMeshSchema instance. </para>
        </briefdescription>
        <detaileddescription>
<para>Because the requested container data source may not exist, the result should be checked with IsDefined() or a bool comparison before use. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a13f863d37918c123e3613f6972f77a91" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>static HD_API const TfToken&amp; GetSchemaToken</definition>
        <argsstring>()</argsstring>
        <name>GetSchemaToken</name>
        <briefdescription>
<para>Returns a token where the container representing this schema is found in a container by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a7822253290cf5a0af0fd50787fc38f54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetDefaultLocator</definition>
        <argsstring>()</argsstring>
        <name>GetDefaultLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the container representing this schema is found by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1ac80b40f29d593fba80324354d27b0c72" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetTopologyLocator</definition>
        <argsstring>()</argsstring>
        <name>GetTopologyLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the topology data source can be found. </para>
        </briefdescription>
        <detaileddescription>
<para>This is often useful for checking intersection against the <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> sent with HdDataSourceObserver::PrimsDirtied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a59b2e674735718655efa03540f1b8494" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetGeomSubsetsLocator</definition>
        <argsstring>()</argsstring>
        <name>GetGeomSubsetsLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the geomsubsets data source can be found. </para>
        </briefdescription>
        <detaileddescription>
<para>This is often useful for checking intersection against the <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> sent with HdDataSourceObserver::PrimsDirtied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a309986830dc7b2366cf5a73fc9117d21" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetDoubleSidedLocator</definition>
        <argsstring>()</argsstring>
        <name>GetDoubleSidedLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the doublesided data source can be found. </para>
        </briefdescription>
        <detaileddescription>
<para>This is often useful for checking intersection against the <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> sent with HdDataSourceObserver::PrimsDirtied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a21c017b5962cd717c2e15b4aec6519d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetSubdivisionTagsLocator</definition>
        <argsstring>()</argsstring>
        <name>GetSubdivisionTagsLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the subdivisiontags data source can be found. </para>
        </briefdescription>
        <detaileddescription>
<para>This is often useful for checking intersection against the <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> sent with HdDataSourceObserver::PrimsDirtied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_mesh_schema_1a34c8c140f6f46f10176cd763d8b5fdc5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> &amp;</type>
        <definition>static HD_API const HdDataSourceLocator&amp; GetSubdivisionSchemeLocator</definition>
        <argsstring>()</argsstring>
        <name>GetSubdivisionSchemeLocator</name>
        <briefdescription>
<para>Returns an <ref refid="class_hd_data_source_locator" kindref="compound">HdDataSourceLocator</ref> (relative to the prim-level data source) where the subdivisionscheme data source can be found. </para>
        </briefdescription>
        <detaileddescription>
<para>This is often useful for checking intersection against the <ref refid="class_hd_data_source_locator_set" kindref="compound">HdDataSourceLocatorSet</ref> sent with HdDataSourceObserver::PrimsDirtied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/meshSchema.h" line="184" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2270">
        <label>HdMeshSchema</label>
        <childnode refid="2271" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2271">
        <label>HdSchema</label>
        <link refid="class_hd_schema"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2272">
        <label>HdMeshSchema</label>
        <childnode refid="2273" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2273">
        <label>HdSchema</label>
        <link refid="class_hd_schema"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/meshSchema.h" line="59" column="1" bodyfile="pxr/imaging/hd/meshSchema.h" bodystart="58" bodyend="186"/>
    <listofallmembers>
      <member refid="class_hd_schema_1a0199d1b612f9eace744ec93edce137f4" prot="protected" virt="non-virtual"><scope>HdMeshSchema</scope><name>_container</name></member>
      <member refid="class_hd_schema_1a0b7d9bdabb5f9beed73770bbbbd7e8ed" prot="protected" virt="non-virtual"><scope>HdMeshSchema</scope><name>_GetTypedDataSource</name></member>
      <member refid="class_hd_mesh_schema_1a155caca25437f96d27cb0ff406638d3d" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>BuildRetained</name></member>
      <member refid="class_hd_schema_1abe3b2a98314ce888136534588e4fb990" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetContainer</name></member>
      <member refid="class_hd_mesh_schema_1a7822253290cf5a0af0fd50787fc38f54" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetDefaultLocator</name></member>
      <member refid="class_hd_mesh_schema_1a84412e4f00f2eecb87e048d203c82150" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetDoubleSided</name></member>
      <member refid="class_hd_mesh_schema_1a309986830dc7b2366cf5a73fc9117d21" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetDoubleSidedLocator</name></member>
      <member refid="class_hd_mesh_schema_1aebe825c2c91c2b884367f4c1df0edb60" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetFromParent</name></member>
      <member refid="class_hd_mesh_schema_1a45f30e174e345d7ca7cf8ee5ef2bee20" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetGeomSubsets</name></member>
      <member refid="class_hd_mesh_schema_1a59b2e674735718655efa03540f1b8494" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetGeomSubsetsLocator</name></member>
      <member refid="class_hd_mesh_schema_1a13f863d37918c123e3613f6972f77a91" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetSchemaToken</name></member>
      <member refid="class_hd_mesh_schema_1afac6f1a23bd1cefa5b09337363096760" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetSubdivisionScheme</name></member>
      <member refid="class_hd_mesh_schema_1a34c8c140f6f46f10176cd763d8b5fdc5" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetSubdivisionSchemeLocator</name></member>
      <member refid="class_hd_mesh_schema_1aeaebb0e7931dca678396529dd9776465" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetSubdivisionTags</name></member>
      <member refid="class_hd_mesh_schema_1a21c017b5962cd717c2e15b4aec6519d7" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetSubdivisionTagsLocator</name></member>
      <member refid="class_hd_mesh_schema_1aa93a86ad4d93c1a83faa60bc40ef98bd" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetTopology</name></member>
      <member refid="class_hd_mesh_schema_1ac80b40f29d593fba80324354d27b0c72" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>GetTopologyLocator</name></member>
      <member refid="class_hd_mesh_schema_1a3e2ee7bc4ee0cbbdd4ca858aed1e1d60" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>HdMeshSchema</name></member>
      <member refid="class_hd_schema_1a996c4a7891229be6cfec0c8915db550b" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>HdSchema</name></member>
      <member refid="class_hd_schema_1a39d97ef359ad169d83a9056229dd7d92" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>IsDefined</name></member>
      <member refid="class_hd_schema_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>HdMeshSchema</scope><name>operator bool</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
