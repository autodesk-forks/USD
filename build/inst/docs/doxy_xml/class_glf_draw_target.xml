<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_glf_draw_target" kind="class" language="C++" prot="public">
    <compoundname>GlfDrawTarget</compoundname>
    <basecompoundref refid="class_tf_ref_base" prot="public" virt="non-virtual">TfRefBase</basecompoundref>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <includes refid="glf_2draw_target_8h" local="no">drawTarget.h</includes>
    <innerclass refid="class_glf_draw_target_1_1_attachment" prot="public">GlfDrawTarget::Attachment</innerclass>
    <innerclass refid="class_glf_draw_target_1_1_attachments_container" prot="protected">GlfDrawTarget::AttachmentsContainer</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_glf_draw_target_1ab24b752dc2d229098ca46007e7da49e5" prot="public" static="no">
        <type><ref refid="class_glf_draw_target" kindref="compound">GlfDrawTarget</ref></type>
        <definition>typedef GlfDrawTarget This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="69" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_glf_draw_target_1a651eef419b650e618d45f76202d3ef96" prot="public" static="no">
        <type><ref refid="struct_tf_declare_ptrs" kindref="compound">TfDeclarePtrs</ref>&lt; class Attachment &gt;::RefPtr</type>
        <definition>typedef TfDeclarePtrs&lt;class Attachment&gt;::RefPtr AttachmentRefPtr</definition>
        <argsstring></argsstring>
        <name>AttachmentRefPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="158" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_glf_draw_target_1a1bf8524c59497190da65cc7f8b02b567" prot="public" static="no">
        <type>std::map&lt; std::string, <ref refid="class_tf_ref_ptr" kindref="compound">AttachmentRefPtr</ref> &gt;</type>
        <definition>typedef std::map&lt;std::string, AttachmentRefPtr&gt; AttachmentsMap</definition>
        <argsstring></argsstring>
        <name>AttachmentsMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="160" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_glf_draw_target_1a172991f851c3820b10ac5a5d1c843704" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint _framebuffer</definition>
        <argsstring></argsstring>
        <name>_framebuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="286" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1a574a8a255a279986a9ed217359169fe4" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint _framebufferMS</definition>
        <argsstring></argsstring>
        <name>_framebufferMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="287" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1aa785808d4309f6d31d1fb47665ffe41f" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint _unbindRestoreReadFB</definition>
        <argsstring></argsstring>
        <name>_unbindRestoreReadFB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="289" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1a3946908deec26c0a20cb73a47e16fd35" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint _unbindRestoreDrawFB</definition>
        <argsstring></argsstring>
        <name>_unbindRestoreDrawFB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="290" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1a50ea322eb35a93e76fa3fa2b62aeba62" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _bindDepth</definition>
        <argsstring></argsstring>
        <name>_bindDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="292" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1a8bb827edf1820fdd916b5c8e30cbaa3d" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i _size</definition>
        <argsstring></argsstring>
        <name>_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="294" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1a5a6d9400fd84e8026f4b0ab76a6e92b9" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int _numSamples</definition>
        <argsstring></argsstring>
        <name>_numSamples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="296" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1ae9af5a1fb3471a7187a31269e5cd5205" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_ref_ptr" kindref="compound">TfRefPtr</ref>&lt; <ref refid="class_glf_draw_target_1_1_attachments_container" kindref="compound">AttachmentsContainer</ref> &gt;</type>
        <definition>TfRefPtr&lt;AttachmentsContainer&gt; _attachmentsPtr</definition>
        <argsstring></argsstring>
        <name>_attachmentsPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="298" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_glf_draw_target_1af246a65a7d91655185e721dd44b00b3a" prot="private" static="no" mutable="no">
        <type>GlfGLContextSharedPtr</type>
        <definition>GlfGLContextSharedPtr _owningContext</definition>
        <argsstring></argsstring>
        <name>_owningContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="299" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_glf_draw_target_1ac44634a7036e9792ecf2696e1fea166e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API GlfDrawTargetRefPtr</type>
        <definition>static GLF_API GlfDrawTargetRefPtr New</definition>
        <argsstring>(GfVec2i const &amp;size, bool requestMSAA=false)</argsstring>
        <name>New</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>requestMSAA</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns a new instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a2783e0c41e944f93d1ca6e554e14a2ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API GlfDrawTargetRefPtr</type>
        <definition>static GLF_API GlfDrawTargetRefPtr New</definition>
        <argsstring>(GlfDrawTargetPtr const &amp;drawtarget)</argsstring>
        <name>New</name>
        <param>
          <type>GlfDrawTargetPtr const &amp;</type>
          <declname>drawtarget</declname>
        </param>
        <briefdescription>
<para>Returns a new instance. </para>
        </briefdescription>
        <detaileddescription>
<para>GL framebuffers cannot be shared across contexts, but texture attachments can. In order to reflect this, GlfDrawTargets hold onto their maps of attachments through a RefPtr that can be shared by multiple GlfDrawTargets, one for each of the active GL contexts (ex. one for each active QT viewer). This constructor creates a new framebuffer, but populates its map of attachments by sharing the RefPtr of the source <ref refid="class_glf_draw_target" kindref="compound">GlfDrawTarget</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a2be30a4e3efe1f4ed1bc5f8d694038b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>static GLF_API void Resolve</definition>
        <argsstring>(const std::vector&lt; GlfDrawTarget * &gt; &amp;drawTargets)</argsstring>
        <name>Resolve</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_glf_draw_target" kindref="compound">GlfDrawTarget</ref> * &gt; &amp;</type>
          <declname>drawTargets</declname>
        </param>
        <briefdescription>
<para>Resolve several MSAA framebuffers at once. </para>
        </briefdescription>
        <detaileddescription>
<para>If any framebuffers don&apos;t have MSAA enabled, nothing happens to them. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="232" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_glf_draw_target_1a20b83213a8fc3a460eff67a58d3b80e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void AddAttachment</definition>
        <argsstring>(std::string const &amp;name, GLenum format, GLenum type, GLenum internalFormat)</argsstring>
        <name>AddAttachment</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>internalFormat</declname>
        </param>
        <briefdescription>
<para>Add an attachment to the DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a6e1dce64bc63ce2627d8c6e0e4b22e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void DeleteAttachment</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>DeleteAttachment</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes the named attachment from the DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a303e8630bd4b39108dc14c393ad0df42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void ClearAttachments</definition>
        <argsstring>()</argsstring>
        <name>ClearAttachments</name>
        <briefdescription>
<para>Clears all the attachments for this DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a6edf5ac2662c96afb0dca8fc120cef48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void CloneAttachments</definition>
        <argsstring>(GlfDrawTargetPtr const &amp;drawtarget)</argsstring>
        <name>CloneAttachments</name>
        <param>
          <type>GlfDrawTargetPtr const &amp;</type>
          <declname>drawtarget</declname>
        </param>
        <briefdescription>
<para>Copies the list of attachments from DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a1f21bcc96d1e5f5002acf54ebb37f005" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API AttachmentsMap const  &amp;</type>
        <definition>GLF_API AttachmentsMap const&amp; GetAttachments</definition>
        <argsstring>() const</argsstring>
        <name>GetAttachments</name>
        <briefdescription>
<para>Returns the list of Attachments for this DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a2f36419a5c2560366720448bedeedca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API <ref refid="class_tf_ref_ptr" kindref="compound">AttachmentRefPtr</ref></type>
        <definition>GLF_API AttachmentRefPtr GetAttachment</definition>
        <argsstring>(std::string const &amp;name)</argsstring>
        <name>GetAttachment</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the attachment with a given name or TfNullPtr;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1aeef38af2c55a8586d2d827583f49dd48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API bool</type>
        <definition>GLF_API bool WriteToFile</definition>
        <argsstring>(std::string const &amp;name, std::string const &amp;filename, GfMatrix4d const &amp;viewMatrix=GfMatrix4d(1), GfMatrix4d const &amp;projectionMatrix=GfMatrix4d(1))</argsstring>
        <name>WriteToFile</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>viewMatrix</declname>
          <defval><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref>(1)</defval>
        </param>
        <param>
          <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const &amp;</type>
          <declname>projectionMatrix</declname>
          <defval><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref>(1)</defval>
        </param>
        <briefdescription>
<para>Write the Attachment buffer to an image file (debugging). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a94ab0415f378ae37bf71917649cd4de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void SetSize</definition>
        <argsstring>(GfVec2i)</argsstring>
        <name>SetSize</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        </param>
        <briefdescription>
<para>Resize the DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a9b1aa0f56bafaaeacffee7e61022780d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const  &amp;</type>
        <definition>GfVec2i const&amp; GetSize</definition>
        <argsstring>() const</argsstring>
        <name>GetSize</name>
        <briefdescription>
<para>Returns the size of the DrawTarget. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="199" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1accfbea378753f9d5b3ab2b2b20788eb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HasMSAA</definition>
        <argsstring>() const</argsstring>
        <name>HasMSAA</name>
        <briefdescription>
<para>Returns if the draw target uses msaa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="202" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a5138c8c394f795ffc5846b794fd2b6fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API GLuint</type>
        <definition>GLF_API GLuint GetFramebufferId</definition>
        <argsstring>() const</argsstring>
        <name>GetFramebufferId</name>
        <briefdescription>
<para>Returns the framebuffer object Id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a77631900da01fd8d9b01f67f6fa15832" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API GLuint</type>
        <definition>GLF_API GLuint GetFramebufferMSId</definition>
        <argsstring>() const</argsstring>
        <name>GetFramebufferMSId</name>
        <briefdescription>
<para>Returns the id of the framebuffer object with MSAA buffers. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a8458c90af741497297d3c2f87efb63df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void Bind</definition>
        <argsstring>()</argsstring>
        <name>Bind</name>
        <briefdescription>
<para>Binds the framebuffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="214" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1ae95e2f403eec37b742f87f5bc51bf28c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void Unbind</definition>
        <argsstring>()</argsstring>
        <name>Unbind</name>
        <briefdescription>
<para>Unbinds the framebuffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="218" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a248501429dc94e62287c80c881a0f333" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API bool</type>
        <definition>GLF_API bool IsBound</definition>
        <argsstring>() const</argsstring>
        <name>IsBound</name>
        <briefdescription>
<para>Returns whether the framebuffer is currently bound. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1af37e6065c1d84248ec000b12559e1430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void Resolve</definition>
        <argsstring>()</argsstring>
        <name>Resolve</name>
        <briefdescription>
<para>Resolve the MSAA framebuffer to a regular framebuffer. </para>
        </briefdescription>
        <detaileddescription>
<para>If there is no MSAA enabled, this function does nothing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a79b86cf113a7e843d20a0e6c9aae072a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API void</type>
        <definition>GLF_API void TouchContents</definition>
        <argsstring>()</argsstring>
        <name>TouchContents</name>
        <briefdescription>
<para>Updates the contents signature for attached textures to allow downstream consumers to know that the texture image data may have changed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a37e1c5cc0f151fbdd336f98de1ed5314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API bool</type>
        <definition>GLF_API bool IsValid</definition>
        <argsstring>(std::string *reason=NULL)</argsstring>
        <name>IsValid</name>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns whether the enclosed framebuffer object is complete. </para>
        </briefdescription>
        <detaileddescription>
<para>If <emphasis>reason</emphasis> is non-NULL, and this framebuffer is not valid, sets <emphasis>reason</emphasis> to the reason why not. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="244" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_glf_draw_target_1a7dea3349cbd4a89ff283047429c55989" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API GlfDrawTarget</definition>
        <argsstring>(GfVec2i const &amp;size, bool requestMSAA)</argsstring>
        <name>GlfDrawTarget</name>
        <param>
          <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref> const &amp;</type>
          <declname>size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>requestMSAA</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a3776aec62edbf92bb5f77ba6224e5313" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLF_API</type>
        <definition>GLF_API GlfDrawTarget</definition>
        <argsstring>(GlfDrawTargetPtr const &amp;drawtarget)</argsstring>
        <name>GlfDrawTarget</name>
        <param>
          <type>GlfDrawTargetPtr const &amp;</type>
          <declname>drawtarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a7a27f001973c6cb20e036acb1db4248e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>GLF_API</type>
        <definition>virtual GLF_API ~GlfDrawTarget</definition>
        <argsstring>()</argsstring>
        <name>~GlfDrawTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="263" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_glf_draw_target_1ab5f60d956e65cf12d44bb732d05e8180" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _GenFrameBuffer</definition>
        <argsstring>()</argsstring>
        <name>_GenFrameBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1aa5ea8641507a20b2799d8d786ff2ece6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _BindAttachment</definition>
        <argsstring>(GlfDrawTarget::AttachmentRefPtr const &amp;a)</argsstring>
        <name>_BindAttachment</name>
        <param>
          <type><ref refid="class_tf_ref_ptr" kindref="compound">GlfDrawTarget::AttachmentRefPtr</ref> const &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a381462ba54a3e0823d0385db96bd269b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GLuint</type>
        <definition>GLuint _AllocAttachment</definition>
        <argsstring>(GLenum format, GLenum type)</argsstring>
        <name>_AllocAttachment</name>
        <param>
          <type>GLenum</type>
          <declname>format</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a752190129105e0080dab8d54b0e23772" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>AttachmentsMap &amp;</type>
        <definition>AttachmentsMap&amp; _GetAttachments</definition>
        <argsstring>() const</argsstring>
        <name>_GetAttachments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a531e2d61db3c2f65adaa9145c2406d1f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _DeleteAttachments</definition>
        <argsstring>()</argsstring>
        <name>_DeleteAttachments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a613befab2d0b734d32779af6b78f3ee5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _AllocDepth</definition>
        <argsstring>()</argsstring>
        <name>_AllocDepth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a997b3f58f2d72ec0cb61eaa5a695d7f4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool _Validate</definition>
        <argsstring>(std::string *reason=NULL)</argsstring>
        <name>_Validate</name>
        <param>
          <type>std::string *</type>
          <declname>reason</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="278" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a8597e695d4091a34f95d65f10895f6d0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _SaveBindingState</definition>
        <argsstring>()</argsstring>
        <name>_SaveBindingState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a2805a343d84cd79d4817af380679ca19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _RestoreBindingState</definition>
        <argsstring>()</argsstring>
        <name>_RestoreBindingState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_glf_draw_target_1a7e6e40ac8b3be24403bbe2dbc383b1e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _Resolve</definition>
        <argsstring>()</argsstring>
        <name>_Resolve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/glf/drawTarget.h" line="284" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class representing a GL render target with mutliple image attachments. </para>
    </briefdescription>
    <detaileddescription>
<para>A DrawTarget is essentially a custom render pass into which several arbitrary variables can be output into. These can later be used as texture samplers by GLSL shaders.</para>
<para>The DrawTarget maintains a map of named attachments that correspond to GL_TEXTURE_2D mages. By default, DrawTargets also create a depth component that is used both as a depth buffer during the draw pass, and can later be accessed as a regular GL_TEXTURE_2D data. Stencils are also available (by setting the format to GL_DEPTH_STENCIL and the internalFormat to GL_DEPTH24_STENCIL8) </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1450">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="1448">
        <label>GlfDrawTarget</label>
        <link refid="class_glf_draw_target"/>
        <childnode refid="1449" relation="public-inheritance">
        </childnode>
        <childnode refid="1450" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1449">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1453">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="1451">
        <label>GlfDrawTarget</label>
        <link refid="class_glf_draw_target"/>
        <childnode refid="1452" relation="public-inheritance">
        </childnode>
        <childnode refid="1453" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1452">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/glf/drawTarget.h" line="67" column="1" bodyfile="pxr/imaging/glf/drawTarget.h" bodystart="67" bodyend="300"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_glf_draw_target_1a381462ba54a3e0823d0385db96bd269b" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_AllocAttachment</name></member>
      <member refid="class_glf_draw_target_1a613befab2d0b734d32779af6b78f3ee5" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_AllocDepth</name></member>
      <member refid="class_glf_draw_target_1ae9af5a1fb3471a7187a31269e5cd5205" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_attachmentsPtr</name></member>
      <member refid="class_glf_draw_target_1aa5ea8641507a20b2799d8d786ff2ece6" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_BindAttachment</name></member>
      <member refid="class_glf_draw_target_1a50ea322eb35a93e76fa3fa2b62aeba62" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_bindDepth</name></member>
      <member refid="class_glf_draw_target_1a531e2d61db3c2f65adaa9145c2406d1f" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_DeleteAttachments</name></member>
      <member refid="class_glf_draw_target_1a172991f851c3820b10ac5a5d1c843704" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_framebuffer</name></member>
      <member refid="class_glf_draw_target_1a574a8a255a279986a9ed217359169fe4" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_framebufferMS</name></member>
      <member refid="class_glf_draw_target_1ab5f60d956e65cf12d44bb732d05e8180" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_GenFrameBuffer</name></member>
      <member refid="class_glf_draw_target_1a752190129105e0080dab8d54b0e23772" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_GetAttachments</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_HasRemnant</name></member>
      <member refid="class_glf_draw_target_1a5a6d9400fd84e8026f4b0ab76a6e92b9" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_numSamples</name></member>
      <member refid="class_glf_draw_target_1af246a65a7d91655185e721dd44b00b3a" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_owningContext</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_Register</name></member>
      <member refid="class_glf_draw_target_1a7e6e40ac8b3be24403bbe2dbc383b1e4" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_Resolve</name></member>
      <member refid="class_glf_draw_target_1a2805a343d84cd79d4817af380679ca19" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_RestoreBindingState</name></member>
      <member refid="class_glf_draw_target_1a8597e695d4091a34f95d65f10895f6d0" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_SaveBindingState</name></member>
      <member refid="class_glf_draw_target_1a8bb827edf1820fdd916b5c8e30cbaa3d" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_size</name></member>
      <member refid="class_glf_draw_target_1a3946908deec26c0a20cb73a47e16fd35" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_unbindRestoreDrawFB</name></member>
      <member refid="class_glf_draw_target_1aa785808d4309f6d31d1fb47665ffe41f" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_unbindRestoreReadFB</name></member>
      <member refid="class_glf_draw_target_1a997b3f58f2d72ec0cb61eaa5a695d7f4" prot="private" virt="non-virtual"><scope>GlfDrawTarget</scope><name>_Validate</name></member>
      <member refid="class_glf_draw_target_1a20b83213a8fc3a460eff67a58d3b80e7" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>AddAttachment</name></member>
      <member refid="class_glf_draw_target_1a651eef419b650e618d45f76202d3ef96" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>AttachmentRefPtr</name></member>
      <member refid="class_glf_draw_target_1a1bf8524c59497190da65cc7f8b02b567" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>AttachmentsMap</name></member>
      <member refid="class_glf_draw_target_1a8458c90af741497297d3c2f87efb63df" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>Bind</name></member>
      <member refid="class_glf_draw_target_1a303e8630bd4b39108dc14c393ad0df42" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>ClearAttachments</name></member>
      <member refid="class_glf_draw_target_1a6edf5ac2662c96afb0dca8fc120cef48" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>CloneAttachments</name></member>
      <member refid="class_glf_draw_target_1a6e1dce64bc63ce2627d8c6e0e4b22e11" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>DeleteAttachment</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>EnableNotification2</name></member>
      <member refid="class_glf_draw_target_1a2f36419a5c2560366720448bedeedca2" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetAttachment</name></member>
      <member refid="class_glf_draw_target_1a1f21bcc96d1e5f5002acf54ebb37f005" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetAttachments</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetCurrentCount</name></member>
      <member refid="class_glf_draw_target_1a5138c8c394f795ffc5846b794fd2b6fd" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetFramebufferId</name></member>
      <member refid="class_glf_draw_target_1a77631900da01fd8d9b01f67f6fa15832" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetFramebufferMSId</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetRefCount</name></member>
      <member refid="class_glf_draw_target_1a9b1aa0f56bafaaeacffee7e61022780d" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetSize</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_glf_draw_target_1a7dea3349cbd4a89ff283047429c55989" prot="protected" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GlfDrawTarget</name></member>
      <member refid="class_glf_draw_target_1a3776aec62edbf92bb5f77ba6224e5313" prot="protected" virt="non-virtual"><scope>GlfDrawTarget</scope><name>GlfDrawTarget</name></member>
      <member refid="class_glf_draw_target_1accfbea378753f9d5b3ab2b2b20788eb1" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>HasMSAA</name></member>
      <member refid="class_glf_draw_target_1a248501429dc94e62287c80c881a0f333" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>IsBound</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>IsUnique</name></member>
      <member refid="class_glf_draw_target_1a37e1c5cc0f151fbdd336f98de1ed5314" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>IsValid</name></member>
      <member refid="class_glf_draw_target_1ac44634a7036e9792ecf2696e1fea166e" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>New</name></member>
      <member refid="class_glf_draw_target_1a2783e0c41e944f93d1ca6e554e14a2ba" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>New</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>operator=</name></member>
      <member refid="class_glf_draw_target_1af37e6065c1d84248ec000b12559e1430" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>Resolve</name></member>
      <member refid="class_glf_draw_target_1a2be30a4e3efe1f4ed1bc5f8d694038b3" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>Resolve</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_glf_draw_target_1a94ab0415f378ae37bf71917649cd4de6" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>SetSize</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>TfWeakBase</name></member>
      <member refid="class_glf_draw_target_1ab24b752dc2d229098ca46007e7da49e5" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>This</name></member>
      <member refid="class_glf_draw_target_1a79b86cf113a7e843d20a0e6c9aae072a" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>TouchContents</name></member>
      <member refid="class_glf_draw_target_1ae95e2f403eec37b742f87f5bc51bf28c" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>Unbind</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_glf_draw_target_1aeef38af2c55a8586d2d827583f49dd48" prot="public" virt="non-virtual"><scope>GlfDrawTarget</scope><name>WriteToFile</name></member>
      <member refid="class_glf_draw_target_1a7a27f001973c6cb20e036acb1db4248e" prot="protected" virt="virtual"><scope>GlfDrawTarget</scope><name>~GlfDrawTarget</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>GlfDrawTarget</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>GlfDrawTarget</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
