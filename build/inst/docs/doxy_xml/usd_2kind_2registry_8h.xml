<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="usd_2kind_2registry_8h" kind="file" language="C++">
    <compoundname>registry.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2kind_2api_8h" local="yes">pxr/usd/kind/api.h</includes>
    <includes refid="weak_base_8h" local="yes">pxr/base/tf/weakBase.h</includes>
    <includes refid="singleton_8h" local="yes">pxr/base/tf/singleton.h</includes>
    <includes refid="static_tokens_8h" local="yes">pxr/base/tf/staticTokens.h</includes>
    <includes refid="token_8h" local="yes">pxr/base/tf/token.h</includes>
    <includes local="no">unordered_map</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="50551">
        <label>atomic</label>
      </node>
      <node id="50560">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50522" relation="include">
        </childnode>
        <childnode refid="50559" relation="include">
        </childnode>
        <childnode refid="50551" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
      </node>
      <node id="50533">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="50534" relation="include">
        </childnode>
        <childnode refid="50535" relation="include">
        </childnode>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50518" relation="include">
        </childnode>
        <childnode refid="50536" relation="include">
        </childnode>
      </node>
      <node id="50517">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="50518" relation="include">
        </childnode>
      </node>
      <node id="50535">
        <label>cstdint</label>
      </node>
      <node id="50523">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50524" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50548" relation="include">
        </childnode>
        <childnode refid="50549" relation="include">
        </childnode>
        <childnode refid="50552" relation="include">
        </childnode>
        <childnode refid="50554" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50522" relation="include">
        </childnode>
        <childnode refid="50553" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50555" relation="include">
        </childnode>
      </node>
      <node id="50557">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="50518" relation="include">
        </childnode>
      </node>
      <node id="50537">
        <label>cmath</label>
      </node>
      <node id="50531">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50526" relation="include">
        </childnode>
        <childnode refid="50532" relation="include">
        </childnode>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50538" relation="include">
        </childnode>
        <childnode refid="50539" relation="include">
        </childnode>
      </node>
      <node id="50549">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50550" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
      </node>
      <node id="50564">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50557" relation="include">
        </childnode>
        <childnode refid="50535" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50539" relation="include">
        </childnode>
      </node>
      <node id="50516">
        <label>pxr/usd/kind/api.h</label>
        <link refid="usd_2kind_2api_8h_source"/>
        <childnode refid="50517" relation="include">
        </childnode>
      </node>
      <node id="50541">
        <label>string</label>
      </node>
      <node id="50525">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50517" relation="include">
        </childnode>
      </node>
      <node id="50542">
        <label>map</label>
      </node>
      <node id="50534">
        <label>cinttypes</label>
      </node>
      <node id="50514">
        <label>pxr/usd/kind/registry.h</label>
        <link refid="usd_2kind_2registry_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50516" relation="include">
        </childnode>
        <childnode refid="50519" relation="include">
        </childnode>
        <childnode refid="50556" relation="include">
        </childnode>
        <childnode refid="50558" relation="include">
        </childnode>
        <childnode refid="50561" relation="include">
        </childnode>
        <childnode refid="50571" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50515">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="50563">
        <label>unordered_set</label>
      </node>
      <node id="50529">
        <label>stddef.h</label>
      </node>
      <node id="50526">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50518" relation="include">
        </childnode>
      </node>
      <node id="50559">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="50518" relation="include">
        </childnode>
      </node>
      <node id="50550">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50551" relation="include">
        </childnode>
      </node>
      <node id="50552">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50553" relation="include">
        </childnode>
      </node>
      <node id="50521">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50522" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
      </node>
      <node id="50570">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="50536">
        <label>sys/types.h</label>
      </node>
      <node id="50553">
        <label>typeinfo</label>
      </node>
      <node id="50561">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50524" relation="include">
        </childnode>
        <childnode refid="50530" relation="include">
        </childnode>
        <childnode refid="50562" relation="include">
        </childnode>
        <childnode refid="50564" relation="include">
        </childnode>
        <childnode refid="50551" relation="include">
        </childnode>
        <childnode refid="50565" relation="include">
        </childnode>
        <childnode refid="50541" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
      </node>
      <node id="50532">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50518" relation="include">
        </childnode>
        <childnode refid="50533" relation="include">
        </childnode>
        <childnode refid="50537" relation="include">
        </childnode>
      </node>
      <node id="50547">
        <label>vector</label>
      </node>
      <node id="50520">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="50517" relation="include">
        </childnode>
      </node>
      <node id="50539">
        <label>utility</label>
      </node>
      <node id="50548">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
      </node>
      <node id="50566">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="50518">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="50558">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50559" relation="include">
        </childnode>
        <childnode refid="50560" relation="include">
        </childnode>
        <childnode refid="50561" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
        <childnode refid="50566" relation="include">
        </childnode>
        <childnode refid="50567" relation="include">
        </childnode>
        <childnode refid="50568" relation="include">
        </childnode>
        <childnode refid="50569" relation="include">
        </childnode>
        <childnode refid="50570" relation="include">
        </childnode>
      </node>
      <node id="50522">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="50518" relation="include">
        </childnode>
      </node>
      <node id="50530">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50531" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50540" relation="include">
        </childnode>
        <childnode refid="50541" relation="include">
        </childnode>
        <childnode refid="50542" relation="include">
        </childnode>
        <childnode refid="50543" relation="include">
        </childnode>
        <childnode refid="50544" relation="include">
        </childnode>
        <childnode refid="50545" relation="include">
        </childnode>
        <childnode refid="50546" relation="include">
        </childnode>
        <childnode refid="50539" relation="include">
        </childnode>
        <childnode refid="50547" relation="include">
        </childnode>
      </node>
      <node id="50538">
        <label>math.h</label>
      </node>
      <node id="50565">
        <label>iosfwd</label>
      </node>
      <node id="50527">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50528" relation="include">
        </childnode>
        <childnode refid="50529" relation="include">
        </childnode>
      </node>
      <node id="50555">
        <label>cstddef</label>
      </node>
      <node id="50556">
        <label>pxr/base/tf/singleton.h</label>
        <link refid="singleton_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50557" relation="include">
        </childnode>
        <childnode refid="50551" relation="include">
        </childnode>
      </node>
      <node id="50554">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50543" relation="include">
        </childnode>
      </node>
      <node id="50571">
        <label>unordered_map</label>
      </node>
      <node id="50524">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50525" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50526" relation="include">
        </childnode>
        <childnode refid="50522" relation="include">
        </childnode>
        <childnode refid="50527" relation="include">
        </childnode>
        <childnode refid="50529" relation="include">
        </childnode>
      </node>
      <node id="50567">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="50569">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="50546">
        <label>type_traits</label>
      </node>
      <node id="50544">
        <label>set</label>
      </node>
      <node id="50528">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="50518" relation="include">
        </childnode>
      </node>
      <node id="50540">
        <label>cstring</label>
      </node>
      <node id="50519">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50520" relation="include">
        </childnode>
        <childnode refid="50521" relation="include">
        </childnode>
        <childnode refid="50523" relation="include">
        </childnode>
        <childnode refid="50551" relation="include">
        </childnode>
      </node>
      <node id="50543">
        <label>memory</label>
      </node>
      <node id="50562">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="50515" relation="include">
        </childnode>
        <childnode refid="50518" relation="include">
        </childnode>
        <childnode refid="50563" relation="include">
        </childnode>
      </node>
      <node id="50545">
        <label>typeindex</label>
      </node>
      <node id="50568">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_kind_registry" prot="public">KindRegistry</innerclass>
    <innerclass refid="struct_kind_registry_1_1___kind_data" prot="private">KindRegistry::_KindData</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="usd_2kind_2registry_8h_1ab0e223cfb11655f8da2eb85364a38e85" prot="public" static="no">
        <name>KIND_TOKENS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/kind/registry.h" line="42" column="9" bodyfile="pxr/usd/kind/registry.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="usd_2kind_2registry_8h_1ae04798e85f1038e0cda039db6d7e49f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TF_DECLARE_PUBLIC_TOKENS</definition>
        <argsstring>(KindTokens, KIND_API, KIND_TOKENS)</argsstring>
        <name>TF_DECLARE_PUBLIC_TOKENS</name>
        <param>
          <type>KindTokens</type>
        </param>
        <param>
          <type>KIND_API</type>
        </param>
        <param>
          <type>KIND_TOKENS</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><anchor id="usd_2kind_2registry_8h_1KindTokens"/>Provides static, efficient <ref refid="class_tf_token" kindref="compound">TfToken</ref>&apos;s for built-in Kinds</para>
<para>See <ref refid="kind_page_front_1kind_coreKinds" kindref="member">The Core Kind Hierarchy</ref> for description of the builtin kinds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/kind/registry.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="usd_2kind_2registry_8h_1ac5036d3861939e737de26bd5ae7cc36e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>KIND_API_TEMPLATE_CLASS</definition>
        <argsstring>(TfSingleton&lt; KindRegistry &gt;)</argsstring>
        <name>KIND_API_TEMPLATE_CLASS</name>
        <param>
          <type><ref refid="class_tf_singleton" kindref="compound">TfSingleton</ref>&lt; <ref refid="class_kind_registry" kindref="compound">KindRegistry</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/kind/registry.h" line="148" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_KIND_REGISTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_KIND_REGISTRY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/kind/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weak_base_8h" kindref="compound">pxr/base/tf/weakBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="singleton_8h" kindref="compound">pxr/base/tf/singleton.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="static_tokens_8h" kindref="compound">pxr/base/tf/staticTokens.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="token_8h" kindref="compound">pxr/base/tf/token.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor">#define<sp/>KIND_TOKENS<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(model)<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(component)<sp/>\</highlight></codeline>
<codeline lineno="45"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(group)<sp/>\</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(assembly)<sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(subcomponent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="usd_2kind_2registry_8h_1ae04798e85f1038e0cda039db6d7e49f3" kindref="member">TF_DECLARE_PUBLIC_TOKENS</ref>(KindTokens,<sp/>KIND_API,<sp/>KIND_TOKENS);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_kind_registry" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>&amp;<sp/><ref refid="class_kind_registry_1a631a54789cde27fa5d3eaf5178ef6019" kindref="member">GetInstance</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1a36058763d949167e93a2575dd344f9ff" kindref="member">HasKind</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/><ref refid="class_kind_registry_1a95467660d480a198be64d562f4160748" kindref="member">GetBaseKind</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>&amp;kind);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1acfec2bb2bb93ed2a015f277b10989fca" kindref="member">IsA</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>derivedKind,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>&amp;baseKind);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;TfToken&gt;<sp/><sp/><ref refid="class_kind_registry_1a7108e597eb1008f4f88ab0d71932594e" kindref="member">GetAllKinds</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1aa3dce75289037bc7c64fb52ca1caec8d" kindref="member">IsModel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1a11c6803b66e5b145c7b04008b3e80bc4" kindref="member">IsGroup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1a0a73ccdc85e1ba6bc7f59495508d4af6" kindref="member">IsAssembly</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1abe807f0a4a35b976342396946678ae2d" kindref="member">IsComponent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>KIND_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_kind_registry_1a70c37211bf426d2aa0508be1b88fba4d" kindref="member">IsSubComponent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_singleton" kindref="compound">TfSingleton</ref>&lt;<ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>&gt;;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_kind_registry" kindref="compound">KindRegistry</ref>();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_HasKind(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>_GetBaseKind(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>&amp;kind)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsA(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>derivedKind,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>&amp;baseKind)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;TfToken&gt;<sp/>_GetAllKinds()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Register(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>kind,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>baseKind<sp/>=<sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>());</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_RegisterDefaults();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_KindData<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>baseKind;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_map&lt;TfToken,<sp/>_KindData,<sp/>TfToken::HashFunctor&gt;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_KindMap;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>_KindMap<sp/>_kindMap;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">KIND_API_TEMPLATE_CLASS(<ref refid="class_tf_singleton" kindref="compound">TfSingleton&lt;KindRegistry&gt;</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_USD_KIND_REGISTRY_H</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/kind/registry.h"/>
  </compounddef>
</doxygen>
