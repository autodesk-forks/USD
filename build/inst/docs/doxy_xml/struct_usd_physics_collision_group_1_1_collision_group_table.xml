<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_physics_collision_group_1_1_collision_group_table" kind="struct" language="C++" prot="public">
    <compoundname>UsdPhysicsCollisionGroup::CollisionGroupTable</compoundname>
    <includes refid="collision_group_8h" local="no">collisionGroup.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_usd_physics_collision_group_1_1_collision_group_table_1a6445b24343a92ca777e9588ccfc35261" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdPhysicsCollisionGroup</definition>
        <argsstring></argsstring>
        <name>UsdPhysicsCollisionGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/collisionGroup.h" line="263" column="1" bodyfile="pxr/usd/usdPhysics/collisionGroup.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="struct_usd_physics_collision_group_1_1_collision_group_table_1acc095d374a909ca9d29de6a241a46128" prot="protected" static="no" mutable="no">
        <type>SdfPathVector</type>
        <definition>SdfPathVector _groups</definition>
        <argsstring></argsstring>
        <name>_groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/collisionGroup.h" line="265" column="1" bodyfile="pxr/usd/usdPhysics/collisionGroup.h" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_physics_collision_group_1_1_collision_group_table_1ae2f83f7b884a78b42e9050dcfc06c082" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; _enabled</definition>
        <argsstring></argsstring>
        <name>_enabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/collisionGroup.h" line="268" column="1" bodyfile="pxr/usd/usdPhysics/collisionGroup.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_physics_collision_group_1_1_collision_group_table_1a9c4a55a9bc42a368502a8659977a3f1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const SdfPathVector &amp;</type>
        <definition>USDPHYSICS_API const SdfPathVector&amp; GetCollisionGroups</definition>
        <argsstring>() const</argsstring>
        <name>GetCollisionGroups</name>
        <briefdescription>
<para>Return the set of all <ref refid="class_usd_physics_collision_group" kindref="compound">UsdPhysicsCollisionGroup</ref> which this table contains. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/collisionGroup.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_physics_collision_group_1_1_collision_group_table_1abb2681d0443485a45b803b5d2f0c9e98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API bool</type>
        <definition>USDPHYSICS_API bool IsCollisionEnabled</definition>
        <argsstring>(const unsigned int idxA, const unsigned int idxB) const</argsstring>
        <name>IsCollisionEnabled</name>
        <param>
          <type>const unsigned int</type>
          <declname>idxA</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>idxB</declname>
        </param>
        <briefdescription>
<para>Return true if the groups at indices <emphasis>idxA</emphasis> and <emphasis>idxB</emphasis> collide. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/collisionGroup.h" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_physics_collision_group_1_1_collision_group_table_1a0726b7e08b538d17f874f379c3304efd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API bool</type>
        <definition>USDPHYSICS_API bool IsCollisionEnabled</definition>
        <argsstring>(const SdfPath &amp;primA, const SdfPath &amp;primB) const</argsstring>
        <name>IsCollisionEnabled</name>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primA</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>primB</declname>
        </param>
        <briefdescription>
<para>Return true if the groups <emphasis>primA</emphasis> and <emphasis>primB</emphasis> collide. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/collisionGroup.h" line="259" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Utility structure generated by <ref refid="class_usd_physics_collision_group_1acc6909b737d4e87776f6444023ff4f8e" kindref="member">ComputeCollisionGroupTable()</ref>; contains a table describing which pairs of collision groups have collisions enabled/disabled by the filtering rules. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usdPhysics/collisionGroup.h" line="246" column="1" bodyfile="pxr/usd/usdPhysics/collisionGroup.h" bodystart="245" bodyend="269"/>
    <listofallmembers>
      <member refid="struct_usd_physics_collision_group_1_1_collision_group_table_1ae2f83f7b884a78b42e9050dcfc06c082" prot="protected" virt="non-virtual"><scope>UsdPhysicsCollisionGroup::CollisionGroupTable</scope><name>_enabled</name></member>
      <member refid="struct_usd_physics_collision_group_1_1_collision_group_table_1acc095d374a909ca9d29de6a241a46128" prot="protected" virt="non-virtual"><scope>UsdPhysicsCollisionGroup::CollisionGroupTable</scope><name>_groups</name></member>
      <member refid="struct_usd_physics_collision_group_1_1_collision_group_table_1a9c4a55a9bc42a368502a8659977a3f1f" prot="public" virt="non-virtual"><scope>UsdPhysicsCollisionGroup::CollisionGroupTable</scope><name>GetCollisionGroups</name></member>
      <member refid="struct_usd_physics_collision_group_1_1_collision_group_table_1abb2681d0443485a45b803b5d2f0c9e98" prot="public" virt="non-virtual"><scope>UsdPhysicsCollisionGroup::CollisionGroupTable</scope><name>IsCollisionEnabled</name></member>
      <member refid="struct_usd_physics_collision_group_1_1_collision_group_table_1a0726b7e08b538d17f874f379c3304efd" prot="public" virt="non-virtual"><scope>UsdPhysicsCollisionGroup::CollisionGroupTable</scope><name>IsCollisionEnabled</name></member>
      <member refid="struct_usd_physics_collision_group_1_1_collision_group_table_1a6445b24343a92ca777e9588ccfc35261" prot="protected" virt="non-virtual"><scope>UsdPhysicsCollisionGroup::CollisionGroupTable</scope><name>UsdPhysicsCollisionGroup</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
