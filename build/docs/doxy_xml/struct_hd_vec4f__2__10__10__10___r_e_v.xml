<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hd_vec4f__2__10__10__10___r_e_v" kind="struct" language="C++" prot="public">
    <compoundname>HdVec4f_2_10_10_10_REV</compoundname>
    <includes refid="imaging_2hd_2types_8h" local="no">types.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a6150e0515f7202e2fb518f7206ed97dc" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <bitfield> 10</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="226" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a0a2f84ed7838f07779ae24c5a9086d33" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <bitfield> 10</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="227" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a14f94e529dff0b8bfba8e16fbe9755d6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <bitfield> 10</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="228" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_vec4f__2__10__10__10___r_e_v_1aac374e320caaadeca4874add33b62af2" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <bitfield> 2</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="229" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="229" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a5692e3e52cedc81f2f0d6940dbc351f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdVec4f_2_10_10_10_REV</definition>
        <argsstring>()</argsstring>
        <name>HdVec4f_2_10_10_10_REV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="185" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="185" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a622c88d40462c35b98c5b3bd25c0261c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Vec3Type</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>HdVec4f_2_10_10_10_REV</definition>
        <argsstring>(Vec3Type const &amp;value)</argsstring>
        <name>HdVec4f_2_10_10_10_REV</name>
        <param>
          <type>Vec3Type const &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="188" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="188" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a4629f380480b82a2b9d301baf49c08a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>HdVec4f_2_10_10_10_REV</definition>
        <argsstring>(int const value)</argsstring>
        <name>HdVec4f_2_10_10_10_REV</name>
        <param>
          <type>int const</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="195" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="195" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1aebfc52cb2b316f94f3c4a3676290e21f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Vec3Type</type>
          </param>
        </templateparamlist>
        <type>Vec3Type</type>
        <definition>Vec3Type GetAsVec</definition>
        <argsstring>() const</argsstring>
        <name>GetAsVec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="205" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a70a68a1a35e91a1a4f26dc4e70558510" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetAsInt</definition>
        <argsstring>() const</argsstring>
        <name>GetAsInt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="211" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1a8fc80a7b60c892651d899d8d105f7ee1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const HdVec4f_2_10_10_10_REV &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hd_vec4f__2__10__10__10___r_e_v" kindref="compound">HdVec4f_2_10_10_10_REV</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="216" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="216" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="struct_hd_vec4f__2__10__10__10___r_e_v_1af50cee2895f92058e97d9b87a13c811c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const HdVec4f_2_10_10_10_REV &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hd_vec4f__2__10__10__10___r_e_v" kindref="compound">HdVec4f_2_10_10_10_REV</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/types.h" line="222" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="222" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="struct_hd_vec4f__2__10__10__10___r_e_v" kindref="compound">HdVec4f_2_10_10_10_REV</ref> is a compact representation of a <ref refid="class_gf_vec4f" kindref="compound">GfVec4f</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>It uses 10 bits for x, y, and z, and 2 bits for w.</para>
<para>XXX We expect this type to move again as we continue work on refactoring the GL dependencies. </para>
    </detaileddescription>
    <location file="pxr/imaging/hd/types.h" line="184" column="1" bodyfile="pxr/imaging/hd/types.h" bodystart="183" bodyend="230"/>
    <listofallmembers>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a70a68a1a35e91a1a4f26dc4e70558510" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>GetAsInt</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1aebfc52cb2b316f94f3c4a3676290e21f" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>GetAsVec</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a5692e3e52cedc81f2f0d6940dbc351f4" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>HdVec4f_2_10_10_10_REV</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a622c88d40462c35b98c5b3bd25c0261c" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>HdVec4f_2_10_10_10_REV</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a4629f380480b82a2b9d301baf49c08a6" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>HdVec4f_2_10_10_10_REV</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1af50cee2895f92058e97d9b87a13c811c" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>operator!=</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a8fc80a7b60c892651d899d8d105f7ee1" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>operator==</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1aac374e320caaadeca4874add33b62af2" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>w</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a6150e0515f7202e2fb518f7206ed97dc" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>x</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a0a2f84ed7838f07779ae24c5a9086d33" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>y</name></member>
      <member refid="struct_hd_vec4f__2__10__10__10___r_e_v_1a14f94e529dff0b8bfba8e16fbe9755d6" prot="public" virt="non-virtual"><scope>HdVec4f_2_10_10_10_REV</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
