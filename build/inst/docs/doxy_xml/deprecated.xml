<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="deprecated" kind="page">
    <compoundname>deprecated</compoundname>
    <title>Deprecated List</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><variablelist>
<varlistentry><term>Member <ref refid="class_ar_asset_info_1a3e17ffb34016b5b91547f4c92f712c44" kindref="member">ArAssetInfo::repoPath</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000058"/> The repository path corresponding to the resolved asset. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_ar_resolver_1a9758cb2f1e4bf228ad8f9c47fa38adf9" kindref="member">ArResolver::_IsRepositoryPath</ref>  (const std::string &amp;path) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000060"/> Return true if the given path is a repository path, false otherwise. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_ar_resolver_1a966c6fe671e427a7d8a01f9d068879a7" kindref="member">ArResolver::IsRepositoryPath</ref>  (const std::string &amp;path) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000059"/> Returns true if the given path is a repository path. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1a81eca63daa858faad8f94949b89e0e69" kindref="member">GfRange1d::ExtendBy</ref>  (double point)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000001"/>Use <ref refid="class_gf_range1d_1af3f3237341f59f7fa1da466697e0ab5d" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1a4dfefdf26c2d2be047d695527ea114f3" kindref="member">GfRange1d::ExtendBy</ref>  (const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;range)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000002"/>Use <ref refid="class_gf_range1d_1af3f3237341f59f7fa1da466697e0ab5d" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1af34214275ee81d6a965aabeed0c8f42c" kindref="member">GfRange1d::Intersection</ref>  (const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;a, const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000008"/>Use <ref refid="class_gf_range1d_1a012d0a91a2bb2acf53741a4196e4516f" kindref="member">GetIntersection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1a83613543f37e447b213e0460bac9a6e8" kindref="member">GfRange1d::Intersection</ref>  (const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000009"/>Use <ref refid="class_gf_range1d_1aca84ec2e9a8ebfbc73d162ff2fcdef2b" kindref="member">IntersectWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1a15b8ffe05dd26f1a48b13642bda9ef3c" kindref="member">GfRange1d::IsInside</ref>  (double point) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000003"/>Use <ref refid="class_gf_range1d_1a11bdb702d6db1e669a98762feea4c24d" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1a3c94655848f64a1d2f53321afe6019d9" kindref="member">GfRange1d::IsInside</ref>  (const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;range) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000004"/>Use <ref refid="class_gf_range1d_1a11bdb702d6db1e669a98762feea4c24d" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1ab26641e036edbcc78997a4635086646d" kindref="member">GfRange1d::Union</ref>  (const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;a, const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000005"/>Use <ref refid="class_gf_range1d_1ac826c330873c6684e3d2881da9c324a6" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1a743fc79fa72a242b985f2c389cdd02ef" kindref="member">GfRange1d::Union</ref>  (const <ref refid="class_gf_range1d" kindref="compound">GfRange1d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000006"/>Use <ref refid="class_gf_range1d_1af3f3237341f59f7fa1da466697e0ab5d" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1d_1ae8f2297088d69ed51bb11490b3d86781" kindref="member">GfRange1d::Union</ref>  (double b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000007"/>Use <ref refid="class_gf_range1d_1af3f3237341f59f7fa1da466697e0ab5d" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1afe1f2253403afcb6b478de234ed9e33e" kindref="member">GfRange1f::ExtendBy</ref>  (float point)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000010"/>Use <ref refid="class_gf_range1f_1a27b500361dc59b764b2622c5ab638c39" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1a297d5dd68cbf3e050c36fe968a79ef4d" kindref="member">GfRange1f::ExtendBy</ref>  (const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;range)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000011"/>Use <ref refid="class_gf_range1f_1a27b500361dc59b764b2622c5ab638c39" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1af93cf5d8bd46ae383c5dc28a53eb1ba7" kindref="member">GfRange1f::Intersection</ref>  (const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;a, const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000017"/>Use <ref refid="class_gf_range1f_1ad5bfa4a84fe24ccabfaad16d275f6307" kindref="member">GetIntersection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1ace61326f6186d4bd83e6b67e7448f0c3" kindref="member">GfRange1f::Intersection</ref>  (const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000018"/>Use <ref refid="class_gf_range1f_1a6a1b55248c3f76e78f9e2a1e146480a1" kindref="member">IntersectWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1a56dabffc627379dde45c6bb91a07047f" kindref="member">GfRange1f::IsInside</ref>  (const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;range) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000013"/>Use <ref refid="class_gf_range1f_1a84e32c516c0afdfde83acb94e4ab3d46" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1a212cd3c042d03cdc391c30fa24c9fc85" kindref="member">GfRange1f::IsInside</ref>  (float point) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000012"/>Use <ref refid="class_gf_range1f_1a84e32c516c0afdfde83acb94e4ab3d46" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1a7ecc7e69661f72fb65c426cda59216b4" kindref="member">GfRange1f::Union</ref>  (const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;a, const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000014"/>Use <ref refid="class_gf_range1f_1af15dfa5e045e146a16efd49359c0c886" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1ae85e271bb9b57584b48ce5e608946db6" kindref="member">GfRange1f::Union</ref>  (const <ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000015"/>Use <ref refid="class_gf_range1f_1a27b500361dc59b764b2622c5ab638c39" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range1f_1ac9d11c9a727b26ace2c1a8b93325f40f" kindref="member">GfRange1f::Union</ref>  (float b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000016"/>Use <ref refid="class_gf_range1f_1a27b500361dc59b764b2622c5ab638c39" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1a1900e0442f909091946f3967d9c7dc14" kindref="member">GfRange2d::ExtendBy</ref>  (const <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> &amp;point)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000019"/>Use <ref refid="class_gf_range2d_1a7a3c8c7702a489d376b443fd325f2f83" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1ae0ec0a3689e6fabaf63b04383e4d8bf7" kindref="member">GfRange2d::ExtendBy</ref>  (const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;range)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000020"/>Use <ref refid="class_gf_range2d_1a7a3c8c7702a489d376b443fd325f2f83" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1aae97aa1922cbdb11f403643842843b11" kindref="member">GfRange2d::Intersection</ref>  (const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;a, const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000026"/>Use <ref refid="class_gf_range2d_1a8041c58d48fb1bd1ef7d4345440dc187" kindref="member">GetIntersection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1aa4ee50b052880a2b5b8aefa2ba7699a5" kindref="member">GfRange2d::Intersection</ref>  (const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000027"/>Use <ref refid="class_gf_range2d_1a289d35d0a2327a7b3c6a637e04472bca" kindref="member">IntersectWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1adbb43dcded467b67695a970e1788f5e0" kindref="member">GfRange2d::IsInside</ref>  (const <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> &amp;point) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000021"/>Use <ref refid="class_gf_range2d_1ad4e7e8f649cf098016c04e1c1fa9db31" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1a4c4534d6b367dc685bc96988e13bc6f4" kindref="member">GfRange2d::IsInside</ref>  (const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;range) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000022"/>Use <ref refid="class_gf_range2d_1ad4e7e8f649cf098016c04e1c1fa9db31" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1aae277573787cd7ee12c69aec7abac187" kindref="member">GfRange2d::Union</ref>  (const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;a, const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000023"/>Use <ref refid="class_gf_range2d_1a571ee90efd1642e253bc87ca35e93305" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1aa69fc2275cca2eb848edb6f059a0fe9c" kindref="member">GfRange2d::Union</ref>  (const <ref refid="class_gf_range2d" kindref="compound">GfRange2d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000024"/>Use <ref refid="class_gf_range2d_1a7a3c8c7702a489d376b443fd325f2f83" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2d_1aac74fce2dde441a0a911825ccdfb50ce" kindref="member">GfRange2d::Union</ref>  (const <ref refid="class_gf_vec2d" kindref="compound">GfVec2d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000025"/>Use <ref refid="class_gf_range2d_1a7a3c8c7702a489d376b443fd325f2f83" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a4845ec88be14718c48b521b97b087967" kindref="member">GfRange2f::ExtendBy</ref>  (const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;range)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000029"/>Use <ref refid="class_gf_range2f_1aa46b6cb284437a0c9b8ec75c700e3f04" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a164aecb91e127448689fe73e4ae34d31" kindref="member">GfRange2f::ExtendBy</ref>  (const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;point)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000028"/>Use <ref refid="class_gf_range2f_1aa46b6cb284437a0c9b8ec75c700e3f04" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a315371ef738875c4417eb35b5c5067d5" kindref="member">GfRange2f::Intersection</ref>  (const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;a, const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000035"/>Use <ref refid="class_gf_range2f_1a673fbf9a388075e12e5c3483affde9c0" kindref="member">GetIntersection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a2497579435b7fcbbc44c374d313814d2" kindref="member">GfRange2f::Intersection</ref>  (const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000036"/>Use <ref refid="class_gf_range2f_1a62bc2cb55bafd61505929bcfdb214937" kindref="member">IntersectWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a998dc1a630360e08e9deabdc605c8240" kindref="member">GfRange2f::IsInside</ref>  (const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;point) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000030"/>Use <ref refid="class_gf_range2f_1aefe71c0e7a62cb8b954d4706ee944a8e" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1aa9404f2f44e23740cc88c5a608301347" kindref="member">GfRange2f::IsInside</ref>  (const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;range) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000031"/>Use <ref refid="class_gf_range2f_1aefe71c0e7a62cb8b954d4706ee944a8e" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a729e14d0f84d85340ae7c12e70c8c4d2" kindref="member">GfRange2f::Union</ref>  (const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;a, const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000032"/>Use <ref refid="class_gf_range2f_1a0727975f88ce18dcf5fa712650311b8b" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a32c32d0370dec20ddcde72a28780674e" kindref="member">GfRange2f::Union</ref>  (const <ref refid="class_gf_range2f" kindref="compound">GfRange2f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000033"/>Use <ref refid="class_gf_range2f_1aa46b6cb284437a0c9b8ec75c700e3f04" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range2f_1a68d66a8183b69975201f49cfdc6495f5" kindref="member">GfRange2f::Union</ref>  (const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000034"/>Use <ref refid="class_gf_range2f_1aa46b6cb284437a0c9b8ec75c700e3f04" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1aae2d557e1e41efde6ff0948b6deb8d9b" kindref="member">GfRange3d::ExtendBy</ref>  (const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;point)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000037"/>Use <ref refid="class_gf_range3d_1a0e9c3d5d56115c20cc2d371b96c33a5b" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1a228e32e48d585722cb99e464e28d0afb" kindref="member">GfRange3d::ExtendBy</ref>  (const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;range)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000038"/>Use <ref refid="class_gf_range3d_1a0e9c3d5d56115c20cc2d371b96c33a5b" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1aebb6596b433bbe4c2351f0babf26b14d" kindref="member">GfRange3d::Intersection</ref>  (const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;a, const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000044"/>Use <ref refid="class_gf_range3d_1a07b4bc43c25bd498f516ef85f2426197" kindref="member">GetIntersection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1afa61f7a0285f08a5367eb17f1faba293" kindref="member">GfRange3d::Intersection</ref>  (const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000045"/>Use <ref refid="class_gf_range3d_1ae3520ed47d6e4fd51a9e7c8ff4283056" kindref="member">IntersectWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1a3616f0722ca04a23012a3bc97328d5ea" kindref="member">GfRange3d::IsInside</ref>  (const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;point) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000039"/>Use <ref refid="class_gf_range3d_1a6316d6bae05d45a21af2ff04a4949c96" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1af1a445f38ddf7697ea1bdcf54878a29a" kindref="member">GfRange3d::IsInside</ref>  (const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;range) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000040"/>Use <ref refid="class_gf_range3d_1a6316d6bae05d45a21af2ff04a4949c96" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1a33ca61536a6eabbb82db4c94356e007e" kindref="member">GfRange3d::Union</ref>  (const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;a, const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000041"/>Use <ref refid="class_gf_range3d_1a287a2815997c889be986842635cb63f0" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1a0d74f58948d461ad42355d3d68cfb030" kindref="member">GfRange3d::Union</ref>  (const <ref refid="class_gf_range3d" kindref="compound">GfRange3d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000042"/>Use <ref refid="class_gf_range3d_1a0e9c3d5d56115c20cc2d371b96c33a5b" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3d_1a06a13c08597667bddeaba515a900733d" kindref="member">GfRange3d::Union</ref>  (const <ref refid="class_gf_vec3d" kindref="compound">GfVec3d</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000043"/>Use <ref refid="class_gf_range3d_1a0e9c3d5d56115c20cc2d371b96c33a5b" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1a8cfff8e77cd451a7a266f9af5ab72ae7" kindref="member">GfRange3f::ExtendBy</ref>  (const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;point)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000046"/>Use <ref refid="class_gf_range3f_1a77fac01f6617b291ccec295f5299cb54" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1a15c759b0086de7a1e8e0d3d37ec2a6d8" kindref="member">GfRange3f::ExtendBy</ref>  (const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;range)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000047"/>Use <ref refid="class_gf_range3f_1a77fac01f6617b291ccec295f5299cb54" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1a690d91a3649bdcb2ff237f9945a11209" kindref="member">GfRange3f::Intersection</ref>  (const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;a, const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000053"/>Use <ref refid="class_gf_range3f_1a3641cbda29b2f532b79132ab75feda94" kindref="member">GetIntersection()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1a3f4ef13782509840aa29732254346718" kindref="member">GfRange3f::Intersection</ref>  (const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000054"/>Use <ref refid="class_gf_range3f_1a7239afb23042c6d138533837bd05ba22" kindref="member">IntersectWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1acdb8af0c63b32bf27663933c27a1fb0b" kindref="member">GfRange3f::IsInside</ref>  (const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;point) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000048"/>Use <ref refid="class_gf_range3f_1a78b4581d49bd776f3561a7fdd6861132" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1addbb6d691d222f5cae7cbc304fc1f8df" kindref="member">GfRange3f::IsInside</ref>  (const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;range) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000049"/>Use <ref refid="class_gf_range3f_1a78b4581d49bd776f3561a7fdd6861132" kindref="member">Contains()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1a41a8d2c22c2919580e45e6721f3dba9d" kindref="member">GfRange3f::Union</ref>  (const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;a, const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000050"/>Use <ref refid="class_gf_range3f_1a26b697fda9efd0f5adf3382863f1cfee" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1a7ed707ecd937091d8814b3c49caa878f" kindref="member">GfRange3f::Union</ref>  (const <ref refid="class_gf_range3f" kindref="compound">GfRange3f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000051"/>Use <ref refid="class_gf_range3f_1a77fac01f6617b291ccec295f5299cb54" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_range3f_1ac1a38c1319c4b55bf2482111e926fefe" kindref="member">GfRange3f::Union</ref>  (const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;b)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000052"/>Use <ref refid="class_gf_range3f_1a77fac01f6617b291ccec295f5299cb54" kindref="member">UnionWith()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_rect2i_1a2bf0ff531f700dc9ba1487713fa7222c" kindref="member">GfRect2i::Intersect</ref>  (const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;that) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000055"/>Use <ref refid="class_gf_rect2i_1a2500660fc4c37c6eb00e2a230c6bd5d8" kindref="member">GetIntersection()</ref> instead  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_gf_rect2i_1a5ca8e18e16e46f5642092fdcdebc2f3f" kindref="member">GfRect2i::Union</ref>  (const <ref refid="class_gf_rect2i" kindref="compound">GfRect2i</ref> &amp;that) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000056"/>Use <ref refid="class_gf_rect2i_1ac02e7bc6800697012d5113d18fa479f3" kindref="member">GetUnion()</ref> instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_hd_render_pass_state_1abfd360ca764a960d84a536a509405ecf" kindref="member">HdRenderPassState::GetViewport</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000144"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_hd_render_pass_state_1a8edb732ea2dab2f735b87c80de4e813e" kindref="member">HdRenderPassState::SetViewport</ref>  (const <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &amp;viewport)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000143"/>Use the more expressive SetFraming instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_hd_scene_delegate_1abf2d598723d5458ec074c92af3a4d318" kindref="member">HdSceneDelegate::GetScenePrimPath</ref>  (<ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;rprimId, int instanceIndex, HdInstancerContext *instancerContext=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000145"/>use GetScenePrimPaths  </para>
</listitem>
<varlistentry><term>Module <ref refid="class_usd_prim_1amgrp6e368238567197de47eeddc4df36f693" kindref="member">Payload Authoring</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000067"/> This API is now deprecated. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_sdf_layer_1aec4e791001e505a12312d2aa525915f3" kindref="member">SdfLayer::GetExternalReferences</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000061"/> Use GetCompositionAssetDependencies instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_sdf_layer_1a64c7b4eb8b1990cf44dbdda3792f4d27" kindref="member">SdfLayer::UpdateExternalReference</ref>  (const std::string &amp;oldAssetPath, const std::string &amp;newAssetPath=std::string())</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000062"/> Use UpdateCompositionAssetDependency instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_tf_diagnostic_mgr_1a504524cc789a51f0e071253f9377c3c5" kindref="member">TfDiagnosticMgr::EraseError</ref>  (ErrorIterator i)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000057"/>Use <ref refid="class_tf_error_mark" kindref="compound">TfErrorMark</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_attribute_1a5af0f9735689c7dbf67a6a72da967666" kindref="member">UsdAttribute::HasAuthoredValueOpinion</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000063"/>This method is deprecated because it returns <computeroutput>true</computeroutput> even when an attribute is blocked. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_attribute_query_1a5af0f9735689c7dbf67a6a72da967666" kindref="member">UsdAttributeQuery::HasAuthoredValueOpinion</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000064"/>This method is deprecated because it returns <computeroutput>true</computeroutput> even when an attribute is blocked. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_collection_a_p_i_1a308134b6add2487b6349296613b077b0" kindref="member">UsdCollectionAPI::GetAllCollections</ref>  (const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;prim)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000065"/>Use GetAll(prim) instead.  </para>
</listitem>
<varlistentry><term>Class <ref refid="class_usd_geom_imageable" kindref="compound">UsdGeomImageable</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000077"/>Imageable also provides API for accessing primvars, which has been moved to the <ref refid="class_usd_geom_primvars_a_p_i" kindref="compound">UsdGeomPrimvarsAPI</ref> schema, because primvars can now be applied on non-Imageable prim types. This API is planned to be removed, <ref refid="class_usd_geom_primvars_a_p_i" kindref="compound">UsdGeomPrimvarsAPI</ref> should be used directly instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_geom_motion_a_p_i_1a79391cff60f848f1e429178d48465046" kindref="member">UsdGeomMotionAPI::ComputeVelocityScale</ref>  (<ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> time=<ref refid="class_usd_time_code_1a8a2192045dc22e90fe08ef2d8d68f3b8" kindref="member">UsdTimeCode::Default()</ref>) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000079"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_geom_motion_a_p_i_1a88b5796ba185af1ed7d2f0d8eccd1cf7" kindref="member">UsdGeomMotionAPI::GetVelocityScaleAttr</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000078"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_geom_point_based_1aaa8d359dfd5a70ff311683b6bb989c74" kindref="member">UsdGeomPointBased::ComputePointsAtTime</ref>  (<ref refid="class_vt_array" kindref="compound">VtArray&lt; GfVec3f &gt;</ref> *points, UsdStageWeakPtr &amp;stage, <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> time, const VtVec3fArray &amp;positions, const VtVec3fArray &amp;velocities, <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> velocitiesSampleTime, const VtVec3fArray &amp;accelerations, float velocityScale=1.0)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000080"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_geom_point_instancer_1a27aee7c27b72251b2dce9218ad12facd" kindref="member">UsdGeomPointInstancer::ComputeInstanceTransformsAtTime</ref>  (VtArray&lt; GfMatrix4d &gt; *xforms, UsdStageWeakPtr &amp;stage, <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> time, const VtIntArray &amp;protoIndices, const VtVec3fArray &amp;positions, const VtVec3fArray &amp;velocities, <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> velocitiesSampleTime, const VtVec3fArray &amp;accelerations, const VtVec3fArray &amp;scales, const VtQuathArray &amp;orientations, const VtVec3fArray &amp;angularVelocities, <ref refid="class_usd_time_code" kindref="compound">UsdTimeCode</ref> angularVelocitiesSampleTime, const SdfPathVector &amp;protoPaths, const std::vector&lt; bool &gt; &amp;mask, float velocityScale=1.0)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000081"/>.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_geom_xform_common_a_p_i_1ac5bacc1e5b8385e73be23e44a59ed434" kindref="member">UsdGeomXformCommonAPI::GetRotationTransform</ref>  (const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> &amp;rotation, const <ref refid="class_usd_geom_xform_common_a_p_i_1af3d74c777e523f2725cdf87c15a4b5bc" kindref="member">UsdGeomXformCommonAPI::RotationOrder</ref> rotationOrder)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000082"/>Please use the result of <ref refid="class_usd_geom_xform_common_a_p_i_1addb6cf0eeb8f75316bb5280fc3a1d078" kindref="member">ConvertRotationOrderToOpType()</ref> along with <ref refid="class_usd_geom_xform_op_1a4eba3e8ff2317982f9bf0bccb7626a2b" kindref="member">UsdGeomXformOp::GetOpTransform()</ref> instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_imaging_g_l_engine_1a4f62005ebe65df07e9f738e01f9b3e27" kindref="member">UsdImagingGLEngine::_GetSceneDelegate</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000150"/>Existing instances of this call will be replaced with new APIs on this class, to support multiplexing between the scene delegate and scene index. This API is scheduled for deletion.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_imaging_g_l_engine_1a24e2acc7c9fa4d3db29d3b09f537359d" kindref="member">UsdImagingGLEngine::SetRenderViewport</ref>  (<ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> const &amp;viewport)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000149"/>Use SetFraming and SetRenderBufferSize instead.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_imaging_prim_adapter_1afe88b2303da555cb22d4bcb94ea72333" kindref="member">UsdImagingPrimAdapter::GetScenePrimPath</ref>  (<ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;cachePath, int instanceIndex, HdInstancerContext *instancerCtx) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000147"/>Call and implement GetScenePrimPaths instead.  </para>
</listitem>
<varlistentry><term>Class <ref refid="class_usd_lux_geometry_light" kindref="compound">UsdLuxGeometryLight</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000083"/> Light emitted outward from a geometric prim (<ref refid="class_usd_geom_gprim" kindref="compound">UsdGeomGprim</ref>), which is typically a mesh. </para>
</listitem>
<varlistentry><term>Class <ref refid="class_usd_lux_list_a_p_i" kindref="compound">UsdLuxListAPI</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000084"/> Use LightListAPI instead </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_1a28123120451e03068721d6e671e6a631" kindref="member">UsdPrim::ClearPayload</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000068"/> Clears the payload at the current EditTarget for this prim. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_1a040dc1a9d6b52e49a12cabf5cc01cfbf" kindref="member">UsdPrim::HasPayload</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000069"/> Return true if a payload is present on this prim. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_1a21e64ff18384c447fd1533bfdf01b4f4" kindref="member">UsdPrim::SetPayload</ref>  (const <ref refid="class_sdf_payload" kindref="compound">SdfPayload</ref> &amp;payload) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000070"/> Author payload metadata for this prim at the current edit target. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_1ab1f49e6d192a891640971d8087527678" kindref="member">UsdPrim::SetPayload</ref>  (const std::string &amp;assetPath, const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;primPath) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000071"/> Shorthand for SetPayload(SdfPayload(assetPath, primPath)). </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_1a7228f10d9bf6e9a7a879432269468002" kindref="member">UsdPrim::SetPayload</ref>  (const SdfLayerHandle &amp;layer, const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;primPath) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000072"/> Shorthand for SetPayload(<ref refid="class_sdf_payload" kindref="compound">SdfPayload</ref>(layer-&gt;GetIdentifier(), primPath)). </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_definition_1a975bb264df5e6fdcc11acff2ff8f56d8" kindref="member">UsdPrimDefinition::GetSchemaAttributeSpec</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;attrName) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000074"/>Use GetAttributeDefinition instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_definition_1a27de14654377225174840ae39b27c769" kindref="member">UsdPrimDefinition::GetSchemaPropertySpec</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;propName) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000073"/>Use GetPropertyDefinition instead. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_prim_definition_1a10a7ad1661018fda44be507816889a96" kindref="member">UsdPrimDefinition::GetSchemaRelationshipSpec</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;relName) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000075"/>Use GetRelationshipDefinition instead. </para>
</listitem>
<varlistentry><term>Class <ref refid="class_usd_ri_material_a_p_i" kindref="compound">UsdRiMaterialAPI</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000085"/>Materials should use <ref refid="class_usd_shade_material" kindref="compound">UsdShadeMaterial</ref> instead. </para>
</listitem>
<varlistentry><term>Class <ref refid="class_usd_ri_spline_a_p_i" kindref="compound">UsdRiSplineAPI</ref>  </term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000086"/>This API schema will be removed in a future release. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" kindref="member">UsdSchemaBase::_GetSchemaType</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000076"/> This has been replace with _GetSchemaKind but is around for now for backwards compatibility while schemas are being updated. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a907625f69747300be8eeffede0555d35" kindref="member">UsdShadeConnectableAPI::ClearSource</ref>  (<ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> const &amp;output)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000098"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a0d7fb769a00828293710c984ee01df4a" kindref="member">UsdShadeConnectableAPI::ClearSource</ref>  (<ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> const &amp;shadingAttr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000096"/>This is the older version that only referenced a single source. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1ae19caa11ccc22967591ef65769562358" kindref="member">UsdShadeConnectableAPI::ClearSource</ref>  (<ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> const &amp;input)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000097"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a3dc1709ecd990201bf1c3daa6354b36c" kindref="member">UsdShadeConnectableAPI::ConnectToSource</ref>  (<ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> const &amp;shadingAttr, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> const &amp;source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;sourceName, UsdShadeAttributeType const sourceType=UsdShadeAttributeType::Output, <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> typeName=<ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName()</ref>)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000087"/>Please use the versions that take a <ref refid="struct_usd_shade_connection_source_info" kindref="compound">UsdShadeConnectionSourceInfo</ref> to describe the upstream source  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a94bb76e0d8f67915e9978c6e2499d994" kindref="member">UsdShadeConnectableAPI::ConnectToSource</ref>  (<ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> const &amp;input, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> const &amp;source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;sourceName, UsdShadeAttributeType const sourceType=UsdShadeAttributeType::Output, <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> typeName=<ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName()</ref>)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000088"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a7489cb4587e704f753e2ecc0be2b637f" kindref="member">UsdShadeConnectableAPI::ConnectToSource</ref>  (<ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> const &amp;output, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> const &amp;source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;sourceName, UsdShadeAttributeType const sourceType=UsdShadeAttributeType::Output, <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> typeName=<ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName()</ref>)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000089"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a121a5a547bebc0a8d398a06dde8ceb53" kindref="member">UsdShadeConnectableAPI::GetConnectedSource</ref>  (<ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> const &amp;input, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> *source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName, UsdShadeAttributeType *sourceType)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000091"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a9fcc117ed40f3f5fb4381f99ae10027a" kindref="member">UsdShadeConnectableAPI::GetConnectedSource</ref>  (<ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> const &amp;output, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> *source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName, UsdShadeAttributeType *sourceType)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000092"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a42f89488e367fc5b5b3a6c5cc1af6746" kindref="member">UsdShadeConnectableAPI::GetConnectedSource</ref>  (<ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> const &amp;shadingAttr, <ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> *source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName, UsdShadeAttributeType *sourceType)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000090"/>Shading attributes can have multiple connections and so using GetConnectedSources is needed in general </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a520694f15344a4456fb473adb8f802ce" kindref="member">UsdShadeConnectableAPI::GetRawConnectedSourcePaths</ref>  (<ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref> const &amp;shadingAttr, SdfPathVector *sourcePaths)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000093"/>Please us GetConnectedSources to retrieve multiple connections </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a5da236b27f8c42dada981ad979e00cdf" kindref="member">UsdShadeConnectableAPI::GetRawConnectedSourcePaths</ref>  (<ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> const &amp;output, SdfPathVector *sourcePaths)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000095"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_connectable_a_p_i_1a92fda037e86b6aaff2a10078e883e94a" kindref="member">UsdShadeConnectableAPI::GetRawConnectedSourcePaths</ref>  (<ref refid="class_usd_shade_input" kindref="compound">UsdShadeInput</ref> const &amp;input, SdfPathVector *sourcePaths)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000094"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1abedb885034858b5c42dbc05cafd398f4" kindref="member">UsdShadeCoordSysAPI::ApplyAndBind</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;name, const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;path) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000103"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1a8c9855ba7c1e0d09c104b2dc254d60a5" kindref="member">UsdShadeCoordSysAPI::Bind</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;name, const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;path) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000102"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to True, adds a binding conforming to the new multi-apply <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> schema. If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to Warn, try to also bind to multi-apply API compliant relationship for the prim, along with backward compatible deprecated behavior.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1a5ceca943dd811f2ee249f17768eb6a26" kindref="member">UsdShadeCoordSysAPI::BlockBinding</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;name) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000105"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to True, blocks binding conforming to the new multi-apply <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> schema. If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to Warn, try to also block binding for multi-apply API compliant relationship for the prim, along with backward compatible deprecated behavior.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1a0161f18b58d57db584996596a855d39d" kindref="member">UsdShadeCoordSysAPI::ClearBinding</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;name, bool removeSpec) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000104"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to True, clears a binding conforming to the new multi-apply <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> schema. If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to Warn, try to also clear binding for multi-apply API compliant relationship for the prim, along with backward compatible deprecated behavior.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1ae21f27f5e4130cae7d32376a851c0743" kindref="member">UsdShadeCoordSysAPI::FindBindingsWithInheritance</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000101"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to True, returns bindings conforming to the new multi-apply <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> schema. If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to Warn, try to get multi-apply API compliant local bindings for the prim, if none fallback to backward compatible deprecated behavior.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1a5e11503b7637213f2ce20c912c6866b7" kindref="member">UsdShadeCoordSysAPI::GetCoordSysRelationshipName</ref>  (const std::string &amp;coordSysName)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000106"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1ade7d8a36e57a9b03a73e84046202e57e" kindref="member">UsdShadeCoordSysAPI::GetLocalBindings</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000100"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to True, returns bindings conforming to the new multi-apply <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> schema. If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to Warn, try to get multi-apply API compliant local bindings for the prim, if none fallback to backward compatible deprecated behavior.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_coord_sys_a_p_i_1a8c83e05b513804bd6cbe68193ec7ce62" kindref="member">UsdShadeCoordSysAPI::HasLocalBindings</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000099"/> This method is deprecated as it operates on the old non-applied <ref refid="class_usd_shade_coord_sys_a_p_i" kindref="compound">UsdShadeCoordSysAPI</ref> If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to True, if prim has appropriate API applied, that is conforming to the new behavior. If USD_SHADE_COORD_SYS_IS_MULTI_APPLY is set to Warn, try to see if multi-apply API compliant local bindings are present for the prim, if not fallback to backward compatible deprecated behavior.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_input_1aedea0915e58a4f7a86a15b5c877b414e" kindref="member">UsdShadeInput::ClearSource</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000110"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_input_1a61e6152df820208931d7d8b0b940c0ff" kindref="member">UsdShadeInput::ConnectToSource</ref>  (<ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> const &amp;source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;sourceName, UsdShadeAttributeType const sourceType=UsdShadeAttributeType::Output, <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> typeName=<ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName()</ref>) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000107"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_input_1ad87d91b4d03005ec1d7e5955fa4da301" kindref="member">UsdShadeInput::GetConnectedSource</ref>  (<ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> *source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName, UsdShadeAttributeType *sourceType) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000108"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_input_1afacb1f3963662991c24bc3edc102f567" kindref="member">UsdShadeInput::GetRawConnectedSourcePaths</ref>  (SdfPathVector *sourcePaths) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000109"/> Returns the &quot;raw&quot; (authored) connected source paths for this Input. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_input_1a8b1264541587164077770d8fbe411f8d" kindref="member">UsdShadeInput::GetValueProducingAttribute</ref>  (UsdShadeAttributeType *attrType) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000111"/>in favor of calling GetValueProducingAttributes  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_material_1a89ee6b17ed3990efc4aa1cc85cdcca68" kindref="member">UsdShadeMaterial::ComputeDisplacementSource</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;renderContext, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName=nullptr, UsdShadeAttributeType *sourceType=nullptr) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000113"/>Use the form that takes a TfTokenVector or renderContexts  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_material_1a87baddf29b8fa4d8a559a909d3fb5205" kindref="member">UsdShadeMaterial::ComputeSurfaceSource</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;renderContext, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName=nullptr, UsdShadeAttributeType *sourceType=nullptr) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000112"/>Use the form that takes a TfTokenVector or renderContexts.  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_material_1a3d76d2c10f83a1dcd958454a67a33659" kindref="member">UsdShadeMaterial::ComputeVolumeSource</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;renderContext, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName=nullptr, UsdShadeAttributeType *sourceType=nullptr) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000114"/>Use the form that takes a TfTokenVector or renderContexts  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_node_graph_1a76a3c863585af75adece34394f7ae79b" kindref="member">UsdShadeNodeGraph::ComputeOutputSource</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;outputName, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName, UsdShadeAttributeType *sourceType) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000115"/>in favor of GetValueProducingAttributes on <ref refid="class_usd_shade_output" kindref="compound">UsdShadeOutput</ref> Resolves the connection source of the requested output, identified by <computeroutput>outputName</computeroutput> to a shader output. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_output_1aedea0915e58a4f7a86a15b5c877b414e" kindref="member">UsdShadeOutput::ClearSource</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000119"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_output_1a61e6152df820208931d7d8b0b940c0ff" kindref="member">UsdShadeOutput::ConnectToSource</ref>  (<ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> const &amp;source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;sourceName, UsdShadeAttributeType const sourceType=UsdShadeAttributeType::Output, <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref> typeName=<ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName()</ref>) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000116"/>  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_output_1ad87d91b4d03005ec1d7e5955fa4da301" kindref="member">UsdShadeOutput::GetConnectedSource</ref>  (<ref refid="class_usd_shade_connectable_a_p_i" kindref="compound">UsdShadeConnectableAPI</ref> *source, <ref refid="class_tf_token" kindref="compound">TfToken</ref> *sourceName, UsdShadeAttributeType *sourceType) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000117"/>Please use GetConnectedSources instead  </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_shade_output_1afacb1f3963662991c24bc3edc102f567" kindref="member">UsdShadeOutput::GetRawConnectedSourcePaths</ref>  (SdfPathVector *sourcePaths) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000118"/> Returns the &quot;raw&quot; (authored) connected source paths for this Output. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_skel_cache_1a1834c65bd4252488718234266726531f" kindref="member">UsdSkelCache::GetAnimQuery</ref>  (const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;prim) const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000120"/> </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1ga0307b13e8f77b460acb0bdb05cc37009" kindref="member">UsdSkelComputeJointLocalTransforms</ref>  (const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;topology, const VtMatrix4dArray &amp;xforms, VtMatrix4dArray *jointLocalXforms, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootInverseXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000123"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1ga7abf3d342cbc9b6660d9fe5d7cc342cf" kindref="member">UsdSkelComputeJointLocalTransforms</ref>  (const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;topology, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xforms, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *inverseXforms, <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *jointLocalXforms, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootInverseXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000124"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1gacab58a8d5e83ba3621b48dbbfa92378b" kindref="member">UsdSkelComputeJointLocalTransforms</ref>  (const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;topology, const VtMatrix4dArray &amp;xforms, const VtMatrix4dArray &amp;inverseXforms, VtMatrix4dArray *jointLocalXforms, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootInverseXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000122"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1ga7a266b9bf2d07be497e6da169791ea2b" kindref="member">UsdSkelComputeJointsExtent</ref>  (const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xforms, size_t numXforms, VtVec3fArray *extent, float pad=0.0f, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000128"/>Use form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1gacce0c0ae59da77585712482062ca03dc" kindref="member">UsdSkelComputeJointsExtent</ref>  (const VtMatrix4dArray &amp;joints, VtVec3fArray *extent, float pad=0.0f, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000127"/>Use form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1ga961f3a190bb4bf1f48a4a64ed48d62ce" kindref="member">UsdSkelConcatJointTransforms</ref>  (const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;topology, const VtMatrix4dArray &amp;jointLocalXforms, VtMatrix4dArray *xforms, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000125"/>Use the function form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_transform_utils_1ga73b5dc5eba2805085c5f9dea2394932f" kindref="member">UsdSkelConcatJointTransforms</ref>  (const <ref refid="class_usd_skel_topology" kindref="compound">UsdSkelTopology</ref> &amp;topology, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *jointLocalXforms, <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xforms, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *rootXform=nullptr)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000126"/>Use the form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref> argument. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___transform_composition_utils_1gaa739383f893eef1c7cb0868c078328d2" kindref="member">UsdSkelDecomposeTransforms</ref>  (const VtMatrix4dArray &amp;xforms, VtVec3fArray *translations, VtQuatfArray *rotations, VtVec3hArray *scales)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000129"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___transform_composition_utils_1gae08cda17ff7925996d26aace2d51e9d0" kindref="member">UsdSkelDecomposeTransforms</ref>  (const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xforms, <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *translations, <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> *rotations, <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *scales, size_t count)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000130"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___transform_composition_utils_1gad80f891c3cfe2de677fc04020d5768b1" kindref="member">UsdSkelMakeTransforms</ref>  (const <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *translations, const <ref refid="class_gf_quatf" kindref="compound">GfQuatf</ref> *rotations, const <ref refid="class_gf_vec3h" kindref="compound">GfVec3h</ref> *scales, <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xforms, size_t count)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000132"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___transform_composition_utils_1ga0d5fd23adbea5140446b79913c595e6b" kindref="member">UsdSkelMakeTransforms</ref>  (const VtVec3fArray &amp;translations, const VtQuatfArray &amp;rotations, const VtVec3hArray &amp;scales, VtMatrix4dArray *xforms)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000131"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_influence_utils_1ga3021d3989a6265f6bbf09d72114edfed" kindref="member">UsdSkelNormalizeWeights</ref>  (VtFloatArray *weights, int numInfluencesPerComponent)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000133"/>Use form that takes a <ref refid="class_tf_span" kindref="compound">TfSpan</ref>. </para>
</listitem>
<varlistentry><term>Member <ref refid="class_usd_skel_skinning_query_1a01425a20b6107c59200262a5f3e7de18" kindref="member">UsdSkelSkinningQuery::GetMapper</ref>  () const</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000121"/>Use GetJointMapper.  </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___skinning_utils_1gaff888911f410d6fd142c16bd66cd5c92" kindref="member">UsdSkelSkinPoints</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;skinningMethod, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;geomBindTransform, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, int numInfluencesPerPoint, <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *points, size_t numPoints, bool inSerial=false)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000136"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___skinning_utils_1ga6197521498405c78ab8b73fd3770f67d" kindref="member">UsdSkelSkinPoints</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;skinningMethod, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;geomBindTransform, const VtMatrix4dArray &amp;jointXforms, const VtIntArray &amp;jointIndices, const VtFloatArray &amp;jointWeights, int numInfluencesPerPoint, VtVec3fArray *points)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000135"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___skinning_utils_1gaa4a379f5b3e530c1715077ad37b380d3" kindref="member">UsdSkelSkinPointsLBS</ref>  (const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;geomBindTransform, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, int numInfluencesPerPoint, <ref refid="class_gf_vec3f" kindref="compound">GfVec3f</ref> *points, size_t numPoints, bool inSerial=false)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000138"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___skinning_utils_1gaf823122c00cb14ef1b3a4785c4920d93" kindref="member">UsdSkelSkinPointsLBS</ref>  (const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;geomBindTransform, const VtMatrix4dArray &amp;jointXforms, const VtIntArray &amp;jointIndices, const VtFloatArray &amp;jointWeights, int numInfluencesPerPoint, VtVec3fArray *points)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000137"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___skinning_utils_1gadeaedc9a99d4393e5495c7958c85aa30" kindref="member">UsdSkelSkinTransform</ref>  (const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;skinningMethod, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;geomBindTransform, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xform)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000139"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___skinning_utils_1ga72bef32e15231e5437335d487ccd12ac" kindref="member">UsdSkelSkinTransformLBS</ref>  (const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> &amp;geomBindTransform, const <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *jointXforms, size_t numJoints, const int *jointIndices, const float *jointWeights, size_t numInfluences, <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> *xform)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000140"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments. </para>
</listitem>
<varlistentry><term>Member <ref refid="group___usd_skel___joint_influence_utils_1ga58fea609ea13eb8b9f8c6fe7ab709307" kindref="member">UsdSkelSortInfluences</ref>  (VtIntArray *indices, VtFloatArray *weights, int numInfluencesPerComponent)</term></varlistentry>
<listitem><para><anchor id="deprecated_1_deprecated000134"/>Use form that takes <ref refid="class_tf_span" kindref="compound">TfSpan</ref> arguments.</para>
</listitem>
</variablelist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
