<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_ext_comp_gpu_primvar_buffer_source" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStExtCompGpuPrimvarBufferSource</compoundname>
    <basecompoundref refid="class_hd_null_buffer_source" prot="public" virt="non-virtual">HdNullBufferSource</basecompoundref>
    <includes refid="ext_comp_gpu_primvar_buffer_source_8h" local="no">extCompGpuPrimvarBufferSource.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a073299b165fbc77310a8ada4902f85f8" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _name</definition>
        <argsstring></argsstring>
        <name>_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="73" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a5053b1d72cb9615c0fef61db93739fa4" prot="private" static="no" mutable="no">
        <type><ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref></type>
        <definition>HdTupleType _tupleType</definition>
        <argsstring></argsstring>
        <name>_tupleType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="74" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1af0109f15f53da97ea5c36ff3b4d023ac" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _numElements</definition>
        <argsstring></argsstring>
        <name>_numElements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="75" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4572f2d27ba5e5705ff547814b916551" prot="private" static="no" mutable="no">
        <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref></type>
        <definition>SdfPath _compId</definition>
        <argsstring></argsstring>
        <name>_compId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="76" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a284e4fdc1a7438191ee7cf4be8ddbc5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompGpuPrimvarBufferSource</definition>
        <argsstring>(TfToken const &amp;name, HdTupleType const &amp;valueType, int numElements, SdfPath const &amp;compId)</argsstring>
        <name>HdStExtCompGpuPrimvarBufferSource</name>
        <param>
          <type><ref refid="class_tf_token" kindref="compound">TfToken</ref> const &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref> const &amp;</type>
          <declname>valueType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numElements</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>compId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a31222de742dedd910ef168b5110ebe0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API</type>
        <definition>virtual HDST_API ~HdStExtCompGpuPrimvarBufferSource</definition>
        <argsstring>()=default</argsstring>
        <name>~HdStExtCompGpuPrimvarBufferSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a61abd78afd3c71f52d23f6285735feaa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API size_t</type>
        <definition>virtual HDST_API size_t ComputeHash</definition>
        <argsstring>() const override</argsstring>
        <name>ComputeHash</name>
        <reimplements refid="class_hd_null_buffer_source_1ae13441343bea925fd46537fd58a5aef8">ComputeHash</reimplements>
        <briefdescription>
<para>Computes and returns a hash value for the underlying data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1ad356b46a8c6b2fd26ba57bdb70f1ef9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>virtual HDST_API bool Resolve</definition>
        <argsstring>() override</argsstring>
        <name>Resolve</name>
        <reimplements refid="class_hd_buffer_source_1a31cd8967840ac419b37e8059635896e7">Resolve</reimplements>
        <briefdescription>
<para>Prepare the access of <ref refid="class_hd_null_buffer_source_1ae9d406408fc27fe3ced169e41b5c1e34" kindref="member">GetData()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This process may include some computations (e.g. cpu smooth normals). Note: Resolve may be called in parallel from multiple threads across buffer sources, so be careful if it uses static/shared states among objects. Returns true if it resolved. If the buffer source has to wait some results of other buffer sources, or the buffer source is being resolved by other threads, it returns false. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4863768db52d4dd224e7414485b4e05e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API <ref refid="class_tf_token" kindref="compound">TfToken</ref> const  &amp;</type>
        <definition>virtual HDST_API TfToken const&amp; GetName</definition>
        <argsstring>() const override</argsstring>
        <name>GetName</name>
        <reimplements refid="class_hd_null_buffer_source_1a0c0702fbc703090d28d34aa9fc210f63">GetName</reimplements>
        <briefdescription>
<para>Return the name of this buffer source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a03003d1fbd49a355dbeb95abe39fd889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API size_t</type>
        <definition>virtual HDST_API size_t GetNumElements</definition>
        <argsstring>() const override</argsstring>
        <name>GetNumElements</name>
        <reimplements refid="class_hd_null_buffer_source_1aca2f47025f9b58504ed51ec9c2b913d1">GetNumElements</reimplements>
        <briefdescription>
<para>Returns the number of elements (e.g. </para>
        </briefdescription>
        <detaileddescription>
<para>VtVec3dArray().GetLength()) from the source array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a34ea05109a9ba9e8aafc804dcbd7e16e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API <ref refid="struct_hd_tuple_type" kindref="compound">HdTupleType</ref></type>
        <definition>virtual HDST_API HdTupleType GetTupleType</definition>
        <argsstring>() const override</argsstring>
        <name>GetTupleType</name>
        <reimplements refid="class_hd_null_buffer_source_1a5ac174b7f9823eebc156c8820389598d">GetTupleType</reimplements>
        <briefdescription>
<para>Returns the data type and count (array size) for this buffer source. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a6956e540dc762faecff2337312d0cae0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>virtual HDST_API void GetBufferSpecs</definition>
        <argsstring>(HdBufferSpecVector *specs) const override</argsstring>
        <name>GetBufferSpecs</name>
        <reimplements refid="class_hd_null_buffer_source_1a49ccfc0b7d908c1a3e6bc28d23dfe7f0">GetBufferSpecs</reimplements>
        <param>
          <type>HdBufferSpecVector *</type>
          <declname>specs</declname>
        </param>
        <briefdescription>
<para>Add the buffer spec for this buffer source into given bufferspec vector. </para>
        </briefdescription>
        <detaileddescription>
<para>note: buffer specs has to be determined before the source resolution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a82e51e412f9647e086e34015d5409499" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool _CheckValid</definition>
        <argsstring>() const override</argsstring>
        <name>_CheckValid</name>
        <reimplements refid="class_hd_buffer_source_1a0f0022a4bdf82e55a38f7aeae7156591">_CheckValid</reimplements>
        <briefdescription>
<para>Checks the validity of the source buffer. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is called by <ref refid="class_hd_buffer_source_1a55323f058382f1585d1e9cb3af59d87f" kindref="member">IsValid()</ref> to do the real checking.</para>
<para>Should only be implemented in classes at leafs of the class hierarchy (Please place common validation code in a new non-virtual method)</para>
<para>This code should return false:<itemizedlist>
<listitem><para>If the buffer would produce an invalid BufferSpec</para>
</listitem><listitem><para>If a required dependent buffer is invalid For example, return false when: The data type is invalid, causing an invalid BufferSpec.</para>
</listitem></itemizedlist>
</para>
<para>The resolve step requires a &apos;source&apos; buffer and that buffer is invalid.</para>
<para>If returning false, the buffer will not be registered with the resource registry. AddBufferSpec and Resolve will not be called </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="70" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1af1b06161da037f35dfa935ce63e5de3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompGpuPrimvarBufferSource</definition>
        <argsstring>()=delete</argsstring>
        <name>HdStExtCompGpuPrimvarBufferSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4d6f50e0872f678dfcca25944457f04b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdStExtCompGpuPrimvarBufferSource</definition>
        <argsstring>(const HdStExtCompGpuPrimvarBufferSource &amp;)=delete</argsstring>
        <name>HdStExtCompGpuPrimvarBufferSource</name>
        <param>
          <type>const <ref refid="class_hd_st_ext_comp_gpu_primvar_buffer_source" kindref="compound">HdStExtCompGpuPrimvarBufferSource</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a933ed451e91ea81d1118e847859dc437" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_st_ext_comp_gpu_primvar_buffer_source" kindref="compound">HdStExtCompGpuPrimvarBufferSource</ref> &amp;</type>
        <definition>HdStExtCompGpuPrimvarBufferSource&amp; operator=</definition>
        <argsstring>(const HdStExtCompGpuPrimvarBufferSource &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_st_ext_comp_gpu_primvar_buffer_source" kindref="compound">HdStExtCompGpuPrimvarBufferSource</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="81" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A buffer source mapped to an output of an ExtComp CPU computation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3137">
        <label>HdNullBufferSource</label>
        <link refid="class_hd_null_buffer_source"/>
        <childnode refid="3138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3138">
        <label>HdBufferSource</label>
        <link refid="class_hd_buffer_source"/>
      </node>
      <node id="3136">
        <label>HdStExtCompGpuPrimvarBufferSource</label>
        <link refid="class_hd_st_ext_comp_gpu_primvar_buffer_source"/>
        <childnode refid="3137" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3140">
        <label>HdNullBufferSource</label>
        <link refid="class_hd_null_buffer_source"/>
        <childnode refid="3141" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3141">
        <label>HdBufferSource</label>
        <link refid="class_hd_buffer_source"/>
      </node>
      <node id="3139">
        <label>HdStExtCompGpuPrimvarBufferSource</label>
        <link refid="class_hd_st_ext_comp_gpu_primvar_buffer_source"/>
        <childnode refid="3140" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" line="41" column="1" bodyfile="pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h" bodystart="41" bodyend="83"/>
    <listofallmembers>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a82e51e412f9647e086e34015d5409499" prot="protected" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_CheckValid</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4572f2d27ba5e5705ff547814b916551" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_compId</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a073299b165fbc77310a8ada4902f85f8" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_name</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1af0109f15f53da97ea5c36ff3b4d023ac" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_numElements</name></member>
      <member refid="class_hd_buffer_source_1aa9d9f62a29664a6353762c968c477c9a" prot="protected" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_SetResolved</name></member>
      <member refid="class_hd_buffer_source_1aa93dec2f4f899e2edf89b0b20b9b0408" prot="protected" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_SetResolveError</name></member>
      <member refid="class_hd_buffer_source_1a95fa005a2674cf5ab757a2d6baa1beaa" prot="protected" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_TryLock</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a5053b1d72cb9615c0fef61db93739fa4" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>_tupleType</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a61abd78afd3c71f52d23f6285735feaa" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>ComputeHash</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a6956e540dc762faecff2337312d0cae0" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetBufferSpecs</name></member>
      <member refid="class_hd_buffer_source_1aa319054081d8cc83ea80e3b95a18e37b" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetChainedBuffers</name></member>
      <member refid="class_hd_null_buffer_source_1ae9d406408fc27fe3ced169e41b5c1e34" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetData</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4863768db52d4dd224e7414485b4e05e" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetName</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a03003d1fbd49a355dbeb95abe39fd889" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetNumElements</name></member>
      <member refid="class_hd_buffer_source_1a59b78074e9fcc70237524881864f8ad7" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetPreChainedBuffer</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a34ea05109a9ba9e8aafc804dcbd7e16e" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>GetTupleType</name></member>
      <member refid="class_hd_buffer_source_1a6882660a1cb15d85f6dfece0d1e4e25d" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HasChainedBuffer</name></member>
      <member refid="class_hd_buffer_source_1a600437657ebeb5a72da71300032e5532" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HasPreChainedBuffer</name></member>
      <member refid="class_hd_buffer_source_1ae154f9dca5a409c46b8bdaca56b7d58f" prot="public" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HasResolveError</name></member>
      <member refid="class_hd_buffer_source_1aee360bcdc56a9390c0da4dcbd86d6936" prot="public" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HdBufferSource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a284e4fdc1a7438191ee7cf4be8ddbc5e" prot="public" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HdStExtCompGpuPrimvarBufferSource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1af1b06161da037f35dfa935ce63e5de3c" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HdStExtCompGpuPrimvarBufferSource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a4d6f50e0872f678dfcca25944457f04b" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>HdStExtCompGpuPrimvarBufferSource</name></member>
      <member refid="class_hd_buffer_source_1a2d798b9f36dd4187831ce00aaf720dd0" prot="public" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>IsResolved</name></member>
      <member refid="class_hd_buffer_source_1a55323f058382f1585d1e9cb3af59d87f" prot="public" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>IsValid</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a933ed451e91ea81d1118e847859dc437" prot="private" virt="non-virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>operator=</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1ad356b46a8c6b2fd26ba57bdb70f1ef9e" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>Resolve</name></member>
      <member refid="class_hd_buffer_source_1a48f26b3afaa40d27e98c6dd91e410df0" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>~HdBufferSource</name></member>
      <member refid="class_hd_st_ext_comp_gpu_primvar_buffer_source_1a31222de742dedd910ef168b5110ebe0d" prot="public" virt="virtual"><scope>HdStExtCompGpuPrimvarBufferSource</scope><name>~HdStExtCompGpuPrimvarBufferSource</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
