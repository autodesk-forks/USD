<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_stage_cache_1_1_id" kind="class" language="C++" prot="public">
    <compoundname>UsdStageCache::Id</compoundname>
    <includes refid="stage_cache_8h" local="no">stageCache.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="struct_usd_stage_cache_1_1_id_1aff833b20b1c6ea80d8d4c75a6aad25d4" prot="private" static="no" mutable="no">
        <type>long int</type>
        <definition>long int _value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="166" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1af4bb81f42b8f9b83c145a5626cba28b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Id</definition>
        <argsstring>()</argsstring>
        <name>Id</name>
        <briefdescription>
<para>Default construct an invalid id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="100" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1acd069a79d5750ac6da859f6d041ecc36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>long int</type>
        <definition>long int ToLongInt</definition>
        <argsstring>() const</argsstring>
        <name>ToLongInt</name>
        <briefdescription>
<para>Convert this <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> to an integral representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="121" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1a19c380b03cea21d7ac7325136a131ff0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ToString</definition>
        <argsstring>() const</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Convert this <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> to a string representation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="124" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Return true if this <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="129" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Return true if this <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> is valid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="132" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="132" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1ad4b01b7d4c1899c9c0411cf945afe139" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref></type>
        <definition>static Id FromLongInt</definition>
        <argsstring>(long int val)</argsstring>
        <name>FromLongInt</name>
        <param>
          <type>long int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Create an <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> from an integral value. </para>
        </briefdescription>
        <detaileddescription>
<para>The supplied <computeroutput>val</computeroutput> must have been obtained by calling <ref refid="struct_usd_stage_cache_1_1_id_1acd069a79d5750ac6da859f6d041ecc36" kindref="member">ToLongInt()</ref> previously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="104" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1ab6e586168c98da04a3ea4bd05442aac4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref></type>
        <definition>static Id FromString</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>FromString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Create an <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> from a string value. </para>
        </briefdescription>
        <detaileddescription>
<para>The supplied <computeroutput>val</computeroutput> must have been obtained by calling <ref refid="struct_usd_stage_cache_1_1_id_1a19c380b03cea21d7ac7325136a131ff0" kindref="member">ToString()</ref> previously. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="108" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="108" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1af5ecef67e877f79db03c006b9112b6c7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Id &amp;lhs, const Id &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="136" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1a78fec76cdaede315a215561e6507cfb6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Id &amp;lhs, const Id &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="140" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1aa79de5c974fe197fa9668653b8a45a00" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Id &amp;lhs, const Id &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Less-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="144" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1a31ce026eee120214b3137546326e0f5c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&lt;=</definition>
        <argsstring>(const Id &amp;lhs, const Id &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Less-than or equal comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="148" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1a91649425b3128cbe10a1ebbb38936c0a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;</definition>
        <argsstring>(const Id &amp;lhs, const Id &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Greater-than comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="152" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1acd2659b9788f2bb0a7b0e05db1eb3589" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend bool</type>
        <definition>bool operator&gt;=</definition>
        <argsstring>(const Id &amp;lhs, const Id &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Greater-than or equal comparison. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="156" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="friend" id="struct_usd_stage_cache_1_1_id_1a68e3c62a2b3d5f1be19fba6aa06b5c1b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(Id id)</argsstring>
        <name>hash_value</name>
        <param>
          <type><ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Hash. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="160" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="160" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="struct_usd_stage_cache_1_1_id_1ab999938f7dd2ccd821f26a23f0834ece" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Id</definition>
        <argsstring>(long int val)</argsstring>
        <name>Id</name>
        <param>
          <type>long int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/stageCache.h" line="164" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="164" bodyend="164"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A lightweight identifier that may be used to identify a particular cached stage within a <ref refid="class_usd_stage_cache" kindref="compound">UsdStageCache</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>An identifier may be converted to and from long int and string, to facilitate use within restricted contexts.</para>
<para><ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> objects are only valid with the stage from which they were obtained. It never makes sense to use an <ref refid="struct_usd_stage_cache_1_1_id" kindref="compound">Id</ref> with a stage other than the one it was obtained from. </para>
    </detaileddescription>
    <location file="pxr/usd/usd/stageCache.h" line="98" column="1" bodyfile="pxr/usd/usd/stageCache.h" bodystart="98" bodyend="167"/>
    <listofallmembers>
      <member refid="struct_usd_stage_cache_1_1_id_1aff833b20b1c6ea80d8d4c75a6aad25d4" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>_value</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1ad4b01b7d4c1899c9c0411cf945afe139" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>FromLongInt</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1ab6e586168c98da04a3ea4bd05442aac4" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>FromString</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1a68e3c62a2b3d5f1be19fba6aa06b5c1b" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>hash_value</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1af4bb81f42b8f9b83c145a5626cba28b4" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>Id</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1ab999938f7dd2ccd821f26a23f0834ece" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>Id</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>IsValid</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator bool</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1a78fec76cdaede315a215561e6507cfb6" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator!=</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1aa79de5c974fe197fa9668653b8a45a00" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator&lt;</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1a31ce026eee120214b3137546326e0f5c" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator&lt;=</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1af5ecef67e877f79db03c006b9112b6c7" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator==</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1a91649425b3128cbe10a1ebbb38936c0a" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator&gt;</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1acd2659b9788f2bb0a7b0e05db1eb3589" prot="private" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>operator&gt;=</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1acd069a79d5750ac6da859f6d041ecc36" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>ToLongInt</name></member>
      <member refid="struct_usd_stage_cache_1_1_id_1a19c380b03cea21d7ac7325136a131ff0" prot="public" virt="non-virtual"><scope>UsdStageCache::Id</scope><name>ToString</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
