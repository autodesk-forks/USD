<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_camera" kind="class" language="C++" prot="public">
    <compoundname>HdCamera</compoundname>
    <basecompoundref refid="class_hd_sprim" prot="public" virt="non-virtual">HdSprim</basecompoundref>
    <derivedcompoundref refid="class_hd_prman_camera" prot="public" virt="non-virtual">HdPrmanCamera</derivedcompoundref>
    <includes refid="imaging_2hd_2camera_8h" local="no">camera.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" static="no" strong="no">
        <type>HdDirtyBits</type>
        <name>DirtyBits</name>
        <enumvalue id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public">
          <name>Clean</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fa3eaf7284f82a6abc25f2a02244014eb6" prot="public">
          <name>DirtyTransform</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fae10a6f0d75a0571b8a6a5b77561740c6" prot="public">
          <name>DirtyParams</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fa8ecccec000719ba341d7d2656c6a37bb" prot="public">
          <name>DirtyClipPlanes</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fae9e6ea4056ca430edacc74e2b6430cab" prot="public">
          <name>DirtyWindowPolicy</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public">
          <name>AllDirty</name>
          <initializer>= (DirtyTransform
                                |DirtyParams
                                |DirtyClipPlanes
                                |DirtyWindowPolicy)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="115" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="114" bodyend="125"/>
      </memberdef>
      <memberdef kind="enum" id="class_hd_camera_1a9f7870d8d60a515bd641dadf4629029a" prot="public" static="no" strong="no">
        <type></type>
        <name>Projection</name>
        <enumvalue id="class_hd_camera_1a9f7870d8d60a515bd641dadf4629029aad28963ad8af924a09c6ef14c97ca3a7a" prot="public">
          <name>Perspective</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_camera_1a9f7870d8d60a515bd641dadf4629029aac130c48aea11ca5aff222ee3e75ab9a9" prot="public">
          <name>Orthographic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="127" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_camera_1a5acf1e9a6d045d8409a5eb3f716cd057" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &gt;</type>
        <definition>using ClipPlanesVector =  std::vector&lt;GfVec4d&gt;</definition>
        <argsstring></argsstring>
        <name>ClipPlanesVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="106" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_hd_camera_1a417ce102451b1fc29fbdb719abf762c0" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>GfMatrix4d _transform</definition>
        <argsstring></argsstring>
        <name>_transform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="309" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1aee52c2019805d8fb8d0e49b8cde4a94d" prot="protected" static="no" mutable="no">
        <type>Projection</type>
        <definition>Projection _projection</definition>
        <argsstring></argsstring>
        <name>_projection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="310" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a919943bc6bad58e5fde2a3d6617fdf6e" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _horizontalAperture</definition>
        <argsstring></argsstring>
        <name>_horizontalAperture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="311" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1adc62339e581b2096625f16e8bc5bd95f" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _verticalAperture</definition>
        <argsstring></argsstring>
        <name>_verticalAperture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="312" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a4e209b5c9a78e20dcb06ac123e8b3c22" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _horizontalApertureOffset</definition>
        <argsstring></argsstring>
        <name>_horizontalApertureOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="313" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a882605ecbabf5383ccd3a74bae8c936f" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _verticalApertureOffset</definition>
        <argsstring></argsstring>
        <name>_verticalApertureOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="314" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a606c70c61b1199eecd29c94a9f4f8f6c" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _focalLength</definition>
        <argsstring></argsstring>
        <name>_focalLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="315" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1add1b6d6ad2eec1ce5d8706fe1a30b083" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref></type>
        <definition>GfRange1f _clippingRange</definition>
        <argsstring></argsstring>
        <name>_clippingRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="316" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1ab335d2f46d3223a24d066c8a1d66682d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &gt;</type>
        <definition>std::vector&lt;GfVec4d&gt; _clipPlanes</definition>
        <argsstring></argsstring>
        <name>_clipPlanes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="317" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a5f4602a476e3cf708b3d77b2601342cf" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _fStop</definition>
        <argsstring></argsstring>
        <name>_fStop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="320" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a54c4bc783f4e8c15f2bb94e9a718ea06" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _focusDistance</definition>
        <argsstring></argsstring>
        <name>_focusDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="321" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a8aedf4e888408fe9d6876ce9da2336fb" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _focusOn</definition>
        <argsstring></argsstring>
        <name>_focusOn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="322" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a4258ab54ba4bc1eda431529a0e0987fb" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _dofAspect</definition>
        <argsstring></argsstring>
        <name>_dofAspect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="323" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1ab0e1dca195bf1ab824d2926e976ee922" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int _splitDiopterCount</definition>
        <argsstring></argsstring>
        <name>_splitDiopterCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="324" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a06a57e4f703128be00b3560355041145" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterAngle</definition>
        <argsstring></argsstring>
        <name>_splitDiopterAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="325" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1acc3f175ef175c34ffcc0157ce2b7c5d0" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterOffset1</definition>
        <argsstring></argsstring>
        <name>_splitDiopterOffset1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="326" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1ab559aa04e04d78f7f1ce1e9eec63ec51" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterWidth1</definition>
        <argsstring></argsstring>
        <name>_splitDiopterWidth1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="327" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a5186b623b5b83d4d10974b0d31103be5" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterFocusDistance1</definition>
        <argsstring></argsstring>
        <name>_splitDiopterFocusDistance1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="328" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a72ae62567e5b4ec759085eabaafa17ff" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterOffset2</definition>
        <argsstring></argsstring>
        <name>_splitDiopterOffset2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="329" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a6314d9bb35a4f79374b61d160ba31ed9" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterWidth2</definition>
        <argsstring></argsstring>
        <name>_splitDiopterWidth2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="330" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a7cfb703701874098f49dfc2c72dbda70" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _splitDiopterFocusDistance2</definition>
        <argsstring></argsstring>
        <name>_splitDiopterFocusDistance2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="331" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1aae4351a5a59082889e6a32ccfcc2ac0d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double _shutterOpen</definition>
        <argsstring></argsstring>
        <name>_shutterOpen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="334" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a27e336565dea513dd81cf27c8a4e0a7c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double _shutterClose</definition>
        <argsstring></argsstring>
        <name>_shutterClose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="335" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a859f06df34264819a84569da52c673ce" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _exposure</definition>
        <argsstring></argsstring>
        <name>_exposure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="336" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a967a96141ad2268a67ad3c1ae854d9ac" prot="protected" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _lensDistortionType</definition>
        <argsstring></argsstring>
        <name>_lensDistortionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="339" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1ab1c71b7ce90e2d7e66bef8cd2b32bec3" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _lensDistortionK1</definition>
        <argsstring></argsstring>
        <name>_lensDistortionK1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="340" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a5456ca3826b35a542cf00f4fe75bd046" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _lensDistortionK2</definition>
        <argsstring></argsstring>
        <name>_lensDistortionK2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="341" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a91c4408cada9e4c629adbebc0a966f9c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f _lensDistortionCenter</definition>
        <argsstring></argsstring>
        <name>_lensDistortionCenter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="342" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a8179d3d60843321a42507a33d7225ba6" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _lensDistortionAnaSq</definition>
        <argsstring></argsstring>
        <name>_lensDistortionAnaSq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="343" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a9d2bcdafd09275827bd4259f418d04cd" prot="protected" static="no" mutable="no">
        <type><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref></type>
        <definition>GfVec2f _lensDistortionAsym</definition>
        <argsstring></argsstring>
        <name>_lensDistortionAsym</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="344" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a8d7b711093da11843246865fc67d172f" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _lensDistortionScale</definition>
        <argsstring></argsstring>
        <name>_lensDistortionScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="345" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a2cf56246e5c249bb6004761979508914" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float _lensDistortionIor</definition>
        <argsstring></argsstring>
        <name>_lensDistortionIor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="346" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_camera_1a729e3e98cf2bc41eadbbd1ef52c8a03c" prot="protected" static="no" mutable="no">
        <type>CameraUtilConformWindowPolicy</type>
        <definition>CameraUtilConformWindowPolicy _windowPolicy</definition>
        <argsstring></argsstring>
        <name>_windowPolicy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="350" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_camera_1ab8a6bab830f7a98571eb930886bcfbc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdCamera</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>HdCamera</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a76d516c3c2f2a195b9d2d08ff5d1163a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API ~HdCamera</definition>
        <argsstring>() override</argsstring>
        <name>~HdCamera</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a3213755baa58cf8f2da75fb5a5e33566" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override</argsstring>
        <name>Sync</name>
        <reimplements refid="class_hd_sprim_1ac100b9064606ab088306512425439cf7">Sync</reimplements>
        <reimplementedby refid="class_hd_prman_camera_1a55855db3f88fedb28c856e45cf2b7b0b">Sync</reimplementedby>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Sprim API. </para>
        </briefdescription>
        <detaileddescription>
<para>Synchronizes state from the delegate to this object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="138" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1ad2a06c7fe9d266e21307307fc7a0dccd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API HdDirtyBits</type>
        <definition>HD_API HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <reimplements refid="class_hd_sprim_1ac05e81662ee475cfe52ce97e84e7205d">GetInitialDirtyBitsMask</reimplements>
        <briefdescription>
<para>Returns the minimal set of dirty bits to place in the change tracker for use in the first sync of this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically this would be all dirty bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a7dc4f31b9836bab5650ea01bfffa690c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref> const  &amp;</type>
        <definition>GfMatrix4d const&amp; GetTransform</definition>
        <argsstring>() const</argsstring>
        <name>GetTransform</name>
        <briefdescription>
<para>Camera parameters accessor API. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns camera transform </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="154" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1aea09624330b726febca0f7a39f6c37f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Projection</type>
        <definition>Projection GetProjection</definition>
        <argsstring>() const</argsstring>
        <name>GetProjection</name>
        <briefdescription>
<para>Returns whether camera is orthographic and perspective. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="159" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a1f571aab2795377218bfdeb1cd9afc15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetHorizontalAperture</definition>
        <argsstring>() const</argsstring>
        <name>GetHorizontalAperture</name>
        <briefdescription>
<para>Returns horizontal aperture in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="164" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1aa61c6d6bd1f6254c1b3708235ae6d616" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetVerticalAperture</definition>
        <argsstring>() const</argsstring>
        <name>GetVerticalAperture</name>
        <briefdescription>
<para>Returns vertical aperture in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="169" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a00f3650e3dc4468dd8e3b52865d28511" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetHorizontalApertureOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetHorizontalApertureOffset</name>
        <briefdescription>
<para>Returns horizontal aperture offset in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="174" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1ad87f2747ec59e8ec81d41790b7c47cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetVerticalApertureOffset</definition>
        <argsstring>() const</argsstring>
        <name>GetVerticalApertureOffset</name>
        <briefdescription>
<para>Returns vertical aperture offset in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="179" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1ad1c94999e52979710d4c138aa9c05bca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetFocalLength</definition>
        <argsstring>() const</argsstring>
        <name>GetFocalLength</name>
        <briefdescription>
<para>Returns focal length in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="184" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1ad67d4a96c66d4035d30c189cab61ce43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_gf_range1f" kindref="compound">GfRange1f</ref> const  &amp;</type>
        <definition>GfRange1f const&amp; GetClippingRange</definition>
        <argsstring>() const</argsstring>
        <name>GetClippingRange</name>
        <briefdescription>
<para>Returns near and far plane in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="189" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1adc2b806909f07e8d87477fcf81e3e9ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_gf_vec4d" kindref="compound">GfVec4d</ref> &gt; const  &amp;</type>
        <definition>std::vector&lt;GfVec4d&gt; const&amp; GetClipPlanes</definition>
        <argsstring>() const</argsstring>
        <name>GetClipPlanes</name>
        <briefdescription>
<para>Returns any additional clipping planes defined in camera space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="194" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a9f26ef0e8eaf1159ab89f9a5a005b611" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetFStop</definition>
        <argsstring>() const</argsstring>
        <name>GetFStop</name>
        <briefdescription>
<para>Returns fstop of camera. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="199" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a0174e7cf6b48d8db49b5643a2ba441f7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetFocusDistance</definition>
        <argsstring>() const</argsstring>
        <name>GetFocusDistance</name>
        <briefdescription>
<para>Returns focus distance in world units. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="204" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="204" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a9f0c05880f0d0f0574c0312a4d757bf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool GetFocusOn</definition>
        <argsstring>() const</argsstring>
        <name>GetFocusOn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="208" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a829449a2bd5c6ef2fc56bc02efbf1159" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetDofAspect</definition>
        <argsstring>() const</argsstring>
        <name>GetDofAspect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="212" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a32c578ea59f996117771df0b985d6650" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int GetSplitDiopterCount</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="216" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a0c14ab723cd37835f37d767dc76ea476" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterAngle</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="220" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1abeef55585dc52a4cb127d6e6441e9351" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterOffset1</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterOffset1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="224" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a45d4cdf2f9a106828834e2e9d4cfabf9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterWidth1</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterWidth1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="228" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a8bd82e67f7bbf0425212227154f4c0dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterFocusDistance1</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterFocusDistance1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="232" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a2ff4735d6d154a5112314f87420603d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterOffset2</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterOffset2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="236" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a6e7d2e2f60513e3828c19e791bacb0ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterWidth2</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterWidth2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="240" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a2d6f3c5194269e67fa2e8ebe9127edeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetSplitDiopterFocusDistance2</definition>
        <argsstring>() const</argsstring>
        <name>GetSplitDiopterFocusDistance2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="244" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a6530f099b611c06a7645d8aa20ef374b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetShutterOpen</definition>
        <argsstring>() const</argsstring>
        <name>GetShutterOpen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="248" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1aef86c238f603344a13aa36d9d8c336bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double GetShutterClose</definition>
        <argsstring>() const</argsstring>
        <name>GetShutterClose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="252" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1affe869006146acc37aa6611384830c6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetExposure</definition>
        <argsstring>() const</argsstring>
        <name>GetExposure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="256" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a412dc26364200784acd83c898706dc44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken GetLensDistortionType</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="260" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1af49a840bbf4f7f988984cf95513fef21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLensDistortionK1</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionK1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="264" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a6360840be53a7771eb4d5f770cdc8966" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLensDistortionK2</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionK2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="268" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a16b236962c34b69395f5e5bf419554bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>const GfVec2f&amp; GetLensDistortionCenter</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionCenter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="272" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="272" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a1deaa3933bca93e0b78aa75e8d39412d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLensDistortionAnaSq</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionAnaSq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="276" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="276" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a1267d26d5e848deadab85964d91f0968" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref> &amp;</type>
        <definition>const GfVec2f&amp; GetLensDistortionAsym</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionAsym</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="280" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="280" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a5168846447c6b9af3a27b0d92116853b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLensDistortionScale</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionScale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="284" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a8fa0f28ede6628518ae84d6091619aa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float GetLensDistortionIor</definition>
        <argsstring>() const</argsstring>
        <name>GetLensDistortionIor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="288" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1a717130d5a8c970b393e9a0e246e7e177" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const CameraUtilConformWindowPolicy &amp;</type>
        <definition>const CameraUtilConformWindowPolicy&amp; GetWindowPolicy</definition>
        <argsstring>() const</argsstring>
        <name>GetWindowPolicy</name>
        <briefdescription>
<para>Returns the window policy of the camera. </para>
        </briefdescription>
        <detaileddescription>
<para>If no opinion is authored, we default to &quot;CameraUtilFit&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="294" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_camera_1ad92ad17bfa6e2ff3a0cc53eaa04806bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API <ref refid="class_gf_matrix4d" kindref="compound">GfMatrix4d</ref></type>
        <definition>HD_API GfMatrix4d ComputeProjectionMatrix</definition>
        <argsstring>() const</argsstring>
        <name>ComputeProjectionMatrix</name>
        <briefdescription>
<para>Convenience API for rasterizers. </para>
        </briefdescription>
        <detaileddescription>
<para>Computes the projection matrix for a camera from its physical properties. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/camera.h" line="305" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hydra schema for a camera that pulls the params (see above) during Sync. </para>
    </briefdescription>
    <detaileddescription>
<para>Backends that use additional camera parameters can inherit from <ref refid="class_hd_camera" kindref="compound">HdCamera</ref> and pull on them. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1626">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="1627">
        <label>HdPrmanCamera</label>
        <link refid="class_hd_prman_camera"/>
        <childnode refid="1625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1625">
        <label>HdCamera</label>
        <link refid="class_hd_camera"/>
        <childnode refid="1626" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1629">
        <label>HdSprim</label>
        <link refid="class_hd_sprim"/>
      </node>
      <node id="1633">
        <label>GfRange1f</label>
        <link refid="class_gf_range1f"/>
      </node>
      <node id="1632">
        <label>GfMatrix4d</label>
        <link refid="class_gf_matrix4d"/>
      </node>
      <node id="1631">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="1628">
        <label>HdCamera</label>
        <link refid="class_hd_camera"/>
        <childnode refid="1629" relation="public-inheritance">
        </childnode>
        <childnode refid="1630" relation="usage">
          <edgelabel>_lensDistortionAsym</edgelabel>
          <edgelabel>_lensDistortionCenter</edgelabel>
        </childnode>
        <childnode refid="1631" relation="usage">
          <edgelabel>_lensDistortionType</edgelabel>
        </childnode>
        <childnode refid="1632" relation="usage">
          <edgelabel>_transform</edgelabel>
        </childnode>
        <childnode refid="1633" relation="usage">
          <edgelabel>_clippingRange</edgelabel>
        </childnode>
      </node>
      <node id="1630">
        <label>GfVec2f</label>
        <link refid="class_gf_vec2f"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/camera.h" line="104" column="1" bodyfile="pxr/imaging/hd/camera.h" bodystart="103" bodyend="351"/>
    <listofallmembers>
      <member refid="class_hd_camera_1add1b6d6ad2eec1ce5d8706fe1a30b083" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_clippingRange</name></member>
      <member refid="class_hd_camera_1ab335d2f46d3223a24d066c8a1d66682d" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_clipPlanes</name></member>
      <member refid="class_hd_camera_1a4258ab54ba4bc1eda431529a0e0987fb" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_dofAspect</name></member>
      <member refid="class_hd_camera_1a859f06df34264819a84569da52c673ce" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_exposure</name></member>
      <member refid="class_hd_camera_1a606c70c61b1199eecd29c94a9f4f8f6c" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_focalLength</name></member>
      <member refid="class_hd_camera_1a54c4bc783f4e8c15f2bb94e9a718ea06" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_focusDistance</name></member>
      <member refid="class_hd_camera_1a8aedf4e888408fe9d6876ce9da2336fb" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_focusOn</name></member>
      <member refid="class_hd_camera_1a5f4602a476e3cf708b3d77b2601342cf" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_fStop</name></member>
      <member refid="class_hd_camera_1a919943bc6bad58e5fde2a3d6617fdf6e" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_horizontalAperture</name></member>
      <member refid="class_hd_camera_1a4e209b5c9a78e20dcb06ac123e8b3c22" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_horizontalApertureOffset</name></member>
      <member refid="class_hd_camera_1a8179d3d60843321a42507a33d7225ba6" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionAnaSq</name></member>
      <member refid="class_hd_camera_1a9d2bcdafd09275827bd4259f418d04cd" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionAsym</name></member>
      <member refid="class_hd_camera_1a91c4408cada9e4c629adbebc0a966f9c" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionCenter</name></member>
      <member refid="class_hd_camera_1a2cf56246e5c249bb6004761979508914" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionIor</name></member>
      <member refid="class_hd_camera_1ab1c71b7ce90e2d7e66bef8cd2b32bec3" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionK1</name></member>
      <member refid="class_hd_camera_1a5456ca3826b35a542cf00f4fe75bd046" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionK2</name></member>
      <member refid="class_hd_camera_1a8d7b711093da11843246865fc67d172f" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionScale</name></member>
      <member refid="class_hd_camera_1a967a96141ad2268a67ad3c1ae854d9ac" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_lensDistortionType</name></member>
      <member refid="class_hd_camera_1aee52c2019805d8fb8d0e49b8cde4a94d" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_projection</name></member>
      <member refid="class_hd_camera_1a27e336565dea513dd81cf27c8a4e0a7c" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_shutterClose</name></member>
      <member refid="class_hd_camera_1aae4351a5a59082889e6a32ccfcc2ac0d" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_shutterOpen</name></member>
      <member refid="class_hd_camera_1a06a57e4f703128be00b3560355041145" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterAngle</name></member>
      <member refid="class_hd_camera_1ab0e1dca195bf1ab824d2926e976ee922" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterCount</name></member>
      <member refid="class_hd_camera_1a5186b623b5b83d4d10974b0d31103be5" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterFocusDistance1</name></member>
      <member refid="class_hd_camera_1a7cfb703701874098f49dfc2c72dbda70" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterFocusDistance2</name></member>
      <member refid="class_hd_camera_1acc3f175ef175c34ffcc0157ce2b7c5d0" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterOffset1</name></member>
      <member refid="class_hd_camera_1a72ae62567e5b4ec759085eabaafa17ff" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterOffset2</name></member>
      <member refid="class_hd_camera_1ab559aa04e04d78f7f1ce1e9eec63ec51" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterWidth1</name></member>
      <member refid="class_hd_camera_1a6314d9bb35a4f79374b61d160ba31ed9" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_splitDiopterWidth2</name></member>
      <member refid="class_hd_camera_1a417ce102451b1fc29fbdb719abf762c0" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_transform</name></member>
      <member refid="class_hd_camera_1adc62339e581b2096625f16e8bc5bd95f" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_verticalAperture</name></member>
      <member refid="class_hd_camera_1a882605ecbabf5383ccd3a74bae8c936f" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_verticalApertureOffset</name></member>
      <member refid="class_hd_camera_1a729e3e98cf2bc41eadbbd1ef52c8a03c" prot="protected" virt="non-virtual"><scope>HdCamera</scope><name>_windowPolicy</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>AllDirty</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>Clean</name></member>
      <member refid="class_hd_camera_1a5acf1e9a6d045d8409a5eb3f716cd057" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>ClipPlanesVector</name></member>
      <member refid="class_hd_camera_1ad92ad17bfa6e2ff3a0cc53eaa04806bf" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>ComputeProjectionMatrix</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>DirtyBits</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fa8ecccec000719ba341d7d2656c6a37bb" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>DirtyClipPlanes</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fae10a6f0d75a0571b8a6a5b77561740c6" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>DirtyParams</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fa3eaf7284f82a6abc25f2a02244014eb6" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>DirtyTransform</name></member>
      <member refid="class_hd_camera_1a2f2dbbbe47e871395a781c8105398c8fae9e6ea4056ca430edacc74e2b6430cab" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>DirtyWindowPolicy</name></member>
      <member refid="class_hd_sprim_1a385eed04c15e636796b187bfdf0fcbf0" prot="public" virt="virtual"><scope>HdCamera</scope><name>Finalize</name></member>
      <member refid="class_hd_camera_1ad67d4a96c66d4035d30c189cab61ce43" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetClippingRange</name></member>
      <member refid="class_hd_camera_1adc2b806909f07e8d87477fcf81e3e9ca" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetClipPlanes</name></member>
      <member refid="class_hd_camera_1a829449a2bd5c6ef2fc56bc02efbf1159" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetDofAspect</name></member>
      <member refid="class_hd_camera_1affe869006146acc37aa6611384830c6f" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetExposure</name></member>
      <member refid="class_hd_camera_1ad1c94999e52979710d4c138aa9c05bca" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetFocalLength</name></member>
      <member refid="class_hd_camera_1a0174e7cf6b48d8db49b5643a2ba441f7" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetFocusDistance</name></member>
      <member refid="class_hd_camera_1a9f0c05880f0d0f0574c0312a4d757bf7" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetFocusOn</name></member>
      <member refid="class_hd_camera_1a9f26ef0e8eaf1159ab89f9a5a005b611" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetFStop</name></member>
      <member refid="class_hd_camera_1a1f571aab2795377218bfdeb1cd9afc15" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetHorizontalAperture</name></member>
      <member refid="class_hd_camera_1a00f3650e3dc4468dd8e3b52865d28511" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetHorizontalApertureOffset</name></member>
      <member refid="class_hd_sprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetId</name></member>
      <member refid="class_hd_camera_1ad2a06c7fe9d266e21307307fc7a0dccd" prot="public" virt="virtual"><scope>HdCamera</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_camera_1a1deaa3933bca93e0b78aa75e8d39412d" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionAnaSq</name></member>
      <member refid="class_hd_camera_1a1267d26d5e848deadab85964d91f0968" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionAsym</name></member>
      <member refid="class_hd_camera_1a16b236962c34b69395f5e5bf419554bb" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionCenter</name></member>
      <member refid="class_hd_camera_1a8fa0f28ede6628518ae84d6091619aa3" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionIor</name></member>
      <member refid="class_hd_camera_1af49a840bbf4f7f988984cf95513fef21" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionK1</name></member>
      <member refid="class_hd_camera_1a6360840be53a7771eb4d5f770cdc8966" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionK2</name></member>
      <member refid="class_hd_camera_1a5168846447c6b9af3a27b0d92116853b" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionScale</name></member>
      <member refid="class_hd_camera_1a412dc26364200784acd83c898706dc44" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetLensDistortionType</name></member>
      <member refid="class_hd_camera_1aea09624330b726febca0f7a39f6c37f2" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetProjection</name></member>
      <member refid="class_hd_camera_1aef86c238f603344a13aa36d9d8c336bf" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetShutterClose</name></member>
      <member refid="class_hd_camera_1a6530f099b611c06a7645d8aa20ef374b" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetShutterOpen</name></member>
      <member refid="class_hd_camera_1a0c14ab723cd37835f37d767dc76ea476" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterAngle</name></member>
      <member refid="class_hd_camera_1a32c578ea59f996117771df0b985d6650" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterCount</name></member>
      <member refid="class_hd_camera_1a8bd82e67f7bbf0425212227154f4c0dd" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterFocusDistance1</name></member>
      <member refid="class_hd_camera_1a2d6f3c5194269e67fa2e8ebe9127edeb" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterFocusDistance2</name></member>
      <member refid="class_hd_camera_1abeef55585dc52a4cb127d6e6441e9351" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterOffset1</name></member>
      <member refid="class_hd_camera_1a2ff4735d6d154a5112314f87420603d9" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterOffset2</name></member>
      <member refid="class_hd_camera_1a45d4cdf2f9a106828834e2e9d4cfabf9" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterWidth1</name></member>
      <member refid="class_hd_camera_1a6e7d2e2f60513e3828c19e791bacb0ea" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetSplitDiopterWidth2</name></member>
      <member refid="class_hd_camera_1a7dc4f31b9836bab5650ea01bfffa690c" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetTransform</name></member>
      <member refid="class_hd_camera_1aa61c6d6bd1f6254c1b3708235ae6d616" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetVerticalAperture</name></member>
      <member refid="class_hd_camera_1ad87f2747ec59e8ec81d41790b7c47cf6" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetVerticalApertureOffset</name></member>
      <member refid="class_hd_camera_1a717130d5a8c970b393e9a0e246e7e177" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>GetWindowPolicy</name></member>
      <member refid="class_hd_camera_1ab8a6bab830f7a98571eb930886bcfbc7" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>HdCamera</name></member>
      <member refid="class_hd_sprim_1a15a586d4a5f4e5c4f4e0ae664914dd26" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>HdSprim</name></member>
      <member refid="class_hd_camera_1a9f7870d8d60a515bd641dadf4629029aac130c48aea11ca5aff222ee3e75ab9a9" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>Orthographic</name></member>
      <member refid="class_hd_camera_1a9f7870d8d60a515bd641dadf4629029aad28963ad8af924a09c6ef14c97ca3a7a" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>Perspective</name></member>
      <member refid="class_hd_camera_1a9f7870d8d60a515bd641dadf4629029a" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>Projection</name></member>
      <member refid="class_hd_camera_1a3213755baa58cf8f2da75fb5a5e33566" prot="public" virt="virtual"><scope>HdCamera</scope><name>Sync</name></member>
      <member refid="class_hd_camera_1a76d516c3c2f2a195b9d2d08ff5d1163a" prot="public" virt="non-virtual"><scope>HdCamera</scope><name>~HdCamera</name></member>
      <member refid="class_hd_sprim_1a35830c433fc9268fc4fe5ed23d8cc86b" prot="public" virt="virtual"><scope>HdCamera</scope><name>~HdSprim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
