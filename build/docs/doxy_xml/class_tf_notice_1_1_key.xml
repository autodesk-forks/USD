<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_notice_1_1_key" kind="class" language="C++" prot="public">
    <compoundname>TfNotice::Key</compoundname>
    <includes refid="base_2tf_2notice_8h" local="no">notice.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_notice_1_1_key_1a3a000ccd9eb25cd21c11e9a7d7cc6f72" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_weak_ptr" kindref="compound">_DelivererWeakPtr</ref></type>
        <definition>_DelivererWeakPtr _deliverer</definition>
        <argsstring></argsstring>
        <name>_deliverer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="278" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_notice_1_1_key_1a2ab30693e23088c54a1d461fc2d46504" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TfNotice</definition>
        <argsstring></argsstring>
        <name>TfNotice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="281" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_notice_1_1_key_1a864f3bdec0a6b38a9582783f3dcc16bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Key</definition>
        <argsstring>()</argsstring>
        <name>Key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="258" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="258" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_notice_1_1_key_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
<para>Does this key refer to a valid notification? </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput>IsValid</computeroutput> will return true if this key refers to a currently active notification. Revoking the key will make it invalid again. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="264" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_notice_1_1_key_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Does this key refer to a valid notification? </para>
        </briefdescription>
        <detaileddescription>
<para>The boolean operator is identical to <computeroutput><ref refid="class_tf_notice_1_1_key_1ac532c4b500b1a85ea22217f2c65a70ed" kindref="member">IsValid()</ref></computeroutput> above. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="271" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="271" bodyend="273"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_notice_1_1_key_1a9c855950ec230aa2f3b436792f2b7470" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Key</definition>
        <argsstring>(const _DelivererWeakPtr &amp;d)</argsstring>
        <name>Key</name>
        <param>
          <type>const <ref refid="class_tf_weak_ptr" kindref="compound">_DelivererWeakPtr</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/notice.h" line="276" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="276" bodyend="276"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Handle-object returned by <computeroutput><ref refid="class_tf_notice_1a68c24dba64e7a7135f62d1bdab33ca7f" kindref="member">TfNotice::Register()</ref></computeroutput>. </para>
    </briefdescription>
    <detaileddescription>
<para>When a listener is registered by <computeroutput><ref refid="class_tf_notice_1a68c24dba64e7a7135f62d1bdab33ca7f" kindref="member">TfNotice::Register()</ref></computeroutput>, an object of type <computeroutput><ref refid="class_tf_notice_1_1_key" kindref="compound">TfNotice::Key</ref></computeroutput> is returned; this key object can be given to <computeroutput><ref refid="class_tf_notice_1ab183e05189affeabc78270a9c1be4241" kindref="member">Revoke()</ref></computeroutput> to subsequently unregister the listener with respect to that particular notice type and callback method. </para>
    </detaileddescription>
    <location file="pxr/base/tf/notice.h" line="256" column="1" bodyfile="pxr/base/tf/notice.h" bodystart="256" bodyend="282"/>
    <listofallmembers>
      <member refid="class_tf_notice_1_1_key_1a3a000ccd9eb25cd21c11e9a7d7cc6f72" prot="private" virt="non-virtual"><scope>TfNotice::Key</scope><name>_deliverer</name></member>
      <member refid="class_tf_notice_1_1_key_1ac532c4b500b1a85ea22217f2c65a70ed" prot="public" virt="non-virtual"><scope>TfNotice::Key</scope><name>IsValid</name></member>
      <member refid="class_tf_notice_1_1_key_1a864f3bdec0a6b38a9582783f3dcc16bb" prot="public" virt="non-virtual"><scope>TfNotice::Key</scope><name>Key</name></member>
      <member refid="class_tf_notice_1_1_key_1a9c855950ec230aa2f3b436792f2b7470" prot="private" virt="non-virtual"><scope>TfNotice::Key</scope><name>Key</name></member>
      <member refid="class_tf_notice_1_1_key_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>TfNotice::Key</scope><name>operator bool</name></member>
      <member refid="class_tf_notice_1_1_key_1a2ab30693e23088c54a1d461fc2d46504" prot="private" virt="non-virtual"><scope>TfNotice::Key</scope><name>TfNotice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
