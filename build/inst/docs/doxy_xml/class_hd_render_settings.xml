<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_render_settings" kind="class" language="C++" prot="public">
    <compoundname>HdRenderSettings</compoundname>
    <basecompoundref refid="class_hd_bprim" prot="public" virt="non-virtual">HdBprim</basecompoundref>
    <derivedcompoundref refid="class_hd_prman___render_settings" prot="public" virt="non-virtual">HdPrman_RenderSettings</derivedcompoundref>
    <includes refid="render_settings_8h" local="no">renderSettings.h</includes>
    <innerclass refid="struct_hd_render_settings_1_1_render_product" prot="public">HdRenderSettings::RenderProduct</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" static="no" strong="no">
        <type>HdDirtyBits</type>
        <name>DirtyBits</name>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public">
          <name>Clean</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8faf64ad890efdd9855d2ae8f57bdb1dcca" prot="public">
          <name>DirtyActive</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa9c3aafbf2b3b9f3f7f1d6d269e4884aa" prot="public">
          <name>DirtyNamespacedSettings</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa5861e19e236f6688e2059f14026fc264" prot="public">
          <name>DirtyRenderProducts</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa80561087c32ba7da3c487340b571019b" prot="public">
          <name>DirtyIncludedPurposes</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa12edad71194e29cbd11cd1dd403321c7" prot="public">
          <name>DirtyMaterialBindingPurposes</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa5bd126f9f4fe78de14795ab08c31fec0" prot="public">
          <name>DirtyRenderingColorSpace</name>
          <initializer>= 1 &lt;&lt; 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fac38b0aa22103590a2569e66b3e7a72c9" prot="public">
          <name>DirtyShutterInterval</name>
          <initializer>= 1 &lt;&lt; 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public">
          <name>AllDirty</name>
          <initializer>=    DirtyActive
                                        | DirtyNamespacedSettings
                                        | DirtyRenderProducts
                                        | DirtyIncludedPurposes
                                        | DirtyMaterialBindingPurposes
                                        | DirtyRenderingColorSpace
                                        | DirtyShutterInterval</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="71" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="71" bodyend="87"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_render_settings_1ad89b97a7b00277afdd8beb2da00147bb" prot="public" static="no">
        <type>std::vector&lt; RenderProduct &gt;</type>
        <definition>using RenderProducts =  std::vector&lt;RenderProduct&gt;</definition>
        <argsstring></argsstring>
        <name>RenderProducts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="139" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_hd_render_settings_1a24e1436238a460b0101f2f8ff668d2a7" prot="public" static="no">
        <type><ref refid="class_vt_dictionary" kindref="compound">VtDictionary</ref></type>
        <definition>using NamespacedSettings =  VtDictionary</definition>
        <argsstring></argsstring>
        <name>NamespacedSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="140" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_render_settings_1aaf6261fa6a915445f7c09d64ba940e4e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool _active</definition>
        <argsstring></argsstring>
        <name>_active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="207" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_render_settings_1a0daacdebbfbbfd5e12e1ee8b931fe61d" prot="private" static="no" mutable="no">
        <type><ref refid="class_vt_dictionary" kindref="compound">NamespacedSettings</ref></type>
        <definition>NamespacedSettings _namespacedSettings</definition>
        <argsstring></argsstring>
        <name>_namespacedSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="208" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_render_settings_1a15bf54e99c86336f17b3c06928fb9dac" prot="private" static="no" mutable="no">
        <type>RenderProducts</type>
        <definition>RenderProducts _products</definition>
        <argsstring></argsstring>
        <name>_products</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="209" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_render_settings_1a8b4d372fa998574b679b399aefaca414" prot="private" static="no" mutable="no">
        <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;</type>
        <definition>VtArray&lt;TfToken&gt; _includedPurposes</definition>
        <argsstring></argsstring>
        <name>_includedPurposes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="210" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_render_settings_1a3a99c171e9177a6f528c64276dc3dbd6" prot="private" static="no" mutable="no">
        <type><ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;</type>
        <definition>VtArray&lt;TfToken&gt; _materialBindingPurposes</definition>
        <argsstring></argsstring>
        <name>_materialBindingPurposes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="211" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_render_settings_1a842c2947a4af79aefd841e0af15bfe41" prot="private" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken _renderingColorSpace</definition>
        <argsstring></argsstring>
        <name>_renderingColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="212" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_render_settings_1a042827cf8412aebb3cac22309284e3e6" prot="private" static="no" mutable="no">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue _vShutterInterval</definition>
        <argsstring></argsstring>
        <name>_vShutterInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="213" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_render_settings_1a53641722c4bb838be5fbf634d74280ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API ~HdRenderSettings</definition>
        <argsstring>() override</argsstring>
        <name>~HdRenderSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a0b5163e58040505fee7f6b68e15e3caf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool IsActive</definition>
        <argsstring>() const</argsstring>
        <name>IsActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a55323f058382f1585d1e9cb3af59d87f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool IsValid</definition>
        <argsstring>() const</argsstring>
        <name>IsValid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1ab681197e34a78adb49a5c04ef0ab915e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_vt_dictionary" kindref="compound">NamespacedSettings</ref> &amp;</type>
        <definition>HD_API const NamespacedSettings&amp; GetNamespacedSettings</definition>
        <argsstring>() const</argsstring>
        <name>GetNamespacedSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a26ba4127133f9afcee2a70dd42cafd68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const RenderProducts &amp;</type>
        <definition>HD_API const RenderProducts&amp; GetRenderProducts</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderProducts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a4c518eb9175202052b28fb34305d6cc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; &amp;</type>
        <definition>HD_API const VtArray&lt;TfToken&gt;&amp; GetIncludedPurposes</definition>
        <argsstring>() const</argsstring>
        <name>GetIncludedPurposes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1adc47a05a4f6fbd012d02c0e470883be6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_vt_array" kindref="compound">VtArray</ref>&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt; &amp;</type>
        <definition>HD_API const VtArray&lt;TfToken&gt;&amp; GetMaterialBindingPurposes</definition>
        <argsstring>() const</argsstring>
        <name>GetMaterialBindingPurposes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a106d85a90c605552c8d6f538be8b3e68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>HD_API const TfToken&amp; GetRenderingColorSpace</definition>
        <argsstring>() const</argsstring>
        <name>GetRenderingColorSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1aad792be4422fe9e74f03e91fac6e6723" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
        <definition>HD_API const VtValue&amp; GetShutterInterval</definition>
        <argsstring>() const</argsstring>
        <name>GetShutterInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1afda3a8bc73b3ad74453dfc693a89aafd" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>HD_API void</type>
        <definition>HD_API void Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, HdDirtyBits *dirtyBits) override final</argsstring>
        <name>Sync</name>
        <reimplements refid="class_hd_bprim_1ac100b9064606ab088306512425439cf7">Sync</reimplements>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
<para>Synchronizes state from the delegate to this object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dirtyBits</parametername>
</parameternamelist>
<parameterdescription>
<para>On input specifies which state is is dirty and can be pulled from the scene delegate. On output specifies which bits are still dirty and were not cleaned by the sync. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1ad2a06c7fe9d266e21307307fc7a0dccd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API HdDirtyBits</type>
        <definition>HD_API HdDirtyBits GetInitialDirtyBitsMask</definition>
        <argsstring>() const override</argsstring>
        <name>GetInitialDirtyBitsMask</name>
        <reimplements refid="class_hd_bprim_1ac05e81662ee475cfe52ce97e84e7205d">GetInitialDirtyBitsMask</reimplements>
        <briefdescription>
<para>Returns the minimal set of dirty bits to place in the change tracker for use in the first sync of this prim. </para>
        </briefdescription>
        <detaileddescription>
<para>Typically this would be all dirty bits. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="184" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_render_settings_1a051f152fa489ad35063caf39dcac56e5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdRenderSettings</definition>
        <argsstring>(SdfPath const &amp;id)</argsstring>
        <name>HdRenderSettings</name>
        <param>
          <type><ref refid="class_sdf_path" kindref="compound">SdfPath</ref> const &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1ad3b3da02ff221bd78954c2d9d183e1e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void _Sync</definition>
        <argsstring>(HdSceneDelegate *sceneDelegate, HdRenderParam *renderParam, const HdDirtyBits *dirtyBits)</argsstring>
        <name>_Sync</name>
        <param>
          <type><ref refid="class_hd_scene_delegate" kindref="compound">HdSceneDelegate</ref> *</type>
          <declname>sceneDelegate</declname>
        </param>
        <param>
          <type><ref refid="class_hd_render_param" kindref="compound">HdRenderParam</ref> *</type>
          <declname>renderParam</declname>
        </param>
        <param>
          <type>const HdDirtyBits *</type>
          <declname>dirtyBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="196" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_render_settings_1aa41f21f9ae0f79228653343bd66adc57" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdRenderSettings</definition>
        <argsstring>()=delete</argsstring>
        <name>HdRenderSettings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a1dcc0c70ad8b38192c622416f0bc307d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdRenderSettings</definition>
        <argsstring>(const HdRenderSettings &amp;)=delete</argsstring>
        <name>HdRenderSettings</name>
        <param>
          <type>const <ref refid="class_hd_render_settings" kindref="compound">HdRenderSettings</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_render_settings_1a73d7120743fb87ac77a3d6b3cbabcf9e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_render_settings" kindref="compound">HdRenderSettings</ref> &amp;</type>
        <definition>HdRenderSettings&amp; operator=</definition>
        <argsstring>(const HdRenderSettings &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_render_settings" kindref="compound">HdRenderSettings</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/renderSettings.h" line="205" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hydra prim backing render settings scene description. </para>
    </briefdescription>
    <detaileddescription>
<para>While it is a state prim (Sprim) in spirit, it is made to be a Bprim to ensure that it is sync&apos;d prior to Sprims and Rprims to allow render setting opinions to be discovered and inform the sync process of those prims.</para>
<para><simplesect kind="note"><para>Hydra has several &quot;render settings&quot; concepts as of this writing, which can be confusing. We have:<itemizedlist>
<listitem><para>HdRenderSettingsMap: A dictionary of token-value pairs that is provided as an argument for render delegate construction.</para>
</listitem><listitem><para>HdRenderSettingsDescriptorList: A mechanism to discover and update render settings on the render delegate.</para>
</listitem><listitem><para>Render task params: This currently captures opinions such as the camera to use, the AOV outputs, etc.</para>
</listitem></itemizedlist>
</para>
</simplesect>
We aim to transition away from the API and task based render settings opinions above to using render settings scene description to drive rendering in Hydra.</para>
<para><simplesect kind="see"><para>HdRenderSettingsPrimTokens (defined in <ref refid="imaging_2hd_2tokens_8h_source" kindref="compound">hd/tokens.h</ref>) for tokens permitted in (legacy) scene delegate queries via Get(...).</para>
</simplesect>
<simplesect kind="see"><para>HdRenderSettingsSchema for querying locators and building container data sources when using scene indices. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2622">
        <label>HdRenderSettings</label>
        <link refid="class_hd_render_settings"/>
        <childnode refid="2623" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2623">
        <label>HdBprim</label>
        <link refid="class_hd_bprim"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2624">
        <label>HdRenderSettings</label>
        <link refid="class_hd_render_settings"/>
        <childnode refid="2625" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2625">
        <label>HdBprim</label>
        <link refid="class_hd_bprim"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/renderSettings.h" line="68" column="1" bodyfile="pxr/imaging/hd/renderSettings.h" bodystart="67" bodyend="214"/>
    <listofallmembers>
      <member refid="class_hd_render_settings_1aaf6261fa6a915445f7c09d64ba940e4e" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_active</name></member>
      <member refid="class_hd_render_settings_1a8b4d372fa998574b679b399aefaca414" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_includedPurposes</name></member>
      <member refid="class_hd_render_settings_1a3a99c171e9177a6f528c64276dc3dbd6" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_materialBindingPurposes</name></member>
      <member refid="class_hd_render_settings_1a0daacdebbfbbfd5e12e1ee8b931fe61d" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_namespacedSettings</name></member>
      <member refid="class_hd_render_settings_1a15bf54e99c86336f17b3c06928fb9dac" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_products</name></member>
      <member refid="class_hd_render_settings_1a842c2947a4af79aefd841e0af15bfe41" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_renderingColorSpace</name></member>
      <member refid="class_hd_render_settings_1ad3b3da02ff221bd78954c2d9d183e1e9" prot="protected" virt="virtual"><scope>HdRenderSettings</scope><name>_Sync</name></member>
      <member refid="class_hd_render_settings_1a042827cf8412aebb3cac22309284e3e6" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>_vShutterInterval</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa6f2ec4167b47e7269ed7b56e1928e731" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>AllDirty</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8faccea35f717039c64bc6ea05604ecddc0" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>Clean</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8faf64ad890efdd9855d2ae8f57bdb1dcca" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyActive</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8f" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyBits</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa80561087c32ba7da3c487340b571019b" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyIncludedPurposes</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa12edad71194e29cbd11cd1dd403321c7" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyMaterialBindingPurposes</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa9c3aafbf2b3b9f3f7f1d6d269e4884aa" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyNamespacedSettings</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa5bd126f9f4fe78de14795ab08c31fec0" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyRenderingColorSpace</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fa5861e19e236f6688e2059f14026fc264" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyRenderProducts</name></member>
      <member refid="class_hd_render_settings_1a2f2dbbbe47e871395a781c8105398c8fac38b0aa22103590a2569e66b3e7a72c9" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>DirtyShutterInterval</name></member>
      <member refid="class_hd_bprim_1a385eed04c15e636796b187bfdf0fcbf0" prot="public" virt="virtual"><scope>HdRenderSettings</scope><name>Finalize</name></member>
      <member refid="class_hd_bprim_1a9301243d9273afcba6395e86047490ab" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetId</name></member>
      <member refid="class_hd_render_settings_1a4c518eb9175202052b28fb34305d6cc8" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetIncludedPurposes</name></member>
      <member refid="class_hd_render_settings_1ad2a06c7fe9d266e21307307fc7a0dccd" prot="public" virt="virtual"><scope>HdRenderSettings</scope><name>GetInitialDirtyBitsMask</name></member>
      <member refid="class_hd_render_settings_1adc47a05a4f6fbd012d02c0e470883be6" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetMaterialBindingPurposes</name></member>
      <member refid="class_hd_render_settings_1ab681197e34a78adb49a5c04ef0ab915e" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetNamespacedSettings</name></member>
      <member refid="class_hd_render_settings_1a106d85a90c605552c8d6f538be8b3e68" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetRenderingColorSpace</name></member>
      <member refid="class_hd_render_settings_1a26ba4127133f9afcee2a70dd42cafd68" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetRenderProducts</name></member>
      <member refid="class_hd_render_settings_1aad792be4422fe9e74f03e91fac6e6723" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>GetShutterInterval</name></member>
      <member refid="class_hd_bprim_1aa5ee52b8b01515706d54cf147de7f884" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>HdBprim</name></member>
      <member refid="class_hd_render_settings_1a051f152fa489ad35063caf39dcac56e5" prot="protected" virt="non-virtual"><scope>HdRenderSettings</scope><name>HdRenderSettings</name></member>
      <member refid="class_hd_render_settings_1aa41f21f9ae0f79228653343bd66adc57" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>HdRenderSettings</name></member>
      <member refid="class_hd_render_settings_1a1dcc0c70ad8b38192c622416f0bc307d" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>HdRenderSettings</name></member>
      <member refid="class_hd_render_settings_1a0b5163e58040505fee7f6b68e15e3caf" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>IsActive</name></member>
      <member refid="class_hd_render_settings_1a55323f058382f1585d1e9cb3af59d87f" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>IsValid</name></member>
      <member refid="class_hd_render_settings_1a24e1436238a460b0101f2f8ff668d2a7" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>NamespacedSettings</name></member>
      <member refid="class_hd_render_settings_1a73d7120743fb87ac77a3d6b3cbabcf9e" prot="private" virt="non-virtual"><scope>HdRenderSettings</scope><name>operator=</name></member>
      <member refid="class_hd_render_settings_1ad89b97a7b00277afdd8beb2da00147bb" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>RenderProducts</name></member>
      <member refid="class_hd_render_settings_1afda3a8bc73b3ad74453dfc693a89aafd" prot="public" virt="virtual"><scope>HdRenderSettings</scope><name>Sync</name></member>
      <member refid="class_hd_bprim_1a214b96ab3e11db88364e8b73b8a6940c" prot="public" virt="virtual"><scope>HdRenderSettings</scope><name>~HdBprim</name></member>
      <member refid="class_hd_render_settings_1a53641722c4bb838be5fbf634d74280ce" prot="public" virt="non-virtual"><scope>HdRenderSettings</scope><name>~HdRenderSettings</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
