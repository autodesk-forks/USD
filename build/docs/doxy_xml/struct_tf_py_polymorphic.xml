<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_tf_py_polymorphic" kind="struct" language="C++" prot="public">
    <compoundname>TfPyPolymorphic</compoundname>
    <basecompoundref prot="public" virt="non-virtual">TfType::PyPolymorphicBase</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">boost::python::wrapper&lt; Derived &gt;</basecompoundref>
    <innerclass refid="struct_tf_py_polymorphic_1_1___bind_mem_fn" prot="private">TfPyPolymorphic::_BindMemFn</innerclass>
    <templateparamlist>
      <param>
        <type>typename Derived</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_tf_py_polymorphic_1aec9c6d293817db9364af54ff2ecd6332" prot="public" static="no">
        <type>TfPyPolymorphic&lt; Derived &gt;</type>
        <definition>typedef TfPyPolymorphic&lt;Derived&gt; This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="56" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_tf_py_polymorphic_1a537c4c0d3e204375c5877450eb923e0c" prot="public" static="no">
        <type><ref refid="class_tf_py_override" kindref="compound">TfPyOverride</ref></type>
        <definition>typedef TfPyOverride Override</definition>
        <argsstring></argsstring>
        <name>Override</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="57" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_tf_py_polymorphic_1abd191a86ed3354721fdb07b814c76212" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_py_override" kindref="compound">Override</ref></type>
        <definition>Override GetOverride</definition>
        <argsstring>(char const *func) const</argsstring>
        <name>GetOverride</name>
        <param>
          <type>char const *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="59" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="59" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_py_polymorphic_1a3420bb2ce92f59a67c13b23bc206af96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_py_override" kindref="compound">Override</ref></type>
        <definition>Override GetPureOverride</definition>
        <argsstring>(char const *func) const</argsstring>
        <name>GetPureOverride</name>
        <param>
          <type>char const *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="124" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="124" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_py_polymorphic_1ab362e55fecc884a9d07630be24715687" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Ret</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_tf_py_call" kindref="compound">TfPyCall</ref>&lt; Ret &gt;</type>
        <definition>TfPyCall&lt;Ret&gt; CallPureVirtual</definition>
        <argsstring>(char const *func) const</argsstring>
        <name>CallPureVirtual</name>
        <param>
          <type>char const *</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="142" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_py_polymorphic_1a7f81410c4b5fab3ada6fbd73b00613e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ret</type>
          </param>
          <param>
            <type>class Cls</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Arg</declname>
            <defname>Arg</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; Ret(Arg...)&gt;</type>
        <definition>std::function&lt;Ret (Arg...)&gt; CallVirtual</definition>
        <argsstring>(char const *fname, Ret(Cls::*defaultImpl)(Arg...))</argsstring>
        <name>CallVirtual</name>
        <param>
          <type>char const *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Ret(Cls::*)(Arg...)</type>
          <declname>defaultImpl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_py_polymorphic_1ab92c6fd1a1800f3e8b815b8dbf96c0e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ret</type>
          </param>
          <param>
            <type>class Cls</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Arg</declname>
            <defname>Arg</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; Ret(Arg...)&gt;</type>
        <definition>std::function&lt;Ret (Arg...)&gt; CallVirtual</definition>
        <argsstring>(char const *fname, Ret(Cls::*defaultImpl)(Arg...) const) const</argsstring>
        <name>CallVirtual</name>
        <param>
          <type>char const *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Ret(Cls::*)(Arg...) const</type>
          <declname>defaultImpl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="155" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_py_polymorphic_1a2605a8a8bae104221b24dade9bbff384" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ret</type>
          </param>
          <param>
            <type>class Cls</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; Ret(Args...)&gt;</type>
        <definition>std::function&lt;Ret (Args...)&gt; CallVirtual</definition>
        <argsstring>(char const *fname, Ret(Cls::*defaultImpl)(Args...))</argsstring>
        <name>CallVirtual</name>
        <param>
          <type>char const *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Ret(Cls::*)(Args...)</type>
          <declname>defaultImpl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="199" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="199" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="struct_tf_py_polymorphic_1a047b3fe95e6cae283aea2533b02a6d71" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Ret</type>
          </param>
          <param>
            <type>class Cls</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>std::function&lt; Ret(Args...)&gt;</type>
        <definition>std::function&lt;Ret (Args...)&gt; CallVirtual</definition>
        <argsstring>(char const *fname, Ret(Cls::*defaultImpl)(Args...) const) const</argsstring>
        <name>CallVirtual</name>
        <param>
          <type>char const *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>Ret(Cls::*)(Args...) const</type>
          <declname>defaultImpl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="216" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="216" bodyend="227"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="struct_tf_py_polymorphic_1acd2ae12905bd6bad2d5d10d799aea8b9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>~TfPyPolymorphic</definition>
        <argsstring>()</argsstring>
        <name>~TfPyPolymorphic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyPolymorphic.h" line="160" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="191" bodyend="193"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/tf/pyPolymorphic.h" line="55" column="1" bodyfile="pxr/base/tf/pyPolymorphic.h" bodystart="52" bodyend="188"/>
    <listofallmembers>
      <member refid="struct_tf_py_polymorphic_1ab362e55fecc884a9d07630be24715687" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>CallPureVirtual</name></member>
      <member refid="struct_tf_py_polymorphic_1a7f81410c4b5fab3ada6fbd73b00613e1" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>CallVirtual</name></member>
      <member refid="struct_tf_py_polymorphic_1ab92c6fd1a1800f3e8b815b8dbf96c0e5" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>CallVirtual</name></member>
      <member refid="struct_tf_py_polymorphic_1a2605a8a8bae104221b24dade9bbff384" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>CallVirtual</name></member>
      <member refid="struct_tf_py_polymorphic_1a047b3fe95e6cae283aea2533b02a6d71" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>CallVirtual</name></member>
      <member refid="struct_tf_py_polymorphic_1abd191a86ed3354721fdb07b814c76212" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>GetOverride</name></member>
      <member refid="struct_tf_py_polymorphic_1a3420bb2ce92f59a67c13b23bc206af96" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>GetPureOverride</name></member>
      <member refid="struct_tf_py_polymorphic_1a537c4c0d3e204375c5877450eb923e0c" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>Override</name></member>
      <member refid="struct_tf_py_polymorphic_1aec9c6d293817db9364af54ff2ecd6332" prot="public" virt="non-virtual"><scope>TfPyPolymorphic</scope><name>This</name></member>
      <member refid="struct_tf_type_1_1_py_polymorphic_base_1a587980ecc9655e1eb3a23d3332e7e878" prot="protected" virt="virtual"><scope>TfPyPolymorphic</scope><name>~PyPolymorphicBase</name></member>
      <member refid="struct_tf_py_polymorphic_1acd2ae12905bd6bad2d5d10d799aea8b9" prot="protected" virt="virtual"><scope>TfPyPolymorphic</scope><name>~TfPyPolymorphic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
