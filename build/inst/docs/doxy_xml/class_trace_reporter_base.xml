<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_reporter_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>TraceReporterBase</compoundname>
    <basecompoundref refid="class_tf_ref_base" prot="public" virt="non-virtual">TfRefBase</basecompoundref>
    <basecompoundref refid="class_tf_weak_base" prot="public" virt="non-virtual">TfWeakBase</basecompoundref>
    <derivedcompoundref refid="class_trace_reporter" prot="public" virt="non-virtual">TraceReporter</derivedcompoundref>
    <includes refid="reporter_base_8h" local="no">reporterBase.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_trace_reporter_base_1ac51a4dcfe91336383495d0f186e657b9" prot="public" static="no">
        <type><ref refid="class_trace_reporter_base" kindref="compound">TraceReporterBase</ref></type>
        <definition>using This =  TraceReporterBase</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="55" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_reporter_base_1af0fe853f7b660ae60ba6c629c73524fd" prot="public" static="no">
        <type>TraceReporterBasePtr</type>
        <definition>using ThisPtr =  TraceReporterBasePtr</definition>
        <argsstring></argsstring>
        <name>ThisPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="56" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_reporter_base_1adf4462b9325286b9679028345a60cc54" prot="public" static="no">
        <type>TraceReporterBaseRefPtr</type>
        <definition>using ThisRefPtr =  TraceReporterBaseRefPtr</definition>
        <argsstring></argsstring>
        <name>ThisRefPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="57" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_reporter_base_1a91d1c7baf77d118819bd09551e8ccdd5" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_trace_collection" kindref="compound">TraceCollection</ref> &gt;</type>
        <definition>using CollectionPtr =  std::shared_ptr&lt;TraceCollection&gt;</definition>
        <argsstring></argsstring>
        <name>CollectionPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="58" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_trace_reporter_base_1a2c71d1c2a51092940e92a700aba0cd62" prot="public" static="no">
        <type>std::unique_ptr&lt; <ref refid="class_trace_reporter_data_source_base" kindref="compound">TraceReporterDataSourceBase</ref> &gt;</type>
        <definition>using DataSourcePtr =  std::unique_ptr&lt;TraceReporterDataSourceBase&gt;</definition>
        <argsstring></argsstring>
        <name>DataSourcePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="59" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_reporter_base_1af01f88f4bc8c4d0b3f239af4571145bf" prot="private" static="no" mutable="no">
        <type>DataSourcePtr</type>
        <definition>DataSourcePtr _dataSource</definition>
        <argsstring></argsstring>
        <name>_dataSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="81" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_reporter_base_1ac0a1b3ab2698d4984f88453d85a05090" prot="private" static="no" mutable="no">
        <type>tbb::concurrent_vector&lt; CollectionPtr &gt;</type>
        <definition>tbb::concurrent_vector&lt;CollectionPtr&gt; _processedCollections</definition>
        <argsstring></argsstring>
        <name>_processedCollections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="82" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_reporter_base_1a2c17eb16fe85dc086ce7e1cfeaa6f7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API TraceReporterBase</definition>
        <argsstring>(DataSourcePtr dataSource)</argsstring>
        <name>TraceReporterBase</name>
        <param>
          <type>DataSourcePtr</type>
          <declname>dataSource</declname>
        </param>
        <briefdescription>
<para>Constructor taking ownership of <computeroutput>dataSource</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_base_1a17ac8b269c437db65b0eaf3ce53f8102" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>TRACE_API</type>
        <definition>virtual TRACE_API ~TraceReporterBase</definition>
        <argsstring>()</argsstring>
        <name>~TraceReporterBase</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_base_1ad3a2f68b268329b027a18b77984f75e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API bool</type>
        <definition>TRACE_API bool SerializeProcessedCollections</definition>
        <argsstring>(std::ostream &amp;ostr) const</argsstring>
        <name>SerializeProcessedCollections</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <briefdescription>
<para>Write all collections that were processed by this reporter to <computeroutput>ostr</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="68" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_trace_reporter_base_1a7627d6b63bcb31657d69369f9fff8889" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void _Clear</definition>
        <argsstring>()</argsstring>
        <name>_Clear</name>
        <briefdescription>
<para>Removes all references to TraceCollections. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_base_1a10d708889f4d8c7dc8acfddb77936c51" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void _Update</definition>
        <argsstring>()</argsstring>
        <name>_Update</name>
        <briefdescription>
<para>Gets the latest data from the <ref refid="class_trace_collector" kindref="compound">TraceCollector</ref> singleton and processes all collections that have been received since the last call to <ref refid="class_trace_reporter_base_1a10d708889f4d8c7dc8acfddb77936c51" kindref="member">_Update()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_reporter_base_1a5271f5249704bb4c54f18a2a7a56e410" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void _ProcessCollection</definition>
        <argsstring>(const CollectionPtr &amp;)=0</argsstring>
        <name>_ProcessCollection</name>
        <reimplementedby refid="class_trace_reporter_1af1c04e698691e951c8607c4c7def89c8">_ProcessCollection</reimplementedby>
        <param>
          <type>const CollectionPtr &amp;</type>
        </param>
        <briefdescription>
<para>Called once per collection from <ref refid="class_trace_reporter_base_1a10d708889f4d8c7dc8acfddb77936c51" kindref="member">_Update()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/reporterBase.h" line="78" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class is a base class for report implementations. </para>
    </briefdescription>
    <detaileddescription>
<para>It handles receiving and processing of TraceCollections. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5898">
        <label>TraceReporterBase</label>
        <link refid="class_trace_reporter_base"/>
        <childnode refid="5899" relation="public-inheritance">
        </childnode>
        <childnode refid="5900" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5900">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5901">
        <label>TraceReporter</label>
        <link refid="class_trace_reporter"/>
        <childnode refid="5898" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5899">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5902">
        <label>TraceReporterBase</label>
        <link refid="class_trace_reporter_base"/>
        <childnode refid="5903" relation="public-inheritance">
        </childnode>
        <childnode refid="5904" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5904">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5903">
        <label>TfRefBase</label>
        <link refid="class_tf_ref_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/base/trace/reporterBase.h" line="53" column="1" bodyfile="pxr/base/trace/reporterBase.h" bodystart="52" bodyend="83"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_trace_reporter_base_1a7627d6b63bcb31657d69369f9fff8889" prot="protected" virt="non-virtual"><scope>TraceReporterBase</scope><name>_Clear</name></member>
      <member refid="class_trace_reporter_base_1af01f88f4bc8c4d0b3f239af4571145bf" prot="private" virt="non-virtual"><scope>TraceReporterBase</scope><name>_dataSource</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>TraceReporterBase</scope><name>_HasRemnant</name></member>
      <member refid="class_trace_reporter_base_1a5271f5249704bb4c54f18a2a7a56e410" prot="protected" virt="pure-virtual"><scope>TraceReporterBase</scope><name>_ProcessCollection</name></member>
      <member refid="class_trace_reporter_base_1ac0a1b3ab2698d4984f88453d85a05090" prot="private" virt="non-virtual"><scope>TraceReporterBase</scope><name>_processedCollections</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>TraceReporterBase</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>TraceReporterBase</scope><name>_Register</name></member>
      <member refid="class_trace_reporter_base_1a10d708889f4d8c7dc8acfddb77936c51" prot="protected" virt="non-virtual"><scope>TraceReporterBase</scope><name>_Update</name></member>
      <member refid="class_trace_reporter_base_1a91d1c7baf77d118819bd09551e8ccdd5" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>CollectionPtr</name></member>
      <member refid="class_trace_reporter_base_1a2c71d1c2a51092940e92a700aba0cd62" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>DataSourcePtr</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>EnableNotification2</name></member>
      <member refid="class_tf_ref_base_1abcd501e4bb37d7a93faa4e625e96ecf7" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>GetCurrentCount</name></member>
      <member refid="class_tf_ref_base_1abc1926aa1f9b1ad25c5c583b92bcf14b" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>GetRefCount</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_tf_ref_base_1aab8bc91cf9cff7c6e1da23dc59f5ad1f" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>IsUnique</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>operator=</name></member>
      <member refid="class_trace_reporter_base_1ad3a2f68b268329b027a18b77984f75e3" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>SerializeProcessedCollections</name></member>
      <member refid="class_tf_ref_base_1a6ee7fb6df1df9be9afbda405643ecb6c" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>SetShouldInvokeUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1a33e6c8ffe0caf7dac94ba5c4a4485fbd" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>SetUniqueChangedListener</name></member>
      <member refid="class_tf_ref_base_1aa2d330100c1dde0a28658bbd0bd7e7bd" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>TfWeakBase</name></member>
      <member refid="class_trace_reporter_base_1ac51a4dcfe91336383495d0f186e657b9" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>This</name></member>
      <member refid="class_trace_reporter_base_1af0fe853f7b660ae60ba6c629c73524fd" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>ThisPtr</name></member>
      <member refid="class_trace_reporter_base_1adf4462b9325286b9679028345a60cc54" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>ThisRefPtr</name></member>
      <member refid="class_trace_reporter_base_1a2c17eb16fe85dc086ce7e1cfeaa6f7c2" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>TraceReporterBase</name></member>
      <member refid="class_tf_ref_base_1a86baed63f8017038997266bdd638f65e" prot="public" virt="non-virtual"><scope>TraceReporterBase</scope><name>UniqueChangedFuncPtr</name></member>
      <member refid="class_tf_ref_base_1abc8b2a655b2693dacab986b70c30f28a" prot="protected" virt="virtual"><scope>TraceReporterBase</scope><name>~TfRefBase</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>TraceReporterBase</scope><name>~TfWeakBase</name></member>
      <member refid="class_trace_reporter_base_1a17ac8b269c437db65b0eaf3ce53f8102" prot="public" virt="virtual"><scope>TraceReporterBase</scope><name>~TraceReporterBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
