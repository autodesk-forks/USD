<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_dense_hash_map" kind="class" language="C++" prot="public">
    <compoundname>TfDenseHashMap</compoundname>
    <includes refid="dense_hash_map_8h" local="no">denseHashMap.h</includes>
    <innerclass refid="struct_tf_dense_hash_map_1_1___compressed_storage" prot="private">TfDenseHashMap::_CompressedStorage</innerclass>
    <innerclass refid="struct_tf_dense_hash_map_1_1___internal_value_type" prot="private">TfDenseHashMap::_InternalValueType</innerclass>
    <innerclass refid="class_tf_dense_hash_map_1_1___iterator_base" prot="private">TfDenseHashMap::_IteratorBase</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Key</declname>
        <defname>Key</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Data</declname>
        <defname>Data</defname>
      </param>
      <param>
        <type>class</type>
        <declname>HashFn</declname>
        <defname>HashFn</defname>
      </param>
      <param>
        <type>class</type>
        <declname>EqualKey</declname>
        <defname>EqualKey</defname>
        <defval>std::equal_to&lt;Key&gt;</defval>
      </param>
      <param>
        <type>unsigned</type>
        <declname>Threshold</declname>
        <defname>Threshold</defname>
        <defval>128</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a2d291768139ced49ef4e803466e9e8d7" prot="public" static="no">
        <type>std::pair&lt; const Key, Data &gt;</type>
        <definition>typedef std::pair&lt;const Key, Data&gt; value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="61" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a38ec6d0825c22c2d0ad31f3209ed2d02" prot="public" static="no">
        <type>Key</type>
        <definition>typedef Key key_type</definition>
        <argsstring></argsstring>
        <name>key_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="62" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a4332d75555443dc226d2939fa5026a9b" prot="public" static="no">
        <type>Data</type>
        <definition>typedef Data mapped_type</definition>
        <argsstring></argsstring>
        <name>mapped_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="63" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" prot="public" static="no">
        <type>_IteratorBase&lt; value_type, typename _Vector::iterator &gt;</type>
        <definition>typedef _IteratorBase&lt;value_type, typename _Vector::iterator&gt; iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>An iterator type for this map. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that it provides access to the This::value_type only. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="238" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a3f8ad58a15c37213f674c370df629166" prot="public" static="no">
        <type>_IteratorBase&lt; const value_type, typename _Vector::const_iterator &gt;</type>
        <definition>typedef _IteratorBase&lt;const value_type, typename _Vector::const_iterator&gt; const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>An iterator type for this map. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that it provides access to the This::value_type only. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="244" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1aacc90cf325b8cbd9fa78bf1bc735691d" prot="public" static="no">
        <type>std::pair&lt; <ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref>, bool &gt;</type>
        <definition>typedef std::pair&lt;iterator, bool&gt; insert_result</definition>
        <argsstring></argsstring>
        <name>insert_result</name>
        <briefdescription>
<para>Return type for <ref refid="class_tf_dense_hash_map_1abf9a8c1f302217731dea0f3d4e0bd429" kindref="member">insert()</ref> method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="247" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a44cce643d8cfe17e0fb4ceae12293932" prot="private" static="no">
        <type>std::vector&lt; _InternalValueType &gt;</type>
        <definition>typedef std::vector&lt;_InternalValueType&gt; _Vector</definition>
        <argsstring></argsstring>
        <name>_Vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="125" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_tf_dense_hash_map_1a6322e75c1bf851576b6df56c67f38b82" prot="private" static="no">
        <type>TfHashMap&lt; Key, size_t, HashFn, EqualKey &gt;</type>
        <definition>typedef TfHashMap&lt;Key, size_t, HashFn, EqualKey&gt; _HashMap</definition>
        <argsstring></argsstring>
        <name>_HashMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="128" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_dense_hash_map_1ac35b7a45dd76a71459998a7a934d9324" prot="private" static="no" mutable="no">
        <type>_CompressedStorage</type>
        <definition>_CompressedStorage _storage</definition>
        <argsstring></argsstring>
        <name>_storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="668" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tf_dense_hash_map_1aced4ff51ae6a0f8b95ae65a9dc26acbf" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; _HashMap &gt;</type>
        <definition>std::unique_ptr&lt;_HashMap&gt; _h</definition>
        <argsstring></argsstring>
        <name>_h</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="671" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_dense_hash_map_1a332211121578de34487540b58ad4146d" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfDenseHashMap</definition>
        <argsstring>(const HashFn &amp;hashFn=HashFn(), const EqualKey &amp;equalKey=EqualKey())</argsstring>
        <name>TfDenseHashMap</name>
        <param>
          <type>const HashFn &amp;</type>
          <declname>hashFn</declname>
          <defval>HashFn()</defval>
        </param>
        <param>
          <type>const EqualKey &amp;</type>
          <declname>equalKey</declname>
          <defval>EqualKey()</defval>
        </param>
        <briefdescription>
<para>Ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="253" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="253" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a80c25910c8a44cee7134e4c3f8148466" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>TfDenseHashMap</definition>
        <argsstring>(Iterator begin, Iterator end)</argsstring>
        <name>TfDenseHashMap</name>
        <param>
          <type>Iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Construct with range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="264" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a26ddcf249a3b9f0e1e25c2f0b6390055" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfDenseHashMap</definition>
        <argsstring>(std::initializer_list&lt; value_type &gt; l)</argsstring>
        <name>TfDenseHashMap</name>
        <param>
          <type>std::initializer_list&lt; value_type &gt;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Construct from an initializer_list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="270" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1aee8ac4285e01eb71ce6d14e03be197de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfDenseHashMap</definition>
        <argsstring>(const TfDenseHashMap &amp;rhs)</argsstring>
        <name>TfDenseHashMap</name>
        <param>
          <type>const <ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy Ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="276" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="276" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1af2abc668f86f4bfb6f22d32a26d4d16a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TfDenseHashMap</definition>
        <argsstring>(TfDenseHashMap &amp;&amp;rhs)=default</argsstring>
        <name>TfDenseHashMap</name>
        <param>
          <type><ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move Ctor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a04ec10bbfe2e8ba071274d6ab3215350" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
        <definition>TfDenseHashMap&amp; operator=</definition>
        <argsstring>(const TfDenseHashMap &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="288" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="288" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a914e47c6750b367351ed7448deb01942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
        <definition>TfDenseHashMap&amp; operator=</definition>
        <argsstring>(TfDenseHashMap &amp;&amp;rhs)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="298" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1af566fc860c285582953ef2028f35f8e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
        <definition>TfDenseHashMap&amp; operator=</definition>
        <argsstring>(std::initializer_list&lt; value_type &gt; l)</argsstring>
        <name>operator=</name>
        <param>
          <type>std::initializer_list&lt; value_type &gt;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Assignment from an initializer_list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="302" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="302" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a69c8e3bc646d690778a0bb893939c77e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const TfDenseHashMap &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="310" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="310" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a36ab280653644c7370b1453ae897f278" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const TfDenseHashMap &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="329" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="329" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Erases all of the elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="335" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="335" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1ad44c0c73422b0446280650ad4d3692d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(TfDenseHashMap &amp;rhs)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="class_tf_dense_hash_map" kindref="compound">TfDenseHashMap</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Swaps the contents of two maps. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="342" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="342" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
<para><computeroutput>true</computeroutput> if the <computeroutput>map&apos;s</computeroutput> size is 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="349" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="349" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Returns the size of the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="355" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="355" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1ad69bd11391be1a1dba5c8202259664f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the beginning of the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="361" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="361" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1acad38d52497a975bfb6f2f6acd76631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the end of the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="367" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="367" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a29305669b60ca1680752e2fc3592ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a3f8ad58a15c37213f674c370df629166" kindref="member">const_iterator</ref></type>
        <definition>const_iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the beginning of the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="373" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a3f8ad58a15c37213f674c370df629166" kindref="member">const_iterator</ref></type>
        <definition>const_iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the end of the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="379" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="379" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a5121e1b2c923a24dbf4ee0fdaaa19396" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref></type>
        <definition>iterator find</definition>
        <argsstring>(const key_type &amp;k)</argsstring>
        <name>find</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Finds the element with key <computeroutput>k</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="385" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="385" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a4d73e8579b9c740b88ff23282fde1966" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a3f8ad58a15c37213f674c370df629166" kindref="member">const_iterator</ref></type>
        <definition>const_iterator find</definition>
        <argsstring>(const key_type &amp;k) const</argsstring>
        <name>find</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Finds the element with key <computeroutput>k</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="399" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="399" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a3cb53933af2f6f901e6056f58db7ded0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t count</definition>
        <argsstring>(const key_type &amp;k) const</argsstring>
        <name>count</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Returns the number of elements with key <computeroutput>k</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Which is either 0 or 1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="413" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="413" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1abf9a8c1f302217731dea0f3d4e0bd429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1aacc90cf325b8cbd9fa78bf1bc735691d" kindref="member">insert_result</ref></type>
        <definition>insert_result insert</definition>
        <argsstring>(const value_type &amp;v)</argsstring>
        <name>insert</name>
        <param>
          <type>const value_type &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns a pair of &lt;iterator, bool&gt; where iterator points to the element in the list and bool is true if a new element was inserted. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="420" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="420" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a4dc81021f31a69b7388000bf67c4d53d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class IteratorType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void insert</definition>
        <argsstring>(IteratorType i0, IteratorType i1)</argsstring>
        <name>insert</name>
        <param>
          <type>IteratorType</type>
          <declname>i0</declname>
        </param>
        <param>
          <type>IteratorType</type>
          <declname>i1</declname>
        </param>
        <briefdescription>
<para>Insert a range into the hash map. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that <computeroutput>i0</computeroutput> and <computeroutput>i1</computeroutput> can&apos;t point into the hash map. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="447" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="447" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1acc57ffc33ddac4a5d15a48c96ca772a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void insert_unique</definition>
        <argsstring>(Iterator begin, Iterator end)</argsstring>
        <name>insert_unique</name>
        <param>
          <type>Iterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>Iterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>Insert a range of unique elements into the container. </para>
        </briefdescription>
        <detaileddescription>
<para>[begin, end) <emphasis>must not</emphasis> contain any duplicate elements. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="464" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="464" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1ac9d22d5879a9cc23a6d3e56b1e86e5b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Data &amp;</type>
        <definition>Data&amp; operator[]</definition>
        <argsstring>(const key_type &amp;key)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Indexing operator. </para>
        </briefdescription>
        <detaileddescription>
<para>Inserts a default constructed DataType() for <computeroutput>key</computeroutput> if there is no value for <computeroutput>key</computeroutput> already.</para>
<para>Returns a reference to the value type for <computeroutput>key</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="480" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="480" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a3ff76b4498ceac9906982b1e49221991" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t erase</definition>
        <argsstring>(const key_type &amp;k)</argsstring>
        <name>erase</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Erase element with key <computeroutput>k</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of elements erased. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="486" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="486" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a7141824657e2ff88f95ab43e1bcdffb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void erase</definition>
        <argsstring>(const iterator &amp;iter)</argsstring>
        <name>erase</name>
        <param>
          <type>const <ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref> &amp;</type>
          <declname>iter</declname>
        </param>
        <briefdescription>
<para>Erases element pointed to by <computeroutput>iter</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="498" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="498" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1aed5b4d496297ef879c9ceda07e7e05f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void erase</definition>
        <argsstring>(iterator i0, iterator i1)</argsstring>
        <name>erase</name>
        <param>
          <type><ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref></type>
          <declname>i0</declname>
        </param>
        <param>
          <type><ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref></type>
          <declname>i1</declname>
        </param>
        <briefdescription>
<para>Erases a range from the map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="524" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="524" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a5f16304f80b6fb253c7b0ead3e16dd18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void shrink_to_fit</definition>
        <argsstring>()</argsstring>
        <name>shrink_to_fit</name>
        <briefdescription>
<para>Optimize storage space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="542" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="542" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1af45d30f307f301b9d43fcdf52897bbce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reserve</definition>
        <argsstring>(size_t n)</argsstring>
        <name>reserve</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Reserve space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="568" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="568" bodyend="570"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_dense_hash_map_1a9058cd028b7d8b1b66ca05eb4a4ca422" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_Vector &amp;</type>
        <definition>_Vector&amp; _vec</definition>
        <argsstring>()</argsstring>
        <name>_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="577" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="577" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a2c9b9c34c47bd25d7a3268ed69387090" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HashFn &amp;</type>
        <definition>HashFn&amp; _hash</definition>
        <argsstring>()</argsstring>
        <name>_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="582" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="582" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a973f168b3863656c9109a2b5088532e8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EqualKey &amp;</type>
        <definition>EqualKey&amp; _equ</definition>
        <argsstring>()</argsstring>
        <name>_equ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="587" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="587" bodyend="589"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1acd2159df5d91bd66cfc032584a05434e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const _Vector &amp;</type>
        <definition>const _Vector&amp; _vec</definition>
        <argsstring>() const</argsstring>
        <name>_vec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="592" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="592" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a90fddc80f4d09645a922fa65a3eb831d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const HashFn &amp;</type>
        <definition>const HashFn&amp; _hash</definition>
        <argsstring>() const</argsstring>
        <name>_hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="597" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="597" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a139f315670c190a6109201173edaacf9" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const EqualKey &amp;</type>
        <definition>const EqualKey&amp; _equ</definition>
        <argsstring>() const</argsstring>
        <name>_equ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="602" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="602" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1a46392bc8d1dc8c9e653c124a498cdf74" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" kindref="member">iterator</ref></type>
        <definition>iterator _FindInVec</definition>
        <argsstring>(const key_type &amp;k)</argsstring>
        <name>_FindInVec</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="607" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="607" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1ab569941c8541c8cac7f4d3162b9bb474" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_dense_hash_map_1a3f8ad58a15c37213f674c370df629166" kindref="member">const_iterator</ref></type>
        <definition>const_iterator _FindInVec</definition>
        <argsstring>(const key_type &amp;k) const</argsstring>
        <name>_FindInVec</name>
        <param>
          <type>const key_type &amp;</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="619" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="619" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1abcf3b884249c9f5da9174f79b5583534" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _CreateTableIfNeeded</definition>
        <argsstring>()</argsstring>
        <name>_CreateTableIfNeeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="631" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="631" bodyend="635"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_dense_hash_map_1ac0480fa49796b160a2229c59b1b8ab9a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void _CreateTable</definition>
        <argsstring>()</argsstring>
        <name>_CreateTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/denseHashMap.h" line="639" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="639" bodyend="645"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is a space efficient container that mimics the TfHashMap API that uses a vector for storage when the size of the map is small. </para>
    </briefdescription>
    <detaileddescription>
<para>When the map gets bigger than <computeroutput>Threshold</computeroutput> a TfHashMap is allocated that is used to accelerate lookup in the vector.</para>
<para><simplesect kind="warning"><para>This differs from a TfHashMap in so far that inserting and removing elements invalidate all iterators of the container. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="pxr/base/tf/denseHashMap.h" line="58" column="1" bodyfile="pxr/base/tf/denseHashMap.h" bodystart="57" bodyend="672"/>
    <listofallmembers>
      <member refid="class_tf_dense_hash_map_1ac0480fa49796b160a2229c59b1b8ab9a" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_CreateTable</name></member>
      <member refid="class_tf_dense_hash_map_1abcf3b884249c9f5da9174f79b5583534" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_CreateTableIfNeeded</name></member>
      <member refid="class_tf_dense_hash_map_1a973f168b3863656c9109a2b5088532e8" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_equ</name></member>
      <member refid="class_tf_dense_hash_map_1a139f315670c190a6109201173edaacf9" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_equ</name></member>
      <member refid="class_tf_dense_hash_map_1a46392bc8d1dc8c9e653c124a498cdf74" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_FindInVec</name></member>
      <member refid="class_tf_dense_hash_map_1ab569941c8541c8cac7f4d3162b9bb474" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_FindInVec</name></member>
      <member refid="class_tf_dense_hash_map_1aced4ff51ae6a0f8b95ae65a9dc26acbf" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_h</name></member>
      <member refid="class_tf_dense_hash_map_1a2c9b9c34c47bd25d7a3268ed69387090" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_hash</name></member>
      <member refid="class_tf_dense_hash_map_1a90fddc80f4d09645a922fa65a3eb831d" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_hash</name></member>
      <member refid="class_tf_dense_hash_map_1a6322e75c1bf851576b6df56c67f38b82" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_HashMap</name></member>
      <member refid="class_tf_dense_hash_map_1ac35b7a45dd76a71459998a7a934d9324" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_storage</name></member>
      <member refid="class_tf_dense_hash_map_1a9058cd028b7d8b1b66ca05eb4a4ca422" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_vec</name></member>
      <member refid="class_tf_dense_hash_map_1acd2159df5d91bd66cfc032584a05434e" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_vec</name></member>
      <member refid="class_tf_dense_hash_map_1a44cce643d8cfe17e0fb4ceae12293932" prot="private" virt="non-virtual"><scope>TfDenseHashMap</scope><name>_Vector</name></member>
      <member refid="class_tf_dense_hash_map_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>begin</name></member>
      <member refid="class_tf_dense_hash_map_1a29305669b60ca1680752e2fc3592ba99" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>begin</name></member>
      <member refid="class_tf_dense_hash_map_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>clear</name></member>
      <member refid="class_tf_dense_hash_map_1a3f8ad58a15c37213f674c370df629166" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>const_iterator</name></member>
      <member refid="class_tf_dense_hash_map_1a3cb53933af2f6f901e6056f58db7ded0" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>count</name></member>
      <member refid="class_tf_dense_hash_map_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>empty</name></member>
      <member refid="class_tf_dense_hash_map_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>end</name></member>
      <member refid="class_tf_dense_hash_map_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>end</name></member>
      <member refid="class_tf_dense_hash_map_1a3ff76b4498ceac9906982b1e49221991" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>erase</name></member>
      <member refid="class_tf_dense_hash_map_1a7141824657e2ff88f95ab43e1bcdffb6" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>erase</name></member>
      <member refid="class_tf_dense_hash_map_1aed5b4d496297ef879c9ceda07e7e05f2" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>erase</name></member>
      <member refid="class_tf_dense_hash_map_1a5121e1b2c923a24dbf4ee0fdaaa19396" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>find</name></member>
      <member refid="class_tf_dense_hash_map_1a4d73e8579b9c740b88ff23282fde1966" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>find</name></member>
      <member refid="class_tf_dense_hash_map_1abf9a8c1f302217731dea0f3d4e0bd429" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>insert</name></member>
      <member refid="class_tf_dense_hash_map_1a4dc81021f31a69b7388000bf67c4d53d" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>insert</name></member>
      <member refid="class_tf_dense_hash_map_1aacc90cf325b8cbd9fa78bf1bc735691d" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>insert_result</name></member>
      <member refid="class_tf_dense_hash_map_1acc57ffc33ddac4a5d15a48c96ca772a3" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>insert_unique</name></member>
      <member refid="class_tf_dense_hash_map_1a9692cac990ec1692463ab8b2ab755657" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>iterator</name></member>
      <member refid="class_tf_dense_hash_map_1a38ec6d0825c22c2d0ad31f3209ed2d02" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>key_type</name></member>
      <member refid="class_tf_dense_hash_map_1a4332d75555443dc226d2939fa5026a9b" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>mapped_type</name></member>
      <member refid="class_tf_dense_hash_map_1a36ab280653644c7370b1453ae897f278" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>operator!=</name></member>
      <member refid="class_tf_dense_hash_map_1a04ec10bbfe2e8ba071274d6ab3215350" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>operator=</name></member>
      <member refid="class_tf_dense_hash_map_1a914e47c6750b367351ed7448deb01942" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>operator=</name></member>
      <member refid="class_tf_dense_hash_map_1af566fc860c285582953ef2028f35f8e4" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>operator=</name></member>
      <member refid="class_tf_dense_hash_map_1a69c8e3bc646d690778a0bb893939c77e" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>operator==</name></member>
      <member refid="class_tf_dense_hash_map_1ac9d22d5879a9cc23a6d3e56b1e86e5b6" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>operator[]</name></member>
      <member refid="class_tf_dense_hash_map_1af45d30f307f301b9d43fcdf52897bbce" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>reserve</name></member>
      <member refid="class_tf_dense_hash_map_1a5f16304f80b6fb253c7b0ead3e16dd18" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>shrink_to_fit</name></member>
      <member refid="class_tf_dense_hash_map_1a259cb5a711406a8c3e5d937eb9350cca" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>size</name></member>
      <member refid="class_tf_dense_hash_map_1ad44c0c73422b0446280650ad4d3692d9" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>swap</name></member>
      <member refid="class_tf_dense_hash_map_1a332211121578de34487540b58ad4146d" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>TfDenseHashMap</name></member>
      <member refid="class_tf_dense_hash_map_1a80c25910c8a44cee7134e4c3f8148466" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>TfDenseHashMap</name></member>
      <member refid="class_tf_dense_hash_map_1a26ddcf249a3b9f0e1e25c2f0b6390055" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>TfDenseHashMap</name></member>
      <member refid="class_tf_dense_hash_map_1aee8ac4285e01eb71ce6d14e03be197de" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>TfDenseHashMap</name></member>
      <member refid="class_tf_dense_hash_map_1af2abc668f86f4bfb6f22d32a26d4d16a" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>TfDenseHashMap</name></member>
      <member refid="class_tf_dense_hash_map_1a2d291768139ced49ef4e803466e9e8d7" prot="public" virt="non-virtual"><scope>TfDenseHashMap</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
