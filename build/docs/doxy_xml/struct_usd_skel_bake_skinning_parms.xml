<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_skel_bake_skinning_parms" kind="struct" language="C++" prot="public">
    <compoundname>UsdSkelBakeSkinningParms</compoundname>
    <includes refid="bake_skinning_8h" local="no">bakeSkinning.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184" prot="public" static="no" strong="no">
        <type></type>
        <name>DeformationFlags</name>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184afe20f20e8d61135de46c7438a5409539" prot="public">
          <name>DeformPointsWithSkinning</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a5505797cb145ecd5def54bb0146998bc" prot="public">
          <name>DeformNormalsWithSkinning</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a4c395598818991dee703a1774b32f745" prot="public">
          <name>DeformXformWithSkinning</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a3cc2f41fa9f487bfc3a3bca3103fe993" prot="public">
          <name>DeformPointsWithBlendShapes</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a0180cf461b567dbfc0114962593827ea" prot="public">
          <name>DeformNormalsWithBlendShapes</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184ab3a458e19e20cc88ac332acad3767f05" prot="public">
          <name>DeformWithSkinning</name>
          <initializer>= (DeformPointsWithSkinning|
                              DeformNormalsWithSkinning|
                              DeformXformWithSkinning)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184aaba20945d0d9940688f53afbc76615d9" prot="public">
          <name>DeformWithBlendShapes</name>
          <initializer>= (DeformPointsWithBlendShapes|
                                 DeformNormalsWithBlendShapes)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a117bf1aeff443c5d3d144401f3725512" prot="public">
          <name>DeformAll</name>
          <initializer>= DeformWithSkinning|DeformWithBlendShapes</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a71c0b78b39f8de55444d6a46bff63dc9" prot="public">
          <name>ModifiesPoints</name>
          <initializer>= DeformPointsWithSkinning|DeformPointsWithBlendShapes</initializer>
          <briefdescription>
<para>Flags indicating which components of skinned prims may be modified, based on the active deformations. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184ac35c6e40236a570d262ae7525dfdc52c" prot="public">
          <name>ModifiesNormals</name>
          <initializer>= DeformNormalsWithSkinning|DeformNormalsWithBlendShapes</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a2feacb93ab64cca354c31f3bb494d1fe" prot="public">
          <name>ModifiesXform</name>
          <initializer>= DeformXformWithSkinning</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Flags for identifying different deformation paths. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="49" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="49" bodyend="66"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a2fd8dc6951dd69afb8c9dc02176690a6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int deformationFlags</definition>
        <argsstring></argsstring>
        <name>deformationFlags</name>
        <initializer>= DeformAll</initializer>
        <briefdescription>
<para>Flags determining which deformation paths are enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="69" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a6554c9dab394d8b89c0755cd7ede1c5c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool saveLayers</definition>
        <argsstring></argsstring>
        <name>saveLayers</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>Determines whether or not layers are saved during skinning. </para>
        </briefdescription>
        <detaileddescription>
<para>If disabled, all skinning data is kept in-memory, and it is up to the caller to save or export the affected layers. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="74" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1aa95221f7380ccb2cfd28c52012f36ff9" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t memoryLimit</definition>
        <argsstring></argsstring>
        <name>memoryLimit</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>Memory limit for pending stage writes, given in bytes. </para>
        </briefdescription>
        <detaileddescription>
<para>If zero, memory limits are ignored. Otherwise, output stages are flushed each time pending writes exceed this amount. Note that at least one frame of data for <emphasis>all</emphasis> skinned prims will be held in memory prior to values being written to disk, regardless of this memory limit.</para>
<para>Since flushing pending changes requires layers to be saved, memory limiting is only active when <emphasis>saveLayers</emphasis> is enabled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="84" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a2a9282ee838e0bdbe74fc6cd00facf09" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool updateExtents</definition>
        <argsstring></argsstring>
        <name>updateExtents</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>If true, extents of UsdGeomPointBased-derived prims are updated as new skinned values are produced. </para>
        </briefdescription>
        <detaileddescription>
<para>This is made optional in case an alternate procedure is being used to compute extents elsewhere. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="90" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a43474d96c8847e3ecdfe4de6c6d17407" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool updateExtentHints</definition>
        <argsstring></argsstring>
        <name>updateExtentHints</name>
        <initializer>= true</initializer>
        <briefdescription>
<para>If true, extents hints of models that already stored an extentsHint are updated to reflect skinning changes. </para>
        </briefdescription>
        <detaileddescription>
<para>All extent hints are authored to the stage&apos;s current edit target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="95" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a4a360ad8a311d6f682b1378901c358ad" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_usd_skel_binding" kindref="compound">UsdSkelBinding</ref> &gt;</type>
        <definition>std::vector&lt;UsdSkelBinding&gt; bindings</definition>
        <argsstring></argsstring>
        <name>bindings</name>
        <briefdescription>
<para>The set of bindings to bake. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="98" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a60f42a13fa381b32374cd8999029be44" prot="public" static="no" mutable="no">
        <type>std::vector&lt; SdfLayerHandle &gt;</type>
        <definition>std::vector&lt;SdfLayerHandle&gt; layers</definition>
        <argsstring></argsstring>
        <name>layers</name>
        <briefdescription>
<para>Data layers being written to. </para>
        </briefdescription>
        <detaileddescription>
<para>Layer authoring is not thread-safe, but if multiple layers are provided, then each of those layers may be written to on separate threads, improving parallelism of writes. Note that each layer must already be in the layer stack of the stage on which the <emphasis>bindings</emphasis> are defined <emphasis>before</emphasis> running baking. This is necessary in order for composition of some properties during the baking process. If this is not done, then extents of some models may be incorrect. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="109" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_skel_bake_skinning_parms_1a18340b3b512e0c068ebdf607b39d7227" prot="public" static="no" mutable="no">
        <type>VtUIntArray</type>
        <definition>VtUIntArray layerIndices</definition>
        <argsstring></argsstring>
        <name>layerIndices</name>
        <briefdescription>
<para>Array providing an index per elem in <emphasis>bindings</emphasis>, indicating which layer the skinned result of the binding should be written to. </para>
        </briefdescription>
        <detaileddescription>
<para>The length of this array must be equal to the length of the <emphasis>bindings</emphasis> array. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdSkel/bakeSkinning.h" line="115" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parameters for configuring UsdSkelBakeSkinning. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usdSkel/bakeSkinning.h" line="47" column="1" bodyfile="pxr/usd/usdSkel/bakeSkinning.h" bodystart="46" bodyend="116"/>
    <listofallmembers>
      <member refid="struct_usd_skel_bake_skinning_parms_1a4a360ad8a311d6f682b1378901c358ad" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>bindings</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a117bf1aeff443c5d3d144401f3725512" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformAll</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1a2fd8dc6951dd69afb8c9dc02176690a6" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>deformationFlags</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformationFlags</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a0180cf461b567dbfc0114962593827ea" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformNormalsWithBlendShapes</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a5505797cb145ecd5def54bb0146998bc" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformNormalsWithSkinning</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a3cc2f41fa9f487bfc3a3bca3103fe993" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformPointsWithBlendShapes</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184afe20f20e8d61135de46c7438a5409539" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformPointsWithSkinning</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184aaba20945d0d9940688f53afbc76615d9" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformWithBlendShapes</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184ab3a458e19e20cc88ac332acad3767f05" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformWithSkinning</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a4c395598818991dee703a1774b32f745" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>DeformXformWithSkinning</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1a18340b3b512e0c068ebdf607b39d7227" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>layerIndices</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1a60f42a13fa381b32374cd8999029be44" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>layers</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1aa95221f7380ccb2cfd28c52012f36ff9" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>memoryLimit</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184ac35c6e40236a570d262ae7525dfdc52c" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>ModifiesNormals</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a71c0b78b39f8de55444d6a46bff63dc9" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>ModifiesPoints</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1ac0dba48532a9e8abc150bf05adb66184a2feacb93ab64cca354c31f3bb494d1fe" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>ModifiesXform</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1a6554c9dab394d8b89c0755cd7ede1c5c" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>saveLayers</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1a43474d96c8847e3ecdfe4de6c6d17407" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>updateExtentHints</name></member>
      <member refid="struct_usd_skel_bake_skinning_parms_1a2a9282ee838e0bdbe74fc6cd00facf09" prot="public" virt="non-virtual"><scope>UsdSkelBakeSkinningParms</scope><name>updateExtents</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
