<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_js_writer" kind="class" language="C++" prot="public">
    <compoundname>JsWriter</compoundname>
    <includes refid="json_8h" local="no">json.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_js_writer_1addb2fa415e015ee482fa2cd9eba96af7" prot="public" static="no" strong="yes">
        <type></type>
        <name>Style</name>
        <enumvalue id="class_js_writer_1addb2fa415e015ee482fa2cd9eba96af7ab1fe2c2a59e883740e7ea87667e44a24" prot="public">
          <name>Compact</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_js_writer_1addb2fa415e015ee482fa2cd9eba96af7a46f93f25d0dbb9ada04ac822ba055e8c" prot="public">
          <name>Pretty</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="78" column="1" bodyfile="pxr/base/js/json.h" bodystart="78" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_js_writer_1a1330d959056750a36c212e3b71c22d97" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; _Impl &gt;</type>
        <definition>std::unique_ptr&lt;_Impl&gt; _impl</definition>
        <argsstring></argsstring>
        <name>_impl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="227" column="1" bodyfile="pxr/base/js/json.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_js_writer_1a26d113be9a85ee1fdb22907e98f11d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API JsWriter</definition>
        <argsstring>(std::ostream &amp;ostr, Style style=Style::Compact)</argsstring>
        <name>JsWriter</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>ostr</declname>
        </param>
        <param>
          <type>Style</type>
          <declname>style</declname>
          <defval>Style::Compact</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para>The lifetime of the /p ostr parameter is assumed to be longer than the <ref refid="class_js_writer" kindref="compound">JsWriter</ref> instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1abe1affa904cc5bdd1533cb7cc6a55d54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API</type>
        <definition>JS_API ~JsWriter</definition>
        <argsstring>()</argsstring>
        <name>~JsWriter</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1ae481e180a26e08461bd62d82696f4390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>JsWriter</definition>
        <argsstring>(const JsWriter &amp;)=delete</argsstring>
        <name>JsWriter</name>
        <param>
          <type>const <ref refid="class_js_writer" kindref="compound">JsWriter</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Disable copies. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1aa66f95d25e4aae2fee5fafc172c61d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_js_writer" kindref="compound">JsWriter</ref> &amp;</type>
        <definition>JsWriter&amp; operator=</definition>
        <argsstring>(const JsWriter &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_js_writer" kindref="compound">JsWriter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1ab954572c5e82b64f3be2aa7623084d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Write a null value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="95" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a177cbd6ed9e8c60a890b9c785ac42433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(bool b)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Write a boolean value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1afc07f4498654ca3192273dba58276ef3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(int i)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Write an integer value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1adf770eedc157103bc135596d2a149b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(unsigned u)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>unsigned</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Write an unsigned integer value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a660cf2b06223f1870d1acaf9c9aa4b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(int64_t i)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>int64_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Write a 64-bit integer value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1ad31e9cec47b521b8b38b71f23a4350d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(uint64_t u)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>uint64_t</type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>Write a 64-bit unsigned integer value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a0bfb78865988284cd1229cbfb3e99a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(double d)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Write a double value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a3570d77ee3b9d881a278d2e3881c3b77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Write a string value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1aac5ce960c442a2f1726b7d038c21bdb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteValue</definition>
        <argsstring>(const char *s)</argsstring>
        <name>WriteValue</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Write a string value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1abb51052d6611aa9d7f297777cbf37b3e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool WriteValue</definition>
        <argsstring>(const char(&amp;s)[N])</argsstring>
        <name>WriteValue</name>
        <param>
          <type>const char(&amp;)</type>
          <declname>s</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
<para>Write a string value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="123" column="1" bodyfile="pxr/base/js/json.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a9a9b0f01d1323c9d629620973ada4ec9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool BeginObject</definition>
        <argsstring>()</argsstring>
        <name>BeginObject</name>
        <briefdescription>
<para>Write the start of an object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a887e35b5403a34bdfa376a7a40fd9fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteKey</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>WriteKey</name>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Write an object key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a42bf37e72d15ab34275a989d044d3f60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool WriteKey</definition>
        <argsstring>(const char *)</argsstring>
        <name>WriteKey</name>
        <param>
          <type>const char *</type>
        </param>
        <briefdescription>
<para>Write an object key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a73fa1cf0c9490cd71accc60d824a8ff0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool WriteKey</definition>
        <argsstring>(const char(&amp;s)[N])</argsstring>
        <name>WriteKey</name>
        <param>
          <type>const char(&amp;)</type>
          <declname>s</declname>
          <array>[N]</array>
        </param>
        <briefdescription>
<para>Write a string literal object key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="136" column="1" bodyfile="pxr/base/js/json.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a8335ec734a59350d48f0073fb4f12307" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class K</type>
          </param>
          <param>
            <type>class V</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteKeyValue</definition>
        <argsstring>(K &amp;&amp;k, V &amp;&amp;v)</argsstring>
        <name>WriteKeyValue</name>
        <param>
          <type>K &amp;&amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>V &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Convenience function to write an object key and value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="140" column="1" bodyfile="pxr/base/js/json.h" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a448eb57cc3850f981c39fe2b04992fc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool EndObject</definition>
        <argsstring>()</argsstring>
        <name>EndObject</name>
        <briefdescription>
<para>Write the end of an object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a183e58afd53b43dd068a4abc0e183cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool BeginArray</definition>
        <argsstring>()</argsstring>
        <name>BeginArray</name>
        <briefdescription>
<para>Write the start of an array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1af1997dee7a20403d3c212befac50104a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool EndArray</definition>
        <argsstring>()</argsstring>
        <name>EndArray</name>
        <briefdescription>
<para>Write the end of an array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a87fcc365b2a5d84e1eed5b7f206a2840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteArray</definition>
        <argsstring>(const Container &amp;c)</argsstring>
        <name>WriteArray</name>
        <param>
          <type>const Container &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Convenience function to write an array of values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="155" column="1" bodyfile="pxr/base/js/json.h" bodystart="155" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a010d6adcb9684a7384e077145cc504de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Container</type>
          </param>
          <param>
            <type>class ItemWriteFn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteArray</definition>
        <argsstring>(const Container &amp;c, const ItemWriteFn &amp;f)</argsstring>
        <name>WriteArray</name>
        <param>
          <type>const Container &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const ItemWriteFn &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Convenience function to write an array of values by calling the given functor for each item in the container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="166" column="1" bodyfile="pxr/base/js/json.h" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a25b258d9ecfd5b4cf5376bc7b1c5aa36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Iterator</type>
          </param>
          <param>
            <type>class ItemWriteFn</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteArray</definition>
        <argsstring>(const Iterator &amp;begin, const Iterator &amp;end, const ItemWriteFn &amp;f)</argsstring>
        <name>WriteArray</name>
        <param>
          <type>const Iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const Iterator &amp;</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const ItemWriteFn &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Convenience function to write an array of values given two iterators by calling the given functor for each item in the container. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="177" column="1" bodyfile="pxr/base/js/json.h" bodystart="177" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a11544375f4b5f7fd2cfe37cc251836af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void WriteObject</definition>
        <argsstring>(T &amp;&amp;... f)</argsstring>
        <name>WriteObject</name>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Convenience function to write an object given key value pair arguments. </para>
        </briefdescription>
        <detaileddescription>
<para>key arguments must be convertable to strings, value argruments must be either a writable type, or a callablable type taking a <ref refid="class_js_writer" kindref="compound">JsWriter</ref>&amp;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="190" column="1" bodyfile="pxr/base/js/json.h" bodystart="190" bodyend="196"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_js_writer_1ab304e923089313680af1a5dc05044df6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool WriteValue</definition>
        <argsstring>(T)=delete</argsstring>
        <name>WriteValue</name>
        <param>
          <type>T</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1af2f733ca4748cfbb2d29217feb5c0cce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool _String</definition>
        <argsstring>(const char *s, size_t len)</argsstring>
        <name>_String</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a8828d146cd98cf0ede603c5070d96dfb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JS_API bool</type>
        <definition>JS_API bool _Key</definition>
        <argsstring>(const char *s, size_t len)</argsstring>
        <name>_Key</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a3083cf4820c791d0974da6506447a3fa" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class KeyType</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto _WriteObjectFields</definition>
        <argsstring>(KeyType &amp;&amp;key, T &amp;&amp;v) -&gt; decltype(WriteValue(std::forward&lt; T &gt;(v)), void())</argsstring>
        <name>_WriteObjectFields</name>
        <param>
          <type>KeyType &amp;&amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="207" column="1" bodyfile="pxr/base/js/json.h" bodystart="207" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1aae1bef692785912d70bb90c632c7021d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class KeyType</type>
          </param>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto _WriteObjectFields</definition>
        <argsstring>(KeyType &amp;&amp;key, T &amp;&amp;v) -&gt; decltype(v(std::declval&lt; JsWriter &amp; &gt;()), void())</argsstring>
        <name>_WriteObjectFields</name>
        <param>
          <type>KeyType &amp;&amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T &amp;&amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="214" column="1" bodyfile="pxr/base/js/json.h" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_js_writer_1a3c8a40067b11c328b0d11d647b7922f1" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Key0</type>
          </param>
          <param>
            <type>class T0</type>
          </param>
          <param>
            <type>class ...</type>
            <declname>T</declname>
            <defname>T</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void _WriteObjectFields</definition>
        <argsstring>(Key0 &amp;&amp;key0, T0 &amp;&amp;f0, T &amp;&amp;...f)</argsstring>
        <name>_WriteObjectFields</name>
        <param>
          <type>Key0 &amp;&amp;</type>
          <declname>key0</declname>
        </param>
        <param>
          <type>T0 &amp;&amp;</type>
          <declname>f0</declname>
        </param>
        <param>
          <type>T &amp;&amp;...</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/js/json.h" line="221" column="1" bodyfile="pxr/base/js/json.h" bodystart="221" bodyend="224"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class provides an interface to writing json values directly to a stream. </para>
    </briefdescription>
    <detaileddescription>
<para>This can be much more efficient than constructing a <ref refid="class_js_value" kindref="compound">JsValue</ref> instance and using JsWriteToStream if the data size is significant. </para>
    </detaileddescription>
    <location file="pxr/base/js/json.h" line="76" column="1" bodyfile="pxr/base/js/json.h" bodystart="76" bodyend="228"/>
    <listofallmembers>
      <member refid="class_js_writer_1a1330d959056750a36c212e3b71c22d97" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>_impl</name></member>
      <member refid="class_js_writer_1a8828d146cd98cf0ede603c5070d96dfb" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>_Key</name></member>
      <member refid="class_js_writer_1af2f733ca4748cfbb2d29217feb5c0cce" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>_String</name></member>
      <member refid="class_js_writer_1a3083cf4820c791d0974da6506447a3fa" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>_WriteObjectFields</name></member>
      <member refid="class_js_writer_1aae1bef692785912d70bb90c632c7021d" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>_WriteObjectFields</name></member>
      <member refid="class_js_writer_1a3c8a40067b11c328b0d11d647b7922f1" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>_WriteObjectFields</name></member>
      <member refid="class_js_writer_1a183e58afd53b43dd068a4abc0e183cd1" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>BeginArray</name></member>
      <member refid="class_js_writer_1a9a9b0f01d1323c9d629620973ada4ec9" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>BeginObject</name></member>
      <member refid="class_js_writer_1af1997dee7a20403d3c212befac50104a" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>EndArray</name></member>
      <member refid="class_js_writer_1a448eb57cc3850f981c39fe2b04992fc9" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>EndObject</name></member>
      <member refid="class_js_writer_1a26d113be9a85ee1fdb22907e98f11d01" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>JsWriter</name></member>
      <member refid="class_js_writer_1ae481e180a26e08461bd62d82696f4390" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>JsWriter</name></member>
      <member refid="class_js_writer_1aa66f95d25e4aae2fee5fafc172c61d93" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>operator=</name></member>
      <member refid="class_js_writer_1addb2fa415e015ee482fa2cd9eba96af7" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>Style</name></member>
      <member refid="class_js_writer_1a87fcc365b2a5d84e1eed5b7f206a2840" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteArray</name></member>
      <member refid="class_js_writer_1a010d6adcb9684a7384e077145cc504de" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteArray</name></member>
      <member refid="class_js_writer_1a25b258d9ecfd5b4cf5376bc7b1c5aa36" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteArray</name></member>
      <member refid="class_js_writer_1a887e35b5403a34bdfa376a7a40fd9fde" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteKey</name></member>
      <member refid="class_js_writer_1a42bf37e72d15ab34275a989d044d3f60" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteKey</name></member>
      <member refid="class_js_writer_1a73fa1cf0c9490cd71accc60d824a8ff0" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteKey</name></member>
      <member refid="class_js_writer_1a8335ec734a59350d48f0073fb4f12307" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteKeyValue</name></member>
      <member refid="class_js_writer_1a11544375f4b5f7fd2cfe37cc251836af" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteObject</name></member>
      <member refid="class_js_writer_1ab954572c5e82b64f3be2aa7623084d3c" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1a177cbd6ed9e8c60a890b9c785ac42433" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1afc07f4498654ca3192273dba58276ef3" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1adf770eedc157103bc135596d2a149b76" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1a660cf2b06223f1870d1acaf9c9aa4b4b" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1ad31e9cec47b521b8b38b71f23a4350d3" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1a0bfb78865988284cd1229cbfb3e99a0c" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1a3570d77ee3b9d881a278d2e3881c3b77" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1aac5ce960c442a2f1726b7d038c21bdb6" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1abb51052d6611aa9d7f297777cbf37b3e" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1ab304e923089313680af1a5dc05044df6" prot="private" virt="non-virtual"><scope>JsWriter</scope><name>WriteValue</name></member>
      <member refid="class_js_writer_1abe1affa904cc5bdd1533cb7cc6a55d54" prot="public" virt="non-virtual"><scope>JsWriter</scope><name>~JsWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
