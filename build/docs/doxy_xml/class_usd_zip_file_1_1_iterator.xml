<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_zip_file_1_1_iterator" kind="class" language="C++" prot="public">
    <compoundname>UsdZipFile::Iterator</compoundname>
    <includes refid="zip_file_8h" local="no">zipFile.h</includes>
    <innerclass refid="class_usd_zip_file_1_1_iterator_1_1___arrow_proxy" prot="private">UsdZipFile::Iterator::_ArrowProxy</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_usd_zip_file_1_1_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="147" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_zip_file_1_1_iterator_1ae38469132fe51e57c5a6f6e14bb6a49a" prot="public" static="no">
        <type>std::string</type>
        <definition>using value_type =  std::string</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="148" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_zip_file_1_1_iterator_1a45dcb8ae29e27c318e324a8832bf29e4" prot="public" static="no">
        <type>_ArrowProxy</type>
        <definition>using pointer =  _ArrowProxy</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="149" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_zip_file_1_1_iterator_1a6c96c6573e8b8ee9f669dacb3fdeb38b" prot="public" static="no">
        <type>std::string</type>
        <definition>using reference =  std::string</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="150" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_zip_file_1_1_iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="151" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="151" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_zip_file_1_1_iterator_1a99c32905638da21689462beaf13cf72c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdZipFile</definition>
        <argsstring></argsstring>
        <name>UsdZipFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="186" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_zip_file_1_1_iterator_1aa1530c8b9c5020d71329df0852007ac5" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; _IteratorData &gt;</type>
        <definition>std::unique_ptr&lt;_IteratorData&gt; _data</definition>
        <argsstring></argsstring>
        <name>_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="190" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a8af258f1b66433faf7a578f2fdf7f7c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API Iterator</definition>
        <argsstring>()</argsstring>
        <name>Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="130" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1ad136356971e6aab5475eea91077d9533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API ~Iterator</definition>
        <argsstring>()</argsstring>
        <name>~Iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a04799ccde9d62940a9c81ac90e150b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API Iterator</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>Iterator</name>
        <param>
          <type>const <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a0c60c19ca9d6f6a33fa2b0f767aa6fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API Iterator</definition>
        <argsstring>(Iterator &amp;&amp;rhs)</argsstring>
        <name>Iterator</name>
        <param>
          <type><ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a1301c7a808e47ca1a006ffb602bb9a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>USD_API Iterator&amp; operator=</definition>
        <argsstring>(const Iterator &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1ac3ae592e1d3aef32352387016b74c617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>USD_API Iterator&amp; operator=</definition>
        <argsstring>(Iterator &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1acf3fe4c4829e313b5a4b9c2fd20347fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
        <definition>USD_API Iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a6d789ccf5b88bb490333d8b108e3b00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref></type>
        <definition>USD_API Iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a20c39baefe264ff14ac96a2cdbcb56a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool operator==</definition>
        <argsstring>(const Iterator &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a70f1fd88edbaf147c468d11716b2cc9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool operator!=</definition>
        <argsstring>(const Iterator &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1af8388ba1543c35b3787f2bed3e5b7320" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API reference</type>
        <definition>USD_API reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
<para>Returns filename of the current file in the zip archive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a02b63d942304e9de76a7692a009e9c98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API pointer</type>
        <definition>USD_API pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Returns filename of the current file in the zip archive. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1aeb64fc2e28d04284747e305d036acdbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API const char *</type>
        <definition>USD_API const char* GetFile</definition>
        <argsstring>() const</argsstring>
        <name>GetFile</name>
        <briefdescription>
<para>Returns pointer to the beginning of the current file in the zip archive. </para>
        </briefdescription>
        <detaileddescription>
<para>The contents of the current file span the range [<ref refid="class_usd_zip_file_1_1_iterator_1aeb64fc2e28d04284747e305d036acdbb" kindref="member">GetFile()</ref>, <ref refid="class_usd_zip_file_1_1_iterator_1aeb64fc2e28d04284747e305d036acdbb" kindref="member">GetFile()</ref> + <ref refid="class_usd_zip_file_1_1_iterator_1a46715c4cb786249c098cd7e90e8f6d90" kindref="member">GetFileInfo()</ref>.size).</para>
<para>Note that this points to the raw data stored in the zip archive; no decompression or other transformation is applied. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a46715c4cb786249c098cd7e90e8f6d90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_usd_zip_file_1_1_file_info" kindref="compound">FileInfo</ref></type>
        <definition>USD_API FileInfo GetFileInfo</definition>
        <argsstring>() const</argsstring>
        <name>GetFileInfo</name>
        <briefdescription>
<para>Returns <ref refid="class_usd_zip_file_1_1_file_info" kindref="compound">FileInfo</ref> object containing information about the current file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="183" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_zip_file_1_1_iterator_1a62d7cf14acb376e9add856466b55bb87" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Iterator</definition>
        <argsstring>(const _Impl *impl, size_t offset=0)</argsstring>
        <name>Iterator</name>
        <param>
          <type>const _Impl *</type>
          <declname>impl</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/zipFile.h" line="187" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="class_usd_zip_file_1_1_iterator" kindref="compound">Iterator</ref> for traversing and inspecting the contents of the zip archive. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usd/zipFile.h" line="116" column="1" bodyfile="pxr/usd/usd/zipFile.h" bodystart="115" bodyend="191"/>
    <listofallmembers>
      <member refid="class_usd_zip_file_1_1_iterator_1aa1530c8b9c5020d71329df0852007ac5" prot="private" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>_data</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1ace405568d0b2f3fad4990044252c7732" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>difference_type</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1aeb64fc2e28d04284747e305d036acdbb" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>GetFile</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a46715c4cb786249c098cd7e90e8f6d90" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>GetFileInfo</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a8af258f1b66433faf7a578f2fdf7f7c2" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>Iterator</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a04799ccde9d62940a9c81ac90e150b41" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>Iterator</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a0c60c19ca9d6f6a33fa2b0f767aa6fdd" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>Iterator</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a62d7cf14acb376e9add856466b55bb87" prot="private" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>Iterator</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>iterator_category</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1af8388ba1543c35b3787f2bed3e5b7320" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator *</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a70f1fd88edbaf147c468d11716b2cc9e" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator!=</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1acf3fe4c4829e313b5a4b9c2fd20347fb" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator++</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a6d789ccf5b88bb490333d8b108e3b00c" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator++</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a02b63d942304e9de76a7692a009e9c98" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a1301c7a808e47ca1a006ffb602bb9a87" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator=</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1ac3ae592e1d3aef32352387016b74c617" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator=</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a20c39baefe264ff14ac96a2cdbcb56a3" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>operator==</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a45dcb8ae29e27c318e324a8832bf29e4" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>pointer</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a6c96c6573e8b8ee9f669dacb3fdeb38b" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>reference</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1a99c32905638da21689462beaf13cf72c" prot="private" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>UsdZipFile</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1ae38469132fe51e57c5a6f6e14bb6a49a" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>value_type</name></member>
      <member refid="class_usd_zip_file_1_1_iterator_1ad136356971e6aab5475eea91077d9533" prot="public" virt="non-virtual"><scope>UsdZipFile::Iterator</scope><name>~Iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
