<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="map_expression_8h" kind="file" language="C++">
    <compoundname>mapExpression.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2pcp_2api_8h" local="yes">pxr/usd/pcp/api.h</includes>
    <includes refid="map_function_8h" local="yes">pxr/usd/pcp/mapFunction.h</includes>
    <includes local="no">boost/intrusive_ptr.hpp</includes>
    <includes local="no">tbb/atomic.h</includes>
    <includes local="no">tbb/spin_mutex.h</includes>
    <includes local="no">atomic</includes>
    <includes local="no">memory</includes>
    <includedby refid="arc_8h" local="yes">pxr/usd/pcp/arc.h</includedby>
    <includedby refid="instance_key_8h" local="yes">pxr/usd/pcp/instanceKey.h</includedby>
    <includedby refid="layer_stack_8h" local="yes">pxr/usd/pcp/layerStack.h</includedby>
    <incdepgraph>
      <node id="165104">
        <label>list</label>
      </node>
      <node id="165039">
        <label>locale</label>
      </node>
      <node id="165044">
        <label>atomic</label>
      </node>
      <node id="165042">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165043" relation="include">
        </childnode>
        <childnode refid="165044" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
      </node>
      <node id="165123">
        <label>tbb/atomic.h</label>
      </node>
      <node id="165041">
        <label>stdarg.h</label>
      </node>
      <node id="165054">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="165055" relation="include">
        </childnode>
        <childnode refid="165056" relation="include">
        </childnode>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165057" relation="include">
        </childnode>
      </node>
      <node id="165108">
        <label>functional</label>
      </node>
      <node id="165076">
        <label>pxr/base/tf/hashmap.h</label>
        <link refid="hashmap_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165077" relation="include">
        </childnode>
      </node>
      <node id="165016">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="165017" relation="include">
        </childnode>
      </node>
      <node id="165119">
        <label>limits</label>
      </node>
      <node id="165095">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="165078">
        <label>pxr/base/tf/iterator.h</label>
        <link refid="base_2tf_2iterator_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165032" relation="include">
        </childnode>
        <childnode refid="165079" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
      </node>
      <node id="165083">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="165021">
        <label>pxr/usd/sdf/pool.h</label>
        <link refid="pool_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165022" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165028" relation="include">
        </childnode>
        <childnode refid="165029" relation="include">
        </childnode>
        <childnode refid="165042" relation="include">
        </childnode>
        <childnode refid="165046" relation="include">
        </childnode>
        <childnode refid="165044" relation="include">
        </childnode>
        <childnode refid="165047" relation="include">
        </childnode>
      </node>
      <node id="165079">
        <label>iterator</label>
      </node>
      <node id="165056">
        <label>cstdint</label>
      </node>
      <node id="165089">
        <label>pxr/usd/sdf/pathExpression.h</label>
        <link refid="path_expression_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165019" relation="include">
        </childnode>
        <childnode refid="165090" relation="include">
        </childnode>
        <childnode refid="165051" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165122" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165018">
        <label>pxr/usd/pcp/mapFunction.h</label>
        <link refid="map_function_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165015" relation="include">
        </childnode>
        <childnode refid="165019" relation="include">
        </childnode>
        <childnode refid="165088" relation="include">
        </childnode>
        <childnode refid="165089" relation="include">
        </childnode>
        <childnode refid="165044" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
      </node>
      <node id="165038">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165033" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165039" relation="include">
        </childnode>
        <childnode refid="165040" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
      </node>
      <node id="165028">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="165017" relation="include">
        </childnode>
      </node>
      <node id="165058">
        <label>cmath</label>
      </node>
      <node id="165052">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165035" relation="include">
        </childnode>
        <childnode refid="165053" relation="include">
        </childnode>
        <childnode refid="165054" relation="include">
        </childnode>
        <childnode refid="165059" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
      </node>
      <node id="165084">
        <label>pxr/usd/sdf/pathNode.h</label>
        <link refid="path_node_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165085" relation="include">
        </childnode>
        <childnode refid="165050" relation="include">
        </childnode>
        <childnode refid="165086" relation="include">
        </childnode>
        <childnode refid="165083" relation="include">
        </childnode>
      </node>
      <node id="165046">
        <label>tbb/concurrent_queue.h</label>
      </node>
      <node id="165068">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165028" relation="include">
        </childnode>
        <childnode refid="165056" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
      </node>
      <node id="165103">
        <label>cstdarg</label>
      </node>
      <node id="165024">
        <label>string</label>
      </node>
      <node id="165088">
        <label>pxr/usd/sdf/layerOffset.h</label>
        <link refid="layer_offset_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165085">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
      </node>
      <node id="165033">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
      <node id="165062">
        <label>map</label>
      </node>
      <node id="165055">
        <label>cinttypes</label>
      </node>
      <node id="165048">
        <label>pxr/usd/sdf/tokens.h</label>
        <link refid="usd_2sdf_2tokens_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165049" relation="include">
        </childnode>
      </node>
      <node id="165014">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="165067">
        <label>unordered_set</label>
      </node>
      <node id="165110">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="165086" relation="include">
        </childnode>
      </node>
      <node id="165022">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165023" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
        <childnode refid="165026" relation="include">
        </childnode>
      </node>
      <node id="165082">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
      <node id="165020">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
      <node id="165037">
        <label>stddef.h</label>
      </node>
      <node id="165035">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
      </node>
      <node id="165043">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="165017" relation="include">
        </childnode>
      </node>
      <node id="165124">
        <label>tbb/spin_mutex.h</label>
      </node>
      <node id="165100">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
      </node>
      <node id="165116">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165117" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
      </node>
      <node id="165115">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165116" relation="include">
        </childnode>
        <childnode refid="165118" relation="include">
        </childnode>
        <childnode refid="165120" relation="include">
        </childnode>
      </node>
      <node id="165117">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
      <node id="165093">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="165028" relation="include">
        </childnode>
        <childnode refid="165039" relation="include">
        </childnode>
        <childnode refid="165094" relation="include">
        </childnode>
      </node>
      <node id="165074">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="165019">
        <label>pxr/usd/sdf/path.h</label>
        <link refid="path_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165021" relation="include">
        </childnode>
        <childnode refid="165048" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165075" relation="include">
        </childnode>
        <childnode refid="165050" relation="include">
        </childnode>
        <childnode refid="165081" relation="include">
        </childnode>
        <childnode refid="165083" relation="include">
        </childnode>
        <childnode refid="165080" relation="include">
        </childnode>
        <childnode refid="165079" relation="include">
        </childnode>
        <childnode refid="165064" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
        <childnode refid="165084" relation="include">
        </childnode>
      </node>
      <node id="165040">
        <label>any</label>
      </node>
      <node id="165057">
        <label>sys/types.h</label>
      </node>
      <node id="165102">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165022" relation="include">
        </childnode>
        <childnode refid="165051" relation="include">
        </childnode>
        <childnode refid="165043" relation="include">
        </childnode>
        <childnode refid="165100" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165025">
        <label>typeinfo</label>
      </node>
      <node id="165097">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="165096">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="165122">
        <label>tuple</label>
      </node>
      <node id="165050">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165032" relation="include">
        </childnode>
        <childnode refid="165051" relation="include">
        </childnode>
        <childnode refid="165066" relation="include">
        </childnode>
        <childnode refid="165068" relation="include">
        </childnode>
        <childnode refid="165044" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
        <childnode refid="165064" relation="include">
        </childnode>
      </node>
      <node id="165086">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165044" relation="include">
        </childnode>
        <childnode refid="165087" relation="include">
        </childnode>
        <childnode refid="165056" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165053">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165054" relation="include">
        </childnode>
        <childnode refid="165058" relation="include">
        </childnode>
      </node>
      <node id="165065">
        <label>vector</label>
      </node>
      <node id="165111">
        <label>pxr/base/vt/hash.h</label>
        <link refid="vt_2hash_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165082" relation="include">
        </childnode>
        <childnode refid="165051" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
      </node>
      <node id="165034">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
      <node id="165098">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165093" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
      </node>
      <node id="165118">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="165119" relation="include">
        </childnode>
        <childnode refid="165116" relation="include">
        </childnode>
      </node>
      <node id="165060">
        <label>utility</label>
      </node>
      <node id="165105">
        <label>sstream</label>
      </node>
      <node id="165030">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165023" relation="include">
        </childnode>
        <childnode refid="165031" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
      </node>
      <node id="165070">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="165017">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="165081">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165082" relation="include">
        </childnode>
        <childnode refid="165043" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
      </node>
      <node id="165049">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165043" relation="include">
        </childnode>
        <childnode refid="165042" relation="include">
        </childnode>
        <childnode refid="165050" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
        <childnode refid="165070" relation="include">
        </childnode>
        <childnode refid="165071" relation="include">
        </childnode>
        <childnode refid="165072" relation="include">
        </childnode>
        <childnode refid="165073" relation="include">
        </childnode>
        <childnode refid="165074" relation="include">
        </childnode>
      </node>
      <node id="165027">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="165017" relation="include">
        </childnode>
      </node>
      <node id="165051">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165052" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165061" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165062" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
        <childnode refid="165064" relation="include">
        </childnode>
        <childnode refid="165026" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165059">
        <label>math.h</label>
      </node>
      <node id="165101">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165033" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165054" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165102" relation="include">
        </childnode>
        <childnode refid="165103" relation="include">
        </childnode>
        <childnode refid="165061" relation="include">
        </childnode>
        <childnode refid="165104" relation="include">
        </childnode>
        <childnode refid="165064" relation="include">
        </childnode>
        <childnode refid="165105" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165069">
        <label>iosfwd</label>
      </node>
      <node id="165087">
        <label>cstdlib</label>
      </node>
      <node id="165036">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165031" relation="include">
        </childnode>
        <childnode refid="165037" relation="include">
        </childnode>
      </node>
      <node id="165106">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165107" relation="include">
        </childnode>
        <childnode refid="165109" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
        <childnode refid="165064" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
        <childnode refid="165110" relation="include">
        </childnode>
      </node>
      <node id="165094">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="165113">
        <label>pxr/base/vt/types.h</label>
        <link refid="base_2vt_2types_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165082" relation="include">
        </childnode>
        <childnode refid="165081" relation="include">
        </childnode>
        <childnode refid="165054" relation="include">
        </childnode>
        <childnode refid="165114" relation="include">
        </childnode>
        <childnode refid="165115" relation="include">
        </childnode>
        <childnode refid="165043" relation="include">
        </childnode>
        <childnode refid="165050" relation="include">
        </childnode>
        <childnode refid="165072" relation="include">
        </childnode>
        <childnode refid="165073" relation="include">
        </childnode>
        <childnode refid="165121" relation="include">
        </childnode>
        <childnode refid="165061" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
      </node>
      <node id="165121">
        <label>cstddef</label>
      </node>
      <node id="165114">
        <label>pxr/base/gf/declare.h</label>
        <link refid="base_2gf_2declare_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
      </node>
      <node id="165109">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
      </node>
      <node id="165077">
        <label>unordered_map</label>
      </node>
      <node id="165090">
        <label>pxr/usd/sdf/predicateExpression.h</label>
        <link refid="predicate_expression_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165020" relation="include">
        </childnode>
        <childnode refid="165051" relation="include">
        </childnode>
        <childnode refid="165091" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
        <childnode refid="165122" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
        <childnode refid="165065" relation="include">
        </childnode>
      </node>
      <node id="165032">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165033" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165035" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165036" relation="include">
        </childnode>
        <childnode refid="165037" relation="include">
        </childnode>
      </node>
      <node id="165071">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="165047">
        <label>thread</label>
      </node>
      <node id="165092">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165028" relation="include">
        </childnode>
        <childnode refid="165093" relation="include">
        </childnode>
        <childnode refid="165095" relation="include">
        </childnode>
        <childnode refid="165096" relation="include">
        </childnode>
        <childnode refid="165097" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
      </node>
      <node id="165075">
        <label>pxr/base/tf/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165052" relation="include">
        </childnode>
        <childnode refid="165076" relation="include">
        </childnode>
        <childnode refid="165066" relation="include">
        </childnode>
        <childnode refid="165078" relation="include">
        </childnode>
        <childnode refid="165080" relation="include">
        </childnode>
        <childnode refid="165079" relation="include">
        </childnode>
        <childnode refid="165062" relation="include">
        </childnode>
        <childnode refid="165064" relation="include">
        </childnode>
        <childnode refid="165060" relation="include">
        </childnode>
      </node>
      <node id="165073">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="165045">
        <label>type_traits</label>
      </node>
      <node id="165064">
        <label>set</label>
      </node>
      <node id="165099">
        <label>pxr/base/tf/anyUniquePtr.h</label>
        <link refid="any_unique_ptr_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
      </node>
      <node id="165023">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
      <node id="165013">
        <label>pxr/usd/pcp/mapExpression.h</label>
        <link refid="map_expression_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165015" relation="include">
        </childnode>
        <childnode refid="165018" relation="include">
        </childnode>
        <childnode refid="165083" relation="include">
        </childnode>
        <childnode refid="165123" relation="include">
        </childnode>
        <childnode refid="165124" relation="include">
        </childnode>
        <childnode refid="165044" relation="include">
        </childnode>
        <childnode refid="165063" relation="include">
        </childnode>
      </node>
      <node id="165031">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="165017" relation="include">
        </childnode>
      </node>
      <node id="165080">
        <label>algorithm</label>
      </node>
      <node id="165061">
        <label>cstring</label>
      </node>
      <node id="165120">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
      </node>
      <node id="165063">
        <label>memory</label>
      </node>
      <node id="165107">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165033" relation="include">
        </childnode>
        <childnode refid="165043" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165108" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
      </node>
      <node id="165029">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165030" relation="include">
        </childnode>
        <childnode refid="165032" relation="include">
        </childnode>
        <childnode refid="165034" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165038" relation="include">
        </childnode>
        <childnode refid="165037" relation="include">
        </childnode>
        <childnode refid="165041" relation="include">
        </childnode>
        <childnode refid="165024" relation="include">
        </childnode>
      </node>
      <node id="165066">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165017" relation="include">
        </childnode>
        <childnode refid="165067" relation="include">
        </childnode>
      </node>
      <node id="165026">
        <label>typeindex</label>
      </node>
      <node id="165091">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165092" relation="include">
        </childnode>
        <childnode refid="165098" relation="include">
        </childnode>
        <childnode refid="165022" relation="include">
        </childnode>
        <childnode refid="165027" relation="include">
        </childnode>
        <childnode refid="165028" relation="include">
        </childnode>
        <childnode refid="165099" relation="include">
        </childnode>
        <childnode refid="165068" relation="include">
        </childnode>
        <childnode refid="165100" relation="include">
        </childnode>
        <childnode refid="165101" relation="include">
        </childnode>
        <childnode refid="165052" relation="include">
        </childnode>
        <childnode refid="165106" relation="include">
        </childnode>
        <childnode refid="165082" relation="include">
        </childnode>
        <childnode refid="165111" relation="include">
        </childnode>
        <childnode refid="165112" relation="include">
        </childnode>
        <childnode refid="165081" relation="include">
        </childnode>
        <childnode refid="165113" relation="include">
        </childnode>
        <childnode refid="165083" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
      </node>
      <node id="165072">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="165112">
        <label>pxr/base/vt/streamOut.h</label>
        <link refid="stream_out_8h_source"/>
        <childnode refid="165014" relation="include">
        </childnode>
        <childnode refid="165082" relation="include">
        </childnode>
        <childnode refid="165102" relation="include">
        </childnode>
        <childnode refid="165085" relation="include">
        </childnode>
        <childnode refid="165069" relation="include">
        </childnode>
        <childnode refid="165025" relation="include">
        </childnode>
        <childnode refid="165045" relation="include">
        </childnode>
      </node>
      <node id="165015">
        <label>pxr/usd/pcp/api.h</label>
        <link refid="usd_2pcp_2api_8h_source"/>
        <childnode refid="165016" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="165127">
        <label>pxr/usd/pcp/instanceKey.h</label>
        <link refid="instance_key_8h_source"/>
      </node>
      <node id="165128">
        <label>pxr/usd/pcp/layerStack.h</label>
        <link refid="layer_stack_8h"/>
      </node>
      <node id="165126">
        <label>pxr/usd/pcp/arc.h</label>
        <link refid="arc_8h_source"/>
      </node>
      <node id="165125">
        <label>pxr/usd/pcp/mapExpression.h</label>
        <link refid="map_expression_8h"/>
        <childnode refid="165126" relation="include">
        </childnode>
        <childnode refid="165127" relation="include">
        </childnode>
        <childnode refid="165128" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_pcp_map_expression" prot="public">PcpMapExpression</innerclass>
    <innerclass refid="class_pcp_map_expression_1_1_variable" prot="public">PcpMapExpression::Variable</innerclass>
    <innerclass refid="class_pcp_map_expression_1_1___node" prot="private">PcpMapExpression::_Node</innerclass>
    <innerclass refid="struct_pcp_map_expression_1_1___node_1_1_key" prot="public">PcpMapExpression::_Node::Key</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_PCP_MAP_EXPRESSION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_PCP_MAP_EXPRESSION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/pcp/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/pcp/mapFunction.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/intrusive_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tbb/atomic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;tbb/spin_mutex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_pcp_map_expression" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60" refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_function" kindref="compound">PcpMapFunction</ref><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_function" kindref="compound">Value</ref><sp/>&amp;<sp/><ref refid="class_pcp_map_expression_1a449e4b8a39db4982a9683e6fc293cc64" kindref="member">Evaluate</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression_1aff6ceb7ae064ba8fafbbcc7eec3c25fc" kindref="member">PcpMapExpression</ref>()<sp/>noexcept<sp/>=<sp/>default;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_pcp_map_expression_1a454785f9114dde23827af9693bafd5c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a454785f9114dde23827af9693bafd5c9" kindref="member">Swap</ref>(<ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/>&amp;other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_node.swap(other._node);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="class_pcp_map_expression_1a27909eb1d61b8b261d259be7c70c58dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a27909eb1d61b8b261d259be7c70c58dd" kindref="member">IsNull</ref>()<sp/>const<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!_node;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/><ref refid="class_pcp_map_expression_1a577953e5fd7849b9a4f3e54ef7ae9ce2" kindref="member">Identity</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/><ref refid="class_pcp_map_expression_1a5d3714142cad69e1dfdb6fa3c5a9277b" kindref="member">Constant</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>&amp;<sp/>constValue<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_pcp_map_expression_1_1_variable" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref>(<ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref><sp/>&amp;operator=(<ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_pcp_map_expression_1_1_variable" kindref="compound">Variable</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_function" kindref="compound">Value</ref><sp/>&amp;<sp/><ref refid="class_pcp_map_expression_1_1_variable_1ac41f2c165ba74516a9a8b34004b37b56" kindref="member">GetValue</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1_1_variable_1aeab2b4f8de6329ea6cf7b1c89469d008" kindref="member">SetValue</ref>(<ref refid="class_pcp_map_function" kindref="compound">Value</ref><sp/>&amp;&amp;<sp/>value)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/><ref refid="class_pcp_map_expression_1_1_variable_1a81f1f079229ac5bfdb1fd0af6a073d0a" kindref="member">GetExpression</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_pcp_map_expression_1a658f347e635bfae194c2e248dd4c97fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Variable&gt;<sp/><ref refid="class_pcp_map_expression_1a658f347e635bfae194c2e248dd4c97fb" kindref="member">VariableUniquePtr</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a658f347e635bfae194c2e248dd4c97fb" kindref="member">VariableUniquePtr</ref><sp/><ref refid="class_pcp_map_expression_1aad640866525565f38639654abb8a9037" kindref="member">NewVariable</ref>(<ref refid="class_pcp_map_function" kindref="compound">Value</ref><sp/>&amp;&amp;<sp/>initialValue);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/><ref refid="class_pcp_map_expression_1a900cd786dbe5cf794ee26b45fe3ed28f" kindref="member">Compose</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/>&amp;f)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/><ref refid="class_pcp_map_expression_1a6c9fe58574cf815fb0d70eec7538100c" kindref="member">Inverse</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>PCP_API</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression" kindref="compound">PcpMapExpression</ref><sp/><ref refid="class_pcp_map_expression_1a8e4fa2f84a33a7ced5db3c4f60d04081" kindref="member">AddRootIdentity</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="class_pcp_map_expression_1a104a1559b7897e3a6239b018e54c23ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a104a1559b7897e3a6239b018e54c23ec" kindref="member">IsConstantIdentity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_node<sp/>&amp;&amp;<sp/>_node-&gt;key.op<sp/>==<sp/>_OpConstant<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_node-&gt;key.valueForConstant.IsIdentity();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"></codeline>
<codeline lineno="150"></codeline>
<codeline lineno="153" refid="class_pcp_map_expression_1a0aea46e26477e1aba8fc2b6291d19610" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a0aea46e26477e1aba8fc2b6291d19610" kindref="member">IsIdentity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a449e4b8a39db4982a9683e6fc293cc64" kindref="member">Evaluate</ref>().<ref refid="class_pcp_map_function_1a56f4c15babb0622984d8d1410aaa70a2" kindref="member">IsIdentity</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_pcp_map_expression_1afa4300f28995d3c9cd77bf9d3c7e33b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/><ref refid="class_pcp_map_expression_1afa4300f28995d3c9cd77bf9d3c7e33b9" kindref="member">MapSourceToTarget</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>&amp;path)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a449e4b8a39db4982a9683e6fc293cc64" kindref="member">Evaluate</ref>().<ref refid="class_pcp_map_function_1a517c37a14bf2c8412836ede455adb5c1" kindref="member">MapSourceToTarget</ref>(path);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="class_pcp_map_expression_1a090900553f4a28ac8ac866a044e88911" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/><ref refid="class_pcp_map_expression_1a090900553f4a28ac8ac866a044e88911" kindref="member">MapTargetToSource</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_path" kindref="compound">SdfPath</ref><sp/>&amp;path)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a449e4b8a39db4982a9683e6fc293cc64" kindref="member">Evaluate</ref>().<ref refid="class_pcp_map_function_1a9aef0054e2ea858f5a9ceee469a4458a" kindref="member">MapTargetToSource</ref>(path);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_pcp_map_expression_1a8113b7544dcabb159bc75671a5197ed0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_layer_offset" kindref="compound">SdfLayerOffset</ref><sp/>&amp;<ref refid="class_pcp_map_expression_1a8113b7544dcabb159bc75671a5197ed0" kindref="member">GetTimeOffset</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a449e4b8a39db4982a9683e6fc293cc64" kindref="member">Evaluate</ref>().<ref refid="class_pcp_map_function_1a8113b7544dcabb159bc75671a5197ed0" kindref="member">GetTimeOffset</ref>();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_pcp_map_expression_1a764f99b38cb3cd18ab87c5261321e063" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="class_pcp_map_expression_1a764f99b38cb3cd18ab87c5261321e063" kindref="member">GetString</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1a449e4b8a39db4982a9683e6fc293cc64" kindref="member">Evaluate</ref>().<ref refid="class_pcp_map_function_1a771051ad27e94c42008b9631a1fc102a" kindref="member">GetString</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>Pcp_Statistics<sp/>access<sp/>to<sp/>internal<sp/>data<sp/>for<sp/>diagnostics.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Pcp_Statistics;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Pcp_VariableImpl;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_Node;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::intrusive_ptr&lt;_Node&gt;<sp/>_NodeRefPtr;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aff6ceb7ae064ba8fafbbcc7eec3c25fc" kindref="member">PcpMapExpression</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NodeRefPtr<sp/>&amp;<sp/>node)<sp/>:<sp/>_node(node)<sp/>{}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_Op<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_OpConstant,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_OpVariable,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_OpInverse,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_OpCompose,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_OpAddRootIdentity</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">_Node<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Node(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Node&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Node&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Node&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Key<sp/>holds<sp/>all<sp/>the<sp/>state<sp/>needed<sp/>to<sp/>uniquely<sp/>identify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>(sub-)expression.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Key<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_Op<sp/>op;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NodeRefPtr<sp/>arg1,<sp/>arg2;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>valueForConstant;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Key(<sp/>_Op<sp/>op_,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NodeRefPtr<sp/>&amp;<sp/>arg1_,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NodeRefPtr<sp/>&amp;<sp/>arg2_,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>&amp;<sp/>valueForConstant_<sp/>)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>op(op_)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>arg1(arg1_)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>arg2(arg2_)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>valueForConstant(valueForConstant_)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetHash()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dictionary_8h_1af7cc7d48287d0ccfc216ed68b60c0b78" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>&amp;key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Key<sp/>of<sp/>a<sp/>node<sp/>is<sp/>const,<sp/>and<sp/>established<sp/>when<sp/>it<sp/>is<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>key;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>or<sp/>not<sp/>the<sp/>expression<sp/>tree<sp/>up<sp/>to<sp/>and<sp/>including<sp/>this<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>always<sp/>include<sp/>an<sp/>identity<sp/>mapping.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expressionTreeAlwaysHasIdentity;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Factory<sp/>method<sp/>to<sp/>create<sp/>new<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>_NodeRefPtr</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>New(<sp/>_Op<sp/>op,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NodeRefPtr<sp/>&amp;<sp/>arg1<sp/>=<sp/>_NodeRefPtr(),</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_NodeRefPtr<sp/>&amp;<sp/>arg2<sp/>=<sp/>_NodeRefPtr(),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>&amp;<sp/>valueForConstant<sp/>=<sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref>()<sp/>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~_Node();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>(and<sp/>internally<sp/>cache)<sp/>the<sp/>value<sp/>of<sp/>this<sp/>node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>&amp;<sp/>EvaluateAndCache()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>_OpVariable<sp/>nodes,<sp/>sets<sp/>the<sp/>variable&apos;s<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetValueForVariable(<ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>&amp;&amp;newValue);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>_OpVariable<sp/>nodes,<sp/>returns<sp/>the<sp/>variable&apos;s<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>&amp;<sp/>GetValueForVariable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_valueForVariable;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>_Node(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key<sp/>&amp;key_<sp/>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Invalidate();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>_EvaluateUncached()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>to<sp/>determine<sp/>if<sp/>the<sp/>expression<sp/>tree<sp/>indicated<sp/>by<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>always<sp/>contains<sp/>the<sp/>root<sp/>identity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_ExpressionTreeAlwaysHasIdentity(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Key&amp;<sp/>key);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ref-counting<sp/>ops<sp/>manage<sp/>_refCount.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>friend<sp/>them<sp/>here<sp/>to<sp/>have<sp/>access<sp/>to<sp/>_refCount.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>PCP_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>intrusive_ptr_add_ref(_Node*);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>PCP_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>intrusive_ptr_release(_Node*);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Registry<sp/>of<sp/>node<sp/>instances,<sp/>identified<sp/>by<sp/>Key.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>variable<sp/>nodes<sp/>are<sp/>not<sp/>tracked<sp/>by<sp/>the<sp/>registry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_NodeMap;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_static_data" kindref="compound">TfStaticData&lt;_NodeMap&gt;</ref><sp/>_nodeRegistry;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>tbb::atomic&lt;int&gt;<sp/>_refCount;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>_cachedValue;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::set&lt;_Node*&gt;<sp/>_dependentExpressions;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_pcp_map_expression_1aadb3717979c36d83d423522671062c4b" kindref="member">Value</ref><sp/>_valueForVariable;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>tbb::spin_mutex<sp/>_mutex;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::atomic&lt;bool&gt;<sp/>_hasCachedValue;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>friend<sp/>them<sp/>here<sp/>to<sp/>have<sp/>visibility<sp/>to<sp/>private<sp/>class<sp/>_Node.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>PCP_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>intrusive_ptr_add_ref(_Node*);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>PCP_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>intrusive_ptr_release(_Node*);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>_NodeRefPtr<sp/>_node;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">};</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_USD_PCP_MAP_EXPRESSION_H</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/pcp/mapExpression.h"/>
  </compounddef>
</doxygen>
