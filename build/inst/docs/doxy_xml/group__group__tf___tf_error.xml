<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="group__group__tf___tf_error" kind="group">
    <compoundname>group_tf_TfError</compoundname>
    <title>TfError Error-posting Facility</title>
    <innerclass refid="class_tf_diagnostic_base" prot="public">TfDiagnosticBase</innerclass>
    <innerclass refid="class_tf_error_mark" prot="public">TfErrorMark</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__tf___tf_error_1ga6a26fcba590343aa77db0c120a57d816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void TfReportActiveErrorMarks</definition>
        <argsstring>()</argsstring>
        <name>TfReportActiveErrorMarks</name>
        <briefdescription>
<para>Report current <ref refid="class_tf_error_mark" kindref="compound">TfErrorMark</ref> instances and the stack traces that created them to stdout for debugging purposes. </para>
        </briefdescription>
        <detaileddescription>
<para>To call this function, set _enableTfErrorMarkStackTraces in errorMark.cpp and enable the TF_ERROR_MARK_TRACKING <ref refid="class_tf_debug" kindref="compound">TfDebug</ref> code. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorMark.h" line="214" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__group__tf___tf_error_1ga59842b0e9e7dedd5647e52f1aabdc5b2" prot="public" static="no">
        <name>TF_HAS_ERRORS</name>
        <param><defname>marker</defname></param>
        <param><defname>expr</defname></param>
        <briefdescription>
<para>Convenience macro to check if errors occurred. </para>
        </briefdescription>
        <detaileddescription>
<para>This macro is equivalent to <programlisting><codeline><highlight class="normal">(marker.SetMark(),<sp/>(expr),<sp/>!marker.IsClean())</highlight></codeline>
</programlisting></para>
<para>which enables it to be used as an expression: <programlisting><codeline><highlight class="normal">if<sp/>(TF_HAS_ERRORS(m,<sp/>expr))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>//<sp/>cope!</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/errorMark.h" line="203" column="9" bodyfile="pxr/base/tf/errorMark.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__group__tf___tf_error_1ga1d0e2d7c14403d2572081b25f21ac2b9" prot="public" static="no">
        <name>TF_BAD_SIZE_T</name>
        <initializer>SIZE_MAX</initializer>
        <briefdescription>
<para>This value may be used by functions that return a <computeroutput>size_t</computeroutput> to indicate that a special or error condition has occurred. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/tf.h" line="55" column="9" bodyfile="pxr/base/tf/tf.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>See <ref refid="page_tf__tf_error" kindref="compound">The TfError Error Posting System</ref> for a detailed description. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
