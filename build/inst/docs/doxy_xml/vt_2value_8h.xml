<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="vt_2value_8h" kind="file" language="C++">
    <compoundname>value.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="py_obj_wrapper_8h" local="yes">pxr/base/tf/pyObjWrapper.h</includes>
    <includes refid="py_lock_8h" local="yes">pxr/base/tf/pyLock.h</includes>
    <includes refid="demangle_8h" local="yes">pxr/base/arch/demangle.h</includes>
    <includes refid="hints_8h" local="yes">pxr/base/arch/hints.h</includes>
    <includes refid="pragmas_8h" local="yes">pxr/base/arch/pragmas.h</includes>
    <includes refid="any_unique_ptr_8h" local="yes">pxr/base/tf/anyUniquePtr.h</includes>
    <includes refid="pointer_and_bits_8h" local="yes">pxr/base/tf/pointerAndBits.h</includes>
    <includes refid="safe_type_compare_8h" local="yes">pxr/base/tf/safeTypeCompare.h</includes>
    <includes refid="string_utils_8h" local="yes">pxr/base/tf/stringUtils.h</includes>
    <includes refid="tf_8h" local="yes">pxr/base/tf/tf.h</includes>
    <includes refid="type_8h" local="yes">pxr/base/tf/type.h</includes>
    <includes refid="base_2vt_2api_8h" local="yes">pxr/base/vt/api.h</includes>
    <includes refid="vt_2hash_8h" local="yes">pxr/base/vt/hash.h</includes>
    <includes refid="stream_out_8h" local="yes">pxr/base/vt/streamOut.h</includes>
    <includes refid="vt_2traits_8h" local="yes">pxr/base/vt/traits.h</includes>
    <includes refid="base_2vt_2types_8h" local="yes">pxr/base/vt/types.h</includes>
    <includes local="no">boost/intrusive_ptr.hpp</includes>
    <includes local="no">iosfwd</includes>
    <includes local="no">typeinfo</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="dictionary_8h" local="yes">pxr/base/vt/dictionary.h</includedby>
    <includedby refid="value_from_python_8h" local="yes">pxr/base/vt/valueFromPython.h</includedby>
    <includedby refid="visit_value_8h" local="yes">pxr/base/vt/visitValue.h</includedby>
    <includedby refid="wrap_array_8h" local="yes">pxr/base/vt/wrapArray.h</includedby>
    <includedby refid="asset_info_8h" local="yes">pxr/usd/ar/assetInfo.h</includedby>
    <includedby refid="resolver_context_binder_8h" local="yes">pxr/usd/ar/resolverContextBinder.h</includedby>
    <includedby refid="resolver_scoped_cache_8h" local="yes">pxr/usd/ar/resolverScopedCache.h</includedby>
    <includedby refid="thread_local_scoped_cache_8h" local="yes">pxr/usd/ar/threadLocalScopedCache.h</includedby>
    <includedby refid="ndr_2property_8h" local="yes">pxr/usd/ndr/property.h</includedby>
    <includedby refid="abstract_data_8h" local="yes">pxr/usd/sdf/abstractData.h</includedby>
    <includedby refid="children_proxy_8h" local="yes">pxr/usd/sdf/childrenProxy.h</includedby>
    <includedby refid="data_8h" local="yes">pxr/usd/sdf/data.h</includedby>
    <includedby refid="layer_8h" local="yes">pxr/usd/sdf/layer.h</includedby>
    <includedby refid="list_editor_proxy_8h" local="yes">pxr/usd/sdf/listEditorProxy.h</includedby>
    <includedby refid="map_edit_proxy_8h" local="yes">pxr/usd/sdf/mapEditProxy.h</includedby>
    <includedby refid="predicate_expression_8h" local="yes">pxr/usd/sdf/predicateExpression.h</includedby>
    <includedby refid="predicate_expression_parser_8h" local="yes">pxr/usd/sdf/predicateExpressionParser.h</includedby>
    <includedby refid="predicate_library_8h" local="yes">pxr/usd/sdf/predicateLibrary.h</includedby>
    <includedby refid="predicate_program_8h" local="yes">pxr/usd/sdf/predicateProgram.h</includedby>
    <includedby refid="property_spec_8h" local="yes">pxr/usd/sdf/propertySpec.h</includedby>
    <includedby refid="reference_8h" local="yes">pxr/usd/sdf/reference.h</includedby>
    <includedby refid="usd_2sdf_2schema_8h" local="yes">pxr/usd/sdf/schema.h</includedby>
    <includedby refid="schema_type_registration_8h" local="yes">pxr/usd/sdf/schemaTypeRegistration.h</includedby>
    <includedby refid="sdf_2spec_8h" local="yes">pxr/usd/sdf/spec.h</includedby>
    <includedby refid="usd_2sdf_2types_8h" local="yes">pxr/usd/sdf/types.h</includedby>
    <includedby refid="variable_expression_8h" local="yes">pxr/usd/sdf/variableExpression.h</includedby>
    <includedby refid="shader_property_8h" local="yes">pxr/usd/sdr/shaderProperty.h</includedby>
    <includedby refid="osl_parser_8h" local="yes">pxr/usd/sdrOsl/oslParser.h</includedby>
    <includedby refid="api_schema_base_8h" local="yes">pxr/usd/usd/apiSchemaBase.h</includedby>
    <includedby refid="attribute_8h" local="yes">pxr/usd/usd/attribute.h</includedby>
    <includedby refid="clips_a_p_i_8h" local="yes">pxr/usd/usd/clipsAPI.h</includedby>
    <includedby refid="collection_a_p_i_8h" local="yes">pxr/usd/usd/collectionAPI.h</includedby>
    <includedby refid="model_a_p_i_8h" local="yes">pxr/usd/usd/modelAPI.h</includedby>
    <includedby refid="usd_2property_8h" local="yes">pxr/usd/usd/property.h</includedby>
    <includedby refid="relationship_8h" local="yes">pxr/usd/usd/relationship.h</includedby>
    <includedby refid="stage_8h" local="yes">pxr/usd/usd/stage.h</includedby>
    <includedby refid="typed_8h" local="yes">pxr/usd/usd/typed.h</includedby>
    <includedby refid="usd_2usd_geom_2basis_curves_8h" local="yes">pxr/usd/usdGeom/basisCurves.h</includedby>
    <includedby refid="boundable_8h" local="yes">pxr/usd/usdGeom/boundable.h</includedby>
    <includedby refid="usd_2usd_geom_2camera_8h" local="yes">pxr/usd/usdGeom/camera.h</includedby>
    <includedby refid="capsule_8h" local="yes">pxr/usd/usdGeom/capsule.h</includedby>
    <includedby refid="capsule__1_8h" local="yes">pxr/usd/usdGeom/capsule_1.h</includedby>
    <includedby refid="usd_2usd_geom_2cone_8h" local="yes">pxr/usd/usdGeom/cone.h</includedby>
    <includedby refid="cube_8h" local="yes">pxr/usd/usdGeom/cube.h</includedby>
    <includedby refid="curves_8h" local="yes">pxr/usd/usdGeom/curves.h</includedby>
    <includedby refid="usd_2usd_geom_2cylinder_8h" local="yes">pxr/usd/usdGeom/cylinder.h</includedby>
    <includedby refid="cylinder__1_8h" local="yes">pxr/usd/usdGeom/cylinder_1.h</includedby>
    <includedby refid="usd_2usd_geom_2gprim_8h" local="yes">pxr/usd/usdGeom/gprim.h</includedby>
    <includedby refid="hermite_curves_8h" local="yes">pxr/usd/usdGeom/hermiteCurves.h</includedby>
    <includedby refid="imageable_8h" local="yes">pxr/usd/usdGeom/imageable.h</includedby>
    <includedby refid="usd_2usd_geom_2mesh_8h" local="yes">pxr/usd/usdGeom/mesh.h</includedby>
    <includedby refid="eom_2model_a_p_i_8h" local="yes">pxr/usd/usdGeom/modelAPI.h</includedby>
    <includedby refid="motion_a_p_i_8h" local="yes">pxr/usd/usdGeom/motionAPI.h</includedby>
    <includedby refid="nurbs_curves_8h" local="yes">pxr/usd/usdGeom/nurbsCurves.h</includedby>
    <includedby refid="nurbs_patch_8h" local="yes">pxr/usd/usdGeom/nurbsPatch.h</includedby>
    <includedby refid="usd_2usd_geom_2plane_8h" local="yes">pxr/usd/usdGeom/plane.h</includedby>
    <includedby refid="point_based_8h" local="yes">pxr/usd/usdGeom/pointBased.h</includedby>
    <includedby refid="point_instancer_8h" local="yes">pxr/usd/usdGeom/pointInstancer.h</includedby>
    <includedby refid="usd_2usd_geom_2points_8h" local="yes">pxr/usd/usdGeom/points.h</includedby>
    <includedby refid="primvars_a_p_i_8h" local="yes">pxr/usd/usdGeom/primvarsAPI.h</includedby>
    <includedby refid="scope_8h" local="yes">pxr/usd/usdGeom/scope.h</includedby>
    <includedby refid="usd_2usd_geom_2sphere_8h" local="yes">pxr/usd/usdGeom/sphere.h</includedby>
    <includedby refid="subset_8h" local="yes">pxr/usd/usdGeom/subset.h</includedby>
    <includedby refid="visibility_a_p_i_8h" local="yes">pxr/usd/usdGeom/visibilityAPI.h</includedby>
    <includedby refid="xform_8h" local="yes">pxr/usd/usdGeom/xform.h</includedby>
    <includedby refid="xformable_8h" local="yes">pxr/usd/usdGeom/xformable.h</includedby>
    <includedby refid="xform_common_a_p_i_8h" local="yes">pxr/usd/usdGeom/xformCommonAPI.h</includedby>
    <includedby refid="generative_procedural_a_p_i_8h" local="yes">pxr/usd/usdHydra/generativeProceduralAPI.h</includedby>
    <includedby refid="boundable_light_base_8h" local="yes">pxr/usd/usdLux/boundableLightBase.h</includedby>
    <includedby refid="cylinder_light_8h" local="yes">pxr/usd/usdLux/cylinderLight.h</includedby>
    <includedby refid="disk_light_8h" local="yes">pxr/usd/usdLux/diskLight.h</includedby>
    <includedby refid="distant_light_8h" local="yes">pxr/usd/usdLux/distantLight.h</includedby>
    <includedby refid="dome_light_8h" local="yes">pxr/usd/usdLux/domeLight.h</includedby>
    <includedby refid="dome_light__1_8h" local="yes">pxr/usd/usdLux/domeLight_1.h</includedby>
    <includedby refid="geometry_light_8h" local="yes">pxr/usd/usdLux/geometryLight.h</includedby>
    <includedby refid="light_a_p_i_8h" local="yes">pxr/usd/usdLux/lightAPI.h</includedby>
    <includedby refid="usd_2usd_lux_2light_filter_8h" local="yes">pxr/usd/usdLux/lightFilter.h</includedby>
    <includedby refid="light_list_a_p_i_8h" local="yes">pxr/usd/usdLux/lightListAPI.h</includedby>
    <includedby refid="list_a_p_i_8h" local="yes">pxr/usd/usdLux/listAPI.h</includedby>
    <includedby refid="mesh_light_a_p_i_8h" local="yes">pxr/usd/usdLux/meshLightAPI.h</includedby>
    <includedby refid="nonboundable_light_base_8h" local="yes">pxr/usd/usdLux/nonboundableLightBase.h</includedby>
    <includedby refid="plugin_light_8h" local="yes">pxr/usd/usdLux/pluginLight.h</includedby>
    <includedby refid="plugin_light_filter_8h" local="yes">pxr/usd/usdLux/pluginLightFilter.h</includedby>
    <includedby refid="portal_light_8h" local="yes">pxr/usd/usdLux/portalLight.h</includedby>
    <includedby refid="rect_light_8h" local="yes">pxr/usd/usdLux/rectLight.h</includedby>
    <includedby refid="shadow_a_p_i_8h" local="yes">pxr/usd/usdLux/shadowAPI.h</includedby>
    <includedby refid="shaping_a_p_i_8h" local="yes">pxr/usd/usdLux/shapingAPI.h</includedby>
    <includedby refid="sphere_light_8h" local="yes">pxr/usd/usdLux/sphereLight.h</includedby>
    <includedby refid="volume_light_a_p_i_8h" local="yes">pxr/usd/usdLux/volumeLightAPI.h</includedby>
    <includedby refid="asset_previews_a_p_i_8h" local="yes">pxr/usd/usdMedia/assetPreviewsAPI.h</includedby>
    <includedby refid="spatial_audio_8h" local="yes">pxr/usd/usdMedia/spatialAudio.h</includedby>
    <includedby refid="articulation_root_a_p_i_8h" local="yes">pxr/usd/usdPhysics/articulationRootAPI.h</includedby>
    <includedby refid="collision_a_p_i_8h" local="yes">pxr/usd/usdPhysics/collisionAPI.h</includedby>
    <includedby refid="collision_group_8h" local="yes">pxr/usd/usdPhysics/collisionGroup.h</includedby>
    <includedby refid="distance_joint_8h" local="yes">pxr/usd/usdPhysics/distanceJoint.h</includedby>
    <includedby refid="drive_a_p_i_8h" local="yes">pxr/usd/usdPhysics/driveAPI.h</includedby>
    <includedby refid="filtered_pairs_a_p_i_8h" local="yes">pxr/usd/usdPhysics/filteredPairsAPI.h</includedby>
    <includedby refid="fixed_joint_8h" local="yes">pxr/usd/usdPhysics/fixedJoint.h</includedby>
    <includedby refid="joint_8h" local="yes">pxr/usd/usdPhysics/joint.h</includedby>
    <includedby refid="limit_a_p_i_8h" local="yes">pxr/usd/usdPhysics/limitAPI.h</includedby>
    <includedby refid="mass_a_p_i_8h" local="yes">pxr/usd/usdPhysics/massAPI.h</includedby>
    <includedby refid="usd_physics_2material_a_p_i_8h" local="yes">pxr/usd/usdPhysics/materialAPI.h</includedby>
    <includedby refid="mesh_collision_a_p_i_8h" local="yes">pxr/usd/usdPhysics/meshCollisionAPI.h</includedby>
    <includedby refid="prismatic_joint_8h" local="yes">pxr/usd/usdPhysics/prismaticJoint.h</includedby>
    <includedby refid="revolute_joint_8h" local="yes">pxr/usd/usdPhysics/revoluteJoint.h</includedby>
    <includedby refid="rigid_body_a_p_i_8h" local="yes">pxr/usd/usdPhysics/rigidBodyAPI.h</includedby>
    <includedby refid="scene_8h" local="yes">pxr/usd/usdPhysics/scene.h</includedby>
    <includedby refid="spherical_joint_8h" local="yes">pxr/usd/usdPhysics/sphericalJoint.h</includedby>
    <includedby refid="usd_2usd_proc_2generative_procedural_8h" local="yes">pxr/usd/usdProc/generativeProcedural.h</includedby>
    <includedby refid="denoise_pass_8h" local="yes">pxr/usd/usdRender/denoisePass.h</includedby>
    <includedby refid="pass_8h" local="yes">pxr/usd/usdRender/pass.h</includedby>
    <includedby refid="product_8h" local="yes">pxr/usd/usdRender/product.h</includedby>
    <includedby refid="settings_8h" local="yes">pxr/usd/usdRender/settings.h</includedby>
    <includedby refid="settings_base_8h" local="yes">pxr/usd/usdRender/settingsBase.h</includedby>
    <includedby refid="usd_render_2spec_8h" local="yes">pxr/usd/usdRender/spec.h</includedby>
    <includedby refid="var_8h" local="yes">pxr/usd/usdRender/var.h</includedby>
    <includedby refid="usd_ri_2material_a_p_i_8h" local="yes">pxr/usd/usdRi/materialAPI.h</includedby>
    <includedby refid="render_pass_a_p_i_8h" local="yes">pxr/usd/usdRi/renderPassAPI.h</includedby>
    <includedby refid="spline_a_p_i_8h" local="yes">pxr/usd/usdRi/splineAPI.h</includedby>
    <includedby refid="statements_a_p_i_8h" local="yes">pxr/usd/usdRi/statementsAPI.h</includedby>
    <includedby refid="connectable_a_p_i_8h" local="yes">pxr/usd/usdShade/connectableAPI.h</includedby>
    <includedby refid="coord_sys_a_p_i_8h" local="yes">pxr/usd/usdShade/coordSysAPI.h</includedby>
    <includedby refid="usd_2usd_shade_2material_8h" local="yes">pxr/usd/usdShade/material.h</includedby>
    <includedby refid="material_binding_a_p_i_8h" local="yes">pxr/usd/usdShade/materialBindingAPI.h</includedby>
    <includedby refid="node_def_a_p_i_8h" local="yes">pxr/usd/usdShade/nodeDefAPI.h</includedby>
    <includedby refid="node_graph_8h" local="yes">pxr/usd/usdShade/nodeGraph.h</includedby>
    <includedby refid="shader_8h" local="yes">pxr/usd/usdShade/shader.h</includedby>
    <includedby refid="animation_8h" local="yes">pxr/usd/usdSkel/animation.h</includedby>
    <includedby refid="binding_a_p_i_8h" local="yes">pxr/usd/usdSkel/bindingAPI.h</includedby>
    <includedby refid="blend_shape_8h" local="yes">pxr/usd/usdSkel/blendShape.h</includedby>
    <includedby refid="root_8h" local="yes">pxr/usd/usdSkel/root.h</includedby>
    <includedby refid="skeleton_8h" local="yes">pxr/usd/usdSkel/skeleton.h</includedby>
    <includedby refid="backdrop_8h" local="yes">pxr/usd/usdUI/backdrop.h</includedby>
    <includedby refid="node_graph_node_a_p_i_8h" local="yes">pxr/usd/usdUI/nodeGraphNodeAPI.h</includedby>
    <includedby refid="scene_graph_prim_a_p_i_8h" local="yes">pxr/usd/usdUI/sceneGraphPrimAPI.h</includedby>
    <includedby refid="sparse_value_writer_8h" local="yes">pxr/usd/usdUtils/sparseValueWriter.h</includedby>
    <includedby refid="field3_d_asset_8h" local="yes">pxr/usd/usdVol/field3DAsset.h</includedby>
    <includedby refid="field_asset_8h" local="yes">pxr/usd/usdVol/fieldAsset.h</includedby>
    <includedby refid="field_base_8h" local="yes">pxr/usd/usdVol/fieldBase.h</includedby>
    <includedby refid="open_v_d_b_asset_8h" local="yes">pxr/usd/usdVol/openVDBAsset.h</includedby>
    <includedby refid="usd_2usd_vol_2volume_8h" local="yes">pxr/usd/usdVol/volume.h</includedby>
    <includedby refid="aov_8h" local="yes">pxr/imaging/hd/aov.h</includedby>
    <includedby refid="basis_curves_topology_8h" local="yes">pxr/imaging/hd/basisCurvesTopology.h</includedby>
    <includedby refid="buffer_array_8h" local="yes">pxr/imaging/hd/bufferArray.h</includedby>
    <includedby refid="buffer_array_range_8h" local="yes">pxr/imaging/hd/bufferArrayRange.h</includedby>
    <includedby refid="command_8h" local="yes">pxr/imaging/hd/command.h</includedby>
    <includedby refid="data_source_8h" local="yes">pxr/imaging/hd/dataSource.h</includedby>
    <includedby refid="driver_8h" local="yes">pxr/imaging/hd/driver.h</includedby>
    <includedby refid="ext_computation_context_8h" local="yes">pxr/imaging/hd/extComputationContext.h</includedby>
    <includedby refid="ext_computation_utils_8h" local="yes">pxr/imaging/hd/extComputationUtils.h</includedby>
    <includedby refid="material_network_interface_8h" local="yes">pxr/imaging/hd/materialNetworkInterface.h</includedby>
    <includedby refid="hd_2mesh_topology_8h" local="yes">pxr/imaging/hd/meshTopology.h</includedby>
    <includedby refid="mesh_util_8h" local="yes">pxr/imaging/hd/meshUtil.h</includedby>
    <includedby refid="render_pass_state_8h" local="yes">pxr/imaging/hd/renderPassState.h</includedby>
    <includedby refid="scene_delegate_8h" local="yes">pxr/imaging/hd/sceneDelegate.h</includedby>
    <includedby refid="task_8h" local="yes">pxr/imaging/hd/task.h</includedby>
    <includedby refid="time_sample_array_8h" local="yes">pxr/imaging/hd/timeSampleArray.h</includedby>
    <includedby refid="imaging_2hd_2types_8h" local="yes">pxr/imaging/hd/types.h</includedby>
    <includedby refid="vt_buffer_source_8h" local="yes">pxr/imaging/hd/vtBufferSource.h</includedby>
    <includedby refid="rman_2instancer_8h" local="yes">pxr/imaging/hdPrman/instancer.h</includedby>
    <includedby refid="buffer_utils_8h" local="yes">pxr/imaging/hdSt/bufferUtils.h</includedby>
    <includedby refid="ext_comp_cpu_computation_8h" local="yes">pxr/imaging/hdSt/extCompCpuComputation.h</includedby>
    <includedby refid="ext_comp_gpu_computation_8h" local="yes">pxr/imaging/hdSt/extCompGpuComputation.h</includedby>
    <includedby refid="t_2ext_computation_8h" local="yes">pxr/imaging/hdSt/extComputation.h</includedby>
    <includedby refid="t_2light_8h" local="yes">pxr/imaging/hdSt/light.h</includedby>
    <includedby refid="image_8h" local="yes">pxr/imaging/hio/image.h</includedby>
    <includedby refid="px_osd_2mesh_topology_8h" local="yes">pxr/imaging/pxOsd/meshTopology.h</includedby>
    <includedby refid="delegate_8h" local="yes">pxr/usdImaging/usdImaging/delegate.h</includedby>
    <includedby refid="renderer_settings_8h" local="yes">pxr/usdImaging/usdImagingGL/rendererSettings.h</includedby>
    <incdepgraph>
      <node id="47895">
        <label>list</label>
      </node>
      <node id="47857">
        <label>locale</label>
      </node>
      <node id="47903">
        <label>atomic</label>
      </node>
      <node id="47879">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="47880" relation="include">
        </childnode>
        <childnode refid="47874" relation="include">
        </childnode>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47854" relation="include">
        </childnode>
        <childnode refid="47881" relation="include">
        </childnode>
      </node>
      <node id="47899">
        <label>functional</label>
      </node>
      <node id="47853">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="47854" relation="include">
        </childnode>
      </node>
      <node id="47916">
        <label>limits</label>
      </node>
      <node id="47859">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="47928">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="47874">
        <label>cstdint</label>
      </node>
      <node id="47855">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="47854" relation="include">
        </childnode>
      </node>
      <node id="47887">
        <label>cmath</label>
      </node>
      <node id="47884">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47885" relation="include">
        </childnode>
        <childnode refid="47886" relation="include">
        </childnode>
        <childnode refid="47879" relation="include">
        </childnode>
        <childnode refid="47888" relation="include">
        </childnode>
        <childnode refid="47875" relation="include">
        </childnode>
      </node>
      <node id="47873">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47855" relation="include">
        </childnode>
        <childnode refid="47874" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
        <childnode refid="47875" relation="include">
        </childnode>
      </node>
      <node id="47894">
        <label>cstdarg</label>
      </node>
      <node id="47867">
        <label>string</label>
      </node>
      <node id="47908">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47863" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
        <childnode refid="47875" relation="include">
        </childnode>
      </node>
      <node id="47878">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47853" relation="include">
        </childnode>
      </node>
      <node id="47890">
        <label>map</label>
      </node>
      <node id="47880">
        <label>cinttypes</label>
      </node>
      <node id="47850">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="47924">
        <label>unordered_set</label>
      </node>
      <node id="47901">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="47902" relation="include">
        </childnode>
      </node>
      <node id="47865">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47866" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
        <childnode refid="47869" relation="include">
        </childnode>
      </node>
      <node id="47905">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="47853" relation="include">
        </childnode>
      </node>
      <node id="47922">
        <label>stddef.h</label>
      </node>
      <node id="47885">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47854" relation="include">
        </childnode>
      </node>
      <node id="47893">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="47854" relation="include">
        </childnode>
      </node>
      <node id="47876">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
      </node>
      <node id="47913">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47914" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
      </node>
      <node id="47912">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47913" relation="include">
        </childnode>
        <childnode refid="47915" relation="include">
        </childnode>
        <childnode refid="47917" relation="include">
        </childnode>
      </node>
      <node id="47914">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="47853" relation="include">
        </childnode>
      </node>
      <node id="47856">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="47855" relation="include">
        </childnode>
        <childnode refid="47857" relation="include">
        </childnode>
        <childnode refid="47858" relation="include">
        </childnode>
      </node>
      <node id="47881">
        <label>sys/types.h</label>
      </node>
      <node id="47882">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47854" relation="include">
        </childnode>
        <childnode refid="47865" relation="include">
        </childnode>
        <childnode refid="47883" relation="include">
        </childnode>
        <childnode refid="47893" relation="include">
        </childnode>
        <childnode refid="47876" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
        <childnode refid="47892" relation="include">
        </childnode>
      </node>
      <node id="47868">
        <label>typeinfo</label>
      </node>
      <node id="47861">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="47860">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="47918">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47919" relation="include">
        </childnode>
        <childnode refid="47883" relation="include">
        </childnode>
        <childnode refid="47923" relation="include">
        </childnode>
        <childnode refid="47873" relation="include">
        </childnode>
        <childnode refid="47903" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47892" relation="include">
        </childnode>
        <childnode refid="47891" relation="include">
        </childnode>
      </node>
      <node id="47902">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47903" relation="include">
        </childnode>
        <childnode refid="47904" relation="include">
        </childnode>
        <childnode refid="47874" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47892" relation="include">
        </childnode>
      </node>
      <node id="47886">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47854" relation="include">
        </childnode>
        <childnode refid="47879" relation="include">
        </childnode>
        <childnode refid="47887" relation="include">
        </childnode>
      </node>
      <node id="47892">
        <label>vector</label>
      </node>
      <node id="47906">
        <label>pxr/base/vt/hash.h</label>
        <link refid="vt_2hash_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47905" relation="include">
        </childnode>
        <childnode refid="47883" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
        <childnode refid="47875" relation="include">
        </childnode>
      </node>
      <node id="47852">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="47853" relation="include">
        </childnode>
      </node>
      <node id="47864">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47856" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
      </node>
      <node id="47915">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="47916" relation="include">
        </childnode>
        <childnode refid="47913" relation="include">
        </childnode>
      </node>
      <node id="47875">
        <label>utility</label>
      </node>
      <node id="47896">
        <label>sstream</label>
      </node>
      <node id="47854">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="47909">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47905" relation="include">
        </childnode>
        <childnode refid="47893" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
      </node>
      <node id="47870">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="47854" relation="include">
        </childnode>
      </node>
      <node id="47883">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47884" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47889" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47890" relation="include">
        </childnode>
        <childnode refid="47863" relation="include">
        </childnode>
        <childnode refid="47891" relation="include">
        </childnode>
        <childnode refid="47869" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
        <childnode refid="47875" relation="include">
        </childnode>
        <childnode refid="47892" relation="include">
        </childnode>
      </node>
      <node id="47888">
        <label>math.h</label>
      </node>
      <node id="47877">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47878" relation="include">
        </childnode>
        <childnode refid="47870" relation="include">
        </childnode>
        <childnode refid="47879" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47882" relation="include">
        </childnode>
        <childnode refid="47894" relation="include">
        </childnode>
        <childnode refid="47889" relation="include">
        </childnode>
        <childnode refid="47895" relation="include">
        </childnode>
        <childnode refid="47891" relation="include">
        </childnode>
        <childnode refid="47896" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
        <childnode refid="47892" relation="include">
        </childnode>
      </node>
      <node id="47862">
        <label>iosfwd</label>
      </node>
      <node id="47904">
        <label>cstdlib</label>
      </node>
      <node id="47920">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47921" relation="include">
        </childnode>
        <childnode refid="47922" relation="include">
        </childnode>
      </node>
      <node id="47897">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47898" relation="include">
        </childnode>
        <childnode refid="47900" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47863" relation="include">
        </childnode>
        <childnode refid="47891" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
        <childnode refid="47892" relation="include">
        </childnode>
        <childnode refid="47901" relation="include">
        </childnode>
      </node>
      <node id="47858">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="47910">
        <label>pxr/base/vt/types.h</label>
        <link refid="base_2vt_2types_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47905" relation="include">
        </childnode>
        <childnode refid="47909" relation="include">
        </childnode>
        <childnode refid="47879" relation="include">
        </childnode>
        <childnode refid="47911" relation="include">
        </childnode>
        <childnode refid="47912" relation="include">
        </childnode>
        <childnode refid="47893" relation="include">
        </childnode>
        <childnode refid="47918" relation="include">
        </childnode>
        <childnode refid="47925" relation="include">
        </childnode>
        <childnode refid="47926" relation="include">
        </childnode>
        <childnode refid="47927" relation="include">
        </childnode>
        <childnode refid="47889" relation="include">
        </childnode>
        <childnode refid="47867" relation="include">
        </childnode>
      </node>
      <node id="47927">
        <label>cstddef</label>
      </node>
      <node id="47911">
        <label>pxr/base/gf/declare.h</label>
        <link refid="base_2gf_2declare_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
      </node>
      <node id="47900">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47863" relation="include">
        </childnode>
      </node>
      <node id="47919">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47878" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47885" relation="include">
        </childnode>
        <childnode refid="47870" relation="include">
        </childnode>
        <childnode refid="47920" relation="include">
        </childnode>
        <childnode refid="47922" relation="include">
        </childnode>
      </node>
      <node id="47851">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47855" relation="include">
        </childnode>
        <childnode refid="47856" relation="include">
        </childnode>
        <childnode refid="47859" relation="include">
        </childnode>
        <childnode refid="47860" relation="include">
        </childnode>
        <childnode refid="47861" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47863" relation="include">
        </childnode>
      </node>
      <node id="47926">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="47872">
        <label>type_traits</label>
      </node>
      <node id="47891">
        <label>set</label>
      </node>
      <node id="47871">
        <label>pxr/base/tf/anyUniquePtr.h</label>
        <link refid="any_unique_ptr_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
      </node>
      <node id="47866">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="47853" relation="include">
        </childnode>
      </node>
      <node id="47921">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="47854" relation="include">
        </childnode>
      </node>
      <node id="47889">
        <label>cstring</label>
      </node>
      <node id="47917">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
      </node>
      <node id="47863">
        <label>memory</label>
      </node>
      <node id="47898">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47878" relation="include">
        </childnode>
        <childnode refid="47893" relation="include">
        </childnode>
        <childnode refid="47852" relation="include">
        </childnode>
        <childnode refid="47899" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
      </node>
      <node id="47923">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47854" relation="include">
        </childnode>
        <childnode refid="47924" relation="include">
        </childnode>
      </node>
      <node id="47869">
        <label>typeindex</label>
      </node>
      <node id="47849">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47851" relation="include">
        </childnode>
        <childnode refid="47864" relation="include">
        </childnode>
        <childnode refid="47865" relation="include">
        </childnode>
        <childnode refid="47870" relation="include">
        </childnode>
        <childnode refid="47855" relation="include">
        </childnode>
        <childnode refid="47871" relation="include">
        </childnode>
        <childnode refid="47873" relation="include">
        </childnode>
        <childnode refid="47876" relation="include">
        </childnode>
        <childnode refid="47877" relation="include">
        </childnode>
        <childnode refid="47884" relation="include">
        </childnode>
        <childnode refid="47897" relation="include">
        </childnode>
        <childnode refid="47905" relation="include">
        </childnode>
        <childnode refid="47906" relation="include">
        </childnode>
        <childnode refid="47907" relation="include">
        </childnode>
        <childnode refid="47909" relation="include">
        </childnode>
        <childnode refid="47910" relation="include">
        </childnode>
        <childnode refid="47928" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
      </node>
      <node id="47925">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="47907">
        <label>pxr/base/vt/streamOut.h</label>
        <link refid="stream_out_8h_source"/>
        <childnode refid="47850" relation="include">
        </childnode>
        <childnode refid="47905" relation="include">
        </childnode>
        <childnode refid="47882" relation="include">
        </childnode>
        <childnode refid="47908" relation="include">
        </childnode>
        <childnode refid="47862" relation="include">
        </childnode>
        <childnode refid="47868" relation="include">
        </childnode>
        <childnode refid="47872" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="48266">
        <label>pxr/imaging/hd/rendererPluginRegistry.h</label>
        <link refid="renderer_plugin_registry_8h_source"/>
      </node>
      <node id="48397">
        <label>pxr/imaging/hdSt/commandBuffer.h</label>
        <link refid="command_buffer_8h_source"/>
        <childnode refid="48302" relation="include">
        </childnode>
      </node>
      <node id="48595">
        <label>pxr/imaging/hdSt/bufferResource.h</label>
        <link refid="buffer_resource_8h_source"/>
        <childnode refid="48398" relation="include">
        </childnode>
        <childnode refid="48400" relation="include">
        </childnode>
      </node>
      <node id="47945">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="48308">
        <label>pxr/imaging/hdx/renderSetupTask.h</label>
        <link refid="render_setup_task_8h_source"/>
        <childnode refid="48309" relation="include">
        </childnode>
        <childnode refid="48251" relation="include">
        </childnode>
        <childnode refid="48252" relation="include">
        </childnode>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48088">
        <label>pxr/usd/usdGeom/pointBased.h</label>
        <link refid="point_based_8h"/>
        <childnode refid="48089" relation="include">
        </childnode>
        <childnode refid="48093" relation="include">
        </childnode>
        <childnode refid="48094" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
      </node>
      <node id="48036">
        <label>pxr/usd/usdGeom/visibilityAPI.h</label>
        <link refid="visibility_a_p_i_8h"/>
      </node>
      <node id="47977">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="48119">
        <label>pxr/usd/usd/primRange.h</label>
        <link refid="prim_range_8h_source"/>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48391">
        <label>pxr/imaging/hd/changeTracker.h</label>
        <link refid="change_tracker_8h_source"/>
        <childnode refid="48259" relation="include">
        </childnode>
        <childnode refid="48278" relation="include">
        </childnode>
        <childnode refid="48392" relation="include">
        </childnode>
        <childnode refid="48288" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48078">
        <label>pxr/usd/usdGeom/xformable.h</label>
        <link refid="xformable_8h"/>
        <childnode refid="48079" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48109" relation="include">
        </childnode>
        <childnode refid="48076" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="47949" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="48110" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48412">
        <label>pxr/imaging/hd/coneSchema.h</label>
        <link refid="cone_schema_8h_source"/>
      </node>
      <node id="48211">
        <label>pxr/usd/sdf/listEditor.h</label>
        <link refid="list_editor_8h_source"/>
        <childnode refid="48212" relation="include">
        </childnode>
        <childnode refid="48222" relation="include">
        </childnode>
      </node>
      <node id="48085">
        <label>pxr/usd/usdGeom/cylinder.h</label>
        <link refid="usd_2usd_geom_2cylinder_8h"/>
      </node>
      <node id="48269">
        <label>pxr/imaging/hdEmbree/renderDelegate.h</label>
        <link refid="mbree_2render_delegate_8h_source"/>
      </node>
      <node id="48562">
        <label>pxr/imaging/hd/types.h</label>
        <link refid="imaging_2hd_2types_8h_source"/>
        <childnode refid="48379" relation="include">
        </childnode>
        <childnode refid="48563" relation="include">
        </childnode>
        <childnode refid="48568" relation="include">
        </childnode>
        <childnode refid="48391" relation="include">
        </childnode>
        <childnode refid="48406" relation="include">
        </childnode>
        <childnode refid="48578" relation="include">
        </childnode>
        <childnode refid="48389" relation="include">
        </childnode>
        <childnode refid="48579" relation="include">
        </childnode>
        <childnode refid="48580" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48581" relation="include">
        </childnode>
        <childnode refid="48283" relation="include">
        </childnode>
        <childnode refid="48582" relation="include">
        </childnode>
        <childnode refid="48583" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48398" relation="include">
        </childnode>
        <childnode refid="48595" relation="include">
        </childnode>
        <childnode refid="48596" relation="include">
        </childnode>
        <childnode refid="48574" relation="include">
        </childnode>
        <childnode refid="48575" relation="include">
        </childnode>
        <childnode refid="48597" relation="include">
        </childnode>
        <childnode refid="48598" relation="include">
        </childnode>
        <childnode refid="48599" relation="include">
        </childnode>
        <childnode refid="48600" relation="include">
        </childnode>
        <childnode refid="48601" relation="include">
        </childnode>
        <childnode refid="48346" relation="include">
        </childnode>
        <childnode refid="48602" relation="include">
        </childnode>
      </node>
      <node id="48311">
        <label>pxr/imaging/hdx/oitVolumeRenderTask.h</label>
        <link refid="oit_volume_render_task_8h_source"/>
      </node>
      <node id="48510">
        <label>pxr/imaging/hd/flattenedMaterialBindingsDataSourceProvider.h</label>
        <link refid="flattened_material_bindings_data_source_provider_8h_source"/>
      </node>
      <node id="48489">
        <label>pxr/imaging/hdsi/coordSysPrimSceneIndex.h</label>
        <link refid="coord_sys_prim_scene_index_8h_source"/>
      </node>
      <node id="48463">
        <label>pxr/imaging/hd/sphereSchema.h</label>
        <link refid="sphere_schema_8h_source"/>
      </node>
      <node id="48250">
        <label>pxr/imaging/hdSt/simpleLightingShader.h</label>
        <link refid="simple_lighting_shader_8h_source"/>
      </node>
      <node id="48389">
        <label>pxr/imaging/hd/dirtyList.h</label>
        <link refid="dirty_list_8h_source"/>
        <childnode refid="48278" relation="include">
        </childnode>
      </node>
      <node id="48414">
        <label>pxr/imaging/hd/coordSysSchema.h</label>
        <link refid="coord_sys_schema_8h_source"/>
      </node>
      <node id="48476">
        <label>pxr/usdImaging/usdImaging/modelSchema.h</label>
        <link refid="model_schema_8h_source"/>
      </node>
      <node id="47956">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="48375">
        <label>pxr/usd/sdf/predicateLibrary.h</label>
        <link refid="predicate_library_8h_source"/>
        <childnode refid="48374" relation="include">
        </childnode>
        <childnode refid="48376" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
      </node>
      <node id="48304">
        <label>pxr/imaging/hdx/pickFromRenderBufferTask.h</label>
        <link refid="pick_from_render_buffer_task_8h_source"/>
      </node>
      <node id="48236">
        <label>pxr/usd/sdf/declareSpec.h</label>
        <link refid="declare_spec_8h_source"/>
        <childnode refid="48217" relation="include">
        </childnode>
        <childnode refid="48214" relation="include">
        </childnode>
        <childnode refid="48216" relation="include">
        </childnode>
        <childnode refid="48215" relation="include">
        </childnode>
        <childnode refid="48218" relation="include">
        </childnode>
        <childnode refid="48209" relation="include">
        </childnode>
        <childnode refid="48219" relation="include">
        </childnode>
        <childnode refid="48220" relation="include">
        </childnode>
      </node>
      <node id="48023">
        <label>pxr/usdImaging/usdImaging/dataSourcePrim.h</label>
        <link refid="data_source_prim_8h_source"/>
        <childnode refid="48024" relation="include">
        </childnode>
        <childnode refid="48025" relation="include">
        </childnode>
        <childnode refid="48033" relation="include">
        </childnode>
        <childnode refid="48022" relation="include">
        </childnode>
        <childnode refid="48034" relation="include">
        </childnode>
        <childnode refid="48035" relation="include">
        </childnode>
      </node>
      <node id="48329">
        <label>pxr/imaging/hdSt/shaderCode.h</label>
        <link refid="shader_code_8h_source"/>
        <childnode refid="48330" relation="include">
        </childnode>
        <childnode refid="48331" relation="include">
        </childnode>
        <childnode refid="48333" relation="include">
        </childnode>
        <childnode refid="48334" relation="include">
        </childnode>
        <childnode refid="48335" relation="include">
        </childnode>
      </node>
      <node id="48043">
        <label>pxr/usd/usdLux/shapingAPI.h</label>
        <link refid="shaping_a_p_i_8h"/>
      </node>
      <node id="47935">
        <label>pxr/usd/pcp/cache.h</label>
        <link refid="pcp_2cache_8h_source"/>
        <childnode refid="47936" relation="include">
        </childnode>
        <childnode refid="47937" relation="include">
        </childnode>
      </node>
      <node id="48519">
        <label>pxr/imaging/hd/invalidatableContainerDataSource.h</label>
        <link refid="invalidatable_container_data_source_8h_source"/>
      </node>
      <node id="48554">
        <label>pxr/imaging/hd/materialNetwork2Interface.h</label>
        <link refid="material_network2_interface_8h_source"/>
      </node>
      <node id="48420">
        <label>pxr/imaging/hd/extComputationOutputSchema.h</label>
        <link refid="ext_computation_output_schema_8h_source"/>
      </node>
      <node id="48118">
        <label>pxr/usd/usd/primCompositionQuery.h</label>
        <link refid="prim_composition_query_8h"/>
      </node>
      <node id="48462">
        <label>pxr/imaging/hd/selectionSchema.h</label>
        <link refid="selection_schema_8h_source"/>
      </node>
      <node id="48151">
        <label>pxr/usd/usdShade/types.h</label>
        <link refid="usd_2usd_shade_2types_8h_source"/>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48149" relation="include">
        </childnode>
        <childnode refid="48150" relation="include">
        </childnode>
        <childnode refid="48152" relation="include">
        </childnode>
      </node>
      <node id="48602">
        <label>pxr/imaging/hdx/hgiConversions.h</label>
        <link refid="hdx_2hgi_conversions_8h_source"/>
      </node>
      <node id="48316">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="48252" relation="include">
        </childnode>
      </node>
      <node id="48194">
        <label>pxr/usd/pcp/pyUtils.h</label>
        <link refid="usd_2pcp_2py_utils_8h_source"/>
      </node>
      <node id="48277">
        <label>pxr/imaging/hd/resourceRegistry.h</label>
        <link refid="resource_registry_8h_source"/>
        <childnode refid="48278" relation="include">
        </childnode>
        <childnode refid="48326" relation="include">
        </childnode>
      </node>
      <node id="48141">
        <label>pxr/usd/usdShade/shader.h</label>
        <link refid="shader_8h"/>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
      </node>
      <node id="48405">
        <label>pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h</label>
        <link refid="ni_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="48185">
        <label>pxr/usd/usd/resolver.h</label>
        <link refid="usd_2resolver_8h_source"/>
      </node>
      <node id="48044">
        <label>pxr/usd/usdLux/volumeLightAPI.h</label>
        <link refid="volume_light_a_p_i_8h"/>
      </node>
      <node id="48016">
        <label>pxr/usd/usd/modelAPI.h</label>
        <link refid="model_a_p_i_8h"/>
      </node>
      <node id="47950">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="48517">
        <label>pxr/usdImaging/usdImaging/flattenedModelDataSourceProvider.h</label>
        <link refid="flattened_model_data_source_provider_8h_source"/>
      </node>
      <node id="48493">
        <label>pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h</label>
        <link refid="material_binding_resolving_scene_index_8h_source"/>
      </node>
      <node id="48465">
        <label>pxr/imaging/hd/subdivisionTagsSchema.h</label>
        <link refid="subdivision_tags_schema_8h_source"/>
        <childnode refid="48426" relation="include">
        </childnode>
        <childnode refid="48466" relation="include">
        </childnode>
      </node>
      <node id="48017">
        <label>pxr/usd/usdGeom/modelAPI.h</label>
        <link refid="eom_2model_a_p_i_8h"/>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48488">
        <label>pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h</label>
        <link refid="generative_procedural_resolving_scene_index_8h_source"/>
      </node>
      <node id="48260">
        <label>pxr/imaging/hd/rendererPlugin.h</label>
        <link refid="renderer_plugin_8h_source"/>
        <childnode refid="48261" relation="include">
        </childnode>
        <childnode refid="48262" relation="include">
        </childnode>
        <childnode refid="48263" relation="include">
        </childnode>
      </node>
      <node id="48183">
        <label>pxr/usd/pcp/iterator.h</label>
        <link refid="usd_2pcp_2iterator_8h_source"/>
        <childnode refid="47934" relation="include">
        </childnode>
        <childnode refid="48184" relation="include">
        </childnode>
        <childnode refid="48185" relation="include">
        </childnode>
      </node>
      <node id="47998">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="47999" relation="include">
        </childnode>
        <childnode refid="48000" relation="include">
        </childnode>
        <childnode refid="48001" relation="include">
        </childnode>
        <childnode refid="48002" relation="include">
        </childnode>
      </node>
      <node id="48247">
        <label>pxr/usd/sdf/variableExpression.h</label>
        <link refid="variable_expression_8h"/>
      </node>
      <node id="48515">
        <label>pxr/imaging/hd/flattenedXformDataSourceProvider.h</label>
        <link refid="flattened_xform_data_source_provider_8h_source"/>
      </node>
      <node id="48310">
        <label>pxr/imaging/hdx/oitRenderTask.h</label>
        <link refid="oit_render_task_8h_source"/>
      </node>
      <node id="48533">
        <label>pxr/imaging/hdPrman/renderTerminalOutputInvalidatingSceneIndexPlugin.h</label>
        <link refid="render_terminal_output_invalidating_scene_index_plugin_8h_source"/>
      </node>
      <node id="48348">
        <label>pxr/imaging/hdSt/ptexTextureObject.h</label>
        <link refid="ptex_texture_object_8h_source"/>
      </node>
      <node id="48398">
        <label>pxr/imaging/hdSt/binding.h</label>
        <link refid="imaging_2hd_st_2binding_8h_source"/>
        <childnode refid="48334" relation="include">
        </childnode>
        <childnode refid="48250" relation="include">
        </childnode>
      </node>
      <node id="48129">
        <label>pxr/usd/usdPhysics/fixedJoint.h</label>
        <link refid="fixed_joint_8h"/>
      </node>
      <node id="48167">
        <label>pxr/usdImaging/usdImaging/lightAPIAdapter.h</label>
        <link refid="light_a_p_i_adapter_8h_source"/>
      </node>
      <node id="48327">
        <label>pxr/imaging/hdSt/extCompGpuComputationResource.h</label>
        <link refid="ext_comp_gpu_computation_resource_8h_source"/>
        <childnode refid="48328" relation="include">
        </childnode>
      </node>
      <node id="48285">
        <label>pxr/imaging/hdSt/basisCurves.h</label>
        <link refid="imaging_2hd_st_2basis_curves_8h_source"/>
      </node>
      <node id="48558">
        <label>pxr/imaging/hd/meshUtil.h</label>
        <link refid="mesh_util_8h_source"/>
        <childnode refid="48559" relation="include">
        </childnode>
      </node>
      <node id="48108">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="48359">
        <label>pxr/usd/ar/resolverScopedCache.h</label>
        <link refid="resolver_scoped_cache_8h"/>
      </node>
      <node id="48427">
        <label>pxr/imaging/hd/imageShaderSchema.h</label>
        <link refid="image_shader_schema_8h_source"/>
      </node>
      <node id="48251">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="48439">
        <label>pxr/imaging/hd/materialConnectionSchema.h</label>
        <link refid="material_connection_schema_8h_source"/>
      </node>
      <node id="47996">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="48347">
        <label>pxr/imaging/hdSt/dynamicUvTextureObject.h</label>
        <link refid="dynamic_uv_texture_object_8h_source"/>
      </node>
      <node id="48057">
        <label>pxr/usd/usdShade/connectableAPI.h</label>
        <link refid="connectable_a_p_i_8h"/>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="48059" relation="include">
        </childnode>
        <childnode refid="48033" relation="include">
        </childnode>
      </node>
      <node id="48275">
        <label>pxr/imaging/hd/renderSettings.h</label>
        <link refid="render_settings_8h_source"/>
        <childnode refid="48276" relation="include">
        </childnode>
      </node>
      <node id="48384">
        <label>pxr/imaging/hd/bufferArray.h</label>
        <link refid="buffer_array_8h_source"/>
        <childnode refid="48385" relation="include">
        </childnode>
        <childnode refid="48400" relation="include">
        </childnode>
        <childnode refid="48340" relation="include">
        </childnode>
        <childnode refid="48339" relation="include">
        </childnode>
        <childnode refid="48341" relation="include">
        </childnode>
        <childnode refid="48336" relation="include">
        </childnode>
      </node>
      <node id="48313">
        <label>pxr/imaging/hdx/shadowTask.h</label>
        <link refid="shadow_task_8h_source"/>
        <childnode refid="48252" relation="include">
        </childnode>
      </node>
      <node id="48175">
        <label>pxr/usd/usd/resolveTarget.h</label>
        <link refid="resolve_target_8h_source"/>
        <childnode refid="48074" relation="include">
        </childnode>
      </node>
      <node id="48445">
        <label>pxr/imaging/hd/sampleFilterSchema.h</label>
        <link refid="sample_filter_schema_8h_source"/>
      </node>
      <node id="48604">
        <label>pxr/imaging/pxOsd/refinerFactory.h</label>
        <link refid="refiner_factory_8h"/>
      </node>
      <node id="48070">
        <label>pxr/usd/usd/collectionPredicateLibrary.h</label>
        <link refid="collection_predicate_library_8h"/>
      </node>
      <node id="48063">
        <label>pxr/usd/usdSkel/bindingAPI.h</label>
        <link refid="binding_a_p_i_8h"/>
      </node>
      <node id="48019">
        <label>pxr/usd/usdGeom/primvarsAPI.h</label>
        <link refid="primvars_a_p_i_8h"/>
        <childnode refid="48020" relation="include">
        </childnode>
        <childnode refid="48021" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48273">
        <label>pxr/imaging/hdSt/renderParam.h</label>
        <link refid="hd_st_2render_param_8h_source"/>
      </node>
      <node id="48094">
        <label>pxr/usd/usdGeom/nurbsPatch.h</label>
        <link refid="nurbs_patch_8h"/>
      </node>
      <node id="48192">
        <label>pxr/usd/pcp/targetIndex.h</label>
        <link refid="target_index_8h_source"/>
      </node>
      <node id="48130">
        <label>pxr/usd/usdPhysics/prismaticJoint.h</label>
        <link refid="prismatic_joint_8h"/>
      </node>
      <node id="48262">
        <label>pxr/imaging/hdPrmanLoader/rendererPlugin.h</label>
        <link refid="rman_loader_2renderer_plugin_8h_source"/>
      </node>
      <node id="48370">
        <label>pxr/usd/sdf/pathExpression.h</label>
        <link refid="path_expression_8h_source"/>
        <childnode refid="48371" relation="include">
        </childnode>
        <childnode refid="48374" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="47941" relation="include">
        </childnode>
        <childnode refid="48069" relation="include">
        </childnode>
      </node>
      <node id="48298">
        <label>pxr/imaging/hd/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="48268" relation="include">
        </childnode>
        <childnode refid="48299" relation="include">
        </childnode>
        <childnode refid="48300" relation="include">
        </childnode>
        <childnode refid="48301" relation="include">
        </childnode>
        <childnode refid="48302" relation="include">
        </childnode>
        <childnode refid="48303" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48337">
        <label>pxr/imaging/hdSt/bufferArrayRegistry.h</label>
        <link refid="buffer_array_registry_8h_source"/>
        <childnode refid="48326" relation="include">
        </childnode>
      </node>
      <node id="47987">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="47988" relation="include">
        </childnode>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="47990" relation="include">
        </childnode>
        <childnode refid="47991" relation="include">
        </childnode>
        <childnode refid="47992" relation="include">
        </childnode>
        <childnode refid="47993" relation="include">
        </childnode>
        <childnode refid="47994" relation="include">
        </childnode>
        <childnode refid="47995" relation="include">
        </childnode>
        <childnode refid="47996" relation="include">
        </childnode>
        <childnode refid="47997" relation="include">
        </childnode>
      </node>
      <node id="47958">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="48371">
        <label>pxr/usd/pcp/mapFunction.h</label>
        <link refid="map_function_8h_source"/>
        <childnode refid="47935" relation="include">
        </childnode>
        <childnode refid="48372" relation="include">
        </childnode>
        <childnode refid="48373" relation="include">
        </childnode>
        <childnode refid="48186" relation="include">
        </childnode>
      </node>
      <node id="48538">
        <label>pxr/imaging/hd/sceneIndexPluginRegistry.h</label>
        <link refid="scene_index_plugin_registry_8h_source"/>
      </node>
      <node id="48430">
        <label>pxr/imaging/hd/instanceIndicesSchema.h</label>
        <link refid="instance_indices_schema_8h_source"/>
      </node>
      <node id="48409">
        <label>pxr/imaging/hd/basisCurvesSchema.h</label>
        <link refid="basis_curves_schema_8h_source"/>
      </node>
      <node id="48111">
        <label>pxr/usd/usdVol/fieldBase.h</label>
        <link refid="field_base_8h"/>
        <childnode refid="48112" relation="include">
        </childnode>
      </node>
      <node id="48048">
        <label>pxr/usd/usdPhysics/driveAPI.h</label>
        <link refid="drive_a_p_i_8h"/>
      </node>
      <node id="47982">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="48077">
        <label>pxr/usd/usdGeom/xformOp.h</label>
        <link refid="xform_op_8h"/>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
      </node>
      <node id="48140">
        <label>pxr/usd/usdShade/nodeGraph.h</label>
        <link refid="node_graph_8h"/>
        <childnode refid="48058" relation="include">
        </childnode>
      </node>
      <node id="48039">
        <label>pxr/usd/usdLux/lightListAPI.h</label>
        <link refid="light_list_a_p_i_8h"/>
      </node>
      <node id="47941">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="47956" relation="include">
        </childnode>
        <childnode refid="47957" relation="include">
        </childnode>
        <childnode refid="47958" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48015" relation="include">
        </childnode>
      </node>
      <node id="48256">
        <label>pxr/imaging/glf/texture.h</label>
        <link refid="glf_2texture_8h"/>
        <childnode refid="48257" relation="include">
        </childnode>
      </node>
      <node id="48502">
        <label>pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h</label>
        <link refid="extent_resolving_scene_index_8h_source"/>
      </node>
      <node id="48227">
        <label>pxr/usd/sdf/childrenPolicies.h</label>
        <link refid="children_policies_8h_source"/>
        <childnode refid="48213" relation="include">
        </childnode>
      </node>
      <node id="48577">
        <label>pxr/imaging/hdSt/smoothNormals.h</label>
        <link refid="t_2smooth_normals_8h_source"/>
      </node>
      <node id="48540">
        <label>pxr/imaging/hdGp/generativeProceduralPlugin.h</label>
        <link refid="generative_procedural_plugin_8h_source"/>
        <childnode refid="48541" relation="include">
        </childnode>
      </node>
      <node id="48548">
        <label>pxr/usdImaging/usdImaging/dataSourceStage.h</label>
        <link refid="data_source_stage_8h_source"/>
      </node>
      <node id="48292">
        <label>pxr/imaging/hdSt/volume.h</label>
        <link refid="imaging_2hd_st_2volume_8h_source"/>
      </node>
      <node id="48202">
        <label>pxr/usd/usd/primDefinition.h</label>
        <link refid="prim_definition_8h_source"/>
        <childnode refid="48203" relation="include">
        </childnode>
        <childnode refid="48204" relation="include">
        </childnode>
        <childnode refid="47937" relation="include">
        </childnode>
      </node>
      <node id="48443">
        <label>pxr/imaging/hd/displayFilterSchema.h</label>
        <link refid="display_filter_schema_8h_source"/>
      </node>
      <node id="48361">
        <label>pxr/usd/ndr/property.h</label>
        <link refid="ndr_2property_8h"/>
        <childnode refid="48362" relation="include">
        </childnode>
        <childnode refid="48366" relation="include">
        </childnode>
      </node>
      <node id="48071">
        <label>pxr/usd/usd/notice.h</label>
        <link refid="usd_2usd_2notice_8h_source"/>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="48072" relation="include">
        </childnode>
      </node>
      <node id="48435">
        <label>pxr/imaging/hd/cameraSchema.h</label>
        <link refid="camera_schema_8h_source"/>
      </node>
      <node id="47939">
        <label>pxr/usd/usd/clipsAPI.h</label>
        <link refid="clips_a_p_i_8h"/>
        <childnode refid="47940" relation="include">
        </childnode>
      </node>
      <node id="48537">
        <label>pxr/imaging/hdSt/nurbsApproximatingSceneIndexPlugin.h</label>
        <link refid="nurbs_approximating_scene_index_plugin_8h_source"/>
      </node>
      <node id="47999">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="47994">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="48536">
        <label>pxr/imaging/hdSt/implicitSurfaceSceneIndexPlugin.h</label>
        <link refid="implicit_surface_scene_index_plugin_8h_source"/>
      </node>
      <node id="48516">
        <label>pxr/usdImaging/usdImaging/flattenedGeomModelDataSourceProvider.h</label>
        <link refid="flattened_geom_model_data_source_provider_8h_source"/>
      </node>
      <node id="48228">
        <label>pxr/usd/usdUtils/stitch.h</label>
        <link refid="stitch_8h"/>
      </node>
      <node id="48497">
        <label>pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h</label>
        <link refid="prim_type_notice_batching_scene_index_8h"/>
      </node>
      <node id="48054">
        <label>pxr/usd/usdPhysics/rigidBodyAPI.h</label>
        <link refid="rigid_body_a_p_i_8h"/>
      </node>
      <node id="48468">
        <label>pxr/imaging/hd/visibilitySchema.h</label>
        <link refid="visibility_schema_8h_source"/>
      </node>
      <node id="48485">
        <label>pxr/imaging/hd/mergingSceneIndex.h</label>
        <link refid="merging_scene_index_8h_source"/>
        <childnode refid="48278" relation="include">
        </childnode>
      </node>
      <node id="48383">
        <label>pxr/imaging/hd/basisCurvesTopology.h</label>
        <link refid="basis_curves_topology_8h_source"/>
        <childnode refid="48279" relation="include">
        </childnode>
      </node>
      <node id="48241">
        <label>pxr/imaging/hdPrman/cone.h</label>
        <link refid="imaging_2hd_prman_2cone_8h_source"/>
      </node>
      <node id="47988">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="48010">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="48018">
        <label>pxr/usd/usdGeom/motionAPI.h</label>
        <link refid="motion_a_p_i_8h"/>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48237">
        <label>pxr/usd/usdSkel/animMapper.h</label>
        <link refid="anim_mapper_8h"/>
        <childnode refid="48162" relation="include">
        </childnode>
        <childnode refid="48148" relation="include">
        </childnode>
      </node>
      <node id="48091">
        <label>pxr/usd/usdGeom/hermiteCurves.h</label>
        <link refid="hermite_curves_8h"/>
      </node>
      <node id="47953">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="48321">
        <label>pxr/imaging/hdx/visualizeAovTask.h</label>
        <link refid="visualize_aov_task_8h_source"/>
      </node>
      <node id="48186">
        <label>pxr/usd/usd/editTarget.h</label>
        <link refid="edit_target_8h_source"/>
        <childnode refid="48187" relation="include">
        </childnode>
        <childnode refid="48188" relation="include">
        </childnode>
        <childnode refid="47937" relation="include">
        </childnode>
        <childnode refid="48160" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
      </node>
      <node id="48132">
        <label>pxr/usd/usdPhysics/sphericalJoint.h</label>
        <link refid="spherical_joint_8h"/>
      </node>
      <node id="48109">
        <label>pxr/usd/usdGeom/xform.h</label>
        <link refid="xform_8h"/>
      </node>
      <node id="48014">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="48442">
        <label>pxr/imaging/hd/materialNodeSchema.h</label>
        <link refid="material_node_schema_8h_source"/>
        <childnode refid="48443" relation="include">
        </childnode>
        <childnode refid="48444" relation="include">
        </childnode>
        <childnode refid="48445" relation="include">
        </childnode>
      </node>
      <node id="48245">
        <label>pxr/imaging/hdPrman/sphere.h</label>
        <link refid="imaging_2hd_prman_2sphere_8h_source"/>
      </node>
      <node id="48137">
        <label>pxr/usd/usdRender/settings.h</label>
        <link refid="settings_8h"/>
      </node>
      <node id="48335">
        <label>pxr/imaging/hdSt/textureBinder.h</label>
        <link refid="texture_binder_8h_source"/>
      </node>
      <node id="48555">
        <label>pxr/imaging/hdPrman/matfiltConvertPreviewMaterial.h</label>
        <link refid="matfilt_convert_preview_material_8h_source"/>
      </node>
      <node id="48025">
        <label>pxr/usdImaging/usdImaging/dataSourceGprim.h</label>
        <link refid="data_source_gprim_8h_source"/>
        <childnode refid="48026" relation="include">
        </childnode>
        <childnode refid="48027" relation="include">
        </childnode>
        <childnode refid="48028" relation="include">
        </childnode>
        <childnode refid="48029" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
        <childnode refid="48032" relation="include">
        </childnode>
      </node>
      <node id="47972">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="47942">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="47943" relation="include">
        </childnode>
        <childnode refid="47949" relation="include">
        </childnode>
      </node>
      <node id="48349">
        <label>pxr/imaging/hdSt/textureHandleRegistry.h</label>
        <link refid="texture_handle_registry_8h_source"/>
      </node>
      <node id="47981">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="48201">
        <label>pxr/usd/sdf/siteUtils.h</label>
        <link refid="site_utils_8h"/>
      </node>
      <node id="48535">
        <label>pxr/imaging/hdSt/dependencySceneIndexPlugin.h</label>
        <link refid="dependency_scene_index_plugin_8h_source"/>
      </node>
      <node id="48354">
        <label>pxr/base/vt/valueFromPython.h</label>
        <link refid="value_from_python_8h"/>
      </node>
      <node id="48254">
        <label>pxr/imaging/hdx/simpleLightTask.h</label>
        <link refid="simple_light_task_8h_source"/>
      </node>
      <node id="48203">
        <label>pxr/usd/usd/primData.h</label>
        <link refid="prim_data_8h"/>
        <childnode refid="48068" relation="include">
        </childnode>
      </node>
      <node id="47947">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="48578">
        <label>pxr/imaging/hd/dirtyBitsTranslator.h</label>
        <link refid="dirty_bits_translator_8h_source"/>
      </node>
      <node id="48296">
        <label>pxr/imaging/hd/task.h</label>
        <link refid="task_8h_source"/>
        <childnode refid="48297" relation="include">
        </childnode>
        <childnode refid="48298" relation="include">
        </childnode>
        <childnode refid="48305" relation="include">
        </childnode>
        <childnode refid="48306" relation="include">
        </childnode>
        <childnode refid="48307" relation="include">
        </childnode>
        <childnode refid="48303" relation="include">
        </childnode>
        <childnode refid="48308" relation="include">
        </childnode>
        <childnode refid="48312" relation="include">
        </childnode>
        <childnode refid="48313" relation="include">
        </childnode>
        <childnode refid="48254" relation="include">
        </childnode>
        <childnode refid="48314" relation="include">
        </childnode>
        <childnode refid="48252" relation="include">
        </childnode>
      </node>
      <node id="48268">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="48152">
        <label>pxr/usd/usdShade/utils.h</label>
        <link refid="usd_2usd_shade_2utils_8h_source"/>
        <childnode refid="48149" relation="include">
        </childnode>
        <childnode refid="48150" relation="include">
        </childnode>
      </node>
      <node id="48205">
        <label>pxr/usd/usd/schemaRegistry.h</label>
        <link refid="schema_registry_8h_source"/>
        <childnode refid="48073" relation="include">
        </childnode>
        <childnode refid="48202" relation="include">
        </childnode>
        <childnode refid="47937" relation="include">
        </childnode>
      </node>
      <node id="48541">
        <label>pxr/imaging/hdGp/generativeProceduralPluginRegistry.h</label>
        <link refid="generative_procedural_plugin_registry_8h_source"/>
      </node>
      <node id="48499">
        <label>pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h</label>
        <link refid="render_settings_filtering_scene_index_8h_source"/>
      </node>
      <node id="48467">
        <label>pxr/imaging/hd/systemSchema.h</label>
        <link refid="system_schema_8h_source"/>
      </node>
      <node id="48179">
        <label>pxr/usd/pcp/node.h</label>
        <link refid="pcp_2node_8h_source"/>
        <childnode refid="48180" relation="include">
        </childnode>
        <childnode refid="47933" relation="include">
        </childnode>
        <childnode refid="48181" relation="include">
        </childnode>
        <childnode refid="48182" relation="include">
        </childnode>
        <childnode refid="48183" relation="include">
        </childnode>
        <childnode refid="47934" relation="include">
        </childnode>
        <childnode refid="48184" relation="include">
        </childnode>
        <childnode refid="48186" relation="include">
        </childnode>
        <childnode refid="48118" relation="include">
        </childnode>
        <childnode refid="48172" relation="include">
        </childnode>
        <childnode refid="48185" relation="include">
        </childnode>
        <childnode refid="48175" relation="include">
        </childnode>
      </node>
      <node id="48219">
        <label>pxr/usd/sdf/variantSetSpec.h</label>
        <link refid="variant_set_spec_8h"/>
      </node>
      <node id="48120">
        <label>pxr/usd/usd/property.h</label>
        <link refid="usd_2property_8h_source"/>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48156" relation="include">
        </childnode>
      </node>
      <node id="47990">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="48491">
        <label>pxr/imaging/hdsi/implicitSurfaceSceneIndex.h</label>
        <link refid="implicit_surface_scene_index_8h_source"/>
      </node>
      <node id="48318">
        <label>pxr/imaging/hdx/colorCorrectionTask.h</label>
        <link refid="color_correction_task_8h_source"/>
        <childnode refid="48252" relation="include">
        </childnode>
      </node>
      <node id="48501">
        <label>pxr/usdImaging/usdImaging/drawModeSceneIndex.h</label>
        <link refid="draw_mode_scene_index_8h_source"/>
      </node>
      <node id="48455">
        <label>pxr/imaging/hd/purposeSchema.h</label>
        <link refid="purpose_schema_8h_source"/>
      </node>
      <node id="48005">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="48089">
        <label>pxr/usd/usdGeom/curves.h</label>
        <link refid="curves_8h"/>
        <childnode refid="48090" relation="include">
        </childnode>
        <childnode refid="48091" relation="include">
        </childnode>
        <childnode refid="48092" relation="include">
        </childnode>
      </node>
      <node id="48069">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="47941" relation="include">
        </childnode>
      </node>
      <node id="47993">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="48447">
        <label>pxr/imaging/hd/nurbsCurvesSchema.h</label>
        <link refid="nurbs_curves_schema_8h_source"/>
      </node>
      <node id="48549">
        <label>pxr/usdImaging/usdImaging/flattenedDataSourceProviders.h</label>
        <link refid="usd_imaging_2usd_imaging_2flattened_data_source_providers_8h_source"/>
      </node>
      <node id="47943">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="47944" relation="include">
        </childnode>
        <childnode refid="47945" relation="include">
        </childnode>
        <childnode refid="47946" relation="include">
        </childnode>
        <childnode refid="47947" relation="include">
        </childnode>
        <childnode refid="47948" relation="include">
        </childnode>
      </node>
      <node id="48196">
        <label>pxr/usd/sdf/data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="48197" relation="include">
        </childnode>
      </node>
      <node id="48042">
        <label>pxr/usd/usdLux/shadowAPI.h</label>
        <link refid="shadow_a_p_i_8h"/>
      </node>
      <node id="48121">
        <label>pxr/usd/usd/attribute.h</label>
        <link refid="attribute_8h_source"/>
        <childnode refid="48074" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48146" relation="include">
        </childnode>
        <childnode refid="48147" relation="include">
        </childnode>
        <childnode refid="48077" relation="include">
        </childnode>
        <childnode refid="48149" relation="include">
        </childnode>
        <childnode refid="48150" relation="include">
        </childnode>
        <childnode refid="48151" relation="include">
        </childnode>
        <childnode refid="48152" relation="include">
        </childnode>
        <childnode refid="48153" relation="include">
        </childnode>
        <childnode refid="48148" relation="include">
        </childnode>
        <childnode refid="48154" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48155" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
      </node>
      <node id="47951">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="48156">
        <label>pxr/usd/usd/relationship.h</label>
        <link refid="relationship_8h_source"/>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48148" relation="include">
        </childnode>
        <childnode refid="48157" relation="include">
        </childnode>
      </node>
      <node id="47955">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="48218">
        <label>pxr/usd/sdf/relationshipSpec.h</label>
        <link refid="relationship_spec_8h"/>
        <childnode refid="48202" relation="include">
        </childnode>
      </node>
      <node id="48240">
        <label>pxr/imaging/hdPrman/basisCurves.h</label>
        <link refid="imaging_2hd_prman_2basis_curves_8h_source"/>
      </node>
      <node id="48209">
        <label>pxr/usd/sdf/spec.h</label>
        <link refid="sdf_2spec_8h"/>
        <childnode refid="48210" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48211" relation="include">
        </childnode>
        <childnode refid="48224" relation="include">
        </childnode>
        <childnode refid="48225" relation="include">
        </childnode>
        <childnode refid="48214" relation="include">
        </childnode>
        <childnode refid="48216" relation="include">
        </childnode>
        <childnode refid="48226" relation="include">
        </childnode>
        <childnode refid="48201" relation="include">
        </childnode>
        <childnode refid="48219" relation="include">
        </childnode>
        <childnode refid="48220" relation="include">
        </childnode>
        <childnode refid="48228" relation="include">
        </childnode>
      </node>
      <node id="48035">
        <label>pxr/usdImaging/usdVolImaging/dataSourceFieldAsset.h</label>
        <link refid="data_source_field_asset_8h_source"/>
      </node>
      <node id="48530">
        <label>pxr/imaging/hdGp/sceneIndexPlugin.h</label>
        <link refid="p_2scene_index_plugin_8h_source"/>
      </node>
      <node id="48100">
        <label>pxr/usd/usdSkel/root.h</label>
        <link refid="root_8h"/>
      </node>
      <node id="48330">
        <label>pxr/imaging/hdSt/geometricShader.h</label>
        <link refid="geometric_shader_8h_source"/>
      </node>
      <node id="48452">
        <label>pxr/imaging/hd/extComputationPrimvarSchema.h</label>
        <link refid="ext_computation_primvar_schema_8h_source"/>
        <childnode refid="48453" relation="include">
        </childnode>
      </node>
      <node id="48182">
        <label>pxr/usd/pcp/instanceKey.h</label>
        <link refid="instance_key_8h_source"/>
      </node>
      <node id="48052">
        <label>pxr/usd/usdPhysics/materialAPI.h</label>
        <link refid="usd_physics_2material_a_p_i_8h"/>
      </node>
      <node id="48047">
        <label>pxr/usd/usdPhysics/collisionAPI.h</label>
        <link refid="collision_a_p_i_8h"/>
      </node>
      <node id="48191">
        <label>pxr/usd/pcp/layerStack.h</label>
        <link refid="layer_stack_8h"/>
      </node>
      <node id="48255">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="48108" relation="include">
        </childnode>
      </node>
      <node id="48258">
        <label>pxr/imaging/hd/command.h</label>
        <link refid="command_8h_source"/>
        <childnode refid="48259" relation="include">
        </childnode>
      </node>
      <node id="48332">
        <label>pxr/imaging/hdSt/fallbackLightingShader.h</label>
        <link refid="fallback_lighting_shader_8h_source"/>
      </node>
      <node id="48545">
        <label>pxr/imaging/hd/selectionsSchema.h</label>
        <link refid="selections_schema_8h_source"/>
      </node>
      <node id="48231">
        <label>pxr/usd/sdf/childrenUtils.h</label>
        <link refid="children_utils_8h"/>
      </node>
      <node id="48450">
        <label>pxr/imaging/hd/primOriginSchema.h</label>
        <link refid="prim_origin_schema_8h_source"/>
        <childnode refid="48303" relation="include">
        </childnode>
      </node>
      <node id="48233">
        <label>pxr/usd/sdf/layerStateDelegate.h</label>
        <link refid="layer_state_delegate_8h_source"/>
      </node>
      <node id="48214">
        <label>pxr/usd/sdf/primSpec.h</label>
        <link refid="prim_spec_8h"/>
        <childnode refid="48183" relation="include">
        </childnode>
        <childnode refid="48215" relation="include">
        </childnode>
        <childnode refid="48201" relation="include">
        </childnode>
        <childnode refid="48186" relation="include">
        </childnode>
        <childnode refid="48205" relation="include">
        </childnode>
      </node>
      <node id="48438">
        <label>pxr/imaging/hd/materialBindingsSchema.h</label>
        <link refid="material_bindings_schema_8h_source"/>
      </node>
      <node id="48170">
        <label>pxr/usdImaging/usdImaging/dataSourceUsdPrimInfo.h</label>
        <link refid="data_source_usd_prim_info_8h_source"/>
      </node>
      <node id="48345">
        <label>pxr/imaging/hio/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="48256" relation="include">
        </childnode>
        <childnode refid="48346" relation="include">
        </childnode>
        <childnode refid="48351" relation="include">
        </childnode>
        <childnode refid="48353" relation="include">
        </childnode>
      </node>
      <node id="48075">
        <label>pxr/usd/usdGeom/bboxCache.h</label>
        <link refid="bbox_cache_8h_source"/>
        <childnode refid="48017" relation="include">
        </childnode>
      </node>
      <node id="48015">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
      </node>
      <node id="48381">
        <label>pxr/imaging/hdEmbree/renderer.h</label>
        <link refid="renderer_8h_source"/>
      </node>
      <node id="48116">
        <label>pxr/usd/usd/inherits.h</label>
        <link refid="inherits_8h_source"/>
      </node>
      <node id="48009">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="48322">
        <label>pxr/imaging/hd/unitTestDelegate.h</label>
        <link refid="unit_test_delegate_8h_source"/>
        <childnode refid="48268" relation="include">
        </childnode>
      </node>
      <node id="48286">
        <label>pxr/imaging/hd/mesh.h</label>
        <link refid="imaging_2hd_2mesh_8h_source"/>
        <childnode refid="48287" relation="include">
        </childnode>
        <childnode refid="48243" relation="include">
        </childnode>
        <childnode refid="48288" relation="include">
        </childnode>
      </node>
      <node id="48496">
        <label>pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h</label>
        <link refid="pinned_curve_expanding_scene_index_8h_source"/>
      </node>
      <node id="47966">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="48453">
        <label>pxr/imaging/hd/extComputationPrimvarsSchema.h</label>
        <link refid="ext_computation_primvars_schema_8h_source"/>
      </node>
      <node id="48484">
        <label>pxr/imaging/hd/materialFilteringSceneIndexBase.h</label>
        <link refid="material_filtering_scene_index_base_8h_source"/>
      </node>
      <node id="48512">
        <label>pxr/imaging/hd/flattenedPrimvarsDataSourceProvider.h</label>
        <link refid="flattened_primvars_data_source_provider_8h_source"/>
      </node>
      <node id="48425">
        <label>pxr/imaging/hd/geomSubsetsSchema.h</label>
        <link refid="geom_subsets_schema_8h_source"/>
        <childnode refid="48409" relation="include">
        </childnode>
        <childnode refid="48426" relation="include">
        </childnode>
      </node>
      <node id="48062">
        <label>pxr/usd/usdLux/pluginLight.h</label>
        <link refid="plugin_light_8h"/>
      </node>
      <node id="47997">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="48434">
        <label>pxr/imaging/hd/lensDistortionSchema.h</label>
        <link refid="lens_distortion_schema_8h_source"/>
        <childnode refid="48435" relation="include">
        </childnode>
      </node>
      <node id="47965">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="48418">
        <label>pxr/imaging/hd/dependenciesSchema.h</label>
        <link refid="dependencies_schema_8h_source"/>
      </node>
      <node id="48212">
        <label>pxr/usd/sdf/listEditorProxy.h</label>
        <link refid="list_editor_proxy_8h"/>
        <childnode refid="48213" relation="include">
        </childnode>
        <childnode refid="48221" relation="include">
        </childnode>
      </node>
      <node id="48106">
        <label>pxr/usd/usdGeom/camera.h</label>
        <link refid="usd_2usd_geom_2camera_8h"/>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="48024" relation="include">
        </childnode>
      </node>
      <node id="47948">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="48162">
        <label>pxr/usd/usdSkel/skeletonQuery.h</label>
        <link refid="skeleton_query_8h"/>
        <childnode refid="48012" relation="include">
        </childnode>
      </node>
      <node id="48426">
        <label>pxr/imaging/hd/meshSchema.h</label>
        <link refid="mesh_schema_8h_source"/>
      </node>
      <node id="48596">
        <label>pxr/imaging/hdSt/bufferUtils.h</label>
        <link refid="buffer_utils_8h_source"/>
      </node>
      <node id="47978">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="48419">
        <label>pxr/imaging/hd/extComputationInputComputationSchema.h</label>
        <link refid="ext_computation_input_computation_schema_8h_source"/>
      </node>
      <node id="48470">
        <label>pxr/imaging/hd/volumeFieldSchema.h</label>
        <link refid="volume_field_schema_8h_source"/>
      </node>
      <node id="48360">
        <label>pxr/usd/ar/threadLocalScopedCache.h</label>
        <link refid="thread_local_scoped_cache_8h_source"/>
      </node>
      <node id="48404">
        <label>pxr/imaging/hd/dataSourceHash.h</label>
        <link refid="data_source_hash_8h_source"/>
        <childnode refid="48405" relation="include">
        </childnode>
      </node>
      <node id="48290">
        <label>pxr/imaging/hdSt/points.h</label>
        <link refid="imaging_2hd_st_2points_8h_source"/>
      </node>
      <node id="48049">
        <label>pxr/usd/usdPhysics/filteredPairsAPI.h</label>
        <link refid="filtered_pairs_a_p_i_8h"/>
      </node>
      <node id="48557">
        <label>pxr/imaging/hd/meshTopology.h</label>
        <link refid="hd_2mesh_topology_8h_source"/>
        <childnode refid="48286" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48279" relation="include">
        </childnode>
        <childnode refid="48012" relation="include">
        </childnode>
      </node>
      <node id="48059">
        <label>pxr/usd/usdShade/shaderDefUtils.h</label>
        <link refid="shader_def_utils_8h_source"/>
      </node>
      <node id="48480">
        <label>pxr/usdImaging/usdImaging/usdRenderVarSchema.h</label>
        <link refid="usd_render_var_schema_8h_source"/>
      </node>
      <node id="48379">
        <label>pxr/imaging/hd/aov.h</label>
        <link refid="aov_8h_source"/>
        <childnode refid="48259" relation="include">
        </childnode>
        <childnode refid="48380" relation="include">
        </childnode>
        <childnode refid="48279" relation="include">
        </childnode>
        <childnode refid="48300" relation="include">
        </childnode>
        <childnode refid="48252" relation="include">
        </childnode>
      </node>
      <node id="47968">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="48429">
        <label>pxr/imaging/hd/instancedBySchema.h</label>
        <link refid="instanced_by_schema_8h_source"/>
      </node>
      <node id="48003">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="48422">
        <label>pxr/imaging/hd/extentSchema.h</label>
        <link refid="extent_schema_8h_source"/>
        <childnode refid="48423" relation="include">
        </childnode>
      </node>
      <node id="48478">
        <label>pxr/usdImaging/usdImaging/usdRenderProductSchema.h</label>
        <link refid="usd_render_product_schema_8h_source"/>
      </node>
      <node id="48402">
        <label>pxr/imaging/hd/containerDataSourceEditor.h</label>
        <link refid="container_data_source_editor_8h_source"/>
        <childnode refid="48403" relation="include">
        </childnode>
      </node>
      <node id="48444">
        <label>pxr/imaging/hd/integratorSchema.h</label>
        <link refid="integrator_schema_8h_source"/>
      </node>
      <node id="48124">
        <label>pxr/usd/usdGeom/imageable.h</label>
        <link refid="imageable_8h"/>
        <childnode refid="48017" relation="include">
        </childnode>
        <childnode refid="48125" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48299">
        <label>pxr/imaging/hd/unitTestNullRenderPass.h</label>
        <link refid="unit_test_null_render_pass_8h_source"/>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48056">
        <label>pxr/usd/usdRi/splineAPI.h</label>
        <link refid="spline_a_p_i_8h"/>
      </node>
      <node id="48339">
        <label>pxr/imaging/hdSt/strategyBase.h</label>
        <link refid="strategy_base_8h_source"/>
        <childnode refid="48337" relation="include">
        </childnode>
        <childnode refid="48340" relation="include">
        </childnode>
        <childnode refid="48341" relation="include">
        </childnode>
        <childnode refid="48336" relation="include">
        </childnode>
      </node>
      <node id="48451">
        <label>pxr/imaging/hd/primvarSchema.h</label>
        <link refid="primvar_schema_8h_source"/>
        <childnode refid="48452" relation="include">
        </childnode>
        <childnode refid="48454" relation="include">
        </childnode>
      </node>
      <node id="48145">
        <label>pxr/usd/usdUI/backdrop.h</label>
        <link refid="backdrop_8h"/>
      </node>
      <node id="48341">
        <label>pxr/imaging/hdSt/vboMemoryManager.h</label>
        <link refid="vbo_memory_manager_8h_source"/>
      </node>
      <node id="48459">
        <label>pxr/imaging/hd/renderSettingsSchema.h</label>
        <link refid="render_settings_schema_8h_source"/>
      </node>
      <node id="48131">
        <label>pxr/usd/usdPhysics/revoluteJoint.h</label>
        <link refid="revolute_joint_8h"/>
      </node>
      <node id="48065">
        <label>pxr/usd/usdUI/sceneGraphPrimAPI.h</label>
        <link refid="scene_graph_prim_a_p_i_8h"/>
      </node>
      <node id="48180">
        <label>pxr/usd/pcp/arc.h</label>
        <link refid="arc_8h_source"/>
      </node>
      <node id="48357">
        <label>pxr/usd/ar/assetInfo.h</label>
        <link refid="asset_info_8h"/>
        <childnode refid="48197" relation="include">
        </childnode>
      </node>
      <node id="48352">
        <label>pxr/imaging/hdSt/renderBuffer.h</label>
        <link refid="t_2render_buffer_8h_source"/>
      </node>
      <node id="48560">
        <label>pxr/imaging/hd/timeSampleArray.h</label>
        <link refid="time_sample_array_8h_source"/>
        <childnode refid="48279" relation="include">
        </childnode>
        <childnode refid="48561" relation="include">
        </childnode>
        <childnode refid="48323" relation="include">
        </childnode>
      </node>
      <node id="48136">
        <label>pxr/usd/usdRender/product.h</label>
        <link refid="product_8h"/>
      </node>
      <node id="48301">
        <label>pxr/imaging/hdSt/imageShaderRenderPass.h</label>
        <link refid="image_shader_render_pass_8h_source"/>
      </node>
      <node id="48117">
        <label>pxr/usd/usd/payloads.h</label>
        <link refid="payloads_8h_source"/>
      </node>
      <node id="48559">
        <label>pxr/imaging/hdEmbree/meshSamplers.h</label>
        <link refid="mesh_samplers_8h_source"/>
      </node>
      <node id="48055">
        <label>pxr/usd/usdRi/materialAPI.h</label>
        <link refid="usd_ri_2material_a_p_i_8h"/>
      </node>
      <node id="48050">
        <label>pxr/usd/usdPhysics/limitAPI.h</label>
        <link refid="limit_a_p_i_8h"/>
      </node>
      <node id="48279">
        <label>pxr/imaging/hd/sceneDelegate.h</label>
        <link refid="scene_delegate_8h_source"/>
        <childnode refid="48280" relation="include">
        </childnode>
        <childnode refid="48281" relation="include">
        </childnode>
        <childnode refid="48283" relation="include">
        </childnode>
        <childnode refid="48295" relation="include">
        </childnode>
        <childnode refid="48296" relation="include">
        </childnode>
        <childnode refid="48322" relation="include">
        </childnode>
        <childnode refid="48323" relation="include">
        </childnode>
        <childnode refid="48294" relation="include">
        </childnode>
        <childnode refid="48324" relation="include">
        </childnode>
        <childnode refid="48252" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="48325" relation="include">
        </childnode>
      </node>
      <node id="48437">
        <label>pxr/imaging/hd/materialBindingSchema.h</label>
        <link refid="material_binding_schema_8h_source"/>
        <childnode refid="48438" relation="include">
        </childnode>
      </node>
      <node id="48264">
        <label>pxr/imaging/hd/rendererPluginHandle.h</label>
        <link refid="renderer_plugin_handle_8h_source"/>
        <childnode refid="48265" relation="include">
        </childnode>
      </node>
      <node id="47934">
        <label>pxr/usd/pcp/primIndex.h</label>
        <link refid="prim_index_8h_source"/>
        <childnode refid="47935" relation="include">
        </childnode>
        <childnode refid="48118" relation="include">
        </childnode>
        <childnode refid="48175" relation="include">
        </childnode>
      </node>
      <node id="48590">
        <label>pxr/imaging/hdPrman/displayFilter.h</label>
        <link refid="display_filter_8h_source"/>
      </node>
      <node id="47944">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="48115">
        <label>pxr/usdImaging/usdImaging/dataSourceAttribute.h</label>
        <link refid="data_source_attribute_8h_source"/>
        <childnode refid="48021" relation="include">
        </childnode>
      </node>
      <node id="48542">
        <label>pxr/usdImaging/usdImaging/sceneIndices.h</label>
        <link refid="scene_indices_8h_source"/>
      </node>
      <node id="48486">
        <label>pxr/imaging/hd/noticeBatchingSceneIndex.h</label>
        <link refid="notice_batching_scene_index_8h_source"/>
        <childnode refid="48278" relation="include">
        </childnode>
      </node>
      <node id="48603">
        <label>pxr/imaging/pxOsd/meshTopology.h</label>
        <link refid="px_osd_2mesh_topology_8h"/>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48604" relation="include">
        </childnode>
      </node>
      <node id="48490">
        <label>pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h</label>
        <link refid="ext_computation_primvar_pruning_scene_index_8h_source"/>
      </node>
      <node id="48090">
        <label>pxr/usd/usdGeom/basisCurves.h</label>
        <link refid="usd_2usd_geom_2basis_curves_8h"/>
        <childnode refid="48026" relation="include">
        </childnode>
      </node>
      <node id="47975">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="48076">
        <label>pxr/usd/usdGeom/xformCache.h</label>
        <link refid="xform_cache_8h_source"/>
        <childnode refid="48075" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47973" relation="include">
        </childnode>
      </node>
      <node id="48513">
        <label>pxr/imaging/hd/flattenedPurposeDataSourceProvider.h</label>
        <link refid="flattened_purpose_data_source_provider_8h_source"/>
      </node>
      <node id="47986">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="48385">
        <label>pxr/imaging/hd/bufferArrayRange.h</label>
        <link refid="buffer_array_range_8h_source"/>
        <childnode refid="48386" relation="include">
        </childnode>
        <childnode refid="48398" relation="include">
        </childnode>
        <childnode refid="48399" relation="include">
        </childnode>
        <childnode refid="48337" relation="include">
        </childnode>
        <childnode refid="48326" relation="include">
        </childnode>
      </node>
      <node id="48585">
        <label>pxr/imaging/hd/coordSys.h</label>
        <link refid="coord_sys_8h_source"/>
        <childnode refid="48586" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48374">
        <label>pxr/usd/sdf/pathExpressionEval.h</label>
        <link refid="path_expression_eval_8h_source"/>
        <childnode refid="48069" relation="include">
        </childnode>
      </node>
      <node id="48226">
        <label>pxr/usd/sdf/proxyPolicies.h</label>
        <link refid="proxy_policies_8h"/>
        <childnode refid="48227" relation="include">
        </childnode>
        <childnode refid="48213" relation="include">
        </childnode>
      </node>
      <node id="47952">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="48528">
        <label>pxr/imaging/hd/legacyPrimSceneIndex.h</label>
        <link refid="legacy_prim_scene_index_8h_source"/>
        <childnode refid="48278" relation="include">
        </childnode>
      </node>
      <node id="48529">
        <label>pxr/imaging/hd/sceneIndexPlugin.h</label>
        <link refid="scene_index_plugin_8h_source"/>
        <childnode refid="48530" relation="include">
        </childnode>
        <childnode refid="48531" relation="include">
        </childnode>
        <childnode refid="48532" relation="include">
        </childnode>
        <childnode refid="48533" relation="include">
        </childnode>
        <childnode refid="48534" relation="include">
        </childnode>
        <childnode refid="48535" relation="include">
        </childnode>
        <childnode refid="48536" relation="include">
        </childnode>
        <childnode refid="48537" relation="include">
        </childnode>
      </node>
      <node id="48386">
        <label>pxr/imaging/hd/rprimSharedData.h</label>
        <link refid="rprim_shared_data_8h_source"/>
        <childnode refid="48387" relation="include">
        </childnode>
        <childnode refid="48283" relation="include">
        </childnode>
      </node>
      <node id="48460">
        <label>pxr/imaging/hd/renderVarSchema.h</label>
        <link refid="render_var_schema_8h_source"/>
      </node>
      <node id="48099">
        <label>pxr/usd/usdProc/generativeProcedural.h</label>
        <link refid="usd_2usd_proc_2generative_procedural_8h"/>
      </node>
      <node id="48225">
        <label>pxr/usd/sdf/mapEditProxy.h</label>
        <link refid="map_edit_proxy_8h"/>
        <childnode refid="48213" relation="include">
        </childnode>
      </node>
      <node id="48252">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="48421">
        <label>pxr/imaging/hd/extComputationSchema.h</label>
        <link refid="ext_computation_schema_8h_source"/>
      </node>
      <node id="48216">
        <label>pxr/usd/sdf/propertySpec.h</label>
        <link refid="property_spec_8h"/>
        <childnode refid="48183" relation="include">
        </childnode>
        <childnode refid="48184" relation="include">
        </childnode>
        <childnode refid="48217" relation="include">
        </childnode>
        <childnode refid="48218" relation="include">
        </childnode>
        <childnode refid="48201" relation="include">
        </childnode>
        <childnode refid="48202" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
      </node>
      <node id="47995">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="48198">
        <label>pxr/usd/sdf/layerUtils.h</label>
        <link refid="layer_utils_8h"/>
      </node>
      <node id="48471">
        <label>pxr/imaging/hd/xformSchema.h</label>
        <link refid="xform_schema_8h_source"/>
      </node>
      <node id="48566">
        <label>pxr/imaging/hd/renderBuffer.h</label>
        <link refid="render_buffer_8h_source"/>
        <childnode refid="48567" relation="include">
        </childnode>
        <childnode refid="48352" relation="include">
        </childnode>
        <childnode refid="48304" relation="include">
        </childnode>
      </node>
      <node id="48274">
        <label>pxr/imaging/hd/imageShader.h</label>
        <link refid="image_shader_8h_source"/>
      </node>
      <node id="48246">
        <label>pxr/imaging/hdPrman/volume.h</label>
        <link refid="imaging_2hd_prman_2volume_8h_source"/>
      </node>
      <node id="47989">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="48587">
        <label>pxr/imaging/hd/light.h</label>
        <link refid="light_8h_source"/>
        <childnode refid="48588" relation="include">
        </childnode>
        <childnode refid="48253" relation="include">
        </childnode>
      </node>
      <node id="48158">
        <label>pxr/usd/usd/references.h</label>
        <link refid="references_8h_source"/>
        <childnode refid="48122" relation="include">
        </childnode>
      </node>
      <node id="48413">
        <label>pxr/imaging/hd/coordSysBindingSchema.h</label>
        <link refid="coord_sys_binding_schema_8h_source"/>
      </node>
      <node id="48539">
        <label>pxr/imaging/hdGp/generativeProcedural.h</label>
        <link refid="imaging_2hd_gp_2generative_procedural_8h_source"/>
        <childnode refid="48540" relation="include">
        </childnode>
        <childnode refid="48488" relation="include">
        </childnode>
      </node>
      <node id="47962">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="48411">
        <label>pxr/imaging/hd/categoriesSchema.h</label>
        <link refid="categories_schema_8h_source"/>
      </node>
      <node id="48503">
        <label>pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h</label>
        <link refid="pi_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="48024">
        <label>pxr/usdImaging/usdImaging/dataSourceCamera.h</label>
        <link refid="data_source_camera_8h_source"/>
      </node>
      <node id="48221">
        <label>pxr/usd/sdf/pyListEditorProxy.h</label>
        <link refid="py_list_editor_proxy_8h"/>
      </node>
      <node id="48265">
        <label>pxr/imaging/hd/pluginRenderDelegateUniqueHandle.h</label>
        <link refid="plugin_render_delegate_unique_handle_8h_source"/>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48326">
        <label>pxr/imaging/hdSt/resourceRegistry.h</label>
        <link refid="t_2resource_registry_8h_source"/>
        <childnode refid="48327" relation="include">
        </childnode>
        <childnode refid="48294" relation="include">
        </childnode>
        <childnode refid="48329" relation="include">
        </childnode>
        <childnode refid="48336" relation="include">
        </childnode>
      </node>
      <node id="48570">
        <label>pxr/imaging/hd/vtBufferSource.h</label>
        <link refid="vt_buffer_source_8h_source"/>
        <childnode refid="48571" relation="include">
        </childnode>
        <childnode refid="48572" relation="include">
        </childnode>
      </node>
      <node id="47954">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="47955" relation="include">
        </childnode>
      </node>
      <node id="48181">
        <label>pxr/usd/pcp/dynamicFileFormatContext.h</label>
        <link refid="dynamic_file_format_context_8h_source"/>
      </node>
      <node id="48393">
        <label>pxr/imaging/hdSt/drawTarget.h</label>
        <link refid="hd_st_2draw_target_8h_source"/>
      </node>
      <node id="48544">
        <label>pxr/imaging/hd/vectorSchema.h</label>
        <link refid="vector_schema_8h_source"/>
        <childnode refid="48545" relation="include">
        </childnode>
        <childnode refid="48546" relation="include">
        </childnode>
      </node>
      <node id="48481">
        <label>pxr/imaging/hd/filteringSceneIndex.h</label>
        <link refid="filtering_scene_index_8h_source"/>
        <childnode refid="48482" relation="include">
        </childnode>
        <childnode refid="48483" relation="include">
        </childnode>
        <childnode refid="48484" relation="include">
        </childnode>
        <childnode refid="48485" relation="include">
        </childnode>
        <childnode refid="48486" relation="include">
        </childnode>
        <childnode refid="48487" relation="include">
        </childnode>
        <childnode refid="48488" relation="include">
        </childnode>
        <childnode refid="48489" relation="include">
        </childnode>
        <childnode refid="48490" relation="include">
        </childnode>
        <childnode refid="48491" relation="include">
        </childnode>
        <childnode refid="48492" relation="include">
        </childnode>
        <childnode refid="48493" relation="include">
        </childnode>
        <childnode refid="48494" relation="include">
        </childnode>
        <childnode refid="48495" relation="include">
        </childnode>
        <childnode refid="48496" relation="include">
        </childnode>
        <childnode refid="48497" relation="include">
        </childnode>
        <childnode refid="48498" relation="include">
        </childnode>
        <childnode refid="48499" relation="include">
        </childnode>
        <childnode refid="48500" relation="include">
        </childnode>
        <childnode refid="48501" relation="include">
        </childnode>
        <childnode refid="48502" relation="include">
        </childnode>
        <childnode refid="48405" relation="include">
        </childnode>
        <childnode refid="48503" relation="include">
        </childnode>
        <childnode refid="48504" relation="include">
        </childnode>
        <childnode refid="48505" relation="include">
        </childnode>
        <childnode refid="48506" relation="include">
        </childnode>
        <childnode refid="48507" relation="include">
        </childnode>
        <childnode refid="48508" relation="include">
        </childnode>
      </node>
      <node id="48403">
        <label>pxr/imaging/hd/dataSourceMaterialNetworkInterface.h</label>
        <link refid="data_source_material_network_interface_8h_source"/>
      </node>
      <node id="48571">
        <label>pxr/imaging/hdEmbree/instancer.h</label>
        <link refid="mbree_2instancer_8h_source"/>
      </node>
      <node id="48169">
        <label>pxr/usdImaging/usdImaging/dataSourceStageGlobals.h</label>
        <link refid="data_source_stage_globals_8h_source"/>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48026" relation="include">
        </childnode>
        <childnode refid="48024" relation="include">
        </childnode>
        <childnode refid="48025" relation="include">
        </childnode>
        <childnode refid="48033" relation="include">
        </childnode>
        <childnode refid="48027" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
        <childnode refid="48021" relation="include">
        </childnode>
        <childnode refid="48157" relation="include">
        </childnode>
        <childnode refid="48034" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
        <childnode refid="48032" relation="include">
        </childnode>
        <childnode refid="48072" relation="include">
        </childnode>
        <childnode refid="48035" relation="include">
        </childnode>
      </node>
      <node id="48139">
        <label>pxr/usd/usdRender/var.h</label>
        <link refid="var_8h"/>
      </node>
      <node id="48155">
        <label>pxr/usdImaging/usdImaging/dataSourceAttributeColorSpace.h</label>
        <link refid="data_source_attribute_color_space_8h_source"/>
      </node>
      <node id="47985">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="48410">
        <label>pxr/imaging/hd/capsuleSchema.h</label>
        <link refid="capsule_schema_8h_source"/>
      </node>
      <node id="48276">
        <label>pxr/imaging/hdPrman/renderSettings.h</label>
        <link refid="rman_2render_settings_8h_source"/>
      </node>
      <node id="48309">
        <label>pxr/imaging/hdx/renderTask.h</label>
        <link refid="render_task_8h_source"/>
        <childnode refid="48310" relation="include">
        </childnode>
        <childnode refid="48311" relation="include">
        </childnode>
      </node>
      <node id="48495">
        <label>pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h</label>
        <link refid="nurbs_approximating_scene_index_8h_source"/>
      </node>
      <node id="48508">
        <label>pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h</label>
        <link refid="unloaded_draw_mode_scene_index_8h_source"/>
      </node>
      <node id="48146">
        <label>pxr/usd/usdGeom/constraintTarget.h</label>
        <link refid="constraint_target_8h_source"/>
        <childnode refid="48017" relation="include">
        </childnode>
      </node>
      <node id="47970">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="47971" relation="include">
        </childnode>
        <childnode refid="47972" relation="include">
        </childnode>
      </node>
      <node id="47983">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="48415">
        <label>pxr/imaging/hd/cubeSchema.h</label>
        <link refid="cube_schema_8h_source"/>
      </node>
      <node id="48053">
        <label>pxr/usd/usdPhysics/meshCollisionAPI.h</label>
        <link refid="mesh_collision_a_p_i_8h"/>
      </node>
      <node id="48197">
        <label>pxr/usd/sdf/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="48190" relation="include">
        </childnode>
        <childnode refid="48193" relation="include">
        </childnode>
        <childnode refid="48198" relation="include">
        </childnode>
        <childnode refid="48199" relation="include">
        </childnode>
        <childnode refid="48200" relation="include">
        </childnode>
        <childnode refid="48201" relation="include">
        </childnode>
        <childnode refid="48186" relation="include">
        </childnode>
        <childnode refid="48202" relation="include">
        </childnode>
        <childnode refid="48205" relation="include">
        </childnode>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48206" relation="include">
        </childnode>
        <childnode refid="48208" relation="include">
        </childnode>
      </node>
      <node id="48474">
        <label>pxr/imaging/hdPrman/rileyRenderTargetSchema.h</label>
        <link refid="riley_render_target_schema_8h_source"/>
      </node>
      <node id="48377">
        <label>pxr/usd/sdf/predicateExpressionParser.h</label>
        <link refid="predicate_expression_parser_8h_source"/>
      </node>
      <node id="48572">
        <label>pxr/imaging/hdEmbree/sampler.h</label>
        <link refid="hd_embree_2sampler_8h_source"/>
      </node>
      <node id="48093">
        <label>pxr/usd/usdGeom/mesh.h</label>
        <link refid="usd_2usd_geom_2mesh_8h"/>
        <childnode refid="48027" relation="include">
        </childnode>
      </node>
      <node id="48600">
        <label>pxr/imaging/hdSt/samplerObject.h</label>
        <link refid="sampler_object_8h_source"/>
      </node>
      <node id="48030">
        <label>pxr/usdImaging/usdImaging/dataSourcePoints.h</label>
        <link refid="data_source_points_8h_source"/>
      </node>
      <node id="48514">
        <label>pxr/imaging/hd/flattenedVisibilityDataSourceProvider.h</label>
        <link refid="flattened_visibility_data_source_provider_8h_source"/>
      </node>
      <node id="48325">
        <label>pxr/usdImaging/usdImaging/primvarDescCache.h</label>
        <link refid="primvar_desc_cache_8h"/>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
      </node>
      <node id="48177">
        <label>pxr/usd/sdf/types.h</label>
        <link refid="usd_2sdf_2types_8h"/>
        <childnode refid="48178" relation="include">
        </childnode>
        <childnode refid="47933" relation="include">
        </childnode>
        <childnode refid="48179" relation="include">
        </childnode>
        <childnode refid="48189" relation="include">
        </childnode>
        <childnode refid="48195" relation="include">
        </childnode>
        <childnode refid="48210" relation="include">
        </childnode>
        <childnode refid="48217" relation="include">
        </childnode>
        <childnode refid="48229" relation="include">
        </childnode>
        <childnode refid="48227" relation="include">
        </childnode>
        <childnode refid="48231" relation="include">
        </childnode>
        <childnode refid="48232" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48233" relation="include">
        </childnode>
        <childnode refid="48214" relation="include">
        </childnode>
        <childnode refid="48216" relation="include">
        </childnode>
        <childnode refid="48218" relation="include">
        </childnode>
        <childnode refid="48234" relation="include">
        </childnode>
        <childnode refid="48176" relation="include">
        </childnode>
        <childnode refid="48209" relation="include">
        </childnode>
        <childnode refid="48235" relation="include">
        </childnode>
        <childnode refid="48219" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48203" relation="include">
        </childnode>
        <childnode refid="47937" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="48237" relation="include">
        </childnode>
        <childnode refid="48238" relation="include">
        </childnode>
        <childnode refid="48239" relation="include">
        </childnode>
      </node>
      <node id="48138">
        <label>pxr/usd/usdRender/spec.h</label>
        <link refid="usd_render_2spec_8h"/>
      </node>
      <node id="48144">
        <label>pxr/usd/usdSkel/blendShapeQuery.h</label>
        <link refid="blend_shape_query_8h"/>
        <childnode refid="48012" relation="include">
        </childnode>
      </node>
      <node id="48087">
        <label>pxr/usd/usdGeom/plane.h</label>
        <link refid="usd_2usd_geom_2plane_8h"/>
      </node>
      <node id="48079">
        <label>pxr/usd/usdGeom/boundable.h</label>
        <link refid="boundable_8h"/>
        <childnode refid="48080" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="47943" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
      </node>
      <node id="48583">
        <label>pxr/imaging/hd/sprim.h</label>
        <link refid="sprim_8h_source"/>
        <childnode refid="48584" relation="include">
        </childnode>
        <childnode refid="48585" relation="include">
        </childnode>
        <childnode refid="48280" relation="include">
        </childnode>
        <childnode refid="48274" relation="include">
        </childnode>
        <childnode refid="48587" relation="include">
        </childnode>
        <childnode refid="48589" relation="include">
        </childnode>
        <childnode refid="48590" relation="include">
        </childnode>
        <childnode refid="48591" relation="include">
        </childnode>
        <childnode refid="48594" relation="include">
        </childnode>
        <childnode refid="48593" relation="include">
        </childnode>
        <childnode refid="48393" relation="include">
        </childnode>
      </node>
      <node id="48504">
        <label>pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h</label>
        <link refid="render_settings_flattening_scene_index_8h_source"/>
      </node>
      <node id="48396">
        <label>pxr/imaging/hdSt/drawItemInstance.h</label>
        <link refid="draw_item_instance_8h_source"/>
        <childnode refid="48397" relation="include">
        </childnode>
        <childnode refid="48301" relation="include">
        </childnode>
      </node>
      <node id="48029">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsPatch.h</label>
        <link refid="data_source_nurbs_patch_8h_source"/>
      </node>
      <node id="48287">
        <label>pxr/imaging/hdEmbree/mesh.h</label>
        <link refid="imaging_2hd_embree_2mesh_8h_source"/>
      </node>
      <node id="48521">
        <label>pxr/imaging/hd/mapContainerDataSource.h</label>
        <link refid="map_container_data_source_8h_source"/>
      </node>
      <node id="48454">
        <label>pxr/imaging/hd/primvarsSchema.h</label>
        <link refid="primvars_schema_8h_source"/>
      </node>
      <node id="48579">
        <label>pxr/imaging/hd/flatNormals.h</label>
        <link refid="flat_normals_8h_source"/>
        <childnode refid="48576" relation="include">
        </childnode>
      </node>
      <node id="48546">
        <label>pxr/imaging/hd/vectorSchemaTypeDefs.h</label>
        <link refid="vector_schema_type_defs_8h_source"/>
        <childnode refid="48407" relation="include">
        </childnode>
      </node>
      <node id="48066">
        <label>pxr/usd/usd/flattenUtils.h</label>
        <link refid="flatten_utils_8h"/>
      </node>
      <node id="48492">
        <label>pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h</label>
        <link refid="legacy_display_style_override_scene_index_8h_source"/>
      </node>
      <node id="48232">
        <label>pxr/usd/sdf/copyUtils.h</label>
        <link refid="copy_utils_8h"/>
      </node>
      <node id="48464">
        <label>pxr/imaging/hd/splitDiopterSchema.h</label>
        <link refid="split_diopter_schema_8h_source"/>
        <childnode refid="48435" relation="include">
        </childnode>
      </node>
      <node id="48441">
        <label>pxr/imaging/hd/materialNodeParameterSchema.h</label>
        <link refid="material_node_parameter_schema_8h_source"/>
      </node>
      <node id="48351">
        <label>pxr/imaging/hdSt/textureUtils.h</label>
        <link refid="imaging_2hd_st_2texture_utils_8h_source"/>
        <childnode refid="48352" relation="include">
        </childnode>
        <childnode refid="48303" relation="include">
        </childnode>
      </node>
      <node id="48331">
        <label>pxr/imaging/hdSt/lightingShader.h</label>
        <link refid="lighting_shader_8h_source"/>
        <childnode refid="48332" relation="include">
        </childnode>
        <childnode refid="48250" relation="include">
        </childnode>
      </node>
      <node id="48113">
        <label>pxr/usd/usdVol/field3DAsset.h</label>
        <link refid="field3_d_asset_8h"/>
      </node>
      <node id="47964">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="47965" relation="include">
        </childnode>
        <childnode refid="47966" relation="include">
        </childnode>
        <childnode refid="47967" relation="include">
        </childnode>
        <childnode refid="47968" relation="include">
        </childnode>
        <childnode refid="47969" relation="include">
        </childnode>
        <childnode refid="47970" relation="include">
        </childnode>
        <childnode refid="47973" relation="include">
        </childnode>
        <childnode refid="47977" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47987" relation="include">
        </childnode>
        <childnode refid="47998" relation="include">
        </childnode>
        <childnode refid="48003" relation="include">
        </childnode>
        <childnode refid="47978" relation="include">
        </childnode>
        <childnode refid="47979" relation="include">
        </childnode>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47982" relation="include">
        </childnode>
        <childnode refid="47983" relation="include">
        </childnode>
        <childnode refid="48004" relation="include">
        </childnode>
        <childnode refid="48005" relation="include">
        </childnode>
        <childnode refid="48006" relation="include">
        </childnode>
        <childnode refid="48007" relation="include">
        </childnode>
        <childnode refid="47984" relation="include">
        </childnode>
        <childnode refid="47985" relation="include">
        </childnode>
        <childnode refid="48008" relation="include">
        </childnode>
        <childnode refid="48009" relation="include">
        </childnode>
        <childnode refid="48010" relation="include">
        </childnode>
        <childnode refid="48011" relation="include">
        </childnode>
        <childnode refid="48012" relation="include">
        </childnode>
        <childnode refid="48013" relation="include">
        </childnode>
      </node>
      <node id="48543">
        <label>pxr/usdImaging/usdviewq/hydraObserver.h</label>
        <link refid="hydra_observer_8h_source"/>
      </node>
      <node id="48021">
        <label>pxr/usdImaging/usdImaging/dataSourcePrimvars.h</label>
        <link refid="data_source_primvars_8h_source"/>
        <childnode refid="48022" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
      </node>
      <node id="48125">
        <label>pxr/usd/usdGeom/scope.h</label>
        <link refid="scope_8h"/>
      </node>
      <node id="48189">
        <label>pxr/usd/pcp/site.h</label>
        <link refid="pcp_2site_8h_source"/>
        <childnode refid="48190" relation="include">
        </childnode>
        <childnode refid="48182" relation="include">
        </childnode>
        <childnode refid="48193" relation="include">
        </childnode>
      </node>
      <node id="48534">
        <label>pxr/imaging/hdSt/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_st_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="48064">
        <label>pxr/usd/usdUI/nodeGraphNodeAPI.h</label>
        <link refid="node_graph_node_a_p_i_8h"/>
      </node>
      <node id="48523">
        <label>pxr/imaging/hd/primDataSourceOverlayCache.h</label>
        <link refid="prim_data_source_overlay_cache_8h_source"/>
      </node>
      <node id="47930">
        <label>pxr/base/vt/dictionary.h</label>
        <link refid="dictionary_8h"/>
        <childnode refid="47931" relation="include">
        </childnode>
        <childnode refid="47932" relation="include">
        </childnode>
        <childnode refid="48176" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="48247" relation="include">
        </childnode>
        <childnode refid="48138" relation="include">
        </childnode>
        <childnode refid="48174" relation="include">
        </childnode>
        <childnode refid="48248" relation="include">
        </childnode>
        <childnode refid="48256" relation="include">
        </childnode>
        <childnode refid="48258" relation="include">
        </childnode>
        <childnode refid="48274" relation="include">
        </childnode>
        <childnode refid="48259" relation="include">
        </childnode>
        <childnode refid="48275" relation="include">
        </childnode>
        <childnode refid="48277" relation="include">
        </childnode>
        <childnode refid="48279" relation="include">
        </childnode>
        <childnode refid="48296" relation="include">
        </childnode>
        <childnode refid="48322" relation="include">
        </childnode>
        <childnode refid="48337" relation="include">
        </childnode>
        <childnode refid="48338" relation="include">
        </childnode>
        <childnode refid="48326" relation="include">
        </childnode>
        <childnode refid="48339" relation="include">
        </childnode>
        <childnode refid="48342" relation="include">
        </childnode>
        <childnode refid="48343" relation="include">
        </childnode>
        <childnode refid="48345" relation="include">
        </childnode>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48190">
        <label>pxr/usd/pcp/errors.h</label>
        <link refid="pcp_2errors_8h_source"/>
        <childnode refid="47935" relation="include">
        </childnode>
        <childnode refid="47933" relation="include">
        </childnode>
        <childnode refid="48191" relation="include">
        </childnode>
        <childnode refid="47934" relation="include">
        </childnode>
        <childnode refid="48184" relation="include">
        </childnode>
        <childnode refid="48192" relation="include">
        </childnode>
      </node>
      <node id="48208">
        <label>pxr/usdImaging/usdImaging/textureUtils.h</label>
        <link refid="usd_imaging_2usd_imaging_2texture_utils_8h_source"/>
      </node>
      <node id="48323">
        <label>pxr/imaging/hdPrman/instancer.h</label>
        <link refid="rman_2instancer_8h_source"/>
        <childnode refid="48239" relation="include">
        </childnode>
      </node>
      <node id="48423">
        <label>pxr/usdImaging/usdImaging/extentsHintSchema.h</label>
        <link refid="extents_hint_schema_8h_source"/>
      </node>
      <node id="48564">
        <label>pxr/imaging/hd/field.h</label>
        <link refid="field_8h_source"/>
        <childnode refid="48246" relation="include">
        </childnode>
        <childnode refid="48565" relation="include">
        </childnode>
      </node>
      <node id="48591">
        <label>pxr/imaging/hdPrman/integrator.h</label>
        <link refid="integrator_8h_source"/>
      </node>
      <node id="48127">
        <label>pxr/usd/usdPhysics/joint.h</label>
        <link refid="joint_8h"/>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48129" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48131" relation="include">
        </childnode>
        <childnode refid="48132" relation="include">
        </childnode>
      </node>
      <node id="48041">
        <label>pxr/usd/usdLux/meshLightAPI.h</label>
        <link refid="mesh_light_a_p_i_8h"/>
      </node>
      <node id="48008">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="47936">
        <label>pxr/usd/pcp/namespaceEdits.h</label>
        <link refid="namespace_edits_8h_source"/>
      </node>
      <node id="48576">
        <label>pxr/imaging/hdSt/flatNormals.h</label>
        <link refid="t_2flat_normals_8h_source"/>
      </node>
      <node id="48261">
        <label>pxr/imaging/hdEmbree/rendererPlugin.h</label>
        <link refid="mbree_2renderer_plugin_8h_source"/>
      </node>
      <node id="48356">
        <label>pxr/base/vt/wrapArray.h</label>
        <link refid="wrap_array_8h_source"/>
      </node>
      <node id="48161">
        <label>pxr/usd/usdSkel/animQuery.h</label>
        <link refid="anim_query_8h"/>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48162" relation="include">
        </childnode>
      </node>
      <node id="48568">
        <label>pxr/imaging/hd/bufferSpec.h</label>
        <link refid="buffer_spec_8h_source"/>
        <childnode refid="48384" relation="include">
        </childnode>
        <childnode refid="48569" relation="include">
        </childnode>
        <childnode refid="48337" relation="include">
        </childnode>
        <childnode refid="48400" relation="include">
        </childnode>
        <childnode refid="48340" relation="include">
        </childnode>
        <childnode refid="48326" relation="include">
        </childnode>
        <childnode refid="48339" relation="include">
        </childnode>
        <childnode refid="48341" relation="include">
        </childnode>
        <childnode refid="48336" relation="include">
        </childnode>
      </node>
      <node id="48487">
        <label>pxr/imaging/hd/prefixingSceneIndex.h</label>
        <link refid="prefixing_scene_index_8h_source"/>
      </node>
      <node id="48143">
        <label>pxr/usd/usdSkel/blendShape.h</label>
        <link refid="blend_shape_8h"/>
        <childnode refid="48144" relation="include">
        </childnode>
      </node>
      <node id="48355">
        <label>pxr/base/vt/visitValue.h</label>
        <link refid="visit_value_8h_source"/>
      </node>
      <node id="47971">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="48567">
        <label>pxr/imaging/hdEmbree/renderBuffer.h</label>
        <link refid="mbree_2render_buffer_8h_source"/>
      </node>
      <node id="47963">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="48401">
        <label>pxr/imaging/hd/dataSource.h</label>
        <link refid="data_source_8h_source"/>
        <childnode refid="48402" relation="include">
        </childnode>
        <childnode refid="48404" relation="include">
        </childnode>
        <childnode refid="48406" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48509" relation="include">
        </childnode>
        <childnode refid="48518" relation="include">
        </childnode>
        <childnode refid="48519" relation="include">
        </childnode>
        <childnode refid="48520" relation="include">
        </childnode>
        <childnode refid="48521" relation="include">
        </childnode>
        <childnode refid="48522" relation="include">
        </childnode>
        <childnode refid="48523" relation="include">
        </childnode>
        <childnode refid="48259" relation="include">
        </childnode>
        <childnode refid="48524" relation="include">
        </childnode>
        <childnode refid="48525" relation="include">
        </childnode>
        <childnode refid="48544" relation="include">
        </childnode>
        <childnode refid="48547" relation="include">
        </childnode>
        <childnode refid="48303" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48155" relation="include">
        </childnode>
        <childnode refid="48026" relation="include">
        </childnode>
        <childnode refid="48024" relation="include">
        </childnode>
        <childnode refid="48025" relation="include">
        </childnode>
        <childnode refid="48033" relation="include">
        </childnode>
        <childnode refid="48027" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
        <childnode refid="48157" relation="include">
        </childnode>
        <childnode refid="48034" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
        <childnode refid="48548" relation="include">
        </childnode>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="48549" relation="include">
        </childnode>
        <childnode refid="48542" relation="include">
        </childnode>
        <childnode refid="48035" relation="include">
        </childnode>
      </node>
      <node id="48253">
        <label>pxr/imaging/hdSt/light.h</label>
        <link refid="t_2light_8h_source"/>
      </node>
      <node id="48134">
        <label>pxr/usd/usdRender/denoisePass.h</label>
        <link refid="denoise_pass_8h"/>
      </node>
      <node id="48178">
        <label>pxr/usd/pcp/changes.h</label>
        <link refid="changes_8h"/>
      </node>
      <node id="48362">
        <label>pxr/usd/ndr/node.h</label>
        <link refid="ndr_2node_8h"/>
        <childnode refid="48363" relation="include">
        </childnode>
        <childnode refid="48365" relation="include">
        </childnode>
      </node>
      <node id="48195">
        <label>pxr/usd/sdf/abstractData.h</label>
        <link refid="abstract_data_8h_source"/>
        <childnode refid="48196" relation="include">
        </childnode>
        <childnode refid="48209" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48068" relation="include">
        </childnode>
      </node>
      <node id="48498">
        <label>pxr/imaging/hdsi/primTypePruningSceneIndex.h</label>
        <link refid="prim_type_pruning_scene_index_8h_source"/>
      </node>
      <node id="47933">
        <label>pxr/usd/pcp/composeSite.h</label>
        <link refid="compose_site_8h"/>
        <childnode refid="47934" relation="include">
        </childnode>
      </node>
      <node id="48037">
        <label>pxr/usd/usdGeom/xformCommonAPI.h</label>
        <link refid="xform_common_a_p_i_8h"/>
      </node>
      <node id="48027">
        <label>pxr/usdImaging/usdImaging/dataSourceMesh.h</label>
        <link refid="data_source_mesh_8h_source"/>
      </node>
      <node id="48204">
        <label>pxr/usd/usd/primTypeInfo.h</label>
        <link refid="prim_type_info_8h_source"/>
        <childnode refid="48203" relation="include">
        </childnode>
      </node>
      <node id="48150">
        <label>pxr/usd/usdShade/output.h</label>
        <link refid="output_8h_source"/>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
      </node>
      <node id="48601">
        <label>pxr/imaging/hdSt/textureHandle.h</label>
        <link refid="texture_handle_8h_source"/>
      </node>
      <node id="48148">
        <label>pxr/usd/usdSkel/skinningQuery.h</label>
        <link refid="skinning_query_8h"/>
        <childnode refid="48102" relation="include">
        </childnode>
      </node>
      <node id="48494">
        <label>pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h</label>
        <link refid="material_primvar_transfer_scene_index_8h_source"/>
      </node>
      <node id="47937">
        <label>pxr/usd/usd/stage.h</label>
        <link refid="stage_8h"/>
        <childnode refid="47938" relation="include">
        </childnode>
        <childnode refid="47939" relation="include">
        </childnode>
        <childnode refid="47941" relation="include">
        </childnode>
        <childnode refid="48066" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="48067" relation="include">
        </childnode>
        <childnode refid="48068" relation="include">
        </childnode>
        <childnode refid="48172" relation="include">
        </childnode>
        <childnode refid="48123" relation="include">
        </childnode>
        <childnode refid="48090" relation="include">
        </childnode>
        <childnode refid="48079" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48081" relation="include">
        </childnode>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48083" relation="include">
        </childnode>
        <childnode refid="48084" relation="include">
        </childnode>
        <childnode refid="48089" relation="include">
        </childnode>
        <childnode refid="48085" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48080" relation="include">
        </childnode>
        <childnode refid="48091" relation="include">
        </childnode>
        <childnode refid="48124" relation="include">
        </childnode>
        <childnode refid="48093" relation="include">
        </childnode>
        <childnode refid="48017" relation="include">
        </childnode>
        <childnode refid="48018" relation="include">
        </childnode>
        <childnode refid="48092" relation="include">
        </childnode>
        <childnode refid="48094" relation="include">
        </childnode>
        <childnode refid="48087" relation="include">
        </childnode>
        <childnode refid="48088" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48019" relation="include">
        </childnode>
        <childnode refid="48125" relation="include">
        </childnode>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48036" relation="include">
        </childnode>
        <childnode refid="48109" relation="include">
        </childnode>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="47943" relation="include">
        </childnode>
        <childnode refid="47944" relation="include">
        </childnode>
        <childnode refid="47945" relation="include">
        </childnode>
        <childnode refid="47950" relation="include">
        </childnode>
        <childnode refid="47951" relation="include">
        </childnode>
        <childnode refid="47952" relation="include">
        </childnode>
        <childnode refid="47953" relation="include">
        </childnode>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
        <childnode refid="48041" relation="include">
        </childnode>
        <childnode refid="47949" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="47955" relation="include">
        </childnode>
        <childnode refid="47946" relation="include">
        </childnode>
        <childnode refid="47947" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="47948" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="48110" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
        <childnode refid="48047" relation="include">
        </childnode>
        <childnode refid="47956" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48049" relation="include">
        </childnode>
        <childnode refid="48129" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48050" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48052" relation="include">
        </childnode>
        <childnode refid="48053" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48131" relation="include">
        </childnode>
        <childnode refid="48054" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48132" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48134" relation="include">
        </childnode>
        <childnode refid="47957" relation="include">
        </childnode>
        <childnode refid="48136" relation="include">
        </childnode>
        <childnode refid="48137" relation="include">
        </childnode>
        <childnode refid="48135" relation="include">
        </childnode>
        <childnode refid="48138" relation="include">
        </childnode>
        <childnode refid="48139" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="47958" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
        <childnode refid="48020" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48142" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48145" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48173" relation="include">
        </childnode>
        <childnode refid="48174" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48107" relation="include">
        </childnode>
        <childnode refid="48108" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="48072" relation="include">
        </childnode>
      </node>
      <node id="48569">
        <label>pxr/imaging/hd/bufferSource.h</label>
        <link refid="buffer_source_8h_source"/>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48328" relation="include">
        </childnode>
        <childnode refid="48327" relation="include">
        </childnode>
        <childnode refid="48574" relation="include">
        </childnode>
        <childnode refid="48575" relation="include">
        </childnode>
        <childnode refid="48576" relation="include">
        </childnode>
        <childnode refid="48340" relation="include">
        </childnode>
        <childnode refid="48326" relation="include">
        </childnode>
        <childnode refid="48577" relation="include">
        </childnode>
        <childnode refid="48341" relation="include">
        </childnode>
        <childnode refid="48336" relation="include">
        </childnode>
      </node>
      <node id="48500">
        <label>pxr/imaging/hdsi/sceneGlobalsSceneIndex.h</label>
        <link refid="scene_globals_scene_index_8h_source"/>
      </node>
      <node id="48390">
        <label>pxr/imaging/hd/rprimCollection.h</label>
        <link refid="rprim_collection_8h_source"/>
        <childnode refid="48391" relation="include">
        </childnode>
        <childnode refid="48389" relation="include">
        </childnode>
        <childnode refid="48298" relation="include">
        </childnode>
        <childnode refid="48393" relation="include">
        </childnode>
        <childnode refid="48394" relation="include">
        </childnode>
        <childnode refid="48303" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48067">
        <label>pxr/usd/usd/namespaceEditor.h</label>
        <link refid="namespace_editor_8h"/>
      </node>
      <node id="48344">
        <label>pxr/imaging/hio/glslfx.h</label>
        <link refid="glslfx_8h"/>
        <childnode refid="48334" relation="include">
        </childnode>
      </node>
      <node id="48000">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="48392">
        <label>pxr/imaging/hdSt/instancer.h</label>
        <link refid="t_2instancer_8h_source"/>
      </node>
      <node id="48224">
        <label>pxr/usd/sdf/mapEditor.h</label>
        <link refid="map_editor_8h_source"/>
        <childnode refid="48225" relation="include">
        </childnode>
      </node>
      <node id="48295">
        <label>pxr/imaging/hd/sceneIndexAdapterSceneDelegate.h</label>
        <link refid="scene_index_adapter_scene_delegate_8h_source"/>
      </node>
      <node id="48086">
        <label>pxr/usd/usdGeom/cylinder_1.h</label>
        <link refid="cylinder__1_8h"/>
      </node>
      <node id="48164">
        <label>pxr/usdImaging/usdImaging/collectionAPIAdapter.h</label>
        <link refid="collection_a_p_i_adapter_8h_source"/>
      </node>
      <node id="48242">
        <label>pxr/imaging/hdPrman/cylinder.h</label>
        <link refid="imaging_2hd_prman_2cylinder_8h_source"/>
      </node>
      <node id="48302">
        <label>pxr/imaging/hdSt/renderPass.h</label>
        <link refid="t_2render_pass_8h_source"/>
      </node>
      <node id="47931">
        <label>pxr/usd/pcp/expressionVariables.h</label>
        <link refid="expression_variables_8h_source"/>
      </node>
      <node id="48436">
        <label>pxr/imaging/hd/lightSchema.h</label>
        <link refid="light_schema_8h_source"/>
      </node>
      <node id="48058">
        <label>pxr/usd/usdShade/material.h</label>
        <link refid="usd_2usd_shade_2material_8h"/>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48291">
        <label>pxr/imaging/hd/volume.h</label>
        <link refid="imaging_2hd_2volume_8h_source"/>
        <childnode refid="48246" relation="include">
        </childnode>
        <childnode refid="48292" relation="include">
        </childnode>
      </node>
      <node id="48284">
        <label>pxr/imaging/hd/basisCurves.h</label>
        <link refid="imaging_2hd_2basis_curves_8h_source"/>
        <childnode refid="48240" relation="include">
        </childnode>
        <childnode refid="48285" relation="include">
        </childnode>
      </node>
      <node id="48157">
        <label>pxr/usdImaging/usdImaging/dataSourceRelationship.h</label>
        <link refid="data_source_relationship_8h_source"/>
      </node>
      <node id="48006">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="48229">
        <label>pxr/usd/sdf/changeList.h</label>
        <link refid="change_list_8h"/>
        <childnode refid="48178" relation="include">
        </childnode>
        <childnode refid="48230" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
      </node>
      <node id="48188">
        <label>pxr/usd/usd/pyEditContext.h</label>
        <link refid="py_edit_context_8h_source"/>
      </node>
      <node id="48013">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="48171">
        <label>pxr/usdImaging/usdviewq/utils.h</label>
        <link refid="usd_imaging_2usdviewq_2utils_8h_source"/>
      </node>
      <node id="48372">
        <label>pxr/usd/pcp/dependency.h</label>
        <link refid="dependency_8h_source"/>
        <childnode refid="47935" relation="include">
        </childnode>
        <childnode refid="47934" relation="include">
        </childnode>
      </node>
      <node id="48045">
        <label>pxr/usd/usdMedia/assetPreviewsAPI.h</label>
        <link refid="asset_previews_a_p_i_8h"/>
      </node>
      <node id="48340">
        <label>pxr/imaging/hdSt/interleavedMemoryManager.h</label>
        <link refid="interleaved_memory_manager_8h_source"/>
      </node>
      <node id="48001">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="48378">
        <label>pxr/usd/sdrOsl/oslParser.h</label>
        <link refid="osl_parser_8h"/>
      </node>
      <node id="48206">
        <label>pxr/usd/usdUtils/usdzPackage.h</label>
        <link refid="usdz_package_8h"/>
        <childnode refid="48207" relation="include">
        </childnode>
      </node>
      <node id="48289">
        <label>pxr/imaging/hd/points.h</label>
        <link refid="imaging_2hd_2points_8h_source"/>
        <childnode refid="48244" relation="include">
        </childnode>
        <childnode refid="48290" relation="include">
        </childnode>
      </node>
      <node id="48033">
        <label>pxr/usdImaging/usdImaging/dataSourceMaterial.h</label>
        <link refid="data_source_material_8h_source"/>
      </node>
      <node id="48475">
        <label>pxr/usdImaging/usdImaging/geomModelSchema.h</label>
        <link refid="geom_model_schema_8h_source"/>
      </node>
      <node id="48123">
        <label>pxr/usd/usd/typed.h</label>
        <link refid="typed_8h"/>
        <childnode refid="48124" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="47956" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48134" relation="include">
        </childnode>
        <childnode refid="47957" relation="include">
        </childnode>
        <childnode refid="48135" relation="include">
        </childnode>
        <childnode refid="48139" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48142" relation="include">
        </childnode>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48145" relation="include">
        </childnode>
      </node>
      <node id="48527">
        <label>pxr/imaging/hd/retainedSceneIndex.h</label>
        <link refid="retained_scene_index_8h_source"/>
        <childnode refid="48528" relation="include">
        </childnode>
      </node>
      <node id="48431">
        <label>pxr/imaging/hd/instancerTopologySchema.h</label>
        <link refid="instancer_topology_schema_8h_source"/>
      </node>
      <node id="48096">
        <label>pxr/usd/usdGeom/sphere.h</label>
        <link refid="usd_2usd_geom_2sphere_8h"/>
        <childnode refid="47961" relation="include">
        </childnode>
      </node>
      <node id="48081">
        <label>pxr/usd/usdGeom/capsule.h</label>
        <link refid="capsule_8h"/>
      </node>
      <node id="48040">
        <label>pxr/usd/usdLux/listAPI.h</label>
        <link refid="list_a_p_i_8h"/>
      </node>
      <node id="48315">
        <label>pxr/imaging/hdx/aovInputTask.h</label>
        <link refid="aov_input_task_8h_source"/>
      </node>
      <node id="48147">
        <label>pxr/usd/usdGeom/primvar.h</label>
        <link refid="primvar_8h_source"/>
        <childnode refid="48124" relation="include">
        </childnode>
        <childnode refid="48019" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48148" relation="include">
        </childnode>
        <childnode refid="48021" relation="include">
        </childnode>
      </node>
      <node id="48046">
        <label>pxr/usd/usdPhysics/articulationRootAPI.h</label>
        <link refid="articulation_root_a_p_i_8h"/>
      </node>
      <node id="48507">
        <label>pxr/usdImaging/usdImaging/selectionSceneIndex.h</label>
        <link refid="selection_scene_index_8h_source"/>
      </node>
      <node id="48278">
        <label>pxr/imaging/hd/renderIndex.h</label>
        <link refid="render_index_8h_source"/>
        <childnode refid="48279" relation="include">
        </childnode>
        <childnode refid="48252" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48244">
        <label>pxr/imaging/hdPrman/points.h</label>
        <link refid="imaging_2hd_prman_2points_8h_source"/>
      </node>
      <node id="48034">
        <label>pxr/usdImaging/usdImaging/dataSourceRenderPrims.h</label>
        <link refid="data_source_render_prims_8h_source"/>
      </node>
      <node id="48072">
        <label>pxr/usdImaging/usdImaging/stageSceneIndex.h</label>
        <link refid="stage_scene_index_8h_source"/>
      </node>
      <node id="48458">
        <label>pxr/imaging/hd/renderProductSchema.h</label>
        <link refid="render_product_schema_8h_source"/>
      </node>
      <node id="48107">
        <label>pxr/usdImaging/usdAppUtils/camera.h</label>
        <link refid="usd_imaging_2usd_app_utils_2camera_8h"/>
      </node>
      <node id="48597">
        <label>pxr/imaging/hdSt/glConversions.h</label>
        <link refid="gl_conversions_8h_source"/>
      </node>
      <node id="48267">
        <label>pxr/imaging/hd/unitTestNullRenderDelegate.h</label>
        <link refid="unit_test_null_render_delegate_8h_source"/>
        <childnode refid="48268" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48280">
        <label>pxr/imaging/hd/extComputation.h</label>
        <link refid="ext_computation_8h_source"/>
        <childnode refid="48281" relation="include">
        </childnode>
        <childnode refid="48282" relation="include">
        </childnode>
      </node>
      <node id="48387">
        <label>pxr/imaging/hd/drawItem.h</label>
        <link refid="draw_item_8h_source"/>
        <childnode refid="48388" relation="include">
        </childnode>
        <childnode refid="48395" relation="include">
        </childnode>
      </node>
      <node id="48133">
        <label>pxr/usd/usdPhysics/scene.h</label>
        <link refid="scene_8h"/>
      </node>
      <node id="48440">
        <label>pxr/imaging/hd/materialNetworkSchema.h</label>
        <link refid="material_network_schema_8h_source"/>
      </node>
      <node id="48217">
        <label>pxr/usd/sdf/attributeSpec.h</label>
        <link refid="attribute_spec_8h"/>
        <childnode refid="48202" relation="include">
        </childnode>
      </node>
      <node id="48506">
        <label>pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h</label>
        <link refid="root_overrides_scene_index_8h_source"/>
      </node>
      <node id="48457">
        <label>pxr/imaging/hd/renderCapabilitiesSchema.h</label>
        <link refid="render_capabilities_schema_8h_source"/>
      </node>
      <node id="47984">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="47974">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="48353">
        <label>pxr/imaging/hio/fieldTextureData.h</label>
        <link refid="field_texture_data_8h"/>
      </node>
      <node id="48110">
        <label>pxr/usd/usdMedia/spatialAudio.h</label>
        <link refid="spatial_audio_8h"/>
      </node>
      <node id="47940">
        <label>pxr/usd/usdUtils/stitchClips.h</label>
        <link refid="stitch_clips_8h"/>
      </node>
      <node id="48350">
        <label>pxr/imaging/hdSt/udimTextureObject.h</label>
        <link refid="udim_texture_object_8h_source"/>
      </node>
      <node id="47967">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="48020">
        <label>pxr/usd/usdRi/statementsAPI.h</label>
        <link refid="statements_a_p_i_8h"/>
      </node>
      <node id="48007">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="48003" relation="include">
        </childnode>
      </node>
      <node id="48551">
        <label>pxr/imaging/hd/extComputationContext.h</label>
        <link refid="ext_computation_context_8h_source"/>
        <childnode refid="48552" relation="include">
        </childnode>
      </node>
      <node id="48259">
        <label>pxr/imaging/hd/renderDelegate.h</label>
        <link refid="render_delegate_8h_source"/>
        <childnode refid="48260" relation="include">
        </childnode>
        <childnode refid="48264" relation="include">
        </childnode>
        <childnode refid="48266" relation="include">
        </childnode>
        <childnode refid="48267" relation="include">
        </childnode>
        <childnode refid="48269" relation="include">
        </childnode>
        <childnode refid="48270" relation="include">
        </childnode>
        <childnode refid="48271" relation="include">
        </childnode>
        <childnode refid="48272" relation="include">
        </childnode>
        <childnode refid="48273" relation="include">
        </childnode>
      </node>
      <node id="48592">
        <label>pxr/imaging/hdPrman/material.h</label>
        <link refid="imaging_2hd_prman_2material_8h_source"/>
        <childnode refid="48239" relation="include">
        </childnode>
      </node>
      <node id="48293">
        <label>pxr/imaging/hdPrman/gprimbase.h</label>
        <link refid="gprimbase_8h_source"/>
        <childnode refid="48239" relation="include">
        </childnode>
      </node>
      <node id="48215">
        <label>pxr/usd/sdf/pseudoRootSpec.h</label>
        <link refid="pseudo_root_spec_8h"/>
      </node>
      <node id="48526">
        <label>pxr/imaging/hd/dataSourceLegacyPrim.h</label>
        <link refid="data_source_legacy_prim_8h_source"/>
      </node>
      <node id="48449">
        <label>pxr/imaging/hd/nurbsPatchSchema.h</label>
        <link refid="nurbs_patch_schema_8h_source"/>
      </node>
      <node id="48406">
        <label>pxr/imaging/hd/dataSourceTypeDefs.h</label>
        <link refid="data_source_type_defs_8h_source"/>
        <childnode refid="48407" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
        <childnode refid="48155" relation="include">
        </childnode>
        <childnode refid="48025" relation="include">
        </childnode>
        <childnode refid="48022" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
        <childnode refid="48157" relation="include">
        </childnode>
      </node>
      <node id="48249">
        <label>pxr/imaging/glf/simpleLightingContext.h</label>
        <link refid="simple_lighting_context_8h"/>
        <childnode refid="48250" relation="include">
        </childnode>
        <childnode refid="48251" relation="include">
        </childnode>
        <childnode refid="48252" relation="include">
        </childnode>
      </node>
      <node id="48605">
        <label>pxr/usdImaging/usdImagingGL/rendererSettings.h</label>
        <link refid="renderer_settings_8h_source"/>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48234">
        <label>pxr/usd/sdf/schema.h</label>
        <link refid="usd_2sdf_2schema_8h_source"/>
        <childnode refid="48210" relation="include">
        </childnode>
        <childnode refid="48227" relation="include">
        </childnode>
        <childnode refid="48211" relation="include">
        </childnode>
        <childnode refid="48176" relation="include">
        </childnode>
        <childnode refid="48209" relation="include">
        </childnode>
        <childnode refid="48073" relation="include">
        </childnode>
      </node>
      <node id="48002">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="48038">
        <label>pxr/usd/usdHydra/generativeProceduralAPI.h</label>
        <link refid="generative_procedural_a_p_i_8h"/>
      </node>
      <node id="48263">
        <label>pxr/imaging/hdStorm/rendererPlugin.h</label>
        <link refid="torm_2renderer_plugin_8h_source"/>
      </node>
      <node id="48358">
        <label>pxr/usd/ar/resolverContextBinder.h</label>
        <link refid="resolver_context_binder_8h"/>
      </node>
      <node id="48328">
        <label>pxr/imaging/hdSt/extCompGpuComputation.h</label>
        <link refid="ext_comp_gpu_computation_8h_source"/>
      </node>
      <node id="48319">
        <label>pxr/imaging/hdx/colorizeSelectionTask.h</label>
        <link refid="colorize_selection_task_8h_source"/>
      </node>
      <node id="48303">
        <label>pxr/imaging/hdx/pickTask.h</label>
        <link refid="pick_task_8h_source"/>
        <childnode refid="48304" relation="include">
        </childnode>
      </node>
      <node id="48166">
        <label>pxr/usdImaging/usdImaging/geomModelAPIAdapter.h</label>
        <link refid="geom_model_a_p_i_adapter_8h_source"/>
      </node>
      <node id="48400">
        <label>pxr/imaging/hdSt/dispatchBuffer.h</label>
        <link refid="dispatch_buffer_8h_source"/>
      </node>
      <node id="48574">
        <label>pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h</label>
        <link refid="ext_comp_gpu_primvar_buffer_source_8h_source"/>
      </node>
      <node id="48550">
        <label>pxr/imaging/hd/driver.h</label>
        <link refid="driver_8h_source"/>
        <childnode refid="48296" relation="include">
        </childnode>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48448">
        <label>pxr/imaging/hd/nurbsPatchTrimCurveSchema.h</label>
        <link refid="nurbs_patch_trim_curve_schema_8h_source"/>
        <childnode refid="48449" relation="include">
        </childnode>
      </node>
      <node id="48174">
        <label>pxr/usd/usdUtils/introspection.h</label>
        <link refid="introspection_8h"/>
      </node>
      <node id="48235">
        <label>pxr/usd/sdf/specType.h</label>
        <link refid="spec_type_8h"/>
        <childnode refid="48236" relation="include">
        </childnode>
      </node>
      <node id="48073">
        <label>pxr/usd/usd/prim.h</label>
        <link refid="prim_8h"/>
        <childnode refid="47938" relation="include">
        </childnode>
        <childnode refid="48074" relation="include">
        </childnode>
        <childnode refid="47939" relation="include">
        </childnode>
        <childnode refid="47941" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48116" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="48117" relation="include">
        </childnode>
        <childnode refid="48118" relation="include">
        </childnode>
        <childnode refid="48119" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
        <childnode refid="48122" relation="include">
        </childnode>
        <childnode refid="48159" relation="include">
        </childnode>
        <childnode refid="48123" relation="include">
        </childnode>
        <childnode refid="48160" relation="include">
        </childnode>
        <childnode refid="48090" relation="include">
        </childnode>
        <childnode refid="48079" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48081" relation="include">
        </childnode>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48083" relation="include">
        </childnode>
        <childnode refid="48084" relation="include">
        </childnode>
        <childnode refid="48089" relation="include">
        </childnode>
        <childnode refid="48085" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48080" relation="include">
        </childnode>
        <childnode refid="48091" relation="include">
        </childnode>
        <childnode refid="48124" relation="include">
        </childnode>
        <childnode refid="48093" relation="include">
        </childnode>
        <childnode refid="48017" relation="include">
        </childnode>
        <childnode refid="48018" relation="include">
        </childnode>
        <childnode refid="48092" relation="include">
        </childnode>
        <childnode refid="48094" relation="include">
        </childnode>
        <childnode refid="48087" relation="include">
        </childnode>
        <childnode refid="48088" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48019" relation="include">
        </childnode>
        <childnode refid="48125" relation="include">
        </childnode>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48036" relation="include">
        </childnode>
        <childnode refid="48109" relation="include">
        </childnode>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48076" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="47943" relation="include">
        </childnode>
        <childnode refid="47944" relation="include">
        </childnode>
        <childnode refid="47945" relation="include">
        </childnode>
        <childnode refid="47950" relation="include">
        </childnode>
        <childnode refid="47951" relation="include">
        </childnode>
        <childnode refid="47952" relation="include">
        </childnode>
        <childnode refid="47953" relation="include">
        </childnode>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
        <childnode refid="48041" relation="include">
        </childnode>
        <childnode refid="47949" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="47955" relation="include">
        </childnode>
        <childnode refid="47946" relation="include">
        </childnode>
        <childnode refid="47947" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="47948" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="48110" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
        <childnode refid="48047" relation="include">
        </childnode>
        <childnode refid="47956" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48049" relation="include">
        </childnode>
        <childnode refid="48129" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48050" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48052" relation="include">
        </childnode>
        <childnode refid="48053" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48131" relation="include">
        </childnode>
        <childnode refid="48054" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48132" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48134" relation="include">
        </childnode>
        <childnode refid="47957" relation="include">
        </childnode>
        <childnode refid="48136" relation="include">
        </childnode>
        <childnode refid="48137" relation="include">
        </childnode>
        <childnode refid="48135" relation="include">
        </childnode>
        <childnode refid="48138" relation="include">
        </childnode>
        <childnode refid="48139" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="47958" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
        <childnode refid="48020" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48142" relation="include">
        </childnode>
        <childnode refid="48161" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48162" relation="include">
        </childnode>
        <childnode refid="48148" relation="include">
        </childnode>
        <childnode refid="48145" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48163" relation="include">
        </childnode>
        <childnode refid="48033" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
        <childnode refid="48169" relation="include">
        </childnode>
        <childnode refid="48170" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47962" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
        <childnode refid="48171" relation="include">
        </childnode>
      </node>
      <node id="48382">
        <label>pxr/imaging/hdSt/renderPassState.h</label>
        <link refid="t_2render_pass_state_8h_source"/>
        <childnode refid="48311" relation="include">
        </childnode>
        <childnode refid="48309" relation="include">
        </childnode>
      </node>
      <node id="48376">
        <label>pxr/usd/sdf/predicateProgram.h</label>
        <link refid="predicate_program_8h_source"/>
        <childnode refid="48374" relation="include">
        </childnode>
      </node>
      <node id="47946">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="48466">
        <label>pxr/imaging/hd/meshTopologySchema.h</label>
        <link refid="mesh_topology_schema_8h_source"/>
        <childnode refid="48426" relation="include">
        </childnode>
      </node>
      <node id="48456">
        <label>pxr/imaging/hd/renderBufferSchema.h</label>
        <link refid="render_buffer_schema_8h_source"/>
      </node>
      <node id="48026">
        <label>pxr/usdImaging/usdImaging/dataSourceBasisCurves.h</label>
        <link refid="data_source_basis_curves_8h_source"/>
      </node>
      <node id="47992">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="48575">
        <label>pxr/imaging/hdSt/extCompPrimvarBufferSource.h</label>
        <link refid="ext_comp_primvar_buffer_source_8h_source"/>
      </node>
      <node id="48312">
        <label>pxr/imaging/hdx/selectionTask.h</label>
        <link refid="selection_task_8h_source"/>
      </node>
      <node id="48248">
        <label>pxr/imaging/glf/simpleLight.h</label>
        <link refid="simple_light_8h"/>
        <childnode refid="48249" relation="include">
        </childnode>
        <childnode refid="48253" relation="include">
        </childnode>
        <childnode refid="48254" relation="include">
        </childnode>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="47961">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="47962" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48584">
        <label>pxr/imaging/hd/camera.h</label>
        <link refid="imaging_2hd_2camera_8h_source"/>
        <childnode refid="48561" relation="include">
        </childnode>
        <childnode refid="48316" relation="include">
        </childnode>
        <childnode refid="48304" relation="include">
        </childnode>
      </node>
      <node id="48257">
        <label>pxr/imaging/glf/drawTarget.h</label>
        <link refid="glf_2draw_target_8h"/>
      </node>
      <node id="48479">
        <label>pxr/usdImaging/usdImaging/usdRenderSettingsSchema.h</label>
        <link refid="usd_render_settings_schema_8h_source"/>
      </node>
      <node id="48154">
        <label>pxr/usd/usdUtils/sparseValueWriter.h</label>
        <link refid="sparse_value_writer_8h"/>
      </node>
      <node id="48165">
        <label>pxr/usdImaging/usdImaging/coordSysAPIAdapter.h</label>
        <link refid="coord_sys_a_p_i_adapter_8h_source"/>
      </node>
      <node id="48586">
        <label>pxr/imaging/hdPrman/coordSys.h</label>
        <link refid="rman_2coord_sys_8h_source"/>
      </node>
      <node id="48561">
        <label>pxr/imaging/hdPrman/camera.h</label>
        <link refid="imaging_2hd_prman_2camera_8h_source"/>
      </node>
      <node id="48520">
        <label>pxr/imaging/hd/lazyContainerDataSource.h</label>
        <link refid="lazy_container_data_source_8h_source"/>
      </node>
      <node id="48184">
        <label>pxr/usd/pcp/propertyIndex.h</label>
        <link refid="property_index_8h_source"/>
        <childnode refid="47935" relation="include">
        </childnode>
      </node>
      <node id="48028">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsCurves.h</label>
        <link refid="data_source_nurbs_curves_8h_source"/>
      </node>
      <node id="48160">
        <label>pxr/usd/usd/variantSets.h</label>
        <link refid="variant_sets_8h_source"/>
        <childnode refid="48058" relation="include">
        </childnode>
      </node>
      <node id="48213">
        <label>pxr/usd/sdf/proxyTypes.h</label>
        <link refid="proxy_types_8h_source"/>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48214" relation="include">
        </childnode>
        <childnode refid="48216" relation="include">
        </childnode>
        <childnode refid="48219" relation="include">
        </childnode>
        <childnode refid="48220" relation="include">
        </childnode>
      </node>
      <node id="48482">
        <label>pxr/imaging/hd/dependencyForwardingSceneIndex.h</label>
        <link refid="dependency_forwarding_scene_index_8h_source"/>
      </node>
      <node id="48367">
        <label>pxr/usd/sdf/childrenProxy.h</label>
        <link refid="children_proxy_8h"/>
        <childnode refid="48213" relation="include">
        </childnode>
        <childnode refid="48368" relation="include">
        </childnode>
      </node>
      <node id="48342">
        <label>pxr/imaging/hdx/types.h</label>
        <link refid="imaging_2hdx_2types_8h_source"/>
      </node>
      <node id="48581">
        <label>pxr/imaging/hd/primTypeIndex.h</label>
        <link refid="prim_type_index_8h_source"/>
        <childnode refid="48278" relation="include">
        </childnode>
      </node>
      <node id="48336">
        <label>pxr/imaging/hdSt/vboSimpleMemoryManager.h</label>
        <link refid="vbo_simple_memory_manager_8h_source"/>
      </node>
      <node id="48509">
        <label>pxr/imaging/hd/flattenedDataSourceProvider.h</label>
        <link refid="flattened_data_source_provider_8h_source"/>
        <childnode refid="48510" relation="include">
        </childnode>
        <childnode refid="48511" relation="include">
        </childnode>
        <childnode refid="48512" relation="include">
        </childnode>
        <childnode refid="48513" relation="include">
        </childnode>
        <childnode refid="48514" relation="include">
        </childnode>
        <childnode refid="48515" relation="include">
        </childnode>
        <childnode refid="48516" relation="include">
        </childnode>
        <childnode refid="48517" relation="include">
        </childnode>
      </node>
      <node id="48511">
        <label>pxr/imaging/hd/flattenedOverlayDataSourceProvider.h</label>
        <link refid="flattened_overlay_data_source_provider_8h_source"/>
      </node>
      <node id="48424">
        <label>pxr/imaging/hd/geomSubsetSchema.h</label>
        <link refid="geom_subset_schema_8h_source"/>
        <childnode refid="48425" relation="include">
        </childnode>
      </node>
      <node id="48207">
        <label>pxr/usd/usdUtils/dependencies.h</label>
        <link refid="dependencies_8h"/>
      </node>
      <node id="48149">
        <label>pxr/usd/usdShade/input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
      </node>
      <node id="48270">
        <label>pxr/imaging/hdEmbree/renderParam.h</label>
        <link refid="hd_embree_2render_param_8h_source"/>
      </node>
      <node id="48363">
        <label>pxr/usd/ndr/registry.h</label>
        <link refid="usd_2ndr_2registry_8h"/>
        <childnode refid="48364" relation="include">
        </childnode>
      </node>
      <node id="48428">
        <label>pxr/imaging/hd/instanceCategoriesSchema.h</label>
        <link refid="instance_categories_schema_8h_source"/>
      </node>
      <node id="48282">
        <label>pxr/imaging/hdSt/extComputation.h</label>
        <link refid="t_2ext_computation_8h_source"/>
      </node>
      <node id="48399">
        <label>pxr/imaging/hdSt/bufferArrayRange.h</label>
        <link refid="t_2buffer_array_range_8h_source"/>
        <childnode refid="48400" relation="include">
        </childnode>
        <childnode refid="48340" relation="include">
        </childnode>
        <childnode refid="48341" relation="include">
        </childnode>
        <childnode refid="48336" relation="include">
        </childnode>
      </node>
      <node id="48126">
        <label>pxr/usd/usdGeom/subset.h</label>
        <link refid="subset_8h"/>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
      </node>
      <node id="47938">
        <label>pxr/usd/usd/apiSchemaBase.h</label>
        <link refid="api_schema_base_8h"/>
        <childnode refid="47939" relation="include">
        </childnode>
        <childnode refid="47941" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="48017" relation="include">
        </childnode>
        <childnode refid="48018" relation="include">
        </childnode>
        <childnode refid="48019" relation="include">
        </childnode>
        <childnode refid="48036" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
        <childnode refid="48041" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
        <childnode refid="48047" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48049" relation="include">
        </childnode>
        <childnode refid="48050" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48052" relation="include">
        </childnode>
        <childnode refid="48053" relation="include">
        </childnode>
        <childnode refid="48054" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="47958" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
        <childnode refid="48020" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
      </node>
      <node id="48408">
        <label>pxr/imaging/hd/basisCurvesTopologySchema.h</label>
        <link refid="basis_curves_topology_schema_8h_source"/>
        <childnode refid="48409" relation="include">
        </childnode>
      </node>
      <node id="48074">
        <label>pxr/usd/usd/attributeQuery.h</label>
        <link refid="attribute_query_8h_source"/>
        <childnode refid="48075" relation="include">
        </childnode>
        <childnode refid="48076" relation="include">
        </childnode>
        <childnode refid="48077" relation="include">
        </childnode>
        <childnode refid="48115" relation="include">
        </childnode>
      </node>
      <node id="48525">
        <label>pxr/imaging/hd/sceneIndex.h</label>
        <link refid="scene_index_8h_source"/>
        <childnode refid="48526" relation="include">
        </childnode>
        <childnode refid="48481" relation="include">
        </childnode>
        <childnode refid="48523" relation="include">
        </childnode>
        <childnode refid="48278" relation="include">
        </childnode>
        <childnode refid="48527" relation="include">
        </childnode>
        <childnode refid="48461" relation="include">
        </childnode>
        <childnode refid="48295" relation="include">
        </childnode>
        <childnode refid="48529" relation="include">
        </childnode>
        <childnode refid="48538" relation="include">
        </childnode>
        <childnode refid="48539" relation="include">
        </childnode>
        <childnode refid="48163" relation="include">
        </childnode>
        <childnode refid="48542" relation="include">
        </childnode>
        <childnode refid="48072" relation="include">
        </childnode>
        <childnode refid="48543" relation="include">
        </childnode>
      </node>
      <node id="48305">
        <label>pxr/imaging/hdx/drawTargetTask.h</label>
        <link refid="draw_target_task_8h_source"/>
      </node>
      <node id="48473">
        <label>pxr/imaging/hdPrman/rileyRenderOutputSchema.h</label>
        <link refid="riley_render_output_schema_8h_source"/>
      </node>
      <node id="48395">
        <label>pxr/imaging/hdSt/drawItem.h</label>
        <link refid="t_2draw_item_8h_source"/>
        <childnode refid="48396" relation="include">
        </childnode>
      </node>
      <node id="48082">
        <label>pxr/usd/usdGeom/capsule_1.h</label>
        <link refid="capsule__1_8h"/>
      </node>
      <node id="48582">
        <label>pxr/imaging/hd/smoothNormals.h</label>
        <link refid="smooth_normals_8h_source"/>
      </node>
      <node id="48369">
        <label>pxr/usd/sdf/predicateExpression.h</label>
        <link refid="predicate_expression_8h_source"/>
        <childnode refid="48370" relation="include">
        </childnode>
        <childnode refid="48374" relation="include">
        </childnode>
        <childnode refid="48375" relation="include">
        </childnode>
        <childnode refid="48376" relation="include">
        </childnode>
      </node>
      <node id="48368">
        <label>pxr/usd/sdf/pyChildrenProxy.h</label>
        <link refid="py_children_proxy_8h"/>
      </node>
      <node id="48135">
        <label>pxr/usd/usdRender/settingsBase.h</label>
        <link refid="settings_base_8h"/>
        <childnode refid="48136" relation="include">
        </childnode>
        <childnode refid="48137" relation="include">
        </childnode>
        <childnode refid="48138" relation="include">
        </childnode>
      </node>
      <node id="48105">
        <label>pxr/usd/usdSkel/cache.h</label>
        <link refid="usd_skel_2cache_8h"/>
        <childnode refid="48012" relation="include">
        </childnode>
      </node>
      <node id="48338">
        <label>pxr/imaging/hdSt/materialNetwork.h</label>
        <link refid="material_network_8h_source"/>
        <childnode refid="48333" relation="include">
        </childnode>
      </node>
      <node id="48080">
        <label>pxr/usd/usdGeom/gprim.h</label>
        <link refid="usd_2usd_geom_2gprim_8h"/>
        <childnode refid="48081" relation="include">
        </childnode>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48083" relation="include">
        </childnode>
        <childnode refid="48084" relation="include">
        </childnode>
        <childnode refid="48085" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48087" relation="include">
        </childnode>
        <childnode refid="48088" relation="include">
        </childnode>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
      </node>
      <node id="48407">
        <label>pxr/imaging/hd/schema.h</label>
        <link refid="imaging_2hd_2schema_8h_source"/>
        <childnode refid="48408" relation="include">
        </childnode>
        <childnode refid="48410" relation="include">
        </childnode>
        <childnode refid="48411" relation="include">
        </childnode>
        <childnode refid="48412" relation="include">
        </childnode>
        <childnode refid="48413" relation="include">
        </childnode>
        <childnode refid="48414" relation="include">
        </childnode>
        <childnode refid="48415" relation="include">
        </childnode>
        <childnode refid="48416" relation="include">
        </childnode>
        <childnode refid="48417" relation="include">
        </childnode>
        <childnode refid="48419" relation="include">
        </childnode>
        <childnode refid="48420" relation="include">
        </childnode>
        <childnode refid="48421" relation="include">
        </childnode>
        <childnode refid="48422" relation="include">
        </childnode>
        <childnode refid="48424" relation="include">
        </childnode>
        <childnode refid="48427" relation="include">
        </childnode>
        <childnode refid="48428" relation="include">
        </childnode>
        <childnode refid="48429" relation="include">
        </childnode>
        <childnode refid="48430" relation="include">
        </childnode>
        <childnode refid="48431" relation="include">
        </childnode>
        <childnode refid="48432" relation="include">
        </childnode>
        <childnode refid="48433" relation="include">
        </childnode>
        <childnode refid="48434" relation="include">
        </childnode>
        <childnode refid="48436" relation="include">
        </childnode>
        <childnode refid="48437" relation="include">
        </childnode>
        <childnode refid="48439" relation="include">
        </childnode>
        <childnode refid="48440" relation="include">
        </childnode>
        <childnode refid="48441" relation="include">
        </childnode>
        <childnode refid="48442" relation="include">
        </childnode>
        <childnode refid="48446" relation="include">
        </childnode>
        <childnode refid="48447" relation="include">
        </childnode>
        <childnode refid="48448" relation="include">
        </childnode>
        <childnode refid="48450" relation="include">
        </childnode>
        <childnode refid="48451" relation="include">
        </childnode>
        <childnode refid="48455" relation="include">
        </childnode>
        <childnode refid="48456" relation="include">
        </childnode>
        <childnode refid="48457" relation="include">
        </childnode>
        <childnode refid="48458" relation="include">
        </childnode>
        <childnode refid="48459" relation="include">
        </childnode>
        <childnode refid="48460" relation="include">
        </childnode>
        <childnode refid="48461" relation="include">
        </childnode>
        <childnode refid="48462" relation="include">
        </childnode>
        <childnode refid="48463" relation="include">
        </childnode>
        <childnode refid="48464" relation="include">
        </childnode>
        <childnode refid="48465" relation="include">
        </childnode>
        <childnode refid="48467" relation="include">
        </childnode>
        <childnode refid="48468" relation="include">
        </childnode>
        <childnode refid="48469" relation="include">
        </childnode>
        <childnode refid="48470" relation="include">
        </childnode>
        <childnode refid="48471" relation="include">
        </childnode>
        <childnode refid="48472" relation="include">
        </childnode>
        <childnode refid="48473" relation="include">
        </childnode>
        <childnode refid="48474" relation="include">
        </childnode>
        <childnode refid="48475" relation="include">
        </childnode>
        <childnode refid="48476" relation="include">
        </childnode>
        <childnode refid="48477" relation="include">
        </childnode>
        <childnode refid="48478" relation="include">
        </childnode>
        <childnode refid="48479" relation="include">
        </childnode>
        <childnode refid="48480" relation="include">
        </childnode>
      </node>
      <node id="48300">
        <label>pxr/imaging/hdEmbree/renderPass.h</label>
        <link refid="mbree_2render_pass_8h_source"/>
      </node>
      <node id="48288">
        <label>pxr/imaging/hdSt/mesh.h</label>
        <link refid="imaging_2hd_st_2mesh_8h_source"/>
      </node>
      <node id="48153">
        <label>pxr/usd/usdSkel/inbetweenShape.h</label>
        <link refid="inbetween_shape_8h_source"/>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48144" relation="include">
        </childnode>
      </node>
      <node id="48104">
        <label>pxr/usd/usdSkel/utils.h</label>
        <link refid="usd_2usd_skel_2utils_8h"/>
      </node>
      <node id="48446">
        <label>pxr/imaging/hd/materialSchema.h</label>
        <link refid="material_schema_8h_source"/>
      </node>
      <node id="48220">
        <label>pxr/usd/sdf/variantSpec.h</label>
        <link refid="variant_spec_8h"/>
      </node>
      <node id="48060">
        <label>pxr/usd/usdShade/coordSysAPI.h</label>
        <link refid="coord_sys_a_p_i_8h"/>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48306">
        <label>pxr/imaging/hdx/oitBufferAccessor.h</label>
        <link refid="oit_buffer_accessor_8h_source"/>
      </node>
      <node id="48553">
        <label>pxr/imaging/hd/materialNetworkInterface.h</label>
        <link refid="material_network_interface_8h_source"/>
        <childnode refid="48403" relation="include">
        </childnode>
        <childnode refid="48484" relation="include">
        </childnode>
        <childnode refid="48554" relation="include">
        </childnode>
        <childnode refid="48555" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
      </node>
      <node id="48472">
        <label>pxr/imaging/hdar/systemSchema.h</label>
        <link refid="r_2system_schema_8h_source"/>
      </node>
      <node id="48547">
        <label>pxr/imaging/hdsi/primManagingSceneIndexObserver.h</label>
        <link refid="prim_managing_scene_index_observer_8h"/>
      </node>
      <node id="48588">
        <label>pxr/imaging/hdPrman/light.h</label>
        <link refid="rman_2light_8h_source"/>
      </node>
      <node id="48433">
        <label>pxr/imaging/hd/legacyDisplayStyleSchema.h</label>
        <link refid="legacy_display_style_schema_8h_source"/>
      </node>
      <node id="47980">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="48532">
        <label>pxr/imaging/hdPrman/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_prman_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="48483">
        <label>pxr/imaging/hd/flatteningSceneIndex.h</label>
        <link refid="flattening_scene_index_8h_source"/>
      </node>
      <node id="48417">
        <label>pxr/imaging/hd/dependencySchema.h</label>
        <link refid="dependency_schema_8h_source"/>
        <childnode refid="48418" relation="include">
        </childnode>
      </node>
      <node id="48271">
        <label>pxr/imaging/hdPrman/renderDelegate.h</label>
        <link refid="rman_2render_delegate_8h_source"/>
      </node>
      <node id="48032">
        <label>pxr/usdImaging/usdImaging/dataSourceVolume.h</label>
        <link refid="data_source_volume_8h_source"/>
      </node>
      <node id="47959">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48068">
        <label>pxr/usd/usd/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="48069" relation="include">
        </childnode>
        <childnode refid="48070" relation="include">
        </childnode>
        <childnode refid="48071" relation="include">
        </childnode>
        <childnode refid="48073" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
      </node>
      <node id="48173">
        <label>pxr/usd/usdUtils/flattenLayerStack.h</label>
        <link refid="flatten_layer_stack_8h"/>
      </node>
      <node id="48103">
        <label>pxr/usd/usdSkel/bakeSkinning.h</label>
        <link refid="bake_skinning_8h_source"/>
        <childnode refid="48104" relation="include">
        </childnode>
      </node>
      <node id="48097">
        <label>pxr/usd/usdVol/volume.h</label>
        <link refid="usd_2usd_vol_2volume_8h"/>
        <childnode refid="48032" relation="include">
        </childnode>
        <childnode refid="47985" relation="include">
        </childnode>
      </node>
      <node id="48552">
        <label>pxr/imaging/hd/extComputationContextInternal.h</label>
        <link refid="ext_computation_context_internal_8h_source"/>
      </node>
      <node id="48598">
        <label>pxr/imaging/hdSt/hgiConversions.h</label>
        <link refid="hd_st_2hgi_conversions_8h_source"/>
      </node>
      <node id="48031">
        <label>pxr/usdImaging/usdImaging/dataSourceSchemaBased.h</label>
        <link refid="data_source_schema_based_8h_source"/>
      </node>
      <node id="48477">
        <label>pxr/usdImaging/usdImaging/usdPrimInfoSchema.h</label>
        <link refid="usd_prim_info_schema_8h_source"/>
      </node>
      <node id="48589">
        <label>pxr/imaging/hd/material.h</label>
        <link refid="imaging_2hd_2material_8h_source"/>
        <childnode refid="48554" relation="include">
        </childnode>
        <childnode refid="48322" relation="include">
        </childnode>
        <childnode refid="48590" relation="include">
        </childnode>
        <childnode refid="48591" relation="include">
        </childnode>
        <childnode refid="48592" relation="include">
        </childnode>
        <childnode refid="48555" relation="include">
        </childnode>
        <childnode refid="48556" relation="include">
        </childnode>
        <childnode refid="48593" relation="include">
        </childnode>
        <childnode refid="48333" relation="include">
        </childnode>
        <childnode refid="48338" relation="include">
        </childnode>
      </node>
      <node id="48193">
        <label>pxr/usd/pcp/types.h</label>
        <link refid="usd_2pcp_2types_8h"/>
        <childnode refid="48180" relation="include">
        </childnode>
        <childnode refid="48190" relation="include">
        </childnode>
        <childnode refid="48182" relation="include">
        </childnode>
        <childnode refid="48179" relation="include">
        </childnode>
        <childnode refid="47934" relation="include">
        </childnode>
        <childnode refid="48194" relation="include">
        </childnode>
      </node>
      <node id="48297">
        <label>pxr/imaging/hd/engine.h</label>
        <link refid="imaging_2hd_2engine_8h_source"/>
        <childnode refid="48268" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
        <childnode refid="48255" relation="include">
        </childnode>
      </node>
      <node id="48223">
        <label>pxr/usd/sdf/pyListProxy.h</label>
        <link refid="py_list_proxy_8h"/>
        <childnode refid="48221" relation="include">
        </childnode>
      </node>
      <node id="47932">
        <label>pxr/usd/sdf/reference.h</label>
        <link refid="reference_8h"/>
        <childnode refid="47933" relation="include">
        </childnode>
        <childnode refid="48158" relation="include">
        </childnode>
      </node>
      <node id="48083">
        <label>pxr/usd/usdGeom/cone.h</label>
        <link refid="usd_2usd_geom_2cone_8h"/>
      </node>
      <node id="47979">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="48518">
        <label>pxr/imaging/hd/flattenedDataSourceProviders.h</label>
        <link refid="imaging_2hd_2flattened_data_source_providers_8h_source"/>
      </node>
      <node id="48095">
        <label>pxr/usd/usdGeom/points.h</label>
        <link refid="usd_2usd_geom_2points_8h"/>
      </node>
      <node id="48222">
        <label>pxr/usd/sdf/listProxy.h</label>
        <link refid="list_proxy_8h"/>
        <childnode refid="48212" relation="include">
        </childnode>
        <childnode refid="48213" relation="include">
        </childnode>
        <childnode refid="48223" relation="include">
        </childnode>
      </node>
      <node id="48364">
        <label>pxr/usd/sdr/registry.h</label>
        <link refid="usd_2sdr_2registry_8h"/>
      </node>
      <node id="48114">
        <label>pxr/usd/usdVol/openVDBAsset.h</label>
        <link refid="open_v_d_b_asset_8h"/>
      </node>
      <node id="48243">
        <label>pxr/imaging/hdPrman/mesh.h</label>
        <link refid="imaging_2hd_prman_2mesh_8h_source"/>
      </node>
      <node id="48200">
        <label>pxr/usd/sdf/site.h</label>
        <link refid="sdf_2site_8h_source"/>
        <childnode refid="47933" relation="include">
        </childnode>
        <childnode refid="48183" relation="include">
        </childnode>
        <childnode refid="47934" relation="include">
        </childnode>
        <childnode refid="48201" relation="include">
        </childnode>
      </node>
      <node id="48556">
        <label>pxr/imaging/hdPrman/matfiltResolveVstructs.h</label>
        <link refid="matfilt_resolve_vstructs_8h_source"/>
      </node>
      <node id="48199">
        <label>pxr/usd/sdf/pyUtils.h</label>
        <link refid="usd_2sdf_2py_utils_8h_source"/>
      </node>
      <node id="48098">
        <label>pxr/usd/usdGeom/pointInstancer.h</label>
        <link refid="point_instancer_8h"/>
        <childnode refid="48075" relation="include">
        </childnode>
        <childnode refid="48022" relation="include">
        </childnode>
        <childnode refid="47960" relation="include">
        </childnode>
      </node>
      <node id="48373">
        <label>pxr/usd/pcp/mapExpression.h</label>
        <link refid="map_expression_8h_source"/>
        <childnode refid="48180" relation="include">
        </childnode>
        <childnode refid="48182" relation="include">
        </childnode>
        <childnode refid="48191" relation="include">
        </childnode>
      </node>
      <node id="48324">
        <label>pxr/imaging/hdx/freeCameraSceneDelegate.h</label>
        <link refid="free_camera_scene_delegate_8h_source"/>
      </node>
      <node id="48142">
        <label>pxr/usd/usdSkel/animation.h</label>
        <link refid="animation_8h"/>
      </node>
      <node id="48522">
        <label>pxr/imaging/hd/overlayContainerDataSource.h</label>
        <link refid="overlay_container_data_source_8h_source"/>
      </node>
      <node id="48230">
        <label>pxr/usd/sdf/notice.h</label>
        <link refid="usd_2sdf_2notice_8h_source"/>
        <childnode refid="47937" relation="include">
        </childnode>
      </node>
      <node id="48416">
        <label>pxr/imaging/hd/cylinderSchema.h</label>
        <link refid="cylinder_schema_8h_source"/>
      </node>
      <node id="48022">
        <label>pxr/usdImaging/usdImaging/dataSourcePointInstancer.h</label>
        <link refid="data_source_point_instancer_8h_source"/>
      </node>
      <node id="48004">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="48524">
        <label>pxr/imaging/hd/retainedDataSource.h</label>
        <link refid="retained_data_source_8h_source"/>
        <childnode refid="48509" relation="include">
        </childnode>
      </node>
      <node id="48346">
        <label>pxr/imaging/hdSt/textureObject.h</label>
        <link refid="texture_object_8h_source"/>
        <childnode refid="48347" relation="include">
        </childnode>
        <childnode refid="48348" relation="include">
        </childnode>
        <childnode refid="48349" relation="include">
        </childnode>
        <childnode refid="48350" relation="include">
        </childnode>
      </node>
      <node id="48317">
        <label>pxr/imaging/hdx/colorChannelTask.h</label>
        <link refid="color_channel_task_8h_source"/>
      </node>
      <node id="47991">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="48388">
        <label>pxr/imaging/hd/repr.h</label>
        <link refid="repr_8h_source"/>
        <childnode refid="48389" relation="include">
        </childnode>
        <childnode refid="48283" relation="include">
        </childnode>
        <childnode refid="48390" relation="include">
        </childnode>
        <childnode refid="48279" relation="include">
        </childnode>
      </node>
      <node id="47960">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="47964" relation="include">
        </childnode>
      </node>
      <node id="47973">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="47965" relation="include">
        </childnode>
        <childnode refid="47974" relation="include">
        </childnode>
        <childnode refid="47975" relation="include">
        </childnode>
        <childnode refid="47968" relation="include">
        </childnode>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="47977" relation="include">
        </childnode>
        <childnode refid="47978" relation="include">
        </childnode>
        <childnode refid="47979" relation="include">
        </childnode>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="47982" relation="include">
        </childnode>
        <childnode refid="47983" relation="include">
        </childnode>
        <childnode refid="47984" relation="include">
        </childnode>
        <childnode refid="47985" relation="include">
        </childnode>
      </node>
      <node id="47949">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="47950" relation="include">
        </childnode>
        <childnode refid="47951" relation="include">
        </childnode>
        <childnode refid="47952" relation="include">
        </childnode>
        <childnode refid="47953" relation="include">
        </childnode>
      </node>
      <node id="48128">
        <label>pxr/usd/usdPhysics/distanceJoint.h</label>
        <link refid="distance_joint_8h"/>
      </node>
      <node id="48294">
        <label>pxr/imaging/hdSt/primUtils.h</label>
        <link refid="prim_utils_8h_source"/>
      </node>
      <node id="48239">
        <label>pxr/imaging/hdPrman/gprim.h</label>
        <link refid="imaging_2hd_prman_2gprim_8h_source"/>
        <childnode refid="48240" relation="include">
        </childnode>
        <childnode refid="48241" relation="include">
        </childnode>
        <childnode refid="48242" relation="include">
        </childnode>
        <childnode refid="48243" relation="include">
        </childnode>
        <childnode refid="48244" relation="include">
        </childnode>
        <childnode refid="48245" relation="include">
        </childnode>
        <childnode refid="48246" relation="include">
        </childnode>
      </node>
      <node id="48380">
        <label>pxr/imaging/hd/renderPassState.h</label>
        <link refid="render_pass_state_8h_source"/>
        <childnode refid="48268" relation="include">
        </childnode>
        <childnode refid="48381" relation="include">
        </childnode>
        <childnode refid="48382" relation="include">
        </childnode>
        <childnode refid="48303" relation="include">
        </childnode>
        <childnode refid="48308" relation="include">
        </childnode>
      </node>
      <node id="48159">
        <label>pxr/usd/usd/specializes.h</label>
        <link refid="specializes_8h_source"/>
      </node>
      <node id="48092">
        <label>pxr/usd/usdGeom/nurbsCurves.h</label>
        <link refid="nurbs_curves_8h"/>
      </node>
      <node id="48314">
        <label>pxr/imaging/hdx/task.h</label>
        <link refid="_2task_8h_source"/>
        <childnode refid="48315" relation="include">
        </childnode>
        <childnode refid="48316" relation="include">
        </childnode>
        <childnode refid="48317" relation="include">
        </childnode>
        <childnode refid="48318" relation="include">
        </childnode>
        <childnode refid="48319" relation="include">
        </childnode>
        <childnode refid="48304" relation="include">
        </childnode>
        <childnode refid="48320" relation="include">
        </childnode>
        <childnode refid="48309" relation="include">
        </childnode>
        <childnode refid="48251" relation="include">
        </childnode>
        <childnode refid="48321" relation="include">
        </childnode>
      </node>
      <node id="48593">
        <label>pxr/imaging/hdPrman/sampleFilter.h</label>
        <link refid="sample_filter_8h_source"/>
      </node>
      <node id="48580">
        <label>pxr/imaging/hd/instancer.h</label>
        <link refid="instancer_8h_source"/>
        <childnode refid="48267" relation="include">
        </childnode>
        <childnode refid="48571" relation="include">
        </childnode>
        <childnode refid="48323" relation="include">
        </childnode>
        <childnode refid="48392" relation="include">
        </childnode>
      </node>
      <node id="48101">
        <label>pxr/usd/usdSkel/skeleton.h</label>
        <link refid="skeleton_8h"/>
        <childnode refid="48102" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48012" relation="include">
        </childnode>
      </node>
      <node id="48469">
        <label>pxr/imaging/hd/volumeFieldBindingSchema.h</label>
        <link refid="volume_field_binding_schema_8h_source"/>
      </node>
      <node id="48176">
        <label>pxr/usd/sdf/schemaTypeRegistration.h</label>
        <link refid="schema_type_registration_8h_source"/>
      </node>
      <node id="48343">
        <label>pxr/imaging/hio/glslfxConfig.h</label>
        <link refid="glslfx_config_8h"/>
        <childnode refid="48344" relation="include">
        </childnode>
      </node>
      <node id="47976">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="48112">
        <label>pxr/usd/usdVol/fieldAsset.h</label>
        <link refid="field_asset_8h"/>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
      </node>
      <node id="48531">
        <label>pxr/imaging/hdPrman/coordSysPrimSceneIndexPlugin.h</label>
        <link refid="coord_sys_prim_scene_index_plugin_8h_source"/>
      </node>
      <node id="48172">
        <label>pxr/usd/usd/resolveInfo.h</label>
        <link refid="resolve_info_8h"/>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="48074" relation="include">
        </childnode>
      </node>
      <node id="48012">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="48505">
        <label>pxr/usdImaging/usdImaging/rerootingSceneIndex.h</label>
        <link refid="rerooting_scene_index_8h_source"/>
      </node>
      <node id="47969">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="48432">
        <label>pxr/imaging/hd/instanceSchema.h</label>
        <link refid="instance_schema_8h_source"/>
      </node>
      <node id="48084">
        <label>pxr/usd/usdGeom/cube.h</label>
        <link refid="cube_8h"/>
        <childnode refid="47961" relation="include">
        </childnode>
      </node>
      <node id="48320">
        <label>pxr/imaging/hdx/presentTask.h</label>
        <link refid="present_task_8h_source"/>
      </node>
      <node id="48051">
        <label>pxr/usd/usdPhysics/massAPI.h</label>
        <link refid="mass_a_p_i_8h"/>
      </node>
      <node id="48102">
        <label>pxr/usd/usdSkel/binding.h</label>
        <link refid="usd_2usd_skel_2binding_8h"/>
        <childnode refid="48103" relation="include">
        </childnode>
        <childnode refid="48105" relation="include">
        </childnode>
        <childnode refid="48012" relation="include">
        </childnode>
      </node>
      <node id="48168">
        <label>pxr/usdImaging/usdImaging/materialBindingAPIAdapter.h</label>
        <link refid="material_binding_a_p_i_adapter_8h_source"/>
      </node>
      <node id="48599">
        <label>pxr/imaging/hdSt/hioConversions.h</label>
        <link refid="hio_conversions_8h_source"/>
      </node>
      <node id="48333">
        <label>pxr/imaging/hdSt/material.h</label>
        <link refid="imaging_2hd_st_2material_8h_source"/>
      </node>
      <node id="48334">
        <label>pxr/imaging/hdSt/renderPassShader.h</label>
        <link refid="render_pass_shader_8h_source"/>
      </node>
      <node id="47957">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="48565">
        <label>pxr/imaging/hdSt/field.h</label>
        <link refid="t_2field_8h_source"/>
      </node>
      <node id="48283">
        <label>pxr/imaging/hd/rprim.h</label>
        <link refid="rprim_8h_source"/>
        <childnode refid="48284" relation="include">
        </childnode>
        <childnode refid="48286" relation="include">
        </childnode>
        <childnode refid="48289" relation="include">
        </childnode>
        <childnode refid="48291" relation="include">
        </childnode>
        <childnode refid="48241" relation="include">
        </childnode>
        <childnode refid="48242" relation="include">
        </childnode>
        <childnode refid="48293" relation="include">
        </childnode>
        <childnode refid="48245" relation="include">
        </childnode>
        <childnode refid="48294" relation="include">
        </childnode>
        <childnode refid="47963" relation="include">
        </childnode>
      </node>
      <node id="48594">
        <label>pxr/imaging/hdPrman/lightFilter.h</label>
        <link refid="imaging_2hd_prman_2light_filter_8h_source"/>
      </node>
      <node id="48573">
        <label>pxr/imaging/hdSt/extCompCpuComputation.h</label>
        <link refid="ext_comp_cpu_computation_8h_source"/>
      </node>
      <node id="48365">
        <label>pxr/usd/sdr/shaderNode.h</label>
        <link refid="shader_node_8h"/>
        <childnode refid="48364" relation="include">
        </childnode>
        <childnode refid="48366" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
      </node>
      <node id="48394">
        <label>pxr/imaging/hdSt/drawTargetRenderPassState.h</label>
        <link refid="draw_target_render_pass_state_8h_source"/>
        <childnode refid="48393" relation="include">
        </childnode>
      </node>
      <node id="48238">
        <label>pxr/usd/usdSkel/topology.h</label>
        <link refid="usd_2usd_skel_2topology_8h"/>
        <childnode refid="48101" relation="include">
        </childnode>
      </node>
      <node id="48281">
        <label>pxr/imaging/hd/extComputationUtils.h</label>
        <link refid="ext_computation_utils_8h_source"/>
      </node>
      <node id="48061">
        <label>pxr/usd/usdShade/nodeDefAPI.h</label>
        <link refid="node_def_a_p_i_8h"/>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="47955" relation="include">
        </childnode>
      </node>
      <node id="48563">
        <label>pxr/imaging/hd/bprim.h</label>
        <link refid="bprim_8h_source"/>
        <childnode refid="48564" relation="include">
        </childnode>
        <childnode refid="48566" relation="include">
        </childnode>
        <childnode refid="48275" relation="include">
        </childnode>
      </node>
      <node id="47929">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h"/>
        <childnode refid="47930" relation="include">
        </childnode>
        <childnode refid="48354" relation="include">
        </childnode>
        <childnode refid="48355" relation="include">
        </childnode>
        <childnode refid="48356" relation="include">
        </childnode>
        <childnode refid="48357" relation="include">
        </childnode>
        <childnode refid="48358" relation="include">
        </childnode>
        <childnode refid="48359" relation="include">
        </childnode>
        <childnode refid="48360" relation="include">
        </childnode>
        <childnode refid="48361" relation="include">
        </childnode>
        <childnode refid="48195" relation="include">
        </childnode>
        <childnode refid="48367" relation="include">
        </childnode>
        <childnode refid="48196" relation="include">
        </childnode>
        <childnode refid="48197" relation="include">
        </childnode>
        <childnode refid="48212" relation="include">
        </childnode>
        <childnode refid="48225" relation="include">
        </childnode>
        <childnode refid="48369" relation="include">
        </childnode>
        <childnode refid="48377" relation="include">
        </childnode>
        <childnode refid="48375" relation="include">
        </childnode>
        <childnode refid="48376" relation="include">
        </childnode>
        <childnode refid="48216" relation="include">
        </childnode>
        <childnode refid="47932" relation="include">
        </childnode>
        <childnode refid="48234" relation="include">
        </childnode>
        <childnode refid="48176" relation="include">
        </childnode>
        <childnode refid="48209" relation="include">
        </childnode>
        <childnode refid="48177" relation="include">
        </childnode>
        <childnode refid="48247" relation="include">
        </childnode>
        <childnode refid="48366" relation="include">
        </childnode>
        <childnode refid="48378" relation="include">
        </childnode>
        <childnode refid="47938" relation="include">
        </childnode>
        <childnode refid="48121" relation="include">
        </childnode>
        <childnode refid="47939" relation="include">
        </childnode>
        <childnode refid="47941" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="48120" relation="include">
        </childnode>
        <childnode refid="48156" relation="include">
        </childnode>
        <childnode refid="47937" relation="include">
        </childnode>
        <childnode refid="48123" relation="include">
        </childnode>
        <childnode refid="48090" relation="include">
        </childnode>
        <childnode refid="48079" relation="include">
        </childnode>
        <childnode refid="48106" relation="include">
        </childnode>
        <childnode refid="48081" relation="include">
        </childnode>
        <childnode refid="48082" relation="include">
        </childnode>
        <childnode refid="48083" relation="include">
        </childnode>
        <childnode refid="48084" relation="include">
        </childnode>
        <childnode refid="48089" relation="include">
        </childnode>
        <childnode refid="48085" relation="include">
        </childnode>
        <childnode refid="48086" relation="include">
        </childnode>
        <childnode refid="48080" relation="include">
        </childnode>
        <childnode refid="48091" relation="include">
        </childnode>
        <childnode refid="48124" relation="include">
        </childnode>
        <childnode refid="48093" relation="include">
        </childnode>
        <childnode refid="48017" relation="include">
        </childnode>
        <childnode refid="48018" relation="include">
        </childnode>
        <childnode refid="48092" relation="include">
        </childnode>
        <childnode refid="48094" relation="include">
        </childnode>
        <childnode refid="48087" relation="include">
        </childnode>
        <childnode refid="48088" relation="include">
        </childnode>
        <childnode refid="48098" relation="include">
        </childnode>
        <childnode refid="48095" relation="include">
        </childnode>
        <childnode refid="48019" relation="include">
        </childnode>
        <childnode refid="48125" relation="include">
        </childnode>
        <childnode refid="48096" relation="include">
        </childnode>
        <childnode refid="48126" relation="include">
        </childnode>
        <childnode refid="48036" relation="include">
        </childnode>
        <childnode refid="48109" relation="include">
        </childnode>
        <childnode refid="48078" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="47943" relation="include">
        </childnode>
        <childnode refid="47944" relation="include">
        </childnode>
        <childnode refid="47945" relation="include">
        </childnode>
        <childnode refid="47950" relation="include">
        </childnode>
        <childnode refid="47951" relation="include">
        </childnode>
        <childnode refid="47952" relation="include">
        </childnode>
        <childnode refid="47953" relation="include">
        </childnode>
        <childnode refid="47942" relation="include">
        </childnode>
        <childnode refid="47954" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
        <childnode refid="48041" relation="include">
        </childnode>
        <childnode refid="47949" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="47955" relation="include">
        </childnode>
        <childnode refid="47946" relation="include">
        </childnode>
        <childnode refid="47947" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="47948" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="48110" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
        <childnode refid="48047" relation="include">
        </childnode>
        <childnode refid="47956" relation="include">
        </childnode>
        <childnode refid="48128" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48049" relation="include">
        </childnode>
        <childnode refid="48129" relation="include">
        </childnode>
        <childnode refid="48127" relation="include">
        </childnode>
        <childnode refid="48050" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="48052" relation="include">
        </childnode>
        <childnode refid="48053" relation="include">
        </childnode>
        <childnode refid="48130" relation="include">
        </childnode>
        <childnode refid="48131" relation="include">
        </childnode>
        <childnode refid="48054" relation="include">
        </childnode>
        <childnode refid="48133" relation="include">
        </childnode>
        <childnode refid="48132" relation="include">
        </childnode>
        <childnode refid="48099" relation="include">
        </childnode>
        <childnode refid="48134" relation="include">
        </childnode>
        <childnode refid="47957" relation="include">
        </childnode>
        <childnode refid="48136" relation="include">
        </childnode>
        <childnode refid="48137" relation="include">
        </childnode>
        <childnode refid="48135" relation="include">
        </childnode>
        <childnode refid="48138" relation="include">
        </childnode>
        <childnode refid="48139" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="47958" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
        <childnode refid="48020" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="47959" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48140" relation="include">
        </childnode>
        <childnode refid="48141" relation="include">
        </childnode>
        <childnode refid="48142" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="48143" relation="include">
        </childnode>
        <childnode refid="48100" relation="include">
        </childnode>
        <childnode refid="48101" relation="include">
        </childnode>
        <childnode refid="48145" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
        <childnode refid="48154" relation="include">
        </childnode>
        <childnode refid="48113" relation="include">
        </childnode>
        <childnode refid="48112" relation="include">
        </childnode>
        <childnode refid="48111" relation="include">
        </childnode>
        <childnode refid="48114" relation="include">
        </childnode>
        <childnode refid="48097" relation="include">
        </childnode>
        <childnode refid="48379" relation="include">
        </childnode>
        <childnode refid="48383" relation="include">
        </childnode>
        <childnode refid="48384" relation="include">
        </childnode>
        <childnode refid="48385" relation="include">
        </childnode>
        <childnode refid="48258" relation="include">
        </childnode>
        <childnode refid="48401" relation="include">
        </childnode>
        <childnode refid="48550" relation="include">
        </childnode>
        <childnode refid="48551" relation="include">
        </childnode>
        <childnode refid="48281" relation="include">
        </childnode>
        <childnode refid="48553" relation="include">
        </childnode>
        <childnode refid="48557" relation="include">
        </childnode>
        <childnode refid="48558" relation="include">
        </childnode>
        <childnode refid="48380" relation="include">
        </childnode>
        <childnode refid="48279" relation="include">
        </childnode>
        <childnode refid="48296" relation="include">
        </childnode>
        <childnode refid="48560" relation="include">
        </childnode>
        <childnode refid="48562" relation="include">
        </childnode>
        <childnode refid="48570" relation="include">
        </childnode>
        <childnode refid="48323" relation="include">
        </childnode>
        <childnode refid="48596" relation="include">
        </childnode>
        <childnode refid="48573" relation="include">
        </childnode>
        <childnode refid="48328" relation="include">
        </childnode>
        <childnode refid="48282" relation="include">
        </childnode>
        <childnode refid="48253" relation="include">
        </childnode>
        <childnode refid="48345" relation="include">
        </childnode>
        <childnode refid="48603" relation="include">
        </childnode>
        <childnode refid="47961" relation="include">
        </childnode>
        <childnode refid="48605" relation="include">
        </childnode>
      </node>
      <node id="48187">
        <label>pxr/usd/usd/editContext.h</label>
        <link refid="edit_context_8h_source"/>
        <childnode refid="48188" relation="include">
        </childnode>
      </node>
      <node id="48011">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
      <node id="48366">
        <label>pxr/usd/sdr/shaderProperty.h</label>
        <link refid="shader_property_8h"/>
      </node>
      <node id="48272">
        <label>pxr/imaging/hdSt/renderDelegate.h</label>
        <link refid="t_2render_delegate_8h_source"/>
      </node>
      <node id="48461">
        <label>pxr/imaging/hd/sceneGlobalsSchema.h</label>
        <link refid="scene_globals_schema_8h_source"/>
      </node>
      <node id="48163">
        <label>pxr/usdImaging/usdImaging/apiSchemaAdapter.h</label>
        <link refid="api_schema_adapter_8h"/>
        <childnode refid="48164" relation="include">
        </childnode>
        <childnode refid="48165" relation="include">
        </childnode>
        <childnode refid="48166" relation="include">
        </childnode>
        <childnode refid="48167" relation="include">
        </childnode>
        <childnode refid="48168" relation="include">
        </childnode>
      </node>
      <node id="48122">
        <label>pxr/usd/usd/schemaBase.h</label>
        <link refid="schema_base_8h_source"/>
        <childnode refid="47938" relation="include">
        </childnode>
        <childnode refid="48123" relation="include">
        </childnode>
      </node>
      <node id="48307">
        <label>pxr/imaging/hdx/oitResolveTask.h</label>
        <link refid="oit_resolve_task_8h_source"/>
      </node>
      <node id="48210">
        <label>pxr/usd/sdf/accessorHelpers.h</label>
        <link refid="accessor_helpers_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_vt_value" prot="public">VtValue</innerclass>
    <innerclass refid="struct_vt_value_1_1___counted" prot="private">VtValue::_Counted</innerclass>
    <innerclass refid="struct_vt_value_1_1___type_info" prot="private">VtValue::_TypeInfo</innerclass>
    <innerclass refid="struct_vt_value_1_1___array_helper" prot="private">VtValue::_ArrayHelper</innerclass>
    <innerclass refid="struct_vt_value_1_1___array_helper_3_01_array_00_01typename_01std_1_1enable__if_3_01_vt_is_array1208c540332f950c86b82bae3884d9fc" prot="private">VtValue::_ArrayHelper&lt; Array, typename std::enable_if&lt; VtIsArray&lt; Array &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_vt_value_1_1___proxy_helper" prot="private">VtValue::_ProxyHelper</innerclass>
    <innerclass refid="struct_vt_value_1_1___proxy_helper_3_01_erased_proxy_00_01typename_01std_1_1enable__if_3_01_vt_i6a962ffc54be96ea137bc7cee153852d" prot="private">VtValue::_ProxyHelper&lt; ErasedProxy, typename std::enable_if&lt; VtIsErasedValueProxy&lt; ErasedProxy &gt;::value &gt;::type &gt;</innerclass>
    <innerclass refid="struct_vt_value_1_1___type_info_impl" prot="private">VtValue::_TypeInfoImpl</innerclass>
    <innerclass refid="struct_vt_value_1_1___local_type_info" prot="private">VtValue::_LocalTypeInfo</innerclass>
    <innerclass refid="struct_vt_value_1_1___remote_type_info" prot="private">VtValue::_RemoteTypeInfo</innerclass>
    <innerclass refid="struct_vt_value_1_1___type_info_for" prot="private">VtValue::_TypeInfoFor</innerclass>
    <innerclass refid="struct_vt_value_1_1___type_info_for_3_01char[_n]_4" prot="private">VtValue::_TypeInfoFor&lt; char[N]&gt;</innerclass>
    <innerclass refid="struct_vt_value_1_1___hold_aside" prot="private">VtValue::_HoldAside</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="vt_2value_8h_1a213b7443cbf451d6a8abb642733ea7ac" prot="public" static="no">
        <name>VT_VALUE_SET_STORED_TYPE</name>
        <param><defname>SRC</defname></param>
        <param><defname>DST</defname></param>
        <initializer>template &lt;&gt; struct Vt_ValueStoredType&lt;SRC&gt; { typedef DST Type; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="108" column="9" bodyfile="pxr/base/vt/value.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="vt_2value_8h_1adf0d9b7ac50c441c210e026ead87a11a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>VT_API std::ostream &amp;</type>
        <definition>VT_API std::ostream&amp; VtStreamOut</definition>
        <argsstring>(std::vector&lt; VtValue &gt; const &amp;val, std::ostream &amp;)</argsstring>
        <name>VtStreamOut</name>
        <param>
          <type>std::vector&lt; <ref refid="class_vt_value" kindref="compound">VtValue</ref> &gt; const &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="vt_2value_8h_1a1f1d73942b7d4bd3e1f726ca704fb99d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VT_VALUE_SET_STORED_TYPE</definition>
        <argsstring>(char const *, std::string)</argsstring>
        <name>VT_VALUE_SET_STORED_TYPE</name>
        <param>
          <type>char const *</type>
        </param>
        <param>
          <type>std::string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="vt_2value_8h_1a77ffadcf0b24c77a0956d0a01db47e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VT_VALUE_SET_STORED_TYPE</definition>
        <argsstring>(char *, std::string)</argsstring>
        <name>VT_VALUE_SET_STORED_TYPE</name>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type>std::string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="vt_2value_8h_1a4aac57b86c2917c3ce2f643ec6e00d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>VT_VALUE_SET_STORED_TYPE</definition>
        <argsstring>(boost::python::object, TfPyObjWrapper)</argsstring>
        <name>VT_VALUE_SET_STORED_TYPE</name>
        <param>
          <type>boost::python::object</type>
        </param>
        <param>
          <type><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="116" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_VT_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_VT_VALUE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XXX:<sp/>Include<sp/>pyLock.h<sp/>after<sp/>pyObjWrapper.h<sp/>to<sp/>work<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Python<sp/>include<sp/>ordering<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyObjWrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pyLock.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="demangle_8h" kindref="compound">pxr/base/arch/demangle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hints_8h" kindref="compound">pxr/base/arch/hints.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pragmas_8h" kindref="compound">pxr/base/arch/pragmas.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/anyUniquePtr.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/pointerAndBits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="safe_type_compare_8h" kindref="compound">pxr/base/tf/safeTypeCompare.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="string_utils_8h" kindref="compound">pxr/base/tf/stringUtils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="tf_8h" kindref="compound">pxr/base/tf/tf.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/vt/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/vt/hash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/vt/streamOut.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vt_2traits_8h" kindref="compound">pxr/base/vt/traits.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2vt_2types_8h" kindref="compound">pxr/base/vt/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/intrusive_ptr.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iosfwd&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeinfo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_DefaultValueFactory;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>helper<sp/>class<sp/>used<sp/>by<sp/>Vt_DefaultValueFactory<sp/>to<sp/>return<sp/>a<sp/>value<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>its<sp/>type<sp/>erased<sp/>and<sp/>only<sp/>known<sp/>at<sp/>runtime<sp/>via<sp/>a<sp/>std::type_info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_DefaultValueHolder</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>value-initialized<sp/>object<sp/>and<sp/>stores<sp/>the<sp/>type_info<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder<sp/>Create()<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder(TfAnyUniquePtr::New&lt;T&gt;(),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Creates<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>object<sp/>and<sp/>stores<sp/>the<sp/>type_info<sp/>for<sp/>the<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder<sp/>Create(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder(TfAnyUniquePtr::New(val),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>runtime<sp/>type<sp/>of<sp/>the<sp/>held<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;GetType()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*_type;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>held<sp/>object.<sp/><sp/>This<sp/>may<sp/>be<sp/>safely<sp/>cast<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>static<sp/>type<sp/>corresponding<sp/>to<sp/>the<sp/>type_info<sp/>returned<sp/>by<sp/>GetType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*GetPointer()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ptr.Get();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>Vt_DefaultValueHolder(<ref refid="class_tf_any_unique_ptr" kindref="compound">TfAnyUniquePtr</ref><sp/>&amp;&amp;ptr,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;type)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_ptr(std::move(ptr)),<sp/>_type(&amp;type)<sp/>{}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_any_unique_ptr" kindref="compound">TfAnyUniquePtr</ref><sp/>_ptr;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*_type;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">};</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vt_value" kindref="compound">VtValue</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Overload<sp/>VtStreamOut<sp/>for<sp/>vector&lt;VtValue&gt;.<sp/><sp/>Produces<sp/>output<sp/>like<sp/>[value1,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>value2,<sp/>...<sp/>valueN].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">VT_API<sp/>std::ostream<sp/>&amp;VtStreamOut(std::vector&lt;VtValue&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val,<sp/>std::ostream<sp/>&amp;);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VT_VALUE_SET_STORED_TYPE(SRC,<sp/>DST)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template<sp/>&lt;&gt;<sp/>struct<sp/>Vt_ValueStoredType&lt;SRC&gt;<sp/>{<sp/>typedef<sp/>DST<sp/>Type;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_ValueStoredType<sp/>{<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>Type;<sp/>};</highlight></codeline>
<codeline lineno="112"><highlight class="normal">VT_VALUE_SET_STORED_TYPE(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,<sp/>std::string);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">VT_VALUE_SET_STORED_TYPE(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>std::string);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PXR_PYTHON_SUPPORT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">VT_VALUE_SET_STORED_TYPE(boost::python::object,<sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_PYTHON_SUPPORT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>VT_VALUE_SET_STORED_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>metafunction<sp/>that<sp/>gives<sp/>the<sp/>type<sp/>VtValue<sp/>should<sp/>store<sp/>for<sp/>a<sp/>given<sp/>type<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_ValueGetStored<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>Vt_ValueStoredType&lt;std::decay_t&lt;T&gt;&gt;<sp/>{};</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_vt_value" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_LocalFlag<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_TrivialCopyFlag<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_ProxyFlag<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_Counted<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>_Counted(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>:<sp/>_obj(obj)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_refCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsUnique()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_refCount<sp/>==<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1a839e753e2247bd70893de723f5d70fdf" kindref="member">Get</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_obj;<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;GetMutable()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_obj;<sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>_obj;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>std::atomic&lt;int&gt;<sp/>_refCount;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>intrusive_ptr_add_ref(_Counted<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;_refCount.fetch_add(1,<sp/>std::memory_order_relaxed);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>intrusive_ptr_release(_Counted<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d-&gt;_refCount.fetch_sub(1,<sp/>std::memory_order_release)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::atomic_thread_fence(std::memory_order_acquire);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hold<sp/>objects<sp/>up<sp/>to<sp/>1<sp/>word<sp/>large<sp/>locally.<sp/><sp/>This<sp/>makes<sp/>the<sp/>total<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>16<sp/>bytes<sp/>when<sp/>compiled<sp/>64<sp/>bit<sp/>(1<sp/>word<sp/>type-info<sp/>pointer,<sp/>1<sp/>word<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>space).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_MaxLocalSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::aligned_storage&lt;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>*/</highlight><highlight class="normal">_MaxLocalSize,<sp/></highlight><highlight class="comment">/*<sp/>alignment<sp/>*/</highlight><highlight class="normal">_MaxLocalSize&gt;::type<sp/>_Storage;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_IsTriviallyCopyable<sp/>=<sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_default_constructible_v&lt;T&gt;<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copyable_v&lt;T&gt;<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_copy_assignable_v&lt;T&gt;<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_trivially_destructible_v&lt;T&gt;&gt;;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Metafunction<sp/>that<sp/>returns<sp/>true<sp/>if<sp/>T<sp/>should<sp/>be<sp/>stored<sp/>locally,<sp/>false<sp/>if<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>stored<sp/>remotely.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_UsesLocalStore<sp/>=<sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_Storage))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VtValueTypeHasCheapCopy&lt;T&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_nothrow_move_constructible&lt;T&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_nothrow_move_assignable&lt;T&gt;::value&gt;;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Type<sp/>information<sp/>base<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_TypeInfo<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_CopyInitFunc<sp/>=<sp/>void<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>_Storage<sp/>&amp;);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_DestroyFunc<sp/>=<sp/>void<sp/>(*)(_Storage<sp/>&amp;);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_MoveFunc<sp/>=<sp/>void<sp/>(*)(_Storage<sp/>&amp;,<sp/>_Storage<sp/>&amp;);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_CanHashFunc<sp/>=<sp/>bool<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_HashFunc<sp/>=<sp/>size_t<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_EqualFunc<sp/>=<sp/>bool<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_EqualPtrFunc<sp/>=<sp/>bool<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_MakeMutableFunc<sp/>=<sp/>void<sp/>(*)(_Storage<sp/>&amp;);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetPyObjFunc<sp/>=<sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_StreamOutFunc<sp/>=</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>std::ostream<sp/>&amp;);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetTypeidFunc<sp/>=<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_IsArrayValuedFunc<sp/>=<sp/>bool<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetElementTypeidFunc<sp/>=</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetShapeDataFunc<sp/>=<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetNumElementsFunc<sp/>=<sp/>size_t<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_ProxyHoldsTypeFunc<sp/>=<sp/>bool<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetProxiedTypeFunc<sp/>=<sp/><ref refid="class_tf_type" kindref="compound">TfType</ref><sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetProxiedTypeidFunc<sp/>=</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetProxiedObjPtrFunc<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>_GetProxiedAsVtValueFunc<sp/>=<sp/><ref refid="class_vt_value_1adc7da257c96e58dc372a30d24cab12af" kindref="member">VtValue</ref><sp/>(*)(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>_TypeInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info<sp/>&amp;ti,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info<sp/>&amp;elementTi,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>knownTypeIndex,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArray,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHashable,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isProxy,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CopyInitFunc<sp/>copyInit,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DestroyFunc<sp/>destroy,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MoveFunc<sp/>move,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CanHashFunc<sp/>canHash,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HashFunc<sp/>hash,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EqualFunc<sp/>equal,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EqualPtrFunc<sp/>equalPtr,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MakeMutableFunc<sp/>makeMutable,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetPyObjFunc<sp/>getPyObj,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_StreamOutFunc<sp/>streamOut,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetTypeidFunc<sp/>getTypeid,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_IsArrayValuedFunc<sp/>isArrayValued,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetElementTypeidFunc<sp/>getElementTypeid,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetShapeDataFunc<sp/>getShapeData,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetNumElementsFunc<sp/>getNumElements,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ProxyHoldsTypeFunc<sp/>proxyHoldsType,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedTypeFunc<sp/>getProxiedType,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedTypeidFunc<sp/>getProxiedTypeid,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedObjPtrFunc<sp/>getProxiedObjPtr,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedAsVtValueFunc<sp/>getProxiedAsVtValue)</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>typeInfo(ti)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>elementTypeInfo(elementTi)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>knownTypeIndex(knownTypeIndex)</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>isProxy(isProxy)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>isArray(isArray)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>isHashable(isHashable)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_copyInit(copyInit)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_destroy(destroy)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_move(move)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_canHash(canHash)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_hash(hash)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_equal(equal)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_equalPtr(equalPtr)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_makeMutable(makeMutable)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getPyObj(getPyObj)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_streamOut(streamOut)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getTypeid(getTypeid)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_isArrayValued(isArrayValued)</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getElementTypeid(getElementTypeid)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getShapeData(getShapeData)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getNumElements(getNumElements)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_proxyHoldsType(proxyHoldsType)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getProxiedType(getProxiedType)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getProxiedTypeid(getProxiedTypeid)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getProxiedObjPtr(getProxiedObjPtr)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>_getProxiedAsVtValue(getProxiedAsVtValue)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyInit(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;src,<sp/>_Storage<sp/>&amp;dst)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_copyInit(src,<sp/>dst);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Destroy(_Storage<sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_destroy(storage);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Move(_Storage<sp/>&amp;src,<sp/>_Storage<sp/>&amp;dst)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_move(src,<sp/>dst);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1af1ff5b72283bea0d3cfe15292d4241b2" kindref="member">CanHash</ref>(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_canHash(storage);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Hash(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_hash(storage);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equal(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/>_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_equal(lhs,<sp/>rhs);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EqualPtr(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_equalPtr(lhs,<sp/>rhs);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeMutable(_Storage<sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_makeMutable(storage);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>GetPyObj(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getPyObj(storage);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;StreamOut(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;out)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_streamOut(storage,<sp/>out);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a8dad22fd533756d767affd18aa4d2ce2" kindref="member">IsArrayValued</ref>(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_isArrayValued(storage);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1ae0ae121c23b03eb6efe844327075afd7" kindref="member">GetElementTypeid</ref>(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getElementTypeid(storage);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getTypeid(storage);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>GetShapeData(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getShapeData(storage);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetNumElements(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getNumElements(storage);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ProxyHoldsType(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_proxyHoldsType(storage,<sp/>t);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_type" kindref="compound">TfType</ref><sp/>GetProxiedType(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getProxiedType(storage);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;GetProxiedTypeid(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getProxiedTypeid(storage);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>GetProxiedAsVtValue(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getProxiedAsVtValue(storage);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*GetProxiedObjPtr(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_getProxiedObjPtr(storage);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info<sp/>&amp;typeInfo;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_info<sp/>&amp;elementTypeInfo;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>knownTypeIndex;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isProxy;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isArray;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isHashable;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CopyInitFunc<sp/>_copyInit;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_DestroyFunc<sp/>_destroy;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MoveFunc<sp/>_move;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_CanHashFunc<sp/>_canHash;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HashFunc<sp/>_hash;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EqualFunc<sp/>_equal;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_EqualPtrFunc<sp/>_equalPtr;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_MakeMutableFunc<sp/>_makeMutable;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetPyObjFunc<sp/>_getPyObj;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_StreamOutFunc<sp/>_streamOut;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetTypeidFunc<sp/>_getTypeid;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_IsArrayValuedFunc<sp/>_isArrayValued;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetElementTypeidFunc<sp/>_getElementTypeid;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetShapeDataFunc<sp/>_getShapeData;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetNumElementsFunc<sp/>_getNumElements;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ProxyHoldsTypeFunc<sp/>_proxyHoldsType;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedTypeFunc<sp/>_getProxiedType;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedTypeidFunc<sp/>_getProxiedTypeid;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedObjPtrFunc<sp/>_getProxiedObjPtr;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedAsVtValueFunc<sp/>_getProxiedAsVtValue;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Type-dispatching<sp/>overloads.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>type<sp/>helper.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enable=</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ArrayHelper</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>GetShapeData(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetNumElements(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1ae0ae121c23b03eb6efe844327075afd7" kindref="member">GetElementTypeid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(void);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Array&gt;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ArrayHelper&lt;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Array,<sp/>typename<sp/>std::enable_if&lt;VtIsArray&lt;Array&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>GetShapeData(Array<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj._GetShapeData();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetNumElements(Array<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj.size();</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1ae0ae121c23b03eb6efe844327075afd7" kindref="member">GetElementTypeid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Array::ElementType);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>used<sp/>in<sp/>case<sp/>T<sp/>has<sp/>equality<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>_TypedProxyEqualityImpl(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-&gt;<sp/>decltype(a<sp/>==<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>==<sp/>b;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>used<sp/>in<sp/>case<sp/>T<sp/>does<sp/>not<sp/>have<sp/>equality<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NoEqual&gt;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>_TypedProxyEqualityImpl(NoEqual<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>NoEqual<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetProxiedObject(a)<sp/>==<sp/>VtGetProxiedObject(b);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>_ErasedProxyEqualityImpl(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>-&gt;<sp/>decltype(a<sp/>==<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a<sp/>==<sp/>b;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>used<sp/>in<sp/>case<sp/>T<sp/>does<sp/>not<sp/>have<sp/>equality<sp/>comparison.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>NoEqual&gt;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>_ErasedProxyEqualityImpl(NoEqual<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>NoEqual<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*VtGetErasedProxiedVtValue(a)<sp/>==<sp/>*VtGetErasedProxiedVtValue(b);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Proxy<sp/>type<sp/>helper.<sp/><sp/>Base<sp/>case<sp/>handles<sp/>non-proxies<sp/>and<sp/>typed<sp/>proxies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ProxyHelper</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ProxiedType<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>VtGetProxiedType&lt;T&gt;::type;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1af1ff5b72283bea0d3cfe15292d4241b2" kindref="member">CanHash</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtIsHashable&lt;ProxiedType&gt;();<sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Hash(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtHashValue(VtGetProxiedObject(obj));</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equal(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>the<sp/>traditional<sp/>int/long<sp/>=<sp/>0<sp/>arg<sp/>technique<sp/>to<sp/>disambiguate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overloads,<sp/>so<sp/>we<sp/>can<sp/>invoke<sp/>equality<sp/>comparison<sp/>on<sp/>the<sp/>*proxy*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>if<sp/>it<sp/>provides<sp/>one,<sp/>or<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>then<sp/>invoke<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comparison<sp/>on<sp/>the<sp/>*proxied*<sp/>type<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_TypedProxyEqualityImpl(a,<sp/>b,<sp/>0);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>GetPyObj(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PXR_PYTHON_SUPPORT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ProxiedType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;p<sp/>=<sp/>VtGetProxiedObject(obj);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::api::object(p);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//PXR_PYTHON_SUPPORT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;StreamOut(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj,<sp/>std::ostream<sp/>&amp;out)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtStreamOut(VtGetProxiedObject(obj),<sp/>out);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vt_ShapeData<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*GetShapeData(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ArrayHelper&lt;ProxiedType&gt;::GetShapeData(</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VtGetProxiedObject(obj));</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetNumElements(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ArrayHelper&lt;ProxiedType&gt;::GetNumElements(</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VtGetProxiedObject(obj));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a8dad22fd533756d767affd18aa4d2ce2" kindref="member">IsArrayValued</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vt_is_array" kindref="compound">VtIsArray&lt;ProxiedType&gt;::value</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(ProxiedType);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1ae0ae121c23b03eb6efe844327075afd7" kindref="member">GetElementTypeid</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;)<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ArrayHelper&lt;ProxiedType&gt;::GetElementTypeid();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>GetProxiedAsVtValue(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1adc7da257c96e58dc372a30d24cab12af" kindref="member">VtValue</ref>(VtGetProxiedObject(obj));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HoldsType(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;tp,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;query)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="safe_type_compare_8h_1a589ae38e89deda84592b09223f4d471d" kindref="member">TfSafeTypeCompare</ref>(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(ProxiedType),<sp/>query);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_type" kindref="compound">TfType</ref><sp/>GetTfType(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;tp)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TfType::Find&lt;ProxiedType&gt;();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*GetObjPtr(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;tp)<sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;void<sp/>const<sp/>*&gt;(&amp;VtGetProxiedObject(tp));</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ErasedProxy&gt;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_ProxyHelper&lt;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ErasedProxy,<sp/>typename<sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VtIsErasedValueProxy&lt;ErasedProxy&gt;::value&gt;::type&gt;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1af1ff5b72283bea0d3cfe15292d4241b2" kindref="member">CanHash</ref>(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;proxy)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(proxy)-&gt;CanHash();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>Hash(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;proxy)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(proxy)-&gt;GetHash();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Equal(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;a,<sp/>ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;b)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>use<sp/>the<sp/>traditional<sp/>int/long<sp/>=<sp/>0<sp/>arg<sp/>technique<sp/>to<sp/>disambiguate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overloads,<sp/>so<sp/>we<sp/>can<sp/>invoke<sp/>equality<sp/>comparison<sp/>on<sp/>the<sp/>*proxy*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>if<sp/>it<sp/>provides<sp/>one,<sp/>or<sp/>if<sp/>it<sp/>doesn&apos;t<sp/>then<sp/>invoke<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comparison<sp/>on<sp/>the<sp/>VtValue<sp/>containing<sp/>the<sp/>*proxied*<sp/>type<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_ErasedProxyEqualityImpl(a,<sp/>b,<sp/>0);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>GetPyObj(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PXR_PYTHON_SUPPORT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*val<sp/>=<sp/>VtGetErasedProxiedVtValue(obj);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_tf_py_lock" kindref="compound">TfPyLock</ref><sp/>lock;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::python::api::object(*val);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//PXR_PYTHON_SUPPORT_ENABLED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StreamOut(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj,<sp/>std::ostream<sp/>&amp;out)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtStreamOut(obj,<sp/>out);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vt_ShapeData<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*GetShapeData(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(obj)-&gt;_GetShapeData();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>GetNumElements(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(obj)-&gt;_GetNumElements();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a8dad22fd533756d767affd18aa4d2ce2" kindref="member">IsArrayValued</ref>(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(obj)-&gt;IsArrayValued();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(obj)-&gt;GetTypeid();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1ae0ae121c23b03eb6efe844327075afd7" kindref="member">GetElementTypeid</ref>(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedVtValue(obj)-&gt;GetElementTypeid();</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>GetProxiedAsVtValue(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ep)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*VtGetErasedProxiedVtValue(ep);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HoldsType(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ep,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;query)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtErasedProxyHoldsType(ep,<sp/>query);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_type" kindref="compound">TfType</ref><sp/>GetTfType(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ep)<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>VtGetErasedProxiedTfType(ep);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*GetObjPtr(ErasedProxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ep)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*val<sp/>=<sp/>VtGetErasedProxiedVtValue(ep);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val<sp/>?<sp/>val-&gt;_GetProxiedObjPtr()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_TypeInfo<sp/>implementation<sp/>helper.<sp/><sp/>This<sp/>is<sp/>a<sp/>CRTP<sp/>base<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_LocalTypeInfo<sp/>and<sp/>_RemoteTypeInfo<sp/>types<sp/>derive.<sp/><sp/>It<sp/>wraps<sp/>their</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type-specific<sp/>implementations<sp/>with<sp/>type-generic<sp/>interfaces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Container,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Derived&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_TypeInfoImpl<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>_TypeInfo</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLocal<sp/>=<sp/>_UsesLocalStore&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasTrivialCopy<sp/>=<sp/>_IsTriviallyCopyable&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsProxy<sp/>=<sp/>VtIsValueProxy&lt;T&gt;::value;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>ProxyHelper<sp/>=<sp/>_ProxyHelper&lt;T&gt;;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>This<sp/>=<sp/>_TypeInfoImpl;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>_TypeInfoImpl()</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_TypeInfo(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T),</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ArrayHelper&lt;T&gt;::GetElementTypeid(),</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vt_KnownValueTypeDetail::GetIndex&lt;T&gt;(),</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_vt_is_array" kindref="compound">VtIsArray&lt;T&gt;::value</ref>,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VtIsHashable&lt;T&gt;(),</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsProxy,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_CopyInit,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_Destroy,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_Move,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_CanHash,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_Hash,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_Equal,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_EqualPtr,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_MakeMutable,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetPyObj,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_StreamOut,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetTypeid,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Array<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_IsArrayValued,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetElementTypeid,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetShapeData,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetNumElements,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Proxy<sp/>support.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_ProxyHoldsType,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetProxiedType,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetProxiedTypeid,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetProxiedObjPtr,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;This::_GetProxiedAsVtValue)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Typed<sp/>API<sp/>for<sp/>client<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;GetObj(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Derived::_GetObj(_Container(storage));</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>&amp;GetMutableObj(_Storage<sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Derived::_GetMutableObj(_Container(storage));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyInitObj(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;objSrc,<sp/>_Storage<sp/>&amp;dst)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Derived::_PlaceCopy(&amp;_Container(dst),<sp/>objSrc);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Container)<sp/>&lt;=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(_Storage),</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Container<sp/>size<sp/>cannot<sp/>exceed<sp/>storage<sp/>size.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_TypeInfo<sp/>interface<sp/>function<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_CopyInit(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;src,<sp/>_Storage<sp/>&amp;dst)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;_Container(dst))<sp/>Container(_Container(src));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Destroy(_Storage<sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Container(storage).~Container();</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_CanHash(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::CanHash(GetObj(storage));</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_Hash(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::Hash(GetObj(storage));</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_Equal(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/>_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equal<sp/>is<sp/>only<sp/>ever<sp/>invoked<sp/>with<sp/>an<sp/>object<sp/>of<sp/>this<sp/>specific<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>is,<sp/>we<sp/>only<sp/>ever<sp/>ask<sp/>a<sp/>proxy<sp/>to<sp/>compare<sp/>to<sp/>a<sp/>proxy;<sp/>we<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>a<sp/>proxy<sp/>to<sp/>compare<sp/>to<sp/>the<sp/>proxied<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::Equal(GetObj(lhs),<sp/>GetObj(rhs));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_EqualPtr(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*rhs)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equal<sp/>is<sp/>only<sp/>ever<sp/>invoked<sp/>with<sp/>an<sp/>object<sp/>of<sp/>this<sp/>specific<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>is,<sp/>we<sp/>only<sp/>ever<sp/>ask<sp/>a<sp/>proxy<sp/>to<sp/>compare<sp/>to<sp/>a<sp/>proxy;<sp/>we<sp/>never</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ask<sp/>a<sp/>proxy<sp/>to<sp/>compare<sp/>to<sp/>the<sp/>proxied<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::Equal(</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetObj(lhs),<sp/>*static_cast&lt;T<sp/>const<sp/>*&gt;(rhs));</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Move(_Storage<sp/>&amp;src,<sp/>_Storage<sp/>&amp;dst)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;_Container(dst))<sp/>Container(std::move(_Container(src)));</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Destroy(src);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_MakeMutable(_Storage<sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetMutableObj(storage);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>_GetPyObj(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetPyObj(GetObj(storage));</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;_StreamOut(</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage,<sp/>std::ostream<sp/>&amp;out)<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::StreamOut(GetObj(storage),<sp/>out);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;_GetTypeid(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetTypeid(GetObj(storage));</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsArrayValued(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::IsArrayValued(GetObj(storage));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetElementTypeid(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetElementTypeid(GetObj(storage));</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>_GetShapeData(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetShapeData(GetObj(storage));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_GetNumElements(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetNumElements(GetObj(storage));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_ProxyHoldsType(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t)<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::HoldsType(GetObj(storage),<sp/>t);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_type" kindref="compound">TfType</ref></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedType(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetTfType(GetObj(storage));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedTypeid(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetTypeid(GetObj(storage));</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedObjPtr(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetObjPtr(GetObj(storage));</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_GetProxiedAsVtValue(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ProxyHelper::GetProxiedAsVtValue(GetObj(storage));</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Internal<sp/>helper<sp/>--<sp/>cast<sp/>type-generic<sp/>storage<sp/>to<sp/>type-specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Container<sp/>&amp;_Container(_Storage<sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>Will<sp/>need<sp/>std::launder<sp/>in<sp/>c++17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*reinterpret_cast&lt;Container<sp/>*&gt;(&amp;storage);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Container<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;_Container(_Storage<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;storage)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>XXX<sp/>Will<sp/>need<sp/>std::launder<sp/>in<sp/>c++17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*reinterpret_cast&lt;Container<sp/>const<sp/>*&gt;(&amp;storage);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Local-storage<sp/>type<sp/>info<sp/>implementation.<sp/><sp/>The<sp/>container<sp/>and<sp/>the<sp/>object<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>same<sp/>--<sp/>there<sp/>is<sp/>no<sp/>distinct<sp/>container.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_LocalTypeInfo<sp/>:<sp/>_TypeInfoImpl&lt;</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LocalTypeInfo&lt;T&gt;<sp/><sp/></highlight><highlight class="comment">//<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>_LocalTypeInfo()</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_TypeInfoImpl&lt;T,<sp/>T,<sp/>_LocalTypeInfo&lt;T&gt;&gt;()</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>returns<sp/>object<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>&amp;_GetMutableObj(T<sp/>&amp;obj)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;<sp/>}</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;_GetObj(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;<sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>placement<sp/>new&apos;s<sp/>object<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_PlaceCopy(T<sp/>*dst,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;src)<sp/>{<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(dst)<sp/>T(src);<sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remote-storage<sp/>type<sp/>info<sp/>implementation.<sp/><sp/>The<sp/>container<sp/>is<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intrusive_ptr<sp/>to<sp/>an<sp/>object<sp/>holder:<sp/>_Counted&lt;T&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_RemoteTypeInfo<sp/>:<sp/>_TypeInfoImpl&lt;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::intrusive_ptr&lt;_Counted&lt;T&gt;<sp/>&gt;,<sp/></highlight><highlight class="comment">//<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoteTypeInfo&lt;T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRTP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constexpr<sp/>_RemoteTypeInfo()</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_TypeInfoImpl&lt;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T,<sp/>boost::intrusive_ptr&lt;_Counted&lt;T&gt;&gt;,<sp/>_RemoteTypeInfo&lt;T&gt;&gt;()</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::intrusive_ptr&lt;_Counted&lt;T&gt;<sp/>&gt;<sp/>Ptr;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>returns<sp/>object<sp/>stored<sp/>in<sp/>the<sp/>pointed-to<sp/>_Counted&lt;T&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/>&amp;_GetMutableObj(Ptr<sp/>&amp;ptr)<sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ptr-&gt;IsUnique())</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>_Counted&lt;T&gt;(ptr-&gt;Get()));</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;GetMutable();</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;_GetObj(Ptr<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;ptr)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr-&gt;Get();<sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PlaceCopy()<sp/>allocates<sp/>a<sp/>new<sp/>_Counted&lt;T&gt;<sp/>with<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_PlaceCopy(Ptr<sp/>*dst,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;src)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(dst)<sp/>Ptr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>_Counted&lt;T&gt;(src));</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Metafunction<sp/>that<sp/>returns<sp/>the<sp/>specific<sp/>_TypeInfo<sp/>subclass<sp/>for<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_TypeInfoFor<sp/>{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>_UsesLocalStore(T)<sp/>?<sp/>_LocalTypeInfo&lt;T&gt;<sp/>:<sp/>_RemoteTypeInfo&lt;T&gt;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::conditional_t&lt;_UsesLocalStore&lt;T&gt;::value,</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_LocalTypeInfo&lt;T&gt;,</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RemoteTypeInfo&lt;T&gt;&gt;<sp/>Type;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>char[N]<sp/>is<sp/>treated<sp/>as<sp/>a<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_TypeInfoFor&lt;char[N]&gt;<sp/>:<sp/>_TypeInfoFor&lt;std::string&gt;<sp/>{};</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Runtime<sp/>function<sp/>to<sp/>return<sp/>a<sp/>_TypeInfo<sp/>base<sp/>pointer<sp/>to<sp/>a<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>_TypeInfo<sp/>subclass<sp/>for<sp/>type<sp/>T.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_tf_pointer_and_bits" kindref="compound">TfPointerAndBits&lt;const _TypeInfo&gt;</ref><sp/>GetTypeInfo()<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_TypeInfoFor&lt;T&gt;::Type<sp/>TI;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TI<sp/>ti;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags<sp/>=</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TI::IsLocal<sp/>?<sp/>_LocalFlag<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TI::HasTrivialCopy<sp/>?<sp/>_TrivialCopyFlag<sp/>:<sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TI::IsProxy<sp/>?<sp/>_ProxyFlag<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_pointer_and_bits" kindref="compound">TfPointerAndBits&lt;const _TypeInfo&gt;</ref>(&amp;ti,<sp/>flags);</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>helper<sp/>that<sp/>moves<sp/>a<sp/>held<sp/>value<sp/>to<sp/>temporary<sp/>storage,<sp/>but<sp/>keeps<sp/>it<sp/>alive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>the<sp/>_HoldAside<sp/>object<sp/>is<sp/>destroyed.<sp/><sp/>This<sp/>is<sp/>used<sp/>when<sp/>assigning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>over<sp/>a<sp/>VtValue<sp/>that<sp/>might<sp/>own<sp/>the<sp/>object<sp/>being<sp/>assigned.<sp/><sp/>For<sp/>instance,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>I<sp/>have<sp/>a<sp/>VtValue<sp/>holding<sp/>a<sp/>map&lt;string,<sp/>VtValue&gt;,<sp/>and<sp/>I<sp/>reassign<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>VtValue<sp/>with<sp/>one<sp/>of<sp/>the<sp/>elements<sp/>from<sp/>the<sp/>map,<sp/>we<sp/>must<sp/>ensure<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>map<sp/>isn&apos;t<sp/>destroyed<sp/>until<sp/>after<sp/>the<sp/>assignment<sp/>has<sp/>taken<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_HoldAside;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_HoldAside<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>_HoldAside(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>*val)</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>info((val-&gt;<ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>()<sp/>||<sp/>val-&gt;_IsLocalAndTriviallyCopyable())</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>static_cast&lt;_TypeInfo<sp/>const<sp/>*&gt;(NULL)<sp/>:<sp/>val-&gt;_info.<ref refid="class_tf_pointer_and_bits_1ac3ab17fa92c8409e52c1fe61b023de76" kindref="member">Get</ref>())<sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;Move(val-&gt;_storage,<sp/>storage);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~_HoldAside()<sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info-&gt;Destroy(storage);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Storage<sp/>storage;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TypeInfo<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*info;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>typename<sp/>Vt_ValueGetStored&lt;T&gt;::Type&gt;::value&gt;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>_Init(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info<sp/>=<sp/>GetTypeInfo&lt;T&gt;();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_TypeInfoFor&lt;T&gt;::Type<sp/>TypeInfo;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeInfo::CopyInitObj(obj,<sp/>_storage);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_same&lt;T,<sp/>typename<sp/>Vt_ValueGetStored&lt;T&gt;::Type&gt;::value&gt;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>_Init(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Init(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Vt_ValueGetStored&lt;T&gt;::Type(obj));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="class_vt_value_1adc7da257c96e58dc372a30d24cab12af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1adc7da257c96e58dc372a30d24cab12af" kindref="member">VtValue</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="class_vt_value_1a5ed819ff3e65afd8aa73073609d16e61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a5ed819ff3e65afd8aa73073609d16e61" kindref="member">VtValue</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Copy(other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="class_vt_value_1aecd8618a453de8a917fa48cfe6201345" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1aecd8618a453de8a917fa48cfe6201345" kindref="member">VtValue</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Move(other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="878" refid="class_vt_value_1aa593712919d842f4f1730c168b8bf08c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1aa593712919d842f4f1730c168b8bf08c" kindref="member">VtValue</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Init(obj);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="902" refid="class_vt_value_1a3b961efaa66ce85b8c11e56b218f1b37" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/><ref refid="class_vt_value_1a3b961efaa66ce85b8c11e56b218f1b37" kindref="member">Take</ref>(T<sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>ret;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.<ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(obj);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="909" refid="class_vt_value_1a981ddd53cb937fa88e698eb8dc447b83" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a981ddd53cb937fa88e698eb8dc447b83" kindref="member">~VtValue</ref>()<sp/>{<sp/>_Clear();<sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="class_vt_value_1a0ef12f0cb86a6fcbc598e4976d84af8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1a0ef12f0cb86a6fcbc598e4976d84af8c" kindref="member">operator=</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_LIKELY(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other))</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Copy(other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="class_vt_value_1a918ce3a8f547f2835e400d88c4daf198" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1a918ce3a8f547f2835e400d88c4daf198" kindref="member">operator=</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;&amp;other)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_LIKELY(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;other))</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Move(other,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TypeInfoFor&lt;T&gt;::Type::IsLocal<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_TypeInfoFor&lt;T&gt;::Type::HasTrivialCopy,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;&gt;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a0ef12f0cb86a6fcbc598e4976d84af8c" kindref="member">operator=</ref>(T<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Clear();</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Init(obj);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="preprocessor">#ifdef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>&amp;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a0ef12f0cb86a6fcbc598e4976d84af8c" kindref="member">operator=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!_TypeInfoFor&lt;T&gt;::Type::IsLocal<sp/>||</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!_TypeInfoFor&lt;T&gt;::Type::HasTrivialCopy,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;&gt;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a0ef12f0cb86a6fcbc598e4976d84af8c" kindref="member">operator=</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)<sp/>{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HoldAside<sp/>tmp(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Init(obj);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="958" refid="class_vt_value_1a979e61808a58b81cbc11cdbc4921aeb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1a979e61808a58b81cbc11cdbc4921aeb8" kindref="member">operator=</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*cstr)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>tmp(cstr);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Clear();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Init(tmp);</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="class_vt_value_1a2f84c0f18aa89cfa23a6f33f0565a9ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1a2f84c0f18aa89cfa23a6f33f0565a9ec" kindref="member">operator=</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cstr)<sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>const_cast&lt;char<sp/>const<sp/>*&gt;(cstr);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="971" refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;rhs)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>nothing<sp/>if<sp/>both<sp/>empty.<sp/><sp/>Otherwise<sp/>general<sp/>swap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>()<sp/>||<sp/>!rhs.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Move(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>tmp);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Move(rhs,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Move(tmp,<sp/>rhs);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="class_vt_value_1acc0ec6409fcdf8f5cb368a2e19366c7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1acc0ec6409fcdf8f5cb368a2e19366c7f" kindref="member">swap</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;lhs,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;rhs)<sp/>{<sp/>lhs.<ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(rhs);<sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>an<sp/>unqualified<sp/>call<sp/>to<sp/>swap(&lt;held-value&gt;,<sp/>rhs).<sp/><sp/>If<sp/>this<sp/>value<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>holding<sp/>a<sp/>T,<sp/>replace<sp/>the<sp/>held<sp/>value<sp/>with<sp/>a<sp/>value-initialized<sp/>T</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>instance<sp/>first,<sp/>then<sp/>swap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(T<sp/>&amp;rhs);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>typename<sp/>Vt_ValueGetStored&lt;T&gt;::Type&gt;::value&gt;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(T<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsHolding&lt;T&gt;())</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>T();</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a82624f86feb0d78a76896d3f61c09d54" kindref="member">UncheckedSwap</ref>(rhs);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="preprocessor">#ifdef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a82624f86feb0d78a76896d3f61c09d54" kindref="member">UncheckedSwap</ref>(T<sp/>&amp;rhs);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>typename<sp/>Vt_ValueGetStored&lt;T&gt;::Type&gt;::value&gt;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a82624f86feb0d78a76896d3f61c09d54" kindref="member">UncheckedSwap</ref>(T<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="stage_load_rules_8h_1a507a6dfc9b510edf13d4ad9c4f3fa343" kindref="member">std::swap</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1acc0ec6409fcdf8f5cb368a2e19366c7f" kindref="member">swap</ref>(_GetMutable&lt;T&gt;(),<sp/>rhs);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023" refid="class_vt_value_1a84811700ec2b73454fb6dfb4ccae7d2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a84811700ec2b73454fb6dfb4ccae7d2f" kindref="member">UncheckedSwap</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;rhs)<sp/>{<sp/><ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(rhs);<sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1029" refid="class_vt_value_1a252ea635a2ccdb0187f59161528fc734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_vt_value_1a252ea635a2ccdb0187f59161528fc734" kindref="member">Remove</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a3a2aff7111d57fb39b943a66f7e26880" kindref="member">Swap</ref>(result);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Clear();</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1040" refid="class_vt_value_1a098d9f9998755544e913fe7bc35948f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_vt_value_1a098d9f9998755544e913fe7bc35948f8" kindref="member">UncheckedRemove</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>result;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a82624f86feb0d78a76896d3f61c09d54" kindref="member">UncheckedSwap</ref>(result);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_Clear();</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Fn&gt;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>typename<sp/>Vt_ValueGetStored&lt;T&gt;::Type&gt;::value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1053" refid="class_vt_value_1acec079e0f28f12f2b68ab9bcdf6fc36f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1acec079e0f28f12f2b68ab9bcdf6fc36f" kindref="member">Mutate</ref>(Fn<sp/>&amp;&amp;mutateFn)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsHolding&lt;T&gt;())<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UncheckedMutate&lt;T&gt;(std::forward&lt;Fn&gt;(mutateFn));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Fn&gt;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same&lt;T,<sp/>typename<sp/>Vt_ValueGetStored&lt;T&gt;::Type&gt;::value&gt;</highlight></codeline>
<codeline lineno="1067" refid="class_vt_value_1acdd58bcc414335fa97537429b866e7e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1acdd58bcc414335fa97537429b866e7e5" kindref="member">UncheckedMutate</ref>(Fn<sp/>&amp;&amp;mutateFn)<sp/>{</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>move<sp/>to<sp/>a<sp/>temporary,<sp/>mutate<sp/>the<sp/>temporary,<sp/>then<sp/>move<sp/>back.<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prevents<sp/>callers<sp/>from<sp/>escaping<sp/>a<sp/>mutable<sp/>reference<sp/>to<sp/>the<sp/>held<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>via<sp/>a<sp/>side-effect<sp/>of<sp/>mutateFn.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>&amp;stored<sp/>=_GetMutable&lt;T&gt;();</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tmp<sp/>=<sp/>std::move(stored);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Fn&gt;(mutateFn)(tmp);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>=<sp/>std::move(tmp);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1080" refid="class_vt_value_1ae5d3187e0408744ac959d6146de2f2bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1ae5d3187e0408744ac959d6146de2f2bf" kindref="member">IsHolding</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info.<ref refid="class_tf_pointer_and_bits_1a80f6cd50c1ca199c99d40d54fde620e0" kindref="member">GetLiteral</ref>()<sp/>&amp;&amp;<sp/>_TypeIs&lt;T&gt;();</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a8dad22fd533756d767affd18aa4d2ce2" kindref="member">IsArrayValued</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089" refid="class_vt_value_1a649576f1eae8ae7cbf4d31226e84d9d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a649576f1eae8ae7cbf4d31226e84d9d1" kindref="member">GetArraySize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_GetNumElements();<sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1ae0ae121c23b03eb6efe844327075afd7" kindref="member">GetElementTypeid</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/><ref refid="class_tf_type" kindref="compound">TfType</ref><sp/><ref refid="class_vt_value_1a978edfcefd3f5506ab455efbdc9789af" kindref="member">GetType</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/>std::string<sp/><ref refid="class_vt_value_1a04bc1dd706a9baa403f382b3629983f5" kindref="member">GetTypeName</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108" refid="class_vt_value_1a15a28e9ffc782338499c0b3e3faee6a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a15a28e9ffc782338499c0b3e3faee6a0" kindref="member">GetKnownValueTypeIndex</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_UNLIKELY(_IsProxy()))<sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info-&gt;GetProxiedAsVtValue(</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_storage).GetKnownValueTypeIndex();</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info.<ref refid="class_tf_pointer_and_bits_1a80f6cd50c1ca199c99d40d54fde620e0" kindref="member">GetLiteral</ref>()<sp/>?<sp/>_info-&gt;knownTypeIndex<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1120" refid="class_vt_value_1a60c1f31cc358d0d74f2dcbe9b686bc80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1a60c1f31cc358d0d74f2dcbe9b686bc80" kindref="member">UncheckedGet</ref>()<sp/>const<sp/>&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Get&lt;T&gt;();<sp/>}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_vt_value_1a60c1f31cc358d0d74f2dcbe9b686bc80" kindref="member">UncheckedGet</ref>()<sp/>&amp;&amp;<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UncheckedRemove&lt;T&gt;();<sp/>}</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1136" refid="class_vt_value_1a839e753e2247bd70893de723f5d70fdf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vt_value_1a839e753e2247bd70893de723f5d70fdf" kindref="member">Get</ref>()<sp/>const<sp/>&amp;<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Vt_DefaultValueFactory&lt;T&gt;<sp/>Factory;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>unlikely<sp/>case<sp/>that<sp/>the<sp/>types<sp/>don&apos;t<sp/>match,<sp/>we<sp/>obtain<sp/>a<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>to<sp/>return<sp/>and<sp/>issue<sp/>an<sp/>error<sp/>via<sp/>_FailGet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_UNLIKELY(!IsHolding&lt;T&gt;()))<sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(static_cast&lt;T<sp/>const<sp/>*&gt;(</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FailGet(Factory::Invoke,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T))));</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_Get&lt;T&gt;();</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_vt_value_1a839e753e2247bd70893de723f5d70fdf" kindref="member">Get</ref>()<sp/>&amp;&amp;<sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Vt_DefaultValueFactory&lt;T&gt;<sp/>Factory;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>unlikely<sp/>case<sp/>that<sp/>the<sp/>types<sp/>don&apos;t<sp/>match,<sp/>we<sp/>obtain<sp/>a<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>to<sp/>return<sp/>and<sp/>issue<sp/>an<sp/>error<sp/>via<sp/>_FailGet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_UNLIKELY(!IsHolding&lt;T&gt;()))<sp/>{</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(static_cast&lt;T<sp/>const<sp/>*&gt;(</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_FailGet(Factory::Invoke,<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T))));</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>UncheckedRemove&lt;T&gt;();</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1170" refid="class_vt_value_1a734e16c6983f68c0ec9981eee4b2ad08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="class_vt_value_1a734e16c6983f68c0ec9981eee4b2ad08" kindref="member">GetWithDefault</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;def<sp/>=<sp/>T())</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>IsHolding&lt;T&gt;()<sp/>?<sp/>UncheckedGet&lt;T&gt;()<sp/>:<sp/>def;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="1176" refid="class_vt_value_1a61177d32c16a47bfe487a1d5e720d444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a61177d32c16a47bfe487a1d5e720d444" kindref="member">RegisterCast</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>(*castFn)(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;))<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RegisterCast(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(From),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(To),<sp/>castFn);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>holding<sp/>To.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="1183" refid="class_vt_value_1a3e485cce97b70bde7ab32573ee5fea1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a3e485cce97b70bde7ab32573ee5fea1a" kindref="member">RegisterSimpleCast</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_RegisterCast(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(From),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(To),<sp/>_SimpleCast&lt;From,<sp/>To&gt;);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="1190" refid="class_vt_value_1a4b3d0866dcfc73919fbf5150f595a76b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a4b3d0866dcfc73919fbf5150f595a76b" kindref="member">RegisterSimpleBidirectionalCast</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterSimpleCast&lt;From,<sp/>To&gt;();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegisterSimpleCast&lt;To,<sp/>From&gt;();</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1203" refid="class_vt_value_1ad0578f3c34662abae8e38349c195affd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/><ref refid="class_vt_value_1ad0578f3c34662abae8e38349c195affd" kindref="member">Cast</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>ret<sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret.<ref refid="class_vt_value_1ad0578f3c34662abae8e38349c195affd" kindref="member">Cast</ref>&lt;T&gt;();</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a1f73b97ac0f17c57eadc798050070c85" kindref="member">CastToTypeOf</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1aee35f59a0d67262617851a4abb3f2491" kindref="member">CastToTypeid</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;type);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231" refid="class_vt_value_1ae5c2f4ddf1bea9362bbea0aa7263afd6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1ae5c2f4ddf1bea9362bbea0aa7263afd6" kindref="member">CanCastFromTypeidToTypeid</ref>(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;to)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CanCast(from,<sp/>to);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1244" refid="class_vt_value_1accc74126cbf58e5879dfc3b1ce788803" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1accc74126cbf58e5879dfc3b1ce788803" kindref="member">Cast</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsHolding&lt;T&gt;())</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>_PerformCast(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T),<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="class_vt_value_1a5021291aa61cf8b2eb4b2a30347f2578" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1a5021291aa61cf8b2eb4b2a30347f2578" kindref="member">CastToTypeOf</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1aee35f59a0d67262617851a4abb3f2491" kindref="member">CastToTypeid</ref>(other.<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>());</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268" refid="class_vt_value_1ac47dc80f89f5c40cf0097abd57de09f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;<ref refid="class_vt_value_1ac47dc80f89f5c40cf0097abd57de09f3" kindref="member">CastToTypeid</ref>(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;type)<sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="safe_type_compare_8h_1a589ae38e89deda84592b09223f4d471d" kindref="member">TfSafeTypeCompare</ref>(<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(),<sp/>type))<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>_PerformCast(type,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1279" refid="class_vt_value_1ad32f4fc547bfad96430e86e6e6d51892" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1ad32f4fc547bfad96430e86e6e6d51892" kindref="member">CanCast</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CanCast(<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(),<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286" refid="class_vt_value_1a6beb416171fcb835ffa6eead917288f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a6beb416171fcb835ffa6eead917288f0" kindref="member">CanCastToTypeOf</ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CanCast(<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(),<sp/>other.<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>());</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1293" refid="class_vt_value_1a08990f626e24e73df15e6ade51847bdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a08990f626e24e73df15e6ade51847bdb" kindref="member">CanCastToTypeid</ref>(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_CanCast(<ref refid="class_vt_value_1afbab98c0a0930a872aa2d803cf59de50" kindref="member">GetTypeid</ref>(),<sp/>type);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298" refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info.<ref refid="class_tf_pointer_and_bits_1a80f6cd50c1ca199c99d40d54fde620e0" kindref="member">GetLiteral</ref>()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1af1ff5b72283bea0d3cfe15292d4241b2" kindref="member">CanHash</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1aa6f01c2ab99ff3a623b83435c0d7e30a" kindref="member">GetHash</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hash_value(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val.<ref refid="class_vt_value_1aa6f01c2ab99ff3a623b83435c0d7e30a" kindref="member">GetHash</ref>();</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1312" refid="class_vt_value_1a0ece68828432c993eb912f104fd0e85c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a0ece68828432c993eb912f104fd0e85c" kindref="member">operator == </ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Vt_ValueGetStored&lt;T&gt;::Type<sp/>Stored;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs.<ref refid="class_vt_value_1ae5d3187e0408744ac959d6146de2f2bf" kindref="member">IsHolding</ref>&lt;Stored&gt;()<sp/>&amp;&amp;<sp/>lhs.<ref refid="class_vt_value_1a60c1f31cc358d0d74f2dcbe9b686bc80" kindref="member">UncheckedGet</ref>&lt;Stored&gt;()<sp/>==<sp/>rhs;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a0ece68828432c993eb912f104fd0e85c" kindref="member">operator == </ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rhs<sp/>==<sp/>lhs;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1323" refid="class_vt_value_1acd6847b1e176ae33f6bee4385b273747" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1acd6847b1e176ae33f6bee4385b273747" kindref="member">operator != </ref>(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1acd6847b1e176ae33f6bee4385b273747" kindref="member">operator != </ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lhs,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(lhs<sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332" refid="class_vt_value_1a6ea6c00a643779fd579d7b1c872e724b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1a0ece68828432c993eb912f104fd0e85c" kindref="member">operator == </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty<sp/>=<sp/><ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>(),<sp/>rhsEmpty<sp/>=<sp/>rhs.<ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>();</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(empty<sp/>||<sp/>rhsEmpty)<sp/>{</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Either<sp/>one<sp/>or<sp/>both<sp/>empty<sp/>--<sp/>only<sp/>equal<sp/>if<sp/>both<sp/>empty.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty<sp/>==<sp/>rhsEmpty;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_info.<ref refid="class_tf_pointer_and_bits_1a80f6cd50c1ca199c99d40d54fde620e0" kindref="member">GetLiteral</ref>()<sp/>==<sp/>rhs._info.<ref refid="class_tf_pointer_and_bits_1a80f6cd50c1ca199c99d40d54fde620e0" kindref="member">GetLiteral</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Holding<sp/>identical<sp/>types<sp/>--<sp/>compare<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info.<ref refid="class_tf_pointer_and_bits_1ac3ab17fa92c8409e52c1fe61b023de76" kindref="member">Get</ref>()-&gt;Equal(_storage,<sp/>rhs._storage);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_EqualityImpl(rhs);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1acd6847b1e176ae33f6bee4385b273747" kindref="member">operator != </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);<sp/>}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vt_value_1a6e9a462519b005d6795a4ecc87c521ae" kindref="member">operator &lt;&lt; </ref>(std::ostream<sp/>&amp;out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>_GetShapeData()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_GetNumElements()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_ValueShapeDataAccess;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Copy(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;src,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;dst)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.<ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._Clear();</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HoldAside<sp/>tmp(&amp;dst);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._info<sp/>=<sp/>src._info;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src._IsLocalAndTriviallyCopyable())<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._storage<sp/>=<sp/>src._storage;</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._info-&gt;CopyInit(src._storage,<sp/>dst._storage);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Move(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;src,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>&amp;dst)<sp/>noexcept<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src.<ref refid="class_vt_value_1a8e12342fc420701fbffd97025421575a" kindref="member">IsEmpty</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._Clear();</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_HoldAside<sp/>tmp(&amp;dst);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._info<sp/>=<sp/>src._info;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src._IsLocalAndTriviallyCopyable())<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._storage<sp/>=<sp/>src._storage;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst._info-&gt;Move(src._storage,<sp/>dst._storage);</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src._info.<ref refid="class_tf_pointer_and_bits_1a05df5c25d9a433e8d97049e84d1eadbf" kindref="member">Set</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;VtIsKnownValueType_Workaround&lt;T&gt;::value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/>_TypeIs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info-&gt;knownTypeIndex<sp/>==<sp/>VtGetKnownValueTypeIndex&lt;T&gt;()<sp/>||</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCH_UNLIKELY(_IsProxy()<sp/>&amp;&amp;<sp/>_TypeIsImpl(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T)));</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::enable_if_t&lt;!VtIsKnownValueType_Workaround&lt;T&gt;::value,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>_TypeIs()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;t<sp/>=<sp/></highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="safe_type_compare_8h_1a589ae38e89deda84592b09223f4d471d" kindref="member">TfSafeTypeCompare</ref>(_info-&gt;typeInfo,<sp/>t)<sp/>||</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCH_UNLIKELY(_IsProxy()<sp/>&amp;&amp;<sp/>_TypeIsImpl(t));</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_TypeIsImpl(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;queriedType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_EqualityImpl(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Proxy&gt;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;VtIsValueProxy&lt;Proxy&gt;::value,<sp/>Proxy<sp/>&amp;&gt;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>_GetMutable()<sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_TypeInfoFor&lt;Proxy&gt;::Type<sp/>TypeInfo;</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeInfo::GetMutableObj(_storage);</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;!VtIsValueProxy&lt;T&gt;::value,<sp/>T<sp/>&amp;&gt;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/>_GetMutable()<sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>are<sp/>a<sp/>proxy,<sp/>collapse<sp/>it<sp/>out<sp/>to<sp/>the<sp/>real<sp/>value<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_UNLIKELY(_IsProxy()))<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>_info-&gt;GetProxiedAsVtValue(_storage);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_TypeInfoFor&lt;T&gt;::Type<sp/>TypeInfo;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeInfo::GetMutableObj(_storage);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Proxy&gt;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;VtIsValueProxy&lt;Proxy&gt;::value,<sp/>Proxy<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;&gt;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>_Get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_TypeInfoFor&lt;Proxy&gt;::Type<sp/>TypeInfo;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeInfo::GetObj(_storage);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>std::enable_if_t&lt;!VtIsValueProxy&lt;T&gt;::value,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;&gt;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>_Get()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>_TypeInfoFor&lt;T&gt;::Type<sp/>TypeInfo;</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_UNLIKELY(_IsProxy()))<sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*static_cast&lt;T<sp/>const<sp/>*&gt;(_GetProxiedObjPtr());</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeInfo::GetObj(_storage);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*_GetProxiedObjPtr()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info-&gt;GetProxiedObjPtr(_storage);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>invoked<sp/>in<sp/>case<sp/>Get<sp/>fails.<sp/><sp/>Reports<sp/>an<sp/>error<sp/>and<sp/>returns<sp/>a<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>for<sp/>\a<sp/>queryType.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>_FailGet(Vt_DefaultValueHolder<sp/>(*factory)(),</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;queryType)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_Clear()<sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>optimize<sp/>for<sp/>local<sp/>types<sp/>not<sp/>to<sp/>deref<sp/>_info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal">ARCH_PRAGMA_PUSH</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XXX:<sp/>http://bug/DEV-16695</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal">ARCH_PRAGMA_MAYBE_UNINITIALIZED</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_info.<ref refid="class_tf_pointer_and_bits_1a80f6cd50c1ca199c99d40d54fde620e0" kindref="member">GetLiteral</ref>()<sp/>&amp;&amp;<sp/>!_IsLocalAndTriviallyCopyable())</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="class_tf_pointer_and_bits_1ac3ab17fa92c8409e52c1fe61b023de76" kindref="member">Get</ref>()-&gt;Destroy(_storage);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">ARCH_PRAGMA_POP</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_info.<ref refid="class_tf_pointer_and_bits_1a05df5c25d9a433e8d97049e84d1eadbf" kindref="member">Set</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsLocalAndTriviallyCopyable()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bits<sp/>=<sp/>_info.<ref refid="class_tf_pointer_and_bits_1a9667e6f596e3ad51e3a1a261efeff5b7" kindref="member">BitsAs</ref>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;();</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(bits<sp/>&amp;<sp/>(_LocalFlag<sp/>|<sp/>_TrivialCopyFlag))<sp/>==</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(_LocalFlag<sp/>|<sp/>_TrivialCopyFlag);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_IsProxy()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_info.<ref refid="class_tf_pointer_and_bits_1a9667e6f596e3ad51e3a1a261efeff5b7" kindref="member">BitsAs</ref>&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;()<sp/>&amp;<sp/>_ProxyFlag;</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_RegisterCast(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;to,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>(*castFn)(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;));</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>\p<sp/>value<sp/>to<sp/>the<sp/>type<sp/>\p<sp/>to.<sp/><sp/>Caller<sp/>must<sp/>ensure<sp/>that<sp/>val&apos;s<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>already<sp/>\p<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>_PerformCast(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;to,<sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>if<sp/>\p<sp/>from<sp/>==<sp/>\p<sp/>to<sp/>or<sp/>if<sp/>there<sp/>is<sp/>a<sp/>registered<sp/>cast<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>VtValues<sp/>holding<sp/>\p<sp/>from<sp/>to<sp/>\p<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/>_CanCast(std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;from,<sp/>std::type_info<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;to);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>helper<sp/>template<sp/>function<sp/>for<sp/>simple<sp/>casts<sp/>from<sp/>From<sp/>to<sp/>To.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>From,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>To&gt;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/>_SimpleCast(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vt_value_1adc7da257c96e58dc372a30d24cab12af" kindref="member">VtValue</ref>(To(val.<ref refid="class_vt_value_1a60c1f31cc358d0d74f2dcbe9b686bc80" kindref="member">UncheckedGet</ref>&lt;From&gt;()));</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>grants<sp/>friend<sp/>access<sp/>to<sp/>a<sp/>function<sp/>in<sp/>the<sp/>wrapper<sp/>file<sp/>for<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class.<sp/><sp/>This<sp/>lets<sp/>the<sp/>wrapper<sp/>reach<sp/>down<sp/>into<sp/>a<sp/>value<sp/>to<sp/>get<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>boost::python<sp/>wrapped<sp/>object<sp/>corresponding<sp/>to<sp/>the<sp/>held<sp/>type.<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>facility<sp/>is<sp/>necessary<sp/>to<sp/>get<sp/>the<sp/>python<sp/>API<sp/>we<sp/>want.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>Vt_GetPythonObjectFromHeldValue(<ref refid="class_vt_value" kindref="compound">VtValue</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/>VT_API<sp/><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref><sp/>_GetPythonObject()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>_Storage<sp/>_storage;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_pointer_and_bits" kindref="compound">TfPointerAndBits&lt;const _TypeInfo&gt;</ref><sp/>_info;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_ValueShapeDataAccess<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vt_ShapeData*<sp/>_GetShapeData(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value._GetShapeData();</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_GetNumElements(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>&amp;<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value._GetNumElements();</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Vt_DefaultValueFactory<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder<sp/>Invoke();</highlight></codeline>
<codeline lineno="1523"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">Vt_DefaultValueFactory&lt;T&gt;::Invoke()<sp/>{</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vt_DefaultValueHolder::Create&lt;T&gt;();</highlight></codeline>
<codeline lineno="1529"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>performance<sp/>reasons,<sp/>the<sp/>default<sp/>constructors<sp/>for<sp/>vectors,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrices,<sp/>and<sp/>quaternions<sp/>do<sp/>*not*<sp/>initialize<sp/>the<sp/>data<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object.<sp/><sp/>This<sp/>greatly<sp/>improves<sp/>the<sp/>performance<sp/>of<sp/>creating<sp/>large</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrays<sp/>of<sp/>objects.<sp/><sp/>However,<sp/>for<sp/>consistency<sp/>and<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>errors<sp/>complaining<sp/>about<sp/>uninitialized<sp/>values,<sp/>we<sp/>use<sp/>VtZero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>construct<sp/>zeroed<sp/>out<sp/>vectors,<sp/>matrices,<sp/>and<sp/>quaternions<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight><highlight class="comment">//<sp/>explicitly<sp/>instantiating<sp/>the<sp/>factory<sp/>for<sp/>these<sp/>types.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_VT_DECLARE_ZERO_VALUE_FACTORY(r,<sp/>unused,<sp/>elem)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1540"><highlight class="preprocessor">template<sp/>&lt;&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1541"><highlight class="preprocessor">VT_API<sp/>Vt_DefaultValueHolder<sp/>Vt_DefaultValueFactory&lt;VT_TYPE(elem)&gt;::Invoke();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal">BOOST_PP_SEQ_FOR_EACH(_VT_DECLARE_ZERO_VALUE_FACTORY,</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unused,</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT_VEC_VALUE_TYPES</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT_MATRIX_VALUE_TYPES</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT_QUATERNION_VALUE_TYPES</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VT_DUALQUATERNION_VALUE_TYPES)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>_VT_DECLARE_ZERO_VALUE_FACTORY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Get()/IsHolding<sp/>routines<sp/>needs<sp/>to<sp/>be<sp/>special-cased<sp/>to<sp/>handle<sp/>getting<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VtValue<sp/>*as*<sp/>a<sp/>VtValue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>&amp;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal">VtValue::Get&lt;VtValue&gt;()<sp/>const<sp/>&amp;<sp/>{</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="1565"><highlight class="normal">VtValue::Get&lt;VtValue&gt;()<sp/>&amp;&amp;<sp/>{</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref>&amp;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">VtValue::UncheckedGet&lt;VtValue&gt;()<sp/>const<sp/>&amp;<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_vt_value" kindref="compound">VtValue</ref></highlight></codeline>
<codeline lineno="1577"><highlight class="normal">VtValue::UncheckedGet&lt;VtValue&gt;()<sp/>&amp;&amp;<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::move(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal">VtValue::IsHolding&lt;VtValue&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialize<sp/>VtValue::IsHolding&lt;void&gt;()<sp/>to<sp/>always<sp/>return<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal">VtValue::IsHolding&lt;void&gt;()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>!doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_VT_VALUE_H</highlight></codeline>
    </programlisting>
    <location file="pxr/base/vt/value.h"/>
  </compounddef>
</doxygen>
