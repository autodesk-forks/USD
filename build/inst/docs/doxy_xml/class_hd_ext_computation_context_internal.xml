<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_ext_computation_context_internal" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdExtComputationContextInternal</compoundname>
    <basecompoundref refid="class_hd_ext_computation_context" prot="public" virt="non-virtual">HdExtComputationContext</basecompoundref>
    <includes refid="ext_computation_context_internal_8h" local="no">extComputationContextInternal.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_hd_ext_computation_context_internal_1aa161b9c681a542fa8d361776bf6755a1" prot="private" static="no">
        <type>std::map&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, <ref refid="class_vt_value" kindref="compound">VtValue</ref> &gt;</type>
        <definition>typedef std::map&lt;TfToken, VtValue&gt; ValueMap</definition>
        <argsstring></argsstring>
        <name>ValueMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="96" column="1" bodyfile="pxr/imaging/hd/extComputationContextInternal.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_ext_computation_context_internal_1a17136d8b7c8fbc63b85e21d4da4fdd6e" prot="private" static="no" mutable="no">
        <type>ValueMap</type>
        <definition>ValueMap m_inputs</definition>
        <argsstring></argsstring>
        <name>m_inputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="98" column="1" bodyfile="pxr/imaging/hd/extComputationContextInternal.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_ext_computation_context_internal_1a363b3c65e3c5b1600a5b8dc9c47f896c" prot="private" static="no" mutable="no">
        <type>ValueMap</type>
        <definition>ValueMap m_outputs</definition>
        <argsstring></argsstring>
        <name>m_outputs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="99" column="1" bodyfile="pxr/imaging/hd/extComputationContextInternal.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_ext_computation_context_internal_1aac281451ed90c8a543ec744840bdf5ba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool m_compuationError</definition>
        <argsstring></argsstring>
        <name>m_compuationError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="100" column="1" bodyfile="pxr/imaging/hd/extComputationContextInternal.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a7dd19a04d7fa1b3067d3790b2400b81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API</type>
        <definition>HD_API HdExtComputationContextInternal</definition>
        <argsstring>()</argsstring>
        <name>HdExtComputationContextInternal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a81c8d30019649914e0f28672704cf258" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API</type>
        <definition>virtual HD_API ~HdExtComputationContextInternal</definition>
        <argsstring>()</argsstring>
        <name>~HdExtComputationContextInternal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a1ea27b9d044324f74d96013d2186f0a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
        <definition>virtual HD_API const VtValue&amp; GetInputValue</definition>
        <argsstring>(const TfToken &amp;name) const override</argsstring>
        <name>GetInputValue</name>
        <reimplements refid="class_hd_ext_computation_context_1ad664500069bc0d381665de0c2d600b28">GetInputValue</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Obtains the value of an named input to the computation. </para>
        </briefdescription>
        <detaileddescription>
<para>The code will issue a coding error and return a empty value if the input is missing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a7d271e69160811834d232acaa8732e94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HD_API const <ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
        <definition>virtual HD_API const VtValue* GetOptionalInputValuePtr</definition>
        <argsstring>(const TfToken &amp;name) const override</argsstring>
        <name>GetOptionalInputValuePtr</name>
        <reimplements refid="class_hd_ext_computation_context_1a876c96b4b09832d73476ff50bd0caaba">GetOptionalInputValuePtr</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Obtains the value of an named input to the computation. </para>
        </briefdescription>
        <detaileddescription>
<para>If the input isn&apos;t present, nullptr will be returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a017248f0e639eb8c06b43a40aa574c88" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void SetOutputValue</definition>
        <argsstring>(const TfToken &amp;name, const VtValue &amp;output) override</argsstring>
        <name>SetOutputValue</name>
        <reimplements refid="class_hd_ext_computation_context_1a6c63eb580c7017f096de6d7df37198f9">SetOutputValue</reimplements>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Sets the value of the specified output. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a663e251f1fc6fc56518a3bfd2b4ae07b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API void</type>
        <definition>HD_API void SetInputValue</definition>
        <argsstring>(const TfToken &amp;name, const VtValue &amp;input)</argsstring>
        <name>SetInputValue</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_vt_value" kindref="compound">VtValue</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Adds the named input to the execution environment. </para>
        </briefdescription>
        <detaileddescription>
<para>If the input already exists, the value is not replaced. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a7067d52dfec93adff8e9e390d7626e70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool GetOutputValue</definition>
        <argsstring>(const TfToken &amp;name, VtValue *output) const</argsstring>
        <name>GetOutputValue</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Fetches the named output from the execution environment. </para>
        </briefdescription>
        <detaileddescription>
<para>returns false if the output is not present. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a7bd27177087536b471d6d8487c8b57a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API bool</type>
        <definition>HD_API bool HasComputationError</definition>
        <argsstring>()</argsstring>
        <name>HasComputationError</name>
        <briefdescription>
<para>returns true is an error occur in processing, such that the outputs are invalid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="86" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a5623db7f7f1ceeec618fe33bfe4cbdc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HD_API void</type>
        <definition>virtual HD_API void RaiseComputationError</definition>
        <argsstring>() override</argsstring>
        <name>RaiseComputationError</name>
        <reimplements refid="class_hd_ext_computation_context_1a8ec191c177db5e135cc1761616836e77">RaiseComputationError</reimplements>
        <briefdescription>
<para>Called to indicate an error occurred while executing a computation so that it&apos;s output are invalid. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a916491c9dfd39c9b8f7f592cea27ce73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HdExtComputationContextInternal</definition>
        <argsstring>(const HdExtComputationContextInternal &amp;)=delete</argsstring>
        <name>HdExtComputationContextInternal</name>
        <param>
          <type>const <ref refid="class_hd_ext_computation_context_internal" kindref="compound">HdExtComputationContextInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_ext_computation_context_internal_1a90a56e6e86d03ae21ba3a16d71b10ee3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_hd_ext_computation_context_internal" kindref="compound">HdExtComputationContextInternal</ref> &amp;</type>
        <definition>HdExtComputationContextInternal&amp; operator=</definition>
        <argsstring>(const HdExtComputationContextInternal &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_hd_ext_computation_context_internal" kindref="compound">HdExtComputationContextInternal</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/extComputationContextInternal.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hydra implementation of the <ref refid="class_hd_ext_computation_context" kindref="compound">HdExtComputationContext</ref> public interface. </para>
    </briefdescription>
    <detaileddescription>
<para>The class provides additional API for setting up the context. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1932">
        <label>HdExtComputationContextInternal</label>
        <link refid="class_hd_ext_computation_context_internal"/>
        <childnode refid="1933" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1933">
        <label>HdExtComputationContext</label>
        <link refid="class_hd_ext_computation_context"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1934">
        <label>HdExtComputationContextInternal</label>
        <link refid="class_hd_ext_computation_context_internal"/>
        <childnode refid="1935" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1935">
        <label>HdExtComputationContext</label>
        <link refid="class_hd_ext_computation_context"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/extComputationContextInternal.h" line="40" column="1" bodyfile="pxr/imaging/hd/extComputationContextInternal.h" bodystart="40" bodyend="108"/>
    <listofallmembers>
      <member refid="class_hd_ext_computation_context_internal_1a1ea27b9d044324f74d96013d2186f0a5" prot="public" virt="virtual"><scope>HdExtComputationContextInternal</scope><name>GetInputValue</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a7d271e69160811834d232acaa8732e94" prot="public" virt="virtual"><scope>HdExtComputationContextInternal</scope><name>GetOptionalInputValuePtr</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a7067d52dfec93adff8e9e390d7626e70" prot="public" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>GetOutputValue</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a7bd27177087536b471d6d8487c8b57a9" prot="public" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>HasComputationError</name></member>
      <member refid="class_hd_ext_computation_context_1a5ab19e110b80eaac2c94d8fd750f1d2d" prot="public" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>HdExtComputationContext</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a7dd19a04d7fa1b3067d3790b2400b81d" prot="public" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>HdExtComputationContextInternal</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a916491c9dfd39c9b8f7f592cea27ce73" prot="private" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>HdExtComputationContextInternal</name></member>
      <member refid="class_hd_ext_computation_context_internal_1aac281451ed90c8a543ec744840bdf5ba" prot="private" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>m_compuationError</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a17136d8b7c8fbc63b85e21d4da4fdd6e" prot="private" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>m_inputs</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a363b3c65e3c5b1600a5b8dc9c47f896c" prot="private" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>m_outputs</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a90a56e6e86d03ae21ba3a16d71b10ee3" prot="private" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>operator=</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a5623db7f7f1ceeec618fe33bfe4cbdc0" prot="public" virt="virtual"><scope>HdExtComputationContextInternal</scope><name>RaiseComputationError</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a663e251f1fc6fc56518a3bfd2b4ae07b" prot="public" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>SetInputValue</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a017248f0e639eb8c06b43a40aa574c88" prot="public" virt="virtual"><scope>HdExtComputationContextInternal</scope><name>SetOutputValue</name></member>
      <member refid="class_hd_ext_computation_context_internal_1aa161b9c681a542fa8d361776bf6755a1" prot="private" virt="non-virtual"><scope>HdExtComputationContextInternal</scope><name>ValueMap</name></member>
      <member refid="class_hd_ext_computation_context_1a27f6fd4b4130dd903cdaf7cf24eb9446" prot="public" virt="virtual"><scope>HdExtComputationContextInternal</scope><name>~HdExtComputationContext</name></member>
      <member refid="class_hd_ext_computation_context_internal_1a81c8d30019649914e0f28672704cf258" prot="public" virt="virtual"><scope>HdExtComputationContextInternal</scope><name>~HdExtComputationContextInternal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
