<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_vt_value_1_1___type_info_impl" kind="struct" language="C++" prot="private">
    <compoundname>VtValue::_TypeInfoImpl</compoundname>
    <basecompoundref prot="public" virt="non-virtual">VtValue::_TypeInfo</basecompoundref>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Container</declname>
        <defname>Container</defname>
      </param>
      <param>
        <type>class</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_vt_value_1_1___type_info_impl_1a53ec981a057a556c4e248639abd6b021" prot="public" static="no">
        <type>_ProxyHelper&lt; T &gt;</type>
        <definition>using ProxyHelper =  _ProxyHelper&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>ProxyHelper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="577" column="1" bodyfile="pxr/base/vt/value.h" bodystart="577" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_vt_value_1_1___type_info_impl_1a06e80cad1fc71244129184bb6c5a0db2" prot="public" static="no">
        <type>_TypeInfoImpl</type>
        <definition>using This =  _TypeInfoImpl</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="579" column="1" bodyfile="pxr/base/vt/value.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_vt_value_1_1___type_info_impl_1a27421e87c9555736426477ca82a12bc0" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool IsLocal</definition>
        <argsstring></argsstring>
        <name>IsLocal</name>
        <initializer>= _UsesLocalStore&lt;T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="573" column="1" bodyfile="pxr/base/vt/value.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vt_value_1_1___type_info_impl_1a09069fa49db42fb0c2f6e7bd3691ddaa" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool HasTrivialCopy</definition>
        <argsstring></argsstring>
        <name>HasTrivialCopy</name>
        <initializer>= _IsTriviallyCopyable&lt;T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="574" column="1" bodyfile="pxr/base/vt/value.h" bodystart="574" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_vt_value_1_1___type_info_impl_1a92f59d016692c4f736c5f98eeb6b4cb7" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool IsProxy</definition>
        <argsstring></argsstring>
        <name>IsProxy</name>
        <initializer>= VtIsValueProxy&lt;T&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="575" column="1" bodyfile="pxr/base/vt/value.h" bodystart="575" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a68ac37bb62260815616ca2ad9af60fe4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr _TypeInfoImpl</definition>
        <argsstring>()</argsstring>
        <name>_TypeInfoImpl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="581" column="1" bodyfile="pxr/base/vt/value.h" bodystart="581" bodyend="613"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a5a16b0f18b7a8e11d3841b12eb1e2a9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T const  &amp;</type>
        <definition>static T const&amp; GetObj</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>GetObj</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="617" column="1" bodyfile="pxr/base/vt/value.h" bodystart="617" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a9b2f4c1cbd3a40504eba9d0b7882764d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>static T&amp; GetMutableObj</definition>
        <argsstring>(_Storage &amp;storage)</argsstring>
        <name>GetMutableObj</name>
        <param>
          <type>_Storage &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="621" column="1" bodyfile="pxr/base/vt/value.h" bodystart="621" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a39e7f2f97189d3f8bb347c68e622b8f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void CopyInitObj</definition>
        <argsstring>(T const &amp;objSrc, _Storage &amp;dst)</argsstring>
        <name>CopyInitObj</name>
        <param>
          <type>T const &amp;</type>
          <declname>objSrc</declname>
        </param>
        <param>
          <type>_Storage &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="625" column="1" bodyfile="pxr/base/vt/value.h" bodystart="625" bodyend="627"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1ab4f18e2d999f500ba7fa6e150d4e5c16" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void _CopyInit</definition>
        <argsstring>(_Storage const &amp;src, _Storage &amp;dst)</argsstring>
        <name>_CopyInit</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>_Storage &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="635" column="1" bodyfile="pxr/base/vt/value.h" bodystart="635" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1ac6aacb6862da33f8eec0051f07036c0b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void _Destroy</definition>
        <argsstring>(_Storage &amp;storage)</argsstring>
        <name>_Destroy</name>
        <param>
          <type>_Storage &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="639" column="1" bodyfile="pxr/base/vt/value.h" bodystart="639" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a72e944083f5de713e77db9850e8b2901" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _CanHash</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_CanHash</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="643" column="1" bodyfile="pxr/base/vt/value.h" bodystart="643" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1aca8a0084108687f2b8055a64470bab85" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t _Hash</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_Hash</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="647" column="1" bodyfile="pxr/base/vt/value.h" bodystart="647" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a434c76f6756824f70306d20147fa0164" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _Equal</definition>
        <argsstring>(_Storage const &amp;lhs, _Storage const &amp;rhs)</argsstring>
        <name>_Equal</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>_Storage const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="651" column="1" bodyfile="pxr/base/vt/value.h" bodystart="651" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1ab89d131d457c5e67f71a68ca2f91aa04" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _EqualPtr</definition>
        <argsstring>(_Storage const &amp;lhs, void const *rhs)</argsstring>
        <name>_EqualPtr</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>void const *</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="658" column="1" bodyfile="pxr/base/vt/value.h" bodystart="658" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a732827d430eb66d957e426a30dd30b4b" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void _Move</definition>
        <argsstring>(_Storage &amp;src, _Storage &amp;dst) noexcept</argsstring>
        <name>_Move</name>
        <param>
          <type>_Storage &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>_Storage &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="666" column="1" bodyfile="pxr/base/vt/value.h" bodystart="666" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a177c881e52c5eba5c5ffcbba97a8c500" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void _MakeMutable</definition>
        <argsstring>(_Storage &amp;storage)</argsstring>
        <name>_MakeMutable</name>
        <param>
          <type>_Storage &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="671" column="1" bodyfile="pxr/base/vt/value.h" bodystart="671" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1afafd2bddf687722e7f2c873aa4e8eee0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_py_obj_wrapper" kindref="compound">TfPyObjWrapper</ref></type>
        <definition>static TfPyObjWrapper _GetPyObj</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetPyObj</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="675" column="1" bodyfile="pxr/base/vt/value.h" bodystart="675" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a48edbf440718293e657f9a97dd07cac7" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>static std::ostream&amp; _StreamOut</definition>
        <argsstring>(_Storage const &amp;storage, std::ostream &amp;out)</argsstring>
        <name>_StreamOut</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="679" column="1" bodyfile="pxr/base/vt/value.h" bodystart="679" bodyend="682"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a6c617e3d8567e51fffbf12d04e6bacb3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::type_info const  &amp;</type>
        <definition>static std::type_info const&amp; _GetTypeid</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetTypeid</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="684" column="1" bodyfile="pxr/base/vt/value.h" bodystart="684" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a9c91196eb00be045acdc3295718bd0b0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsArrayValued</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_IsArrayValued</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="688" column="1" bodyfile="pxr/base/vt/value.h" bodystart="688" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a05b5f063a186347b3df24b85c2680c74" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::type_info const  &amp;</type>
        <definition>static std::type_info const&amp; _GetElementTypeid</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetElementTypeid</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="693" column="1" bodyfile="pxr/base/vt/value.h" bodystart="693" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a45c88548c6892099ed67e4edfd46f4bb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const Vt_ShapeData *</type>
        <definition>static const Vt_ShapeData* _GetShapeData</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetShapeData</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="697" column="1" bodyfile="pxr/base/vt/value.h" bodystart="697" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1aa5f9edded202dd56db7f86580078f450" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t _GetNumElements</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetNumElements</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="701" column="1" bodyfile="pxr/base/vt/value.h" bodystart="701" bodyend="703"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a6803fbb0ceb70c9e41a8bdc8b9e45ef1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _ProxyHoldsType</definition>
        <argsstring>(_Storage const &amp;storage, std::type_info const &amp;t)</argsstring>
        <name>_ProxyHoldsType</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <param>
          <type>std::type_info const &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="706" column="1" bodyfile="pxr/base/vt/value.h" bodystart="706" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1aa892d0f364858da552f72a44c923b6c3" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_tf_type" kindref="compound">TfType</ref></type>
        <definition>static TfType _GetProxiedType</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetProxiedType</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="711" column="1" bodyfile="pxr/base/vt/value.h" bodystart="711" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1a1a6f54e03b6fcdea4d359e1f062c8306" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::type_info const  &amp;</type>
        <definition>static std::type_info const&amp; _GetProxiedTypeid</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetProxiedTypeid</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="716" column="1" bodyfile="pxr/base/vt/value.h" bodystart="716" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1adb24ed6fd3d5c123d206aef211790f03" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void const  *</type>
        <definition>static void const* _GetProxiedObjPtr</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetProxiedObjPtr</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="721" column="1" bodyfile="pxr/base/vt/value.h" bodystart="721" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1af13cb6f9a0229b1de09e0567385ec7bd" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>static VtValue _GetProxiedAsVtValue</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_GetProxiedAsVtValue</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="726" column="1" bodyfile="pxr/base/vt/value.h" bodystart="726" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1ad892d65624f5b03a505c2205d74b8771" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Container &amp;</type>
        <definition>static Container&amp; _Container</definition>
        <argsstring>(_Storage &amp;storage)</argsstring>
        <name>_Container</name>
        <param>
          <type>_Storage &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="733" column="1" bodyfile="pxr/base/vt/value.h" bodystart="733" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="struct_vt_value_1_1___type_info_impl_1ae23baa3ec9df4b467163039b718bd37a" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Container const  &amp;</type>
        <definition>static Container const&amp; _Container</definition>
        <argsstring>(_Storage const &amp;storage)</argsstring>
        <name>_Container</name>
        <param>
          <type>_Storage const &amp;</type>
          <declname>storage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/vt/value.h" line="737" column="1" bodyfile="pxr/base/vt/value.h" bodystart="737" bodyend="740"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/vt/value.h" line="572" column="1" bodyfile="pxr/base/vt/value.h" bodystart="571" bodyend="741"/>
    <listofallmembers>
      <member refid="struct_vt_value_1_1___type_info_impl_1a72e944083f5de713e77db9850e8b2901" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_CanHash</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1ad892d65624f5b03a505c2205d74b8771" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_Container</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1ae23baa3ec9df4b467163039b718bd37a" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_Container</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1ab4f18e2d999f500ba7fa6e150d4e5c16" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_CopyInit</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1ac6aacb6862da33f8eec0051f07036c0b" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_Destroy</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a434c76f6756824f70306d20147fa0164" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_Equal</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1ab89d131d457c5e67f71a68ca2f91aa04" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_EqualPtr</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a05b5f063a186347b3df24b85c2680c74" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetElementTypeid</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1aa5f9edded202dd56db7f86580078f450" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetNumElements</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1af13cb6f9a0229b1de09e0567385ec7bd" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetProxiedAsVtValue</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1adb24ed6fd3d5c123d206aef211790f03" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetProxiedObjPtr</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1aa892d0f364858da552f72a44c923b6c3" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetProxiedType</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a1a6f54e03b6fcdea4d359e1f062c8306" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetProxiedTypeid</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1afafd2bddf687722e7f2c873aa4e8eee0" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetPyObj</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a45c88548c6892099ed67e4edfd46f4bb" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetShapeData</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a6c617e3d8567e51fffbf12d04e6bacb3" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_GetTypeid</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1aca8a0084108687f2b8055a64470bab85" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_Hash</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a9c91196eb00be045acdc3295718bd0b0" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_IsArrayValued</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a177c881e52c5eba5c5ffcbba97a8c500" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_MakeMutable</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a732827d430eb66d957e426a30dd30b4b" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_Move</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a6803fbb0ceb70c9e41a8bdc8b9e45ef1" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_ProxyHoldsType</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a48edbf440718293e657f9a97dd07cac7" prot="private" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_StreamOut</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a7c0f35e52f562b164172867e23984d9c" prot="protected" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_TypeInfo</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a68ac37bb62260815616ca2ad9af60fe4" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>_TypeInfoImpl</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a4f5558bc8e097ca67aa3eeb55e9df7ab" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>CanHash</name></member>
      <member refid="struct_vt_value_1_1___type_info_1aaa142918fbc5dc7afce9d842198eb726" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>CopyInit</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a39e7f2f97189d3f8bb347c68e622b8f7" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>CopyInitObj</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ab4a95a18c00829fd5ba8224427a1d0ea" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>Destroy</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ae12b50c143e227154f5bc5d575cd9c04" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>elementTypeInfo</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a7f287ee63cf25c6062d25a2e1d399503" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>Equal</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ada8ec2c3edf03bb4fd46dc9ec8cbc932" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>EqualPtr</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a59d1e750e3d6a196e344b8ae02b7011d" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetElementTypeid</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a9b2f4c1cbd3a40504eba9d0b7882764d" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetMutableObj</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a79c3239c2e7e20fe2accd606220b9d4e" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetNumElements</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a5a16b0f18b7a8e11d3841b12eb1e2a9a" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetObj</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ad3af6e8dc4d3d1b577deb3d7b9ff2ded" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetProxiedAsVtValue</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ab4e3c0b30c7ae03bc30e75f786d03b3b" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetProxiedObjPtr</name></member>
      <member refid="struct_vt_value_1_1___type_info_1aef099075add9a01ded066e2a6e9debfa" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetProxiedType</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ab7c25b478f95644aa50d7ae830fac251" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetProxiedTypeid</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a78746249c31eb94619119fd7133ef217" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetPyObj</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a3e3b4bf31fb80fc6ae3eba2ae4e4a5fb" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetShapeData</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a509740bce8856298bf6fed555436de81" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>GetTypeid</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a5151e47b4abbc48db6032940f2ebdb3e" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>Hash</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a09069fa49db42fb0c2f6e7bd3691ddaa" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>HasTrivialCopy</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a9986550257ee8995937f78e6624b0df3" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>isArray</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a30e93a7f8628d5fd073b64cfba92ff66" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>IsArrayValued</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a5ebc08f8cbb06257af16c149724386b2" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>isHashable</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a27421e87c9555736426477ca82a12bc0" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>IsLocal</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a92f59d016692c4f736c5f98eeb6b4cb7" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>IsProxy</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a615a08be1658ab26583c52dc57d5184a" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>isProxy</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a56090ab24dd9a1861253f4c83cb92eca" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>knownTypeIndex</name></member>
      <member refid="struct_vt_value_1_1___type_info_1aba36238130c19f4d16fd3cbd631b0033" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>MakeMutable</name></member>
      <member refid="struct_vt_value_1_1___type_info_1ac60db58206a6e2d44f649d2826dd7c34" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>Move</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a53ec981a057a556c4e248639abd6b021" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>ProxyHelper</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a2537a3a53f88489d871d0aeee0bbee7a" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>ProxyHoldsType</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a5c6c7646d87cd0eac7699769011c4d5d" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>StreamOut</name></member>
      <member refid="struct_vt_value_1_1___type_info_impl_1a06e80cad1fc71244129184bb6c5a0db2" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>This</name></member>
      <member refid="struct_vt_value_1_1___type_info_1a850d0a52a5a9215400d3f7e4d3b12025" prot="public" virt="non-virtual"><scope>VtValue::_TypeInfoImpl</scope><name>typeInfo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
