<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_st_ptex_texture_object" kind="class" language="C++" prot="public" final="yes">
    <compoundname>HdStPtexTextureObject</compoundname>
    <basecompoundref refid="class_hd_st_texture_object" prot="public" virt="non-virtual">HdStTextureObject</basecompoundref>
    <includes refid="ptex_texture_object_8h" local="no">ptexTextureObject.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1a1ea7131ca9be14627d30f68aa96c4488" prot="private" static="no" mutable="no">
        <type>HgiFormat</type>
        <definition>HgiFormat _format</definition>
        <argsstring></argsstring>
        <name>_format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="96" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1ab5f4bca80923f02e6ab4192e0f1b4e39" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec3i" kindref="compound">GfVec3i</ref></type>
        <definition>GfVec3i _texelDimensions</definition>
        <argsstring></argsstring>
        <name>_texelDimensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="97" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1ad48d8f3abf9ce703109fa44bf4ab7ac5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int _texelLayers</definition>
        <argsstring></argsstring>
        <name>_texelLayers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="98" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1a3047c0b8da180927ec819649808dd257" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _texelDataSize</definition>
        <argsstring></argsstring>
        <name>_texelDataSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="99" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1a23dc37c9d6a45c6ff6bfa06086b1c68a" prot="private" static="no" mutable="no">
        <type><ref refid="class_gf_vec2i" kindref="compound">GfVec2i</ref></type>
        <definition>GfVec2i _layoutDimensions</definition>
        <argsstring></argsstring>
        <name>_layoutDimensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="100" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1a48ea3d7d39d0bb8507831619097bde42" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _layoutDataSize</definition>
        <argsstring></argsstring>
        <name>_layoutDataSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="101" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1a2c4a1c22825c4752d9aa0bc8f23080e4" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; _texelData</definition>
        <argsstring></argsstring>
        <name>_texelData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="103" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1ab4488ef38d2f8b12afc722292aad60ee" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; uint8_t[]&gt;</type>
        <definition>std::unique_ptr&lt;uint8_t[]&gt; _layoutData</definition>
        <argsstring></argsstring>
        <name>_layoutData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="104" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1a437551e4529866b8e15b7502c3203f1c" prot="private" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle _texelTexture</definition>
        <argsstring></argsstring>
        <name>_texelTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="106" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_hd_st_ptex_texture_object_1acc93e5620b1a2c1784158952b1e239f3" prot="private" static="no" mutable="no">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle _layoutTexture</definition>
        <argsstring></argsstring>
        <name>_layoutTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="107" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1ab6cc588f225ebde2bcf594bbd285028d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API HdStPtexTextureObject</definition>
        <argsstring>(const HdStTextureIdentifier &amp;textureId, HdSt_TextureObjectRegistry *textureObjectRegistry)</argsstring>
        <name>HdStPtexTextureObject</name>
        <param>
          <type>const <ref refid="class_hd_st_texture_identifier" kindref="compound">HdStTextureIdentifier</ref> &amp;</type>
          <declname>textureId</declname>
        </param>
        <param>
          <type>HdSt_TextureObjectRegistry *</type>
          <declname>textureObjectRegistry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1ac7a5c987a26bb5831543df1be0a720d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HDST_API</type>
        <definition>HDST_API ~HdStPtexTextureObject</definition>
        <argsstring>() override</argsstring>
        <name>~HdStPtexTextureObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a20f850d7d689857d1f8799677fb39d11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle GetTexelTexture</definition>
        <argsstring>() const</argsstring>
        <name>GetTexelTexture</name>
        <briefdescription>
<para>Get the GPU texture handle for the texels. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="74" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a8143d5db583762ade65bc17a7954dac2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HgiTextureHandle</type>
        <definition>HgiTextureHandle GetLayoutTexture</definition>
        <argsstring>() const</argsstring>
        <name>GetLayoutTexture</name>
        <briefdescription>
<para>Get the GPU texture handle for the layout. </para>
        </briefdescription>
        <detaileddescription>
<para>Only valid after commit phase. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="80" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API bool</type>
        <definition>HDST_API bool IsValid</definition>
        <argsstring>() const override</argsstring>
        <name>IsValid</name>
        <reimplements refid="class_hd_st_texture_object_1a83d17ce2f1f540385d21e9f81b3dae76">IsValid</reimplements>
        <briefdescription>
<para>Is texture valid? Only correct after commit phase. </para>
        </briefdescription>
        <detaileddescription>
<para>E.g., no file at given file path. Consulted by clients to determine whether to use the fallback value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a719fe828133e23597e11ebc9b664529a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>HDST_API HdTextureType</type>
        <definition>HDST_API HdTextureType GetTextureType</definition>
        <argsstring>() const override</argsstring>
        <name>GetTextureType</name>
        <reimplements refid="class_hd_st_texture_object_1a78a9450bcebcd13da2e1b124fe241a2b">GetTextureType</reimplements>
        <briefdescription>
<para>Get texture type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="86" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a113afdb59ba5d85e64ff870aeae4a575" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _Load</definition>
        <argsstring>() override</argsstring>
        <name>_Load</name>
        <reimplements refid="class_hd_st_texture_object_1a53f612f5be05577bafd37e4ca630aba8">_Load</reimplements>
        <briefdescription>
<para>Load texture to CPU (thread-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>HDST_API void</type>
        <definition>HDST_API void _Commit</definition>
        <argsstring>() override</argsstring>
        <name>_Commit</name>
        <reimplements refid="class_hd_st_texture_object_1af9c7ea62423805492df6200fa37b0452">_Commit</reimplements>
        <briefdescription>
<para>Commit texture to GPU (not thread-safe) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="93" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_hd_st_ptex_texture_object_1a83e0bbd7abc1baa61131a677b3962d68" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _DestroyTextures</definition>
        <argsstring>()</argsstring>
        <name>_DestroyTextures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="109" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A Ptex texture. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3272">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
      <node id="3271">
        <label>HdStPtexTextureObject</label>
        <link refid="class_hd_st_ptex_texture_object"/>
        <childnode refid="3272" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3274">
        <label>HdStTextureObject</label>
        <link refid="class_hd_st_texture_object"/>
      </node>
      <node id="3273">
        <label>HdStPtexTextureObject</label>
        <link refid="class_hd_st_ptex_texture_object"/>
        <childnode refid="3274" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/ptexTextureObject.h" line="60" column="1" bodyfile="pxr/imaging/hdSt/ptexTextureObject.h" bodystart="59" bodyend="110"/>
    <listofallmembers>
      <member refid="class_hd_st_texture_object_1a4bb9e349d6ac5c6cb101c3b76c444909" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_AddToTotalTextureMemory</name></member>
      <member refid="class_hd_st_texture_object_1a498f50b8bbbe346da6e294b0551ae51f" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_AdjustTotalTextureMemory</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a4a0cebf86205ddd3c9b02f23b232e698" prot="protected" virt="virtual"><scope>HdStPtexTextureObject</scope><name>_Commit</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a83e0bbd7abc1baa61131a677b3962d68" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_DestroyTextures</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a1ea7131ca9be14627d30f68aa96c4488" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_format</name></member>
      <member refid="class_hd_st_texture_object_1a6ecfd8fb0c62f45e1a8978fb53a025f9" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_GetDebugName</name></member>
      <member refid="class_hd_st_texture_object_1a5a7b6bc152ae4b062a7aa5f10e7d1bab" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_GetHgi</name></member>
      <member refid="class_hd_st_texture_object_1a0328339184490ba78de07142381a31ce" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_GetPremultiplyAlpha</name></member>
      <member refid="class_hd_st_texture_object_1aecf3efc41bd50e8e4598620301ca7890" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_GetResourceRegistry</name></member>
      <member refid="class_hd_st_texture_object_1aab2a86741f445fd5c73d0707912e8d11" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_GetSourceColorSpace</name></member>
      <member refid="class_hd_st_ptex_texture_object_1ab4488ef38d2f8b12afc722292aad60ee" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_layoutData</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a48ea3d7d39d0bb8507831619097bde42" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_layoutDataSize</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a23dc37c9d6a45c6ff6bfa06086b1c68a" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_layoutDimensions</name></member>
      <member refid="class_hd_st_ptex_texture_object_1acc93e5620b1a2c1784158952b1e239f3" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_layoutTexture</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a113afdb59ba5d85e64ff870aeae4a575" prot="protected" virt="virtual"><scope>HdStPtexTextureObject</scope><name>_Load</name></member>
      <member refid="class_hd_st_texture_object_1a656982d9323adc3d53decc0dcc731c35" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_SubtractFromTotalTextureMemory</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a2c4a1c22825c4752d9aa0bc8f23080e4" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_texelData</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a3047c0b8da180927ec819649808dd257" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_texelDataSize</name></member>
      <member refid="class_hd_st_ptex_texture_object_1ab5f4bca80923f02e6ab4192e0f1b4e39" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_texelDimensions</name></member>
      <member refid="class_hd_st_ptex_texture_object_1ad48d8f3abf9ce703109fa44bf4ab7ac5" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_texelLayers</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a437551e4529866b8e15b7502c3203f1c" prot="private" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>_texelTexture</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a8143d5db583762ade65bc17a7954dac2" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>GetLayoutTexture</name></member>
      <member refid="class_hd_st_texture_object_1a1604cec087550d6968d8050060ef414f" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>GetTargetMemory</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a20f850d7d689857d1f8799677fb39d11" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>GetTexelTexture</name></member>
      <member refid="class_hd_st_texture_object_1a9b0c375568692c0b631a211b92fb3fbc" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>GetTextureIdentifier</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a719fe828133e23597e11ebc9b664529a" prot="public" virt="virtual"><scope>HdStPtexTextureObject</scope><name>GetTextureType</name></member>
      <member refid="class_hd_st_ptex_texture_object_1ab6cc588f225ebde2bcf594bbd285028d" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>HdStPtexTextureObject</name></member>
      <member refid="class_hd_st_texture_object_1a91c3c2ce5a3fe4bee791c2b2e539a436" prot="protected" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>HdStTextureObject</name></member>
      <member refid="class_hd_st_ptex_texture_object_1a2fc71a791d4a5815b15e7d6d827cd2a9" prot="public" virt="virtual"><scope>HdStPtexTextureObject</scope><name>IsValid</name></member>
      <member refid="class_hd_st_texture_object_1a6ded25aed3b249789c7d7ea438be2076" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>SetTargetMemory</name></member>
      <member refid="class_hd_st_ptex_texture_object_1ac7a5c987a26bb5831543df1be0a720d7" prot="public" virt="non-virtual"><scope>HdStPtexTextureObject</scope><name>~HdStPtexTextureObject</name></member>
      <member refid="class_hd_st_texture_object_1a17729686cf8e982e36553a33d4c1ee7c" prot="public" virt="virtual"><scope>HdStPtexTextureObject</scope><name>~HdStTextureObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
