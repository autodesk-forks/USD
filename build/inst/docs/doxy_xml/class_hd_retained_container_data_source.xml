<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_hd_retained_container_data_source" kind="class" language="C++" prot="public">
    <compoundname>HdRetainedContainerDataSource</compoundname>
    <basecompoundref refid="class_hd_container_data_source" prot="public" virt="non-virtual">HdContainerDataSource</basecompoundref>
    <includes refid="retained_data_source_8h" local="no">retainedDataSource.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_hd_retained_container_data_source_1ae2e059af5ed77a1dc026f69a228a9538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>HD_DECLARE_DATASOURCE_ABSTRACT</definition>
        <argsstring>(HdRetainedContainerDataSource)</argsstring>
        <name>HD_DECLARE_DATASOURCE_ABSTRACT</name>
        <param>
          <type><ref refid="class_hd_retained_container_data_source" kindref="compound">HdRetainedContainerDataSource</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_hd_retained_container_data_source_1af381b5f644705f80b59d581975c7615b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>()</argsstring>
        <name>New</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1ad371a860f6b46288ae43b22c0ee15f66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(size_t count, const TfToken *names, const HdDataSourceBaseHandle *values)</argsstring>
        <name>New</name>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> *</type>
          <declname>names</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle *</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1ac8b1fb652600b361830550d9ec56d2b3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(const TfToken &amp;name1, const HdDataSourceBaseHandle &amp;value1)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1a612c99bcd49a587f6432aa2ca0f68d32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(const TfToken &amp;name1, const HdDataSourceBaseHandle &amp;value1, const TfToken &amp;name2, const HdDataSourceBaseHandle &amp;value2)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1a990fff67d3d64bfd7fe244bb23515246" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(const TfToken &amp;name1, const HdDataSourceBaseHandle &amp;value1, const TfToken &amp;name2, const HdDataSourceBaseHandle &amp;value2, const TfToken &amp;name3, const HdDataSourceBaseHandle &amp;value3)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name3</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1a7a29d8755f8300667295e46047a30907" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(const TfToken &amp;name1, const HdDataSourceBaseHandle &amp;value1, const TfToken &amp;name2, const HdDataSourceBaseHandle &amp;value2, const TfToken &amp;name3, const HdDataSourceBaseHandle &amp;value3, const TfToken &amp;name4, const HdDataSourceBaseHandle &amp;value4)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name3</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value3</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name4</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="81" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1a29504cb779e6387397adde972afac734" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(const TfToken &amp;name1, const HdDataSourceBaseHandle &amp;value1, const TfToken &amp;name2, const HdDataSourceBaseHandle &amp;value2, const TfToken &amp;name3, const HdDataSourceBaseHandle &amp;value3, const TfToken &amp;name4, const HdDataSourceBaseHandle &amp;value4, const TfToken &amp;name5, const HdDataSourceBaseHandle &amp;value5)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name3</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value3</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name4</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value4</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name5</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_hd_retained_container_data_source_1a919a5e765d9bc153cd7097ba5d539eb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HD_API Handle</type>
        <definition>static HD_API Handle New</definition>
        <argsstring>(const TfToken &amp;name1, const HdDataSourceBaseHandle &amp;value1, const TfToken &amp;name2, const HdDataSourceBaseHandle &amp;value2, const TfToken &amp;name3, const HdDataSourceBaseHandle &amp;value3, const TfToken &amp;name4, const HdDataSourceBaseHandle &amp;value4, const TfToken &amp;name5, const HdDataSourceBaseHandle &amp;value5, const TfToken &amp;name6, const HdDataSourceBaseHandle &amp;value6)</argsstring>
        <name>New</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name1</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value1</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name2</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value2</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name3</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value3</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name4</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value4</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name5</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value5</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>name6</declname>
        </param>
        <param>
          <type>const HdDataSourceBaseHandle &amp;</type>
          <declname>value6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hd/retainedDataSource.h" line="105" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A retained container data source is a data source whose data are available locally, meaning that they are fully stored and contained within the data source. </para>
    </briefdescription>
    <detaileddescription>
<para>These are typically used for the kinds of operations that need to break away from the more live data sources (e.g., those that query a backing scene). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2643">
        <label>HdRetainedContainerDataSource</label>
        <link refid="class_hd_retained_container_data_source"/>
        <childnode refid="2644" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2644">
        <label>HdContainerDataSource</label>
        <link refid="class_hd_container_data_source"/>
        <childnode refid="2645" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2645">
        <label>HdDataSourceBase</label>
        <link refid="class_hd_data_source_base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2646">
        <label>HdRetainedContainerDataSource</label>
        <link refid="class_hd_retained_container_data_source"/>
        <childnode refid="2647" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2647">
        <label>HdContainerDataSource</label>
        <link refid="class_hd_container_data_source"/>
        <childnode refid="2648" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2648">
        <label>HdDataSourceBase</label>
        <link refid="class_hd_data_source_base"/>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hd/retainedDataSource.h" line="46" column="1" bodyfile="pxr/imaging/hd/retainedDataSource.h" bodystart="45" bodyend="118"/>
    <listofallmembers>
      <member refid="class_hd_container_data_source_1a5ea374e59f93fea74e4b151e2effd4e1" prot="public" virt="pure-virtual"><scope>HdRetainedContainerDataSource</scope><name>Get</name></member>
      <member refid="class_hd_container_data_source_1a62cf10c9f4c1a7aa203258f317111a90" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>Get</name></member>
      <member refid="class_hd_container_data_source_1a481689ac470be04d66c180d94c23ba22" prot="public" virt="pure-virtual"><scope>HdRetainedContainerDataSource</scope><name>GetNames</name></member>
      <member refid="class_hd_retained_container_data_source_1ae2e059af5ed77a1dc026f69a228a9538" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>HD_DECLARE_DATASOURCE_ABSTRACT</name></member>
      <member refid="class_hd_container_data_source_1a3e38478d7b68818db65481fed4abbb42" prot="public" virt="non-virtual" ambiguityscope="HdContainerDataSource::"><scope>HdRetainedContainerDataSource</scope><name>HD_DECLARE_DATASOURCE_ABSTRACT</name></member>
      <member refid="class_hd_retained_container_data_source_1af381b5f644705f80b59d581975c7615b" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1ad371a860f6b46288ae43b22c0ee15f66" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1ac8b1fb652600b361830550d9ec56d2b3" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1a612c99bcd49a587f6432aa2ca0f68d32" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1a990fff67d3d64bfd7fe244bb23515246" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1a7a29d8755f8300667295e46047a30907" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1a29504cb779e6387397adde972afac734" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_retained_container_data_source_1a919a5e765d9bc153cd7097ba5d539eb6" prot="public" virt="non-virtual"><scope>HdRetainedContainerDataSource</scope><name>New</name></member>
      <member refid="class_hd_data_source_base_1a0e9f38acfe7894ade111a24f131b37f8" prot="public" virt="pure-virtual"><scope>HdRetainedContainerDataSource</scope><name>~HdDataSourceBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
