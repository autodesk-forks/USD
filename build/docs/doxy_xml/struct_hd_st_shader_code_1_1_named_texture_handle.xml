<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_hd_st_shader_code_1_1_named_texture_handle" kind="struct" language="C++" prot="public">
    <compoundname>HdStShaderCode::NamedTextureHandle</compoundname>
    <includes refid="shader_code_8h" local="no">shaderCode.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_hd_st_shader_code_1_1_named_texture_handle_1adcb40c34d43dc0e96d1da2000f43449c" prot="public" static="no" mutable="no">
        <type><ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>TfToken name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>Name by which the texture will be accessed, i.e., the name of the accesor for thexture will be HdGet_name(...). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/shaderCode.h" line="146" column="1" bodyfile="pxr/imaging/hdSt/shaderCode.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_st_shader_code_1_1_named_texture_handle_1a147019382f7d05073d9f8ef5b61879a1" prot="public" static="no" mutable="no">
        <type>HdTextureType</type>
        <definition>HdTextureType type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Equal to handle-&gt;GetTextureObject()-&gt;GetTextureType(). </para>
        </briefdescription>
        <detaileddescription>
<para>Saved here for convenience (note that name and type completely determine the creation of the texture accesor HdGet_name(...)). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/shaderCode.h" line="152" column="1" bodyfile="pxr/imaging/hdSt/shaderCode.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_st_shader_code_1_1_named_texture_handle_1a487007589ea51227d32518151e057b83" prot="public" static="no" mutable="no">
        <type>HdStTextureHandleSharedPtr</type>
        <definition>HdStTextureHandleSharedPtr handle</definition>
        <argsstring></argsstring>
        <name>handle</name>
        <briefdescription>
<para>The texture. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/shaderCode.h" line="154" column="1" bodyfile="pxr/imaging/hdSt/shaderCode.h" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_hd_st_shader_code_1_1_named_texture_handle_1a2b07c49e916f21a26aa731f4db68785a" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hash</definition>
        <argsstring></argsstring>
        <name>hash</name>
        <briefdescription>
<para>A hash unique to the corresponding asset; used to split draw batches when not using bindless textures. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hdSt/shaderCode.h" line="158" column="1" bodyfile="pxr/imaging/hdSt/shaderCode.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Information necessary to bind textures and create accessor for the texture. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="4285">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
      <node id="4284">
        <label>HdStShaderCode::NamedTextureHandle</label>
        <link refid="struct_hd_st_shader_code_1_1_named_texture_handle"/>
        <childnode refid="4285" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/imaging/hdSt/shaderCode.h" line="142" column="1" bodyfile="pxr/imaging/hdSt/shaderCode.h" bodystart="142" bodyend="159"/>
    <listofallmembers>
      <member refid="struct_hd_st_shader_code_1_1_named_texture_handle_1a487007589ea51227d32518151e057b83" prot="public" virt="non-virtual"><scope>HdStShaderCode::NamedTextureHandle</scope><name>handle</name></member>
      <member refid="struct_hd_st_shader_code_1_1_named_texture_handle_1a2b07c49e916f21a26aa731f4db68785a" prot="public" virt="non-virtual"><scope>HdStShaderCode::NamedTextureHandle</scope><name>hash</name></member>
      <member refid="struct_hd_st_shader_code_1_1_named_texture_handle_1adcb40c34d43dc0e96d1da2000f43449c" prot="public" virt="non-virtual"><scope>HdStShaderCode::NamedTextureHandle</scope><name>name</name></member>
      <member refid="struct_hd_st_shader_code_1_1_named_texture_handle_1a147019382f7d05073d9f8ef5b61879a1" prot="public" virt="non-virtual"><scope>HdStShaderCode::NamedTextureHandle</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
