<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="graphics_pipeline_8h" kind="file" language="C++">
    <compoundname>graphicsPipeline.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="imaging_2hgi_2api_8h" local="yes">pxr/imaging/hgi/api.h</includes>
    <includes refid="attachment_desc_8h" local="yes">pxr/imaging/hgi/attachmentDesc.h</includes>
    <includes refid="hgi_2enums_8h" local="yes">pxr/imaging/hgi/enums.h</includes>
    <includes refid="handle_8h" local="yes">pxr/imaging/hgi/handle.h</includes>
    <includes refid="resource_bindings_8h" local="yes">pxr/imaging/hgi/resourceBindings.h</includes>
    <includes refid="shader_program_8h" local="yes">pxr/imaging/hgi/shaderProgram.h</includes>
    <includes refid="imaging_2hgi_2types_8h" local="yes">pxr/imaging/hgi/types.h</includes>
    <includes refid="vec2f_8h" local="yes">pxr/base/gf/vec2f.h</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="bounding_box_task_8h" local="yes">pxr/imaging/hdx/boundingBoxTask.h</includedby>
    <includedby refid="color_correction_task_8h" local="yes">pxr/imaging/hdx/colorCorrectionTask.h</includedby>
    <includedby refid="effects_shader_8h" local="yes">pxr/imaging/hdx/effectsShader.h</includedby>
    <includedby refid="fullscreen_shader_8h" local="yes">pxr/imaging/hdx/fullscreenShader.h</includedby>
    <includedby refid="visualize_aov_task_8h" local="yes">pxr/imaging/hdx/visualizeAovTask.h</includedby>
    <includedby refid="graphics_cmds_8h" local="yes">pxr/imaging/hgi/graphicsCmds.h</includedby>
    <includedby refid="hgi_8h" local="yes">pxr/imaging/hgi/hgi.h</includedby>
    <includedby refid="indirect_command_encoder_8h" local="yes">pxr/imaging/hgi/indirectCommandEncoder.h</includedby>
    <includedby refid="_l_2graphics_pipeline_8h" local="yes">pxr/imaging/hgiGL/graphicsPipeline.h</includedby>
    <includedby refid="ops_8h" local="yes">pxr/imaging/hgiGL/ops.h</includedby>
    <incdepgraph>
      <node id="151877">
        <label>locale</label>
      </node>
      <node id="151879">
        <label>stdarg.h</label>
      </node>
      <node id="151905">
        <label>pxr/base/gf/vec4d.h</label>
        <link refid="vec4d_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151904" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
        <childnode refid="151903" relation="include">
        </childnode>
        <childnode refid="151906" relation="include">
        </childnode>
        <childnode refid="151910" relation="include">
        </childnode>
      </node>
      <node id="151887">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="151888" relation="include">
        </childnode>
        <childnode refid="151861" relation="include">
        </childnode>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151858" relation="include">
        </childnode>
        <childnode refid="151889" relation="include">
        </childnode>
      </node>
      <node id="151857">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="151858" relation="include">
        </childnode>
      </node>
      <node id="151901">
        <label>limits</label>
      </node>
      <node id="151906">
        <label>pxr/base/gf/vec4h.h</label>
        <link refid="vec4h_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151904" relation="include">
        </childnode>
        <childnode refid="151907" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
        <childnode refid="151905" relation="include">
        </childnode>
        <childnode refid="151903" relation="include">
        </childnode>
        <childnode refid="151910" relation="include">
        </childnode>
      </node>
      <node id="151861">
        <label>cstdint</label>
      </node>
      <node id="151904">
        <label>pxr/base/gf/math.h</label>
        <link refid="gf_2math_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151886" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151883" relation="include">
        </childnode>
      </node>
      <node id="151862">
        <label>pxr/imaging/hgi/types.h</label>
        <link refid="imaging_2hgi_2types_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151863" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
        <childnode refid="151901" relation="include">
        </childnode>
        <childnode refid="151902" relation="include">
        </childnode>
      </node>
      <node id="151863">
        <label>pxr/base/gf/vec3i.h</label>
        <link refid="vec3i_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
      </node>
      <node id="151918">
        <label>pxr/imaging/hgi/shaderFunction.h</label>
        <link refid="shader_function_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151919" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
      </node>
      <node id="151876">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151871" relation="include">
        </childnode>
        <childnode refid="151870" relation="include">
        </childnode>
        <childnode refid="151858" relation="include">
        </childnode>
        <childnode refid="151877" relation="include">
        </childnode>
        <childnode refid="151878" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
      </node>
      <node id="151912">
        <label>stdint.h</label>
      </node>
      <node id="151902">
        <label>stdlib.h</label>
      </node>
      <node id="151914">
        <label>pxr/imaging/hgi/buffer.h</label>
        <link refid="buffer_8h_source"/>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151863" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
      </node>
      <node id="151923">
        <label>pxr/base/gf/vec2i.h</label>
        <link refid="vec2i_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
      </node>
      <node id="151890">
        <label>cmath</label>
      </node>
      <node id="151885">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151872" relation="include">
        </childnode>
        <childnode refid="151886" relation="include">
        </childnode>
        <childnode refid="151887" relation="include">
        </childnode>
        <childnode refid="151891" relation="include">
        </childnode>
        <childnode refid="151892" relation="include">
        </childnode>
      </node>
      <node id="151868">
        <label>string</label>
      </node>
      <node id="151870">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151857" relation="include">
        </childnode>
      </node>
      <node id="151894">
        <label>map</label>
      </node>
      <node id="151888">
        <label>cinttypes</label>
      </node>
      <node id="151855">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="151910">
        <label>pxr/base/gf/vec4i.h</label>
        <link refid="vec4i_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
      </node>
      <node id="151919">
        <label>pxr/imaging/hgi/shaderFunctionDesc.h</label>
        <link refid="shader_function_desc_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151875">
        <label>stddef.h</label>
      </node>
      <node id="151872">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151858" relation="include">
        </childnode>
      </node>
      <node id="151908">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
      </node>
      <node id="151907">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151908" relation="include">
        </childnode>
        <childnode refid="151909" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
      </node>
      <node id="151915">
        <label>pxr/imaging/hgi/sampler.h</label>
        <link refid="hgi_2sampler_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151880">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="151857" relation="include">
        </childnode>
      </node>
      <node id="151920">
        <label>pxr/base/gf/vec2f.h</label>
        <link refid="vec2f_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151904" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
        <childnode refid="151921" relation="include">
        </childnode>
        <childnode refid="151922" relation="include">
        </childnode>
        <childnode refid="151923" relation="include">
        </childnode>
      </node>
      <node id="151878">
        <label>any</label>
      </node>
      <node id="151889">
        <label>sys/types.h</label>
      </node>
      <node id="151911">
        <label>pxr/imaging/hgi/handle.h</label>
        <link refid="handle_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151912" relation="include">
        </childnode>
      </node>
      <node id="151903">
        <label>pxr/base/gf/vec4f.h</label>
        <link refid="vec4f_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151904" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
        <childnode refid="151905" relation="include">
        </childnode>
        <childnode refid="151906" relation="include">
        </childnode>
        <childnode refid="151910" relation="include">
        </childnode>
      </node>
      <node id="151886">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151858" relation="include">
        </childnode>
        <childnode refid="151887" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
      </node>
      <node id="151898">
        <label>vector</label>
      </node>
      <node id="151871">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="151857" relation="include">
        </childnode>
      </node>
      <node id="151917">
        <label>pxr/imaging/hgi/shaderProgram.h</label>
        <link refid="shader_program_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151918" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151909">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="151901" relation="include">
        </childnode>
        <childnode refid="151908" relation="include">
        </childnode>
      </node>
      <node id="151892">
        <label>utility</label>
      </node>
      <node id="151865">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151866" relation="include">
        </childnode>
        <childnode refid="151867" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
      </node>
      <node id="151859">
        <label>pxr/imaging/hgi/attachmentDesc.h</label>
        <link refid="attachment_desc_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151903" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151858">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="151873">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="151858" relation="include">
        </childnode>
      </node>
      <node id="151884">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151885" relation="include">
        </childnode>
        <childnode refid="151871" relation="include">
        </childnode>
        <childnode refid="151893" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151894" relation="include">
        </childnode>
        <childnode refid="151895" relation="include">
        </childnode>
        <childnode refid="151896" relation="include">
        </childnode>
        <childnode refid="151897" relation="include">
        </childnode>
        <childnode refid="151883" relation="include">
        </childnode>
        <childnode refid="151892" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151891">
        <label>math.h</label>
      </node>
      <node id="151900">
        <label>iosfwd</label>
      </node>
      <node id="151874">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151871" relation="include">
        </childnode>
        <childnode refid="151867" relation="include">
        </childnode>
        <childnode refid="151875" relation="include">
        </childnode>
      </node>
      <node id="151899">
        <label>cstddef</label>
      </node>
      <node id="151869">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151870" relation="include">
        </childnode>
        <childnode refid="151871" relation="include">
        </childnode>
        <childnode refid="151872" relation="include">
        </childnode>
        <childnode refid="151873" relation="include">
        </childnode>
        <childnode refid="151874" relation="include">
        </childnode>
        <childnode refid="151875" relation="include">
        </childnode>
      </node>
      <node id="151916">
        <label>pxr/imaging/hgi/texture.h</label>
        <link refid="hgi_2texture_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151863" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151860">
        <label>pxr/imaging/hgi/enums.h</label>
        <link refid="hgi_2enums_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151861" relation="include">
        </childnode>
      </node>
      <node id="151913">
        <label>pxr/imaging/hgi/resourceBindings.h</label>
        <link refid="resource_bindings_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151914" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151915" relation="include">
        </childnode>
        <childnode refid="151916" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
      <node id="151883">
        <label>type_traits</label>
      </node>
      <node id="151896">
        <label>set</label>
      </node>
      <node id="151866">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="151857" relation="include">
        </childnode>
      </node>
      <node id="151856">
        <label>pxr/imaging/hgi/api.h</label>
        <link refid="imaging_2hgi_2api_8h_source"/>
        <childnode refid="151857" relation="include">
        </childnode>
      </node>
      <node id="151921">
        <label>pxr/base/gf/vec2d.h</label>
        <link refid="vec2d_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151904" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
        <childnode refid="151920" relation="include">
        </childnode>
        <childnode refid="151922" relation="include">
        </childnode>
        <childnode refid="151923" relation="include">
        </childnode>
      </node>
      <node id="151867">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="151858" relation="include">
        </childnode>
      </node>
      <node id="151881">
        <label>pxr/base/gf/limits.h</label>
        <link refid="limits_8h"/>
      </node>
      <node id="151893">
        <label>cstring</label>
      </node>
      <node id="151882">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151883" relation="include">
        </childnode>
      </node>
      <node id="151922">
        <label>pxr/base/gf/vec2h.h</label>
        <link refid="vec2h_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151864" relation="include">
        </childnode>
        <childnode refid="151880" relation="include">
        </childnode>
        <childnode refid="151881" relation="include">
        </childnode>
        <childnode refid="151882" relation="include">
        </childnode>
        <childnode refid="151904" relation="include">
        </childnode>
        <childnode refid="151907" relation="include">
        </childnode>
        <childnode refid="151884" relation="include">
        </childnode>
        <childnode refid="151899" relation="include">
        </childnode>
        <childnode refid="151890" relation="include">
        </childnode>
        <childnode refid="151900" relation="include">
        </childnode>
        <childnode refid="151921" relation="include">
        </childnode>
        <childnode refid="151920" relation="include">
        </childnode>
        <childnode refid="151923" relation="include">
        </childnode>
      </node>
      <node id="151895">
        <label>memory</label>
      </node>
      <node id="151864">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151865" relation="include">
        </childnode>
        <childnode refid="151869" relation="include">
        </childnode>
        <childnode refid="151871" relation="include">
        </childnode>
        <childnode refid="151873" relation="include">
        </childnode>
        <childnode refid="151876" relation="include">
        </childnode>
        <childnode refid="151875" relation="include">
        </childnode>
        <childnode refid="151879" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
      </node>
      <node id="151897">
        <label>typeindex</label>
      </node>
      <node id="151854">
        <label>pxr/imaging/hgi/graphicsPipeline.h</label>
        <link refid="graphics_pipeline_8h"/>
        <childnode refid="151855" relation="include">
        </childnode>
        <childnode refid="151856" relation="include">
        </childnode>
        <childnode refid="151859" relation="include">
        </childnode>
        <childnode refid="151860" relation="include">
        </childnode>
        <childnode refid="151911" relation="include">
        </childnode>
        <childnode refid="151913" relation="include">
        </childnode>
        <childnode refid="151917" relation="include">
        </childnode>
        <childnode refid="151862" relation="include">
        </childnode>
        <childnode refid="151920" relation="include">
        </childnode>
        <childnode refid="151868" relation="include">
        </childnode>
        <childnode refid="151898" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="151944">
        <label>pxr/imaging/hdSt/simpleLightingShader.h</label>
        <link refid="simple_lighting_shader_8h_source"/>
      </node>
      <node id="151940">
        <label>pxr/imaging/hdSt/shaderCode.h</label>
        <link refid="shader_code_8h_source"/>
        <childnode refid="151941" relation="include">
        </childnode>
        <childnode refid="151942" relation="include">
        </childnode>
        <childnode refid="151945" relation="include">
        </childnode>
        <childnode refid="151946" relation="include">
        </childnode>
        <childnode refid="151947" relation="include">
        </childnode>
      </node>
      <node id="151925">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="151926" relation="include">
        </childnode>
      </node>
      <node id="151937">
        <label>pxr/imaging/hdSt/extCompGpuComputationResource.h</label>
        <link refid="ext_comp_gpu_computation_resource_8h_source"/>
        <childnode refid="151938" relation="include">
        </childnode>
      </node>
      <node id="151957">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="151933">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="151930">
        <label>pxr/imaging/hdx/visualizeAovTask.h</label>
        <link refid="visualize_aov_task_8h_source"/>
      </node>
      <node id="151947">
        <label>pxr/imaging/hdSt/textureBinder.h</label>
        <link refid="texture_binder_8h_source"/>
      </node>
      <node id="151952">
        <label>pxr/imaging/hgiGL/computeCmds.h</label>
        <link refid="_l_2compute_cmds_8h_source"/>
      </node>
      <node id="151958">
        <label>pxr/imaging/hgi/indirectCommandEncoder.h</label>
        <link refid="indirect_command_encoder_8h_source"/>
      </node>
      <node id="151927">
        <label>pxr/imaging/hdx/colorCorrectionTask.h</label>
        <link refid="color_correction_task_8h_source"/>
        <childnode refid="151926" relation="include">
        </childnode>
      </node>
      <node id="151941">
        <label>pxr/imaging/hdSt/geometricShader.h</label>
        <link refid="geometric_shader_8h_source"/>
      </node>
      <node id="151956">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="151957" relation="include">
        </childnode>
      </node>
      <node id="151943">
        <label>pxr/imaging/hdSt/fallbackLightingShader.h</label>
        <link refid="fallback_lighting_shader_8h_source"/>
      </node>
      <node id="151955">
        <label>pxr/imaging/hgiGL/graphicsCmds.h</label>
        <link refid="_l_2graphics_cmds_8h_source"/>
      </node>
      <node id="151949">
        <label>pxr/imaging/hgiGL/garbageCollector.h</label>
        <link refid="garbage_collector_8h_source"/>
        <childnode refid="151950" relation="include">
        </childnode>
      </node>
      <node id="151935">
        <label>pxr/imaging/hdSt/renderBuffer.h</label>
        <link refid="t_2render_buffer_8h_source"/>
      </node>
      <node id="151928">
        <label>pxr/imaging/hdx/effectsShader.h</label>
        <link refid="effects_shader_8h_source"/>
        <childnode refid="151929" relation="include">
        </childnode>
      </node>
      <node id="151926">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="151929">
        <label>pxr/imaging/hdx/fullscreenShader.h</label>
        <link refid="fullscreen_shader_8h_source"/>
      </node>
      <node id="151936">
        <label>pxr/imaging/hdSt/resourceRegistry.h</label>
        <link refid="t_2resource_registry_8h_source"/>
        <childnode refid="151937" relation="include">
        </childnode>
        <childnode refid="151939" relation="include">
        </childnode>
        <childnode refid="151940" relation="include">
        </childnode>
        <childnode refid="151948" relation="include">
        </childnode>
      </node>
      <node id="151959">
        <label>pxr/imaging/hgiGL/graphicsPipeline.h</label>
        <link refid="_l_2graphics_pipeline_8h_source"/>
      </node>
      <node id="151934">
        <label>pxr/imaging/hgi/hgi.h</label>
        <link refid="hgi_8h_source"/>
        <childnode refid="151935" relation="include">
        </childnode>
        <childnode refid="151936" relation="include">
        </childnode>
        <childnode refid="151949" relation="include">
        </childnode>
        <childnode refid="151950" relation="include">
        </childnode>
        <childnode refid="151956" relation="include">
        </childnode>
      </node>
      <node id="151942">
        <label>pxr/imaging/hdSt/lightingShader.h</label>
        <link refid="lighting_shader_8h_source"/>
        <childnode refid="151943" relation="include">
        </childnode>
        <childnode refid="151944" relation="include">
        </childnode>
      </node>
      <node id="151954">
        <label>pxr/imaging/hgiGL/ops.h</label>
        <link refid="ops_8h_source"/>
      </node>
      <node id="151938">
        <label>pxr/imaging/hdSt/extCompGpuComputation.h</label>
        <link refid="ext_comp_gpu_computation_8h_source"/>
      </node>
      <node id="151950">
        <label>pxr/imaging/hgiGL/hgi.h</label>
        <link refid="_l_2hgi_8h_source"/>
        <childnode refid="151951" relation="include">
        </childnode>
        <childnode refid="151952" relation="include">
        </childnode>
        <childnode refid="151953" relation="include">
        </childnode>
        <childnode refid="151955" relation="include">
        </childnode>
      </node>
      <node id="151931">
        <label>pxr/imaging/hgi/graphicsCmds.h</label>
        <link refid="graphics_cmds_8h_source"/>
        <childnode refid="151925" relation="include">
        </childnode>
        <childnode refid="151932" relation="include">
        </childnode>
        <childnode refid="151927" relation="include">
        </childnode>
        <childnode refid="151933" relation="include">
        </childnode>
        <childnode refid="151934" relation="include">
        </childnode>
        <childnode refid="151955" relation="include">
        </childnode>
      </node>
      <node id="151948">
        <label>pxr/imaging/hdSt/vboSimpleMemoryManager.h</label>
        <link refid="vbo_simple_memory_manager_8h_source"/>
      </node>
      <node id="151951">
        <label>pxr/imaging/hgiGL/blitCmds.h</label>
        <link refid="_l_2blit_cmds_8h_source"/>
      </node>
      <node id="151932">
        <label>pxr/imaging/hdx/colorChannelTask.h</label>
        <link refid="color_channel_task_8h_source"/>
      </node>
      <node id="151939">
        <label>pxr/imaging/hdSt/primUtils.h</label>
        <link refid="prim_utils_8h_source"/>
      </node>
      <node id="151953">
        <label>pxr/imaging/hgiGL/device.h</label>
        <link refid="device_8h_source"/>
        <childnode refid="151954" relation="include">
        </childnode>
      </node>
      <node id="151945">
        <label>pxr/imaging/hdSt/material.h</label>
        <link refid="imaging_2hd_st_2material_8h_source"/>
      </node>
      <node id="151946">
        <label>pxr/imaging/hdSt/renderPassShader.h</label>
        <link refid="render_pass_shader_8h_source"/>
      </node>
      <node id="151924">
        <label>pxr/imaging/hgi/graphicsPipeline.h</label>
        <link refid="graphics_pipeline_8h"/>
        <childnode refid="151925" relation="include">
        </childnode>
        <childnode refid="151927" relation="include">
        </childnode>
        <childnode refid="151928" relation="include">
        </childnode>
        <childnode refid="151929" relation="include">
        </childnode>
        <childnode refid="151930" relation="include">
        </childnode>
        <childnode refid="151931" relation="include">
        </childnode>
        <childnode refid="151934" relation="include">
        </childnode>
        <childnode refid="151958" relation="include">
        </childnode>
        <childnode refid="151959" relation="include">
        </childnode>
        <childnode refid="151954" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_hgi_vertex_attribute_desc" prot="public">HgiVertexAttributeDesc</innerclass>
    <innerclass refid="struct_hgi_vertex_buffer_desc" prot="public">HgiVertexBufferDesc</innerclass>
    <innerclass refid="struct_hgi_multi_sample_state" prot="public">HgiMultiSampleState</innerclass>
    <innerclass refid="struct_hgi_rasterization_state" prot="public">HgiRasterizationState</innerclass>
    <innerclass refid="struct_hgi_stencil_state" prot="public">HgiStencilState</innerclass>
    <innerclass refid="struct_hgi_depth_stencil_state" prot="public">HgiDepthStencilState</innerclass>
    <innerclass refid="struct_hgi_graphics_shader_constants_desc" prot="public">HgiGraphicsShaderConstantsDesc</innerclass>
    <innerclass refid="struct_hgi_tessellation_level" prot="public">HgiTessellationLevel</innerclass>
    <innerclass refid="struct_hgi_tessellation_state" prot="public">HgiTessellationState</innerclass>
    <innerclass refid="struct_hgi_graphics_pipeline_desc" prot="public">HgiGraphicsPipelineDesc</innerclass>
    <innerclass refid="class_hgi_graphics_pipeline" prot="public">HgiGraphicsPipeline</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="graphics_pipeline_8h_1a1b9abe3db3d4fe40bdbf26f3452e5619" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref> &gt;</type>
        <definition>using HgiVertexAttributeDescVector =  std::vector&lt;HgiVertexAttributeDesc&gt;</definition>
        <argsstring></argsstring>
        <name>HgiVertexAttributeDescVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="66" column="1" bodyfile="pxr/imaging/hgi/graphicsPipeline.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graphics_pipeline_8h_1a8b81789d9c83ba0096cf9d471bd0b56f" prot="public" static="no">
        <type>std::vector&lt; <ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref> &gt;</type>
        <definition>using HgiVertexBufferDescVector =  std::vector&lt;HgiVertexBufferDesc&gt;</definition>
        <argsstring></argsstring>
        <name>HgiVertexBufferDescVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="104" column="1" bodyfile="pxr/imaging/hgi/graphicsPipeline.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graphics_pipeline_8h_1a9b64612863b152ac2828f60daa81c583" prot="public" static="no">
        <type><ref refid="class_hgi_handle" kindref="compound">HgiHandle</ref>&lt; <ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref> &gt;</type>
        <definition>using HgiGraphicsPipelineHandle =  HgiHandle&lt;HgiGraphicsPipeline&gt;</definition>
        <argsstring></argsstring>
        <name>HgiGraphicsPipelineHandle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="481" column="1" bodyfile="pxr/imaging/hgi/graphicsPipeline.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graphics_pipeline_8h_1a52dd37e55d721f42e85a6ebc6d265ddf" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_hgi_handle" kindref="compound">HgiGraphicsPipelineHandle</ref> &gt;</type>
        <definition>using HgiGraphicsPipelineHandleVector =  std::vector&lt;HgiGraphicsPipelineHandle&gt;</definition>
        <argsstring></argsstring>
        <name>HgiGraphicsPipelineHandleVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="482" column="1" bodyfile="pxr/imaging/hgi/graphicsPipeline.h" bodystart="482" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="graphics_pipeline_8h_1af8a1a64ae834463a816c014708a35647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiVertexAttributeDesc &amp;lhs, const HgiVertexAttributeDesc &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a232e359091a09949ed4d1838b982d78a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiVertexAttributeDesc &amp;lhs, const HgiVertexAttributeDesc &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1af74dd4899539b0c337aaa866ad777716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiVertexBufferDesc &amp;lhs, const HgiVertexBufferDesc &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a15bf9289d3a13d9e10a73e9fb813a00d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiVertexBufferDesc &amp;lhs, const HgiVertexBufferDesc &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a1590438a2490efbfb320fdb721cb4b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiMultiSampleState &amp;lhs, const HgiMultiSampleState &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1aaab567304327f4c4f275a038a4143f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiMultiSampleState &amp;lhs, const HgiMultiSampleState &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a3342f2014021bd0cf6d4bb668170feb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiRasterizationState &amp;lhs, const HgiRasterizationState &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a7343218027c463f2ef47028fac278344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiRasterizationState &amp;lhs, const HgiRasterizationState &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1ae5520af0549688821c95d0846ef99cb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiStencilState &amp;lhs, const HgiStencilState &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a512d77fe23f2dd4bdc52ca5fc8a657a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiStencilState &amp;lhs, const HgiStencilState &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a917c9eb48fc8fe5b9a1394a5b9e0f412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiDepthStencilState &amp;lhs, const HgiDepthStencilState &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="305" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a6255a122c2866aaffde86f9f67e330ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiDepthStencilState &amp;lhs, const HgiDepthStencilState &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a50398cdadc128c8c0e5daec00521aaa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiGraphicsShaderConstantsDesc &amp;lhs, const HgiGraphicsShaderConstantsDesc &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a87441f1604130ada2646a7f920c944c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiGraphicsShaderConstantsDesc &amp;lhs, const HgiGraphicsShaderConstantsDesc &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1ad042230dbd8deb58b30bb3b6d6711104" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator==</definition>
        <argsstring>(const HgiGraphicsPipelineDesc &amp;lhs, const HgiGraphicsPipelineDesc &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="graphics_pipeline_8h_1a9a3e8ced7f295971df87f42b55c3171c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>HGI_API bool</type>
        <definition>HGI_API bool operator!=</definition>
        <argsstring>(const HgiGraphicsPipelineDesc &amp;lhs, const HgiGraphicsPipelineDesc &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/imaging/hgi/graphicsPipeline.h" line="444" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_IMAGING_HGI_GRAPHICS_PIPELINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_IMAGING_HGI_GRAPHICS_PIPELINE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/attachmentDesc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/enums.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/handle.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/resourceBindings.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/shaderProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/imaging/hgi/types.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vec2f_8h" kindref="compound">pxr/base/gf/vec2f.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="struct_hgi_vertex_attribute_desc" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiFormat<sp/>format;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>offset;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>shaderBindLocation;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HgiVertexAttributeDescVector<sp/>=<sp/>std::vector&lt;HgiVertexAttributeDesc&gt;;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_attribute_desc" kindref="compound">HgiVertexAttributeDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="struct_hgi_vertex_buffer_desc" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref></highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>bindingIndex;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiVertexAttributeDescVector<sp/>vertexAttributes;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiVertexBufferStepFunction<sp/>vertexStepFunction;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>vertexStride;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HgiVertexBufferDescVector<sp/>=<sp/>std::vector&lt;HgiVertexBufferDesc&gt;;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_vertex_buffer_desc" kindref="compound">HgiVertexBufferDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="struct_hgi_multi_sample_state" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>multiSampleEnable;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alphaToCoverageEnable;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>alphaToOneEnable;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiSampleCount<sp/>sampleCount;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">};</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="struct_hgi_rasterization_state" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref></highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiPolygonMode<sp/>polygonMode;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lineWidth;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiCullMode<sp/>cullMode;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiWinding<sp/>winding;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rasterizerEnabled;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthClampEnabled;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_gf_vec2f" kindref="compound">GfVec2f</ref><sp/>depthRange;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>conservativeRaster;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numClipDistances;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="comment">//.<sp/><sp/><sp/>The<sp/>reference<sp/>value<sp/>used<sp/>by<sp/>the<sp/>stencil<sp/>test<sp/>function.&lt;/li&gt;</highlight></codeline>
<codeline lineno="233" refid="struct_hgi_stencil_state" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref></highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiCompareFunction<sp/>compareFn;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>referenceValue;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiStencilOp<sp/>stencilFailOp;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiStencilOp<sp/>depthFailOp;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiStencilOp<sp/>depthStencilPassOp;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>readMask;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>writeMask;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">};</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="struct_hgi_depth_stencil_state" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref></highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthTestEnabled;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthWriteEnabled;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiCompareFunction<sp/>depthCompareFn;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>depthBiasEnabled;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>depthBiasConstantFactor;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>depthBiasSlopeFactor;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stencilTestEnabled;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref><sp/>stencilFront;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_stencil_state" kindref="compound">HgiStencilState</ref><sp/>stencilBack;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="struct_hgi_graphics_shader_constants_desc" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>byteSize;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiShaderStage<sp/>stageUsage;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HgiTessellationLevel</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiTessellationLevel();</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>innerTessLevel[2];</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>outerTessLevel[4];</highlight></codeline>
<codeline lineno="350"><highlight class="normal">};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="struct_hgi_tessellation_state" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_tessellation_state" kindref="compound">HgiTessellationState</ref></highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>PatchType<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Triangle,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Quad,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Isoline</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>TessFactorMode<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Constant,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TessControl,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TessVertex</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_tessellation_state" kindref="compound">HgiTessellationState</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>PatchType<sp/>patchType;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primitiveIndexSize;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>TessFactorMode<sp/>tessFactorMode<sp/>=<sp/>TessFactorMode::Constant;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiTessellationLevel<sp/>tessellationLevel;</highlight></codeline>
<codeline lineno="386"><highlight class="normal">};</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="struct_hgi_graphics_pipeline_desc" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref></highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref>();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>debugName;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiPrimitiveType<sp/>primitiveType;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hgi_handle" kindref="compound">HgiShaderProgramHandle</ref><sp/>shaderProgram;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_depth_stencil_state" kindref="compound">HgiDepthStencilState</ref><sp/>depthState;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_multi_sample_state" kindref="compound">HgiMultiSampleState</ref><sp/>multiSampleState;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_rasterization_state" kindref="compound">HgiRasterizationState</ref><sp/>rasterizationState;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiVertexBufferDescVector<sp/>vertexBuffers;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>HgiAttachmentDescVector<sp/>colorAttachmentDescs;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_attachment_desc" kindref="compound">HgiAttachmentDesc</ref><sp/>depthAttachmentDesc;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resolveAttachments;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_graphics_shader_constants_desc" kindref="compound">HgiGraphicsShaderConstantsDesc</ref><sp/>shaderConstantsDesc;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_tessellation_state" kindref="compound">HgiTessellationState</ref><sp/>tessellationState;</highlight></codeline>
<codeline lineno="436"><highlight class="normal">};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1aeba317199ea34ef54f81f62a5c9048e2" kindref="member">operator==</ref>(</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal">HGI_API</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info_1a12deadfc180832b6029a5c4042668801" kindref="member">operator!=</ref>(</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref>&amp;<sp/>lhs,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref>&amp;<sp/>rhs);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="class_hgi_graphics_pipeline" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref></highlight></codeline>
<codeline lineno="460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref>();</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="class_hgi_graphics_pipeline_1a6c43ed97121e1cc47a5c04fd9f8951f3" kindref="member">GetDescriptor</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>HGI_API</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref>(<ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>desc);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_hgi_graphics_pipeline_desc" kindref="compound">HgiGraphicsPipelineDesc</ref><sp/>_descriptor;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref>()<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref><sp/>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_hgi_graphics_pipeline" kindref="compound">HgiGraphicsPipeline</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">};</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_hgi_handle" kindref="compound">HgiGraphicsPipelineHandle</ref><sp/>=<sp/><ref refid="class_hgi_handle" kindref="compound">HgiHandle&lt;HgiGraphicsPipeline&gt;</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>HgiGraphicsPipelineHandleVector<sp/>=<sp/>std::vector&lt;HgiGraphicsPipelineHandle&gt;;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/imaging/hgi/graphicsPipeline.h"/>
  </compounddef>
</doxygen>
