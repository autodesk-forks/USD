<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator" kind="class" language="C++" prot="public">
    <compoundname>UsdNotice::ObjectsChanged::PathRange::iterator</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1ad155ec580d233f97859cd3ac78d63d69" prot="private" static="no">
        <type>_PathsToChangesMap::const_iterator</type>
        <definition>using _UnderlyingIterator =  _PathsToChangesMap::const_iterator</definition>
        <argsstring></argsstring>
        <name>_UnderlyingIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="188" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" static="no">
        <type>std::forward_iterator_tag</type>
        <definition>using iterator_category =  std::forward_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="190" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1ae5f43d3322693091a9792570e999b6b3" prot="public" static="no">
        <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
        <definition>using value_type =  const SdfPath&amp;</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="191" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aaa7c867ce8cef55ff2e7242ec4b33b44" prot="public" static="no">
        <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
        <definition>using reference =  const SdfPath&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="192" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a19d9f56256f1906b53fd2d39126d2a11" prot="public" static="no">
        <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> *</type>
        <definition>using pointer =  const SdfPath*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="193" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1ab7130795cb5be387c77b13083f26097d" prot="public" static="no">
        <type>typename _UnderlyingIterator::difference_type</type>
        <definition>using difference_type =  typename _UnderlyingIterator::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="194" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aad0391865edb470b96116306a65b701d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class PathRange</definition>
        <argsstring></argsstring>
        <name>PathRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="243" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a18d7bf413b6453bfeb0bbdb8c25fa9bd" prot="private" static="no" mutable="no">
        <type>_UnderlyingIterator</type>
        <definition>_UnderlyingIterator _underlyingIterator</definition>
        <argsstring></argsstring>
        <name>_underlyingIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="252" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a230cbb7a1d56ec8edb03f35e01525409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>()=default</argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">reference</ref></type>
        <definition>reference operator *</definition>
        <argsstring>() const</argsstring>
        <name>operator *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="198" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">pointer</ref></type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="199" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1af1b1c7856a59f34c7d3570f946a2ff00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator &amp;</type>
        <definition>iterator&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="201" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a538d230f8b52d2bc0950e26ce74ec239" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>iterator</type>
        <definition>iterator operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="206" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="206" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a63d0e3db2d00378d96905bff89bd9ea4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="212" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a1251251e13f9f43f150a6567e761b433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const iterator &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="216" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aa1e2666bb0ea4a1a646b96d17435d626" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref></type>
        <definition>USD_API TfTokenVector GetChangedFields</definition>
        <argsstring>() const</argsstring>
        <name>GetChangedFields</name>
        <briefdescription>
<para>Return the set of changed fields in layers that affected the object at the path specified by this iterator. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_usd_notice_1_1_objects_changed_1a635f91971271c3fead108b2288fb0781" kindref="member">UsdNotice::ObjectsChanged::GetChangedFields</ref> for more details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a5cb417edfd03616763e4b82f594f9f85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API bool</type>
        <definition>USD_API bool HasChangedFields</definition>
        <argsstring>() const</argsstring>
        <name>HasChangedFields</name>
        <briefdescription>
<para>Return true if the object at the path specified by this iterator has any changed fields, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ref refid="class_usd_notice_1_1_objects_changed_1a8c1cac8459f107fde54042a657aaf440" kindref="member">UsdNotice::ObjectsChanged::HasChangedFields</ref> for more details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a3fb6cce58e292ce41471b02c1d546907" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_UnderlyingIterator</type>
        <definition>_UnderlyingIterator GetBase</definition>
        <argsstring>() const</argsstring>
        <name>GetBase</name>
        <briefdescription>
<para>Returns the underlying iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="233" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a101b71b3372402201162478a9dd00b23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_UnderlyingIterator</type>
        <definition>_UnderlyingIterator base</definition>
        <argsstring>() const</argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000066"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use GetBase() instead. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="238" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="238" bodyend="240"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a520b0b2555e8b78bf1da518d87f16098" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>iterator</definition>
        <argsstring>(_UnderlyingIterator baseIter)</argsstring>
        <name>iterator</name>
        <param>
          <type>_UnderlyingIterator</type>
          <declname>baseIter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="245" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="245" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1afbda5def72ca573e3af2660546cb35f8" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_sdf_path" kindref="compound">reference</ref></type>
        <definition>reference dereference</definition>
        <argsstring>() const</argsstring>
        <name>dereference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/notice.h" line="248" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="248" bodyend="250"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/usd/usd/notice.h" line="187" column="1" bodyfile="pxr/usd/usd/notice.h" bodystart="187" bodyend="253"/>
    <listofallmembers>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1ad155ec580d233f97859cd3ac78d63d69" prot="private" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>_UnderlyingIterator</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a18d7bf413b6453bfeb0bbdb8c25fa9bd" prot="private" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>_underlyingIterator</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a101b71b3372402201162478a9dd00b23" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>base</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1afbda5def72ca573e3af2660546cb35f8" prot="private" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>dereference</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1ab7130795cb5be387c77b13083f26097d" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>difference_type</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a3fb6cce58e292ce41471b02c1d546907" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>GetBase</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aa1e2666bb0ea4a1a646b96d17435d626" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>GetChangedFields</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a5cb417edfd03616763e4b82f594f9f85" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>HasChangedFields</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a230cbb7a1d56ec8edb03f35e01525409" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>iterator</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a520b0b2555e8b78bf1da518d87f16098" prot="private" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>iterator</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a6b137a24d9328a60aef01d0f938cf0c3" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>iterator_category</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a5b18bb8c3a765334dd1e3bd2eb8374f3" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>operator *</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a1251251e13f9f43f150a6567e761b433" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>operator!=</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1af1b1c7856a59f34c7d3570f946a2ff00" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>operator++</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a538d230f8b52d2bc0950e26ce74ec239" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>operator++</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aef4e7d4e0fa56e9f7509c555f73d24d2" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>operator-&gt;</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a63d0e3db2d00378d96905bff89bd9ea4" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>operator==</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aad0391865edb470b96116306a65b701d" prot="private" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>PathRange</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1a19d9f56256f1906b53fd2d39126d2a11" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>pointer</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1aaa7c867ce8cef55ff2e7242ec4b33b44" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>reference</name></member>
      <member refid="class_usd_notice_1_1_objects_changed_1_1_path_range_1_1iterator_1ae5f43d3322693091a9792570e999b6b3" prot="public" virt="non-virtual"><scope>UsdNotice::ObjectsChanged::PathRange::iterator</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
