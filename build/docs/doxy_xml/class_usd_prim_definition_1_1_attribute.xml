<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_prim_definition_1_1_attribute" kind="class" language="C++" prot="public">
    <compoundname>UsdPrimDefinition::Attribute</compoundname>
    <basecompoundref refid="class_usd_prim_definition_1_1_property" prot="public" virt="non-virtual">UsdPrimDefinition::Property</basecompoundref>
    <includes refid="prim_definition_8h" local="no">primDefinition.h</includes>
      <sectiondef kind="user-defined">
      <header>Field Access Methods</header>
      <description><para>These methods help get values for additional fields defined on a attribute in a prim definition.</para>
<para>None of the data access methods check that the attribute is valid before trying to access the attribute. I.e. they all assume the attribute is already known to be valid when called.</para>
<para>Client code is on the hook for verifying the validity of the <ref refid="class_usd_prim_definition_1_1_attribute" kindref="compound">Attribute</ref> before calling any of these methods. The validity can be determined by converting the <ref refid="class_usd_prim_definition_1_1_attribute" kindref="compound">Attribute</ref> to bool. </para>
</description>
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1a81ff07cc76cab8a0efd51b8938b9a124" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_sdf_value_type_name" kindref="compound">SdfValueTypeName</ref></type>
        <definition>USD_API SdfValueTypeName GetTypeName</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeName</name>
        <briefdescription>
<para>Returns the value type name of this attribute in the prim definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="219" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1aade26aaa10cfba8bb0008e1f64513ab2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>USD_API TfToken GetTypeNameToken</definition>
        <argsstring>() const</argsstring>
        <name>GetTypeNameToken</name>
        <briefdescription>
<para>Returns the token value of the type name of this attribute in the prim definition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1ab79fa0787facb9249fbc9ccb37c9aba0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool GetFallbackValue</definition>
        <argsstring>(T *value) const</argsstring>
        <name>GetFallbackValue</name>
        <param>
          <type>T *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Retrieves the fallback value of type <computeroutput>T</computeroutput> for this attribute and stores it in <computeroutput>value</computeroutput> if possible. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this attribute has a fallback value defined with the expected type. Returns false otherwise. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="232" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="653" bodyend="656"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1a6d0dc5eef2065ed488dc006f4c752c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Attribute</definition>
        <argsstring>()=default</argsstring>
        <name>Attribute</name>
        <briefdescription>
<para>Default constructor returns an invalid attribute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1a0229fa903093c289412536191a02f252" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API Attribute</definition>
        <argsstring>(const Property &amp;property)</argsstring>
        <name>Attribute</name>
        <param>
          <type>const <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> &amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Copy constructor from a <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> to allow implicit conversion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1a5aa0508f1140f187fef17efa5a41bd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USD_API</type>
        <definition>USD_API Attribute</definition>
        <argsstring>(Property &amp;&amp;property)</argsstring>
        <name>Attribute</name>
        <param>
          <type><ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> &amp;&amp;</type>
          <declname>property</declname>
        </param>
        <briefdescription>
<para>Move constructor from a <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> to allow implicit conversion. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_prim_definition_1_1_attribute_1a67b76affb3b5d35fa419ac234144038b" prot="public" static="no" const="yes" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>operator bool</definition>
        <argsstring>() const</argsstring>
        <name>operator bool</name>
        <briefdescription>
<para>Conversion to bool returns true if this represents a valid property in the prim definition that is an attribute, and false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usd/primDefinition.h" line="198" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="198" bodyend="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Accessor to a attribute&apos;s definition in the prim definition. </para>
    </briefdescription>
    <detaileddescription>
<para>These are returned by calls to <ref refid="class_usd_prim_definition_1a25e0cc7d610b8a2e030e675eb5d46b3e" kindref="member">UsdPrimDefinition::GetAttributeDefinition</ref> and can be freely converted to from a <ref refid="class_usd_prim_definition_1_1_property" kindref="compound">Property</ref> accessor. These can be used to check that a property exists and is an attribute (via conversion to bool) and to get attribute relevant field values that are defined for a property in the prim definition.</para>
<para>This class is just a thin wrapper around the property representation in the <ref refid="class_usd_prim_definition" kindref="compound">UsdPrimDefinition</ref> that creates it and cannot be stored or accessed beyond the lifetime of the prim definition itself. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="782">
        <label>Property</label>
        <link refid="class_usd_prim_definition_1_1_property"/>
      </node>
      <node id="781">
        <label>UsdPrimDefinition::Attribute</label>
        <link refid="class_usd_prim_definition_1_1_attribute"/>
        <childnode refid="782" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="784">
        <label>Property</label>
        <link refid="class_usd_prim_definition_1_1_property"/>
        <childnode refid="785" relation="usage">
          <edgelabel>_name</edgelabel>
        </childnode>
      </node>
      <node id="783">
        <label>UsdPrimDefinition::Attribute</label>
        <link refid="class_usd_prim_definition_1_1_attribute"/>
        <childnode refid="784" relation="public-inheritance">
        </childnode>
      </node>
      <node id="785">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usd/primDefinition.h" line="183" column="1" bodyfile="pxr/usd/usd/primDefinition.h" bodystart="183" bodyend="235"/>
    <listofallmembers>
      <member refid="class_usd_prim_definition_1_1_property_1af95bdd53be947597dfd2d3e187bfe9e8" prot="protected" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>_layerAndPath</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a073299b165fbc77310a8ada4902f85f8" prot="protected" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>_name</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1a6d0dc5eef2065ed488dc006f4c752c05" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>Attribute</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1a0229fa903093c289412536191a02f252" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>Attribute</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1a5aa0508f1140f187fef17efa5a41bd4e" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>Attribute</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1afbeb96db494ea5fa795d937e532083c9" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetDocumentation</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1ab79fa0787facb9249fbc9ccb37c9aba0" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetFallbackValue</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1ad2d76f736733f3ad51aa1ea1df6f4d44" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetMetadata</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1aba47c41ec8cc536290c04e219f12589c" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetMetadataByDictKey</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1aa2cb4f332d21ee60d8f5853c186e3e96" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetName</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a56b16e5fef03cb6c94881c6a93124f44" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetSpecType</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1a81ff07cc76cab8a0efd51b8938b9a124" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetTypeName</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1aade26aaa10cfba8bb0008e1f64513ab2" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetTypeNameToken</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a79655ab3c82828093c685a1582d5e4bc" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>GetVariability</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1acf1d0cd52006d2c61c7bb36e05583dfb" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>IsAttribute</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a6a5d0db739ceeee2dc73105b79149e96" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>IsRelationship</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1ae080ba93a1ddac47fea4b346d89e7f3c" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>ListMetadataFields</name></member>
      <member refid="class_usd_prim_definition_1_1_attribute_1a67b76affb3b5d35fa419ac234144038b" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>operator bool</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a52297e4f290e1f6d1341e2d057690f58" prot="public" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>Property</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a09d4e515c2fe6deee8b1127cec569588" prot="protected" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>Property</name></member>
      <member refid="class_usd_prim_definition_1_1_property_1a979304085846ec2a4c19e4a888a60a29" prot="protected" virt="non-virtual"><scope>UsdPrimDefinition::Attribute</scope><name>Property</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
