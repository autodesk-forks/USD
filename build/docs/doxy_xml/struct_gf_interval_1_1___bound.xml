<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_gf_interval_1_1___bound" kind="struct" language="C++" prot="private">
    <compoundname>GfInterval::_Bound</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_gf_interval_1_1___bound_1aee90379adb0307effb138f4871edbc5c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="352" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_gf_interval_1_1___bound_1a624c24d3973e790d23212b57f13e894b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool closed</definition>
        <argsstring></argsstring>
        <name>closed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="355" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_gf_interval_1_1___bound_1a09b405f7f1303b972e5fa9fb140fdfb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>_Bound</definition>
        <argsstring>(double val, bool isClosed)</argsstring>
        <name>_Bound</name>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isClosed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="357" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="357" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="struct_gf_interval_1_1___bound_1ad70cb3904849353e24be89131825900c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const _Bound &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const _Bound &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="369" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="369" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="struct_gf_interval_1_1___bound_1a4513f15174e32ae4f7f706447ab68cf0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const _Bound &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const _Bound &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="373" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="373" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="struct_gf_interval_1_1___bound_1a19c899836494b61a591d386a84c13b8c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const _Bound &amp;rhs) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const _Bound &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="377" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="struct_gf_interval_1_1___bound_1a105a73b09bc31137b8e24b0137ef7b00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>_Bound &amp;</type>
        <definition>_Bound&amp; operator=</definition>
        <argsstring>(const _Bound &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const _Bound &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="381" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="381" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="struct_gf_interval_1_1___bound_1aee3ea12e525d4911f6a33f125a3b56ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>_Bound</type>
        <definition>_Bound operator *</definition>
        <argsstring>(const _Bound &amp;rhs) const</argsstring>
        <name>operator *</name>
        <param>
          <type>const _Bound &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="386" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="386" bodyend="388"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="struct_gf_interval_1_1___bound_1ab7681ec3cbb09e228f50cea0490d53be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend size_t</type>
        <definition>size_t hash_value</definition>
        <argsstring>(const _Bound &amp;b)</argsstring>
        <name>hash_value</name>
        <param>
          <type>const _Bound &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/gf/interval.h" line="389" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="389" bodyend="391"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="pxr/base/gf/interval.h" line="350" column="1" bodyfile="pxr/base/gf/interval.h" bodystart="350" bodyend="392"/>
    <listofallmembers>
      <member refid="struct_gf_interval_1_1___bound_1a09b405f7f1303b972e5fa9fb140fdfb0" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>_Bound</name></member>
      <member refid="struct_gf_interval_1_1___bound_1a624c24d3973e790d23212b57f13e894b" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>closed</name></member>
      <member refid="struct_gf_interval_1_1___bound_1ab7681ec3cbb09e228f50cea0490d53be" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>hash_value</name></member>
      <member refid="struct_gf_interval_1_1___bound_1aee3ea12e525d4911f6a33f125a3b56ac" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>operator *</name></member>
      <member refid="struct_gf_interval_1_1___bound_1a4513f15174e32ae4f7f706447ab68cf0" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>operator!=</name></member>
      <member refid="struct_gf_interval_1_1___bound_1a19c899836494b61a591d386a84c13b8c" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>operator&lt;</name></member>
      <member refid="struct_gf_interval_1_1___bound_1a105a73b09bc31137b8e24b0137ef7b00" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>operator=</name></member>
      <member refid="struct_gf_interval_1_1___bound_1ad70cb3904849353e24be89131825900c" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>operator==</name></member>
      <member refid="struct_gf_interval_1_1___bound_1aee90379adb0307effb138f4871edbc5c" prot="public" virt="non-virtual"><scope>GfInterval::_Bound</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
