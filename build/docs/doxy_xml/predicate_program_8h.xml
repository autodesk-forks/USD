<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="predicate_program_8h" kind="file" language="C++">
    <compoundname>predicateProgram.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="usd_2sdf_2api_8h" local="yes">pxr/usd/sdf/api.h</includes>
    <includes refid="base_2tf_2diagnostic_8h" local="yes">pxr/base/tf/diagnostic.h</includes>
    <includes refid="function_traits_8h" local="yes">pxr/base/tf/functionTraits.h</includes>
    <includes refid="vt_2value_8h" local="yes">pxr/base/vt/value.h</includes>
    <includes refid="predicate_expression_8h" local="yes">pxr/usd/sdf/predicateExpression.h</includes>
    <includes refid="predicate_library_8h" local="yes">pxr/usd/sdf/predicateLibrary.h</includes>
    <includes local="yes">pxr/usd/sdf/invoke.hpp</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="path_expression_eval_8h" local="yes">pxr/usd/sdf/pathExpressionEval.h</includedby>
    <incdepgraph>
      <node id="182790">
        <label>list</label>
      </node>
      <node id="182747">
        <label>locale</label>
      </node>
      <node id="182798">
        <label>atomic</label>
      </node>
      <node id="182749">
        <label>stdarg.h</label>
      </node>
      <node id="182775">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="182776" relation="include">
        </childnode>
        <childnode refid="182771" relation="include">
        </childnode>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182733" relation="include">
        </childnode>
        <childnode refid="182777" relation="include">
        </childnode>
      </node>
      <node id="182794">
        <label>functional</label>
      </node>
      <node id="182732">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="182733" relation="include">
        </childnode>
      </node>
      <node id="182820">
        <label>pxr/usd/sdf/predicateLibrary.h</label>
        <link refid="predicate_library_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182731" relation="include">
        </childnode>
        <childnode refid="182734" relation="include">
        </childnode>
        <childnode refid="182750" relation="include">
        </childnode>
        <childnode refid="182821" relation="include">
        </childnode>
        <childnode refid="182755" relation="include">
        </childnode>
        <childnode refid="182819" relation="include">
        </childnode>
        <childnode refid="182834" relation="include">
        </childnode>
        <childnode refid="182822" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182811">
        <label>limits</label>
      </node>
      <node id="182760">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="182818">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="182827">
        <label>iterator</label>
      </node>
      <node id="182771">
        <label>cstdint</label>
      </node>
      <node id="182823">
        <label>robin_hash.h</label>
        <link refid="robin__hash_8h_source"/>
        <childnode refid="182824" relation="include">
        </childnode>
        <childnode refid="182825" relation="include">
        </childnode>
        <childnode refid="182782" relation="include">
        </childnode>
        <childnode refid="182752" relation="include">
        </childnode>
        <childnode refid="182771" relation="include">
        </childnode>
        <childnode refid="182826" relation="include">
        </childnode>
        <childnode refid="182827" relation="include">
        </childnode>
        <childnode refid="182811" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182828" relation="include">
        </childnode>
        <childnode refid="182753" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
        <childnode refid="182829" relation="include">
        </childnode>
        <childnode refid="182730" relation="include">
        </childnode>
      </node>
      <node id="182746">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182740" relation="include">
        </childnode>
        <childnode refid="182733" relation="include">
        </childnode>
        <childnode refid="182747" relation="include">
        </childnode>
        <childnode refid="182748" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
      </node>
      <node id="182757">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="182733" relation="include">
        </childnode>
      </node>
      <node id="182782">
        <label>cmath</label>
      </node>
      <node id="182825">
        <label>cassert</label>
      </node>
      <node id="182780">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182742" relation="include">
        </childnode>
        <childnode refid="182781" relation="include">
        </childnode>
        <childnode refid="182775" relation="include">
        </childnode>
        <childnode refid="182783" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
      </node>
      <node id="182828">
        <label>stdexcept</label>
      </node>
      <node id="182770">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182757" relation="include">
        </childnode>
        <childnode refid="182771" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
      </node>
      <node id="182789">
        <label>cstdarg</label>
      </node>
      <node id="182738">
        <label>string</label>
      </node>
      <node id="182803">
        <label>pxr/base/tf/functionRef.h</label>
        <link refid="function_ref_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
      </node>
      <node id="182740">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182732" relation="include">
        </childnode>
      </node>
      <node id="182785">
        <label>map</label>
      </node>
      <node id="182776">
        <label>cinttypes</label>
      </node>
      <node id="182730">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="182815">
        <label>unordered_set</label>
      </node>
      <node id="182796">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="182797" relation="include">
        </childnode>
      </node>
      <node id="182766">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182736" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
        <childnode refid="182768" relation="include">
        </childnode>
      </node>
      <node id="182800">
        <label>pxr/base/vt/api.h</label>
        <link refid="base_2vt_2api_8h_source"/>
        <childnode refid="182732" relation="include">
        </childnode>
      </node>
      <node id="182751">
        <label>pxr/base/tf/meta.h</label>
        <link refid="meta_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182752" relation="include">
        </childnode>
        <childnode refid="182753" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
      <node id="182826">
        <label>exception</label>
      </node>
      <node id="182731">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="182732" relation="include">
        </childnode>
      </node>
      <node id="182745">
        <label>stddef.h</label>
      </node>
      <node id="182742">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182733" relation="include">
        </childnode>
      </node>
      <node id="182834">
        <label>pxr/usd/sdf/invoke.hpp</label>
      </node>
      <node id="182788">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="182733" relation="include">
        </childnode>
      </node>
      <node id="182773">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
      </node>
      <node id="182808">
        <label>pxr/base/gf/ilmbase_half.h</label>
        <link refid="ilmbase__half_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182809" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
      </node>
      <node id="182807">
        <label>pxr/base/gf/half.h</label>
        <link refid="half_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182808" relation="include">
        </childnode>
        <childnode refid="182810" relation="include">
        </childnode>
        <childnode refid="182812" relation="include">
        </childnode>
      </node>
      <node id="182809">
        <label>pxr/base/gf/api.h</label>
        <link refid="base_2gf_2api_8h_source"/>
        <childnode refid="182732" relation="include">
        </childnode>
      </node>
      <node id="182758">
        <label>pxr/base/tf/pySafePython.h</label>
        <link refid="py_safe_python_8h"/>
        <childnode refid="182757" relation="include">
        </childnode>
        <childnode refid="182747" relation="include">
        </childnode>
        <childnode refid="182759" relation="include">
        </childnode>
      </node>
      <node id="182832">
        <label>ratio</label>
      </node>
      <node id="182750">
        <label>pxr/base/tf/functionTraits.h</label>
        <link refid="function_traits_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182751" relation="include">
        </childnode>
        <childnode refid="182752" relation="include">
        </childnode>
        <childnode refid="182753" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
      <node id="182748">
        <label>any</label>
      </node>
      <node id="182777">
        <label>sys/types.h</label>
      </node>
      <node id="182821">
        <label>pxr/base/tf/pxrTslRobinMap/robin_map.h</label>
        <link refid="robin__map_8h_source"/>
        <childnode refid="182752" relation="include">
        </childnode>
        <childnode refid="182794" relation="include">
        </childnode>
        <childnode refid="182822" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
        <childnode refid="182823" relation="include">
        </childnode>
        <childnode refid="182730" relation="include">
        </childnode>
      </node>
      <node id="182778">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182733" relation="include">
        </childnode>
        <childnode refid="182766" relation="include">
        </childnode>
        <childnode refid="182779" relation="include">
        </childnode>
        <childnode refid="182788" relation="include">
        </childnode>
        <childnode refid="182773" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182767">
        <label>typeinfo</label>
      </node>
      <node id="182762">
        <label>boost/python/object_operators.hpp</label>
      </node>
      <node id="182761">
        <label>boost/python/object_fwd.hpp</label>
      </node>
      <node id="182753">
        <label>tuple</label>
      </node>
      <node id="182813">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182739" relation="include">
        </childnode>
        <childnode refid="182779" relation="include">
        </childnode>
        <childnode refid="182814" relation="include">
        </childnode>
        <childnode refid="182770" relation="include">
        </childnode>
        <childnode refid="182798" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
        <childnode refid="182786" relation="include">
        </childnode>
      </node>
      <node id="182797">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182798" relation="include">
        </childnode>
        <childnode refid="182799" relation="include">
        </childnode>
        <childnode refid="182771" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182781">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182733" relation="include">
        </childnode>
        <childnode refid="182775" relation="include">
        </childnode>
        <childnode refid="182782" relation="include">
        </childnode>
      </node>
      <node id="182787">
        <label>vector</label>
      </node>
      <node id="182801">
        <label>pxr/base/vt/hash.h</label>
        <link refid="vt_2hash_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182800" relation="include">
        </childnode>
        <childnode refid="182779" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
      </node>
      <node id="182741">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="182732" relation="include">
        </childnode>
      </node>
      <node id="182765">
        <label>pxr/base/tf/pyLock.h</label>
        <link refid="py_lock_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182758" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
      </node>
      <node id="182810">
        <label>pxr/base/gf/ilmbase_halfLimits.h</label>
        <link refid="ilmbase__half_limits_8h_source"/>
        <childnode refid="182811" relation="include">
        </childnode>
        <childnode refid="182808" relation="include">
        </childnode>
      </node>
      <node id="182772">
        <label>utility</label>
      </node>
      <node id="182830">
        <label>array</label>
      </node>
      <node id="182791">
        <label>sstream</label>
      </node>
      <node id="182735">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182736" relation="include">
        </childnode>
        <childnode refid="182737" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
      </node>
      <node id="182733">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="182804">
        <label>pxr/base/vt/traits.h</label>
        <link refid="vt_2traits_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182800" relation="include">
        </childnode>
        <childnode refid="182788" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
      <node id="182829">
        <label>robin_growth_policy.h</label>
        <link refid="robin__growth__policy_8h_source"/>
        <childnode refid="182824" relation="include">
        </childnode>
        <childnode refid="182830" relation="include">
        </childnode>
        <childnode refid="182831" relation="include">
        </childnode>
        <childnode refid="182782" relation="include">
        </childnode>
        <childnode refid="182752" relation="include">
        </childnode>
        <childnode refid="182771" relation="include">
        </childnode>
        <childnode refid="182827" relation="include">
        </childnode>
        <childnode refid="182811" relation="include">
        </childnode>
        <childnode refid="182832" relation="include">
        </childnode>
        <childnode refid="182828" relation="include">
        </childnode>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182833" relation="include">
        </childnode>
      </node>
      <node id="182743">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="182733" relation="include">
        </childnode>
      </node>
      <node id="182779">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182780" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182784" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182785" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182786" relation="include">
        </childnode>
        <childnode refid="182768" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182783">
        <label>math.h</label>
      </node>
      <node id="182774">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182740" relation="include">
        </childnode>
        <childnode refid="182743" relation="include">
        </childnode>
        <childnode refid="182775" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182778" relation="include">
        </childnode>
        <childnode refid="182789" relation="include">
        </childnode>
        <childnode refid="182784" relation="include">
        </childnode>
        <childnode refid="182790" relation="include">
        </childnode>
        <childnode refid="182786" relation="include">
        </childnode>
        <childnode refid="182791" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182763">
        <label>iosfwd</label>
      </node>
      <node id="182799">
        <label>cstdlib</label>
      </node>
      <node id="182744">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182737" relation="include">
        </childnode>
        <childnode refid="182745" relation="include">
        </childnode>
      </node>
      <node id="182792">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182793" relation="include">
        </childnode>
        <childnode refid="182795" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182786" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
        <childnode refid="182796" relation="include">
        </childnode>
      </node>
      <node id="182759">
        <label>boost/python/detail/wrap_python.hpp</label>
      </node>
      <node id="182833">
        <label>iostream</label>
      </node>
      <node id="182729">
        <label>pxr/usd/sdf/predicateProgram.h</label>
        <link refid="predicate_program_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182731" relation="include">
        </childnode>
        <childnode refid="182734" relation="include">
        </childnode>
        <childnode refid="182750" relation="include">
        </childnode>
        <childnode refid="182755" relation="include">
        </childnode>
        <childnode refid="182819" relation="include">
        </childnode>
        <childnode refid="182820" relation="include">
        </childnode>
        <childnode refid="182834" relation="include">
        </childnode>
        <childnode refid="182822" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182805">
        <label>pxr/base/vt/types.h</label>
        <link refid="base_2vt_2types_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182800" relation="include">
        </childnode>
        <childnode refid="182804" relation="include">
        </childnode>
        <childnode refid="182775" relation="include">
        </childnode>
        <childnode refid="182806" relation="include">
        </childnode>
        <childnode refid="182807" relation="include">
        </childnode>
        <childnode refid="182788" relation="include">
        </childnode>
        <childnode refid="182813" relation="include">
        </childnode>
        <childnode refid="182816" relation="include">
        </childnode>
        <childnode refid="182817" relation="include">
        </childnode>
        <childnode refid="182752" relation="include">
        </childnode>
        <childnode refid="182784" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
      </node>
      <node id="182752">
        <label>cstddef</label>
      </node>
      <node id="182806">
        <label>pxr/base/gf/declare.h</label>
        <link refid="base_2gf_2declare_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
      </node>
      <node id="182795">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
      </node>
      <node id="182831">
        <label>climits</label>
      </node>
      <node id="182819">
        <label>pxr/usd/sdf/predicateExpression.h</label>
        <link refid="predicate_expression_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182731" relation="include">
        </childnode>
        <childnode refid="182779" relation="include">
        </childnode>
        <childnode refid="182755" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
        <childnode refid="182753" relation="include">
        </childnode>
        <childnode refid="182772" relation="include">
        </childnode>
        <childnode refid="182787" relation="include">
        </childnode>
      </node>
      <node id="182739">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182740" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182742" relation="include">
        </childnode>
        <childnode refid="182743" relation="include">
        </childnode>
        <childnode refid="182744" relation="include">
        </childnode>
        <childnode refid="182745" relation="include">
        </childnode>
      </node>
      <node id="182756">
        <label>pxr/base/tf/pyObjWrapper.h</label>
        <link refid="py_obj_wrapper_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182757" relation="include">
        </childnode>
        <childnode refid="182758" relation="include">
        </childnode>
        <childnode refid="182760" relation="include">
        </childnode>
        <childnode refid="182761" relation="include">
        </childnode>
        <childnode refid="182762" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182764" relation="include">
        </childnode>
      </node>
      <node id="182817">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="182754">
        <label>type_traits</label>
      </node>
      <node id="182786">
        <label>set</label>
      </node>
      <node id="182769">
        <label>pxr/base/tf/anyUniquePtr.h</label>
        <link refid="any_unique_ptr_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
      <node id="182736">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="182732" relation="include">
        </childnode>
      </node>
      <node id="182737">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="182733" relation="include">
        </childnode>
      </node>
      <node id="182824">
        <label>algorithm</label>
      </node>
      <node id="182784">
        <label>cstring</label>
      </node>
      <node id="182812">
        <label>pxr/base/gf/traits.h</label>
        <link refid="gf_2traits_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
      <node id="182764">
        <label>memory</label>
      </node>
      <node id="182793">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182740" relation="include">
        </childnode>
        <childnode refid="182788" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182794" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
      </node>
      <node id="182822">
        <label>initializer_list</label>
      </node>
      <node id="182734">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182735" relation="include">
        </childnode>
        <childnode refid="182739" relation="include">
        </childnode>
        <childnode refid="182741" relation="include">
        </childnode>
        <childnode refid="182743" relation="include">
        </childnode>
        <childnode refid="182746" relation="include">
        </childnode>
        <childnode refid="182745" relation="include">
        </childnode>
        <childnode refid="182749" relation="include">
        </childnode>
        <childnode refid="182738" relation="include">
        </childnode>
      </node>
      <node id="182814">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182733" relation="include">
        </childnode>
        <childnode refid="182815" relation="include">
        </childnode>
      </node>
      <node id="182768">
        <label>typeindex</label>
      </node>
      <node id="182755">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182756" relation="include">
        </childnode>
        <childnode refid="182765" relation="include">
        </childnode>
        <childnode refid="182766" relation="include">
        </childnode>
        <childnode refid="182743" relation="include">
        </childnode>
        <childnode refid="182757" relation="include">
        </childnode>
        <childnode refid="182769" relation="include">
        </childnode>
        <childnode refid="182770" relation="include">
        </childnode>
        <childnode refid="182773" relation="include">
        </childnode>
        <childnode refid="182774" relation="include">
        </childnode>
        <childnode refid="182780" relation="include">
        </childnode>
        <childnode refid="182792" relation="include">
        </childnode>
        <childnode refid="182800" relation="include">
        </childnode>
        <childnode refid="182801" relation="include">
        </childnode>
        <childnode refid="182802" relation="include">
        </childnode>
        <childnode refid="182804" relation="include">
        </childnode>
        <childnode refid="182805" relation="include">
        </childnode>
        <childnode refid="182818" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
      <node id="182816">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
      <node id="182802">
        <label>pxr/base/vt/streamOut.h</label>
        <link refid="stream_out_8h_source"/>
        <childnode refid="182730" relation="include">
        </childnode>
        <childnode refid="182800" relation="include">
        </childnode>
        <childnode refid="182778" relation="include">
        </childnode>
        <childnode refid="182803" relation="include">
        </childnode>
        <childnode refid="182763" relation="include">
        </childnode>
        <childnode refid="182767" relation="include">
        </childnode>
        <childnode refid="182754" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="182842">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="182874">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="182853">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="182847">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="182895">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="182896" relation="include">
        </childnode>
        <childnode refid="182897" relation="include">
        </childnode>
        <childnode refid="182898" relation="include">
        </childnode>
        <childnode refid="182899" relation="include">
        </childnode>
      </node>
      <node id="182893">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="182884">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="182885" relation="include">
        </childnode>
        <childnode refid="182886" relation="include">
        </childnode>
        <childnode refid="182887" relation="include">
        </childnode>
        <childnode refid="182888" relation="include">
        </childnode>
        <childnode refid="182889" relation="include">
        </childnode>
        <childnode refid="182890" relation="include">
        </childnode>
        <childnode refid="182891" relation="include">
        </childnode>
        <childnode refid="182892" relation="include">
        </childnode>
        <childnode refid="182893" relation="include">
        </childnode>
        <childnode refid="182894" relation="include">
        </childnode>
      </node>
      <node id="182855">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="182879">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="182838">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="182839" relation="include">
        </childnode>
        <childnode refid="182851" relation="include">
        </childnode>
        <childnode refid="182853" relation="include">
        </childnode>
        <childnode refid="182854" relation="include">
        </childnode>
        <childnode refid="182855" relation="include">
        </childnode>
        <childnode refid="182856" relation="include">
        </childnode>
        <childnode refid="182911" relation="include">
        </childnode>
        <childnode refid="182912" relation="include">
        </childnode>
      </node>
      <node id="182896">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="182891">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="182885">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="182907">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="182850">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="182911">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="182869">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="182839">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="182840" relation="include">
        </childnode>
        <childnode refid="182846" relation="include">
        </childnode>
      </node>
      <node id="182878">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="182844">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="182887">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="182902">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="182890">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="182837">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="182838" relation="include">
        </childnode>
      </node>
      <node id="182840">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="182841" relation="include">
        </childnode>
        <childnode refid="182842" relation="include">
        </childnode>
        <childnode refid="182843" relation="include">
        </childnode>
        <childnode refid="182844" relation="include">
        </childnode>
        <childnode refid="182845" relation="include">
        </childnode>
      </node>
      <node id="182848">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="182852">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="182912">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="182858" relation="include">
        </childnode>
        <childnode refid="182861" relation="include">
        </childnode>
      </node>
      <node id="182906">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="182863">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="182894">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="182862">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="182845">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="182875">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="182865">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="182900">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="182841">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="182872">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="182883">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="182836">
        <label>pxr/usd/sdf/pathExpressionEval.h</label>
        <link refid="path_expression_eval_8h_source"/>
        <childnode refid="182837" relation="include">
        </childnode>
      </node>
      <node id="182849">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="182892">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="182886">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="182859">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="182851">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="182852" relation="include">
        </childnode>
      </node>
      <node id="182882">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="182867">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="182868" relation="include">
        </childnode>
        <childnode refid="182869" relation="include">
        </childnode>
      </node>
      <node id="182880">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="182861">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="182862" relation="include">
        </childnode>
        <childnode refid="182863" relation="include">
        </childnode>
        <childnode refid="182864" relation="include">
        </childnode>
        <childnode refid="182865" relation="include">
        </childnode>
        <childnode refid="182866" relation="include">
        </childnode>
        <childnode refid="182867" relation="include">
        </childnode>
        <childnode refid="182870" relation="include">
        </childnode>
        <childnode refid="182874" relation="include">
        </childnode>
        <childnode refid="182883" relation="include">
        </childnode>
        <childnode refid="182884" relation="include">
        </childnode>
        <childnode refid="182895" relation="include">
        </childnode>
        <childnode refid="182900" relation="include">
        </childnode>
        <childnode refid="182875" relation="include">
        </childnode>
        <childnode refid="182876" relation="include">
        </childnode>
        <childnode refid="182877" relation="include">
        </childnode>
        <childnode refid="182879" relation="include">
        </childnode>
        <childnode refid="182880" relation="include">
        </childnode>
        <childnode refid="182901" relation="include">
        </childnode>
        <childnode refid="182902" relation="include">
        </childnode>
        <childnode refid="182903" relation="include">
        </childnode>
        <childnode refid="182904" relation="include">
        </childnode>
        <childnode refid="182881" relation="include">
        </childnode>
        <childnode refid="182882" relation="include">
        </childnode>
        <childnode refid="182905" relation="include">
        </childnode>
        <childnode refid="182906" relation="include">
        </childnode>
        <childnode refid="182907" relation="include">
        </childnode>
        <childnode refid="182908" relation="include">
        </childnode>
        <childnode refid="182909" relation="include">
        </childnode>
        <childnode refid="182910" relation="include">
        </childnode>
      </node>
      <node id="182905">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="182868">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="182860">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="182897">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="182903">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="182910">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="182898">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="182881">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="182871">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="182864">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="182904">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="182900" relation="include">
        </childnode>
      </node>
      <node id="182899">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="182843">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="182835">
        <label>pxr/usd/sdf/predicateProgram.h</label>
        <link refid="predicate_program_8h"/>
        <childnode refid="182836" relation="include">
        </childnode>
      </node>
      <node id="182889">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="182858">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="182859" relation="include">
        </childnode>
        <childnode refid="182860" relation="include">
        </childnode>
      </node>
      <node id="182877">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="182856">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="182857" relation="include">
        </childnode>
      </node>
      <node id="182876">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="182901">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="182888">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="182857">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="182858" relation="include">
        </childnode>
        <childnode refid="182861" relation="include">
        </childnode>
      </node>
      <node id="182870">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="182862" relation="include">
        </childnode>
        <childnode refid="182871" relation="include">
        </childnode>
        <childnode refid="182872" relation="include">
        </childnode>
        <childnode refid="182865" relation="include">
        </childnode>
        <childnode refid="182873" relation="include">
        </childnode>
        <childnode refid="182874" relation="include">
        </childnode>
        <childnode refid="182875" relation="include">
        </childnode>
        <childnode refid="182876" relation="include">
        </childnode>
        <childnode refid="182877" relation="include">
        </childnode>
        <childnode refid="182878" relation="include">
        </childnode>
        <childnode refid="182879" relation="include">
        </childnode>
        <childnode refid="182880" relation="include">
        </childnode>
        <childnode refid="182881" relation="include">
        </childnode>
        <childnode refid="182882" relation="include">
        </childnode>
      </node>
      <node id="182846">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="182847" relation="include">
        </childnode>
        <childnode refid="182848" relation="include">
        </childnode>
        <childnode refid="182849" relation="include">
        </childnode>
        <childnode refid="182850" relation="include">
        </childnode>
      </node>
      <node id="182873">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="182909">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="182866">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="182854">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="182908">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sdf_predicate_program" prot="public">SdfPredicateProgram</innerclass>
    <innerclass refid="class_sdf_predicate_program" prot="public">SdfPredicateProgram</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="predicate_program_8h_1ab324ac0b2b49a66d47b59210da768f13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DomainType</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram</ref>&lt; DomainType &gt;</type>
        <definition>SdfPredicateProgram&lt;DomainType&gt; SdfLinkPredicateExpression</definition>
        <argsstring>(SdfPredicateExpression const &amp;expr, SdfPredicateLibrary&lt; DomainType &gt; const &amp;lib)</argsstring>
        <name>SdfLinkPredicateExpression</name>
        <param>
          <type><ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref> const &amp;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary</ref>&lt; DomainType &gt; const &amp;</type>
          <declname>lib</declname>
        </param>
        <briefdescription>
<para>Link <computeroutput>expr</computeroutput> with <computeroutput>lib</computeroutput> and return a callable program that evaluates <computeroutput>expr</computeroutput> on given objects of the <computeroutput>DomainType</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If linking <computeroutput>expr</computeroutput> and <computeroutput>lib</computeroutput> fails, issue a TF_RUNTIME_ERROR with a message, and return an empty program. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/predicateProgram.h" line="52" column="1" bodyfile="pxr/usd/sdf/predicateProgram.h" bodystart="165" bodyend="232"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_SDF_PREDICATE_PROGRAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_SDF_PREDICATE_PROGRAM_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="base_2tf_2diagnostic_8h" kindref="compound">pxr/base/tf/diagnostic.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/functionTraits.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/vt/value.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/predicateExpression.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/predicateLibrary.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/invoke.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fwd<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fwd<sp/>decl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram&lt;DomainType&gt;</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="class_sdf_predicate_program_1a2fde8ac106af0f42f6d1bed801eb99d5" kindref="member">SdfLinkPredicateExpression</ref>(<ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lib);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>PredicateFunction<sp/>=</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_sdf_predicate_library_1ad453cd5b71e405ca6a420ba3095c2c09" kindref="member">SdfPredicateLibrary&lt;DomainType&gt;::PredicateFunction</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>SdfLinkPredicateExpression&lt;DomainType&gt;(</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lib);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_sdf_predicate_program_1a67b76affb3b5d35fa419ac234144038b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!_ops.empty();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref></highlight></codeline>
<codeline lineno="86" refid="class_sdf_predicate_program_1a72fdda823a771b970d139cb6df117b68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_program_1a72fdda823a771b970d139cb6df117b68" kindref="member">operator()</ref>(DomainType<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;obj)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result" kindref="compound">SdfPredicateFunctionResult</ref><sp/>result<sp/>=</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_function_result_1a2f9104a0ccdfa0eea9b93f7d9f03192c" kindref="member">SdfPredicateFunctionResult::MakeConstant</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nest<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>funcIter<sp/>=<sp/>_funcs.cbegin();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>opIter<sp/>=<sp/>_ops.cbegin(),<sp/>opEnd<sp/>=<sp/>_ops.cend();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>current<sp/>implementation<sp/>favors<sp/>short-circuiting<sp/>over<sp/>constance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>propagation.<sp/><sp/>It<sp/>might<sp/>be<sp/>beneficial<sp/>to<sp/>avoid<sp/>short-circuiting<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constancy<sp/>isn&apos;t<sp/>known,<sp/>in<sp/>hopes<sp/>of<sp/>establishing<sp/>constancy.<sp/><sp/>For</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>example,<sp/>if<sp/>we<sp/>have<sp/>&apos;A<sp/>or<sp/>B&apos;,<sp/>and<sp/>&apos;A&apos;<sp/>evaluates<sp/>to<sp/>&apos;true&apos;<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MayVaryOverDescendants,<sp/>we<sp/>will<sp/>skip<sp/>evaluating<sp/>B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(short-circuit).<sp/>This<sp/>means<sp/>we<sp/>would<sp/>miss<sp/>the<sp/>possibility<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>upgrading<sp/>the<sp/>constancy<sp/>in<sp/>case<sp/>B<sp/>returned<sp/>&apos;true&apos;<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ConstantOverDescendants.<sp/><sp/>This<sp/>isn&apos;t<sp/>a<sp/>simple<sp/>switch<sp/>to<sp/>flip<sp/>though;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;d<sp/>have<sp/>to<sp/>do<sp/>some<sp/>code<sp/>restructuring<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>posterity,<sp/>the<sp/>rules<sp/>for<sp/>propagating<sp/>constancy<sp/>are<sp/>the<sp/>following,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>where<sp/>A<sp/>and<sp/>B<sp/>are<sp/>the<sp/>truth-values,<sp/>and<sp/>c(A),<sp/>c(B),<sp/>are<sp/>whether<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>the<sp/>constancy<sp/>is<sp/>ConstantOverDescendants<sp/>for<sp/>A,<sp/>B,<sp/>respectively:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>c(A<sp/><sp/>or<sp/>B)<sp/>=<sp/><sp/>(A<sp/>and<sp/>c(A))<sp/>or<sp/><sp/>(B<sp/>and<sp/>c(B))<sp/>or<sp/>(c(A)<sp/>and<sp/>c(B))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>c(A<sp/>and<sp/>B)<sp/>=<sp/>(!A<sp/>and<sp/>c(A))<sp/>or<sp/>(!B<sp/>and<sp/>c(B))<sp/>or<sp/>(c(A)<sp/>and<sp/>c(B))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>for<sp/>short-circuiting<sp/>&quot;and&quot;<sp/>and<sp/>&quot;or&quot;<sp/>operators.<sp/><sp/>Advance,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignoring<sp/>everything<sp/>until<sp/>we<sp/>reach<sp/>the<sp/>next<sp/>Close<sp/>that<sp/>brings<sp/>us<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>starting<sp/>nest<sp/>level.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>shortCircuit<sp/>=<sp/>[&amp;]()<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>origNest<sp/>=<sp/>nest;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>opIter<sp/>!=<sp/>opEnd;<sp/>++opIter)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(*opIter)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Call:<sp/>++funcIter;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>calls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Not:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>And:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Or:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>operations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Open:<sp/>++nest;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Close:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--nest<sp/>==<sp/>origNest)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Evaluate<sp/>the<sp/>predicate<sp/>expression<sp/>by<sp/>processing<sp/>operations<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invoking<sp/>predicate<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>opIter<sp/>!=<sp/>opEnd;<sp/>++opIter)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*opIter)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Call:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="class_sdf_predicate_function_result_1a2fb5d1d20ae329c6db95a3a73fc99e86" kindref="member">SetAndPropagateConstancy</ref>((*funcIter++)(obj));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Not:<sp/>result<sp/>=<sp/>!result;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>And:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Or:<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>decidingValue<sp/>=<sp/>*opIter<sp/>!=<sp/>And;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>and/or<sp/>result<sp/>is<sp/>already<sp/>the<sp/>deciding<sp/>value,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>short-circuit.<sp/><sp/>Otherwise<sp/>the<sp/>result<sp/>is<sp/>the<sp/>rhs,<sp/>so<sp/>continue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>decidingValue)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shortCircuit();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Open:<sp/>++nest;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Close:<sp/>--nest;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_Op<sp/>{<sp/>Call,<sp/>Not,<sp/>Open,<sp/>Close,<sp/>And,<sp/>Or<sp/>};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;_Op&gt;<sp/>_ops;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PredicateFunction&gt;<sp/>_funcs;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>DomainType&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram&lt;DomainType&gt;</ref></highlight></codeline>
<codeline lineno="165" refid="class_sdf_predicate_program_1a2fde8ac106af0f42f6d1bed801eb99d5" refkind="member"><highlight class="normal">SdfLinkPredicateExpression(<ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;expr,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_predicate_library" kindref="compound">SdfPredicateLibrary&lt;DomainType&gt;</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;lib)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Expr<sp/>=<sp/><ref refid="class_sdf_predicate_expression" kindref="compound">SdfPredicateExpression</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Program<sp/>=<sp/><ref refid="class_sdf_predicate_program" kindref="compound">SdfPredicateProgram&lt;DomainType&gt;</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Walk<sp/>expr<sp/>and<sp/>populate<sp/>prog,<sp/>binding<sp/>calls<sp/>with<sp/>lib.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>Program<sp/>prog;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>errs;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exprToProgramOp<sp/>=<sp/>[](Expr::Op<sp/>op)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::Call:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Program::Call;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::Not:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Program::Not;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::ImpliedAnd:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::And:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Program::And;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::Or:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Program::Or;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>static_cast&lt;typename<sp/>Program::_Op&gt;(-1);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>translateLogic<sp/>=<sp/>[&amp;](Expr::Op<sp/>op,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argIndex)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::Not:<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>is<sp/>postfix,<sp/>RPN-style.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argIndex<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog._ops.push_back(Program::Not);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::ImpliedAnd:<sp/></highlight><highlight class="comment">//<sp/>Binary<sp/>logic<sp/>ops<sp/>are<sp/>infix<sp/>to<sp/>facilitate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::And:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>short-circuiting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::Or:</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argIndex<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog._ops.push_back(exprToProgramOp(op));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog._ops.push_back(Program::Open);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argIndex<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog._ops.push_back(Program::Close);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Expr::Call:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing,<sp/>handled<sp/>in<sp/>translateCall.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>translateCall<sp/>=<sp/>[&amp;](Expr::FnCall<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;call)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>bind<sp/>the<sp/>call<sp/>against<sp/>library<sp/>overloads.<sp/><sp/>If<sp/>successful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>a<sp/>call<sp/>op<sp/>and<sp/>the<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fn<sp/>=<sp/>lib._BindCall(call.funcName,<sp/>call.args))<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog._funcs.push_back(std::move(fn));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog._ops.push_back(Program::Call);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!errs.empty())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errs<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errs<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>bind<sp/>call<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>call.funcName;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Walk<sp/>the<sp/>expression<sp/>and<sp/>build<sp/>the<sp/>&quot;compiled&quot;<sp/>program.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>expr.<ref refid="class_sdf_predicate_expression_1a5ddbd0abb5a2d4688671d1e5f3e091bb" kindref="member">Walk</ref>(translateLogic,<sp/>translateCall);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!errs.empty())<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prog<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__group__tf___diagnostic_1ga4abf7754e5dbf161d2a5a4160fd3b891" kindref="member">TF_RUNTIME_ERROR</ref>(errs);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prog;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_USD_SDF_PREDICATE_PROGRAM_H</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/sdf/predicateProgram.h"/>
  </compounddef>
</doxygen>
