<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdr_osl_parser_plugin" kind="class" language="C++" prot="public">
    <compoundname>SdrOslParserPlugin</compoundname>
    <basecompoundref refid="class_ndr_parser_plugin" prot="public" virt="non-virtual">NdrParserPlugin</basecompoundref>
    <includes refid="osl_parser_8h" local="no">oslParser.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_sdr_osl_parser_plugin_1a6f693a9105768e4c810bcec1b7d96739" prot="public" static="no">
        <type>OSL::OSLQuery::Parameter</type>
        <definition>typedef OSL::OSLQuery::Parameter OslParameter</definition>
        <argsstring></argsstring>
        <name>OslParameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="114" column="1" bodyfile="pxr/usd/sdrOsl/oslParser.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a5ff2832b7ce235dba2d21d2b244c32ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDROSL_API</type>
        <definition>SDROSL_API SdrOslParserPlugin</definition>
        <argsstring>()</argsstring>
        <name>SdrOslParserPlugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1aedd92c7a85385b36a4a6d28dc799d67c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDROSL_API</type>
        <definition>SDROSL_API ~SdrOslParserPlugin</definition>
        <argsstring>()</argsstring>
        <name>~SdrOslParserPlugin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a0eaedf556b3d0670108b24c8c7142969" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>SDROSL_API NdrNodeUniquePtr</type>
        <definition>SDROSL_API NdrNodeUniquePtr Parse</definition>
        <argsstring>(const NdrNodeDiscoveryResult &amp;discoveryResult) override</argsstring>
        <name>Parse</name>
        <reimplements refid="class_ndr_parser_plugin_1a2ef1934691588b3b4dfe4eec441ed317">Parse</reimplements>
        <param>
          <type>const <ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref> &amp;</type>
          <declname>discoveryResult</declname>
        </param>
        <briefdescription>
<para>Takes the specified <computeroutput><ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref></computeroutput> instance, which was a result of the discovery process, and generates a new <computeroutput><ref refid="class_ndr_node" kindref="compound">NdrNode</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>The node&apos;s name, source type, and family must match. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a7bb9a7042529d3ddef5ac2b5da217a01" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SDROSL_API const NdrTokenVec &amp;</type>
        <definition>SDROSL_API const NdrTokenVec&amp; GetDiscoveryTypes</definition>
        <argsstring>() const override</argsstring>
        <name>GetDiscoveryTypes</name>
        <reimplements refid="class_ndr_parser_plugin_1a0a128182a40795469baa3373b2c1f128">GetDiscoveryTypes</reimplements>
        <briefdescription>
<para>Returns the types of nodes that this plugin can parse. </para>
        </briefdescription>
        <detaileddescription>
<para>&quot;Type&quot; here is the discovery type (in the case of files, this will probably be the file extension, but in other systems will be data that can be determined during discovery). This type should only be used to match up a <computeroutput><ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref></computeroutput> to its parser plugin; this value is not exposed in the node&apos;s API. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a6e5f10b89a2f1f9fad41746b1d0ee34e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SDROSL_API const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
        <definition>SDROSL_API const TfToken&amp; GetSourceType</definition>
        <argsstring>() const override</argsstring>
        <name>GetSourceType</name>
        <reimplements refid="class_ndr_parser_plugin_1a83659c4b3ccd025ad202c0d507b5ed8e">GetSourceType</reimplements>
        <briefdescription>
<para>Returns the source type that this parser operates on. </para>
        </briefdescription>
        <detaileddescription>
<para>A source type is the most general type for a node. The parser plugin is responsible for parsing all discovery results that have the types declared under <computeroutput><ref refid="class_sdr_osl_parser_plugin_1a7bb9a7042529d3ddef5ac2b5da217a01" kindref="member">GetDiscoveryTypes()</ref></computeroutput>, and those types are collectively identified as one &quot;source type&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1ada325303bcdb5ea344faa3a46aa4d653" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NdrPropertyUniquePtrVec</type>
        <definition>NdrPropertyUniquePtrVec _getNodeProperties</definition>
        <argsstring>(const OSL::OSLQuery &amp;query, const NdrNodeDiscoveryResult &amp;discoveryResult) const</argsstring>
        <name>_getNodeProperties</name>
        <param>
          <type>const OSL::OSLQuery &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const <ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref> &amp;</type>
          <declname>discoveryResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1ace475f09f5fc61fb0a1bb83769977403" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NdrTokenMap</type>
        <definition>NdrTokenMap _getNodeMetadata</definition>
        <argsstring>(const OSL::OSLQuery &amp;query, const NdrTokenMap &amp;baseMetadata) const</argsstring>
        <name>_getNodeMetadata</name>
        <param>
          <type>const OSL::OSLQuery &amp;</type>
          <declname>query</declname>
        </param>
        <param>
          <type>const NdrTokenMap &amp;</type>
          <declname>baseMetadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a6c9957281385883b598282df89eeb8b2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>NdrTokenMap</type>
        <definition>NdrTokenMap _getPropertyMetadata</definition>
        <argsstring>(const OslParameter *param, const NdrNodeDiscoveryResult &amp;discoveryResult) const</argsstring>
        <name>_getPropertyMetadata</name>
        <param>
          <type>const OslParameter *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const <ref refid="struct_ndr_node_discovery_result" kindref="compound">NdrNodeDiscoveryResult</ref> &amp;</type>
          <declname>discoveryResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a767cca77a1e1298e92b28e0b482ae43a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _injectParserMetadata</definition>
        <argsstring>(NdrTokenMap &amp;metadata, const TfToken &amp;typeName) const</argsstring>
        <name>_injectParserMetadata</name>
        <param>
          <type>NdrTokenMap &amp;</type>
          <declname>metadata</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>typeName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a4eefe3158602629955508dd16cb8d0ae" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string _getParamAsString</definition>
        <argsstring>(const OslParameter &amp;param) const</argsstring>
        <name>_getParamAsString</name>
        <param>
          <type>const OslParameter &amp;</type>
          <declname>param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="154" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1a79a4c8849e425caaee0ace1f699d96a0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref>, size_t &gt;</type>
        <definition>std::tuple&lt;TfToken, size_t&gt; _getTypeName</definition>
        <argsstring>(const OslParameter *param, const NdrTokenMap &amp;metadata) const</argsstring>
        <name>_getTypeName</name>
        <param>
          <type>const OslParameter *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const NdrTokenMap &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdr_osl_parser_plugin_1ab14b576ac269eb9549a24dd4457b7a72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_vt_value" kindref="compound">VtValue</ref></type>
        <definition>VtValue _getDefaultValue</definition>
        <argsstring>(const SdrOslParserPlugin::OslParameter &amp;param, const std::string &amp;oslType, size_t arraySize, const NdrTokenMap &amp;metadata) const</argsstring>
        <name>_getDefaultValue</name>
        <param>
          <type>const SdrOslParserPlugin::OslParameter &amp;</type>
          <declname>param</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>oslType</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>arraySize</declname>
        </param>
        <param>
          <type>const NdrTokenMap &amp;</type>
          <declname>metadata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdrOsl/oslParser.h" line="162" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Parses OSL nodes. </para>
    </briefdescription>
    <detaileddescription>
<para>For more information on parser plugins, see the documentation for <computeroutput><ref refid="class_ndr_parser_plugin" kindref="compound">NdrParserPlugin</ref></computeroutput>.</para>
<sect1 id="class_sdr_osl_parser_plugin_1metadata_schema">
<title>Metadata Schema</title>
<para>The following metadata is pulled out of the shader and available on the destination as outlined below.</para>
<sect2 id="class_sdr_osl_parser_plugin_1node_metadata">
<title>Node Metadata</title>
<para><table rows="7" cols="2"><row>
<entry thead="yes"><para>OSL Metadata Key  </para>
</entry><entry thead="yes"><para>Destination   </para>
</entry></row>
<row>
<entry thead="no"><para>category  </para>
</entry><entry thead="no"><para>GetCategory()   </para>
</entry></row>
<row>
<entry thead="no"><para>departments  </para>
</entry><entry thead="no"><para>GetDepartments()   </para>
</entry></row>
<row>
<entry thead="no"><para>help  </para>
</entry><entry thead="no"><para>GetHelp()   </para>
</entry></row>
<row>
<entry thead="no"><para>label  </para>
</entry><entry thead="no"><para>GetLabel()   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="class_sdr_osl_parser_plugin_1pvars" kindref="member">primvars</ref>  </para>
</entry><entry thead="no"><para>GetPrimvars(), GetAdditionalPrimvarProperties()   </para>
</entry></row>
<row>
<entry thead="no"><para><emphasis>everything else</emphasis>  </para>
</entry><entry thead="no"><para>GetMetadata()   </para>
</entry></row>
</table>
</para>
</sect2>
<sect2 id="class_sdr_osl_parser_plugin_1property_metadata">
<title>Property Metadata</title>
<para><table rows="3" cols="2"><row>
<entry thead="yes"><para>OSL Metadata Key  </para>
</entry><entry thead="yes"><para>Destination   </para>
</entry></row>
<row>
<entry thead="no"><para>connectable  </para>
</entry><entry thead="no"><para>IsConnectable()   </para>
</entry></row>
<row>
<entry thead="no"><para>sdrDefinitionName  </para>
</entry><entry thead="no"><para>renames parameter, sends original osl param name to   </para>
</entry></row>
</table>
| <ref refid="class_sdr_shader_property_1aa6091590dd3e86ae4643f24c4b00a250" kindref="member">SdrShaderProperty::GetImplementationName()</ref> page | GetPage() help | GetHelp() label | GetLabel() isDynamicArray | IsDynamicArray() <ref refid="class_sdr_osl_parser_plugin_1opts" kindref="member">options</ref> | GetOptions() vstructMemberName | GetVStructMemberName() vstructMemberOf | GetVStructMemberOf() <emphasis>everything else</emphasis> | GetMetadata()</para>
</sect2>
<sect2 id="class_sdr_osl_parser_plugin_1opts">
<title>Options Format</title>
<para>Multiple options are separated with the pipe &apos;|&apos; character; options can be specified in one of two ways: <itemizedlist>
<listitem>
<para>key1|key2|key3|...  </para>
</listitem>
<listitem>
<para>key1:value1|key2:value2|...  </para>
</listitem>
</itemizedlist>
</para>
<para>In the first case, where the values are not specified, the value of the option will be available on the node as an empty string.</para>
</sect2>
<sect2 id="class_sdr_osl_parser_plugin_1pvars">
<title>Primvar Format</title>
<para>Multiple primvars are separated with the pipe &apos;|&apos; character; primvars can be specified in one of two ways: <itemizedlist>
<listitem>
<para>A string <emphasis>not</emphasis> prefixed with a &apos;$&apos;; this indicates a normal primvar  </para>
</listitem>
<listitem>
<para>A string prefixed with &apos;$&apos;; the part after the &apos;$&apos; indicates the name of a string-typed input on the node whose value contains additional primvars  </para>
</listitem>
</itemizedlist>
</para>
</sect2>
</sect1>
    </detaileddescription>
    <inheritancegraph>
      <node id="5255">
        <label>NdrParserPlugin</label>
        <link refid="class_ndr_parser_plugin"/>
        <childnode refid="5256" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5256">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5254">
        <label>SdrOslParserPlugin</label>
        <link refid="class_sdr_osl_parser_plugin"/>
        <childnode refid="5255" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5258">
        <label>NdrParserPlugin</label>
        <link refid="class_ndr_parser_plugin"/>
        <childnode refid="5259" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5259">
        <label>TfWeakBase</label>
        <link refid="class_tf_weak_base"/>
      </node>
      <node id="5257">
        <label>SdrOslParserPlugin</label>
        <link refid="class_sdr_osl_parser_plugin"/>
        <childnode refid="5258" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdrOsl/oslParser.h" line="112" column="1" bodyfile="pxr/usd/sdrOsl/oslParser.h" bodystart="111" bodyend="168"/>
    <listofallmembers>
      <member refid="class_tf_weak_base_1a01aa4c4b93df067f2ec9b9e5fa4c35b3" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>__GetTfWeakBase__</name></member>
      <member refid="class_sdr_osl_parser_plugin_1ab14b576ac269eb9549a24dd4457b7a72" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_getDefaultValue</name></member>
      <member refid="class_sdr_osl_parser_plugin_1ace475f09f5fc61fb0a1bb83769977403" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_getNodeMetadata</name></member>
      <member refid="class_sdr_osl_parser_plugin_1ada325303bcdb5ea344faa3a46aa4d653" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_getNodeProperties</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a4eefe3158602629955508dd16cb8d0ae" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_getParamAsString</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a6c9957281385883b598282df89eeb8b2" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_getPropertyMetadata</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a79a4c8849e425caaee0ace1f699d96a0" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_getTypeName</name></member>
      <member refid="class_tf_weak_base_1a6a5533162e8efab1be47acd6ccd5254c" prot="protected" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_HasRemnant</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a767cca77a1e1298e92b28e0b482ae43a" prot="private" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_injectParserMetadata</name></member>
      <member refid="class_tf_weak_base_1a95139d2f4d04eb706664a4f47eb93918" prot="protected" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1ac1312732482c8a286522f703f2cf90d1" prot="protected" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>_Register</name></member>
      <member refid="class_tf_weak_base_1a16f1e27cc0c7c606ffb397b7d970ed10" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>EnableNotification2</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a7bb9a7042529d3ddef5ac2b5da217a01" prot="public" virt="virtual"><scope>SdrOslParserPlugin</scope><name>GetDiscoveryTypes</name></member>
      <member refid="class_ndr_parser_plugin_1a9cbbe0ba6beeb89591c20782cf9b12c9" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>GetInvalidNode</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a6e5f10b89a2f1f9fad41746b1d0ee34e" prot="public" virt="virtual"><scope>SdrOslParserPlugin</scope><name>GetSourceType</name></member>
      <member refid="class_tf_weak_base_1a3241c32a82fbed0716a77049f6134e1e" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>GetUniqueIdentifier</name></member>
      <member refid="class_ndr_parser_plugin_1ae71ccbb6b524bb041853bf6b32e1a328" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>NdrParserPlugin</name></member>
      <member refid="class_tf_weak_base_1af890ac314073e903458bf6b2397566b5" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>operator=</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a6f693a9105768e4c810bcec1b7d96739" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>OslParameter</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a0eaedf556b3d0670108b24c8c7142969" prot="public" virt="virtual"><scope>SdrOslParserPlugin</scope><name>Parse</name></member>
      <member refid="class_sdr_osl_parser_plugin_1a5ff2832b7ce235dba2d21d2b244c32ed" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>SdrOslParserPlugin</name></member>
      <member refid="class_tf_weak_base_1a6e4abdd663654f8c8019702a464de8d6" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>TfWeakBase</name></member>
      <member refid="class_tf_weak_base_1affc4c00d0bbfdfe4f9e6a8b2e81be368" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>TfWeakBase</name></member>
      <member refid="class_ndr_parser_plugin_1a631ea1c611ca81e66301b4aacc1d59da" prot="public" virt="virtual"><scope>SdrOslParserPlugin</scope><name>~NdrParserPlugin</name></member>
      <member refid="class_sdr_osl_parser_plugin_1aedd92c7a85385b36a4a6d28dc799d67c" prot="public" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>~SdrOslParserPlugin</name></member>
      <member refid="class_tf_weak_base_1a778020f525b66def8a284c6f020592c2" prot="protected" virt="non-virtual"><scope>SdrOslParserPlugin</scope><name>~TfWeakBase</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
