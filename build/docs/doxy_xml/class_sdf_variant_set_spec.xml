<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_sdf_variant_set_spec" kind="class" language="C++" prot="public">
    <compoundname>SdfVariantSetSpec</compoundname>
    <basecompoundref refid="class_sdf_spec" prot="public" virt="non-virtual">SdfSpec</basecompoundref>
    <includes refid="variant_set_spec_8h" local="no">variantSetSpec.h</includes>
      <sectiondef kind="user-defined">
      <header>Spec construction</header>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a64384251a14cfc413391e1d55e6cf6e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSetSpecHandle</type>
        <definition>static SDF_API SdfVariantSetSpecHandle New</definition>
        <argsstring>(const SdfPrimSpecHandle &amp;prim, const std::string &amp;name)</argsstring>
        <name>New</name>
        <param>
          <type>const SdfPrimSpecHandle &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a new instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1ad7dae55f6288e5221fe8a6147bfed2a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSetSpecHandle</type>
        <definition>static SDF_API SdfVariantSetSpecHandle New</definition>
        <argsstring>(const SdfVariantSpecHandle &amp;prim, const std::string &amp;name)</argsstring>
        <name>New</name>
        <param>
          <type>const SdfVariantSpecHandle &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructs a new instance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Name</header>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a062ef5d3cd30afd5ec8b5c41178a0eb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API std::string</type>
        <definition>SDF_API std::string GetName</definition>
        <argsstring>() const</argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the name of this variant set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="88" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a320078c8c86baa76a237c2233d55a730" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>SDF_API TfToken GetNameToken</definition>
        <argsstring>() const</argsstring>
        <name>GetNameToken</name>
        <briefdescription>
<para>Returns the name of this variant set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="92" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Namespace hierarchy</header>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a6edc52bacab5e83dff5c14b6cc1e224b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfSpecHandle</type>
        <definition>SDF_API SdfSpecHandle GetOwner</definition>
        <argsstring>() const</argsstring>
        <name>GetOwner</name>
        <briefdescription>
<para>Returns the prim or variant that this variant set belongs to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="100" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Variants</header>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a216d64a87c6305fb6a0fe3f47e5bb780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API <ref refid="class_sdf_children_view" kindref="compound">SdfVariantView</ref></type>
        <definition>SDF_API SdfVariantView GetVariants</definition>
        <argsstring>() const</argsstring>
        <name>GetVariants</name>
        <briefdescription>
<para>Returns the variants as a map. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a4be8111a02d7c467eef1cecab247d705" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API SdfVariantSpecHandleVector</type>
        <definition>SDF_API SdfVariantSpecHandleVector GetVariantList</definition>
        <argsstring>() const</argsstring>
        <name>GetVariantList</name>
        <briefdescription>
<para>Returns the variants as a vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_sdf_variant_set_spec_1a739d7fa6e18be962b029e39d9bfbca92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>SDF_API void</type>
        <definition>SDF_API void RemoveVariant</definition>
        <argsstring>(const SdfVariantSpecHandle &amp;variant)</argsstring>
        <name>RemoveVariant</name>
        <param>
          <type>const SdfVariantSpecHandle &amp;</type>
          <declname>variant</declname>
        </param>
        <briefdescription>
<para>Removes <computeroutput>variant</computeroutput> from the list of variants. </para>
        </briefdescription>
        <detaileddescription>
<para>If the variant set does not currently own <computeroutput>variant</computeroutput>, no action is taken. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="119" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_sdf_variant_set_spec_1ae791195df1988cfd52aa4f8c7b3966a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SDF_DECLARE_SPEC</definition>
        <argsstring>(SdfVariantSetSpec, SdfSpec)</argsstring>
        <name>SDF_DECLARE_SPEC</name>
        <param>
          <type><ref refid="class_sdf_variant_set_spec" kindref="compound">SdfVariantSetSpec</ref></type>
        </param>
        <param>
          <type><ref refid="class_sdf_spec" kindref="compound">SdfSpec</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/variantSetSpec.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a coherent set of alternate representations for part of a scene. </para>
    </briefdescription>
    <detaileddescription>
<para>An <ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref> object may contain one or more named <ref refid="class_sdf_variant_set_spec" kindref="compound">SdfVariantSetSpec</ref> objects that define variations on the prim.</para>
<para>An <ref refid="class_sdf_variant_set_spec" kindref="compound">SdfVariantSetSpec</ref> object contains one or more named <ref refid="class_sdf_variant_spec" kindref="compound">SdfVariantSpec</ref> objects. It may also define the name of one of its variants to be used by default.</para>
<para>When a prim references another prim, the referencing prim may specify one of the variants from each of the variant sets of the target prim. The chosen variant from each set (or the default variant from those sets that the referencing prim does not explicitly specify) is composited over the target prim, and then the referencing prim is composited over the result. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5247">
        <label>SdfSpec</label>
        <link refid="class_sdf_spec"/>
      </node>
      <node id="5246">
        <label>SdfVariantSetSpec</label>
        <link refid="class_sdf_variant_set_spec"/>
        <childnode refid="5247" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5249">
        <label>SdfSpec</label>
        <link refid="class_sdf_spec"/>
      </node>
      <node id="5248">
        <label>SdfVariantSetSpec</label>
        <link refid="class_sdf_variant_set_spec"/>
        <childnode refid="5249" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/sdf/variantSetSpec.h" line="63" column="1" bodyfile="pxr/usd/sdf/variantSetSpec.h" bodystart="62" bodyend="122"/>
    <listofallmembers>
      <member refid="class_sdf_spec_1ab3d82252ced8ce99c5118e47df91751e" prot="protected" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>_DeleteSpec</name></member>
      <member refid="class_sdf_spec_1aeff28b3237b8bdc8278510dfa4b354ee" prot="protected" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>_MoveSpec</name></member>
      <member refid="class_sdf_spec_1a51b947731f02f1359b9820d33aa9b8d0" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>ClearField</name></member>
      <member refid="class_sdf_spec_1ad5a0d94f0ac661acb29d7490eb15d6d6" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>ClearInfo</name></member>
      <member refid="class_sdf_spec_1a1da119c3713ec401ca578a6faa6eac9a" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetFallbackForInfo</name></member>
      <member refid="class_sdf_spec_1a2ba08d83b8a934187f2a792367066fa6" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetField</name></member>
      <member refid="class_sdf_spec_1a07f67495ca10863568306887212430f9" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetFieldAs</name></member>
      <member refid="class_sdf_spec_1a623889e0a6c749418e10f23169f92c5b" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetInfo</name></member>
      <member refid="class_sdf_spec_1a3fefae0b234ef14d141c83d6448f8656" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetLayer</name></member>
      <member refid="class_sdf_spec_1a52b21d3d611186ff336ad54292b0301a" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetMetaDataDisplayGroup</name></member>
      <member refid="class_sdf_spec_1ad2c2ea35643e325dacbc0bd8a3646b35" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetMetaDataInfoKeys</name></member>
      <member refid="class_sdf_variant_set_spec_1a062ef5d3cd30afd5ec8b5c41178a0eb7" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetName</name></member>
      <member refid="class_sdf_variant_set_spec_1a320078c8c86baa76a237c2233d55a730" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetNameToken</name></member>
      <member refid="class_sdf_variant_set_spec_1a6edc52bacab5e83dff5c14b6cc1e224b" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetOwner</name></member>
      <member refid="class_sdf_spec_1a58e8463c104969bf41bb7c79605d9532" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetPath</name></member>
      <member refid="class_sdf_spec_1a3bd6905e6ee12562d4702db19fe6cc1f" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetSchema</name></member>
      <member refid="class_sdf_spec_1a5f9f08741402342a8edf57244fe8c738" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetSpecType</name></member>
      <member refid="class_sdf_spec_1a7761385927d3f2e1d80af674b32d3ebc" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetTypeForInfo</name></member>
      <member refid="class_sdf_variant_set_spec_1a4be8111a02d7c467eef1cecab247d705" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetVariantList</name></member>
      <member refid="class_sdf_variant_set_spec_1a216d64a87c6305fb6a0fe3f47e5bb780" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>GetVariants</name></member>
      <member refid="class_sdf_spec_1a0eb9c97beea5e2f59323cbda9669d566" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>HasField</name></member>
      <member refid="class_sdf_spec_1a428b01e709e5bace4d3e7e23ad683d30" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>HasField</name></member>
      <member refid="class_sdf_spec_1afafc521cdaa2ed6513d41be2fa433993" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>HasInfo</name></member>
      <member refid="class_sdf_spec_1a10e3f6a477185399b6d64d26a213f32a" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>IsDormant</name></member>
      <member refid="class_sdf_spec_1a22b46c26c417cc6153e59cbe921d9ebd" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>IsInert</name></member>
      <member refid="class_sdf_spec_1a7b34aca00921a15ba8d5ad48c4561e1c" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>ListFields</name></member>
      <member refid="class_sdf_spec_1af43fb14c1d6cec17f913c3846119f716" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>ListInfoKeys</name></member>
      <member refid="class_sdf_variant_set_spec_1a64384251a14cfc413391e1d55e6cf6e5" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>New</name></member>
      <member refid="class_sdf_variant_set_spec_1ad7dae55f6288e5221fe8a6147bfed2a3" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>New</name></member>
      <member refid="class_sdf_spec_1a48650684eb4cc0ef195716de825a0a58" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>operator&lt;</name></member>
      <member refid="class_sdf_spec_1aa51d7b0726a78b7f679b5f22d68ef7df" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>operator=</name></member>
      <member refid="class_sdf_spec_1a103a094590f42b07266c293b02ef099f" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>operator==</name></member>
      <member refid="class_sdf_spec_1a794044e16b8357b4fd1cd87438ed361f" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>PermissionToEdit</name></member>
      <member refid="class_sdf_variant_set_spec_1a739d7fa6e18be962b029e39d9bfbca92" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>RemoveVariant</name></member>
      <member refid="class_sdf_variant_set_spec_1ae791195df1988cfd52aa4f8c7b3966a6" prot="private" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>SDF_DECLARE_SPEC</name></member>
      <member refid="class_sdf_spec_1a5b619246ffb0f1c56631529fa65e0435" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>SetField</name></member>
      <member refid="class_sdf_spec_1a3fc0276ed2f39480d00a61b888bd8434" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>SetField</name></member>
      <member refid="class_sdf_spec_1ac24a378f12ee3162c6f0173d001b11c0" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>SetInfo</name></member>
      <member refid="class_sdf_spec_1a860957d1b7800d7e930b53fe5b19ba86" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>SetInfoDictionaryValue</name></member>
      <member refid="class_sdf_spec_1a38c4971735cfa7f91c1618d441622ccc" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>WriteToStream</name></member>
      <member refid="class_sdf_spec_1acd7d1eec1135fa492866bd844b2694d6" prot="public" virt="non-virtual"><scope>SdfVariantSetSpec</scope><name>~SdfSpec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
