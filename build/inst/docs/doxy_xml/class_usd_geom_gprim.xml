<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_geom_gprim" kind="class" language="C++" prot="public">
    <compoundname>UsdGeomGprim</compoundname>
    <basecompoundref refid="class_usd_geom_boundable" prot="public" virt="non-virtual">UsdGeomBoundable</basecompoundref>
    <derivedcompoundref refid="class_usd_geom_capsule" prot="public" virt="non-virtual">UsdGeomCapsule</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_capsule__1" prot="public" virt="non-virtual">UsdGeomCapsule_1</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_cone" prot="public" virt="non-virtual">UsdGeomCone</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_cube" prot="public" virt="non-virtual">UsdGeomCube</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_cylinder" prot="public" virt="non-virtual">UsdGeomCylinder</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_cylinder__1" prot="public" virt="non-virtual">UsdGeomCylinder_1</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_plane" prot="public" virt="non-virtual">UsdGeomPlane</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_point_based" prot="public" virt="non-virtual">UsdGeomPointBased</derivedcompoundref>
    <derivedcompoundref refid="class_usd_geom_sphere" prot="public" virt="non-virtual">UsdGeomSphere</derivedcompoundref>
    <derivedcompoundref refid="class_usd_vol_volume" prot="public" virt="non-virtual">UsdVolVolume</derivedcompoundref>
    <includes refid="usd_2usd_geom_2gprim_8h" local="no">gprim.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_geom_gprim_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741a033ea5f40e4407ad16629e9a769ac9c1" kindref="member">UsdSchemaKind::AbstractTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="72" column="1" bodyfile="pxr/usd/usdGeom/gprim.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_geom_gprim_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="125" column="1" bodyfile="pxr/usd/usdGeom/gprim.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_geom_gprim_1a10c1cc1805ae388635bba63c3653adb8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomGprim</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdGeomGprim</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_gprim" kindref="compound">UsdGeomGprim</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_geom_gprim_1a12d48c497270d47d0f679122159900e3" kindref="member">UsdGeomGprim::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="78" column="1" bodyfile="pxr/usd/usdGeom/gprim.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a2bb55640543c9629ee6f9b05d7dcd0cc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdGeomGprim</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdGeomGprim</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_geom_gprim" kindref="compound">UsdGeomGprim</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_geom_gprim" kindref="compound">UsdGeomGprim</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="86" column="1" bodyfile="pxr/usd/usdGeom/gprim.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a0a03ad7c400946736b8d97a26cbf7211" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API</type>
        <definition>virtual USDGEOM_API ~UsdGeomGprim</definition>
        <argsstring>()</argsstring>
        <name>~UsdGeomGprim</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a0f8310a9dbe0bfc4be2bf4aa32e4a3e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetDisplayColorAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplayColorAttr</name>
        <briefdescription>
<para>It is useful to have an &quot;official&quot; colorSet that can be used as a display or modeling color, even in the absence of any specified shader for a gprim. </para>
        </briefdescription>
        <detaileddescription>
<para>DisplayColor serves this role; because it is a <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref>, it can also be used as a gprim override for any shader that consumes a <emphasis>displayColor</emphasis> parameter.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>color3f[] primvars:displayColor</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_vt_array" kindref="compound">VtArray&lt;GfVec3f&gt;</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Color3fArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a7fd86a311b27d9b4fdd82736bb423056" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateDisplayColorAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateDisplayColorAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_gprim_1a0f8310a9dbe0bfc4be2bf4aa32e4a3e4" kindref="member">GetDisplayColorAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1af3b5a808697655fb58eddafb01003527" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetDisplayOpacityAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplayOpacityAttr</name>
        <briefdescription>
<para>Companion to <emphasis>displayColor</emphasis> that specifies opacity, broken out as an independent attribute rather than an rgba color, both so that each can be independently overridden, and because shaders rarely consume rgba parameters. </para>
        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float[] primvars:displayOpacity</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>VtArray&lt;float&gt;   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;FloatArray   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1ad5be639be4c7963ef213b15594a1dbb6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateDisplayOpacityAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateDisplayOpacityAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_gprim_1af3b5a808697655fb58eddafb01003527" kindref="member">GetDisplayOpacityAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a63367a54086e014dda98cc79ad5f8602" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetDoubleSidedAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetDoubleSidedAttr</name>
        <briefdescription>
<para>Although some renderers treat all parametric or polygonal surfaces as if they were effectively laminae with outward-facing normals on both sides, some renderers derive significant optimizations by considering these surfaces to have only a single outward side, typically determined by control-point winding order and/or <emphasis>orientation</emphasis>. </para>
        </briefdescription>
        <detaileddescription>
<para>By doing so they can perform &quot;backface culling&quot; to avoid drawing the many polygons of most closed surfaces that face away from the viewer.</para>
<para>However, it is often advantageous to model thin objects such as paper and cloth as single, open surfaces that must be viewable from both sides, always. Setting a gprim&apos;s <emphasis>doubleSided</emphasis> attribute to <computeroutput>true</computeroutput> instructs all renderers to disable optimizations such as backface culling for the gprim, and attempt (not all renderers are able to do so, but the USD reference GL renderer always will) to provide forward-facing normals on each side of the surface for lighting calculations.</para>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform bool doubleSided = 0</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>bool   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a4cd597e15452c6b3f3fa8b0429023b65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateDoubleSidedAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateDoubleSidedAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_gprim_1a63367a54086e014dda98cc79ad5f8602" kindref="member">GetDoubleSidedAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a6d7f451cf0aa27125cc118b030ebb735" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute GetOrientationAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetOrientationAttr</name>
        <briefdescription>
<para>Orientation specifies whether the gprim&apos;s surface normal should be computed using the right hand rule, or the left hand rule. </para>
        </briefdescription>
        <detaileddescription>
<para>Please see <ref refid="usd_geom_page_front_1UsdGeom_WindingOrder" kindref="member">Coordinate System, Winding Order, Orientation, and Surface Normals</ref> for a deeper explanation and generalization of orientation to composed scenes with transformation hierarchies.</para>
<para><table rows="6" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform token orientation = &quot;rightHanded&quot;</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2usd_geom_2tokens_8h_1ad9e3544e015f99ed697804fd6bfe1a88" kindref="member">Allowed Values</ref>  </para>
</entry><entry thead="no"><para>rightHanded, leftHanded   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="243" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a40d10614ef3494576ded1ef08fb75f6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDGEOM_API UsdAttribute CreateOrientationAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateOrientationAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_geom_gprim_1a6d7f451cf0aa27125cc118b030ebb735" kindref="member">GetOrientationAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1ab36f805d674846aeeb296c8dbe661533" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>USDGEOM_API UsdGeomPrimvar GetDisplayColorPrimvar</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplayColorPrimvar</name>
        <briefdescription>
<para>Convenience function to get the displayColor Attribute as a Primvar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_geom_gprim_1a0f8310a9dbe0bfc4be2bf4aa32e4a3e4" kindref="member">GetDisplayColorAttr()</ref>, <ref refid="class_usd_geom_gprim_1a0915951c95ea904181354ac2d27c5ec6" kindref="member">CreateDisplayColorPrimvar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a0915951c95ea904181354ac2d27c5ec6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>USDGEOM_API UsdGeomPrimvar CreateDisplayColorPrimvar</definition>
        <argsstring>(const TfToken &amp;interpolation=TfToken(), int elementSize=-1) const</argsstring>
        <name>CreateDisplayColorPrimvar</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>interpolation</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>elementSize</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Convenience function to create the displayColor primvar, optionally specifying interpolation and elementSize. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_geom_gprim_1a7fd86a311b27d9b4fdd82736bb423056" kindref="member">CreateDisplayColorAttr()</ref>, <ref refid="class_usd_geom_gprim_1ab36f805d674846aeeb296c8dbe661533" kindref="member">GetDisplayColorPrimvar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="276" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a4d68d7e0959dfef2db82a7a1f1a6eea8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>USDGEOM_API UsdGeomPrimvar GetDisplayOpacityPrimvar</definition>
        <argsstring>() const</argsstring>
        <name>GetDisplayOpacityPrimvar</name>
        <briefdescription>
<para>Convenience function to get the displayOpacity Attribute as a Primvar. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_geom_gprim_1af3b5a808697655fb58eddafb01003527" kindref="member">GetDisplayOpacityAttr()</ref>, <ref refid="class_usd_geom_gprim_1af90ae547097a320fad7d3f7bd9e681f9" kindref="member">CreateDisplayOpacityPrimvar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1af90ae547097a320fad7d3f7bd9e681f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_primvar" kindref="compound">UsdGeomPrimvar</ref></type>
        <definition>USDGEOM_API UsdGeomPrimvar CreateDisplayOpacityPrimvar</definition>
        <argsstring>(const TfToken &amp;interpolation=TfToken(), int elementSize=-1) const</argsstring>
        <name>CreateDisplayOpacityPrimvar</name>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>interpolation</declname>
          <defval><ref refid="class_tf_token" kindref="compound">TfToken</ref>()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>elementSize</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Convenience function to create the displayOpacity primvar, optionally specifying interpolation and elementSize. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_usd_geom_gprim_1ad5be639be4c7963ef213b15594a1dbb6" kindref="member">CreateDisplayOpacityAttr()</ref>, <ref refid="class_usd_geom_gprim_1a4d68d7e0959dfef2db82a7a1f1a6eea8" kindref="member">GetDisplayOpacityPrimvar()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="291" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_geom_gprim_1ae40ae43320babff8a254a3a8107a255a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDGEOM_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1a12d48c497270d47d0f679122159900e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API <ref refid="class_usd_geom_gprim" kindref="compound">UsdGeomGprim</ref></type>
        <definition>static USDGEOM_API UsdGeomGprim Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_geom_gprim" kindref="compound">UsdGeomGprim</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdGeomGprim(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="113" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_geom_gprim_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDGEOM_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_geom_boundable_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplements>
        <reimplementedby refid="class_usd_geom_point_based_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_sphere_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_points_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_vol_volume_1a34ce525a51f595a6b87f70afbafc2e96">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_plane_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_patch_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <reimplementedby refid="class_usd_geom_mesh_1a71a1af4672754da617b8cb537f29c5f4">_GetSchemaKind</reimplementedby>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="121" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_geom_gprim_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDGEOM_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_geom_gprim_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="129" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_geom_gprim_1a1e6b9f0da5624212c58019b749c21286" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDGEOM_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDGEOM_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_geom_boundable_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplements>
        <reimplementedby refid="class_usd_geom_point_based_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_sphere_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_points_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_vol_volume_1a356aa28f8af508383319bbd3645b6026">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_plane_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_hermite_curves_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_nurbs_patch_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <reimplementedby refid="class_usd_geom_mesh_1a1e6b9f0da5624212c58019b749c21286">_GetTfType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdGeom/gprim.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class for all geometric primitives. </para>
    </briefdescription>
    <detaileddescription>
<para>Gprim encodes basic graphical properties such as <emphasis>doubleSided</emphasis> and <emphasis>orientation</emphasis>, and provides primvars for &quot;display color&quot; and &quot;display
opacity&quot; that travel with geometry to be used as shader overrides.</para>
<para>For any described attribute <emphasis>Fallback</emphasis> <emphasis>Value</emphasis> or <emphasis>Allowed</emphasis> <emphasis>Values</emphasis> below that are text/tokens, the actual token is published and defined in <ref refid="usd_2usd_geom_2tokens_8h_1ad9e3544e015f99ed697804fd6bfe1a88" kindref="member">UsdGeomTokens</ref>. So to set an attribute to the value &quot;rightHanded&quot;, use UsdGeomTokens-&gt;rightHanded as the value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6237">
        <label>UsdGeomCylinder</label>
        <link refid="class_usd_geom_cylinder"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6245">
        <label>UsdGeomMesh</label>
        <link refid="class_usd_geom_mesh"/>
        <childnode refid="6240" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6242">
        <label>UsdGeomBasisCurves</label>
        <link refid="class_usd_geom_basis_curves"/>
        <childnode refid="6241" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6235">
        <label>UsdGeomCone</label>
        <link refid="class_usd_geom_cone"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6234">
        <label>UsdGeomCapsule_1</label>
        <link refid="class_usd_geom_capsule__1"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6238">
        <label>UsdGeomCylinder_1</label>
        <link refid="class_usd_geom_cylinder__1"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6230">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="6231" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6248">
        <label>UsdGeomSphere</label>
        <link refid="class_usd_geom_sphere"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6241">
        <label>UsdGeomCurves</label>
        <link refid="class_usd_geom_curves"/>
        <childnode refid="6240" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6249">
        <label>UsdVolVolume</label>
        <link refid="class_usd_vol_volume"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6227">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="6228" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6240">
        <label>UsdGeomPointBased</label>
        <link refid="class_usd_geom_point_based"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6231">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6232" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6239">
        <label>UsdGeomPlane</label>
        <link refid="class_usd_geom_plane"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6236">
        <label>UsdGeomCube</label>
        <link refid="class_usd_geom_cube"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6246">
        <label>UsdGeomNurbsPatch</label>
        <link refid="class_usd_geom_nurbs_patch"/>
        <childnode refid="6240" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6244">
        <label>UsdGeomNurbsCurves</label>
        <link refid="class_usd_geom_nurbs_curves"/>
        <childnode refid="6241" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6247">
        <label>UsdGeomPoints</label>
        <link refid="class_usd_geom_points"/>
        <childnode refid="6240" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6232">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6243">
        <label>UsdGeomHermiteCurves</label>
        <link refid="class_usd_geom_hermite_curves"/>
        <childnode refid="6241" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6228">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="6229" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6233">
        <label>UsdGeomCapsule</label>
        <link refid="class_usd_geom_capsule"/>
        <childnode refid="6227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6229">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="6230" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6253">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="6254" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6250">
        <label>UsdGeomGprim</label>
        <link refid="class_usd_geom_gprim"/>
        <childnode refid="6251" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6254">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="6255" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6255">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="6251">
        <label>UsdGeomBoundable</label>
        <link refid="class_usd_geom_boundable"/>
        <childnode refid="6252" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6252">
        <label>UsdGeomXformable</label>
        <link refid="class_usd_geom_xformable"/>
        <childnode refid="6253" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdGeom/gprim.h" line="67" column="1" bodyfile="pxr/usd/usdGeom/gprim.h" bodystart="66" bodyend="295"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdGeomGprim</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_geom_gprim_1a71a1af4672754da617b8cb537f29c5f4" prot="protected" virt="virtual"><scope>UsdGeomGprim</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdGeomGprim</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_geom_gprim_1ad32bf70dffbb431c0fa883d5fbc1802d" prot="private" virt="non-virtual"><scope>UsdGeomGprim</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_geom_gprim_1a1e6b9f0da5624212c58019b749c21286" prot="private" virt="virtual"><scope>UsdGeomGprim</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdGeomGprim</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdGeomGprim</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_geom_gprim_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdGeomGprim</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_xformable_1a8b0d6e551f3705724405ddf6795756a7" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddOrientOp</name></member>
      <member refid="class_usd_geom_xformable_1ac01badf7416ca43636d9e479bc47da33" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1aba511327f305e9a8b3f8941e244c8992" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1a63ffbff66e60a314adac3380d533469f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4af9af5dc523e80fce81a88014edef19" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1ac7235be9524c6eb1a906f3247f9833f0" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1a353b43cb6f6d04b2db5b68c057d0494f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a9c089e1932ce91477becbc1f01bdfb02" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a6dd6174a48238d6a9564128f43362ce2" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a5938bf453b0f07bfaf80d121b916d720" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a4f84556fa9b1fab0432b8c4342e98045" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddScaleOp</name></member>
      <member refid="class_usd_geom_xformable_1a0fd59cb1cdd089e0d93fa755fb0da268" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1a782fe5d36ac6657235b80741d47a8b1f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddTranslateOp</name></member>
      <member refid="class_usd_geom_xformable_1ad6dfc740dcec052482489647af9ed36b" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>AddXformOp</name></member>
      <member refid="class_usd_geom_xformable_1a10a241711290631508cfc349ad4ab64d" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ClearXformOpOrder</name></member>
      <member refid="class_usd_geom_imageable_1a1174d9985088dd364f6a56925073fe76" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeEffectiveVisibility</name></member>
      <member refid="class_usd_geom_boundable_1a99f4a8f288a211fc286c3f12f0e87fda" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeExtent</name></member>
      <member refid="class_usd_geom_boundable_1a413c9eb5b4e1d8fddd627cf33ed4a106" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_boundable_1a7fa34cebf9339958ad25099dd635c9c7" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeExtentFromPlugins</name></member>
      <member refid="class_usd_geom_imageable_1a503f6d39abbd1b62c3c55f227461334d" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeLocalBound</name></member>
      <member refid="class_usd_geom_imageable_1a8e3fb09253ba63d63921f665d63cd270" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeLocalToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1a4313664fa692f724da56cc254bce70fc" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeParentToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1ad5a114f3776eb75edc651e8c2d67f8ff" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a1aa2ea4240e7e12f11122d7ff8ad7f90" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputePurpose</name></member>
      <member refid="class_usd_geom_imageable_1a2a7d61f7af1a02e095e6a8abcf8e641f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a00c5620a09313aa39cb0d79f492b340f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a54086b2386d22b1de4aaeb5b3005533d" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeUntransformedBound</name></member>
      <member refid="class_usd_geom_imageable_1ac0bfa1554d9b57303c14f71d084c578d" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeVisibility</name></member>
      <member refid="class_usd_geom_imageable_1ae616043b0f7fbc631ef9e5c784132a6c" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>ComputeWorldBound</name></member>
      <member refid="class_usd_geom_gprim_1a7fd86a311b27d9b4fdd82736bb423056" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateDisplayColorAttr</name></member>
      <member refid="class_usd_geom_gprim_1a0915951c95ea904181354ac2d27c5ec6" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateDisplayColorPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1ad5be639be4c7963ef213b15594a1dbb6" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateDisplayOpacityAttr</name></member>
      <member refid="class_usd_geom_gprim_1af90ae547097a320fad7d3f7bd9e681f9" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateDisplayOpacityPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1a4cd597e15452c6b3f3fa8b0429023b65" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateDoubleSidedAttr</name></member>
      <member refid="class_usd_geom_boundable_1a20dfcd57796694016d7d852e798458d8" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateExtentAttr</name></member>
      <member refid="class_usd_geom_gprim_1a40d10614ef3494576ded1ef08fb75f6a" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateOrientationAttr</name></member>
      <member refid="class_usd_geom_imageable_1aafc2e3aa91cf892f7937cc46a2351472" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1a3f4f6685ac7cef1d8ef94c44586b84bc" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreatePurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a96d4959f4d99367dfa3a79a3371e278a" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a03e49a63dc0bed6c97cee6bbc10aa182" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>CreateXformOpOrderAttr</name></member>
      <member refid="class_usd_geom_gprim_1a12d48c497270d47d0f679122159900e3" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>Get</name></member>
      <member refid="class_usd_geom_gprim_1a0f8310a9dbe0bfc4be2bf4aa32e4a3e4" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetDisplayColorAttr</name></member>
      <member refid="class_usd_geom_gprim_1ab36f805d674846aeeb296c8dbe661533" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetDisplayColorPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1af3b5a808697655fb58eddafb01003527" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetDisplayOpacityAttr</name></member>
      <member refid="class_usd_geom_gprim_1a4d68d7e0959dfef2db82a7a1f1a6eea8" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetDisplayOpacityPrimvar</name></member>
      <member refid="class_usd_geom_gprim_1a63367a54086e014dda98cc79ad5f8602" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetDoubleSidedAttr</name></member>
      <member refid="class_usd_geom_boundable_1abecc87b5433fec139295a78b439b0531" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetExtentAttr</name></member>
      <member refid="class_usd_geom_xformable_1a9a04ccb1ba8aa16e8cc1e878c2c92969" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1a3bdae958563500cfdf2b4f3bcf34c465" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_xformable_1ad0838e193af826f5bbde3c274e9839ce" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetLocalTransformation</name></member>
      <member refid="class_usd_geom_imageable_1ac7d41ddd5b5d274785f4a109a7cebad5" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetOrderedPurposeTokens</name></member>
      <member refid="class_usd_geom_xformable_1a5e7cd1ac98925aa41af4f83d1efe6375" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetOrderedXformOps</name></member>
      <member refid="class_usd_geom_gprim_1a6d7f451cf0aa27125cc118b030ebb735" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetOrientationAttr</name></member>
      <member refid="class_usd_geom_xformable_1a618c9b0ad5f39a8ebfc7f8e1b9319e5f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetOrientOp</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_imageable_1a5be4a4143e2b9f89f9bea44d27639a92" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetPurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a2dfc306cddf0c522d39ba477e91ec161" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetPurposeVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1a6d16bc5455344e131683d91e14ab62db" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1adbc1cc0684aad279a9f7954cce0ad083" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateXOp</name></member>
      <member refid="class_usd_geom_xformable_1a8b871424ffaff814ec4595b406198e12" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateXYZOp</name></member>
      <member refid="class_usd_geom_xformable_1aeabbd1a4b1e09254ddf700bfc1d83790" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateXZYOp</name></member>
      <member refid="class_usd_geom_xformable_1a9846b234308946bb9f91e1520f97de05" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateYOp</name></member>
      <member refid="class_usd_geom_xformable_1a803cfbc1fe2750bf9c5aadd83bd50a4c" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateYXZOp</name></member>
      <member refid="class_usd_geom_xformable_1aa244d99dd6e7f5abecc57f8ece422c93" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateYZXOp</name></member>
      <member refid="class_usd_geom_xformable_1a478e11c424f265543b333a00fb4268d0" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateZOp</name></member>
      <member refid="class_usd_geom_xformable_1a12311efeb62f64b39a02a1c001169ec6" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateZXYOp</name></member>
      <member refid="class_usd_geom_xformable_1a4ac8cec6efb64e0cbdd4b7a72f71c7f3" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetRotateZYXOp</name></member>
      <member refid="class_usd_geom_xformable_1a2029e0b90a0684a9a8c31e62aa98d317" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetScaleOp</name></member>
      <member refid="class_usd_geom_gprim_1ae40ae43320babff8a254a3a8107a255a" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_geom_xformable_1a0384cb87a595fa56c29463ff4fe73015" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1ab855f0ea37793df1f22d2bce3d68caff" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetTimeSamples</name></member>
      <member refid="class_usd_geom_xformable_1a64d8dabfbe974503daf5e8f2057424f7" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a582133c4e08813d891690f58497d4add" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetTimeSamplesInInterval</name></member>
      <member refid="class_usd_geom_xformable_1a0b425fbfdfe0f254add07f904ab231aa" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetTransformOp</name></member>
      <member refid="class_usd_geom_xformable_1ab81f8a9eb062d2c726dbb8303188408c" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetTranslateOp</name></member>
      <member refid="class_usd_geom_imageable_1a943eddc325190bd67789407400f122b7" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetVisibilityAttr</name></member>
      <member refid="class_usd_geom_xformable_1ab153aead880eebecaf2138706c4bdbf2" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetXformOp</name></member>
      <member refid="class_usd_geom_xformable_1af8533621f9f141dfd016711171433caf" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>GetXformOpOrderAttr</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_geom_xformable_1adb444654a8443f3413213cc526ee6c1a" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>IsTransformationAffectedByAttrNamed</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>IsTyped</name></member>
      <member refid="class_usd_geom_imageable_1a91eda805326fd94cc9910cfaeb4ac4a0" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>MakeInvisible</name></member>
      <member refid="class_usd_geom_xformable_1a97e5c56a739490600e4e7e37b3953a08" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>MakeMatrixXform</name></member>
      <member refid="class_usd_geom_imageable_1a3fd30c76b787e7e32180c1b454b971c7" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>MakeVisible</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>operator bool</name></member>
      <member refid="class_usd_geom_gprim_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_imageable_1a6b808012a6a5bc9df34e794ff82bb6f0" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a8c0c8b7faa4056a7267c586b2ffc0bd8" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_xformable_1a99c4c768f58d6375edad8c9c7cb4bee2" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>SetResetXformStack</name></member>
      <member refid="class_usd_geom_xformable_1a4b6dd6e51eb84725c763d064c4f9f3ba" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>SetXformOpOrder</name></member>
      <member refid="class_usd_geom_xformable_1aca0c1f0eb2639bd9e126f5e6a16e856f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_xformable_1a43e63cb240ddb36f550b3c86a22252c6" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>TransformMightBeTimeVarying</name></member>
      <member refid="class_usd_geom_boundable_1a93364dd184714cc86a93a4e6c943f54f" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_boundable_1acddb485259d4c8d3c0fdb9445b85a19e" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_gprim_1a10c1cc1805ae388635bba63c3653adb8" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomGprim</name></member>
      <member refid="class_usd_geom_gprim_1a2bb55640543c9629ee6f9b05d7dcd0cc" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomGprim</name></member>
      <member refid="class_usd_geom_imageable_1a00ea23bdac8d751c2b97dc8fe5cd7f73" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_imageable_1a912f3e5572536e0492914fe251446bc9" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1adf53f566e1d4a6ff2c4e6e90590b0510" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_geom_xformable_1a4f5550d15c8a43ef4ac30a063f96d0cd" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_geom_gprim_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdGeomGprim</scope><name>UsdTyped</name></member>
      <member refid="class_usd_geom_boundable_1af5dfc6e58452966f10c6f8d0a771c346" prot="public" virt="virtual"><scope>UsdGeomGprim</scope><name>~UsdGeomBoundable</name></member>
      <member refid="class_usd_geom_gprim_1a0a03ad7c400946736b8d97a26cbf7211" prot="public" virt="virtual"><scope>UsdGeomGprim</scope><name>~UsdGeomGprim</name></member>
      <member refid="class_usd_geom_imageable_1acbd981c2779c70ec4c3fd5d8cc610925" prot="public" virt="virtual"><scope>UsdGeomGprim</scope><name>~UsdGeomImageable</name></member>
      <member refid="class_usd_geom_xformable_1a8c8f037aa67ff544aea009f0881ed530" prot="public" virt="virtual"><scope>UsdGeomGprim</scope><name>~UsdGeomXformable</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdGeomGprim</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdGeomGprim</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
