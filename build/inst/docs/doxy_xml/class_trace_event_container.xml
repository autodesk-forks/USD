<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_trace_event_container" kind="class" language="C++" prot="public">
    <compoundname>TraceEventContainer</compoundname>
    <includes refid="event_container_8h" local="no">eventContainer.h</includes>
    <innerclass refid="class_trace_event_container_1_1___node" prot="private">TraceEventContainer::_Node</innerclass>
    <innerclass refid="class_trace_event_container_1_1const__iterator" prot="public">TraceEventContainer::const_iterator</innerclass>
      <sectiondef kind="user-defined">
      <header>Subset of stl container interface.</header>
      <memberdef kind="function" id="class_trace_event_container_1aec9d79256b73e7749ebeed903c2d1595" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_trace_event" kindref="compound">TraceEvent</ref> &amp;</type>
        <definition>TraceEvent&amp; emplace_back</definition>
        <argsstring>(Args &amp;&amp;... args)</argsstring>
        <name>emplace_back</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="218" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="218" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1a29305669b60ca1680752e2fc3592ba99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_event_container_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="228" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_trace_event_container_1_1const__iterator" kindref="compound">const_iterator</ref></type>
        <definition>const_iterator end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="232" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="232" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1af086cceac199bd735c7a97c2a8d7ed21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator rbegin</definition>
        <argsstring>() const</argsstring>
        <name>rbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="236" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="236" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1a07da1fdc890b6949f1a20a1961c6fc44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_reverse_iterator</type>
        <definition>const_reverse_iterator rend</definition>
        <argsstring>() const</argsstring>
        <name>rend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="240" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="244" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="244" bodyend="244"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_trace_event_container_1af0af7cd2cb131805b96d2b01cae24bf1" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="class_trace_event_container_1_1const__iterator" kindref="compound">const_iterator</ref> &gt;</type>
        <definition>using const_reverse_iterator =  std::reverse_iterator&lt;const_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="197" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="197" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_trace_event_container_1a1a70f4dde37fe616bdb3e6b91f0ae820" prot="private" static="no" mutable="no">
        <type><ref refid="class_trace_event" kindref="compound">TraceEvent</ref> *</type>
        <definition>TraceEvent* _nextEvent</definition>
        <argsstring></argsstring>
        <name>_nextEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="256" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_container_1acd5e5a0e4064ba317f7400e82bc153ea" prot="private" static="no" mutable="no">
        <type>_Node *</type>
        <definition>_Node* _front</definition>
        <argsstring></argsstring>
        <name>_front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="257" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_container_1aa1199a1147f8942ce20f39d096315cc8" prot="private" static="no" mutable="no">
        <type>_Node *</type>
        <definition>_Node* _back</definition>
        <argsstring></argsstring>
        <name>_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="258" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_trace_event_container_1a059df1f39c0673459b2a927dbb1030b3" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t _blockSizeBytes</definition>
        <argsstring></argsstring>
        <name>_blockSizeBytes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="259" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_trace_event_container_1a6cd9f5d591ca9ca67aa175f4bd4d4e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEventContainer</definition>
        <argsstring>()</argsstring>
        <name>TraceEventContainer</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1a07b4a390729299567d5939e2f543be4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEventContainer</definition>
        <argsstring>(TraceEventContainer &amp;&amp;)</argsstring>
        <name>TraceEventContainer</name>
        <param>
          <type><ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move Constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="203" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1afed81e078f7ce36f63cf5046ab26d238" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;</type>
        <definition>TraceEventContainer&amp; operator=</definition>
        <argsstring>(TraceEventContainer &amp;&amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Move Assignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="206" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1aa97760e9bd47d9ce1b28b9375460f016" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TraceEventContainer</definition>
        <argsstring>(const TraceEventContainer &amp;)=delete</argsstring>
        <name>TraceEventContainer</name>
        <param>
          <type>const <ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1aa7e7d3d762863a1fbdd9d8ff822d9646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;</type>
        <definition>TraceEventContainer&amp; operator=</definition>
        <argsstring>(const TraceEventContainer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1ac21603de8ee120f9c5f8e39fa0e1cb72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API</type>
        <definition>TRACE_API ~TraceEventContainer</definition>
        <argsstring>()</argsstring>
        <name>~TraceEventContainer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_trace_event_container_1aa1cb0f4e155da7245112730157a642f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void Append</definition>
        <argsstring>(TraceEventContainer &amp;&amp;other)</argsstring>
        <name>Append</name>
        <param>
          <type><ref refid="class_trace_event_container" kindref="compound">TraceEventContainer</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Append the events in <computeroutput>other</computeroutput> to the end of this container. </para>
        </briefdescription>
        <detaileddescription>
<para>This takes ownership of the events that were in <computeroutput>other</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="249" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_trace_event_container_1ae0b143a05c075257b9269123f07f7e5a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TRACE_API void</type>
        <definition>TRACE_API void Allocate</definition>
        <argsstring>()</argsstring>
        <name>Allocate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/trace/eventContainer.h" line="253" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds <ref refid="class_trace_event" kindref="compound">TraceEvent</ref> instances. </para>
    </briefdescription>
    <detaileddescription>
<para>This container only allows appending events at the end and supports both forward and reverse iteration. </para>
    </detaileddescription>
    <location file="pxr/base/trace/eventContainer.h" line="45" column="1" bodyfile="pxr/base/trace/eventContainer.h" bodystart="45" bodyend="260"/>
    <listofallmembers>
      <member refid="class_trace_event_container_1aa1199a1147f8942ce20f39d096315cc8" prot="private" virt="non-virtual"><scope>TraceEventContainer</scope><name>_back</name></member>
      <member refid="class_trace_event_container_1a059df1f39c0673459b2a927dbb1030b3" prot="private" virt="non-virtual"><scope>TraceEventContainer</scope><name>_blockSizeBytes</name></member>
      <member refid="class_trace_event_container_1acd5e5a0e4064ba317f7400e82bc153ea" prot="private" virt="non-virtual"><scope>TraceEventContainer</scope><name>_front</name></member>
      <member refid="class_trace_event_container_1a1a70f4dde37fe616bdb3e6b91f0ae820" prot="private" virt="non-virtual"><scope>TraceEventContainer</scope><name>_nextEvent</name></member>
      <member refid="class_trace_event_container_1ae0b143a05c075257b9269123f07f7e5a" prot="private" virt="non-virtual"><scope>TraceEventContainer</scope><name>Allocate</name></member>
      <member refid="class_trace_event_container_1aa1cb0f4e155da7245112730157a642f6" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>Append</name></member>
      <member refid="class_trace_event_container_1a29305669b60ca1680752e2fc3592ba99" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>begin</name></member>
      <member refid="class_trace_event_container_1af0af7cd2cb131805b96d2b01cae24bf1" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>const_reverse_iterator</name></member>
      <member refid="class_trace_event_container_1aec9d79256b73e7749ebeed903c2d1595" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>emplace_back</name></member>
      <member refid="class_trace_event_container_1a644718bb2fb240de962dc3c9a1fdf0dc" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>empty</name></member>
      <member refid="class_trace_event_container_1accf9a4bd0c34d4a5f6a7dab66ea10cdc" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>end</name></member>
      <member refid="class_trace_event_container_1afed81e078f7ce36f63cf5046ab26d238" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>operator=</name></member>
      <member refid="class_trace_event_container_1aa7e7d3d762863a1fbdd9d8ff822d9646" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>operator=</name></member>
      <member refid="class_trace_event_container_1af086cceac199bd735c7a97c2a8d7ed21" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>rbegin</name></member>
      <member refid="class_trace_event_container_1a07da1fdc890b6949f1a20a1961c6fc44" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>rend</name></member>
      <member refid="class_trace_event_container_1a6cd9f5d591ca9ca67aa175f4bd4d4e01" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>TraceEventContainer</name></member>
      <member refid="class_trace_event_container_1a07b4a390729299567d5939e2f543be4d" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>TraceEventContainer</name></member>
      <member refid="class_trace_event_container_1aa97760e9bd47d9ce1b28b9375460f016" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>TraceEventContainer</name></member>
      <member refid="class_trace_event_container_1ac21603de8ee120f9c5f8e39fa0e1cb72" prot="public" virt="non-virtual"><scope>TraceEventContainer</scope><name>~TraceEventContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
