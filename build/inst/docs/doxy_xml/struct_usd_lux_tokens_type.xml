<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="struct_usd_lux_tokens_type" kind="class" language="C++" prot="public">
    <compoundname>UsdLuxTokensType</compoundname>
    <includes refid="usd_2usd_lux_2tokens_8h" local="no">tokens.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a7000770a2eca2853e9016a0e67789ba4" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken angular</definition>
        <argsstring></argsstring>
        <name>angular</name>
        <briefdescription>
<para>&quot;angular&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_dome_light_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight::GetTextureFormatAttr()</ref>, Possible value for <ref refid="class_usd_lux_dome_light__1_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight_1::GetTextureFormatAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="68" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ae23bda00ad5964f859b214be0fabe429" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken automatic</definition>
        <argsstring></argsstring>
        <name>automatic</name>
        <briefdescription>
<para>&quot;automatic&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Fallback value for <ref refid="class_usd_lux_dome_light_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight::GetTextureFormatAttr()</ref>, Fallback value for <ref refid="class_usd_lux_dome_light__1_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight_1::GetTextureFormatAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="72" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a3b29e1d042126acfcd72bdd3eeab6c8b" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken collectionFilterLinkIncludeRoot</definition>
        <argsstring></argsstring>
        <name>collectionFilterLinkIncludeRoot</name>
        <briefdescription>
<para>&quot;collection:filterLink:includeRoot&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_filter" kindref="compound">UsdLuxLightFilter</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="76" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a986a288039074f3e926cc21f87afbd72" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken collectionLightLinkIncludeRoot</definition>
        <argsstring></argsstring>
        <name>collectionLightLinkIncludeRoot</name>
        <briefdescription>
<para>&quot;collection:lightLink:includeRoot&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="80" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ab63e0e7d8e66dc6ba8e4e7ed9f214af5" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken collectionShadowLinkIncludeRoot</definition>
        <argsstring></argsstring>
        <name>collectionShadowLinkIncludeRoot</name>
        <briefdescription>
<para>&quot;collection:shadowLink:includeRoot&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="84" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a7ca735b273aa296e5afb9df41b8dcecf" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken consumeAndContinue</definition>
        <argsstring></argsstring>
        <name>consumeAndContinue</name>
        <briefdescription>
<para>&quot;consumeAndContinue&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_light_list_a_p_i_1a9d7f6b908ecc82b4f4d17f8cfb236ede" kindref="member">UsdLuxLightListAPI::GetLightListCacheBehaviorAttr()</ref>, Possible value for <ref refid="class_usd_lux_list_a_p_i_1a9d7f6b908ecc82b4f4d17f8cfb236ede" kindref="member">UsdLuxListAPI::GetLightListCacheBehaviorAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="88" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a3a2625fc4bac4d6e7f39250eb9c2db8a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken consumeAndHalt</definition>
        <argsstring></argsstring>
        <name>consumeAndHalt</name>
        <briefdescription>
<para>&quot;consumeAndHalt&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_light_list_a_p_i_1a9d7f6b908ecc82b4f4d17f8cfb236ede" kindref="member">UsdLuxLightListAPI::GetLightListCacheBehaviorAttr()</ref>, Possible value for <ref refid="class_usd_lux_list_a_p_i_1a9d7f6b908ecc82b4f4d17f8cfb236ede" kindref="member">UsdLuxListAPI::GetLightListCacheBehaviorAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="92" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a6ffd356582256d029ae325a1e139902e" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken cubeMapVerticalCross</definition>
        <argsstring></argsstring>
        <name>cubeMapVerticalCross</name>
        <briefdescription>
<para>&quot;cubeMapVerticalCross&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_dome_light_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight::GetTextureFormatAttr()</ref>, Possible value for <ref refid="class_usd_lux_dome_light__1_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight_1::GetTextureFormatAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="96" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a46b1c612a5f7096767831c10690b6a29" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken filterLink</definition>
        <argsstring></argsstring>
        <name>filterLink</name>
        <briefdescription>
<para>&quot;filterLink&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>This token represents the collection name to use with <ref refid="class_usd_collection_a_p_i" kindref="compound">UsdCollectionAPI</ref> to represent filter-linking of a <ref refid="class_usd_lux_light_filter" kindref="compound">UsdLuxLightFilter</ref> prim. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="100" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a2767a5bd86fd72ce499cde27f1811716" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken geometry</definition>
        <argsstring></argsstring>
        <name>geometry</name>
        <briefdescription>
<para>&quot;geometry&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_geometry_light" kindref="compound">UsdLuxGeometryLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="104" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ae99720f7674afbd5a967ceeafadd2b42" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken guideRadius</definition>
        <argsstring></argsstring>
        <name>guideRadius</name>
        <briefdescription>
<para>&quot;guideRadius&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref>, <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="108" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ac580431f5dcd08031407561061396b56" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken ignore</definition>
        <argsstring></argsstring>
        <name>ignore</name>
        <briefdescription>
<para>&quot;ignore&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_light_list_a_p_i_1a9d7f6b908ecc82b4f4d17f8cfb236ede" kindref="member">UsdLuxLightListAPI::GetLightListCacheBehaviorAttr()</ref>, Possible value for <ref refid="class_usd_lux_list_a_p_i_1a9d7f6b908ecc82b4f4d17f8cfb236ede" kindref="member">UsdLuxListAPI::GetLightListCacheBehaviorAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="112" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a604b524a96326b2bc4c46d37925ebb59" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken independent</definition>
        <argsstring></argsstring>
        <name>independent</name>
        <briefdescription>
<para>&quot;independent&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_light_a_p_i_1a098a257ee074db8e791793dbec1637cf" kindref="member">UsdLuxLightAPI::GetMaterialSyncModeAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="116" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a75c537605e36935054d86ae2febf2c55" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsAngle</definition>
        <argsstring></argsstring>
        <name>inputsAngle</name>
        <briefdescription>
<para>&quot;inputs:angle&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_distant_light" kindref="compound">UsdLuxDistantLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="120" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aee3f2f63195269d86d0e7c6feeace503" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsColor</definition>
        <argsstring></argsstring>
        <name>inputsColor</name>
        <briefdescription>
<para>&quot;inputs:color&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="124" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a4e74105c1485bef26877f0469449acd0" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsColorTemperature</definition>
        <argsstring></argsstring>
        <name>inputsColorTemperature</name>
        <briefdescription>
<para>&quot;inputs:colorTemperature&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="128" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a6bd8e28c129a54b71740cf5bf292d709" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsDiffuse</definition>
        <argsstring></argsstring>
        <name>inputsDiffuse</name>
        <briefdescription>
<para>&quot;inputs:diffuse&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="132" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1afc395204d5537424f20826e0249e3837" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsEnableColorTemperature</definition>
        <argsstring></argsstring>
        <name>inputsEnableColorTemperature</name>
        <briefdescription>
<para>&quot;inputs:enableColorTemperature&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="136" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a953b59379bb57f7f35d3333bca4dc44e" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsExposure</definition>
        <argsstring></argsstring>
        <name>inputsExposure</name>
        <briefdescription>
<para>&quot;inputs:exposure&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="140" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1af7417822e4348bc46d0164229b3816e9" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsHeight</definition>
        <argsstring></argsstring>
        <name>inputsHeight</name>
        <briefdescription>
<para>&quot;inputs:height&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_rect_light" kindref="compound">UsdLuxRectLight</ref>, <ref refid="class_usd_lux_portal_light" kindref="compound">UsdLuxPortalLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="144" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a7b1d9e9cc863e8172060225fb7bae62c" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsIntensity</definition>
        <argsstring></argsstring>
        <name>inputsIntensity</name>
        <briefdescription>
<para>&quot;inputs:intensity&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref>, <ref refid="class_usd_lux_distant_light" kindref="compound">UsdLuxDistantLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="148" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a3c7ea2ea6718de8198403e80441e2160" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsLength</definition>
        <argsstring></argsstring>
        <name>inputsLength</name>
        <briefdescription>
<para>&quot;inputs:length&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_cylinder_light" kindref="compound">UsdLuxCylinderLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="152" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1acf69576a4d996ee6974d3bed252125e3" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsNormalize</definition>
        <argsstring></argsstring>
        <name>inputsNormalize</name>
        <briefdescription>
<para>&quot;inputs:normalize&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="156" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1abe580db34d1dab697b23849dc6ec2c04" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsRadius</definition>
        <argsstring></argsstring>
        <name>inputsRadius</name>
        <briefdescription>
<para>&quot;inputs:radius&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_disk_light" kindref="compound">UsdLuxDiskLight</ref>, <ref refid="class_usd_lux_sphere_light" kindref="compound">UsdLuxSphereLight</ref>, <ref refid="class_usd_lux_cylinder_light" kindref="compound">UsdLuxCylinderLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="160" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ad79a47357935f0862264f460c260e758" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShadowColor</definition>
        <argsstring></argsstring>
        <name>inputsShadowColor</name>
        <briefdescription>
<para>&quot;inputs:shadow:color&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shadow_a_p_i" kindref="compound">UsdLuxShadowAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="164" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a0750d1eff41f79b1823197d6b8d9a3d1" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShadowDistance</definition>
        <argsstring></argsstring>
        <name>inputsShadowDistance</name>
        <briefdescription>
<para>&quot;inputs:shadow:distance&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shadow_a_p_i" kindref="compound">UsdLuxShadowAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="168" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a62af1bfe75d102fe4327b5acc7609b76" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShadowEnable</definition>
        <argsstring></argsstring>
        <name>inputsShadowEnable</name>
        <briefdescription>
<para>&quot;inputs:shadow:enable&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shadow_a_p_i" kindref="compound">UsdLuxShadowAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="172" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a04aa2f42578a852eb3ee88e8cd1347b1" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShadowFalloff</definition>
        <argsstring></argsstring>
        <name>inputsShadowFalloff</name>
        <briefdescription>
<para>&quot;inputs:shadow:falloff&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shadow_a_p_i" kindref="compound">UsdLuxShadowAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="176" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a9d9188876e49a06e172e66bc41eff945" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShadowFalloffGamma</definition>
        <argsstring></argsstring>
        <name>inputsShadowFalloffGamma</name>
        <briefdescription>
<para>&quot;inputs:shadow:falloffGamma&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shadow_a_p_i" kindref="compound">UsdLuxShadowAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="180" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a9a1c8a8f257bb965764dce43a8702401" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingConeAngle</definition>
        <argsstring></argsstring>
        <name>inputsShapingConeAngle</name>
        <briefdescription>
<para>&quot;inputs:shaping:cone:angle&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="184" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aaa190a809375bf74a342e949141acaa8" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingConeSoftness</definition>
        <argsstring></argsstring>
        <name>inputsShapingConeSoftness</name>
        <briefdescription>
<para>&quot;inputs:shaping:cone:softness&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="188" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ab7dd2e9858da81784243fe880c1595d5" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingFocus</definition>
        <argsstring></argsstring>
        <name>inputsShapingFocus</name>
        <briefdescription>
<para>&quot;inputs:shaping:focus&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="192" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a67dfaef79d44a9f02a972c1b1a28ec34" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingFocusTint</definition>
        <argsstring></argsstring>
        <name>inputsShapingFocusTint</name>
        <briefdescription>
<para>&quot;inputs:shaping:focusTint&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="196" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a9a056f98a7ddc31061d8ca89757b00bb" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingIesAngleScale</definition>
        <argsstring></argsstring>
        <name>inputsShapingIesAngleScale</name>
        <briefdescription>
<para>&quot;inputs:shaping:ies:angleScale&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="200" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a3d292fcf666134c0e3d402b6e339d157" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingIesFile</definition>
        <argsstring></argsstring>
        <name>inputsShapingIesFile</name>
        <briefdescription>
<para>&quot;inputs:shaping:ies:file&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="204" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aabef934604bc3c7bc92bd0bada6e5ad2" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsShapingIesNormalize</definition>
        <argsstring></argsstring>
        <name>inputsShapingIesNormalize</name>
        <briefdescription>
<para>&quot;inputs:shaping:ies:normalize&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="208" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aa65c2fa531c26090cba6f6c473734e89" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsSpecular</definition>
        <argsstring></argsstring>
        <name>inputsSpecular</name>
        <briefdescription>
<para>&quot;inputs:specular&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="212" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a7818b9cba88ddcadd0c94dd61c23b8b9" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsTextureFile</definition>
        <argsstring></argsstring>
        <name>inputsTextureFile</name>
        <briefdescription>
<para>&quot;inputs:texture:file&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_rect_light" kindref="compound">UsdLuxRectLight</ref>, <ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref>, <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="216" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a90108deeb1f2b8b889dea9960a113286" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsTextureFormat</definition>
        <argsstring></argsstring>
        <name>inputsTextureFormat</name>
        <briefdescription>
<para>&quot;inputs:texture:format&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref>, <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="220" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a2f9685b6e9dfd468813c80f5423963bb" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken inputsWidth</definition>
        <argsstring></argsstring>
        <name>inputsWidth</name>
        <briefdescription>
<para>&quot;inputs:width&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_rect_light" kindref="compound">UsdLuxRectLight</ref>, <ref refid="class_usd_lux_portal_light" kindref="compound">UsdLuxPortalLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="224" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a1058a81ebcb8fc856a6431912d00f4a0" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken latlong</definition>
        <argsstring></argsstring>
        <name>latlong</name>
        <briefdescription>
<para>&quot;latlong&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_dome_light_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight::GetTextureFormatAttr()</ref>, Possible value for <ref refid="class_usd_lux_dome_light__1_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight_1::GetTextureFormatAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="228" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1adfa875c58733ca20a7a67d04ff7baa8a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightFilters</definition>
        <argsstring></argsstring>
        <name>lightFilters</name>
        <briefdescription>
<para>&quot;light:filters&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="232" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a203755d1740f3678af1c8e0534c81264" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightFilterShaderId</definition>
        <argsstring></argsstring>
        <name>lightFilterShaderId</name>
        <briefdescription>
<para>&quot;lightFilter:shaderId&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_filter" kindref="compound">UsdLuxLightFilter</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="236" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a88cd5a739f8f0f619a78cf8199213b7a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightLink</definition>
        <argsstring></argsstring>
        <name>lightLink</name>
        <briefdescription>
<para>&quot;lightLink&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>This token represents the collection name to use with <ref refid="class_usd_collection_a_p_i" kindref="compound">UsdCollectionAPI</ref> to represent light-linking of a prim with an applied <ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="240" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ac24b1cb3c7b3e066dea8b575b0b49eed" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightList</definition>
        <argsstring></argsstring>
        <name>lightList</name>
        <briefdescription>
<para>&quot;lightList&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_list_a_p_i" kindref="compound">UsdLuxLightListAPI</ref>, <ref refid="class_usd_lux_list_a_p_i" kindref="compound">UsdLuxListAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="244" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a69dcc937bde60dfdb7dd356d7e7e01c2" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightListCacheBehavior</definition>
        <argsstring></argsstring>
        <name>lightListCacheBehavior</name>
        <briefdescription>
<para>&quot;lightList:cacheBehavior&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_list_a_p_i" kindref="compound">UsdLuxLightListAPI</ref>, <ref refid="class_usd_lux_list_a_p_i" kindref="compound">UsdLuxListAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="248" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ae6f99e19ae8fa5c65e4d0712da4ebc5a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightMaterialSyncMode</definition>
        <argsstring></argsstring>
        <name>lightMaterialSyncMode</name>
        <briefdescription>
<para>&quot;light:materialSyncMode&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref>, <ref refid="class_usd_lux_mesh_light_a_p_i" kindref="compound">UsdLuxMeshLightAPI</ref>, <ref refid="class_usd_lux_volume_light_a_p_i" kindref="compound">UsdLuxVolumeLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="252" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1acec2e47a2c9442a9bff965d4e9d3db77" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken lightShaderId</definition>
        <argsstring></argsstring>
        <name>lightShaderId</name>
        <briefdescription>
<para>&quot;light:shaderId&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref>, <ref refid="class_usd_lux_mesh_light_a_p_i" kindref="compound">UsdLuxMeshLightAPI</ref>, <ref refid="class_usd_lux_volume_light_a_p_i" kindref="compound">UsdLuxVolumeLightAPI</ref>, <ref refid="class_usd_lux_distant_light" kindref="compound">UsdLuxDistantLight</ref>, <ref refid="class_usd_lux_disk_light" kindref="compound">UsdLuxDiskLight</ref>, <ref refid="class_usd_lux_rect_light" kindref="compound">UsdLuxRectLight</ref>, <ref refid="class_usd_lux_sphere_light" kindref="compound">UsdLuxSphereLight</ref>, <ref refid="class_usd_lux_cylinder_light" kindref="compound">UsdLuxCylinderLight</ref>, <ref refid="class_usd_lux_geometry_light" kindref="compound">UsdLuxGeometryLight</ref>, <ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref>, <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref>, <ref refid="class_usd_lux_portal_light" kindref="compound">UsdLuxPortalLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="256" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aad86eda821a2f9256883756cb534c90d" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken materialGlowTintsLight</definition>
        <argsstring></argsstring>
        <name>materialGlowTintsLight</name>
        <briefdescription>
<para>&quot;materialGlowTintsLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_light_a_p_i_1a098a257ee074db8e791793dbec1637cf" kindref="member">UsdLuxLightAPI::GetMaterialSyncModeAttr()</ref>, Fallback value for <ref refid="class_usd_lux_mesh_light_a_p_i" kindref="compound">UsdLuxMeshLightAPI</ref> schema attribute light:materialSyncMode, Fallback value for <ref refid="class_usd_lux_volume_light_a_p_i" kindref="compound">UsdLuxVolumeLightAPI</ref> schema attribute light:materialSyncMode </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="260" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a8b5835380886e961a9f3cb21acd5c121" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken MeshLight</definition>
        <argsstring></argsstring>
        <name>MeshLight</name>
        <briefdescription>
<para>&quot;MeshLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Fallback value for <ref refid="class_usd_lux_mesh_light_a_p_i" kindref="compound">UsdLuxMeshLightAPI</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="264" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a49fbcee1b7d60508e346167e17811ad4" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken mirroredBall</definition>
        <argsstring></argsstring>
        <name>mirroredBall</name>
        <briefdescription>
<para>&quot;mirroredBall&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_dome_light_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight::GetTextureFormatAttr()</ref>, Possible value for <ref refid="class_usd_lux_dome_light__1_1aeee791f4a8f1d07df470d2df439e90c0" kindref="member">UsdLuxDomeLight_1::GetTextureFormatAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="268" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a70efef8598dfe8ed4cac3aba02099d86" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken noMaterialResponse</definition>
        <argsstring></argsstring>
        <name>noMaterialResponse</name>
        <briefdescription>
<para>&quot;noMaterialResponse&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Fallback value for <ref refid="class_usd_lux_light_a_p_i_1a098a257ee074db8e791793dbec1637cf" kindref="member">UsdLuxLightAPI::GetMaterialSyncModeAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="272" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a3e49ff5b7a588efa9d3afae83d1ee402" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken orientToStageUpAxis</definition>
        <argsstring></argsstring>
        <name>orientToStageUpAxis</name>
        <briefdescription>
<para>&quot;orientToStageUpAxis&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>This token represents the suffix for a <ref refid="class_usd_geom_xform_op" kindref="compound">UsdGeomXformOp</ref> used to orient a light with the stage&apos;s up axis. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="276" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a830198c39694ab23dc92600c7459bf20" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken poleAxis</definition>
        <argsstring></argsstring>
        <name>poleAxis</name>
        <briefdescription>
<para>&quot;poleAxis&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="280" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a138deb89f2df96e1144d7df89cb2f32f" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken portals</definition>
        <argsstring></argsstring>
        <name>portals</name>
        <briefdescription>
<para>&quot;portals&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref>, <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="284" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ab01a44ddc71b7f2726da365b4f544eca" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken scene</definition>
        <argsstring></argsstring>
        <name>scene</name>
        <briefdescription>
<para>&quot;scene&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Fallback value for <ref refid="class_usd_lux_dome_light__1_1aeea1bf1cbe3f0f1f52a220ca5c45572c" kindref="member">UsdLuxDomeLight_1::GetPoleAxisAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="288" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ab964368204098efb041b332f3dc3db7d" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken shadowLink</definition>
        <argsstring></argsstring>
        <name>shadowLink</name>
        <briefdescription>
<para>&quot;shadowLink&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>This token represents the collection name to use with <ref refid="class_usd_collection_a_p_i" kindref="compound">UsdCollectionAPI</ref> to represent shadow-linking of a prim with an applied <ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="292" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a03711839af5138bc671da1992cfff665" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken treatAsLine</definition>
        <argsstring></argsstring>
        <name>treatAsLine</name>
        <briefdescription>
<para>&quot;treatAsLine&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_cylinder_light" kindref="compound">UsdLuxCylinderLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="296" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a99ba8aa11de174e04626e2a5b291b834" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken treatAsPoint</definition>
        <argsstring></argsstring>
        <name>treatAsPoint</name>
        <briefdescription>
<para>&quot;treatAsPoint&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_usd_lux_sphere_light" kindref="compound">UsdLuxSphereLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="300" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a67432c1d1ae4773aa6e76f237440af1e" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken VolumeLight</definition>
        <argsstring></argsstring>
        <name>VolumeLight</name>
        <briefdescription>
<para>&quot;VolumeLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Fallback value for <ref refid="class_usd_lux_volume_light_a_p_i" kindref="compound">UsdLuxVolumeLightAPI</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="304" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a7215f6430c3f0a8d47133865870b046d" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken Y</definition>
        <argsstring></argsstring>
        <name>Y</name>
        <briefdescription>
<para>&quot;Y&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_dome_light__1_1aeea1bf1cbe3f0f1f52a220ca5c45572c" kindref="member">UsdLuxDomeLight_1::GetPoleAxisAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="308" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a80a15dc3c3eb7af372e026c83ddb5887" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken Z</definition>
        <argsstring></argsstring>
        <name>Z</name>
        <briefdescription>
<para>&quot;Z&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Possible value for <ref refid="class_usd_lux_dome_light__1_1aeea1bf1cbe3f0f1f52a220ca5c45572c" kindref="member">UsdLuxDomeLight_1::GetPoleAxisAttr()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="312" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a82c72dc94f37426e95a5d1eef1139249" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken BoundableLightBase</definition>
        <argsstring></argsstring>
        <name>BoundableLightBase</name>
        <briefdescription>
<para>&quot;BoundableLightBase&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_boundable_light_base" kindref="compound">UsdLuxBoundableLightBase</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="316" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a6f9bd00bff3f87cd2ec2d8bb96929388" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken CylinderLight</definition>
        <argsstring></argsstring>
        <name>CylinderLight</name>
        <briefdescription>
<para>&quot;CylinderLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_cylinder_light" kindref="compound">UsdLuxCylinderLight</ref>, Fallback value for <ref refid="class_usd_lux_cylinder_light" kindref="compound">UsdLuxCylinderLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="320" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ab3b6f27404183bd54854eb472a9631da" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken DiskLight</definition>
        <argsstring></argsstring>
        <name>DiskLight</name>
        <briefdescription>
<para>&quot;DiskLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_disk_light" kindref="compound">UsdLuxDiskLight</ref>, Fallback value for <ref refid="class_usd_lux_disk_light" kindref="compound">UsdLuxDiskLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="324" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ac1a6ff5b64240b4f8868000fd44a1ead" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken DistantLight</definition>
        <argsstring></argsstring>
        <name>DistantLight</name>
        <briefdescription>
<para>&quot;DistantLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_distant_light" kindref="compound">UsdLuxDistantLight</ref>, Fallback value for <ref refid="class_usd_lux_distant_light" kindref="compound">UsdLuxDistantLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="328" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="328" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1ad9e8456082867d60a2169338cee4c648" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken DomeLight</definition>
        <argsstring></argsstring>
        <name>DomeLight</name>
        <briefdescription>
<para>&quot;DomeLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref>, Schema family for <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref>, Fallback value for <ref refid="class_usd_lux_dome_light" kindref="compound">UsdLuxDomeLight</ref> schema attribute light:shaderId, Fallback value for <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="332" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a0f42c0f6f96e1a2718fda34e53f54ceb" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken DomeLight_1</definition>
        <argsstring></argsstring>
        <name>DomeLight_1</name>
        <briefdescription>
<para>&quot;DomeLight_1&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer for <ref refid="class_usd_lux_dome_light__1" kindref="compound">UsdLuxDomeLight_1</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="336" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aac63c4b2901df32eda4cd335df49d98d" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken GeometryLight</definition>
        <argsstring></argsstring>
        <name>GeometryLight</name>
        <briefdescription>
<para>&quot;GeometryLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_geometry_light" kindref="compound">UsdLuxGeometryLight</ref>, Fallback value for <ref refid="class_usd_lux_geometry_light" kindref="compound">UsdLuxGeometryLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="340" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a8f6efd1c1c7fd10e4a9340f93aa1220a" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken LightAPI</definition>
        <argsstring></argsstring>
        <name>LightAPI</name>
        <briefdescription>
<para>&quot;LightAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_light_a_p_i" kindref="compound">UsdLuxLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="344" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1af9bfd2dfcc52780af3079c6c93fcbf18" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken LightFilter</definition>
        <argsstring></argsstring>
        <name>LightFilter</name>
        <briefdescription>
<para>&quot;LightFilter&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_light_filter" kindref="compound">UsdLuxLightFilter</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="348" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1abe2fef11f26b7bd70cd9b869f3e6827e" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken LightListAPI</definition>
        <argsstring></argsstring>
        <name>LightListAPI</name>
        <briefdescription>
<para>&quot;LightListAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_light_list_a_p_i" kindref="compound">UsdLuxLightListAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="352" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a06da71ec80d13f6f54eed6f7cf1a5e8e" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken ListAPI</definition>
        <argsstring></argsstring>
        <name>ListAPI</name>
        <briefdescription>
<para>&quot;ListAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_list_a_p_i" kindref="compound">UsdLuxListAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="356" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1abf7995c7cc542a24652a8b5795c1a4cd" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken MeshLightAPI</definition>
        <argsstring></argsstring>
        <name>MeshLightAPI</name>
        <briefdescription>
<para>&quot;MeshLightAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_mesh_light_a_p_i" kindref="compound">UsdLuxMeshLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="360" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1af4f1b76e3e4089381a7aff6fa05ed750" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken NonboundableLightBase</definition>
        <argsstring></argsstring>
        <name>NonboundableLightBase</name>
        <briefdescription>
<para>&quot;NonboundableLightBase&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_nonboundable_light_base" kindref="compound">UsdLuxNonboundableLightBase</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="364" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a4528648925b2be08de778985450f6715" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken PluginLight</definition>
        <argsstring></argsstring>
        <name>PluginLight</name>
        <briefdescription>
<para>&quot;PluginLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_plugin_light" kindref="compound">UsdLuxPluginLight</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="368" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a9ba64409c35610d7ef3b4306e9b1a651" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken PluginLightFilter</definition>
        <argsstring></argsstring>
        <name>PluginLightFilter</name>
        <briefdescription>
<para>&quot;PluginLightFilter&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_plugin_light_filter" kindref="compound">UsdLuxPluginLightFilter</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="372" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aed8e7c4b304cf7b9811afaca83f84493" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken PortalLight</definition>
        <argsstring></argsstring>
        <name>PortalLight</name>
        <briefdescription>
<para>&quot;PortalLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_portal_light" kindref="compound">UsdLuxPortalLight</ref>, Fallback value for <ref refid="class_usd_lux_portal_light" kindref="compound">UsdLuxPortalLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="376" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aab431819e11f5a97956bf906cb1b5505" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken RectLight</definition>
        <argsstring></argsstring>
        <name>RectLight</name>
        <briefdescription>
<para>&quot;RectLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_rect_light" kindref="compound">UsdLuxRectLight</ref>, Fallback value for <ref refid="class_usd_lux_rect_light" kindref="compound">UsdLuxRectLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="380" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a5172e0eb0584bc5c86a86c83eb5751c9" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken ShadowAPI</definition>
        <argsstring></argsstring>
        <name>ShadowAPI</name>
        <briefdescription>
<para>&quot;ShadowAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_shadow_a_p_i" kindref="compound">UsdLuxShadowAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="384" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="384" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1aadcf126a8ddee6d0ef25afaeb4ea1249" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken ShapingAPI</definition>
        <argsstring></argsstring>
        <name>ShapingAPI</name>
        <briefdescription>
<para>&quot;ShapingAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_shaping_a_p_i" kindref="compound">UsdLuxShapingAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="388" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a3623afa55df7526eb71f294674a7c001" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken SphereLight</definition>
        <argsstring></argsstring>
        <name>SphereLight</name>
        <briefdescription>
<para>&quot;SphereLight&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_sphere_light" kindref="compound">UsdLuxSphereLight</ref>, Fallback value for <ref refid="class_usd_lux_sphere_light" kindref="compound">UsdLuxSphereLight</ref> schema attribute light:shaderId </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="392" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="392" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a4b9577819b552f4dcc291d9262c2b7b3" prot="public" static="no" mutable="no">
        <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref></type>
        <definition>const TfToken VolumeLightAPI</definition>
        <argsstring></argsstring>
        <name>VolumeLightAPI</name>
        <briefdescription>
<para>&quot;VolumeLightAPI&quot; </para>
        </briefdescription>
        <detaileddescription>
<para>Schema identifer and family for <ref refid="class_usd_lux_volume_light_a_p_i" kindref="compound">UsdLuxVolumeLightAPI</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="396" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_usd_lux_tokens_type_1a06ed732eeddfeba03daedd49167195fa" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_tf_token" kindref="compound">TfToken</ref> &gt;</type>
        <definition>const std::vector&lt;TfToken&gt; allTokens</definition>
        <argsstring></argsstring>
        <name>allTokens</name>
        <briefdescription>
<para>A vector of all of the tokens listed above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="398" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="398" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_usd_lux_tokens_type_1a942b68263b0fc53803bc39c9956d3ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDLUX_API</type>
        <definition>USDLUX_API UsdLuxTokensType</definition>
        <argsstring>()</argsstring>
        <name>UsdLuxTokensType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdLux/tokens.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="usd_2usd_lux_2tokens_8h_1a90b43d1b550e2d801daa346910c95abd" kindref="member">UsdLuxTokens</ref> provides static, efficient <ref refid="class_tf_token" kindref="compound">TfTokens</ref> for use in all public USD API. </para>
    </briefdescription>
    <detaileddescription>
<para>These tokens are auto-generated from the module&apos;s schema, representing property names, for when you need to fetch an attribute or relationship directly by name, e.g. <ref refid="class_usd_prim_1a31225ac7165f58726f000ab1d67e9e61" kindref="member">UsdPrim::GetAttribute()</ref>, in the most efficient manner, and allow the compiler to verify that you spelled the name correctly.</para>
<para>UsdLuxTokens also contains all of the <emphasis>allowedTokens</emphasis> values declared for schema builtin attributes of &apos;token&apos; scene description type. Use UsdLuxTokens like so:</para>
<para><programlisting><codeline><highlight class="normal">gprim.GetMyTokenValuedAttr().Set(UsdLuxTokens-&gt;angular);</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="7676">
        <label>UsdLuxTokensType</label>
        <link refid="struct_usd_lux_tokens_type"/>
        <childnode refid="7677" relation="usage">
          <edgelabel>shadowLink</edgelabel>
          <edgelabel>inputsShapingFocusTint</edgelabel>
          <edgelabel>PortalLight</edgelabel>
          <edgelabel>PluginLightFilter</edgelabel>
          <edgelabel>inputsShapingFocus</edgelabel>
          <edgelabel>inputsShadowFalloffGamma</edgelabel>
          <edgelabel>inputsNormalize</edgelabel>
          <edgelabel>inputsColorTemperature</edgelabel>
          <edgelabel>inputsColor</edgelabel>
          <edgelabel>ShadowAPI</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="7677">
        <label>TfToken</label>
        <link refid="class_tf_token"/>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdLux/tokens.h" line="63" column="1" bodyfile="pxr/usd/usdLux/tokens.h" bodystart="63" bodyend="399"/>
    <listofallmembers>
      <member refid="struct_usd_lux_tokens_type_1a06ed732eeddfeba03daedd49167195fa" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>allTokens</name></member>
      <member refid="struct_usd_lux_tokens_type_1a7000770a2eca2853e9016a0e67789ba4" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>angular</name></member>
      <member refid="struct_usd_lux_tokens_type_1ae23bda00ad5964f859b214be0fabe429" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>automatic</name></member>
      <member refid="struct_usd_lux_tokens_type_1a82c72dc94f37426e95a5d1eef1139249" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>BoundableLightBase</name></member>
      <member refid="struct_usd_lux_tokens_type_1a3b29e1d042126acfcd72bdd3eeab6c8b" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>collectionFilterLinkIncludeRoot</name></member>
      <member refid="struct_usd_lux_tokens_type_1a986a288039074f3e926cc21f87afbd72" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>collectionLightLinkIncludeRoot</name></member>
      <member refid="struct_usd_lux_tokens_type_1ab63e0e7d8e66dc6ba8e4e7ed9f214af5" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>collectionShadowLinkIncludeRoot</name></member>
      <member refid="struct_usd_lux_tokens_type_1a7ca735b273aa296e5afb9df41b8dcecf" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>consumeAndContinue</name></member>
      <member refid="struct_usd_lux_tokens_type_1a3a2625fc4bac4d6e7f39250eb9c2db8a" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>consumeAndHalt</name></member>
      <member refid="struct_usd_lux_tokens_type_1a6ffd356582256d029ae325a1e139902e" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>cubeMapVerticalCross</name></member>
      <member refid="struct_usd_lux_tokens_type_1a6f9bd00bff3f87cd2ec2d8bb96929388" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>CylinderLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1ab3b6f27404183bd54854eb472a9631da" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>DiskLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1ac1a6ff5b64240b4f8868000fd44a1ead" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>DistantLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1ad9e8456082867d60a2169338cee4c648" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>DomeLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a0f42c0f6f96e1a2718fda34e53f54ceb" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>DomeLight_1</name></member>
      <member refid="struct_usd_lux_tokens_type_1a46b1c612a5f7096767831c10690b6a29" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>filterLink</name></member>
      <member refid="struct_usd_lux_tokens_type_1a2767a5bd86fd72ce499cde27f1811716" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>geometry</name></member>
      <member refid="struct_usd_lux_tokens_type_1aac63c4b2901df32eda4cd335df49d98d" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>GeometryLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1ae99720f7674afbd5a967ceeafadd2b42" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>guideRadius</name></member>
      <member refid="struct_usd_lux_tokens_type_1ac580431f5dcd08031407561061396b56" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>ignore</name></member>
      <member refid="struct_usd_lux_tokens_type_1a604b524a96326b2bc4c46d37925ebb59" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>independent</name></member>
      <member refid="struct_usd_lux_tokens_type_1a75c537605e36935054d86ae2febf2c55" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsAngle</name></member>
      <member refid="struct_usd_lux_tokens_type_1aee3f2f63195269d86d0e7c6feeace503" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsColor</name></member>
      <member refid="struct_usd_lux_tokens_type_1a4e74105c1485bef26877f0469449acd0" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsColorTemperature</name></member>
      <member refid="struct_usd_lux_tokens_type_1a6bd8e28c129a54b71740cf5bf292d709" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsDiffuse</name></member>
      <member refid="struct_usd_lux_tokens_type_1afc395204d5537424f20826e0249e3837" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsEnableColorTemperature</name></member>
      <member refid="struct_usd_lux_tokens_type_1a953b59379bb57f7f35d3333bca4dc44e" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsExposure</name></member>
      <member refid="struct_usd_lux_tokens_type_1af7417822e4348bc46d0164229b3816e9" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsHeight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a7b1d9e9cc863e8172060225fb7bae62c" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsIntensity</name></member>
      <member refid="struct_usd_lux_tokens_type_1a3c7ea2ea6718de8198403e80441e2160" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsLength</name></member>
      <member refid="struct_usd_lux_tokens_type_1acf69576a4d996ee6974d3bed252125e3" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsNormalize</name></member>
      <member refid="struct_usd_lux_tokens_type_1abe580db34d1dab697b23849dc6ec2c04" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsRadius</name></member>
      <member refid="struct_usd_lux_tokens_type_1ad79a47357935f0862264f460c260e758" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShadowColor</name></member>
      <member refid="struct_usd_lux_tokens_type_1a0750d1eff41f79b1823197d6b8d9a3d1" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShadowDistance</name></member>
      <member refid="struct_usd_lux_tokens_type_1a62af1bfe75d102fe4327b5acc7609b76" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShadowEnable</name></member>
      <member refid="struct_usd_lux_tokens_type_1a04aa2f42578a852eb3ee88e8cd1347b1" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShadowFalloff</name></member>
      <member refid="struct_usd_lux_tokens_type_1a9d9188876e49a06e172e66bc41eff945" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShadowFalloffGamma</name></member>
      <member refid="struct_usd_lux_tokens_type_1a9a1c8a8f257bb965764dce43a8702401" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingConeAngle</name></member>
      <member refid="struct_usd_lux_tokens_type_1aaa190a809375bf74a342e949141acaa8" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingConeSoftness</name></member>
      <member refid="struct_usd_lux_tokens_type_1ab7dd2e9858da81784243fe880c1595d5" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingFocus</name></member>
      <member refid="struct_usd_lux_tokens_type_1a67dfaef79d44a9f02a972c1b1a28ec34" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingFocusTint</name></member>
      <member refid="struct_usd_lux_tokens_type_1a9a056f98a7ddc31061d8ca89757b00bb" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingIesAngleScale</name></member>
      <member refid="struct_usd_lux_tokens_type_1a3d292fcf666134c0e3d402b6e339d157" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingIesFile</name></member>
      <member refid="struct_usd_lux_tokens_type_1aabef934604bc3c7bc92bd0bada6e5ad2" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsShapingIesNormalize</name></member>
      <member refid="struct_usd_lux_tokens_type_1aa65c2fa531c26090cba6f6c473734e89" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsSpecular</name></member>
      <member refid="struct_usd_lux_tokens_type_1a7818b9cba88ddcadd0c94dd61c23b8b9" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsTextureFile</name></member>
      <member refid="struct_usd_lux_tokens_type_1a90108deeb1f2b8b889dea9960a113286" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsTextureFormat</name></member>
      <member refid="struct_usd_lux_tokens_type_1a2f9685b6e9dfd468813c80f5423963bb" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>inputsWidth</name></member>
      <member refid="struct_usd_lux_tokens_type_1a1058a81ebcb8fc856a6431912d00f4a0" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>latlong</name></member>
      <member refid="struct_usd_lux_tokens_type_1a8f6efd1c1c7fd10e4a9340f93aa1220a" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>LightAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1af9bfd2dfcc52780af3079c6c93fcbf18" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>LightFilter</name></member>
      <member refid="struct_usd_lux_tokens_type_1adfa875c58733ca20a7a67d04ff7baa8a" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightFilters</name></member>
      <member refid="struct_usd_lux_tokens_type_1a203755d1740f3678af1c8e0534c81264" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightFilterShaderId</name></member>
      <member refid="struct_usd_lux_tokens_type_1a88cd5a739f8f0f619a78cf8199213b7a" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightLink</name></member>
      <member refid="struct_usd_lux_tokens_type_1ac24b1cb3c7b3e066dea8b575b0b49eed" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightList</name></member>
      <member refid="struct_usd_lux_tokens_type_1abe2fef11f26b7bd70cd9b869f3e6827e" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>LightListAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1a69dcc937bde60dfdb7dd356d7e7e01c2" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightListCacheBehavior</name></member>
      <member refid="struct_usd_lux_tokens_type_1ae6f99e19ae8fa5c65e4d0712da4ebc5a" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightMaterialSyncMode</name></member>
      <member refid="struct_usd_lux_tokens_type_1acec2e47a2c9442a9bff965d4e9d3db77" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>lightShaderId</name></member>
      <member refid="struct_usd_lux_tokens_type_1a06da71ec80d13f6f54eed6f7cf1a5e8e" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>ListAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1aad86eda821a2f9256883756cb534c90d" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>materialGlowTintsLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a8b5835380886e961a9f3cb21acd5c121" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>MeshLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1abf7995c7cc542a24652a8b5795c1a4cd" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>MeshLightAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1a49fbcee1b7d60508e346167e17811ad4" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>mirroredBall</name></member>
      <member refid="struct_usd_lux_tokens_type_1a70efef8598dfe8ed4cac3aba02099d86" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>noMaterialResponse</name></member>
      <member refid="struct_usd_lux_tokens_type_1af4f1b76e3e4089381a7aff6fa05ed750" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>NonboundableLightBase</name></member>
      <member refid="struct_usd_lux_tokens_type_1a3e49ff5b7a588efa9d3afae83d1ee402" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>orientToStageUpAxis</name></member>
      <member refid="struct_usd_lux_tokens_type_1a4528648925b2be08de778985450f6715" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>PluginLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a9ba64409c35610d7ef3b4306e9b1a651" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>PluginLightFilter</name></member>
      <member refid="struct_usd_lux_tokens_type_1a830198c39694ab23dc92600c7459bf20" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>poleAxis</name></member>
      <member refid="struct_usd_lux_tokens_type_1aed8e7c4b304cf7b9811afaca83f84493" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>PortalLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a138deb89f2df96e1144d7df89cb2f32f" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>portals</name></member>
      <member refid="struct_usd_lux_tokens_type_1aab431819e11f5a97956bf906cb1b5505" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>RectLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1ab01a44ddc71b7f2726da365b4f544eca" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>scene</name></member>
      <member refid="struct_usd_lux_tokens_type_1a5172e0eb0584bc5c86a86c83eb5751c9" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>ShadowAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1ab964368204098efb041b332f3dc3db7d" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>shadowLink</name></member>
      <member refid="struct_usd_lux_tokens_type_1aadcf126a8ddee6d0ef25afaeb4ea1249" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>ShapingAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1a3623afa55df7526eb71f294674a7c001" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>SphereLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a03711839af5138bc671da1992cfff665" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>treatAsLine</name></member>
      <member refid="struct_usd_lux_tokens_type_1a99ba8aa11de174e04626e2a5b291b834" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>treatAsPoint</name></member>
      <member refid="struct_usd_lux_tokens_type_1a942b68263b0fc53803bc39c9956d3ca9" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>UsdLuxTokensType</name></member>
      <member refid="struct_usd_lux_tokens_type_1a67432c1d1ae4773aa6e76f237440af1e" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>VolumeLight</name></member>
      <member refid="struct_usd_lux_tokens_type_1a4b9577819b552f4dcc291d9262c2b7b3" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>VolumeLightAPI</name></member>
      <member refid="struct_usd_lux_tokens_type_1a7215f6430c3f0a8d47133865870b046d" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>Y</name></member>
      <member refid="struct_usd_lux_tokens_type_1a80a15dc3c3eb7af372e026c83ddb5887" prot="public" virt="non-virtual"><scope>UsdLuxTokensType</scope><name>Z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
