<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="file_format_8h" kind="file" language="C++">
    <compoundname>fileFormat.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="ar_8h" local="yes">pxr/usd/ar/ar.h</includes>
    <includes refid="usd_2sdf_2api_8h" local="yes">pxr/usd/sdf/api.h</includes>
    <includes refid="declare_handles_8h" local="yes">pxr/usd/sdf/declareHandles.h</includes>
    <includes refid="declare_ptrs_8h" local="yes">pxr/base/tf/declarePtrs.h</includes>
    <includes refid="ref_base_8h" local="yes">pxr/base/tf/refBase.h</includes>
    <includes refid="static_tokens_8h" local="yes">pxr/base/tf/staticTokens.h</includes>
    <includes refid="token_8h" local="yes">pxr/base/tf/token.h</includes>
    <includes refid="type_8h" local="yes">pxr/base/tf/type.h</includes>
    <includes refid="weak_base_8h" local="yes">pxr/base/tf/weakBase.h</includes>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includedby refid="dynamic_file_format_interface_8h" local="yes">pxr/usd/pcp/dynamicFileFormatInterface.h</includedby>
    <includedby refid="text_file_format_8h" local="yes">pxr/usd/sdf/textFileFormat.h</includedby>
    <includedby refid="usdc_file_format_8h" local="yes">pxr/usd/usd/usdcFileFormat.h</includedby>
    <includedby refid="usd_file_format_8h" local="yes">pxr/usd/usd/usdFileFormat.h</includedby>
    <includedby refid="usdz_file_format_8h" local="yes">pxr/usd/usd/usdzFileFormat.h</includedby>
    <incdepgraph>
      <node id="173520">
        <label>locale</label>
      </node>
      <node id="173544">
        <label>atomic</label>
      </node>
      <node id="173555">
        <label>pxr/base/tf/staticData.h</label>
        <link refid="static_data_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173509" relation="include">
        </childnode>
        <childnode refid="173554" relation="include">
        </childnode>
        <childnode refid="173544" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
      </node>
      <node id="173522">
        <label>stdarg.h</label>
      </node>
      <node id="173527">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="173528" relation="include">
        </childnode>
        <childnode refid="173529" relation="include">
        </childnode>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173502" relation="include">
        </childnode>
        <childnode refid="173530" relation="include">
        </childnode>
      </node>
      <node id="173569">
        <label>functional</label>
      </node>
      <node id="173501">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="173502" relation="include">
        </childnode>
      </node>
      <node id="173552">
        <label>boost/intrusive_ptr.hpp</label>
      </node>
      <node id="173529">
        <label>cstdint</label>
      </node>
      <node id="173540">
        <label>pxr/base/tf/refPtr.h</label>
        <link refid="ref_ptr_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173513" relation="include">
        </childnode>
        <childnode refid="173524" relation="include">
        </childnode>
        <childnode refid="173541" relation="include">
        </childnode>
        <childnode refid="173542" relation="include">
        </childnode>
        <childnode refid="173545" relation="include">
        </childnode>
        <childnode refid="173546" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173509" relation="include">
        </childnode>
        <childnode refid="173507" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
        <childnode refid="173547" relation="include">
        </childnode>
      </node>
      <node id="173550">
        <label>pxr/base/tf/declarePtrs.h</label>
        <link refid="declare_ptrs_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173551" relation="include">
        </childnode>
        <childnode refid="173540" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
      </node>
      <node id="173499">
        <label>pxr/usd/ar/ar.h</label>
        <link refid="ar_8h_source"/>
      </node>
      <node id="173519">
        <label>pxr/base/tf/diagnosticHelper.h</label>
        <link refid="diagnostic_helper_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173514" relation="include">
        </childnode>
        <childnode refid="173502" relation="include">
        </childnode>
        <childnode refid="173520" relation="include">
        </childnode>
        <childnode refid="173521" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
      </node>
      <node id="173560">
        <label>pxr/base/arch/pragmas.h</label>
        <link refid="pragmas_8h"/>
        <childnode refid="173502" relation="include">
        </childnode>
      </node>
      <node id="173531">
        <label>cmath</label>
      </node>
      <node id="173525">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173516" relation="include">
        </childnode>
        <childnode refid="173526" relation="include">
        </childnode>
        <childnode refid="173527" relation="include">
        </childnode>
        <childnode refid="173532" relation="include">
        </childnode>
        <childnode refid="173533" relation="include">
        </childnode>
      </node>
      <node id="173542">
        <label>pxr/base/tf/refBase.h</label>
        <link refid="ref_base_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173543" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
      </node>
      <node id="173559">
        <label>pxr/base/tf/pointerAndBits.h</label>
        <link refid="pointer_and_bits_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173560" relation="include">
        </childnode>
        <childnode refid="173529" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
        <childnode refid="173533" relation="include">
        </childnode>
      </node>
      <node id="173506">
        <label>string</label>
      </node>
      <node id="173514">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173501" relation="include">
        </childnode>
      </node>
      <node id="173535">
        <label>map</label>
      </node>
      <node id="173528">
        <label>cinttypes</label>
      </node>
      <node id="173498">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="173558">
        <label>unordered_set</label>
      </node>
      <node id="173570">
        <label>pxr/base/tf/type_Impl.h</label>
        <link refid="type___impl_8h_source"/>
        <childnode refid="173571" relation="include">
        </childnode>
      </node>
      <node id="173504">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173505" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
        <childnode refid="173507" relation="include">
        </childnode>
        <childnode refid="173508" relation="include">
        </childnode>
      </node>
      <node id="173500">
        <label>pxr/usd/sdf/api.h</label>
        <link refid="usd_2sdf_2api_8h_source"/>
        <childnode refid="173501" relation="include">
        </childnode>
      </node>
      <node id="173518">
        <label>stddef.h</label>
      </node>
      <node id="173516">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173502" relation="include">
        </childnode>
      </node>
      <node id="173554">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="173502" relation="include">
        </childnode>
      </node>
      <node id="173543">
        <label>pxr/base/tf/refCount.h</label>
        <link refid="ref_count_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173527" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173544" relation="include">
        </childnode>
      </node>
      <node id="173545">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173507" relation="include">
        </childnode>
      </node>
      <node id="173549">
        <label>pxr/base/tf/expiryNotifier.h</label>
        <link refid="expiry_notifier_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173509" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
      </node>
      <node id="173503">
        <label>pxr/usd/sdf/declareHandles.h</label>
        <link refid="declare_handles_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173500" relation="include">
        </childnode>
        <childnode refid="173504" relation="include">
        </childnode>
        <childnode refid="173509" relation="include">
        </childnode>
        <childnode refid="173510" relation="include">
        </childnode>
        <childnode refid="173523" relation="include">
        </childnode>
        <childnode refid="173550" relation="include">
        </childnode>
        <childnode refid="173537" relation="include">
        </childnode>
        <childnode refid="173507" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
        <childnode refid="173552" relation="include">
        </childnode>
      </node>
      <node id="173566">
        <label>boost/preprocessor/seq/size.hpp</label>
      </node>
      <node id="173521">
        <label>any</label>
      </node>
      <node id="173530">
        <label>sys/types.h</label>
      </node>
      <node id="173523">
        <label>pxr/base/tf/weakPtrFacade.h</label>
        <link refid="weak_ptr_facade_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173510" relation="include">
        </childnode>
        <childnode refid="173524" relation="include">
        </childnode>
        <childnode refid="173540" relation="include">
        </childnode>
        <childnode refid="173548" relation="include">
        </childnode>
        <childnode refid="173504" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
      </node>
      <node id="173507">
        <label>typeinfo</label>
      </node>
      <node id="173551">
        <label>pxr/base/tf/weakPtr.h</label>
        <link refid="weak_ptr_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173541" relation="include">
        </childnode>
        <childnode refid="173540" relation="include">
        </childnode>
        <childnode refid="173525" relation="include">
        </childnode>
        <childnode refid="173548" relation="include">
        </childnode>
        <childnode refid="173523" relation="include">
        </childnode>
        <childnode refid="173547" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
      </node>
      <node id="173556">
        <label>pxr/base/tf/token.h</label>
        <link refid="token_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173513" relation="include">
        </childnode>
        <childnode refid="173524" relation="include">
        </childnode>
        <childnode refid="173557" relation="include">
        </childnode>
        <childnode refid="173559" relation="include">
        </childnode>
        <childnode refid="173544" relation="include">
        </childnode>
        <childnode refid="173561" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
        <childnode refid="173537" relation="include">
        </childnode>
      </node>
      <node id="173571">
        <label>pxr/base/tf/mallocTag.h</label>
        <link refid="malloc_tag_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173544" relation="include">
        </childnode>
        <childnode refid="173572" relation="include">
        </childnode>
        <childnode refid="173529" relation="include">
        </childnode>
        <childnode refid="173561" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
      </node>
      <node id="173526">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173502" relation="include">
        </childnode>
        <childnode refid="173527" relation="include">
        </childnode>
        <childnode refid="173531" relation="include">
        </childnode>
      </node>
      <node id="173539">
        <label>vector</label>
      </node>
      <node id="173515">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="173501" relation="include">
        </childnode>
      </node>
      <node id="173533">
        <label>utility</label>
      </node>
      <node id="173511">
        <label>pxr/base/arch/function.h</label>
        <link refid="function_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173505" relation="include">
        </childnode>
        <childnode refid="173512" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
      </node>
      <node id="173541">
        <label>pxr/base/tf/nullPtr.h</label>
        <link refid="null_ptr_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
      </node>
      <node id="173562">
        <label>boost/preprocessor/punctuation/comma_if.hpp</label>
      </node>
      <node id="173502">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="173553">
        <label>pxr/base/tf/staticTokens.h</label>
        <link refid="static_tokens_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173554" relation="include">
        </childnode>
        <childnode refid="173555" relation="include">
        </childnode>
        <childnode refid="173556" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
        <childnode refid="173562" relation="include">
        </childnode>
        <childnode refid="173563" relation="include">
        </childnode>
        <childnode refid="173564" relation="include">
        </childnode>
        <childnode refid="173565" relation="include">
        </childnode>
        <childnode refid="173566" relation="include">
        </childnode>
      </node>
      <node id="173509">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="173502" relation="include">
        </childnode>
      </node>
      <node id="173524">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173525" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173534" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
        <childnode refid="173535" relation="include">
        </childnode>
        <childnode refid="173536" relation="include">
        </childnode>
        <childnode refid="173537" relation="include">
        </childnode>
        <childnode refid="173508" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
        <childnode refid="173533" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
      </node>
      <node id="173532">
        <label>math.h</label>
      </node>
      <node id="173561">
        <label>iosfwd</label>
      </node>
      <node id="173572">
        <label>cstdlib</label>
      </node>
      <node id="173517">
        <label>pxr/base/tf/callContext.h</label>
        <link refid="call_context_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173512" relation="include">
        </childnode>
        <childnode refid="173518" relation="include">
        </childnode>
      </node>
      <node id="173567">
        <label>pxr/base/tf/type.h</label>
        <link refid="type_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173568" relation="include">
        </childnode>
        <childnode refid="173546" relation="include">
        </childnode>
        <childnode refid="173561" relation="include">
        </childnode>
        <childnode refid="173536" relation="include">
        </childnode>
        <childnode refid="173537" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
        <childnode refid="173538" relation="include">
        </childnode>
        <childnode refid="173507" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
        <childnode refid="173570" relation="include">
        </childnode>
      </node>
      <node id="173547">
        <label>cstddef</label>
      </node>
      <node id="173497">
        <label>pxr/usd/sdf/fileFormat.h</label>
        <link refid="file_format_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173499" relation="include">
        </childnode>
        <childnode refid="173500" relation="include">
        </childnode>
        <childnode refid="173503" relation="include">
        </childnode>
        <childnode refid="173550" relation="include">
        </childnode>
        <childnode refid="173542" relation="include">
        </childnode>
        <childnode refid="173553" relation="include">
        </childnode>
        <childnode refid="173556" relation="include">
        </childnode>
        <childnode refid="173567" relation="include">
        </childnode>
        <childnode refid="173548" relation="include">
        </childnode>
        <childnode refid="173535" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
        <childnode refid="173539" relation="include">
        </childnode>
      </node>
      <node id="173546">
        <label>pxr/base/tf/typeFunctions.h</label>
        <link refid="type_functions_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173536" relation="include">
        </childnode>
      </node>
      <node id="173513">
        <label>pxr/base/tf/diagnosticLite.h</label>
        <link refid="diagnostic_lite_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173514" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173516" relation="include">
        </childnode>
        <childnode refid="173509" relation="include">
        </childnode>
        <childnode refid="173517" relation="include">
        </childnode>
        <childnode refid="173518" relation="include">
        </childnode>
      </node>
      <node id="173563">
        <label>boost/preprocessor/seq/filter.hpp</label>
      </node>
      <node id="173565">
        <label>boost/preprocessor/seq/for_each_i.hpp</label>
      </node>
      <node id="173538">
        <label>type_traits</label>
      </node>
      <node id="173537">
        <label>set</label>
      </node>
      <node id="173505">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="173501" relation="include">
        </childnode>
      </node>
      <node id="173512">
        <label>pxr/base/arch/functionLite.h</label>
        <link refid="function_lite_8h"/>
        <childnode refid="173502" relation="include">
        </childnode>
      </node>
      <node id="173534">
        <label>cstring</label>
      </node>
      <node id="173548">
        <label>pxr/base/tf/weakBase.h</label>
        <link refid="weak_base_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173549" relation="include">
        </childnode>
        <childnode refid="173540" relation="include">
        </childnode>
        <childnode refid="173544" relation="include">
        </childnode>
      </node>
      <node id="173536">
        <label>memory</label>
      </node>
      <node id="173568">
        <label>pxr/base/tf/registryManager.h</label>
        <link refid="registry_manager_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173514" relation="include">
        </childnode>
        <childnode refid="173554" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173569" relation="include">
        </childnode>
        <childnode refid="173507" relation="include">
        </childnode>
      </node>
      <node id="173510">
        <label>pxr/base/tf/diagnostic.h</label>
        <link refid="base_2tf_2diagnostic_8h"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173511" relation="include">
        </childnode>
        <childnode refid="173513" relation="include">
        </childnode>
        <childnode refid="173515" relation="include">
        </childnode>
        <childnode refid="173509" relation="include">
        </childnode>
        <childnode refid="173519" relation="include">
        </childnode>
        <childnode refid="173518" relation="include">
        </childnode>
        <childnode refid="173522" relation="include">
        </childnode>
        <childnode refid="173506" relation="include">
        </childnode>
      </node>
      <node id="173557">
        <label>pxr/base/tf/hashset.h</label>
        <link refid="hashset_8h_source"/>
        <childnode refid="173498" relation="include">
        </childnode>
        <childnode refid="173502" relation="include">
        </childnode>
        <childnode refid="173558" relation="include">
        </childnode>
      </node>
      <node id="173508">
        <label>typeindex</label>
      </node>
      <node id="173564">
        <label>boost/preprocessor/seq/for_each.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="173578">
        <label>pxr/usd/usd/usdFileFormat.h</label>
        <link refid="usd_file_format_8h_source"/>
      </node>
      <node id="173576">
        <label>pxr/usd/usd/usdaFileFormat.h</label>
        <link refid="usda_file_format_8h_source"/>
      </node>
      <node id="173577">
        <label>pxr/usd/usd/usdcFileFormat.h</label>
        <link refid="usdc_file_format_8h_source"/>
      </node>
      <node id="173579">
        <label>pxr/usd/usd/usdzFileFormat.h</label>
        <link refid="usdz_file_format_8h_source"/>
      </node>
      <node id="173574">
        <label>pxr/usd/pcp/dynamicFileFormatInterface.h</label>
        <link refid="dynamic_file_format_interface_8h_source"/>
      </node>
      <node id="173573">
        <label>pxr/usd/sdf/fileFormat.h</label>
        <link refid="file_format_8h"/>
        <childnode refid="173574" relation="include">
        </childnode>
        <childnode refid="173575" relation="include">
        </childnode>
        <childnode refid="173577" relation="include">
        </childnode>
        <childnode refid="173578" relation="include">
        </childnode>
        <childnode refid="173579" relation="include">
        </childnode>
      </node>
      <node id="173575">
        <label>pxr/usd/sdf/textFileFormat.h</label>
        <link refid="text_file_format_8h"/>
        <childnode refid="173576" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sdf_file_format" prot="public">SdfFileFormat</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="file_format_8h_1af79f9c765aa7a8729b1190bd0653c442" prot="public" static="no">
        <name>SDF_FILE_FORMAT_TOKENS</name>
        <initializer>((TargetArg, &quot;target&quot;))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="55" column="9" bodyfile="pxr/usd/sdf/fileFormat.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="file_format_8h_1af01d0b3a3b1e1cc098c3cf668d9da2fc" prot="public" static="no">
        <name>SDF_DEFINE_FILE_FORMAT</name>
        <param><defname>FileFormatClass</defname></param>
        <param><defname>BaseClass1</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
<para>Performs registrations needed for the specified file format class to be discovered by Sdf. </para>
        </briefdescription>
        <detaileddescription>
<para>This typically would be invoked in a TF_REGISTRY_FUNCTION in the source file defining the file format.</para>
<para>The first argument is the name of the file format class being registered. Subsequent arguments list the base classes of the file format. Since all file formats must ultimately derive from <ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>, there should be at least one base class specified.</para>
<para>For example:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>in<sp/>MyFileFormat.cpp</highlight></codeline>
<codeline><highlight class="normal">TF_REGISTRY_FUNCTION(TfType)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_DEFINE_FILE_FORMAT(MyFileFormat,<sp/>SdfFileFormat);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="553" column="9" bodyfile="pxr/usd/sdf/fileFormat.h" bodystart="553" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="file_format_8h_1a8c9a92243add97060120c897d51c214f" prot="public" static="no">
        <name>SDF_DEFINE_ABSTRACT_FILE_FORMAT</name>
        <param><defname>FileFormatClass</defname></param>
        <param><defname>BaseClass1</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
<para>Performs registrations needed for the specified abstract file format class. </para>
        </briefdescription>
        <detaileddescription>
<para>This is used to register types that serve as base classes for other concrete file format classes used by Sdf.</para>
<para>The first argument is the name of the file format class being registered. Subsequent arguments list the base classes of the file format. Since all file formats must ultimately derive from <ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>, there should be at least one base class specified.</para>
<para>For example:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>in<sp/>MyFileFormat.cpp</highlight></codeline>
<codeline><highlight class="normal">TF_REGISTRY_FUNCTION(TfType)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_DEFINE_ABSTRACT_FILE_FORMAT(MyFileFormat,<sp/>SdfFileFormat);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="587" column="9" bodyfile="pxr/usd/sdf/fileFormat.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="file_format_8h_1ab7556e2290d5075582c4aa84ad9d5ee5" prot="public" static="no">
        <name>SDF_FILE_FORMAT_FACTORY_ACCESS</name>
        <briefdescription>
<para>Provides access to allow file format classes to be instantiated from Sdf. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be specified in the class definition for concrete file format classes.</para>
<para>For example:</para>
<para><programlisting><codeline><highlight class="normal">//<sp/>in<sp/>MyFileFormat.h</highlight></codeline>
<codeline><highlight class="normal">class<sp/>MyFileFormat<sp/>:<sp/>public<sp/>SdfFileFormat</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_FILE_FORMAT_FACTORY_ACCESS;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>...</highlight></codeline>
<codeline><highlight class="normal">};</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="617" column="9" bodyfile="pxr/usd/sdf/fileFormat.h" bodystart="617" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="file_format_8h_1af85d90d608f035b06d09aa53ccca19f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SDF_DECLARE_HANDLES</definition>
        <argsstring>(SdfLayer)</argsstring>
        <name>SDF_DECLARE_HANDLES</name>
        <param>
          <type><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="file_format_8h_1aaf6e50bc2946fc47b91f61ef63fba2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SDF_DECLARE_HANDLES</definition>
        <argsstring>(SdfSpec)</argsstring>
        <name>SDF_DECLARE_HANDLES</name>
        <param>
          <type><ref refid="class_sdf_spec" kindref="compound">SdfSpec</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="file_format_8h_1a4ca561d4202f512785bc71d32075762e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TF_DECLARE_WEAK_AND_REF_PTRS</definition>
        <argsstring>(SdfAbstractData)</argsstring>
        <name>TF_DECLARE_WEAK_AND_REF_PTRS</name>
        <param>
          <type><ref refid="class_sdf_abstract_data" kindref="compound">SdfAbstractData</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="file_format_8h_1a3898df1c204e3439d3e5759f47a35a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TF_DECLARE_WEAK_AND_REF_PTRS</definition>
        <argsstring>(SdfFileFormat)</argsstring>
        <name>TF_DECLARE_WEAK_AND_REF_PTRS</name>
        <param>
          <type><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="file_format_8h_1a9f3da77e9af23f6d3ffabab3176031bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TF_DECLARE_PUBLIC_TOKENS</definition>
        <argsstring>(SdfFileFormatTokens, SDF_API, SDF_FILE_FORMAT_TOKENS)</argsstring>
        <name>TF_DECLARE_PUBLIC_TOKENS</name>
        <param>
          <type>SdfFileFormatTokens</type>
        </param>
        <param>
          <type>SDF_API</type>
        </param>
        <param>
          <type>SDF_FILE_FORMAT_TOKENS</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/sdf/fileFormat.h" line="58" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_USD_SDF_FILE_FORMAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_USD_SDF_FILE_FORMAT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/ar/ar.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/usd/sdf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="declare_handles_8h" kindref="compound">pxr/usd/sdf/declareHandles.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="declare_ptrs_8h" kindref="compound">pxr/base/tf/declarePtrs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ref_base_8h" kindref="compound">pxr/base/tf/refBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="static_tokens_8h" kindref="compound">pxr/base/tf/staticTokens.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="token_8h" kindref="compound">pxr/base/tf/token.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/type.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="weak_base_8h" kindref="compound">pxr/base/tf/weakBase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_ar_asset_info" kindref="compound">ArAssetInfo</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_layer_hints" kindref="compound">SdfLayerHints</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">SDF_DECLARE_HANDLES(<ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">SDF_DECLARE_HANDLES(<ref refid="class_sdf_spec" kindref="compound">SdfSpec</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="declare_ptrs_8h_1a82e60c4622cb84bba86c7ef61d37bf1f" kindref="member">TF_DECLARE_WEAK_AND_REF_PTRS</ref>(<ref refid="class_sdf_abstract_data" kindref="compound">SdfAbstractData</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="declare_ptrs_8h_1a82e60c4622cb84bba86c7ef61d37bf1f" kindref="member">TF_DECLARE_WEAK_AND_REF_PTRS</ref>(<ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_FILE_FORMAT_TOKENS<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((TargetArg,<sp/>&quot;target&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="static_tokens_8h_1a8bdc76162f07353ef4322a9c8ed044a4" kindref="member">TF_DECLARE_PUBLIC_TOKENS</ref>(SdfFileFormatTokens,<sp/>SDF_API,<sp/>SDF_FILE_FORMAT_TOKENS);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_sdf_file_format" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_tf_ref_base" kindref="compound">TfRefBase</ref></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_tf_weak_base" kindref="compound">TfWeakBase</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>&amp;<sp/><ref refid="class_sdf_file_format_1a3bd6905e6ee12562d4702db19fe6cc1f" kindref="member">GetSchema</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/><ref refid="class_sdf_file_format_1af94cee934d3f9f57ddec5d6ba4ab0f72" kindref="member">GetFormatId</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/><ref refid="class_sdf_file_format_1affc99189439fce34c0c63d91a476b1b8" kindref="member">GetTarget</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_sdf_file_format_1ae2231eaa1ca0583f91a97f07cd51f731" kindref="member">GetFileCookie</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/><ref refid="class_sdf_file_format_1ac2060c617124b513ccf799426ce149e1" kindref="member">GetVersionString</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1ad92ebb5ec62184ddbc8913e4f05db070" kindref="member">IsPrimaryFormatForExtensions</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/><ref refid="class_sdf_file_format_1ab332582e9e4898a6462207fefe608ba9" kindref="member">GetFileExtensions</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="class_sdf_file_format_1a855ff6edf7f38b3a8863f597ebe557c9" kindref="member">GetPrimaryFileExtension</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1ae5349dcbdcfd8c009af50d11c717e071" kindref="member">IsSupportedExtension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a688a3cc6628e445cc997e8952a434170" kindref="member">IsPackage</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_sdf_file_format_1ae20721adeae2ab3e3f03b468d7c938c2" kindref="member">GetPackageRootLayerPath</ref>(</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>resolvedPath)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>std::string&gt;<sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref><sp/><ref refid="class_sdf_file_format_1a830ffcfcd3441b645265536b05da4412" kindref="member">GetDefaultFileFormatArguments</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>SdfAbstractDataRefPtr</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_file_format_1a7e6fe1b90e69c2f271c631b2e0597b23" kindref="member">InitData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>&amp;<sp/>args)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>SdfAbstractDataRefPtr<sp/><ref refid="class_sdf_file_format_1adc9391d69494e36aae0cbb1ca7007526" kindref="member">InitDetachedData</ref>(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>&amp;<sp/>args)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_ref_ptr" kindref="compound">SdfLayerRefPtr</ref><sp/><ref refid="class_sdf_file_format_1a79344fd3d6748c5beee6198a41fcd141" kindref="member">NewLayer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SdfFileFormatConstPtr<sp/>&amp;fileFormat,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;identifier,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;realPath,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info" kindref="compound">ArAssetInfo</ref>&amp;<sp/>assetInfo,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref><sp/>&amp;args)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1ae5bee0843fce18d3c607c0b56b118319" kindref="member">ShouldSkipAnonymousReload</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a50928a94b9625eb1a149e07944ddb99d" kindref="member">ShouldReadAnonymousLayers</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1afa76b34e13314ffaf726f4799d4161ae" kindref="member">CanRead</ref>(</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>file)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a8621e64c229386ea8e743faaf3f34d68" kindref="member">Read</ref>(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metadataOnly)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a12d42db40bca59050733c4b40a818475" kindref="member">ReadDetached</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metadataOnly)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1aebd911a48918fd2cad75a72f3839f40e" kindref="member">WriteToFile</ref>(</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>&amp;<sp/>layer,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>filePath,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment<sp/>=<sp/>std::string(),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>&amp;<sp/>args<sp/>=<sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a6bce13cc06020cb090ebe6746208b459" kindref="member">ReadFromString</ref>(</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a3d7243749d4e00e091c4df98705316d9" kindref="member">WriteToStream</ref>(</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SdfSpecHandle<sp/>&amp;spec,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>out,</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>indent)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a3d36cf09ec2f2556ff6b1cb88823d0d0" kindref="member">WriteToString</ref>(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>&amp;<sp/>layer,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string*<sp/>str,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>comment<sp/>=<sp/>std::string())<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/><ref refid="class_sdf_file_format_1a848b6bb7cedf72cb78e402c4402fdbc0" kindref="member">GetExternalAssetDependencies</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>&amp;<sp/>layer)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a5f99ff74942b86a7aa1ec7c69a617b64" kindref="member">SupportsReading</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>this<sp/>file<sp/>format<sp/>supports<sp/>writing.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a27f2b45688a158acb95d1d00b6d82e0f" kindref="member">SupportsWriting</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>if<sp/>this<sp/>file<sp/>format<sp/>supports<sp/>editing.</highlight></codeline>
<codeline lineno="271"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a83eab906a0358ebdf94b03316bf66d80" kindref="member">SupportsEditing</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_sdf_file_format_1abcbb3a513cf28abac68c32f75dac4de2" kindref="member">GetFileExtension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/><ref refid="class_sdf_file_format_1a3eb382b2d773579a0fc353c2d6c63040" kindref="member">FindAllFileFormatExtensions</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;<sp/><ref refid="class_sdf_file_format_1a2fd6d75707af4e54f78e6a47bde4d772" kindref="member">FindAllDerivedFileFormatExtensions</ref>(</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_type" kindref="compound">TfType</ref>&amp;<sp/>baseType);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1ada2c1b75bce2485538862ecddc9285bc" kindref="member">FormatSupportsReading</ref>(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension,</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>target<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1add9fecbf8f4a1acac72dd5f9141f97ee" kindref="member">FormatSupportsWriting</ref>(</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>target<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1acab8762adf43caac7b35f784babb5ae4" kindref="member">FormatSupportsEditing</ref>(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>target<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SdfFileFormatConstPtr<sp/><ref refid="class_sdf_file_format_1a7217ccb019b97204c7e7cad86ee2fc92" kindref="member">FindById</ref>(</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SdfFileFormatConstPtr<sp/><ref refid="class_sdf_file_format_1ab9d67519992ef59d03eff5f9b5ca3728" kindref="member">FindByExtension</ref>(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>target<sp/>=<sp/>std::string());</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SdfFileFormatConstPtr<sp/><ref refid="class_sdf_file_format_1ab9d67519992ef59d03eff5f9b5ca3728" kindref="member">FindByExtension</ref>(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>path,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>&amp;<sp/>args);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>versionString,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>target,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>versionString,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>target,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension,</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>&amp;<sp/>schema);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>versionString,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>target,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>extension,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>&amp;&amp;<sp/>schema)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>versionString,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>target,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;extensions);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>versionString,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>target,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;extensions,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>&amp;<sp/>schema);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sdf_file_format" kindref="compound">SdfFileFormat</ref>(</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>formatId,</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>versionString,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>target,</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;extensions,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>&amp;&amp;<sp/>schema)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a6f9bde194003de8378da0fcbc8e7598d" kindref="member">~SdfFileFormat</ref>();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimally<sp/>break<sp/>layer<sp/>encapsulation<sp/>with<sp/>the<sp/>following<sp/>methods.<sp/><sp/>These</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>methods<sp/>are<sp/>also<sp/>intended<sp/>to<sp/>limit<sp/>the<sp/>need<sp/>for<sp/>SdfLayer<sp/>friendship<sp/>with<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SdfFileFormat<sp/>child<sp/>classes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a8d5aeef83f6b9e72f4b94bcbf5201d9f" kindref="member">_SetLayerData</ref>(</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,<sp/>SdfAbstractDataRefPtr&amp;<sp/>data);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a8d5aeef83f6b9e72f4b94bcbf5201d9f" kindref="member">_SetLayerData</ref>(</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,<sp/>SdfAbstractDataRefPtr&amp;<sp/>data,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer_hints" kindref="compound">SdfLayerHints</ref><sp/>hints);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>SdfAbstractDataConstPtr<sp/><ref refid="class_sdf_file_format_1a128bdfe095ed866d05dca1422f9136f6" kindref="member">_GetLayerData</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>&amp;<sp/>layer);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a4cb80cd45410b5f68e76996187d69e6a" kindref="member">_ReadAndCopyLayerDataToMemory</ref>(</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metadataOnly,</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>didCopyData<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref><sp/>*_InstantiateNewLayer(</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SdfFileFormatConstPtr<sp/>&amp;fileFormat,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;identifier,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;realPath,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_ar_asset_info" kindref="compound">ArAssetInfo</ref>&amp;<sp/>assetInfo,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref><sp/>&amp;args)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>File<sp/>format<sp/>subclasses<sp/>may<sp/>override<sp/>this<sp/>if<sp/>they<sp/>prefer<sp/>not<sp/>to<sp/>skip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reloading<sp/>anonymous<sp/>layers.<sp/><sp/>Default<sp/>implementation<sp/>returns<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_ShouldSkipAnonymousReload()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a12c9e8b7430b2a24447034e0716380aa" kindref="member">_ShouldReadAnonymousLayers</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>SdfAbstractDataRefPtr<sp/><ref refid="class_sdf_file_format_1ab4999d2f804fbd556476427ef20ea80e" kindref="member">_InitDetachedData</ref>(</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a1dfd2030337b6243cd6424fce7397590" kindref="member">FileFormatArguments</ref>&amp;<sp/>args)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_sdf_file_format_1a903006b206ab7fe0c8f9f645efa9dbc3" kindref="member">_ReadDetached</ref>(</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sdf_layer" kindref="compound">SdfLayer</ref>*<sp/>layer,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>resolvedPath,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>metadataOnly)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_sdf_schema_base" kindref="compound">SdfSchemaBase</ref>&amp;<sp/>_schema;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>_formatId;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>_target;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>_cookie;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref><sp/>_versionString;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>_extensions;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_isPrimaryFormat;</highlight></codeline>
<codeline lineno="512"><highlight class="normal">};</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>file<sp/>format<sp/>factory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Sdf_FileFormatFactoryBase<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_tf_type_1_1_factory_base" kindref="compound">TfType::FactoryBase</ref><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>SDF_API<sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~Sdf_FileFormatFactoryBase();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>SdfFileFormatRefPtr<sp/>New()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="519"><highlight class="normal">};</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>file<sp/>format<sp/>factory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Sdf_FileFormatFactory<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Sdf_FileFormatFactoryBase<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>SdfFileFormatRefPtr<sp/>New()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="526"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TfCreateRefPtr(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal">};</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="preprocessor">#ifdef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="file_format_8h_1af01d0b3a3b1e1cc098c3cf668d9da2fc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_DEFINE_FILE_FORMAT(FileFormatClass,<sp/>BaseClass1,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_DEFINE_FILE_FORMAT(...)<sp/>SdfDefineFileFormat&lt;__VA_ARGS__&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileFormat,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">...BaseFormats&gt;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SdfDefineFileFormat()</highlight></codeline>
<codeline lineno="559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_type_1a2812a06d6d2dbafc53b4f297d2aed030" kindref="member">TfType::Define</ref>&lt;FileFormat,<sp/><ref refid="struct_tf_type_1_1_bases" kindref="compound">TfType::Bases</ref>&lt;BaseFormats...&gt;&gt;()</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>SetFactory&lt;Sdf_FileFormatFactory&lt;FileFormat&gt;&gt;();</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="preprocessor">#ifdef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="file_format_8h_1a8c9a92243add97060120c897d51c214f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_DEFINE_ABSTRACT_FILE_FORMAT(FileFormatClass,<sp/>BaseClass1,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_DEFINE_ABSTRACT_FILE_FORMAT(...)<sp/>\</highlight></codeline>
<codeline lineno="590"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>SdfDefineAbstractFileFormat&lt;__VA_ARGS__&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FileFormat,<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">...BaseFormats&gt;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SdfDefineAbstractFileFormat()</highlight></codeline>
<codeline lineno="594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_tf_type_1a2812a06d6d2dbafc53b4f297d2aed030" kindref="member">TfType::Define</ref>&lt;FileFormat,<sp/><ref refid="struct_tf_type_1_1_bases" kindref="compound">TfType::Bases</ref>&lt;BaseFormats...&gt;&gt;();</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="preprocessor">#ifdef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="file_format_8h_1ab7556e2290d5075582c4aa84ad9d5ee5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_FILE_FORMAT_FACTORY_ACCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SDF_FILE_FORMAT_FACTORY_ACCESS<sp/>\</highlight></codeline>
<codeline lineno="620"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>template&lt;typename<sp/>T&gt;<sp/>friend<sp/>class<sp/>Sdf_FileFormatFactory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="pxr/usd/sdf/fileFormat.h"/>
  </compounddef>
</doxygen>
