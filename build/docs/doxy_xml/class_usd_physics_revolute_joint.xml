<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_usd_physics_revolute_joint" kind="class" language="C++" prot="public">
    <compoundname>UsdPhysicsRevoluteJoint</compoundname>
    <basecompoundref refid="class_usd_physics_joint" prot="public" virt="non-virtual">UsdPhysicsJoint</basecompoundref>
    <includes refid="revolute_joint_8h" local="no">revoluteJoint.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_physics_revolute_joint_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" static="yes" mutable="no">
        <type>const <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>const UsdSchemaKind schemaKind</definition>
        <argsstring></argsstring>
        <name>schemaKind</name>
        <initializer>= <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741aa6650141c3d230f8e4e51461e1d9e645" kindref="member">UsdSchemaKind::ConcreteTyped</ref></initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="69" column="1" bodyfile="pxr/usd/usdPhysics/revoluteJoint.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_physics_revolute_joint_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="147" column="1" bodyfile="pxr/usd/usdPhysics/revoluteJoint.h" bodystart="147" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a40a1992b2627c865bfd55403af659afa" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsRevoluteJoint</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdPhysicsRevoluteJoint</name>
        <param>
          <type>const <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> &amp;</type>
          <declname>prim</declname>
          <defval><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref>()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_revolute_joint" kindref="compound">UsdPhysicsRevoluteJoint</ref> on <ref refid="class_usd_prim" kindref="compound">UsdPrim</ref> <computeroutput>prim</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_physics_revolute_joint_1a53698d87f82049033bd77f6430906d4c" kindref="member">UsdPhysicsRevoluteJoint::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="75" column="1" bodyfile="pxr/usd/usdPhysics/revoluteJoint.h" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1ac0f2230c7ebfacb88a56497a18cd1628" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsRevoluteJoint</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdPhysicsRevoluteJoint</name>
        <param>
          <type>const <ref refid="class_usd_schema_base" kindref="compound">UsdSchemaBase</ref> &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_revolute_joint" kindref="compound">UsdPhysicsRevoluteJoint</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>
        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_physics_revolute_joint" kindref="compound">UsdPhysicsRevoluteJoint</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="83" column="1" bodyfile="pxr/usd/usdPhysics/revoluteJoint.h" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a1babfe13bb023055c885f40bc489d29f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDPHYSICS_API</type>
        <definition>virtual USDPHYSICS_API ~UsdPhysicsRevoluteJoint</definition>
        <argsstring>()</argsstring>
        <name>~UsdPhysicsRevoluteJoint</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a355c116520a04d1cf397ae1785a3a119" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDPHYSICS_API UsdAttribute GetAxisAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetAxisAttr</name>
        <briefdescription>
<para>Joint axis. </para>
        </briefdescription>
        <detaileddescription>
<para><table rows="6" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>uniform token physics:axis = &quot;X&quot;</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para><ref refid="class_tf_token" kindref="compound">TfToken</ref>   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2sdf_2types_8h_1a71cdb29b28ede8b72fcf36fa6f8d320f" kindref="member">Variability</ref>  </para>
</entry><entry thead="no"><para>SdfVariabilityUniform   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="usd_2usd_physics_2tokens_8h_1abecb2253be1aa39fd5a77f62b5dc1adc" kindref="member">Allowed Values</ref>  </para>
</entry><entry thead="no"><para>X, Y, Z   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a2341df4cbca34b046e7d05f2017b7fa3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDPHYSICS_API UsdAttribute CreateAxisAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateAxisAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_revolute_joint_1a355c116520a04d1cf397ae1785a3a119" kindref="member">GetAxisAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1aee6bbe1b026b84310a9af285bc214ed7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDPHYSICS_API UsdAttribute GetLowerLimitAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetLowerLimitAttr</name>
        <briefdescription>
<para>Lower limit. </para>
        </briefdescription>
        <detaileddescription>
<para>Units: degrees. -inf means not limited in negative direction.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float physics:lowerLimit = -inf</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>float   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1aa317c8632401b451c89c28dccbaa2d92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDPHYSICS_API UsdAttribute CreateLowerLimitAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateLowerLimitAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_revolute_joint_1aee6bbe1b026b84310a9af285bc214ed7" kindref="member">GetLowerLimitAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a26037927ee72b1642123114faa7fd3d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDPHYSICS_API UsdAttribute GetUpperLimitAttr</definition>
        <argsstring>() const</argsstring>
        <name>GetUpperLimitAttr</name>
        <briefdescription>
<para>Upper limit. </para>
        </briefdescription>
        <detaileddescription>
<para>Units: degrees. inf means not limited in positive direction.</para>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para>
</entry></row>
<row>
<entry thead="no"><para>Declaration  </para>
</entry><entry thead="no"><para><computeroutput>float physics:upperLimit = inf</computeroutput>   </para>
</entry></row>
<row>
<entry thead="no"><para>C++ Type  </para>
</entry><entry thead="no"><para>float   </para>
</entry></row>
<row>
<entry thead="no"><para><ref refid="_usd__page__datatypes_1Usd_Datatypes" kindref="member">Usd Type</ref>  </para>
</entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float   </para>
</entry></row>
</table>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a03b1a451503fbb20db7453b9f23aa2bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_attribute" kindref="compound">UsdAttribute</ref></type>
        <definition>USDPHYSICS_API UsdAttribute CreateUpperLimitAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const</argsstring>
        <name>CreateUpperLimitAttr</name>
        <param>
          <type><ref refid="class_vt_value" kindref="compound">VtValue</ref> const &amp;</type>
          <declname>defaultValue</declname>
          <defval><ref refid="class_vt_value" kindref="compound">VtValue</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_revolute_joint_1a26037927ee72b1642123114faa7fd3d9" kindref="member">GetUpperLimitAttr()</ref>, and also <ref refid="_usd__page__common_idioms_1Usd_Create_Or_Get_Property" kindref="member">Create vs Get Property Methods</ref> for when to use Get vs Create. </para>
        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="225" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a7cad138857a9fbc4db1a366dc8168d90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const <ref refid="token_8h_1a9d94c69b8de3eb7202797d3c6d56db59" kindref="member">TfTokenVector</ref> &amp;</type>
        <definition>static USDPHYSICS_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>
        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a53698d87f82049033bd77f6430906d4c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_revolute_joint" kindref="compound">UsdPhysicsRevoluteJoint</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsRevoluteJoint Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_physics_revolute_joint" kindref="compound">UsdPhysicsRevoluteJoint</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para>
<para><programlisting><codeline><highlight class="normal">UsdPhysicsRevoluteJoint(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a1013bcd230d4a852c36adc91c60441e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_revolute_joint" kindref="compound">UsdPhysicsRevoluteJoint</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsRevoluteJoint Define</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Define</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const <ref refid="class_sdf_path" kindref="compound">SdfPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Attempt to ensure a <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis> adhering to this schema at <computeroutput>path</computeroutput> is defined (according to <ref refid="class_usd_prim_1a87fbe0030c0fbb6307ee434664f1142f" kindref="member">UsdPrim::IsDefined()</ref>) on this stage. </para>
        </briefdescription>
        <detaileddescription>
<para>If a prim adhering to this schema at <computeroutput>path</computeroutput> is already defined on this stage, return that prim. Otherwise author an <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> with <emphasis>specifier</emphasis> == <emphasis>SdfSpecifierDef</emphasis> and this schema&apos;s prim type name for the prim at <computeroutput>path</computeroutput> at the current EditTarget. Author <emphasis><ref refid="class_sdf_prim_spec" kindref="compound">SdfPrimSpec</ref></emphasis> s with <computeroutput>specifier</computeroutput> == <emphasis>SdfSpecifierDef</emphasis> and empty typeName at the current EditTarget for any nonexistent, or existing but not <emphasis>Defined</emphasis> ancestors.</para>
<para>The given <emphasis>path</emphasis> must be an absolute prim path that does not contain any variant selections.</para>
<para>If it is impossible to author any of the necessary PrimSpecs, (for example, in case <emphasis>path</emphasis> cannot map to the current <ref refid="class_usd_edit_target" kindref="compound">UsdEditTarget</ref>&apos;s namespace) issue an error and return an invalid <emphasis><ref refid="class_usd_prim" kindref="compound">UsdPrim</ref></emphasis>.</para>
<para>Note that this method may return a defined prim whose typeName does not specify this schema class, in case a stronger typeName opinion overrides the opinion at the current EditTarget. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="136" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1afe453b5ad73c3734b6c12709dd6f0c4f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDPHYSICS_API <ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref></type>
        <definition>USDPHYSICS_API UsdSchemaKind _GetSchemaKind</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaKind</name>
        <reimplements refid="class_usd_physics_joint_1afe453b5ad73c3734b6c12709dd6f0c4f">_GetSchemaKind</reimplements>
        <briefdescription>
<para>Returns the kind of schema this class belongs to. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="common_8h_1a64c9c016c495366a2ca7330d56c77741" kindref="member">UsdSchemaKind</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1adade0ff4639afd184e30c5708ae86f8d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>static USDPHYSICS_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="151" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_physics_revolute_joint_1a96538019a0566b8f54f05953ac1c6615" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>USDPHYSICS_API const <ref refid="class_tf_type" kindref="compound">TfType</ref> &amp;</type>
        <definition>USDPHYSICS_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <reimplements refid="class_usd_physics_joint_1a96538019a0566b8f54f05953ac1c6615">_GetTfType</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="155" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Predefined revolute joint type (rotation along revolute joint axis is permitted.) </para>
    </briefdescription>
    <detaileddescription>
<para>For any described attribute <emphasis>Fallback</emphasis> <emphasis>Value</emphasis> or <emphasis>Allowed</emphasis> <emphasis>Values</emphasis> below that are text/tokens, the actual token is published and defined in <ref refid="usd_2usd_physics_2tokens_8h_1abecb2253be1aa39fd5a77f62b5dc1adc" kindref="member">UsdPhysicsTokens</ref>. So to set an attribute to the value &quot;rightHanded&quot;, use UsdPhysicsTokens-&gt;rightHanded as the value. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7824">
        <label>UsdPhysicsRevoluteJoint</label>
        <link refid="class_usd_physics_revolute_joint"/>
        <childnode refid="7825" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7826">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="7827" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7827">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="7828" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7828">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="7825">
        <label>UsdPhysicsJoint</label>
        <link refid="class_usd_physics_joint"/>
        <childnode refid="7826" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7829">
        <label>UsdPhysicsRevoluteJoint</label>
        <link refid="class_usd_physics_revolute_joint"/>
        <childnode refid="7830" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7831">
        <label>UsdGeomImageable</label>
        <link refid="class_usd_geom_imageable"/>
        <childnode refid="7832" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7832">
        <label>UsdTyped</label>
        <link refid="class_usd_typed"/>
        <childnode refid="7833" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7833">
        <label>UsdSchemaBase</label>
        <link refid="class_usd_schema_base"/>
      </node>
      <node id="7830">
        <label>UsdPhysicsJoint</label>
        <link refid="class_usd_physics_joint"/>
        <childnode refid="7831" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="pxr/usd/usdPhysics/revoluteJoint.h" line="64" column="1" bodyfile="pxr/usd/usdPhysics/revoluteJoint.h" bodystart="63" bodyend="238"/>
    <listofallmembers>
      <member refid="class_usd_schema_base_1ad99ec8284868478b50e8fc3475880dab" prot="protected" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_CreateAttr</name></member>
      <member refid="class_usd_physics_revolute_joint_1afe453b5ad73c3734b6c12709dd6f0c4f" prot="protected" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_GetSchemaKind</name></member>
      <member refid="class_usd_schema_base_1a6c51fb3251d5fde5ffa9fe7a998ce970" prot="protected" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_physics_revolute_joint_1adade0ff4639afd184e30c5708ae86f8d" prot="private" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_physics_revolute_joint_1a96538019a0566b8f54f05953ac1c6615" prot="private" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_GetTfType</name></member>
      <member refid="class_usd_schema_base_1aa29ea4c951d8debfd8085a28c6aa80ca" prot="protected" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_GetType</name></member>
      <member refid="class_usd_typed_1ad91204cc9fb92f0306372e074052190f" prot="protected" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_IsCompatible</name></member>
      <member refid="class_usd_physics_revolute_joint_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_geom_imageable_1a1174d9985088dd364f6a56925073fe76" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeEffectiveVisibility</name></member>
      <member refid="class_usd_geom_imageable_1a503f6d39abbd1b62c3c55f227461334d" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeLocalBound</name></member>
      <member refid="class_usd_geom_imageable_1a8e3fb09253ba63d63921f665d63cd270" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeLocalToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1a4313664fa692f724da56cc254bce70fc" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeParentToWorldTransform</name></member>
      <member refid="class_usd_geom_imageable_1ad5a114f3776eb75edc651e8c2d67f8ff" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a1aa2ea4240e7e12f11122d7ff8ad7f90" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputePurpose</name></member>
      <member refid="class_usd_geom_imageable_1a2a7d61f7af1a02e095e6a8abcf8e641f" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a00c5620a09313aa39cb0d79f492b340f" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputePurposeInfo</name></member>
      <member refid="class_usd_geom_imageable_1a54086b2386d22b1de4aaeb5b3005533d" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeUntransformedBound</name></member>
      <member refid="class_usd_geom_imageable_1ac0bfa1554d9b57303c14f71d084c578d" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeVisibility</name></member>
      <member refid="class_usd_geom_imageable_1ae616043b0f7fbc631ef9e5c784132a6c" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>ComputeWorldBound</name></member>
      <member refid="class_usd_physics_revolute_joint_1a2341df4cbca34b046e7d05f2017b7fa3" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateAxisAttr</name></member>
      <member refid="class_usd_physics_joint_1af2b5a88fc088b9413708d3c87ba6ee8c" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateBody0Rel</name></member>
      <member refid="class_usd_physics_joint_1a7a757521f99cf7f92b0c3e75c0b1d350" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateBody1Rel</name></member>
      <member refid="class_usd_physics_joint_1ae80b474e9eee7843024937bdc8386f18" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateBreakForceAttr</name></member>
      <member refid="class_usd_physics_joint_1aafe2febc4f03925c6acde8165fbdbbd3" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateBreakTorqueAttr</name></member>
      <member refid="class_usd_physics_joint_1a8726392553f34feefe5abf9acb4ab5bc" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateCollisionEnabledAttr</name></member>
      <member refid="class_usd_physics_joint_1afc2011253ec49178786e16b1ca205131" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateExcludeFromArticulationAttr</name></member>
      <member refid="class_usd_physics_joint_1ae10a6941b8f025f01a33fe339d778487" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateJointEnabledAttr</name></member>
      <member refid="class_usd_physics_joint_1a6d4e3a8626ff458271eba64f28bcaee7" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateLocalPos0Attr</name></member>
      <member refid="class_usd_physics_joint_1a7226669fd0c97ad89aef3b5f76753405" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateLocalPos1Attr</name></member>
      <member refid="class_usd_physics_joint_1abadd1c7c72c582c0c7c6d5352a496900" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateLocalRot0Attr</name></member>
      <member refid="class_usd_physics_joint_1a152caaf301430f9536c20be2f8046ee1" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateLocalRot1Attr</name></member>
      <member refid="class_usd_physics_revolute_joint_1aa317c8632401b451c89c28dccbaa2d92" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateLowerLimitAttr</name></member>
      <member refid="class_usd_geom_imageable_1aafc2e3aa91cf892f7937cc46a2351472" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1a3f4f6685ac7cef1d8ef94c44586b84bc" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreatePurposeAttr</name></member>
      <member refid="class_usd_physics_revolute_joint_1a03b1a451503fbb20db7453b9f23aa2bb" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateUpperLimitAttr</name></member>
      <member refid="class_usd_geom_imageable_1a96d4959f4d99367dfa3a79a3371e278a" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>CreateVisibilityAttr</name></member>
      <member refid="class_usd_physics_revolute_joint_1a1013bcd230d4a852c36adc91c60441e5" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>Define</name></member>
      <member refid="class_usd_physics_revolute_joint_1a53698d87f82049033bd77f6430906d4c" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>Get</name></member>
      <member refid="class_usd_physics_revolute_joint_1a355c116520a04d1cf397ae1785a3a119" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetAxisAttr</name></member>
      <member refid="class_usd_physics_joint_1ad3bcf9ce413878d093a9fedc61066965" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetBody0Rel</name></member>
      <member refid="class_usd_physics_joint_1aba6e7cba5625f5a67c89283d3433c921" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetBody1Rel</name></member>
      <member refid="class_usd_physics_joint_1a47bbf9502d1c259a11b293cc0a395eb7" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetBreakForceAttr</name></member>
      <member refid="class_usd_physics_joint_1a184e36ffd707e8a793cfde79fa7dbd2f" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetBreakTorqueAttr</name></member>
      <member refid="class_usd_physics_joint_1afe0e317d588666298c89eb9b367162ed" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetCollisionEnabledAttr</name></member>
      <member refid="class_usd_physics_joint_1ab43b2507b764f7cd69c106e48b788aea" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetExcludeFromArticulationAttr</name></member>
      <member refid="class_usd_physics_joint_1a0388a7ed689461495c32cc31e3b836ba" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetJointEnabledAttr</name></member>
      <member refid="class_usd_physics_joint_1a7377d6ba1147f4d954ea3c5921d03e63" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetLocalPos0Attr</name></member>
      <member refid="class_usd_physics_joint_1a42f5f08e0c1f89043be739b23cbff8c1" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetLocalPos1Attr</name></member>
      <member refid="class_usd_physics_joint_1af1180954037b37035023e73585dbb2ea" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetLocalRot0Attr</name></member>
      <member refid="class_usd_physics_joint_1ab4569dfc474800ef06f5a95289d3c2f1" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetLocalRot1Attr</name></member>
      <member refid="class_usd_physics_revolute_joint_1aee6bbe1b026b84310a9af285bc214ed7" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetLowerLimitAttr</name></member>
      <member refid="class_usd_geom_imageable_1ac7d41ddd5b5d274785f4a109a7cebad5" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetOrderedPurposeTokens</name></member>
      <member refid="class_usd_schema_base_1a936bfb1e341cc81184c64af44763c433" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetPath</name></member>
      <member refid="class_usd_schema_base_1a4ba10e023e7f3f3c93131bc7fc3146b7" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetPrim</name></member>
      <member refid="class_usd_geom_imageable_1a5be4a4143e2b9f89f9bea44d27639a92" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetProxyPrimRel</name></member>
      <member refid="class_usd_geom_imageable_1acff531252fb2787a973eb028f2b04bdd" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetPurposeAttr</name></member>
      <member refid="class_usd_geom_imageable_1a2dfc306cddf0c522d39ba477e91ec161" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetPurposeVisibilityAttr</name></member>
      <member refid="class_usd_physics_revolute_joint_1a7cad138857a9fbc4db1a366dc8168d90" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_schema_base_1a030d03e2a9839d9c3da0fbca8c3722d4" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetSchemaClassPrimDefinition</name></member>
      <member refid="class_usd_schema_base_1aeac68c5514faebb20c5ae3cb930170de" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetSchemaKind</name></member>
      <member refid="class_usd_physics_revolute_joint_1a26037927ee72b1642123114faa7fd3d9" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetUpperLimitAttr</name></member>
      <member refid="class_usd_geom_imageable_1a943eddc325190bd67789407400f122b7" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>GetVisibilityAttr</name></member>
      <member refid="class_usd_schema_base_1ad658b6730d4246ee1f903ce4ce18fdfe" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>IsAPISchema</name></member>
      <member refid="class_usd_schema_base_1a68e867971cc992c5b03e73725c405c05" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>IsAppliedAPISchema</name></member>
      <member refid="class_usd_schema_base_1ae2c90cefba1b2e09dc117a7d972009cb" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>IsConcrete</name></member>
      <member refid="class_usd_schema_base_1af752510dea0c7106aa89832e60dfa3d5" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>IsMultipleApplyAPISchema</name></member>
      <member refid="class_usd_schema_base_1afa15659f4fa280e4c0772173d7471920" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>IsTyped</name></member>
      <member refid="class_usd_geom_imageable_1a91eda805326fd94cc9910cfaeb4ac4a0" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>MakeInvisible</name></member>
      <member refid="class_usd_geom_imageable_1a3fd30c76b787e7e32180c1b454b971c7" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>MakeVisible</name></member>
      <member refid="class_usd_schema_base_1a586531d84339318108c817f91367e626" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>operator bool</name></member>
      <member refid="class_usd_physics_revolute_joint_1a3e5fc43aea5aea4908c3ce980fdf8908" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>schemaKind</name></member>
      <member refid="class_usd_geom_imageable_1a6b808012a6a5bc9df34e794ff82bb6f0" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a8c0c8b7faa4056a7267c586b2ffc0bd8" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>SetProxyPrim</name></member>
      <member refid="class_usd_geom_imageable_1a00ea23bdac8d751c2b97dc8fe5cd7f73" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_geom_imageable_1a912f3e5572536e0492914fe251446bc9" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdGeomImageable</name></member>
      <member refid="class_usd_physics_joint_1ae319694b2fe1a6bdc26c2cad77ce44ef" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdPhysicsJoint</name></member>
      <member refid="class_usd_physics_joint_1a3cabb7cdfb60fcaadbaba28a25c7542e" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdPhysicsJoint</name></member>
      <member refid="class_usd_physics_revolute_joint_1a40a1992b2627c865bfd55403af659afa" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdPhysicsRevoluteJoint</name></member>
      <member refid="class_usd_physics_revolute_joint_1ac0f2230c7ebfacb88a56497a18cd1628" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdPhysicsRevoluteJoint</name></member>
      <member refid="class_usd_schema_base_1a32e0a9b0465ecf201fb501753baa8587" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_schema_base_1a73921308189043c86867d6bd9012b4af" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdSchemaBase</name></member>
      <member refid="class_usd_physics_revolute_joint_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_typed_1a0eedaa009a86f3b1186f709bc78d0c09" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdTyped</name></member>
      <member refid="class_usd_typed_1a64de30966732c854c3c29616244e5250" prot="public" virt="non-virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>UsdTyped</name></member>
      <member refid="class_usd_geom_imageable_1acbd981c2779c70ec4c3fd5d8cc610925" prot="public" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>~UsdGeomImageable</name></member>
      <member refid="class_usd_physics_joint_1ada6aa415b33d1b52959abd4551a49a95" prot="public" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>~UsdPhysicsJoint</name></member>
      <member refid="class_usd_physics_revolute_joint_1a1babfe13bb023055c885f40bc489d29f" prot="public" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>~UsdPhysicsRevoluteJoint</name></member>
      <member refid="class_usd_schema_base_1a3e97b9a7311478da9f2d168bea29560e" prot="public" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>~UsdSchemaBase</name></member>
      <member refid="class_usd_typed_1a558859985aa8647bc068d590b5d9e08f" prot="public" virt="virtual"><scope>UsdPhysicsRevoluteJoint</scope><name>~UsdTyped</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
