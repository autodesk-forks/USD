<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_tf_py_method_result" kind="class" language="C++" prot="public">
    <compoundname>TfPyMethodResult</compoundname>
    <includes refid="py_override_8h" local="no">pyOverride.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tf_py_method_result_1af8ed08b60ec0f5a12fdac269b3fb7131" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class TfPyOverride</definition>
        <argsstring></argsstring>
        <name>TfPyOverride</name>
        <briefdescription>
<para>Clients must hold GIL to construct. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="49" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tf_py_method_result_1a5ba923998ac46fd24f0a12cb4eb25c1c" prot="private" static="no" mutable="yes">
        <type>boost::python::handle</type>
        <definition>boost::python::handle m_obj</definition>
        <argsstring></argsstring>
        <name>m_obj</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="97" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_tf_py_method_result_1aa328fb0af46e9d3cf0da8c1707f78304" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TfPyMethodResult</definition>
        <argsstring>(PyObject *x)</argsstring>
        <name>TfPyMethodResult</name>
        <param>
          <type>PyObject *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="50" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="50" bodyend="52"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tf_py_method_result_1ab18e13f4c56626cd5dd7cfe7630386e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TfPyMethodResult</definition>
        <argsstring>(TfPyMethodResult const &amp;other)</argsstring>
        <name>TfPyMethodResult</name>
        <param>
          <type><ref refid="class_tf_py_method_result" kindref="compound">TfPyMethodResult</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implement copy to do python refcounting while holding the GIL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_method_result_1acf154d122346b5ba0abe3754163f09ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~TfPyMethodResult</definition>
        <argsstring>()</argsstring>
        <name>~TfPyMethodResult</name>
        <briefdescription>
<para>Implement dtor to do python refcounting while holding the GIL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_method_result_1a9faf351f10ad46103f627c6aea295108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tf_py_method_result" kindref="compound">TfPyMethodResult</ref> &amp;</type>
        <definition>TfPyMethodResult&amp; operator=</definition>
        <argsstring>(TfPyMethodResult const &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="class_tf_py_method_result" kindref="compound">TfPyMethodResult</ref> const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Implement assign to do python refcounting while holding the GIL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_method_result_1a2c7cfbd920816afd0f78313d7016bfea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>operator T</definition>
        <argsstring>()</argsstring>
        <name>operator T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="65" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_method_result_1a709f068b1b83730424ce1773bcea9659" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>operator T &amp;</definition>
        <argsstring>() const</argsstring>
        <name>operator T &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="73" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="73" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_method_result_1aac41f2ff2b7a5be6f81f07b394dd323a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T as</definition>
        <argsstring>(boost::type&lt; T &gt; *=0)</argsstring>
        <name>as</name>
        <param>
          <type>boost::type&lt; T &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="82" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_tf_py_method_result_1ac1cf306aed8d4fef16b7d32c51575177" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T unchecked</definition>
        <argsstring>(boost::type&lt; T &gt; *=0)</argsstring>
        <name>unchecked</name>
        <param>
          <type>boost::type&lt; T &gt; *</type>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/pyOverride.h" line="90" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="90" bodyend="94"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A reimplementation of boost::python::detail::method_result. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is reimplemented from the boost class simply because the provided class only allows construction from it&apos;s friended class boost::python::override, which we also reimplement below.</para>
<para><simplesect kind="see"><para><ref refid="class_tf_py_override" kindref="compound">TfPyOverride</ref> </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="pxr/base/tf/pyOverride.h" line="46" column="1" bodyfile="pxr/base/tf/pyOverride.h" bodystart="45" bodyend="98"/>
    <listofallmembers>
      <member refid="class_tf_py_method_result_1aac41f2ff2b7a5be6f81f07b394dd323a" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>as</name></member>
      <member refid="class_tf_py_method_result_1a5ba923998ac46fd24f0a12cb4eb25c1c" prot="private" virt="non-virtual"><scope>TfPyMethodResult</scope><name>m_obj</name></member>
      <member refid="class_tf_py_method_result_1a2c7cfbd920816afd0f78313d7016bfea" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>operator T</name></member>
      <member refid="class_tf_py_method_result_1a709f068b1b83730424ce1773bcea9659" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>operator T &amp;</name></member>
      <member refid="class_tf_py_method_result_1a9faf351f10ad46103f627c6aea295108" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>operator=</name></member>
      <member refid="class_tf_py_method_result_1aa328fb0af46e9d3cf0da8c1707f78304" prot="private" virt="non-virtual"><scope>TfPyMethodResult</scope><name>TfPyMethodResult</name></member>
      <member refid="class_tf_py_method_result_1ab18e13f4c56626cd5dd7cfe7630386e3" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>TfPyMethodResult</name></member>
      <member refid="class_tf_py_method_result_1af8ed08b60ec0f5a12fdac269b3fb7131" prot="private" virt="non-virtual"><scope>TfPyMethodResult</scope><name>TfPyOverride</name></member>
      <member refid="class_tf_py_method_result_1ac1cf306aed8d4fef16b7d32c51575177" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>unchecked</name></member>
      <member refid="class_tf_py_method_result_1acf154d122346b5ba0abe3754163f09ee" prot="public" virt="non-virtual"><scope>TfPyMethodResult</scope><name>~TfPyMethodResult</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
