<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="string_utils_8h" kind="file" language="C++">
    <compoundname>stringUtils.h</compoundname>
    <includes refid="pxr_8h" local="yes">pxr/pxr.h</includes>
    <includes refid="attributes_8h" local="yes">pxr/base/arch/attributes.h</includes>
    <includes refid="hints_8h" local="yes">pxr/base/arch/hints.h</includes>
    <includes refid="inttypes_8h" local="yes">pxr/base/arch/inttypes.h</includes>
    <includes refid="base_2tf_2api_8h" local="yes">pxr/base/tf/api.h</includes>
    <includes refid="enum_8h" local="yes">pxr/base/tf/enum.h</includes>
    <includes local="no">cstdarg</includes>
    <includes local="no">cstring</includes>
    <includes local="no">list</includes>
    <includes local="no">set</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">vector</includes>
    <includedby refid="diagnostic_base_8h" local="yes">pxr/base/tf/diagnosticBase.h</includedby>
    <includedby refid="diagnostic_mgr_8h" local="yes">pxr/base/tf/diagnosticMgr.h</includedby>
    <includedby refid="make_py_constructor_8h" local="yes">pxr/base/tf/makePyConstructor.h</includedby>
    <includedby refid="py_enum_8h" local="yes">pxr/base/tf/pyEnum.h</includedby>
    <includedby refid="py_identity_8h" local="yes">pxr/base/tf/pyIdentity.h</includedby>
    <includedby refid="py_notice_wrapper_8h" local="yes">pxr/base/tf/pyNoticeWrapper.h</includedby>
    <includedby refid="py_ptr_helpers_8h" local="yes">pxr/base/tf/pyPtrHelpers.h</includedby>
    <includedby refid="scope_description_8h" local="yes">pxr/base/tf/scopeDescription.h</includedby>
    <includedby refid="vt_2value_8h" local="yes">pxr/base/vt/value.h</includedby>
    <includedby refid="wrap_array_8h" local="yes">pxr/base/vt/wrapArray.h</includedby>
    <includedby refid="py_children_proxy_8h" local="yes">pxr/usd/sdf/pyChildrenProxy.h</includedby>
    <includedby refid="py_children_view_8h" local="yes">pxr/usd/sdf/pyChildrenView.h</includedby>
    <includedby refid="py_list_editor_proxy_8h" local="yes">pxr/usd/sdf/pyListEditorProxy.h</includedby>
    <includedby refid="py_list_op_8h" local="yes">pxr/usd/sdf/pyListOp.h</includedby>
    <includedby refid="py_list_proxy_8h" local="yes">pxr/usd/sdf/pyListProxy.h</includedby>
    <includedby refid="py_map_edit_proxy_8h" local="yes">pxr/usd/sdf/pyMapEditProxy.h</includedby>
    <includedby refid="py_spec_8h" local="yes">pxr/usd/sdf/pySpec.h</includedby>
    <includedby refid="common_8h" local="yes">pxr/usd/usd/common.h</includedby>
    <includedby refid="stage_cache_8h" local="yes">pxr/usd/usd/stageCache.h</includedby>
    <includedby refid="binding_map_8h" local="yes">pxr/imaging/glf/bindingMap.h</includedby>
    <includedby refid="imaging_2hf_2diagnostic_8h" local="yes">pxr/imaging/hf/diagnostic.h</includedby>
    <incdepgraph>
      <node id="81325">
        <label>list</label>
      </node>
      <node id="81297">
        <label>pxr/base/arch/inttypes.h</label>
        <link refid="inttypes_8h"/>
        <childnode refid="81298" relation="include">
        </childnode>
        <childnode refid="81299" relation="include">
        </childnode>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81295" relation="include">
        </childnode>
        <childnode refid="81300" relation="include">
        </childnode>
      </node>
      <node id="81294">
        <label>pxr/base/arch/export.h</label>
        <link refid="export_8h"/>
        <childnode refid="81295" relation="include">
        </childnode>
      </node>
      <node id="81299">
        <label>cstdint</label>
      </node>
      <node id="81312">
        <label>cmath</label>
      </node>
      <node id="81309">
        <label>pxr/base/tf/tf.h</label>
        <link refid="tf_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81310" relation="include">
        </childnode>
        <childnode refid="81311" relation="include">
        </childnode>
        <childnode refid="81297" relation="include">
        </childnode>
        <childnode refid="81313" relation="include">
        </childnode>
        <childnode refid="81314" relation="include">
        </childnode>
      </node>
      <node id="81324">
        <label>cstdarg</label>
      </node>
      <node id="81305">
        <label>string</label>
      </node>
      <node id="81293">
        <label>pxr/base/arch/attributes.h</label>
        <link refid="attributes_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81294" relation="include">
        </childnode>
      </node>
      <node id="81316">
        <label>map</label>
      </node>
      <node id="81298">
        <label>cinttypes</label>
      </node>
      <node id="81292">
        <label>pxr/pxr.h</label>
        <link refid="pxr_8h"/>
      </node>
      <node id="81303">
        <label>pxr/base/arch/demangle.h</label>
        <link refid="demangle_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81304" relation="include">
        </childnode>
        <childnode refid="81305" relation="include">
        </childnode>
        <childnode refid="81306" relation="include">
        </childnode>
        <childnode refid="81307" relation="include">
        </childnode>
      </node>
      <node id="81310">
        <label>pxr/base/arch/buildMode.h</label>
        <link refid="build_mode_8h_source"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81295" relation="include">
        </childnode>
      </node>
      <node id="81321">
        <label>pxr/base/tf/preprocessorUtilsLite.h</label>
        <link refid="preprocessor_utils_lite_8h_source"/>
        <childnode refid="81295" relation="include">
        </childnode>
      </node>
      <node id="81322">
        <label>pxr/base/tf/safeTypeCompare.h</label>
        <link refid="safe_type_compare_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81306" relation="include">
        </childnode>
      </node>
      <node id="81300">
        <label>sys/types.h</label>
      </node>
      <node id="81302">
        <label>pxr/base/tf/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81295" relation="include">
        </childnode>
        <childnode refid="81303" relation="include">
        </childnode>
        <childnode refid="81308" relation="include">
        </childnode>
        <childnode refid="81321" relation="include">
        </childnode>
        <childnode refid="81322" relation="include">
        </childnode>
        <childnode refid="81301" relation="include">
        </childnode>
        <childnode refid="81323" relation="include">
        </childnode>
        <childnode refid="81305" relation="include">
        </childnode>
        <childnode refid="81306" relation="include">
        </childnode>
        <childnode refid="81319" relation="include">
        </childnode>
        <childnode refid="81320" relation="include">
        </childnode>
      </node>
      <node id="81306">
        <label>typeinfo</label>
      </node>
      <node id="81311">
        <label>pxr/base/arch/math.h</label>
        <link refid="arch_2math_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81295" relation="include">
        </childnode>
        <childnode refid="81297" relation="include">
        </childnode>
        <childnode refid="81312" relation="include">
        </childnode>
      </node>
      <node id="81320">
        <label>vector</label>
      </node>
      <node id="81301">
        <label>pxr/base/tf/api.h</label>
        <link refid="base_2tf_2api_8h_source"/>
        <childnode refid="81294" relation="include">
        </childnode>
      </node>
      <node id="81314">
        <label>utility</label>
      </node>
      <node id="81326">
        <label>sstream</label>
      </node>
      <node id="81295">
        <label>pxr/base/arch/defines.h</label>
        <link refid="defines_8h_source"/>
      </node>
      <node id="81296">
        <label>pxr/base/arch/hints.h</label>
        <link refid="hints_8h"/>
        <childnode refid="81295" relation="include">
        </childnode>
      </node>
      <node id="81308">
        <label>pxr/base/tf/hash.h</label>
        <link refid="tf_2hash_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81309" relation="include">
        </childnode>
        <childnode refid="81301" relation="include">
        </childnode>
        <childnode refid="81315" relation="include">
        </childnode>
        <childnode refid="81305" relation="include">
        </childnode>
        <childnode refid="81316" relation="include">
        </childnode>
        <childnode refid="81317" relation="include">
        </childnode>
        <childnode refid="81318" relation="include">
        </childnode>
        <childnode refid="81307" relation="include">
        </childnode>
        <childnode refid="81319" relation="include">
        </childnode>
        <childnode refid="81314" relation="include">
        </childnode>
        <childnode refid="81320" relation="include">
        </childnode>
      </node>
      <node id="81313">
        <label>math.h</label>
      </node>
      <node id="81291">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="81292" relation="include">
        </childnode>
        <childnode refid="81293" relation="include">
        </childnode>
        <childnode refid="81296" relation="include">
        </childnode>
        <childnode refid="81297" relation="include">
        </childnode>
        <childnode refid="81301" relation="include">
        </childnode>
        <childnode refid="81302" relation="include">
        </childnode>
        <childnode refid="81324" relation="include">
        </childnode>
        <childnode refid="81315" relation="include">
        </childnode>
        <childnode refid="81325" relation="include">
        </childnode>
        <childnode refid="81318" relation="include">
        </childnode>
        <childnode refid="81326" relation="include">
        </childnode>
        <childnode refid="81305" relation="include">
        </childnode>
        <childnode refid="81319" relation="include">
        </childnode>
        <childnode refid="81320" relation="include">
        </childnode>
      </node>
      <node id="81323">
        <label>iosfwd</label>
      </node>
      <node id="81319">
        <label>type_traits</label>
      </node>
      <node id="81318">
        <label>set</label>
      </node>
      <node id="81304">
        <label>pxr/base/arch/api.h</label>
        <link refid="base_2arch_2api_8h_source"/>
        <childnode refid="81294" relation="include">
        </childnode>
      </node>
      <node id="81315">
        <label>cstring</label>
      </node>
      <node id="81317">
        <label>memory</label>
      </node>
      <node id="81307">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="81695">
        <label>pxr/imaging/hd/rendererPluginRegistry.h</label>
        <link refid="renderer_plugin_registry_8h_source"/>
      </node>
      <node id="81823">
        <label>pxr/imaging/hdSt/commandBuffer.h</label>
        <link refid="command_buffer_8h_source"/>
        <childnode refid="81731" relation="include">
        </childnode>
      </node>
      <node id="82021">
        <label>pxr/imaging/hdSt/bufferResource.h</label>
        <link refid="buffer_resource_8h_source"/>
        <childnode refid="81824" relation="include">
        </childnode>
        <childnode refid="81826" relation="include">
        </childnode>
      </node>
      <node id="81412">
        <label>pxr/usd/usdLux/diskLight.h</label>
        <link refid="disk_light_8h"/>
      </node>
      <node id="81737">
        <label>pxr/imaging/hdx/renderSetupTask.h</label>
        <link refid="render_setup_task_8h_source"/>
        <childnode refid="81738" relation="include">
        </childnode>
        <childnode refid="81681" relation="include">
        </childnode>
        <childnode refid="81617" relation="include">
        </childnode>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81501">
        <label>pxr/usd/usdGeom/pointBased.h</label>
        <link refid="point_based_8h"/>
        <childnode refid="81502" relation="include">
        </childnode>
        <childnode refid="81506" relation="include">
        </childnode>
        <childnode refid="81507" relation="include">
        </childnode>
        <childnode refid="81508" relation="include">
        </childnode>
      </node>
      <node id="81449">
        <label>pxr/usd/usdGeom/visibilityAPI.h</label>
        <link refid="visibility_a_p_i_8h"/>
      </node>
      <node id="81361">
        <label>pxr/usdImaging/usdImaging/hermiteCurvesAdapter.h</label>
        <link refid="hermite_curves_adapter_8h"/>
      </node>
      <node id="81532">
        <label>pxr/usd/usd/primRange.h</label>
        <link refid="prim_range_8h_source"/>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81817">
        <label>pxr/imaging/hd/changeTracker.h</label>
        <link refid="change_tracker_8h_source"/>
        <childnode refid="81688" relation="include">
        </childnode>
        <childnode refid="81707" relation="include">
        </childnode>
        <childnode refid="81818" relation="include">
        </childnode>
        <childnode refid="81717" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="81491">
        <label>pxr/usd/usdGeom/xformable.h</label>
        <link refid="xformable_8h"/>
        <childnode refid="81492" relation="include">
        </childnode>
        <childnode refid="81519" relation="include">
        </childnode>
        <childnode refid="81522" relation="include">
        </childnode>
        <childnode refid="81489" relation="include">
        </childnode>
        <childnode refid="81450" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81416" relation="include">
        </childnode>
        <childnode refid="81475" relation="include">
        </childnode>
        <childnode refid="81523" relation="include">
        </childnode>
        <childnode refid="81473" relation="include">
        </childnode>
        <childnode refid="81524" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81838">
        <label>pxr/imaging/hd/coneSchema.h</label>
        <link refid="cone_schema_8h_source"/>
      </node>
      <node id="81653">
        <label>pxr/usd/sdf/listEditor.h</label>
        <link refid="list_editor_8h_source"/>
        <childnode refid="81619" relation="include">
        </childnode>
        <childnode refid="81618" relation="include">
        </childnode>
      </node>
      <node id="81498">
        <label>pxr/usd/usdGeom/cylinder.h</label>
        <link refid="usd_2usd_geom_2cylinder_8h"/>
      </node>
      <node id="81698">
        <label>pxr/imaging/hdEmbree/renderDelegate.h</label>
        <link refid="mbree_2render_delegate_8h_source"/>
      </node>
      <node id="81988">
        <label>pxr/imaging/hd/types.h</label>
        <link refid="imaging_2hd_2types_8h_source"/>
        <childnode refid="81805" relation="include">
        </childnode>
        <childnode refid="81989" relation="include">
        </childnode>
        <childnode refid="81994" relation="include">
        </childnode>
        <childnode refid="81817" relation="include">
        </childnode>
        <childnode refid="81832" relation="include">
        </childnode>
        <childnode refid="82004" relation="include">
        </childnode>
        <childnode refid="81815" relation="include">
        </childnode>
        <childnode refid="82005" relation="include">
        </childnode>
        <childnode refid="82006" relation="include">
        </childnode>
        <childnode refid="81984" relation="include">
        </childnode>
        <childnode refid="82007" relation="include">
        </childnode>
        <childnode refid="81712" relation="include">
        </childnode>
        <childnode refid="82008" relation="include">
        </childnode>
        <childnode refid="82009" relation="include">
        </childnode>
        <childnode refid="81996" relation="include">
        </childnode>
        <childnode refid="81824" relation="include">
        </childnode>
        <childnode refid="82021" relation="include">
        </childnode>
        <childnode refid="82022" relation="include">
        </childnode>
        <childnode refid="82000" relation="include">
        </childnode>
        <childnode refid="82001" relation="include">
        </childnode>
        <childnode refid="82023" relation="include">
        </childnode>
        <childnode refid="82024" relation="include">
        </childnode>
        <childnode refid="82025" relation="include">
        </childnode>
        <childnode refid="82026" relation="include">
        </childnode>
        <childnode refid="82027" relation="include">
        </childnode>
        <childnode refid="81774" relation="include">
        </childnode>
        <childnode refid="82028" relation="include">
        </childnode>
      </node>
      <node id="81398">
        <label>pxr/base/work/dispatcher.h</label>
        <link refid="dispatcher_8h"/>
        <childnode refid="81342" relation="include">
        </childnode>
        <childnode refid="81399" relation="include">
        </childnode>
        <childnode refid="81400" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
        <childnode refid="81488" relation="include">
        </childnode>
        <childnode refid="81616" relation="include">
        </childnode>
      </node>
      <node id="81740">
        <label>pxr/imaging/hdx/oitVolumeRenderTask.h</label>
        <link refid="oit_volume_render_task_8h_source"/>
      </node>
      <node id="81936">
        <label>pxr/imaging/hd/flattenedMaterialBindingsDataSourceProvider.h</label>
        <link refid="flattened_material_bindings_data_source_provider_8h_source"/>
      </node>
      <node id="81915">
        <label>pxr/imaging/hdsi/coordSysPrimSceneIndex.h</label>
        <link refid="coord_sys_prim_scene_index_8h_source"/>
      </node>
      <node id="81889">
        <label>pxr/imaging/hd/sphereSchema.h</label>
        <link refid="sphere_schema_8h_source"/>
      </node>
      <node id="81680">
        <label>pxr/imaging/hdSt/simpleLightingShader.h</label>
        <link refid="simple_lighting_shader_8h_source"/>
      </node>
      <node id="81815">
        <label>pxr/imaging/hd/dirtyList.h</label>
        <link refid="dirty_list_8h_source"/>
        <childnode refid="81707" relation="include">
        </childnode>
      </node>
      <node id="81840">
        <label>pxr/imaging/hd/coordSysSchema.h</label>
        <link refid="coord_sys_schema_8h_source"/>
      </node>
      <node id="81902">
        <label>pxr/usdImaging/usdImaging/modelSchema.h</label>
        <link refid="model_schema_8h_source"/>
      </node>
      <node id="81423">
        <label>pxr/usd/usdPhysics/collisionGroup.h</label>
        <link refid="collision_group_8h"/>
      </node>
      <node id="81801">
        <label>pxr/usd/sdf/predicateLibrary.h</label>
        <link refid="predicate_library_8h_source"/>
        <childnode refid="81800" relation="include">
        </childnode>
        <childnode refid="81802" relation="include">
        </childnode>
        <childnode refid="81483" relation="include">
        </childnode>
      </node>
      <node id="81733">
        <label>pxr/imaging/hdx/pickFromRenderBufferTask.h</label>
        <link refid="pick_from_render_buffer_task_8h_source"/>
      </node>
      <node id="81666">
        <label>pxr/usd/sdf/declareSpec.h</label>
        <link refid="declare_spec_8h_source"/>
        <childnode refid="81624" relation="include">
        </childnode>
        <childnode refid="81621" relation="include">
        </childnode>
        <childnode refid="81623" relation="include">
        </childnode>
        <childnode refid="81622" relation="include">
        </childnode>
        <childnode refid="81625" relation="include">
        </childnode>
        <childnode refid="81651" relation="include">
        </childnode>
        <childnode refid="81626" relation="include">
        </childnode>
        <childnode refid="81627" relation="include">
        </childnode>
      </node>
      <node id="81436">
        <label>pxr/usdImaging/usdImaging/dataSourcePrim.h</label>
        <link refid="data_source_prim_8h_source"/>
        <childnode refid="81437" relation="include">
        </childnode>
        <childnode refid="81438" relation="include">
        </childnode>
        <childnode refid="81446" relation="include">
        </childnode>
        <childnode refid="81435" relation="include">
        </childnode>
        <childnode refid="81447" relation="include">
        </childnode>
        <childnode refid="81448" relation="include">
        </childnode>
      </node>
      <node id="81757">
        <label>pxr/imaging/hdSt/shaderCode.h</label>
        <link refid="shader_code_8h_source"/>
        <childnode refid="81758" relation="include">
        </childnode>
        <childnode refid="81759" relation="include">
        </childnode>
        <childnode refid="81761" relation="include">
        </childnode>
        <childnode refid="81762" relation="include">
        </childnode>
        <childnode refid="81763" relation="include">
        </childnode>
      </node>
      <node id="81456">
        <label>pxr/usd/usdLux/shapingAPI.h</label>
        <link refid="shaping_a_p_i_8h"/>
      </node>
      <node id="81402">
        <label>pxr/usd/pcp/cache.h</label>
        <link refid="pcp_2cache_8h_source"/>
        <childnode refid="81403" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
      </node>
      <node id="81945">
        <label>pxr/imaging/hd/invalidatableContainerDataSource.h</label>
        <link refid="invalidatable_container_data_source_8h_source"/>
      </node>
      <node id="81980">
        <label>pxr/imaging/hd/materialNetwork2Interface.h</label>
        <link refid="material_network2_interface_8h_source"/>
      </node>
      <node id="81846">
        <label>pxr/imaging/hd/extComputationOutputSchema.h</label>
        <link refid="ext_computation_output_schema_8h_source"/>
      </node>
      <node id="81531">
        <label>pxr/usd/usd/primCompositionQuery.h</label>
        <link refid="prim_composition_query_8h"/>
      </node>
      <node id="81888">
        <label>pxr/imaging/hd/selectionSchema.h</label>
        <link refid="selection_schema_8h_source"/>
      </node>
      <node id="81564">
        <label>pxr/usd/usdShade/types.h</label>
        <link refid="usd_2usd_shade_2types_8h_source"/>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81562" relation="include">
        </childnode>
        <childnode refid="81563" relation="include">
        </childnode>
        <childnode refid="81565" relation="include">
        </childnode>
      </node>
      <node id="82028">
        <label>pxr/imaging/hdx/hgiConversions.h</label>
        <link refid="hdx_2hgi_conversions_8h_source"/>
      </node>
      <node id="81745">
        <label>pxr/imaging/hdx/boundingBoxTask.h</label>
        <link refid="bounding_box_task_8h_source"/>
        <childnode refid="81617" relation="include">
        </childnode>
      </node>
      <node id="81604">
        <label>pxr/usd/pcp/pyUtils.h</label>
        <link refid="usd_2pcp_2py_utils_8h_source"/>
      </node>
      <node id="81706">
        <label>pxr/imaging/hd/resourceRegistry.h</label>
        <link refid="resource_registry_8h_source"/>
        <childnode refid="81707" relation="include">
        </childnode>
        <childnode refid="81754" relation="include">
        </childnode>
      </node>
      <node id="81630">
        <label>pxr/usd/usdUtils/coalescingDiagnosticDelegate.h</label>
        <link refid="coalescing_diagnostic_delegate_8h"/>
      </node>
      <node id="81554">
        <label>pxr/usd/usdShade/shader.h</label>
        <link refid="shader_8h"/>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
      </node>
      <node id="81831">
        <label>pxr/usdImaging/usdImaging/niPrototypePropagatingSceneIndex.h</label>
        <link refid="ni_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="81600">
        <label>pxr/usd/usd/resolver.h</label>
        <link refid="usd_2resolver_8h_source"/>
      </node>
      <node id="81457">
        <label>pxr/usd/usdLux/volumeLightAPI.h</label>
        <link refid="volume_light_a_p_i_8h"/>
      </node>
      <node id="81429">
        <label>pxr/usd/usd/modelAPI.h</label>
        <link refid="model_a_p_i_8h"/>
      </node>
      <node id="81417">
        <label>pxr/usd/usdLux/distantLight.h</label>
        <link refid="distant_light_8h"/>
      </node>
      <node id="81943">
        <label>pxr/usdImaging/usdImaging/flattenedModelDataSourceProvider.h</label>
        <link refid="flattened_model_data_source_provider_8h_source"/>
      </node>
      <node id="81919">
        <label>pxr/imaging/hdsi/materialBindingResolvingSceneIndex.h</label>
        <link refid="material_binding_resolving_scene_index_8h_source"/>
      </node>
      <node id="81891">
        <label>pxr/imaging/hd/subdivisionTagsSchema.h</label>
        <link refid="subdivision_tags_schema_8h_source"/>
        <childnode refid="81852" relation="include">
        </childnode>
        <childnode refid="81892" relation="include">
        </childnode>
      </node>
      <node id="81430">
        <label>pxr/usd/usdGeom/modelAPI.h</label>
        <link refid="eom_2model_a_p_i_8h"/>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81914">
        <label>pxr/imaging/hdGp/generativeProceduralResolvingSceneIndex.h</label>
        <link refid="generative_procedural_resolving_scene_index_8h_source"/>
      </node>
      <node id="81689">
        <label>pxr/imaging/hd/rendererPlugin.h</label>
        <link refid="renderer_plugin_8h_source"/>
        <childnode refid="81690" relation="include">
        </childnode>
        <childnode refid="81691" relation="include">
        </childnode>
        <childnode refid="81692" relation="include">
        </childnode>
      </node>
      <node id="81599">
        <label>pxr/usd/pcp/iterator.h</label>
        <link refid="usd_2pcp_2iterator_8h_source"/>
        <childnode refid="81589" relation="include">
        </childnode>
        <childnode refid="81592" relation="include">
        </childnode>
        <childnode refid="81600" relation="include">
        </childnode>
      </node>
      <node id="81382">
        <label>pxr/usdImaging/usdImaging/lightFilterAdapter.h</label>
        <link refid="light_filter_adapter_8h"/>
        <childnode refid="81383" relation="include">
        </childnode>
        <childnode refid="81384" relation="include">
        </childnode>
        <childnode refid="81385" relation="include">
        </childnode>
        <childnode refid="81386" relation="include">
        </childnode>
      </node>
      <node id="81677">
        <label>pxr/usd/sdf/variableExpression.h</label>
        <link refid="variable_expression_8h"/>
      </node>
      <node id="81941">
        <label>pxr/imaging/hd/flattenedXformDataSourceProvider.h</label>
        <link refid="flattened_xform_data_source_provider_8h_source"/>
      </node>
      <node id="81739">
        <label>pxr/imaging/hdx/oitRenderTask.h</label>
        <link refid="oit_render_task_8h_source"/>
      </node>
      <node id="81959">
        <label>pxr/imaging/hdPrman/renderTerminalOutputInvalidatingSceneIndexPlugin.h</label>
        <link refid="render_terminal_output_invalidating_scene_index_plugin_8h_source"/>
      </node>
      <node id="81776">
        <label>pxr/imaging/hdSt/ptexTextureObject.h</label>
        <link refid="ptex_texture_object_8h_source"/>
      </node>
      <node id="81824">
        <label>pxr/imaging/hdSt/binding.h</label>
        <link refid="imaging_2hd_st_2binding_8h_source"/>
        <childnode refid="81762" relation="include">
        </childnode>
        <childnode refid="81680" relation="include">
        </childnode>
      </node>
      <node id="81542">
        <label>pxr/usd/usdPhysics/fixedJoint.h</label>
        <link refid="fixed_joint_8h"/>
      </node>
      <node id="81580">
        <label>pxr/usdImaging/usdImaging/lightAPIAdapter.h</label>
        <link refid="light_a_p_i_adapter_8h_source"/>
      </node>
      <node id="81755">
        <label>pxr/imaging/hdSt/extCompGpuComputationResource.h</label>
        <link refid="ext_comp_gpu_computation_resource_8h_source"/>
        <childnode refid="81756" relation="include">
        </childnode>
      </node>
      <node id="81714">
        <label>pxr/imaging/hdSt/basisCurves.h</label>
        <link refid="imaging_2hd_st_2basis_curves_8h_source"/>
      </node>
      <node id="81984">
        <label>pxr/imaging/hd/meshUtil.h</label>
        <link refid="mesh_util_8h_source"/>
        <childnode refid="81985" relation="include">
        </childnode>
      </node>
      <node id="81521">
        <label>pxr/usdImaging/usdAppUtils/frameRecorder.h</label>
        <link refid="frame_recorder_8h"/>
      </node>
      <node id="81786">
        <label>pxr/usd/ar/resolverScopedCache.h</label>
        <link refid="resolver_scoped_cache_8h"/>
      </node>
      <node id="81853">
        <label>pxr/imaging/hd/imageShaderSchema.h</label>
        <link refid="image_shader_schema_8h_source"/>
      </node>
      <node id="81681">
        <label>pxr/imaging/hdx/skydomeTask.h</label>
        <link refid="skydome_task_8h_source"/>
      </node>
      <node id="81865">
        <label>pxr/imaging/hd/materialConnectionSchema.h</label>
        <link refid="material_connection_schema_8h_source"/>
      </node>
      <node id="81380">
        <label>pxr/usdImaging/usdImaging/rectLightAdapter.h</label>
        <link refid="rect_light_adapter_8h"/>
      </node>
      <node id="81775">
        <label>pxr/imaging/hdSt/dynamicUvTextureObject.h</label>
        <link refid="dynamic_uv_texture_object_8h_source"/>
      </node>
      <node id="81470">
        <label>pxr/usd/usdShade/connectableAPI.h</label>
        <link refid="connectable_a_p_i_8h"/>
        <childnode refid="81471" relation="include">
        </childnode>
        <childnode refid="81472" relation="include">
        </childnode>
        <childnode refid="81446" relation="include">
        </childnode>
      </node>
      <node id="81704">
        <label>pxr/imaging/hd/renderSettings.h</label>
        <link refid="render_settings_8h_source"/>
        <childnode refid="81705" relation="include">
        </childnode>
      </node>
      <node id="81810">
        <label>pxr/imaging/hd/bufferArray.h</label>
        <link refid="buffer_array_8h_source"/>
        <childnode refid="81811" relation="include">
        </childnode>
        <childnode refid="81826" relation="include">
        </childnode>
        <childnode refid="81768" relation="include">
        </childnode>
        <childnode refid="81767" relation="include">
        </childnode>
        <childnode refid="81769" relation="include">
        </childnode>
        <childnode refid="81764" relation="include">
        </childnode>
      </node>
      <node id="81742">
        <label>pxr/imaging/hdx/shadowTask.h</label>
        <link refid="shadow_task_8h_source"/>
        <childnode refid="81617" relation="include">
        </childnode>
      </node>
      <node id="81590">
        <label>pxr/usd/usd/resolveTarget.h</label>
        <link refid="resolve_target_8h_source"/>
        <childnode refid="81487" relation="include">
        </childnode>
      </node>
      <node id="81331">
        <label>pxr/base/tf/errorMark.h</label>
        <link refid="error_mark_8h"/>
        <childnode refid="81332" relation="include">
        </childnode>
        <childnode refid="81342" relation="include">
        </childnode>
        <childnode refid="81398" relation="include">
        </childnode>
        <childnode refid="81618" relation="include">
        </childnode>
      </node>
      <node id="81871">
        <label>pxr/imaging/hd/sampleFilterSchema.h</label>
        <link refid="sample_filter_schema_8h_source"/>
      </node>
      <node id="82030">
        <label>pxr/imaging/pxOsd/refinerFactory.h</label>
        <link refid="refiner_factory_8h"/>
      </node>
      <node id="81483">
        <label>pxr/usd/usd/collectionPredicateLibrary.h</label>
        <link refid="collection_predicate_library_8h"/>
      </node>
      <node id="81476">
        <label>pxr/usd/usdSkel/bindingAPI.h</label>
        <link refid="binding_a_p_i_8h"/>
      </node>
      <node id="81432">
        <label>pxr/usd/usdGeom/primvarsAPI.h</label>
        <link refid="primvars_a_p_i_8h"/>
        <childnode refid="81433" relation="include">
        </childnode>
        <childnode refid="81434" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81702">
        <label>pxr/imaging/hdSt/renderParam.h</label>
        <link refid="hd_st_2render_param_8h_source"/>
      </node>
      <node id="81507">
        <label>pxr/usd/usdGeom/nurbsPatch.h</label>
        <link refid="nurbs_patch_8h"/>
      </node>
      <node id="81593">
        <label>pxr/usd/pcp/targetIndex.h</label>
        <link refid="target_index_8h_source"/>
      </node>
      <node id="81543">
        <label>pxr/usd/usdPhysics/prismaticJoint.h</label>
        <link refid="prismatic_joint_8h"/>
      </node>
      <node id="81691">
        <label>pxr/imaging/hdPrmanLoader/rendererPlugin.h</label>
        <link refid="rman_loader_2renderer_plugin_8h_source"/>
      </node>
      <node id="81796">
        <label>pxr/usd/sdf/pathExpression.h</label>
        <link refid="path_expression_8h_source"/>
        <childnode refid="81797" relation="include">
        </childnode>
        <childnode refid="81800" relation="include">
        </childnode>
        <childnode refid="81646" relation="include">
        </childnode>
        <childnode refid="81408" relation="include">
        </childnode>
        <childnode refid="81482" relation="include">
        </childnode>
      </node>
      <node id="81727">
        <label>pxr/imaging/hd/renderPass.h</label>
        <link refid="render_pass_8h_source"/>
        <childnode refid="81697" relation="include">
        </childnode>
        <childnode refid="81728" relation="include">
        </childnode>
        <childnode refid="81729" relation="include">
        </childnode>
        <childnode refid="81730" relation="include">
        </childnode>
        <childnode refid="81731" relation="include">
        </childnode>
        <childnode refid="81732" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="81765">
        <label>pxr/imaging/hdSt/bufferArrayRegistry.h</label>
        <link refid="buffer_array_registry_8h_source"/>
        <childnode refid="81754" relation="include">
        </childnode>
      </node>
      <node id="81371">
        <label>pxr/usdImaging/usdImaging/lightAdapter.h</label>
        <link refid="light_adapter_8h"/>
        <childnode refid="81372" relation="include">
        </childnode>
        <childnode refid="81373" relation="include">
        </childnode>
        <childnode refid="81374" relation="include">
        </childnode>
        <childnode refid="81375" relation="include">
        </childnode>
        <childnode refid="81376" relation="include">
        </childnode>
        <childnode refid="81377" relation="include">
        </childnode>
        <childnode refid="81378" relation="include">
        </childnode>
        <childnode refid="81379" relation="include">
        </childnode>
        <childnode refid="81380" relation="include">
        </childnode>
        <childnode refid="81381" relation="include">
        </childnode>
      </node>
      <node id="81425">
        <label>pxr/usd/usdRi/renderPassAPI.h</label>
        <link refid="render_pass_a_p_i_8h"/>
      </node>
      <node id="81797">
        <label>pxr/usd/pcp/mapFunction.h</label>
        <link refid="map_function_8h_source"/>
        <childnode refid="81402" relation="include">
        </childnode>
        <childnode refid="81798" relation="include">
        </childnode>
        <childnode refid="81799" relation="include">
        </childnode>
        <childnode refid="81601" relation="include">
        </childnode>
      </node>
      <node id="81964">
        <label>pxr/imaging/hd/sceneIndexPluginRegistry.h</label>
        <link refid="scene_index_plugin_registry_8h_source"/>
      </node>
      <node id="81856">
        <label>pxr/imaging/hd/instanceIndicesSchema.h</label>
        <link refid="instance_indices_schema_8h_source"/>
      </node>
      <node id="81835">
        <label>pxr/imaging/hd/basisCurvesSchema.h</label>
        <link refid="basis_curves_schema_8h_source"/>
      </node>
      <node id="81524">
        <label>pxr/usd/usdVol/fieldBase.h</label>
        <link refid="field_base_8h"/>
        <childnode refid="81525" relation="include">
        </childnode>
      </node>
      <node id="81461">
        <label>pxr/usd/usdPhysics/driveAPI.h</label>
        <link refid="drive_a_p_i_8h"/>
      </node>
      <node id="81366">
        <label>pxr/usdImaging/usdImaging/pointInstancerAdapter.h</label>
        <link refid="point_instancer_adapter_8h"/>
      </node>
      <node id="81490">
        <label>pxr/usd/usdGeom/xformOp.h</label>
        <link refid="xform_op_8h"/>
        <childnode refid="81491" relation="include">
        </childnode>
        <childnode refid="81450" relation="include">
        </childnode>
      </node>
      <node id="81553">
        <label>pxr/usd/usdShade/nodeGraph.h</label>
        <link refid="node_graph_8h"/>
        <childnode refid="81471" relation="include">
        </childnode>
      </node>
      <node id="81452">
        <label>pxr/usd/usdLux/lightListAPI.h</label>
        <link refid="light_list_a_p_i_8h"/>
      </node>
      <node id="81408">
        <label>pxr/usd/usd/collectionAPI.h</label>
        <link refid="collection_a_p_i_8h"/>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81423" relation="include">
        </childnode>
        <childnode refid="81424" relation="include">
        </childnode>
        <childnode refid="81425" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
        <childnode refid="81427" relation="include">
        </childnode>
        <childnode refid="81428" relation="include">
        </childnode>
      </node>
      <node id="81685">
        <label>pxr/imaging/glf/texture.h</label>
        <link refid="glf_2texture_8h"/>
        <childnode refid="81686" relation="include">
        </childnode>
      </node>
      <node id="81928">
        <label>pxr/usdImaging/usdImaging/extentResolvingSceneIndex.h</label>
        <link refid="extent_resolving_scene_index_8h_source"/>
      </node>
      <node id="81657">
        <label>pxr/usd/sdf/childrenPolicies.h</label>
        <link refid="children_policies_8h_source"/>
        <childnode refid="81620" relation="include">
        </childnode>
      </node>
      <node id="82003">
        <label>pxr/imaging/hdSt/smoothNormals.h</label>
        <link refid="t_2smooth_normals_8h_source"/>
      </node>
      <node id="81966">
        <label>pxr/imaging/hdGp/generativeProceduralPlugin.h</label>
        <link refid="generative_procedural_plugin_8h_source"/>
        <childnode refid="81967" relation="include">
        </childnode>
      </node>
      <node id="81974">
        <label>pxr/usdImaging/usdImaging/dataSourceStage.h</label>
        <link refid="data_source_stage_8h_source"/>
      </node>
      <node id="81721">
        <label>pxr/imaging/hdSt/volume.h</label>
        <link refid="imaging_2hd_st_2volume_8h_source"/>
      </node>
      <node id="81609">
        <label>pxr/usd/usd/primDefinition.h</label>
        <link refid="prim_definition_8h_source"/>
        <childnode refid="81610" relation="include">
        </childnode>
        <childnode refid="81611" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
      </node>
      <node id="81869">
        <label>pxr/imaging/hd/displayFilterSchema.h</label>
        <link refid="display_filter_schema_8h_source"/>
      </node>
      <node id="81788">
        <label>pxr/usd/ndr/property.h</label>
        <link refid="ndr_2property_8h"/>
        <childnode refid="81789" relation="include">
        </childnode>
        <childnode refid="81793" relation="include">
        </childnode>
      </node>
      <node id="81484">
        <label>pxr/usd/usd/notice.h</label>
        <link refid="usd_2usd_2notice_8h_source"/>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81485" relation="include">
        </childnode>
      </node>
      <node id="81861">
        <label>pxr/imaging/hd/cameraSchema.h</label>
        <link refid="camera_schema_8h_source"/>
      </node>
      <node id="81406">
        <label>pxr/usd/usd/clipsAPI.h</label>
        <link refid="clips_a_p_i_8h"/>
        <childnode refid="81407" relation="include">
        </childnode>
      </node>
      <node id="81963">
        <label>pxr/imaging/hdSt/nurbsApproximatingSceneIndexPlugin.h</label>
        <link refid="nurbs_approximating_scene_index_plugin_8h_source"/>
      </node>
      <node id="81383">
        <label>pxr/usdImaging/usdImaging/pluginLightFilterAdapter.h</label>
        <link refid="plugin_light_filter_adapter_8h"/>
      </node>
      <node id="81378">
        <label>pxr/usdImaging/usdImaging/pluginLightAdapter.h</label>
        <link refid="plugin_light_adapter_8h"/>
      </node>
      <node id="81962">
        <label>pxr/imaging/hdSt/implicitSurfaceSceneIndexPlugin.h</label>
        <link refid="implicit_surface_scene_index_plugin_8h_source"/>
      </node>
      <node id="81942">
        <label>pxr/usdImaging/usdImaging/flattenedGeomModelDataSourceProvider.h</label>
        <link refid="flattened_geom_model_data_source_provider_8h_source"/>
      </node>
      <node id="81658">
        <label>pxr/usd/usdUtils/stitch.h</label>
        <link refid="stitch_8h"/>
      </node>
      <node id="81923">
        <label>pxr/imaging/hdsi/primTypeNoticeBatchingSceneIndex.h</label>
        <link refid="prim_type_notice_batching_scene_index_8h"/>
      </node>
      <node id="81467">
        <label>pxr/usd/usdPhysics/rigidBodyAPI.h</label>
        <link refid="rigid_body_a_p_i_8h"/>
      </node>
      <node id="81894">
        <label>pxr/imaging/hd/visibilitySchema.h</label>
        <link refid="visibility_schema_8h_source"/>
      </node>
      <node id="81911">
        <label>pxr/imaging/hd/mergingSceneIndex.h</label>
        <link refid="merging_scene_index_8h_source"/>
        <childnode refid="81707" relation="include">
        </childnode>
      </node>
      <node id="81809">
        <label>pxr/imaging/hd/basisCurvesTopology.h</label>
        <link refid="basis_curves_topology_8h_source"/>
        <childnode refid="81708" relation="include">
        </childnode>
      </node>
      <node id="81671">
        <label>pxr/imaging/hdPrman/cone.h</label>
        <link refid="imaging_2hd_prman_2cone_8h_source"/>
      </node>
      <node id="82044">
        <label>pxr/imaging/hf/diagnostic.h</label>
        <link refid="imaging_2hf_2diagnostic_8h_source"/>
      </node>
      <node id="81372">
        <label>pxr/usdImaging/usdImaging/cylinderLightAdapter.h</label>
        <link refid="cylinder_light_adapter_8h"/>
      </node>
      <node id="81394">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntegratorAdapter.h</label>
        <link refid="pxr_integrator_adapter_8h"/>
      </node>
      <node id="81431">
        <label>pxr/usd/usdGeom/motionAPI.h</label>
        <link refid="motion_a_p_i_8h"/>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81631">
        <label>pxr/usd/usdUtils/conditionalAbortDiagnosticDelegate.h</label>
        <link refid="conditional_abort_diagnostic_delegate_8h_source"/>
      </node>
      <node id="81667">
        <label>pxr/usd/usdSkel/animMapper.h</label>
        <link refid="anim_mapper_8h"/>
        <childnode refid="81575" relation="include">
        </childnode>
        <childnode refid="81561" relation="include">
        </childnode>
      </node>
      <node id="81504">
        <label>pxr/usd/usdGeom/hermiteCurves.h</label>
        <link refid="hermite_curves_8h"/>
      </node>
      <node id="81420">
        <label>pxr/usd/usdLux/geometryLight.h</label>
        <link refid="geometry_light_8h"/>
      </node>
      <node id="81749">
        <label>pxr/imaging/hdx/visualizeAovTask.h</label>
        <link refid="visualize_aov_task_8h_source"/>
      </node>
      <node id="81601">
        <label>pxr/usd/usd/editTarget.h</label>
        <link refid="edit_target_8h_source"/>
        <childnode refid="81602" relation="include">
        </childnode>
        <childnode refid="81603" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
        <childnode refid="81573" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
      </node>
      <node id="81545">
        <label>pxr/usd/usdPhysics/sphericalJoint.h</label>
        <link refid="spherical_joint_8h"/>
      </node>
      <node id="81522">
        <label>pxr/usd/usdGeom/xform.h</label>
        <link refid="xform_8h"/>
      </node>
      <node id="81427">
        <label>pxr/usd/usdUtils/authoring.h</label>
        <link refid="authoring_8h"/>
      </node>
      <node id="81868">
        <label>pxr/imaging/hd/materialNodeSchema.h</label>
        <link refid="material_node_schema_8h_source"/>
        <childnode refid="81869" relation="include">
        </childnode>
        <childnode refid="81870" relation="include">
        </childnode>
        <childnode refid="81871" relation="include">
        </childnode>
      </node>
      <node id="81675">
        <label>pxr/imaging/hdPrman/sphere.h</label>
        <link refid="imaging_2hd_prman_2sphere_8h_source"/>
      </node>
      <node id="81550">
        <label>pxr/usd/usdRender/settings.h</label>
        <link refid="settings_8h"/>
      </node>
      <node id="81763">
        <label>pxr/imaging/hdSt/textureBinder.h</label>
        <link refid="texture_binder_8h_source"/>
      </node>
      <node id="81981">
        <label>pxr/imaging/hdPrman/matfiltConvertPreviewMaterial.h</label>
        <link refid="matfilt_convert_preview_material_8h_source"/>
      </node>
      <node id="81438">
        <label>pxr/usdImaging/usdImaging/dataSourceGprim.h</label>
        <link refid="data_source_gprim_8h_source"/>
        <childnode refid="81439" relation="include">
        </childnode>
        <childnode refid="81440" relation="include">
        </childnode>
        <childnode refid="81441" relation="include">
        </childnode>
        <childnode refid="81442" relation="include">
        </childnode>
        <childnode refid="81443" relation="include">
        </childnode>
        <childnode refid="81444" relation="include">
        </childnode>
        <childnode refid="81445" relation="include">
        </childnode>
      </node>
      <node id="81356">
        <label>pxr/usdImaging/usdVolImaging/openvdbAssetAdapter.h</label>
        <link refid="openvdb_asset_adapter_8h_source"/>
      </node>
      <node id="81409">
        <label>pxr/usd/usdLux/lightAPI.h</label>
        <link refid="light_a_p_i_8h"/>
        <childnode refid="81410" relation="include">
        </childnode>
        <childnode refid="81416" relation="include">
        </childnode>
      </node>
      <node id="81777">
        <label>pxr/imaging/hdSt/textureHandleRegistry.h</label>
        <link refid="texture_handle_registry_8h_source"/>
      </node>
      <node id="81365">
        <label>pxr/usdImaging/usdImaging/planeAdapter.h</label>
        <link refid="plane_adapter_8h"/>
      </node>
      <node id="81608">
        <label>pxr/usd/sdf/siteUtils.h</label>
        <link refid="site_utils_8h"/>
      </node>
      <node id="81961">
        <label>pxr/imaging/hdSt/dependencySceneIndexPlugin.h</label>
        <link refid="dependency_scene_index_plugin_8h_source"/>
      </node>
      <node id="81782">
        <label>pxr/base/vt/valueFromPython.h</label>
        <link refid="value_from_python_8h"/>
      </node>
      <node id="81683">
        <label>pxr/imaging/hdx/simpleLightTask.h</label>
        <link refid="simple_light_task_8h_source"/>
      </node>
      <node id="81610">
        <label>pxr/usd/usd/primData.h</label>
        <link refid="prim_data_8h"/>
        <childnode refid="81481" relation="include">
        </childnode>
      </node>
      <node id="81414">
        <label>pxr/usd/usdLux/rectLight.h</label>
        <link refid="rect_light_8h"/>
      </node>
      <node id="82004">
        <label>pxr/imaging/hd/dirtyBitsTranslator.h</label>
        <link refid="dirty_bits_translator_8h_source"/>
      </node>
      <node id="81725">
        <label>pxr/imaging/hd/task.h</label>
        <link refid="task_8h_source"/>
        <childnode refid="81726" relation="include">
        </childnode>
        <childnode refid="81727" relation="include">
        </childnode>
        <childnode refid="81734" relation="include">
        </childnode>
        <childnode refid="81735" relation="include">
        </childnode>
        <childnode refid="81736" relation="include">
        </childnode>
        <childnode refid="81732" relation="include">
        </childnode>
        <childnode refid="81737" relation="include">
        </childnode>
        <childnode refid="81741" relation="include">
        </childnode>
        <childnode refid="81742" relation="include">
        </childnode>
        <childnode refid="81683" relation="include">
        </childnode>
        <childnode refid="81743" relation="include">
        </childnode>
        <childnode refid="81617" relation="include">
        </childnode>
      </node>
      <node id="81697">
        <label>pxr/imaging/hd/unitTestHelper.h</label>
        <link refid="imaging_2hd_2unit_test_helper_8h_source"/>
      </node>
      <node id="81565">
        <label>pxr/usd/usdShade/utils.h</label>
        <link refid="usd_2usd_shade_2utils_8h_source"/>
        <childnode refid="81562" relation="include">
        </childnode>
        <childnode refid="81563" relation="include">
        </childnode>
      </node>
      <node id="81612">
        <label>pxr/usd/usd/schemaRegistry.h</label>
        <link refid="schema_registry_8h_source"/>
        <childnode refid="81486" relation="include">
        </childnode>
        <childnode refid="81609" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
      </node>
      <node id="81967">
        <label>pxr/imaging/hdGp/generativeProceduralPluginRegistry.h</label>
        <link refid="generative_procedural_plugin_registry_8h_source"/>
      </node>
      <node id="81925">
        <label>pxr/imaging/hdsi/renderSettingsFilteringSceneIndex.h</label>
        <link refid="render_settings_filtering_scene_index_8h_source"/>
      </node>
      <node id="81893">
        <label>pxr/imaging/hd/systemSchema.h</label>
        <link refid="system_schema_8h_source"/>
      </node>
      <node id="81597">
        <label>pxr/usd/pcp/node.h</label>
        <link refid="pcp_2node_8h_source"/>
        <childnode refid="81595" relation="include">
        </childnode>
        <childnode refid="81588" relation="include">
        </childnode>
        <childnode refid="81598" relation="include">
        </childnode>
        <childnode refid="81596" relation="include">
        </childnode>
        <childnode refid="81599" relation="include">
        </childnode>
        <childnode refid="81589" relation="include">
        </childnode>
        <childnode refid="81592" relation="include">
        </childnode>
        <childnode refid="81601" relation="include">
        </childnode>
        <childnode refid="81531" relation="include">
        </childnode>
        <childnode refid="81585" relation="include">
        </childnode>
        <childnode refid="81600" relation="include">
        </childnode>
        <childnode refid="81590" relation="include">
        </childnode>
      </node>
      <node id="81626">
        <label>pxr/usd/sdf/variantSetSpec.h</label>
        <link refid="variant_set_spec_8h"/>
      </node>
      <node id="81533">
        <label>pxr/usd/usd/property.h</label>
        <link refid="usd_2property_8h_source"/>
        <childnode refid="81534" relation="include">
        </childnode>
        <childnode refid="81569" relation="include">
        </childnode>
      </node>
      <node id="81374">
        <label>pxr/usdImaging/usdImaging/distantLightAdapter.h</label>
        <link refid="distant_light_adapter_8h"/>
      </node>
      <node id="81917">
        <label>pxr/imaging/hdsi/implicitSurfaceSceneIndex.h</label>
        <link refid="implicit_surface_scene_index_8h_source"/>
      </node>
      <node id="81616">
        <label>pxr/imaging/hdx/colorCorrectionTask.h</label>
        <link refid="color_correction_task_8h_source"/>
        <childnode refid="81617" relation="include">
        </childnode>
      </node>
      <node id="81927">
        <label>pxr/usdImaging/usdImaging/drawModeSceneIndex.h</label>
        <link refid="draw_mode_scene_index_8h_source"/>
      </node>
      <node id="81881">
        <label>pxr/imaging/hd/purposeSchema.h</label>
        <link refid="purpose_schema_8h_source"/>
      </node>
      <node id="81389">
        <label>pxr/usdImaging/usdImaging/renderSettingsAdapter.h</label>
        <link refid="render_settings_adapter_8h"/>
      </node>
      <node id="81502">
        <label>pxr/usd/usdGeom/curves.h</label>
        <link refid="curves_8h"/>
        <childnode refid="81503" relation="include">
        </childnode>
        <childnode refid="81504" relation="include">
        </childnode>
        <childnode refid="81505" relation="include">
        </childnode>
      </node>
      <node id="81482">
        <label>pxr/usd/usd/collectionMembershipQuery.h</label>
        <link refid="collection_membership_query_8h"/>
        <childnode refid="81408" relation="include">
        </childnode>
      </node>
      <node id="81377">
        <label>pxr/usdImaging/usdImaging/geometryLightAdapter.h</label>
        <link refid="geometry_light_adapter_8h"/>
      </node>
      <node id="81873">
        <label>pxr/imaging/hd/nurbsCurvesSchema.h</label>
        <link refid="nurbs_curves_schema_8h_source"/>
      </node>
      <node id="81975">
        <label>pxr/usdImaging/usdImaging/flattenedDataSourceProviders.h</label>
        <link refid="usd_imaging_2usd_imaging_2flattened_data_source_providers_8h_source"/>
      </node>
      <node id="81410">
        <label>pxr/usd/usdLux/boundableLightBase.h</label>
        <link refid="boundable_light_base_8h"/>
        <childnode refid="81411" relation="include">
        </childnode>
        <childnode refid="81412" relation="include">
        </childnode>
        <childnode refid="81413" relation="include">
        </childnode>
        <childnode refid="81414" relation="include">
        </childnode>
        <childnode refid="81415" relation="include">
        </childnode>
      </node>
      <node id="81650">
        <label>pxr/usd/sdf/data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="81400" relation="include">
        </childnode>
      </node>
      <node id="81455">
        <label>pxr/usd/usdLux/shadowAPI.h</label>
        <link refid="shadow_a_p_i_8h"/>
      </node>
      <node id="81534">
        <label>pxr/usd/usd/attribute.h</label>
        <link refid="attribute_8h_source"/>
        <childnode refid="81487" relation="include">
        </childnode>
        <childnode refid="81535" relation="include">
        </childnode>
        <childnode refid="81559" relation="include">
        </childnode>
        <childnode refid="81560" relation="include">
        </childnode>
        <childnode refid="81490" relation="include">
        </childnode>
        <childnode refid="81562" relation="include">
        </childnode>
        <childnode refid="81563" relation="include">
        </childnode>
        <childnode refid="81564" relation="include">
        </childnode>
        <childnode refid="81565" relation="include">
        </childnode>
        <childnode refid="81566" relation="include">
        </childnode>
        <childnode refid="81561" relation="include">
        </childnode>
        <childnode refid="81567" relation="include">
        </childnode>
        <childnode refid="81528" relation="include">
        </childnode>
        <childnode refid="81568" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
      </node>
      <node id="81418">
        <label>pxr/usd/usdLux/domeLight.h</label>
        <link refid="dome_light_8h"/>
      </node>
      <node id="81343">
        <label>pxr/base/work/utils.h</label>
        <link refid="base_2work_2utils_8h"/>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81569">
        <label>pxr/usd/usd/relationship.h</label>
        <link refid="relationship_8h_source"/>
        <childnode refid="81535" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81561" relation="include">
        </childnode>
        <childnode refid="81570" relation="include">
        </childnode>
      </node>
      <node id="81422">
        <label>pxr/usd/usdLux/pluginLightFilter.h</label>
        <link refid="plugin_light_filter_8h"/>
      </node>
      <node id="82039">
        <label>pxr/usd/usdPhysics/metrics.h</label>
        <link refid="usd_physics_2metrics_8h"/>
      </node>
      <node id="81625">
        <label>pxr/usd/sdf/relationshipSpec.h</label>
        <link refid="relationship_spec_8h"/>
        <childnode refid="81609" relation="include">
        </childnode>
      </node>
      <node id="81670">
        <label>pxr/imaging/hdPrman/basisCurves.h</label>
        <link refid="imaging_2hd_prman_2basis_curves_8h_source"/>
      </node>
      <node id="81651">
        <label>pxr/usd/sdf/spec.h</label>
        <link refid="sdf_2spec_8h"/>
        <childnode refid="81652" relation="include">
        </childnode>
        <childnode refid="81400" relation="include">
        </childnode>
        <childnode refid="81653" relation="include">
        </childnode>
        <childnode refid="81654" relation="include">
        </childnode>
        <childnode refid="81655" relation="include">
        </childnode>
        <childnode refid="81621" relation="include">
        </childnode>
        <childnode refid="81623" relation="include">
        </childnode>
        <childnode refid="81656" relation="include">
        </childnode>
        <childnode refid="81608" relation="include">
        </childnode>
        <childnode refid="81626" relation="include">
        </childnode>
        <childnode refid="81627" relation="include">
        </childnode>
        <childnode refid="81658" relation="include">
        </childnode>
      </node>
      <node id="81337">
        <label>pxr/base/tf/pyPolymorphic.h</label>
        <link refid="py_polymorphic_8h"/>
      </node>
      <node id="81448">
        <label>pxr/usdImaging/usdVolImaging/dataSourceFieldAsset.h</label>
        <link refid="data_source_field_asset_8h_source"/>
      </node>
      <node id="81956">
        <label>pxr/imaging/hdGp/sceneIndexPlugin.h</label>
        <link refid="p_2scene_index_plugin_8h_source"/>
      </node>
      <node id="81513">
        <label>pxr/usd/usdSkel/root.h</label>
        <link refid="root_8h"/>
      </node>
      <node id="81633">
        <label>pxr/base/tf/warning.h</label>
        <link refid="warning_8h_source"/>
        <childnode refid="81330" relation="include">
        </childnode>
      </node>
      <node id="81758">
        <label>pxr/imaging/hdSt/geometricShader.h</label>
        <link refid="geometric_shader_8h_source"/>
      </node>
      <node id="81878">
        <label>pxr/imaging/hd/extComputationPrimvarSchema.h</label>
        <link refid="ext_computation_primvar_schema_8h_source"/>
        <childnode refid="81879" relation="include">
        </childnode>
      </node>
      <node id="81596">
        <label>pxr/usd/pcp/instanceKey.h</label>
        <link refid="instance_key_8h_source"/>
      </node>
      <node id="81465">
        <label>pxr/usd/usdPhysics/materialAPI.h</label>
        <link refid="usd_physics_2material_a_p_i_8h"/>
      </node>
      <node id="81460">
        <label>pxr/usd/usdPhysics/collisionAPI.h</label>
        <link refid="collision_a_p_i_8h"/>
      </node>
      <node id="81591">
        <label>pxr/usd/pcp/layerStack.h</label>
        <link refid="layer_stack_8h"/>
      </node>
      <node id="81684">
        <label>pxr/usdImaging/usdImagingGL/engine.h</label>
        <link refid="usd_imaging_2usd_imaging_g_l_2engine_8h"/>
        <childnode refid="81521" relation="include">
        </childnode>
      </node>
      <node id="81687">
        <label>pxr/imaging/hd/command.h</label>
        <link refid="command_8h_source"/>
        <childnode refid="81688" relation="include">
        </childnode>
      </node>
      <node id="81760">
        <label>pxr/imaging/hdSt/fallbackLightingShader.h</label>
        <link refid="fallback_lighting_shader_8h_source"/>
      </node>
      <node id="81971">
        <label>pxr/imaging/hd/selectionsSchema.h</label>
        <link refid="selections_schema_8h_source"/>
      </node>
      <node id="81661">
        <label>pxr/usd/sdf/childrenUtils.h</label>
        <link refid="children_utils_8h"/>
      </node>
      <node id="81876">
        <label>pxr/imaging/hd/primOriginSchema.h</label>
        <link refid="prim_origin_schema_8h_source"/>
        <childnode refid="81732" relation="include">
        </childnode>
      </node>
      <node id="81663">
        <label>pxr/usd/sdf/layerStateDelegate.h</label>
        <link refid="layer_state_delegate_8h_source"/>
      </node>
      <node id="81621">
        <label>pxr/usd/sdf/primSpec.h</label>
        <link refid="prim_spec_8h"/>
        <childnode refid="81599" relation="include">
        </childnode>
        <childnode refid="81622" relation="include">
        </childnode>
        <childnode refid="81608" relation="include">
        </childnode>
        <childnode refid="81601" relation="include">
        </childnode>
        <childnode refid="81612" relation="include">
        </childnode>
      </node>
      <node id="81864">
        <label>pxr/imaging/hd/materialBindingsSchema.h</label>
        <link refid="material_bindings_schema_8h_source"/>
      </node>
      <node id="81583">
        <label>pxr/usdImaging/usdImaging/dataSourceUsdPrimInfo.h</label>
        <link refid="data_source_usd_prim_info_8h_source"/>
      </node>
      <node id="81773">
        <label>pxr/imaging/hio/image.h</label>
        <link refid="image_8h"/>
        <childnode refid="81685" relation="include">
        </childnode>
        <childnode refid="81774" relation="include">
        </childnode>
        <childnode refid="81779" relation="include">
        </childnode>
        <childnode refid="81781" relation="include">
        </childnode>
      </node>
      <node id="81488">
        <label>pxr/usd/usdGeom/bboxCache.h</label>
        <link refid="bbox_cache_8h_source"/>
        <childnode refid="81430" relation="include">
        </childnode>
      </node>
      <node id="81428">
        <label>pxr/usdImaging/usdImaging/collectionCache.h</label>
        <link refid="collection_cache_8h"/>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
      </node>
      <node id="81807">
        <label>pxr/imaging/hdEmbree/renderer.h</label>
        <link refid="renderer_8h_source"/>
      </node>
      <node id="81529">
        <label>pxr/usd/usd/inherits.h</label>
        <link refid="inherits_8h_source"/>
      </node>
      <node id="81393">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrDisplayFilterAdapter.h</label>
        <link refid="pxr_display_filter_adapter_8h"/>
      </node>
      <node id="81335">
        <label>pxr/base/tf/pyFunction.h</label>
        <link refid="py_function_8h_source"/>
        <childnode refid="81336" relation="include">
        </childnode>
      </node>
      <node id="81750">
        <label>pxr/imaging/hd/unitTestDelegate.h</label>
        <link refid="unit_test_delegate_8h_source"/>
        <childnode refid="81697" relation="include">
        </childnode>
      </node>
      <node id="81715">
        <label>pxr/imaging/hd/mesh.h</label>
        <link refid="imaging_2hd_2mesh_8h_source"/>
        <childnode refid="81716" relation="include">
        </childnode>
        <childnode refid="81673" relation="include">
        </childnode>
        <childnode refid="81717" relation="include">
        </childnode>
      </node>
      <node id="81922">
        <label>pxr/imaging/hdsi/pinnedCurveExpandingSceneIndex.h</label>
        <link refid="pinned_curve_expanding_scene_index_8h_source"/>
      </node>
      <node id="81350">
        <label>pxr/usdImaging/usdImaging/cameraAdapter.h</label>
        <link refid="camera_adapter_8h"/>
      </node>
      <node id="81879">
        <label>pxr/imaging/hd/extComputationPrimvarsSchema.h</label>
        <link refid="ext_computation_primvars_schema_8h_source"/>
      </node>
      <node id="81910">
        <label>pxr/imaging/hd/materialFilteringSceneIndexBase.h</label>
        <link refid="material_filtering_scene_index_base_8h_source"/>
      </node>
      <node id="81938">
        <label>pxr/imaging/hd/flattenedPrimvarsDataSourceProvider.h</label>
        <link refid="flattened_primvars_data_source_provider_8h_source"/>
      </node>
      <node id="81851">
        <label>pxr/imaging/hd/geomSubsetsSchema.h</label>
        <link refid="geom_subsets_schema_8h_source"/>
        <childnode refid="81835" relation="include">
        </childnode>
        <childnode refid="81852" relation="include">
        </childnode>
      </node>
      <node id="81475">
        <label>pxr/usd/usdLux/pluginLight.h</label>
        <link refid="plugin_light_8h"/>
      </node>
      <node id="81381">
        <label>pxr/usdImaging/usdImaging/sphereLightAdapter.h</label>
        <link refid="sphere_light_adapter_8h"/>
      </node>
      <node id="81860">
        <label>pxr/imaging/hd/lensDistortionSchema.h</label>
        <link refid="lens_distortion_schema_8h_source"/>
        <childnode refid="81861" relation="include">
        </childnode>
      </node>
      <node id="81349">
        <label>pxr/usdImaging/usdImaging/basisCurvesAdapter.h</label>
        <link refid="basis_curves_adapter_8h"/>
      </node>
      <node id="81844">
        <label>pxr/imaging/hd/dependenciesSchema.h</label>
        <link refid="dependencies_schema_8h_source"/>
      </node>
      <node id="81619">
        <label>pxr/usd/sdf/listEditorProxy.h</label>
        <link refid="list_editor_proxy_8h"/>
        <childnode refid="81620" relation="include">
        </childnode>
        <childnode refid="81338" relation="include">
        </childnode>
      </node>
      <node id="81519">
        <label>pxr/usd/usdGeom/camera.h</label>
        <link refid="usd_2usd_geom_2camera_8h"/>
        <childnode refid="81520" relation="include">
        </childnode>
        <childnode refid="81521" relation="include">
        </childnode>
        <childnode refid="81437" relation="include">
        </childnode>
      </node>
      <node id="81415">
        <label>pxr/usd/usdLux/sphereLight.h</label>
        <link refid="sphere_light_8h"/>
      </node>
      <node id="81575">
        <label>pxr/usd/usdSkel/skeletonQuery.h</label>
        <link refid="skeleton_query_8h"/>
        <childnode refid="81396" relation="include">
        </childnode>
      </node>
      <node id="81852">
        <label>pxr/imaging/hd/meshSchema.h</label>
        <link refid="mesh_schema_8h_source"/>
      </node>
      <node id="82022">
        <label>pxr/imaging/hdSt/bufferUtils.h</label>
        <link refid="buffer_utils_8h_source"/>
      </node>
      <node id="81362">
        <label>pxr/usdImaging/usdImaging/meshAdapter.h</label>
        <link refid="mesh_adapter_8h"/>
      </node>
      <node id="81845">
        <label>pxr/imaging/hd/extComputationInputComputationSchema.h</label>
        <link refid="ext_computation_input_computation_schema_8h_source"/>
      </node>
      <node id="81896">
        <label>pxr/imaging/hd/volumeFieldSchema.h</label>
        <link refid="volume_field_schema_8h_source"/>
      </node>
      <node id="81787">
        <label>pxr/usd/ar/threadLocalScopedCache.h</label>
        <link refid="thread_local_scoped_cache_8h_source"/>
      </node>
      <node id="81830">
        <label>pxr/imaging/hd/dataSourceHash.h</label>
        <link refid="data_source_hash_8h_source"/>
        <childnode refid="81831" relation="include">
        </childnode>
      </node>
      <node id="81719">
        <label>pxr/imaging/hdSt/points.h</label>
        <link refid="imaging_2hd_st_2points_8h_source"/>
      </node>
      <node id="81462">
        <label>pxr/usd/usdPhysics/filteredPairsAPI.h</label>
        <link refid="filtered_pairs_a_p_i_8h"/>
      </node>
      <node id="82037">
        <label>pxr/usd/usdGeom/metrics.h</label>
        <link refid="usd_geom_2metrics_8h"/>
      </node>
      <node id="81983">
        <label>pxr/imaging/hd/meshTopology.h</label>
        <link refid="hd_2mesh_topology_8h_source"/>
        <childnode refid="81715" relation="include">
        </childnode>
        <childnode refid="81984" relation="include">
        </childnode>
        <childnode refid="81708" relation="include">
        </childnode>
        <childnode refid="81396" relation="include">
        </childnode>
      </node>
      <node id="81472">
        <label>pxr/usd/usdShade/shaderDefUtils.h</label>
        <link refid="shader_def_utils_8h_source"/>
      </node>
      <node id="81906">
        <label>pxr/usdImaging/usdImaging/usdRenderVarSchema.h</label>
        <link refid="usd_render_var_schema_8h_source"/>
      </node>
      <node id="81805">
        <label>pxr/imaging/hd/aov.h</label>
        <link refid="aov_8h_source"/>
        <childnode refid="81688" relation="include">
        </childnode>
        <childnode refid="81806" relation="include">
        </childnode>
        <childnode refid="81708" relation="include">
        </childnode>
        <childnode refid="81729" relation="include">
        </childnode>
        <childnode refid="81617" relation="include">
        </childnode>
      </node>
      <node id="81352">
        <label>pxr/usdImaging/usdImaging/cubeAdapter.h</label>
        <link refid="cube_adapter_8h"/>
      </node>
      <node id="81855">
        <label>pxr/imaging/hd/instancedBySchema.h</label>
        <link refid="instanced_by_schema_8h_source"/>
      </node>
      <node id="81387">
        <label>pxr/usdImaging/usdImaging/materialAdapter.h</label>
        <link refid="material_adapter_8h"/>
      </node>
      <node id="81848">
        <label>pxr/imaging/hd/extentSchema.h</label>
        <link refid="extent_schema_8h_source"/>
        <childnode refid="81849" relation="include">
        </childnode>
      </node>
      <node id="81904">
        <label>pxr/usdImaging/usdImaging/usdRenderProductSchema.h</label>
        <link refid="usd_render_product_schema_8h_source"/>
      </node>
      <node id="81330">
        <label>pxr/base/tf/diagnosticMgr.h</label>
        <link refid="diagnostic_mgr_8h"/>
        <childnode refid="81331" relation="include">
        </childnode>
        <childnode refid="81629" relation="include">
        </childnode>
        <childnode refid="81630" relation="include">
        </childnode>
        <childnode refid="81631" relation="include">
        </childnode>
      </node>
      <node id="81828">
        <label>pxr/imaging/hd/containerDataSourceEditor.h</label>
        <link refid="container_data_source_editor_8h_source"/>
        <childnode refid="81829" relation="include">
        </childnode>
      </node>
      <node id="81870">
        <label>pxr/imaging/hd/integratorSchema.h</label>
        <link refid="integrator_schema_8h_source"/>
      </node>
      <node id="81537">
        <label>pxr/usd/usdGeom/imageable.h</label>
        <link refid="imageable_8h"/>
        <childnode refid="81430" relation="include">
        </childnode>
        <childnode refid="81538" relation="include">
        </childnode>
        <childnode refid="81539" relation="include">
        </childnode>
        <childnode refid="81491" relation="include">
        </childnode>
        <childnode refid="81540" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81728">
        <label>pxr/imaging/hd/unitTestNullRenderPass.h</label>
        <link refid="unit_test_null_render_pass_8h_source"/>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="81469">
        <label>pxr/usd/usdRi/splineAPI.h</label>
        <link refid="spline_a_p_i_8h"/>
      </node>
      <node id="82033">
        <label>pxr/usd/sdf/pyListOp.h</label>
        <link refid="py_list_op_8h_source"/>
      </node>
      <node id="82032">
        <label>pxr/usd/sdf/pyChildrenView.h</label>
        <link refid="py_children_view_8h"/>
      </node>
      <node id="81767">
        <label>pxr/imaging/hdSt/strategyBase.h</label>
        <link refid="strategy_base_8h_source"/>
        <childnode refid="81765" relation="include">
        </childnode>
        <childnode refid="81768" relation="include">
        </childnode>
        <childnode refid="81769" relation="include">
        </childnode>
        <childnode refid="81764" relation="include">
        </childnode>
      </node>
      <node id="81877">
        <label>pxr/imaging/hd/primvarSchema.h</label>
        <link refid="primvar_schema_8h_source"/>
        <childnode refid="81878" relation="include">
        </childnode>
        <childnode refid="81880" relation="include">
        </childnode>
      </node>
      <node id="81341">
        <label>pxr/usd/sdf/pySpec.h</label>
        <link refid="py_spec_8h"/>
      </node>
      <node id="81558">
        <label>pxr/usd/usdUI/backdrop.h</label>
        <link refid="backdrop_8h"/>
      </node>
      <node id="81769">
        <label>pxr/imaging/hdSt/vboMemoryManager.h</label>
        <link refid="vbo_memory_manager_8h_source"/>
      </node>
      <node id="81885">
        <label>pxr/imaging/hd/renderSettingsSchema.h</label>
        <link refid="render_settings_schema_8h_source"/>
      </node>
      <node id="81544">
        <label>pxr/usd/usdPhysics/revoluteJoint.h</label>
        <link refid="revolute_joint_8h"/>
      </node>
      <node id="81478">
        <label>pxr/usd/usdUI/sceneGraphPrimAPI.h</label>
        <link refid="scene_graph_prim_a_p_i_8h"/>
      </node>
      <node id="81595">
        <label>pxr/usd/pcp/arc.h</label>
        <link refid="arc_8h_source"/>
      </node>
      <node id="81784">
        <label>pxr/usd/ar/assetInfo.h</label>
        <link refid="asset_info_8h"/>
        <childnode refid="81400" relation="include">
        </childnode>
      </node>
      <node id="81780">
        <label>pxr/imaging/hdSt/renderBuffer.h</label>
        <link refid="t_2render_buffer_8h_source"/>
      </node>
      <node id="81986">
        <label>pxr/imaging/hd/timeSampleArray.h</label>
        <link refid="time_sample_array_8h_source"/>
        <childnode refid="81708" relation="include">
        </childnode>
        <childnode refid="81987" relation="include">
        </childnode>
        <childnode refid="81751" relation="include">
        </childnode>
      </node>
      <node id="81549">
        <label>pxr/usd/usdRender/product.h</label>
        <link refid="product_8h"/>
      </node>
      <node id="81730">
        <label>pxr/imaging/hdSt/imageShaderRenderPass.h</label>
        <link refid="image_shader_render_pass_8h_source"/>
      </node>
      <node id="81530">
        <label>pxr/usd/usd/payloads.h</label>
        <link refid="payloads_8h_source"/>
      </node>
      <node id="81985">
        <label>pxr/imaging/hdEmbree/meshSamplers.h</label>
        <link refid="mesh_samplers_8h_source"/>
      </node>
      <node id="81468">
        <label>pxr/usd/usdRi/materialAPI.h</label>
        <link refid="usd_ri_2material_a_p_i_8h"/>
      </node>
      <node id="81463">
        <label>pxr/usd/usdPhysics/limitAPI.h</label>
        <link refid="limit_a_p_i_8h"/>
      </node>
      <node id="81708">
        <label>pxr/imaging/hd/sceneDelegate.h</label>
        <link refid="scene_delegate_8h_source"/>
        <childnode refid="81709" relation="include">
        </childnode>
        <childnode refid="81710" relation="include">
        </childnode>
        <childnode refid="81712" relation="include">
        </childnode>
        <childnode refid="81724" relation="include">
        </childnode>
        <childnode refid="81725" relation="include">
        </childnode>
        <childnode refid="81750" relation="include">
        </childnode>
        <childnode refid="81751" relation="include">
        </childnode>
        <childnode refid="81723" relation="include">
        </childnode>
        <childnode refid="81752" relation="include">
        </childnode>
        <childnode refid="81617" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81753" relation="include">
        </childnode>
      </node>
      <node id="81863">
        <label>pxr/imaging/hd/materialBindingSchema.h</label>
        <link refid="material_binding_schema_8h_source"/>
        <childnode refid="81864" relation="include">
        </childnode>
      </node>
      <node id="81693">
        <label>pxr/imaging/hd/rendererPluginHandle.h</label>
        <link refid="renderer_plugin_handle_8h_source"/>
        <childnode refid="81694" relation="include">
        </childnode>
      </node>
      <node id="81638">
        <label>pxr/base/tf/pyPtrHelpers.h</label>
        <link refid="py_ptr_helpers_8h"/>
        <childnode refid="81639" relation="include">
        </childnode>
      </node>
      <node id="81589">
        <label>pxr/usd/pcp/primIndex.h</label>
        <link refid="prim_index_8h_source"/>
        <childnode refid="81402" relation="include">
        </childnode>
        <childnode refid="81531" relation="include">
        </childnode>
        <childnode refid="81590" relation="include">
        </childnode>
      </node>
      <node id="82016">
        <label>pxr/imaging/hdPrman/displayFilter.h</label>
        <link refid="display_filter_8h_source"/>
      </node>
      <node id="81411">
        <label>pxr/usd/usdLux/cylinderLight.h</label>
        <link refid="cylinder_light_8h"/>
      </node>
      <node id="81528">
        <label>pxr/usdImaging/usdImaging/dataSourceAttribute.h</label>
        <link refid="data_source_attribute_8h_source"/>
        <childnode refid="81434" relation="include">
        </childnode>
      </node>
      <node id="81968">
        <label>pxr/usdImaging/usdImaging/sceneIndices.h</label>
        <link refid="scene_indices_8h_source"/>
      </node>
      <node id="82036">
        <label>pxr/usd/usd/stageLoadRules.h</label>
        <link refid="stage_load_rules_8h"/>
        <childnode refid="81404" relation="include">
        </childnode>
      </node>
      <node id="81912">
        <label>pxr/imaging/hd/noticeBatchingSceneIndex.h</label>
        <link refid="notice_batching_scene_index_8h_source"/>
        <childnode refid="81707" relation="include">
        </childnode>
      </node>
      <node id="81637">
        <label>pxr/base/tf/pyNoticeWrapper.h</label>
        <link refid="py_notice_wrapper_8h_source"/>
      </node>
      <node id="82029">
        <label>pxr/imaging/pxOsd/meshTopology.h</label>
        <link refid="px_osd_2mesh_topology_8h"/>
        <childnode refid="81983" relation="include">
        </childnode>
        <childnode refid="82030" relation="include">
        </childnode>
      </node>
      <node id="81916">
        <label>pxr/imaging/hdsi/extComputationPrimvarPruningSceneIndex.h</label>
        <link refid="ext_computation_primvar_pruning_scene_index_8h_source"/>
      </node>
      <node id="82042">
        <label>pxr/usd/usdUtils/stageCache.h</label>
        <link refid="tils_2stage_cache_8h"/>
      </node>
      <node id="82041">
        <label>pxr/usd/usd/stageCache.h</label>
        <link refid="stage_cache_8h_source"/>
        <childnode refid="82042" relation="include">
        </childnode>
      </node>
      <node id="81503">
        <label>pxr/usd/usdGeom/basisCurves.h</label>
        <link refid="usd_2usd_geom_2basis_curves_8h"/>
        <childnode refid="81439" relation="include">
        </childnode>
      </node>
      <node id="81359">
        <label>pxr/usdImaging/usdImaging/coneAdapter.h</label>
        <link refid="cone_adapter_8h"/>
      </node>
      <node id="81489">
        <label>pxr/usd/usdGeom/xformCache.h</label>
        <link refid="xform_cache_8h_source"/>
        <childnode refid="81488" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81357" relation="include">
        </childnode>
      </node>
      <node id="81939">
        <label>pxr/imaging/hd/flattenedPurposeDataSourceProvider.h</label>
        <link refid="flattened_purpose_data_source_provider_8h_source"/>
      </node>
      <node id="81370">
        <label>pxr/usdImaging/usdImaging/instanceAdapter.h</label>
        <link refid="instance_adapter_8h"/>
      </node>
      <node id="81811">
        <label>pxr/imaging/hd/bufferArrayRange.h</label>
        <link refid="buffer_array_range_8h_source"/>
        <childnode refid="81812" relation="include">
        </childnode>
        <childnode refid="81824" relation="include">
        </childnode>
        <childnode refid="81825" relation="include">
        </childnode>
        <childnode refid="81765" relation="include">
        </childnode>
        <childnode refid="81754" relation="include">
        </childnode>
      </node>
      <node id="82011">
        <label>pxr/imaging/hd/coordSys.h</label>
        <link refid="coord_sys_8h_source"/>
        <childnode refid="82012" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81800">
        <label>pxr/usd/sdf/pathExpressionEval.h</label>
        <link refid="path_expression_eval_8h_source"/>
        <childnode refid="81482" relation="include">
        </childnode>
      </node>
      <node id="81656">
        <label>pxr/usd/sdf/proxyPolicies.h</label>
        <link refid="proxy_policies_8h"/>
        <childnode refid="81657" relation="include">
        </childnode>
        <childnode refid="81620" relation="include">
        </childnode>
      </node>
      <node id="81419">
        <label>pxr/usd/usdLux/domeLight_1.h</label>
        <link refid="dome_light__1_8h"/>
      </node>
      <node id="81954">
        <label>pxr/imaging/hd/legacyPrimSceneIndex.h</label>
        <link refid="legacy_prim_scene_index_8h_source"/>
        <childnode refid="81707" relation="include">
        </childnode>
      </node>
      <node id="81955">
        <label>pxr/imaging/hd/sceneIndexPlugin.h</label>
        <link refid="scene_index_plugin_8h_source"/>
        <childnode refid="81956" relation="include">
        </childnode>
        <childnode refid="81957" relation="include">
        </childnode>
        <childnode refid="81958" relation="include">
        </childnode>
        <childnode refid="81959" relation="include">
        </childnode>
        <childnode refid="81960" relation="include">
        </childnode>
        <childnode refid="81961" relation="include">
        </childnode>
        <childnode refid="81962" relation="include">
        </childnode>
        <childnode refid="81963" relation="include">
        </childnode>
      </node>
      <node id="81812">
        <label>pxr/imaging/hd/rprimSharedData.h</label>
        <link refid="rprim_shared_data_8h_source"/>
        <childnode refid="81813" relation="include">
        </childnode>
        <childnode refid="81712" relation="include">
        </childnode>
      </node>
      <node id="81886">
        <label>pxr/imaging/hd/renderVarSchema.h</label>
        <link refid="render_var_schema_8h_source"/>
      </node>
      <node id="81512">
        <label>pxr/usd/usdProc/generativeProcedural.h</label>
        <link refid="usd_2usd_proc_2generative_procedural_8h"/>
      </node>
      <node id="81655">
        <label>pxr/usd/sdf/mapEditProxy.h</label>
        <link refid="map_edit_proxy_8h"/>
        <childnode refid="81620" relation="include">
        </childnode>
      </node>
      <node id="81617">
        <label>pxr/imaging/hdx/taskController.h</label>
        <link refid="task_controller_8h_source"/>
      </node>
      <node id="81847">
        <label>pxr/imaging/hd/extComputationSchema.h</label>
        <link refid="ext_computation_schema_8h_source"/>
      </node>
      <node id="81623">
        <label>pxr/usd/sdf/propertySpec.h</label>
        <link refid="property_spec_8h"/>
        <childnode refid="81599" relation="include">
        </childnode>
        <childnode refid="81592" relation="include">
        </childnode>
        <childnode refid="81624" relation="include">
        </childnode>
        <childnode refid="81625" relation="include">
        </childnode>
        <childnode refid="81608" relation="include">
        </childnode>
        <childnode refid="81609" relation="include">
        </childnode>
        <childnode refid="81533" relation="include">
        </childnode>
      </node>
      <node id="81379">
        <label>pxr/usdImaging/usdImaging/portalLightAdapter.h</label>
        <link refid="portal_light_adapter_8h"/>
      </node>
      <node id="81605">
        <label>pxr/usd/sdf/layerUtils.h</label>
        <link refid="layer_utils_8h"/>
      </node>
      <node id="81897">
        <label>pxr/imaging/hd/xformSchema.h</label>
        <link refid="xform_schema_8h_source"/>
      </node>
      <node id="81992">
        <label>pxr/imaging/hd/renderBuffer.h</label>
        <link refid="render_buffer_8h_source"/>
        <childnode refid="81993" relation="include">
        </childnode>
        <childnode refid="81780" relation="include">
        </childnode>
        <childnode refid="81733" relation="include">
        </childnode>
      </node>
      <node id="81703">
        <label>pxr/imaging/hd/imageShader.h</label>
        <link refid="image_shader_8h_source"/>
      </node>
      <node id="81676">
        <label>pxr/imaging/hdPrman/volume.h</label>
        <link refid="imaging_2hd_prman_2volume_8h_source"/>
      </node>
      <node id="81373">
        <label>pxr/usdImaging/usdImaging/diskLightAdapter.h</label>
        <link refid="disk_light_adapter_8h"/>
      </node>
      <node id="82013">
        <label>pxr/imaging/hd/light.h</label>
        <link refid="light_8h_source"/>
        <childnode refid="82014" relation="include">
        </childnode>
        <childnode refid="81682" relation="include">
        </childnode>
      </node>
      <node id="81571">
        <label>pxr/usd/usd/references.h</label>
        <link refid="references_8h_source"/>
        <childnode refid="81535" relation="include">
        </childnode>
      </node>
      <node id="81839">
        <label>pxr/imaging/hd/coordSysBindingSchema.h</label>
        <link refid="coord_sys_binding_schema_8h_source"/>
      </node>
      <node id="81965">
        <label>pxr/imaging/hdGp/generativeProcedural.h</label>
        <link refid="imaging_2hd_gp_2generative_procedural_8h_source"/>
        <childnode refid="81966" relation="include">
        </childnode>
        <childnode refid="81914" relation="include">
        </childnode>
      </node>
      <node id="81346">
        <label>pxr/usdImaging/usdImaging/indexProxy.h</label>
        <link refid="index_proxy_8h"/>
      </node>
      <node id="81837">
        <label>pxr/imaging/hd/categoriesSchema.h</label>
        <link refid="categories_schema_8h_source"/>
      </node>
      <node id="81929">
        <label>pxr/usdImaging/usdImaging/piPrototypePropagatingSceneIndex.h</label>
        <link refid="pi_prototype_propagating_scene_index_8h_source"/>
      </node>
      <node id="81437">
        <label>pxr/usdImaging/usdImaging/dataSourceCamera.h</label>
        <link refid="data_source_camera_8h_source"/>
      </node>
      <node id="81338">
        <label>pxr/usd/sdf/pyListEditorProxy.h</label>
        <link refid="py_list_editor_proxy_8h"/>
      </node>
      <node id="81694">
        <label>pxr/imaging/hd/pluginRenderDelegateUniqueHandle.h</label>
        <link refid="plugin_render_delegate_unique_handle_8h_source"/>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81329">
        <label>pxr/base/tf/error.h</label>
        <link refid="tf_2error_8h"/>
        <childnode refid="81330" relation="include">
        </childnode>
      </node>
      <node id="81754">
        <label>pxr/imaging/hdSt/resourceRegistry.h</label>
        <link refid="t_2resource_registry_8h_source"/>
        <childnode refid="81755" relation="include">
        </childnode>
        <childnode refid="81723" relation="include">
        </childnode>
        <childnode refid="81757" relation="include">
        </childnode>
        <childnode refid="81764" relation="include">
        </childnode>
      </node>
      <node id="81996">
        <label>pxr/imaging/hd/vtBufferSource.h</label>
        <link refid="vt_buffer_source_8h_source"/>
        <childnode refid="81997" relation="include">
        </childnode>
        <childnode refid="81998" relation="include">
        </childnode>
      </node>
      <node id="81421">
        <label>pxr/usd/usdLux/lightFilter.h</label>
        <link refid="usd_2usd_lux_2light_filter_8h"/>
        <childnode refid="81422" relation="include">
        </childnode>
      </node>
      <node id="81598">
        <label>pxr/usd/pcp/dynamicFileFormatContext.h</label>
        <link refid="dynamic_file_format_context_8h_source"/>
      </node>
      <node id="82040">
        <label>pxr/usd/usdUtils/pipeline.h</label>
        <link refid="pipeline_8h"/>
      </node>
      <node id="81819">
        <label>pxr/imaging/hdSt/drawTarget.h</label>
        <link refid="hd_st_2draw_target_8h_source"/>
      </node>
      <node id="81970">
        <label>pxr/imaging/hd/vectorSchema.h</label>
        <link refid="vector_schema_8h_source"/>
        <childnode refid="81971" relation="include">
        </childnode>
        <childnode refid="81972" relation="include">
        </childnode>
      </node>
      <node id="81907">
        <label>pxr/imaging/hd/filteringSceneIndex.h</label>
        <link refid="filtering_scene_index_8h_source"/>
        <childnode refid="81908" relation="include">
        </childnode>
        <childnode refid="81909" relation="include">
        </childnode>
        <childnode refid="81910" relation="include">
        </childnode>
        <childnode refid="81911" relation="include">
        </childnode>
        <childnode refid="81912" relation="include">
        </childnode>
        <childnode refid="81913" relation="include">
        </childnode>
        <childnode refid="81914" relation="include">
        </childnode>
        <childnode refid="81915" relation="include">
        </childnode>
        <childnode refid="81916" relation="include">
        </childnode>
        <childnode refid="81917" relation="include">
        </childnode>
        <childnode refid="81918" relation="include">
        </childnode>
        <childnode refid="81919" relation="include">
        </childnode>
        <childnode refid="81920" relation="include">
        </childnode>
        <childnode refid="81921" relation="include">
        </childnode>
        <childnode refid="81922" relation="include">
        </childnode>
        <childnode refid="81923" relation="include">
        </childnode>
        <childnode refid="81924" relation="include">
        </childnode>
        <childnode refid="81925" relation="include">
        </childnode>
        <childnode refid="81926" relation="include">
        </childnode>
        <childnode refid="81927" relation="include">
        </childnode>
        <childnode refid="81928" relation="include">
        </childnode>
        <childnode refid="81831" relation="include">
        </childnode>
        <childnode refid="81929" relation="include">
        </childnode>
        <childnode refid="81930" relation="include">
        </childnode>
        <childnode refid="81931" relation="include">
        </childnode>
        <childnode refid="81932" relation="include">
        </childnode>
        <childnode refid="81933" relation="include">
        </childnode>
        <childnode refid="81934" relation="include">
        </childnode>
      </node>
      <node id="81829">
        <label>pxr/imaging/hd/dataSourceMaterialNetworkInterface.h</label>
        <link refid="data_source_material_network_interface_8h_source"/>
      </node>
      <node id="81997">
        <label>pxr/imaging/hdEmbree/instancer.h</label>
        <link refid="mbree_2instancer_8h_source"/>
      </node>
      <node id="81582">
        <label>pxr/usdImaging/usdImaging/dataSourceStageGlobals.h</label>
        <link refid="data_source_stage_globals_8h_source"/>
        <childnode refid="81528" relation="include">
        </childnode>
        <childnode refid="81439" relation="include">
        </childnode>
        <childnode refid="81437" relation="include">
        </childnode>
        <childnode refid="81438" relation="include">
        </childnode>
        <childnode refid="81446" relation="include">
        </childnode>
        <childnode refid="81440" relation="include">
        </childnode>
        <childnode refid="81443" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
        <childnode refid="81434" relation="include">
        </childnode>
        <childnode refid="81570" relation="include">
        </childnode>
        <childnode refid="81447" relation="include">
        </childnode>
        <childnode refid="81444" relation="include">
        </childnode>
        <childnode refid="81445" relation="include">
        </childnode>
        <childnode refid="81485" relation="include">
        </childnode>
        <childnode refid="81448" relation="include">
        </childnode>
      </node>
      <node id="81552">
        <label>pxr/usd/usdRender/var.h</label>
        <link refid="var_8h"/>
      </node>
      <node id="81568">
        <label>pxr/usdImaging/usdImaging/dataSourceAttributeColorSpace.h</label>
        <link refid="data_source_attribute_color_space_8h_source"/>
      </node>
      <node id="81369">
        <label>pxr/usdImaging/usdImaging/volumeAdapter.h</label>
        <link refid="volume_adapter_8h"/>
      </node>
      <node id="81836">
        <label>pxr/imaging/hd/capsuleSchema.h</label>
        <link refid="capsule_schema_8h_source"/>
      </node>
      <node id="81705">
        <label>pxr/imaging/hdPrman/renderSettings.h</label>
        <link refid="rman_2render_settings_8h_source"/>
      </node>
      <node id="81738">
        <label>pxr/imaging/hdx/renderTask.h</label>
        <link refid="render_task_8h_source"/>
        <childnode refid="81739" relation="include">
        </childnode>
        <childnode refid="81740" relation="include">
        </childnode>
      </node>
      <node id="81921">
        <label>pxr/imaging/hdsi/nurbsApproximatingSceneIndex.h</label>
        <link refid="nurbs_approximating_scene_index_8h_source"/>
      </node>
      <node id="81934">
        <label>pxr/usdImaging/usdImaging/unloadedDrawModeSceneIndex.h</label>
        <link refid="unloaded_draw_mode_scene_index_8h_source"/>
      </node>
      <node id="81559">
        <label>pxr/usd/usdGeom/constraintTarget.h</label>
        <link refid="constraint_target_8h_source"/>
        <childnode refid="81430" relation="include">
        </childnode>
      </node>
      <node id="81354">
        <label>pxr/usdImaging/usdImaging/fieldAdapter.h</label>
        <link refid="field_adapter_8h"/>
        <childnode refid="81355" relation="include">
        </childnode>
        <childnode refid="81356" relation="include">
        </childnode>
      </node>
      <node id="81367">
        <label>pxr/usdImaging/usdImaging/pointsAdapter.h</label>
        <link refid="points_adapter_8h"/>
      </node>
      <node id="81841">
        <label>pxr/imaging/hd/cubeSchema.h</label>
        <link refid="cube_schema_8h_source"/>
      </node>
      <node id="81466">
        <label>pxr/usd/usdPhysics/meshCollisionAPI.h</label>
        <link refid="mesh_collision_a_p_i_8h"/>
      </node>
      <node id="81400">
        <label>pxr/usd/sdf/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="81401" relation="include">
        </childnode>
        <childnode refid="81594" relation="include">
        </childnode>
        <childnode refid="81605" relation="include">
        </childnode>
        <childnode refid="81606" relation="include">
        </childnode>
        <childnode refid="81607" relation="include">
        </childnode>
        <childnode refid="81608" relation="include">
        </childnode>
        <childnode refid="81601" relation="include">
        </childnode>
        <childnode refid="81609" relation="include">
        </childnode>
        <childnode refid="81612" relation="include">
        </childnode>
        <childnode refid="81516" relation="include">
        </childnode>
        <childnode refid="81613" relation="include">
        </childnode>
        <childnode refid="81615" relation="include">
        </childnode>
      </node>
      <node id="81900">
        <label>pxr/imaging/hdPrman/rileyRenderTargetSchema.h</label>
        <link refid="riley_render_target_schema_8h_source"/>
      </node>
      <node id="81803">
        <label>pxr/usd/sdf/predicateExpressionParser.h</label>
        <link refid="predicate_expression_parser_8h_source"/>
      </node>
      <node id="81998">
        <label>pxr/imaging/hdEmbree/sampler.h</label>
        <link refid="hd_embree_2sampler_8h_source"/>
      </node>
      <node id="81506">
        <label>pxr/usd/usdGeom/mesh.h</label>
        <link refid="usd_2usd_geom_2mesh_8h"/>
        <childnode refid="81440" relation="include">
        </childnode>
      </node>
      <node id="82026">
        <label>pxr/imaging/hdSt/samplerObject.h</label>
        <link refid="sampler_object_8h_source"/>
      </node>
      <node id="81443">
        <label>pxr/usdImaging/usdImaging/dataSourcePoints.h</label>
        <link refid="data_source_points_8h_source"/>
      </node>
      <node id="81940">
        <label>pxr/imaging/hd/flattenedVisibilityDataSourceProvider.h</label>
        <link refid="flattened_visibility_data_source_provider_8h_source"/>
      </node>
      <node id="81753">
        <label>pxr/usdImaging/usdImaging/primvarDescCache.h</label>
        <link refid="primvar_desc_cache_8h"/>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
      </node>
      <node id="81646">
        <label>pxr/usd/sdf/types.h</label>
        <link refid="usd_2sdf_2types_8h"/>
        <childnode refid="81647" relation="include">
        </childnode>
        <childnode refid="81588" relation="include">
        </childnode>
        <childnode refid="81597" relation="include">
        </childnode>
        <childnode refid="81648" relation="include">
        </childnode>
        <childnode refid="81649" relation="include">
        </childnode>
        <childnode refid="81652" relation="include">
        </childnode>
        <childnode refid="81624" relation="include">
        </childnode>
        <childnode refid="81659" relation="include">
        </childnode>
        <childnode refid="81657" relation="include">
        </childnode>
        <childnode refid="81661" relation="include">
        </childnode>
        <childnode refid="81662" relation="include">
        </childnode>
        <childnode refid="81400" relation="include">
        </childnode>
        <childnode refid="81663" relation="include">
        </childnode>
        <childnode refid="81621" relation="include">
        </childnode>
        <childnode refid="81623" relation="include">
        </childnode>
        <childnode refid="81625" relation="include">
        </childnode>
        <childnode refid="81664" relation="include">
        </childnode>
        <childnode refid="81645" relation="include">
        </childnode>
        <childnode refid="81651" relation="include">
        </childnode>
        <childnode refid="81665" relation="include">
        </childnode>
        <childnode refid="81626" relation="include">
        </childnode>
        <childnode refid="81534" relation="include">
        </childnode>
        <childnode refid="81610" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
        <childnode refid="81458" relation="include">
        </childnode>
        <childnode refid="81667" relation="include">
        </childnode>
        <childnode refid="81668" relation="include">
        </childnode>
        <childnode refid="81669" relation="include">
        </childnode>
      </node>
      <node id="81551">
        <label>pxr/usd/usdRender/spec.h</label>
        <link refid="usd_render_2spec_8h"/>
      </node>
      <node id="81557">
        <label>pxr/usd/usdSkel/blendShapeQuery.h</label>
        <link refid="blend_shape_query_8h"/>
        <childnode refid="81396" relation="include">
        </childnode>
      </node>
      <node id="81500">
        <label>pxr/usd/usdGeom/plane.h</label>
        <link refid="usd_2usd_geom_2plane_8h"/>
      </node>
      <node id="81492">
        <label>pxr/usd/usdGeom/boundable.h</label>
        <link refid="boundable_8h"/>
        <childnode refid="81493" relation="include">
        </childnode>
        <childnode refid="81511" relation="include">
        </childnode>
        <childnode refid="81410" relation="include">
        </childnode>
        <childnode refid="81512" relation="include">
        </childnode>
        <childnode refid="81513" relation="include">
        </childnode>
        <childnode refid="81514" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
      </node>
      <node id="82009">
        <label>pxr/imaging/hd/sprim.h</label>
        <link refid="sprim_8h_source"/>
        <childnode refid="82010" relation="include">
        </childnode>
        <childnode refid="82011" relation="include">
        </childnode>
        <childnode refid="81709" relation="include">
        </childnode>
        <childnode refid="81703" relation="include">
        </childnode>
        <childnode refid="82013" relation="include">
        </childnode>
        <childnode refid="82015" relation="include">
        </childnode>
        <childnode refid="82016" relation="include">
        </childnode>
        <childnode refid="82017" relation="include">
        </childnode>
        <childnode refid="82020" relation="include">
        </childnode>
        <childnode refid="82019" relation="include">
        </childnode>
        <childnode refid="81819" relation="include">
        </childnode>
      </node>
      <node id="81636">
        <label>pxr/base/tf/pyObjectFinder.h</label>
        <link refid="py_object_finder_8h_source"/>
        <childnode refid="81637" relation="include">
        </childnode>
        <childnode refid="81638" relation="include">
        </childnode>
      </node>
      <node id="81930">
        <label>pxr/usdImaging/usdImaging/renderSettingsFlatteningSceneIndex.h</label>
        <link refid="render_settings_flattening_scene_index_8h_source"/>
      </node>
      <node id="81822">
        <label>pxr/imaging/hdSt/drawItemInstance.h</label>
        <link refid="draw_item_instance_8h_source"/>
        <childnode refid="81823" relation="include">
        </childnode>
        <childnode refid="81730" relation="include">
        </childnode>
      </node>
      <node id="81442">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsPatch.h</label>
        <link refid="data_source_nurbs_patch_8h_source"/>
      </node>
      <node id="81716">
        <label>pxr/imaging/hdEmbree/mesh.h</label>
        <link refid="imaging_2hd_embree_2mesh_8h_source"/>
      </node>
      <node id="81947">
        <label>pxr/imaging/hd/mapContainerDataSource.h</label>
        <link refid="map_container_data_source_8h_source"/>
      </node>
      <node id="81880">
        <label>pxr/imaging/hd/primvarsSchema.h</label>
        <link refid="primvars_schema_8h_source"/>
      </node>
      <node id="82005">
        <label>pxr/imaging/hd/flatNormals.h</label>
        <link refid="flat_normals_8h_source"/>
        <childnode refid="82002" relation="include">
        </childnode>
      </node>
      <node id="81972">
        <label>pxr/imaging/hd/vectorSchemaTypeDefs.h</label>
        <link refid="vector_schema_type_defs_8h_source"/>
        <childnode refid="81833" relation="include">
        </childnode>
      </node>
      <node id="81479">
        <label>pxr/usd/usd/flattenUtils.h</label>
        <link refid="flatten_utils_8h"/>
      </node>
      <node id="81918">
        <label>pxr/imaging/hdsi/legacyDisplayStyleOverrideSceneIndex.h</label>
        <link refid="legacy_display_style_override_scene_index_8h_source"/>
      </node>
      <node id="81662">
        <label>pxr/usd/sdf/copyUtils.h</label>
        <link refid="copy_utils_8h"/>
      </node>
      <node id="81890">
        <label>pxr/imaging/hd/splitDiopterSchema.h</label>
        <link refid="split_diopter_schema_8h_source"/>
        <childnode refid="81861" relation="include">
        </childnode>
      </node>
      <node id="81867">
        <label>pxr/imaging/hd/materialNodeParameterSchema.h</label>
        <link refid="material_node_parameter_schema_8h_source"/>
      </node>
      <node id="81779">
        <label>pxr/imaging/hdSt/textureUtils.h</label>
        <link refid="imaging_2hd_st_2texture_utils_8h_source"/>
        <childnode refid="81780" relation="include">
        </childnode>
        <childnode refid="81732" relation="include">
        </childnode>
      </node>
      <node id="81759">
        <label>pxr/imaging/hdSt/lightingShader.h</label>
        <link refid="lighting_shader_8h_source"/>
        <childnode refid="81760" relation="include">
        </childnode>
        <childnode refid="81680" relation="include">
        </childnode>
      </node>
      <node id="81526">
        <label>pxr/usd/usdVol/field3DAsset.h</label>
        <link refid="field3_d_asset_8h"/>
      </node>
      <node id="81348">
        <label>pxr/usdImaging/usdImaging/primAdapter.h</label>
        <link refid="prim_adapter_8h"/>
        <childnode refid="81349" relation="include">
        </childnode>
        <childnode refid="81350" relation="include">
        </childnode>
        <childnode refid="81351" relation="include">
        </childnode>
        <childnode refid="81352" relation="include">
        </childnode>
        <childnode refid="81353" relation="include">
        </childnode>
        <childnode refid="81354" relation="include">
        </childnode>
        <childnode refid="81357" relation="include">
        </childnode>
        <childnode refid="81361" relation="include">
        </childnode>
        <childnode refid="81370" relation="include">
        </childnode>
        <childnode refid="81371" relation="include">
        </childnode>
        <childnode refid="81382" relation="include">
        </childnode>
        <childnode refid="81387" relation="include">
        </childnode>
        <childnode refid="81362" relation="include">
        </childnode>
        <childnode refid="81363" relation="include">
        </childnode>
        <childnode refid="81364" relation="include">
        </childnode>
        <childnode refid="81366" relation="include">
        </childnode>
        <childnode refid="81367" relation="include">
        </childnode>
        <childnode refid="81388" relation="include">
        </childnode>
        <childnode refid="81389" relation="include">
        </childnode>
        <childnode refid="81390" relation="include">
        </childnode>
        <childnode refid="81391" relation="include">
        </childnode>
        <childnode refid="81368" relation="include">
        </childnode>
        <childnode refid="81369" relation="include">
        </childnode>
        <childnode refid="81392" relation="include">
        </childnode>
        <childnode refid="81393" relation="include">
        </childnode>
        <childnode refid="81394" relation="include">
        </childnode>
        <childnode refid="81395" relation="include">
        </childnode>
        <childnode refid="81396" relation="include">
        </childnode>
        <childnode refid="81397" relation="include">
        </childnode>
      </node>
      <node id="81969">
        <label>pxr/usdImaging/usdviewq/hydraObserver.h</label>
        <link refid="hydra_observer_8h_source"/>
      </node>
      <node id="81434">
        <label>pxr/usdImaging/usdImaging/dataSourcePrimvars.h</label>
        <link refid="data_source_primvars_8h_source"/>
        <childnode refid="81435" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
      </node>
      <node id="81538">
        <label>pxr/usd/usdGeom/scope.h</label>
        <link refid="scope_8h"/>
      </node>
      <node id="81648">
        <label>pxr/usd/pcp/site.h</label>
        <link refid="pcp_2site_8h_source"/>
        <childnode refid="81401" relation="include">
        </childnode>
        <childnode refid="81596" relation="include">
        </childnode>
        <childnode refid="81594" relation="include">
        </childnode>
      </node>
      <node id="81960">
        <label>pxr/imaging/hdSt/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_st_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="81477">
        <label>pxr/usd/usdUI/nodeGraphNodeAPI.h</label>
        <link refid="node_graph_node_a_p_i_8h"/>
      </node>
      <node id="81949">
        <label>pxr/imaging/hd/primDataSourceOverlayCache.h</label>
        <link refid="prim_data_source_overlay_cache_8h_source"/>
      </node>
      <node id="81642">
        <label>pxr/base/vt/dictionary.h</label>
        <link refid="dictionary_8h"/>
        <childnode refid="81643" relation="include">
        </childnode>
        <childnode refid="81644" relation="include">
        </childnode>
        <childnode refid="81645" relation="include">
        </childnode>
        <childnode refid="81646" relation="include">
        </childnode>
        <childnode refid="81677" relation="include">
        </childnode>
        <childnode refid="81551" relation="include">
        </childnode>
        <childnode refid="81587" relation="include">
        </childnode>
        <childnode refid="81678" relation="include">
        </childnode>
        <childnode refid="81685" relation="include">
        </childnode>
        <childnode refid="81687" relation="include">
        </childnode>
        <childnode refid="81703" relation="include">
        </childnode>
        <childnode refid="81688" relation="include">
        </childnode>
        <childnode refid="81704" relation="include">
        </childnode>
        <childnode refid="81706" relation="include">
        </childnode>
        <childnode refid="81708" relation="include">
        </childnode>
        <childnode refid="81725" relation="include">
        </childnode>
        <childnode refid="81750" relation="include">
        </childnode>
        <childnode refid="81765" relation="include">
        </childnode>
        <childnode refid="81766" relation="include">
        </childnode>
        <childnode refid="81754" relation="include">
        </childnode>
        <childnode refid="81767" relation="include">
        </childnode>
        <childnode refid="81770" relation="include">
        </childnode>
        <childnode refid="81771" relation="include">
        </childnode>
        <childnode refid="81773" relation="include">
        </childnode>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81401">
        <label>pxr/usd/pcp/errors.h</label>
        <link refid="pcp_2errors_8h_source"/>
        <childnode refid="81402" relation="include">
        </childnode>
        <childnode refid="81588" relation="include">
        </childnode>
        <childnode refid="81591" relation="include">
        </childnode>
        <childnode refid="81589" relation="include">
        </childnode>
        <childnode refid="81592" relation="include">
        </childnode>
        <childnode refid="81593" relation="include">
        </childnode>
      </node>
      <node id="81339">
        <label>pxr/base/tf/pyInvoke.h</label>
        <link refid="py_invoke_8h"/>
      </node>
      <node id="81615">
        <label>pxr/usdImaging/usdImaging/textureUtils.h</label>
        <link refid="usd_imaging_2usd_imaging_2texture_utils_8h_source"/>
      </node>
      <node id="81751">
        <label>pxr/imaging/hdPrman/instancer.h</label>
        <link refid="rman_2instancer_8h_source"/>
        <childnode refid="81669" relation="include">
        </childnode>
      </node>
      <node id="81849">
        <label>pxr/usdImaging/usdImaging/extentsHintSchema.h</label>
        <link refid="extents_hint_schema_8h_source"/>
      </node>
      <node id="81990">
        <label>pxr/imaging/hd/field.h</label>
        <link refid="field_8h_source"/>
        <childnode refid="81676" relation="include">
        </childnode>
        <childnode refid="81991" relation="include">
        </childnode>
      </node>
      <node id="82017">
        <label>pxr/imaging/hdPrman/integrator.h</label>
        <link refid="integrator_8h_source"/>
      </node>
      <node id="81540">
        <label>pxr/usd/usdPhysics/joint.h</label>
        <link refid="joint_8h"/>
        <childnode refid="81541" relation="include">
        </childnode>
        <childnode refid="81542" relation="include">
        </childnode>
        <childnode refid="81543" relation="include">
        </childnode>
        <childnode refid="81544" relation="include">
        </childnode>
        <childnode refid="81545" relation="include">
        </childnode>
      </node>
      <node id="81454">
        <label>pxr/usd/usdLux/meshLightAPI.h</label>
        <link refid="mesh_light_a_p_i_8h"/>
      </node>
      <node id="81392">
        <label>pxr/usdImaging/usdProcImaging/generativeProceduralAdapter.h</label>
        <link refid="generative_procedural_adapter_8h_source"/>
      </node>
      <node id="81403">
        <label>pxr/usd/pcp/namespaceEdits.h</label>
        <link refid="namespace_edits_8h_source"/>
      </node>
      <node id="82002">
        <label>pxr/imaging/hdSt/flatNormals.h</label>
        <link refid="t_2flat_normals_8h_source"/>
      </node>
      <node id="81690">
        <label>pxr/imaging/hdEmbree/rendererPlugin.h</label>
        <link refid="mbree_2renderer_plugin_8h_source"/>
      </node>
      <node id="81574">
        <label>pxr/usd/usdSkel/animQuery.h</label>
        <link refid="anim_query_8h"/>
        <childnode refid="81518" relation="include">
        </childnode>
        <childnode refid="81575" relation="include">
        </childnode>
      </node>
      <node id="81336">
        <label>pxr/base/vt/wrapArray.h</label>
        <link refid="wrap_array_8h_source"/>
      </node>
      <node id="81994">
        <label>pxr/imaging/hd/bufferSpec.h</label>
        <link refid="buffer_spec_8h_source"/>
        <childnode refid="81810" relation="include">
        </childnode>
        <childnode refid="81995" relation="include">
        </childnode>
        <childnode refid="81765" relation="include">
        </childnode>
        <childnode refid="81826" relation="include">
        </childnode>
        <childnode refid="81768" relation="include">
        </childnode>
        <childnode refid="81754" relation="include">
        </childnode>
        <childnode refid="81767" relation="include">
        </childnode>
        <childnode refid="81769" relation="include">
        </childnode>
        <childnode refid="81764" relation="include">
        </childnode>
      </node>
      <node id="81913">
        <label>pxr/imaging/hd/prefixingSceneIndex.h</label>
        <link refid="prefixing_scene_index_8h_source"/>
      </node>
      <node id="81639">
        <label>pxr/base/tf/pySingleton.h</label>
        <link refid="py_singleton_8h_source"/>
      </node>
      <node id="81556">
        <label>pxr/usd/usdSkel/blendShape.h</label>
        <link refid="blend_shape_8h"/>
        <childnode refid="81557" relation="include">
        </childnode>
      </node>
      <node id="81783">
        <label>pxr/base/vt/visitValue.h</label>
        <link refid="visit_value_8h_source"/>
      </node>
      <node id="81355">
        <label>pxr/usdImaging/usdVolImaging/field3dAssetAdapter.h</label>
        <link refid="field3d_asset_adapter_8h_source"/>
      </node>
      <node id="81993">
        <label>pxr/imaging/hdEmbree/renderBuffer.h</label>
        <link refid="mbree_2render_buffer_8h_source"/>
      </node>
      <node id="81347">
        <label>pxr/usdImaging/usdImaging/unitTestHelper.h</label>
        <link refid="usd_imaging_2usd_imaging_2unit_test_helper_8h"/>
      </node>
      <node id="81827">
        <label>pxr/imaging/hd/dataSource.h</label>
        <link refid="data_source_8h_source"/>
        <childnode refid="81828" relation="include">
        </childnode>
        <childnode refid="81830" relation="include">
        </childnode>
        <childnode refid="81832" relation="include">
        </childnode>
        <childnode refid="81907" relation="include">
        </childnode>
        <childnode refid="81935" relation="include">
        </childnode>
        <childnode refid="81944" relation="include">
        </childnode>
        <childnode refid="81945" relation="include">
        </childnode>
        <childnode refid="81946" relation="include">
        </childnode>
        <childnode refid="81947" relation="include">
        </childnode>
        <childnode refid="81948" relation="include">
        </childnode>
        <childnode refid="81949" relation="include">
        </childnode>
        <childnode refid="81688" relation="include">
        </childnode>
        <childnode refid="81950" relation="include">
        </childnode>
        <childnode refid="81951" relation="include">
        </childnode>
        <childnode refid="81970" relation="include">
        </childnode>
        <childnode refid="81973" relation="include">
        </childnode>
        <childnode refid="81732" relation="include">
        </childnode>
        <childnode refid="81528" relation="include">
        </childnode>
        <childnode refid="81568" relation="include">
        </childnode>
        <childnode refid="81439" relation="include">
        </childnode>
        <childnode refid="81437" relation="include">
        </childnode>
        <childnode refid="81438" relation="include">
        </childnode>
        <childnode refid="81446" relation="include">
        </childnode>
        <childnode refid="81440" relation="include">
        </childnode>
        <childnode refid="81443" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
        <childnode refid="81570" relation="include">
        </childnode>
        <childnode refid="81447" relation="include">
        </childnode>
        <childnode refid="81444" relation="include">
        </childnode>
        <childnode refid="81974" relation="include">
        </childnode>
        <childnode refid="81583" relation="include">
        </childnode>
        <childnode refid="81975" relation="include">
        </childnode>
        <childnode refid="81968" relation="include">
        </childnode>
        <childnode refid="81448" relation="include">
        </childnode>
      </node>
      <node id="81682">
        <label>pxr/imaging/hdSt/light.h</label>
        <link refid="t_2light_8h_source"/>
      </node>
      <node id="81547">
        <label>pxr/usd/usdRender/denoisePass.h</label>
        <link refid="denoise_pass_8h"/>
      </node>
      <node id="81647">
        <label>pxr/usd/pcp/changes.h</label>
        <link refid="changes_8h"/>
      </node>
      <node id="81789">
        <label>pxr/usd/ndr/node.h</label>
        <link refid="ndr_2node_8h"/>
        <childnode refid="81790" relation="include">
        </childnode>
        <childnode refid="81792" relation="include">
        </childnode>
      </node>
      <node id="81649">
        <label>pxr/usd/sdf/abstractData.h</label>
        <link refid="abstract_data_8h_source"/>
        <childnode refid="81650" relation="include">
        </childnode>
        <childnode refid="81651" relation="include">
        </childnode>
        <childnode refid="81534" relation="include">
        </childnode>
        <childnode refid="81481" relation="include">
        </childnode>
      </node>
      <node id="81635">
        <label>pxr/base/tf/pyIdentity.h</label>
        <link refid="py_identity_8h_source"/>
        <childnode refid="81333" relation="include">
        </childnode>
        <childnode refid="81636" relation="include">
        </childnode>
        <childnode refid="81638" relation="include">
        </childnode>
      </node>
      <node id="81924">
        <label>pxr/imaging/hdsi/primTypePruningSceneIndex.h</label>
        <link refid="prim_type_pruning_scene_index_8h_source"/>
      </node>
      <node id="81588">
        <label>pxr/usd/pcp/composeSite.h</label>
        <link refid="compose_site_8h"/>
        <childnode refid="81589" relation="include">
        </childnode>
      </node>
      <node id="81450">
        <label>pxr/usd/usdGeom/xformCommonAPI.h</label>
        <link refid="xform_common_a_p_i_8h"/>
      </node>
      <node id="81440">
        <label>pxr/usdImaging/usdImaging/dataSourceMesh.h</label>
        <link refid="data_source_mesh_8h_source"/>
      </node>
      <node id="81611">
        <label>pxr/usd/usd/primTypeInfo.h</label>
        <link refid="prim_type_info_8h_source"/>
        <childnode refid="81610" relation="include">
        </childnode>
      </node>
      <node id="81563">
        <label>pxr/usd/usdShade/output.h</label>
        <link refid="output_8h_source"/>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81455" relation="include">
        </childnode>
        <childnode refid="81456" relation="include">
        </childnode>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
      </node>
      <node id="82027">
        <label>pxr/imaging/hdSt/textureHandle.h</label>
        <link refid="texture_handle_8h_source"/>
      </node>
      <node id="81561">
        <label>pxr/usd/usdSkel/skinningQuery.h</label>
        <link refid="skinning_query_8h"/>
        <childnode refid="81515" relation="include">
        </childnode>
      </node>
      <node id="81920">
        <label>pxr/imaging/hdsi/materialPrimvarTransferSceneIndex.h</label>
        <link refid="material_primvar_transfer_scene_index_8h_source"/>
      </node>
      <node id="81404">
        <label>pxr/usd/usd/stage.h</label>
        <link refid="stage_8h"/>
        <childnode refid="81405" relation="include">
        </childnode>
        <childnode refid="81406" relation="include">
        </childnode>
        <childnode refid="81408" relation="include">
        </childnode>
        <childnode refid="81479" relation="include">
        </childnode>
        <childnode refid="81429" relation="include">
        </childnode>
        <childnode refid="81480" relation="include">
        </childnode>
        <childnode refid="81481" relation="include">
        </childnode>
        <childnode refid="81585" relation="include">
        </childnode>
        <childnode refid="81536" relation="include">
        </childnode>
        <childnode refid="81503" relation="include">
        </childnode>
        <childnode refid="81492" relation="include">
        </childnode>
        <childnode refid="81519" relation="include">
        </childnode>
        <childnode refid="81494" relation="include">
        </childnode>
        <childnode refid="81495" relation="include">
        </childnode>
        <childnode refid="81496" relation="include">
        </childnode>
        <childnode refid="81497" relation="include">
        </childnode>
        <childnode refid="81502" relation="include">
        </childnode>
        <childnode refid="81498" relation="include">
        </childnode>
        <childnode refid="81499" relation="include">
        </childnode>
        <childnode refid="81493" relation="include">
        </childnode>
        <childnode refid="81504" relation="include">
        </childnode>
        <childnode refid="81537" relation="include">
        </childnode>
        <childnode refid="81506" relation="include">
        </childnode>
        <childnode refid="81430" relation="include">
        </childnode>
        <childnode refid="81431" relation="include">
        </childnode>
        <childnode refid="81505" relation="include">
        </childnode>
        <childnode refid="81507" relation="include">
        </childnode>
        <childnode refid="81500" relation="include">
        </childnode>
        <childnode refid="81501" relation="include">
        </childnode>
        <childnode refid="81511" relation="include">
        </childnode>
        <childnode refid="81508" relation="include">
        </childnode>
        <childnode refid="81432" relation="include">
        </childnode>
        <childnode refid="81538" relation="include">
        </childnode>
        <childnode refid="81509" relation="include">
        </childnode>
        <childnode refid="81539" relation="include">
        </childnode>
        <childnode refid="81449" relation="include">
        </childnode>
        <childnode refid="81522" relation="include">
        </childnode>
        <childnode refid="81491" relation="include">
        </childnode>
        <childnode refid="81450" relation="include">
        </childnode>
        <childnode refid="81451" relation="include">
        </childnode>
        <childnode refid="81410" relation="include">
        </childnode>
        <childnode refid="81411" relation="include">
        </childnode>
        <childnode refid="81412" relation="include">
        </childnode>
        <childnode refid="81417" relation="include">
        </childnode>
        <childnode refid="81418" relation="include">
        </childnode>
        <childnode refid="81419" relation="include">
        </childnode>
        <childnode refid="81420" relation="include">
        </childnode>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81452" relation="include">
        </childnode>
        <childnode refid="81453" relation="include">
        </childnode>
        <childnode refid="81454" relation="include">
        </childnode>
        <childnode refid="81416" relation="include">
        </childnode>
        <childnode refid="81475" relation="include">
        </childnode>
        <childnode refid="81422" relation="include">
        </childnode>
        <childnode refid="81413" relation="include">
        </childnode>
        <childnode refid="81414" relation="include">
        </childnode>
        <childnode refid="81455" relation="include">
        </childnode>
        <childnode refid="81456" relation="include">
        </childnode>
        <childnode refid="81415" relation="include">
        </childnode>
        <childnode refid="81457" relation="include">
        </childnode>
        <childnode refid="81458" relation="include">
        </childnode>
        <childnode refid="81523" relation="include">
        </childnode>
        <childnode refid="81459" relation="include">
        </childnode>
        <childnode refid="81460" relation="include">
        </childnode>
        <childnode refid="81423" relation="include">
        </childnode>
        <childnode refid="81541" relation="include">
        </childnode>
        <childnode refid="81461" relation="include">
        </childnode>
        <childnode refid="81462" relation="include">
        </childnode>
        <childnode refid="81542" relation="include">
        </childnode>
        <childnode refid="81540" relation="include">
        </childnode>
        <childnode refid="81463" relation="include">
        </childnode>
        <childnode refid="81464" relation="include">
        </childnode>
        <childnode refid="81465" relation="include">
        </childnode>
        <childnode refid="81466" relation="include">
        </childnode>
        <childnode refid="81543" relation="include">
        </childnode>
        <childnode refid="81544" relation="include">
        </childnode>
        <childnode refid="81467" relation="include">
        </childnode>
        <childnode refid="81546" relation="include">
        </childnode>
        <childnode refid="81545" relation="include">
        </childnode>
        <childnode refid="81512" relation="include">
        </childnode>
        <childnode refid="81547" relation="include">
        </childnode>
        <childnode refid="81424" relation="include">
        </childnode>
        <childnode refid="81549" relation="include">
        </childnode>
        <childnode refid="81550" relation="include">
        </childnode>
        <childnode refid="81548" relation="include">
        </childnode>
        <childnode refid="81551" relation="include">
        </childnode>
        <childnode refid="81552" relation="include">
        </childnode>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81425" relation="include">
        </childnode>
        <childnode refid="81469" relation="include">
        </childnode>
        <childnode refid="81433" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81473" relation="include">
        </childnode>
        <childnode refid="81471" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
        <childnode refid="81474" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
        <childnode refid="81555" relation="include">
        </childnode>
        <childnode refid="81476" relation="include">
        </childnode>
        <childnode refid="81556" relation="include">
        </childnode>
        <childnode refid="81513" relation="include">
        </childnode>
        <childnode refid="81514" relation="include">
        </childnode>
        <childnode refid="81558" relation="include">
        </childnode>
        <childnode refid="81477" relation="include">
        </childnode>
        <childnode refid="81478" relation="include">
        </childnode>
        <childnode refid="81427" relation="include">
        </childnode>
        <childnode refid="81586" relation="include">
        </childnode>
        <childnode refid="81587" relation="include">
        </childnode>
        <childnode refid="81526" relation="include">
        </childnode>
        <childnode refid="81525" relation="include">
        </childnode>
        <childnode refid="81524" relation="include">
        </childnode>
        <childnode refid="81527" relation="include">
        </childnode>
        <childnode refid="81510" relation="include">
        </childnode>
        <childnode refid="81520" relation="include">
        </childnode>
        <childnode refid="81521" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81485" relation="include">
        </childnode>
      </node>
      <node id="81995">
        <label>pxr/imaging/hd/bufferSource.h</label>
        <link refid="buffer_source_8h_source"/>
        <childnode refid="81996" relation="include">
        </childnode>
        <childnode refid="81999" relation="include">
        </childnode>
        <childnode refid="81756" relation="include">
        </childnode>
        <childnode refid="81755" relation="include">
        </childnode>
        <childnode refid="82000" relation="include">
        </childnode>
        <childnode refid="82001" relation="include">
        </childnode>
        <childnode refid="82002" relation="include">
        </childnode>
        <childnode refid="81768" relation="include">
        </childnode>
        <childnode refid="81754" relation="include">
        </childnode>
        <childnode refid="82003" relation="include">
        </childnode>
        <childnode refid="81769" relation="include">
        </childnode>
        <childnode refid="81764" relation="include">
        </childnode>
      </node>
      <node id="81926">
        <label>pxr/imaging/hdsi/sceneGlobalsSceneIndex.h</label>
        <link refid="scene_globals_scene_index_8h_source"/>
      </node>
      <node id="81816">
        <label>pxr/imaging/hd/rprimCollection.h</label>
        <link refid="rprim_collection_8h_source"/>
        <childnode refid="81817" relation="include">
        </childnode>
        <childnode refid="81815" relation="include">
        </childnode>
        <childnode refid="81727" relation="include">
        </childnode>
        <childnode refid="81819" relation="include">
        </childnode>
        <childnode refid="81820" relation="include">
        </childnode>
        <childnode refid="81732" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81480">
        <label>pxr/usd/usd/namespaceEditor.h</label>
        <link refid="namespace_editor_8h"/>
      </node>
      <node id="81772">
        <label>pxr/imaging/hio/glslfx.h</label>
        <link refid="glslfx_8h"/>
        <childnode refid="81762" relation="include">
        </childnode>
      </node>
      <node id="81384">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrBarnLightFilterAdapter.h</label>
        <link refid="pxr_barn_light_filter_adapter_8h"/>
      </node>
      <node id="81818">
        <label>pxr/imaging/hdSt/instancer.h</label>
        <link refid="t_2instancer_8h_source"/>
      </node>
      <node id="81654">
        <label>pxr/usd/sdf/mapEditor.h</label>
        <link refid="map_editor_8h_source"/>
        <childnode refid="81655" relation="include">
        </childnode>
      </node>
      <node id="81724">
        <label>pxr/imaging/hd/sceneIndexAdapterSceneDelegate.h</label>
        <link refid="scene_index_adapter_scene_delegate_8h_source"/>
      </node>
      <node id="81499">
        <label>pxr/usd/usdGeom/cylinder_1.h</label>
        <link refid="cylinder__1_8h"/>
      </node>
      <node id="81577">
        <label>pxr/usdImaging/usdImaging/collectionAPIAdapter.h</label>
        <link refid="collection_a_p_i_adapter_8h_source"/>
      </node>
      <node id="81672">
        <label>pxr/imaging/hdPrman/cylinder.h</label>
        <link refid="imaging_2hd_prman_2cylinder_8h_source"/>
      </node>
      <node id="81731">
        <label>pxr/imaging/hdSt/renderPass.h</label>
        <link refid="t_2render_pass_8h_source"/>
      </node>
      <node id="81643">
        <label>pxr/usd/pcp/expressionVariables.h</label>
        <link refid="expression_variables_8h_source"/>
      </node>
      <node id="81862">
        <label>pxr/imaging/hd/lightSchema.h</label>
        <link refid="light_schema_8h_source"/>
      </node>
      <node id="81471">
        <label>pxr/usd/usdShade/material.h</label>
        <link refid="usd_2usd_shade_2material_8h"/>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81720">
        <label>pxr/imaging/hd/volume.h</label>
        <link refid="imaging_2hd_2volume_8h_source"/>
        <childnode refid="81676" relation="include">
        </childnode>
        <childnode refid="81721" relation="include">
        </childnode>
      </node>
      <node id="81713">
        <label>pxr/imaging/hd/basisCurves.h</label>
        <link refid="imaging_2hd_2basis_curves_8h_source"/>
        <childnode refid="81670" relation="include">
        </childnode>
        <childnode refid="81714" relation="include">
        </childnode>
      </node>
      <node id="81570">
        <label>pxr/usdImaging/usdImaging/dataSourceRelationship.h</label>
        <link refid="data_source_relationship_8h_source"/>
      </node>
      <node id="81390">
        <label>pxr/usdImaging/usdImaging/renderVarAdapter.h</label>
        <link refid="render_var_adapter_8h"/>
      </node>
      <node id="81659">
        <label>pxr/usd/sdf/changeList.h</label>
        <link refid="change_list_8h"/>
        <childnode refid="81647" relation="include">
        </childnode>
        <childnode refid="81660" relation="include">
        </childnode>
        <childnode refid="81484" relation="include">
        </childnode>
      </node>
      <node id="81603">
        <label>pxr/usd/usd/pyEditContext.h</label>
        <link refid="py_edit_context_8h_source"/>
      </node>
      <node id="81397">
        <label>pxr/usdImaging/usdSkelImaging/skelRootAdapter.h</label>
        <link refid="skel_root_adapter_8h_source"/>
      </node>
      <node id="81584">
        <label>pxr/usdImaging/usdviewq/utils.h</label>
        <link refid="usd_imaging_2usdviewq_2utils_8h_source"/>
      </node>
      <node id="81798">
        <label>pxr/usd/pcp/dependency.h</label>
        <link refid="dependency_8h_source"/>
        <childnode refid="81402" relation="include">
        </childnode>
        <childnode refid="81589" relation="include">
        </childnode>
      </node>
      <node id="81458">
        <label>pxr/usd/usdMedia/assetPreviewsAPI.h</label>
        <link refid="asset_previews_a_p_i_8h"/>
      </node>
      <node id="81768">
        <label>pxr/imaging/hdSt/interleavedMemoryManager.h</label>
        <link refid="interleaved_memory_manager_8h_source"/>
      </node>
      <node id="81385">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrIntMultLightFilterAdapter.h</label>
        <link refid="pxr_int_mult_light_filter_adapter_8h"/>
      </node>
      <node id="81334">
        <label>pxr/base/tf/pyCall.h</label>
        <link refid="py_call_8h"/>
        <childnode refid="81335" relation="include">
        </childnode>
        <childnode refid="81337" relation="include">
        </childnode>
        <childnode refid="81338" relation="include">
        </childnode>
      </node>
      <node id="81804">
        <label>pxr/usd/sdrOsl/oslParser.h</label>
        <link refid="osl_parser_8h"/>
      </node>
      <node id="81613">
        <label>pxr/usd/usdUtils/usdzPackage.h</label>
        <link refid="usdz_package_8h"/>
        <childnode refid="81614" relation="include">
        </childnode>
      </node>
      <node id="81718">
        <label>pxr/imaging/hd/points.h</label>
        <link refid="imaging_2hd_2points_8h_source"/>
        <childnode refid="81674" relation="include">
        </childnode>
        <childnode refid="81719" relation="include">
        </childnode>
      </node>
      <node id="81446">
        <label>pxr/usdImaging/usdImaging/dataSourceMaterial.h</label>
        <link refid="data_source_material_8h_source"/>
      </node>
      <node id="81901">
        <label>pxr/usdImaging/usdImaging/geomModelSchema.h</label>
        <link refid="geom_model_schema_8h_source"/>
      </node>
      <node id="81536">
        <label>pxr/usd/usd/typed.h</label>
        <link refid="typed_8h"/>
        <childnode refid="81537" relation="include">
        </childnode>
        <childnode refid="81539" relation="include">
        </childnode>
        <childnode refid="81423" relation="include">
        </childnode>
        <childnode refid="81546" relation="include">
        </childnode>
        <childnode refid="81547" relation="include">
        </childnode>
        <childnode refid="81424" relation="include">
        </childnode>
        <childnode refid="81548" relation="include">
        </childnode>
        <childnode refid="81552" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
        <childnode refid="81555" relation="include">
        </childnode>
        <childnode refid="81556" relation="include">
        </childnode>
        <childnode refid="81558" relation="include">
        </childnode>
      </node>
      <node id="81953">
        <label>pxr/imaging/hd/retainedSceneIndex.h</label>
        <link refid="retained_scene_index_8h_source"/>
        <childnode refid="81954" relation="include">
        </childnode>
      </node>
      <node id="81857">
        <label>pxr/imaging/hd/instancerTopologySchema.h</label>
        <link refid="instancer_topology_schema_8h_source"/>
      </node>
      <node id="81634">
        <label>pxr/base/tf/pyEnum.h</label>
        <link refid="py_enum_8h"/>
      </node>
      <node id="81509">
        <label>pxr/usd/usdGeom/sphere.h</label>
        <link refid="usd_2usd_geom_2sphere_8h"/>
        <childnode refid="81345" relation="include">
        </childnode>
      </node>
      <node id="81494">
        <label>pxr/usd/usdGeom/capsule.h</label>
        <link refid="capsule_8h"/>
      </node>
      <node id="81453">
        <label>pxr/usd/usdLux/listAPI.h</label>
        <link refid="list_a_p_i_8h"/>
      </node>
      <node id="81744">
        <label>pxr/imaging/hdx/aovInputTask.h</label>
        <link refid="aov_input_task_8h_source"/>
      </node>
      <node id="81560">
        <label>pxr/usd/usdGeom/primvar.h</label>
        <link refid="primvar_8h_source"/>
        <childnode refid="81537" relation="include">
        </childnode>
        <childnode refid="81432" relation="include">
        </childnode>
        <childnode refid="81476" relation="include">
        </childnode>
        <childnode refid="81561" relation="include">
        </childnode>
        <childnode refid="81434" relation="include">
        </childnode>
      </node>
      <node id="81459">
        <label>pxr/usd/usdPhysics/articulationRootAPI.h</label>
        <link refid="articulation_root_a_p_i_8h"/>
      </node>
      <node id="81933">
        <label>pxr/usdImaging/usdImaging/selectionSceneIndex.h</label>
        <link refid="selection_scene_index_8h_source"/>
      </node>
      <node id="81707">
        <label>pxr/imaging/hd/renderIndex.h</label>
        <link refid="render_index_8h_source"/>
        <childnode refid="81708" relation="include">
        </childnode>
        <childnode refid="81617" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="81674">
        <label>pxr/imaging/hdPrman/points.h</label>
        <link refid="imaging_2hd_prman_2points_8h_source"/>
      </node>
      <node id="81447">
        <label>pxr/usdImaging/usdImaging/dataSourceRenderPrims.h</label>
        <link refid="data_source_render_prims_8h_source"/>
      </node>
      <node id="81485">
        <label>pxr/usdImaging/usdImaging/stageSceneIndex.h</label>
        <link refid="stage_scene_index_8h_source"/>
      </node>
      <node id="81884">
        <label>pxr/imaging/hd/renderProductSchema.h</label>
        <link refid="render_product_schema_8h_source"/>
      </node>
      <node id="81520">
        <label>pxr/usdImaging/usdAppUtils/camera.h</label>
        <link refid="usd_imaging_2usd_app_utils_2camera_8h"/>
      </node>
      <node id="82023">
        <label>pxr/imaging/hdSt/glConversions.h</label>
        <link refid="gl_conversions_8h_source"/>
      </node>
      <node id="81696">
        <label>pxr/imaging/hd/unitTestNullRenderDelegate.h</label>
        <link refid="unit_test_null_render_delegate_8h_source"/>
        <childnode refid="81697" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="81709">
        <label>pxr/imaging/hd/extComputation.h</label>
        <link refid="ext_computation_8h_source"/>
        <childnode refid="81710" relation="include">
        </childnode>
        <childnode refid="81711" relation="include">
        </childnode>
      </node>
      <node id="81813">
        <label>pxr/imaging/hd/drawItem.h</label>
        <link refid="draw_item_8h_source"/>
        <childnode refid="81814" relation="include">
        </childnode>
        <childnode refid="81821" relation="include">
        </childnode>
      </node>
      <node id="81546">
        <label>pxr/usd/usdPhysics/scene.h</label>
        <link refid="scene_8h"/>
      </node>
      <node id="81866">
        <label>pxr/imaging/hd/materialNetworkSchema.h</label>
        <link refid="material_network_schema_8h_source"/>
      </node>
      <node id="81624">
        <label>pxr/usd/sdf/attributeSpec.h</label>
        <link refid="attribute_spec_8h"/>
        <childnode refid="81609" relation="include">
        </childnode>
      </node>
      <node id="81932">
        <label>pxr/usdImaging/usdImaging/rootOverridesSceneIndex.h</label>
        <link refid="root_overrides_scene_index_8h_source"/>
      </node>
      <node id="81883">
        <label>pxr/imaging/hd/renderCapabilitiesSchema.h</label>
        <link refid="render_capabilities_schema_8h_source"/>
      </node>
      <node id="81368">
        <label>pxr/usdImaging/usdImaging/sphereAdapter.h</label>
        <link refid="sphere_adapter_8h"/>
      </node>
      <node id="81358">
        <label>pxr/usdImaging/usdImaging/capsuleAdapter.h</label>
        <link refid="capsule_adapter_8h"/>
      </node>
      <node id="81781">
        <label>pxr/imaging/hio/fieldTextureData.h</label>
        <link refid="field_texture_data_8h"/>
      </node>
      <node id="81523">
        <label>pxr/usd/usdMedia/spatialAudio.h</label>
        <link refid="spatial_audio_8h"/>
      </node>
      <node id="81407">
        <label>pxr/usd/usdUtils/stitchClips.h</label>
        <link refid="stitch_clips_8h"/>
      </node>
      <node id="81778">
        <label>pxr/imaging/hdSt/udimTextureObject.h</label>
        <link refid="udim_texture_object_8h_source"/>
      </node>
      <node id="81351">
        <label>pxr/usdImaging/usdImaging/coordSysAdapter.h</label>
        <link refid="coord_sys_adapter_8h"/>
      </node>
      <node id="81433">
        <label>pxr/usd/usdRi/statementsAPI.h</label>
        <link refid="statements_a_p_i_8h"/>
      </node>
      <node id="81391">
        <label>pxr/usdImaging/usdImaging/representedByAncestorPrimAdapter.h</label>
        <link refid="represented_by_ancestor_prim_adapter_8h"/>
        <childnode refid="81387" relation="include">
        </childnode>
      </node>
      <node id="81977">
        <label>pxr/imaging/hd/extComputationContext.h</label>
        <link refid="ext_computation_context_8h_source"/>
        <childnode refid="81978" relation="include">
        </childnode>
      </node>
      <node id="81327">
        <label>pxr/base/tf/stringUtils.h</label>
        <link refid="string_utils_8h"/>
        <childnode refid="81328" relation="include">
        </childnode>
        <childnode refid="81330" relation="include">
        </childnode>
        <childnode refid="81333" relation="include">
        </childnode>
        <childnode refid="81634" relation="include">
        </childnode>
        <childnode refid="81635" relation="include">
        </childnode>
        <childnode refid="81637" relation="include">
        </childnode>
        <childnode refid="81638" relation="include">
        </childnode>
        <childnode refid="81640" relation="include">
        </childnode>
        <childnode refid="81641" relation="include">
        </childnode>
        <childnode refid="81336" relation="include">
        </childnode>
        <childnode refid="81340" relation="include">
        </childnode>
        <childnode refid="82032" relation="include">
        </childnode>
        <childnode refid="81338" relation="include">
        </childnode>
        <childnode refid="82033" relation="include">
        </childnode>
        <childnode refid="81628" relation="include">
        </childnode>
        <childnode refid="82034" relation="include">
        </childnode>
        <childnode refid="81341" relation="include">
        </childnode>
        <childnode refid="82035" relation="include">
        </childnode>
        <childnode refid="82041" relation="include">
        </childnode>
        <childnode refid="82043" relation="include">
        </childnode>
        <childnode refid="82044" relation="include">
        </childnode>
      </node>
      <node id="81688">
        <label>pxr/imaging/hd/renderDelegate.h</label>
        <link refid="render_delegate_8h_source"/>
        <childnode refid="81689" relation="include">
        </childnode>
        <childnode refid="81693" relation="include">
        </childnode>
        <childnode refid="81695" relation="include">
        </childnode>
        <childnode refid="81696" relation="include">
        </childnode>
        <childnode refid="81698" relation="include">
        </childnode>
        <childnode refid="81699" relation="include">
        </childnode>
        <childnode refid="81700" relation="include">
        </childnode>
        <childnode refid="81701" relation="include">
        </childnode>
        <childnode refid="81702" relation="include">
        </childnode>
      </node>
      <node id="82018">
        <label>pxr/imaging/hdPrman/material.h</label>
        <link refid="imaging_2hd_prman_2material_8h_source"/>
        <childnode refid="81669" relation="include">
        </childnode>
      </node>
      <node id="81722">
        <label>pxr/imaging/hdPrman/gprimbase.h</label>
        <link refid="gprimbase_8h_source"/>
        <childnode refid="81669" relation="include">
        </childnode>
      </node>
      <node id="81622">
        <label>pxr/usd/sdf/pseudoRootSpec.h</label>
        <link refid="pseudo_root_spec_8h"/>
      </node>
      <node id="81952">
        <label>pxr/imaging/hd/dataSourceLegacyPrim.h</label>
        <link refid="data_source_legacy_prim_8h_source"/>
      </node>
      <node id="81875">
        <label>pxr/imaging/hd/nurbsPatchSchema.h</label>
        <link refid="nurbs_patch_schema_8h_source"/>
      </node>
      <node id="81832">
        <label>pxr/imaging/hd/dataSourceTypeDefs.h</label>
        <link refid="data_source_type_defs_8h_source"/>
        <childnode refid="81833" relation="include">
        </childnode>
        <childnode refid="81528" relation="include">
        </childnode>
        <childnode refid="81568" relation="include">
        </childnode>
        <childnode refid="81438" relation="include">
        </childnode>
        <childnode refid="81435" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
        <childnode refid="81570" relation="include">
        </childnode>
      </node>
      <node id="81679">
        <label>pxr/imaging/glf/simpleLightingContext.h</label>
        <link refid="simple_lighting_context_8h"/>
        <childnode refid="81680" relation="include">
        </childnode>
        <childnode refid="81681" relation="include">
        </childnode>
        <childnode refid="81617" relation="include">
        </childnode>
      </node>
      <node id="82031">
        <label>pxr/usdImaging/usdImagingGL/rendererSettings.h</label>
        <link refid="renderer_settings_8h_source"/>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81664">
        <label>pxr/usd/sdf/schema.h</label>
        <link refid="usd_2sdf_2schema_8h_source"/>
        <childnode refid="81652" relation="include">
        </childnode>
        <childnode refid="81657" relation="include">
        </childnode>
        <childnode refid="81653" relation="include">
        </childnode>
        <childnode refid="81645" relation="include">
        </childnode>
        <childnode refid="81651" relation="include">
        </childnode>
        <childnode refid="81486" relation="include">
        </childnode>
      </node>
      <node id="81386">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrRodLightFilterAdapter.h</label>
        <link refid="pxr_rod_light_filter_adapter_8h"/>
      </node>
      <node id="81451">
        <label>pxr/usd/usdHydra/generativeProceduralAPI.h</label>
        <link refid="generative_procedural_a_p_i_8h"/>
      </node>
      <node id="81692">
        <label>pxr/imaging/hdStorm/rendererPlugin.h</label>
        <link refid="torm_2renderer_plugin_8h_source"/>
      </node>
      <node id="81785">
        <label>pxr/usd/ar/resolverContextBinder.h</label>
        <link refid="resolver_context_binder_8h"/>
      </node>
      <node id="81756">
        <label>pxr/imaging/hdSt/extCompGpuComputation.h</label>
        <link refid="ext_comp_gpu_computation_8h_source"/>
      </node>
      <node id="81747">
        <label>pxr/imaging/hdx/colorizeSelectionTask.h</label>
        <link refid="colorize_selection_task_8h_source"/>
      </node>
      <node id="81732">
        <label>pxr/imaging/hdx/pickTask.h</label>
        <link refid="pick_task_8h_source"/>
        <childnode refid="81733" relation="include">
        </childnode>
      </node>
      <node id="81579">
        <label>pxr/usdImaging/usdImaging/geomModelAPIAdapter.h</label>
        <link refid="geom_model_a_p_i_adapter_8h_source"/>
      </node>
      <node id="81826">
        <label>pxr/imaging/hdSt/dispatchBuffer.h</label>
        <link refid="dispatch_buffer_8h_source"/>
      </node>
      <node id="82000">
        <label>pxr/imaging/hdSt/extCompGpuPrimvarBufferSource.h</label>
        <link refid="ext_comp_gpu_primvar_buffer_source_8h_source"/>
      </node>
      <node id="81976">
        <label>pxr/imaging/hd/driver.h</label>
        <link refid="driver_8h_source"/>
        <childnode refid="81725" relation="include">
        </childnode>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81874">
        <label>pxr/imaging/hd/nurbsPatchTrimCurveSchema.h</label>
        <link refid="nurbs_patch_trim_curve_schema_8h_source"/>
        <childnode refid="81875" relation="include">
        </childnode>
      </node>
      <node id="81587">
        <label>pxr/usd/usdUtils/introspection.h</label>
        <link refid="introspection_8h"/>
      </node>
      <node id="81665">
        <label>pxr/usd/sdf/specType.h</label>
        <link refid="spec_type_8h"/>
        <childnode refid="81666" relation="include">
        </childnode>
      </node>
      <node id="81486">
        <label>pxr/usd/usd/prim.h</label>
        <link refid="prim_8h"/>
        <childnode refid="81405" relation="include">
        </childnode>
        <childnode refid="81487" relation="include">
        </childnode>
        <childnode refid="81406" relation="include">
        </childnode>
        <childnode refid="81408" relation="include">
        </childnode>
        <childnode refid="81483" relation="include">
        </childnode>
        <childnode refid="81529" relation="include">
        </childnode>
        <childnode refid="81429" relation="include">
        </childnode>
        <childnode refid="81530" relation="include">
        </childnode>
        <childnode refid="81531" relation="include">
        </childnode>
        <childnode refid="81532" relation="include">
        </childnode>
        <childnode refid="81533" relation="include">
        </childnode>
        <childnode refid="81571" relation="include">
        </childnode>
        <childnode refid="81535" relation="include">
        </childnode>
        <childnode refid="81572" relation="include">
        </childnode>
        <childnode refid="81536" relation="include">
        </childnode>
        <childnode refid="81573" relation="include">
        </childnode>
        <childnode refid="81503" relation="include">
        </childnode>
        <childnode refid="81492" relation="include">
        </childnode>
        <childnode refid="81519" relation="include">
        </childnode>
        <childnode refid="81494" relation="include">
        </childnode>
        <childnode refid="81495" relation="include">
        </childnode>
        <childnode refid="81496" relation="include">
        </childnode>
        <childnode refid="81497" relation="include">
        </childnode>
        <childnode refid="81502" relation="include">
        </childnode>
        <childnode refid="81498" relation="include">
        </childnode>
        <childnode refid="81499" relation="include">
        </childnode>
        <childnode refid="81493" relation="include">
        </childnode>
        <childnode refid="81504" relation="include">
        </childnode>
        <childnode refid="81537" relation="include">
        </childnode>
        <childnode refid="81506" relation="include">
        </childnode>
        <childnode refid="81430" relation="include">
        </childnode>
        <childnode refid="81431" relation="include">
        </childnode>
        <childnode refid="81505" relation="include">
        </childnode>
        <childnode refid="81507" relation="include">
        </childnode>
        <childnode refid="81500" relation="include">
        </childnode>
        <childnode refid="81501" relation="include">
        </childnode>
        <childnode refid="81511" relation="include">
        </childnode>
        <childnode refid="81508" relation="include">
        </childnode>
        <childnode refid="81432" relation="include">
        </childnode>
        <childnode refid="81538" relation="include">
        </childnode>
        <childnode refid="81509" relation="include">
        </childnode>
        <childnode refid="81539" relation="include">
        </childnode>
        <childnode refid="81449" relation="include">
        </childnode>
        <childnode refid="81522" relation="include">
        </childnode>
        <childnode refid="81491" relation="include">
        </childnode>
        <childnode refid="81489" relation="include">
        </childnode>
        <childnode refid="81450" relation="include">
        </childnode>
        <childnode refid="81451" relation="include">
        </childnode>
        <childnode refid="81410" relation="include">
        </childnode>
        <childnode refid="81411" relation="include">
        </childnode>
        <childnode refid="81412" relation="include">
        </childnode>
        <childnode refid="81417" relation="include">
        </childnode>
        <childnode refid="81418" relation="include">
        </childnode>
        <childnode refid="81419" relation="include">
        </childnode>
        <childnode refid="81420" relation="include">
        </childnode>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81452" relation="include">
        </childnode>
        <childnode refid="81453" relation="include">
        </childnode>
        <childnode refid="81454" relation="include">
        </childnode>
        <childnode refid="81416" relation="include">
        </childnode>
        <childnode refid="81475" relation="include">
        </childnode>
        <childnode refid="81422" relation="include">
        </childnode>
        <childnode refid="81413" relation="include">
        </childnode>
        <childnode refid="81414" relation="include">
        </childnode>
        <childnode refid="81455" relation="include">
        </childnode>
        <childnode refid="81456" relation="include">
        </childnode>
        <childnode refid="81415" relation="include">
        </childnode>
        <childnode refid="81457" relation="include">
        </childnode>
        <childnode refid="81458" relation="include">
        </childnode>
        <childnode refid="81523" relation="include">
        </childnode>
        <childnode refid="81459" relation="include">
        </childnode>
        <childnode refid="81460" relation="include">
        </childnode>
        <childnode refid="81423" relation="include">
        </childnode>
        <childnode refid="81541" relation="include">
        </childnode>
        <childnode refid="81461" relation="include">
        </childnode>
        <childnode refid="81462" relation="include">
        </childnode>
        <childnode refid="81542" relation="include">
        </childnode>
        <childnode refid="81540" relation="include">
        </childnode>
        <childnode refid="81463" relation="include">
        </childnode>
        <childnode refid="81464" relation="include">
        </childnode>
        <childnode refid="81465" relation="include">
        </childnode>
        <childnode refid="81466" relation="include">
        </childnode>
        <childnode refid="81543" relation="include">
        </childnode>
        <childnode refid="81544" relation="include">
        </childnode>
        <childnode refid="81467" relation="include">
        </childnode>
        <childnode refid="81546" relation="include">
        </childnode>
        <childnode refid="81545" relation="include">
        </childnode>
        <childnode refid="81512" relation="include">
        </childnode>
        <childnode refid="81547" relation="include">
        </childnode>
        <childnode refid="81424" relation="include">
        </childnode>
        <childnode refid="81549" relation="include">
        </childnode>
        <childnode refid="81550" relation="include">
        </childnode>
        <childnode refid="81548" relation="include">
        </childnode>
        <childnode refid="81551" relation="include">
        </childnode>
        <childnode refid="81552" relation="include">
        </childnode>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81425" relation="include">
        </childnode>
        <childnode refid="81469" relation="include">
        </childnode>
        <childnode refid="81433" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81473" relation="include">
        </childnode>
        <childnode refid="81471" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
        <childnode refid="81474" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
        <childnode refid="81555" relation="include">
        </childnode>
        <childnode refid="81574" relation="include">
        </childnode>
        <childnode refid="81476" relation="include">
        </childnode>
        <childnode refid="81556" relation="include">
        </childnode>
        <childnode refid="81518" relation="include">
        </childnode>
        <childnode refid="81513" relation="include">
        </childnode>
        <childnode refid="81514" relation="include">
        </childnode>
        <childnode refid="81575" relation="include">
        </childnode>
        <childnode refid="81561" relation="include">
        </childnode>
        <childnode refid="81558" relation="include">
        </childnode>
        <childnode refid="81477" relation="include">
        </childnode>
        <childnode refid="81478" relation="include">
        </childnode>
        <childnode refid="81526" relation="include">
        </childnode>
        <childnode refid="81525" relation="include">
        </childnode>
        <childnode refid="81524" relation="include">
        </childnode>
        <childnode refid="81527" relation="include">
        </childnode>
        <childnode refid="81510" relation="include">
        </childnode>
        <childnode refid="81576" relation="include">
        </childnode>
        <childnode refid="81446" relation="include">
        </childnode>
        <childnode refid="81436" relation="include">
        </childnode>
        <childnode refid="81582" relation="include">
        </childnode>
        <childnode refid="81583" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81346" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
        <childnode refid="81584" relation="include">
        </childnode>
      </node>
      <node id="81808">
        <label>pxr/imaging/hdSt/renderPassState.h</label>
        <link refid="t_2render_pass_state_8h_source"/>
        <childnode refid="81740" relation="include">
        </childnode>
        <childnode refid="81738" relation="include">
        </childnode>
      </node>
      <node id="82035">
        <label>pxr/usd/usd/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="81534" relation="include">
        </childnode>
        <childnode refid="81487" relation="include">
        </childnode>
        <childnode refid="81482" relation="include">
        </childnode>
        <childnode refid="81529" relation="include">
        </childnode>
        <childnode refid="81480" relation="include">
        </childnode>
        <childnode refid="81484" relation="include">
        </childnode>
        <childnode refid="81481" relation="include">
        </childnode>
        <childnode refid="81530" relation="include">
        </childnode>
        <childnode refid="81486" relation="include">
        </childnode>
        <childnode refid="81610" relation="include">
        </childnode>
        <childnode refid="81532" relation="include">
        </childnode>
        <childnode refid="81533" relation="include">
        </childnode>
        <childnode refid="81571" relation="include">
        </childnode>
        <childnode refid="81569" relation="include">
        </childnode>
        <childnode refid="81600" relation="include">
        </childnode>
        <childnode refid="81612" relation="include">
        </childnode>
        <childnode refid="81572" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
        <childnode refid="82036" relation="include">
        </childnode>
        <childnode refid="81573" relation="include">
        </childnode>
        <childnode refid="82037" relation="include">
        </childnode>
        <childnode refid="82038" relation="include">
        </childnode>
        <childnode refid="82039" relation="include">
        </childnode>
        <childnode refid="82040" relation="include">
        </childnode>
      </node>
      <node id="81802">
        <label>pxr/usd/sdf/predicateProgram.h</label>
        <link refid="predicate_program_8h_source"/>
        <childnode refid="81800" relation="include">
        </childnode>
      </node>
      <node id="81413">
        <label>pxr/usd/usdLux/portalLight.h</label>
        <link refid="portal_light_8h"/>
      </node>
      <node id="81892">
        <label>pxr/imaging/hd/meshTopologySchema.h</label>
        <link refid="mesh_topology_schema_8h_source"/>
        <childnode refid="81852" relation="include">
        </childnode>
      </node>
      <node id="81882">
        <label>pxr/imaging/hd/renderBufferSchema.h</label>
        <link refid="render_buffer_schema_8h_source"/>
      </node>
      <node id="81439">
        <label>pxr/usdImaging/usdImaging/dataSourceBasisCurves.h</label>
        <link refid="data_source_basis_curves_8h_source"/>
      </node>
      <node id="81376">
        <label>pxr/usdImaging/usdImaging/domeLightAdapter.h</label>
        <link refid="dome_light_adapter_8h"/>
      </node>
      <node id="82001">
        <label>pxr/imaging/hdSt/extCompPrimvarBufferSource.h</label>
        <link refid="ext_comp_primvar_buffer_source_8h_source"/>
      </node>
      <node id="81741">
        <label>pxr/imaging/hdx/selectionTask.h</label>
        <link refid="selection_task_8h_source"/>
      </node>
      <node id="81678">
        <label>pxr/imaging/glf/simpleLight.h</label>
        <link refid="simple_light_8h"/>
        <childnode refid="81679" relation="include">
        </childnode>
        <childnode refid="81682" relation="include">
        </childnode>
        <childnode refid="81683" relation="include">
        </childnode>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81345">
        <label>pxr/usdImaging/usdImaging/delegate.h</label>
        <link refid="delegate_8h"/>
        <childnode refid="81346" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="82010">
        <label>pxr/imaging/hd/camera.h</label>
        <link refid="imaging_2hd_2camera_8h_source"/>
        <childnode refid="81987" relation="include">
        </childnode>
        <childnode refid="81745" relation="include">
        </childnode>
        <childnode refid="81733" relation="include">
        </childnode>
      </node>
      <node id="81686">
        <label>pxr/imaging/glf/drawTarget.h</label>
        <link refid="glf_2draw_target_8h"/>
      </node>
      <node id="81905">
        <label>pxr/usdImaging/usdImaging/usdRenderSettingsSchema.h</label>
        <link refid="usd_render_settings_schema_8h_source"/>
      </node>
      <node id="81567">
        <label>pxr/usd/usdUtils/sparseValueWriter.h</label>
        <link refid="sparse_value_writer_8h"/>
      </node>
      <node id="81578">
        <label>pxr/usdImaging/usdImaging/coordSysAPIAdapter.h</label>
        <link refid="coord_sys_a_p_i_adapter_8h_source"/>
      </node>
      <node id="82012">
        <label>pxr/imaging/hdPrman/coordSys.h</label>
        <link refid="rman_2coord_sys_8h_source"/>
      </node>
      <node id="81987">
        <label>pxr/imaging/hdPrman/camera.h</label>
        <link refid="imaging_2hd_prman_2camera_8h_source"/>
      </node>
      <node id="81946">
        <label>pxr/imaging/hd/lazyContainerDataSource.h</label>
        <link refid="lazy_container_data_source_8h_source"/>
      </node>
      <node id="81592">
        <label>pxr/usd/pcp/propertyIndex.h</label>
        <link refid="property_index_8h_source"/>
        <childnode refid="81402" relation="include">
        </childnode>
      </node>
      <node id="81441">
        <label>pxr/usdImaging/usdImaging/dataSourceNurbsCurves.h</label>
        <link refid="data_source_nurbs_curves_8h_source"/>
      </node>
      <node id="81573">
        <label>pxr/usd/usd/variantSets.h</label>
        <link refid="variant_sets_8h_source"/>
        <childnode refid="81471" relation="include">
        </childnode>
      </node>
      <node id="81620">
        <label>pxr/usd/sdf/proxyTypes.h</label>
        <link refid="proxy_types_8h_source"/>
        <childnode refid="81400" relation="include">
        </childnode>
        <childnode refid="81621" relation="include">
        </childnode>
        <childnode refid="81623" relation="include">
        </childnode>
        <childnode refid="81626" relation="include">
        </childnode>
        <childnode refid="81627" relation="include">
        </childnode>
      </node>
      <node id="81908">
        <label>pxr/imaging/hd/dependencyForwardingSceneIndex.h</label>
        <link refid="dependency_forwarding_scene_index_8h_source"/>
      </node>
      <node id="81794">
        <label>pxr/usd/sdf/childrenProxy.h</label>
        <link refid="children_proxy_8h"/>
        <childnode refid="81620" relation="include">
        </childnode>
        <childnode refid="81340" relation="include">
        </childnode>
      </node>
      <node id="81770">
        <label>pxr/imaging/hdx/types.h</label>
        <link refid="imaging_2hdx_2types_8h_source"/>
      </node>
      <node id="82007">
        <label>pxr/imaging/hd/primTypeIndex.h</label>
        <link refid="prim_type_index_8h_source"/>
        <childnode refid="81707" relation="include">
        </childnode>
      </node>
      <node id="81764">
        <label>pxr/imaging/hdSt/vboSimpleMemoryManager.h</label>
        <link refid="vbo_simple_memory_manager_8h_source"/>
      </node>
      <node id="81935">
        <label>pxr/imaging/hd/flattenedDataSourceProvider.h</label>
        <link refid="flattened_data_source_provider_8h_source"/>
        <childnode refid="81936" relation="include">
        </childnode>
        <childnode refid="81937" relation="include">
        </childnode>
        <childnode refid="81938" relation="include">
        </childnode>
        <childnode refid="81939" relation="include">
        </childnode>
        <childnode refid="81940" relation="include">
        </childnode>
        <childnode refid="81941" relation="include">
        </childnode>
        <childnode refid="81942" relation="include">
        </childnode>
        <childnode refid="81943" relation="include">
        </childnode>
      </node>
      <node id="81937">
        <label>pxr/imaging/hd/flattenedOverlayDataSourceProvider.h</label>
        <link refid="flattened_overlay_data_source_provider_8h_source"/>
      </node>
      <node id="81850">
        <label>pxr/imaging/hd/geomSubsetSchema.h</label>
        <link refid="geom_subset_schema_8h_source"/>
        <childnode refid="81851" relation="include">
        </childnode>
      </node>
      <node id="81614">
        <label>pxr/usd/usdUtils/dependencies.h</label>
        <link refid="dependencies_8h"/>
      </node>
      <node id="81342">
        <label>pxr/base/work/detachedTask.h</label>
        <link refid="detached_task_8h"/>
        <childnode refid="81343" relation="include">
        </childnode>
      </node>
      <node id="81562">
        <label>pxr/usd/usdShade/input.h</label>
        <link refid="input_8h_source"/>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81455" relation="include">
        </childnode>
        <childnode refid="81456" relation="include">
        </childnode>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
      </node>
      <node id="81699">
        <label>pxr/imaging/hdEmbree/renderParam.h</label>
        <link refid="hd_embree_2render_param_8h_source"/>
      </node>
      <node id="81790">
        <label>pxr/usd/ndr/registry.h</label>
        <link refid="usd_2ndr_2registry_8h"/>
        <childnode refid="81791" relation="include">
        </childnode>
      </node>
      <node id="81854">
        <label>pxr/imaging/hd/instanceCategoriesSchema.h</label>
        <link refid="instance_categories_schema_8h_source"/>
      </node>
      <node id="81711">
        <label>pxr/imaging/hdSt/extComputation.h</label>
        <link refid="t_2ext_computation_8h_source"/>
      </node>
      <node id="81825">
        <label>pxr/imaging/hdSt/bufferArrayRange.h</label>
        <link refid="t_2buffer_array_range_8h_source"/>
        <childnode refid="81826" relation="include">
        </childnode>
        <childnode refid="81768" relation="include">
        </childnode>
        <childnode refid="81769" relation="include">
        </childnode>
        <childnode refid="81764" relation="include">
        </childnode>
      </node>
      <node id="81539">
        <label>pxr/usd/usdGeom/subset.h</label>
        <link refid="subset_8h"/>
        <childnode refid="81471" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
      </node>
      <node id="81405">
        <label>pxr/usd/usd/apiSchemaBase.h</label>
        <link refid="api_schema_base_8h"/>
        <childnode refid="81406" relation="include">
        </childnode>
        <childnode refid="81408" relation="include">
        </childnode>
        <childnode refid="81429" relation="include">
        </childnode>
        <childnode refid="81430" relation="include">
        </childnode>
        <childnode refid="81431" relation="include">
        </childnode>
        <childnode refid="81432" relation="include">
        </childnode>
        <childnode refid="81449" relation="include">
        </childnode>
        <childnode refid="81450" relation="include">
        </childnode>
        <childnode refid="81451" relation="include">
        </childnode>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81452" relation="include">
        </childnode>
        <childnode refid="81453" relation="include">
        </childnode>
        <childnode refid="81454" relation="include">
        </childnode>
        <childnode refid="81455" relation="include">
        </childnode>
        <childnode refid="81456" relation="include">
        </childnode>
        <childnode refid="81457" relation="include">
        </childnode>
        <childnode refid="81458" relation="include">
        </childnode>
        <childnode refid="81459" relation="include">
        </childnode>
        <childnode refid="81460" relation="include">
        </childnode>
        <childnode refid="81461" relation="include">
        </childnode>
        <childnode refid="81462" relation="include">
        </childnode>
        <childnode refid="81463" relation="include">
        </childnode>
        <childnode refid="81464" relation="include">
        </childnode>
        <childnode refid="81465" relation="include">
        </childnode>
        <childnode refid="81466" relation="include">
        </childnode>
        <childnode refid="81467" relation="include">
        </childnode>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81425" relation="include">
        </childnode>
        <childnode refid="81469" relation="include">
        </childnode>
        <childnode refid="81433" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81473" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
        <childnode refid="81474" relation="include">
        </childnode>
        <childnode refid="81476" relation="include">
        </childnode>
        <childnode refid="81477" relation="include">
        </childnode>
        <childnode refid="81478" relation="include">
        </childnode>
      </node>
      <node id="81834">
        <label>pxr/imaging/hd/basisCurvesTopologySchema.h</label>
        <link refid="basis_curves_topology_schema_8h_source"/>
        <childnode refid="81835" relation="include">
        </childnode>
      </node>
      <node id="81487">
        <label>pxr/usd/usd/attributeQuery.h</label>
        <link refid="attribute_query_8h_source"/>
        <childnode refid="81488" relation="include">
        </childnode>
        <childnode refid="81489" relation="include">
        </childnode>
        <childnode refid="81490" relation="include">
        </childnode>
        <childnode refid="81528" relation="include">
        </childnode>
      </node>
      <node id="81951">
        <label>pxr/imaging/hd/sceneIndex.h</label>
        <link refid="scene_index_8h_source"/>
        <childnode refid="81952" relation="include">
        </childnode>
        <childnode refid="81907" relation="include">
        </childnode>
        <childnode refid="81949" relation="include">
        </childnode>
        <childnode refid="81707" relation="include">
        </childnode>
        <childnode refid="81953" relation="include">
        </childnode>
        <childnode refid="81887" relation="include">
        </childnode>
        <childnode refid="81724" relation="include">
        </childnode>
        <childnode refid="81955" relation="include">
        </childnode>
        <childnode refid="81964" relation="include">
        </childnode>
        <childnode refid="81965" relation="include">
        </childnode>
        <childnode refid="81576" relation="include">
        </childnode>
        <childnode refid="81968" relation="include">
        </childnode>
        <childnode refid="81485" relation="include">
        </childnode>
        <childnode refid="81969" relation="include">
        </childnode>
      </node>
      <node id="81734">
        <label>pxr/imaging/hdx/drawTargetTask.h</label>
        <link refid="draw_target_task_8h_source"/>
      </node>
      <node id="81899">
        <label>pxr/imaging/hdPrman/rileyRenderOutputSchema.h</label>
        <link refid="riley_render_output_schema_8h_source"/>
      </node>
      <node id="81821">
        <label>pxr/imaging/hdSt/drawItem.h</label>
        <link refid="t_2draw_item_8h_source"/>
        <childnode refid="81822" relation="include">
        </childnode>
      </node>
      <node id="81495">
        <label>pxr/usd/usdGeom/capsule_1.h</label>
        <link refid="capsule__1_8h"/>
      </node>
      <node id="82008">
        <label>pxr/imaging/hd/smoothNormals.h</label>
        <link refid="smooth_normals_8h_source"/>
      </node>
      <node id="81795">
        <label>pxr/usd/sdf/predicateExpression.h</label>
        <link refid="predicate_expression_8h_source"/>
        <childnode refid="81796" relation="include">
        </childnode>
        <childnode refid="81800" relation="include">
        </childnode>
        <childnode refid="81801" relation="include">
        </childnode>
        <childnode refid="81802" relation="include">
        </childnode>
      </node>
      <node id="81340">
        <label>pxr/usd/sdf/pyChildrenProxy.h</label>
        <link refid="py_children_proxy_8h"/>
      </node>
      <node id="81548">
        <label>pxr/usd/usdRender/settingsBase.h</label>
        <link refid="settings_base_8h"/>
        <childnode refid="81549" relation="include">
        </childnode>
        <childnode refid="81550" relation="include">
        </childnode>
        <childnode refid="81551" relation="include">
        </childnode>
      </node>
      <node id="81518">
        <label>pxr/usd/usdSkel/cache.h</label>
        <link refid="usd_skel_2cache_8h"/>
        <childnode refid="81396" relation="include">
        </childnode>
      </node>
      <node id="81766">
        <label>pxr/imaging/hdSt/materialNetwork.h</label>
        <link refid="material_network_8h_source"/>
        <childnode refid="81761" relation="include">
        </childnode>
      </node>
      <node id="81493">
        <label>pxr/usd/usdGeom/gprim.h</label>
        <link refid="usd_2usd_geom_2gprim_8h"/>
        <childnode refid="81494" relation="include">
        </childnode>
        <childnode refid="81495" relation="include">
        </childnode>
        <childnode refid="81496" relation="include">
        </childnode>
        <childnode refid="81497" relation="include">
        </childnode>
        <childnode refid="81498" relation="include">
        </childnode>
        <childnode refid="81499" relation="include">
        </childnode>
        <childnode refid="81500" relation="include">
        </childnode>
        <childnode refid="81501" relation="include">
        </childnode>
        <childnode refid="81509" relation="include">
        </childnode>
        <childnode refid="81510" relation="include">
        </childnode>
      </node>
      <node id="81833">
        <label>pxr/imaging/hd/schema.h</label>
        <link refid="imaging_2hd_2schema_8h_source"/>
        <childnode refid="81834" relation="include">
        </childnode>
        <childnode refid="81836" relation="include">
        </childnode>
        <childnode refid="81837" relation="include">
        </childnode>
        <childnode refid="81838" relation="include">
        </childnode>
        <childnode refid="81839" relation="include">
        </childnode>
        <childnode refid="81840" relation="include">
        </childnode>
        <childnode refid="81841" relation="include">
        </childnode>
        <childnode refid="81842" relation="include">
        </childnode>
        <childnode refid="81843" relation="include">
        </childnode>
        <childnode refid="81845" relation="include">
        </childnode>
        <childnode refid="81846" relation="include">
        </childnode>
        <childnode refid="81847" relation="include">
        </childnode>
        <childnode refid="81848" relation="include">
        </childnode>
        <childnode refid="81850" relation="include">
        </childnode>
        <childnode refid="81853" relation="include">
        </childnode>
        <childnode refid="81854" relation="include">
        </childnode>
        <childnode refid="81855" relation="include">
        </childnode>
        <childnode refid="81856" relation="include">
        </childnode>
        <childnode refid="81857" relation="include">
        </childnode>
        <childnode refid="81858" relation="include">
        </childnode>
        <childnode refid="81859" relation="include">
        </childnode>
        <childnode refid="81860" relation="include">
        </childnode>
        <childnode refid="81862" relation="include">
        </childnode>
        <childnode refid="81863" relation="include">
        </childnode>
        <childnode refid="81865" relation="include">
        </childnode>
        <childnode refid="81866" relation="include">
        </childnode>
        <childnode refid="81867" relation="include">
        </childnode>
        <childnode refid="81868" relation="include">
        </childnode>
        <childnode refid="81872" relation="include">
        </childnode>
        <childnode refid="81873" relation="include">
        </childnode>
        <childnode refid="81874" relation="include">
        </childnode>
        <childnode refid="81876" relation="include">
        </childnode>
        <childnode refid="81877" relation="include">
        </childnode>
        <childnode refid="81881" relation="include">
        </childnode>
        <childnode refid="81882" relation="include">
        </childnode>
        <childnode refid="81883" relation="include">
        </childnode>
        <childnode refid="81884" relation="include">
        </childnode>
        <childnode refid="81885" relation="include">
        </childnode>
        <childnode refid="81886" relation="include">
        </childnode>
        <childnode refid="81887" relation="include">
        </childnode>
        <childnode refid="81888" relation="include">
        </childnode>
        <childnode refid="81889" relation="include">
        </childnode>
        <childnode refid="81890" relation="include">
        </childnode>
        <childnode refid="81891" relation="include">
        </childnode>
        <childnode refid="81893" relation="include">
        </childnode>
        <childnode refid="81894" relation="include">
        </childnode>
        <childnode refid="81895" relation="include">
        </childnode>
        <childnode refid="81896" relation="include">
        </childnode>
        <childnode refid="81897" relation="include">
        </childnode>
        <childnode refid="81898" relation="include">
        </childnode>
        <childnode refid="81899" relation="include">
        </childnode>
        <childnode refid="81900" relation="include">
        </childnode>
        <childnode refid="81901" relation="include">
        </childnode>
        <childnode refid="81902" relation="include">
        </childnode>
        <childnode refid="81903" relation="include">
        </childnode>
        <childnode refid="81904" relation="include">
        </childnode>
        <childnode refid="81905" relation="include">
        </childnode>
        <childnode refid="81906" relation="include">
        </childnode>
      </node>
      <node id="81729">
        <label>pxr/imaging/hdEmbree/renderPass.h</label>
        <link refid="mbree_2render_pass_8h_source"/>
      </node>
      <node id="81717">
        <label>pxr/imaging/hdSt/mesh.h</label>
        <link refid="imaging_2hd_st_2mesh_8h_source"/>
      </node>
      <node id="81566">
        <label>pxr/usd/usdSkel/inbetweenShape.h</label>
        <link refid="inbetween_shape_8h_source"/>
        <childnode refid="81556" relation="include">
        </childnode>
        <childnode refid="81557" relation="include">
        </childnode>
      </node>
      <node id="81517">
        <label>pxr/usd/usdSkel/utils.h</label>
        <link refid="usd_2usd_skel_2utils_8h"/>
      </node>
      <node id="81872">
        <label>pxr/imaging/hd/materialSchema.h</label>
        <link refid="material_schema_8h_source"/>
      </node>
      <node id="81627">
        <label>pxr/usd/sdf/variantSpec.h</label>
        <link refid="variant_spec_8h"/>
      </node>
      <node id="81473">
        <label>pxr/usd/usdShade/coordSysAPI.h</label>
        <link refid="coord_sys_a_p_i_8h"/>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81735">
        <label>pxr/imaging/hdx/oitBufferAccessor.h</label>
        <link refid="oit_buffer_accessor_8h_source"/>
      </node>
      <node id="81979">
        <label>pxr/imaging/hd/materialNetworkInterface.h</label>
        <link refid="material_network_interface_8h_source"/>
        <childnode refid="81829" relation="include">
        </childnode>
        <childnode refid="81910" relation="include">
        </childnode>
        <childnode refid="81980" relation="include">
        </childnode>
        <childnode refid="81981" relation="include">
        </childnode>
        <childnode refid="81982" relation="include">
        </childnode>
      </node>
      <node id="81898">
        <label>pxr/imaging/hdar/systemSchema.h</label>
        <link refid="r_2system_schema_8h_source"/>
      </node>
      <node id="81973">
        <label>pxr/imaging/hdsi/primManagingSceneIndexObserver.h</label>
        <link refid="prim_managing_scene_index_observer_8h"/>
      </node>
      <node id="82014">
        <label>pxr/imaging/hdPrman/light.h</label>
        <link refid="rman_2light_8h_source"/>
      </node>
      <node id="81859">
        <label>pxr/imaging/hd/legacyDisplayStyleSchema.h</label>
        <link refid="legacy_display_style_schema_8h_source"/>
      </node>
      <node id="81364">
        <label>pxr/usdImaging/usdImaging/nurbsPatchAdapter.h</label>
        <link refid="nurbs_patch_adapter_8h"/>
      </node>
      <node id="81958">
        <label>pxr/imaging/hdPrman/dependencyForwardingSceneIndexPlugin.h</label>
        <link refid="hd_prman_2dependency_forwarding_scene_index_plugin_8h_source"/>
      </node>
      <node id="81909">
        <label>pxr/imaging/hd/flatteningSceneIndex.h</label>
        <link refid="flattening_scene_index_8h_source"/>
      </node>
      <node id="81843">
        <label>pxr/imaging/hd/dependencySchema.h</label>
        <link refid="dependency_schema_8h_source"/>
        <childnode refid="81844" relation="include">
        </childnode>
      </node>
      <node id="81700">
        <label>pxr/imaging/hdPrman/renderDelegate.h</label>
        <link refid="rman_2render_delegate_8h_source"/>
      </node>
      <node id="81445">
        <label>pxr/usdImaging/usdImaging/dataSourceVolume.h</label>
        <link refid="data_source_volume_8h_source"/>
      </node>
      <node id="81399">
        <label>pxr/base/work/withScopedParallelism.h</label>
        <link refid="with_scoped_parallelism_8h"/>
      </node>
      <node id="81426">
        <label>pxr/usd/usdShade/materialBindingAPI.h</label>
        <link refid="material_binding_a_p_i_8h"/>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81481">
        <label>pxr/usd/usd/object.h</label>
        <link refid="object_8h"/>
        <childnode refid="81482" relation="include">
        </childnode>
        <childnode refid="81483" relation="include">
        </childnode>
        <childnode refid="81484" relation="include">
        </childnode>
        <childnode refid="81486" relation="include">
        </childnode>
        <childnode refid="81533" relation="include">
        </childnode>
      </node>
      <node id="81586">
        <label>pxr/usd/usdUtils/flattenLayerStack.h</label>
        <link refid="flatten_layer_stack_8h"/>
      </node>
      <node id="81516">
        <label>pxr/usd/usdSkel/bakeSkinning.h</label>
        <link refid="bake_skinning_8h_source"/>
        <childnode refid="81517" relation="include">
        </childnode>
      </node>
      <node id="81510">
        <label>pxr/usd/usdVol/volume.h</label>
        <link refid="usd_2usd_vol_2volume_8h"/>
        <childnode refid="81445" relation="include">
        </childnode>
        <childnode refid="81369" relation="include">
        </childnode>
      </node>
      <node id="81978">
        <label>pxr/imaging/hd/extComputationContextInternal.h</label>
        <link refid="ext_computation_context_internal_8h_source"/>
      </node>
      <node id="82024">
        <label>pxr/imaging/hdSt/hgiConversions.h</label>
        <link refid="hd_st_2hgi_conversions_8h_source"/>
      </node>
      <node id="81444">
        <label>pxr/usdImaging/usdImaging/dataSourceSchemaBased.h</label>
        <link refid="data_source_schema_based_8h_source"/>
      </node>
      <node id="81903">
        <label>pxr/usdImaging/usdImaging/usdPrimInfoSchema.h</label>
        <link refid="usd_prim_info_schema_8h_source"/>
      </node>
      <node id="82015">
        <label>pxr/imaging/hd/material.h</label>
        <link refid="imaging_2hd_2material_8h_source"/>
        <childnode refid="81980" relation="include">
        </childnode>
        <childnode refid="81750" relation="include">
        </childnode>
        <childnode refid="82016" relation="include">
        </childnode>
        <childnode refid="82017" relation="include">
        </childnode>
        <childnode refid="82018" relation="include">
        </childnode>
        <childnode refid="81981" relation="include">
        </childnode>
        <childnode refid="81982" relation="include">
        </childnode>
        <childnode refid="82019" relation="include">
        </childnode>
        <childnode refid="81761" relation="include">
        </childnode>
        <childnode refid="81766" relation="include">
        </childnode>
      </node>
      <node id="81594">
        <label>pxr/usd/pcp/types.h</label>
        <link refid="usd_2pcp_2types_8h"/>
        <childnode refid="81595" relation="include">
        </childnode>
        <childnode refid="81401" relation="include">
        </childnode>
        <childnode refid="81596" relation="include">
        </childnode>
        <childnode refid="81597" relation="include">
        </childnode>
        <childnode refid="81589" relation="include">
        </childnode>
        <childnode refid="81604" relation="include">
        </childnode>
      </node>
      <node id="81629">
        <label>pxr/base/tf/errorTransport.h</label>
        <link refid="error_transport_8h"/>
        <childnode refid="81331" relation="include">
        </childnode>
        <childnode refid="81398" relation="include">
        </childnode>
      </node>
      <node id="81332">
        <label>pxr/base/tf/pyError.h</label>
        <link refid="py_error_8h_source"/>
        <childnode refid="81333" relation="include">
        </childnode>
        <childnode refid="81334" relation="include">
        </childnode>
        <childnode refid="81339" relation="include">
        </childnode>
        <childnode refid="81340" relation="include">
        </childnode>
        <childnode refid="81341" relation="include">
        </childnode>
      </node>
      <node id="81726">
        <label>pxr/imaging/hd/engine.h</label>
        <link refid="imaging_2hd_2engine_8h_source"/>
        <childnode refid="81697" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
        <childnode refid="81684" relation="include">
        </childnode>
      </node>
      <node id="81628">
        <label>pxr/usd/sdf/pyListProxy.h</label>
        <link refid="py_list_proxy_8h"/>
        <childnode refid="81338" relation="include">
        </childnode>
      </node>
      <node id="81644">
        <label>pxr/usd/sdf/reference.h</label>
        <link refid="reference_8h"/>
        <childnode refid="81588" relation="include">
        </childnode>
        <childnode refid="81571" relation="include">
        </childnode>
      </node>
      <node id="81496">
        <label>pxr/usd/usdGeom/cone.h</label>
        <link refid="usd_2usd_geom_2cone_8h"/>
      </node>
      <node id="81363">
        <label>pxr/usdImaging/usdImaging/nurbsCurvesAdapter.h</label>
        <link refid="nurbs_curves_adapter_8h"/>
      </node>
      <node id="81944">
        <label>pxr/imaging/hd/flattenedDataSourceProviders.h</label>
        <link refid="imaging_2hd_2flattened_data_source_providers_8h_source"/>
      </node>
      <node id="81508">
        <label>pxr/usd/usdGeom/points.h</label>
        <link refid="usd_2usd_geom_2points_8h"/>
      </node>
      <node id="81618">
        <label>pxr/usd/sdf/listProxy.h</label>
        <link refid="list_proxy_8h"/>
        <childnode refid="81619" relation="include">
        </childnode>
        <childnode refid="81620" relation="include">
        </childnode>
        <childnode refid="81628" relation="include">
        </childnode>
      </node>
      <node id="81791">
        <label>pxr/usd/sdr/registry.h</label>
        <link refid="usd_2sdr_2registry_8h"/>
      </node>
      <node id="81527">
        <label>pxr/usd/usdVol/openVDBAsset.h</label>
        <link refid="open_v_d_b_asset_8h"/>
      </node>
      <node id="81673">
        <label>pxr/imaging/hdPrman/mesh.h</label>
        <link refid="imaging_2hd_prman_2mesh_8h_source"/>
      </node>
      <node id="81607">
        <label>pxr/usd/sdf/site.h</label>
        <link refid="sdf_2site_8h_source"/>
        <childnode refid="81588" relation="include">
        </childnode>
        <childnode refid="81599" relation="include">
        </childnode>
        <childnode refid="81589" relation="include">
        </childnode>
        <childnode refid="81608" relation="include">
        </childnode>
      </node>
      <node id="81982">
        <label>pxr/imaging/hdPrman/matfiltResolveVstructs.h</label>
        <link refid="matfilt_resolve_vstructs_8h_source"/>
      </node>
      <node id="81606">
        <label>pxr/usd/sdf/pyUtils.h</label>
        <link refid="usd_2sdf_2py_utils_8h_source"/>
      </node>
      <node id="81511">
        <label>pxr/usd/usdGeom/pointInstancer.h</label>
        <link refid="point_instancer_8h"/>
        <childnode refid="81488" relation="include">
        </childnode>
        <childnode refid="81435" relation="include">
        </childnode>
        <childnode refid="81344" relation="include">
        </childnode>
      </node>
      <node id="81799">
        <label>pxr/usd/pcp/mapExpression.h</label>
        <link refid="map_expression_8h_source"/>
        <childnode refid="81595" relation="include">
        </childnode>
        <childnode refid="81596" relation="include">
        </childnode>
        <childnode refid="81591" relation="include">
        </childnode>
      </node>
      <node id="82038">
        <label>pxr/usd/usdPhysics/massProperties.h</label>
        <link refid="mass_properties_8h_source"/>
      </node>
      <node id="81752">
        <label>pxr/imaging/hdx/freeCameraSceneDelegate.h</label>
        <link refid="free_camera_scene_delegate_8h_source"/>
      </node>
      <node id="81555">
        <label>pxr/usd/usdSkel/animation.h</label>
        <link refid="animation_8h"/>
      </node>
      <node id="81948">
        <label>pxr/imaging/hd/overlayContainerDataSource.h</label>
        <link refid="overlay_container_data_source_8h_source"/>
      </node>
      <node id="81660">
        <label>pxr/usd/sdf/notice.h</label>
        <link refid="usd_2sdf_2notice_8h_source"/>
        <childnode refid="81404" relation="include">
        </childnode>
      </node>
      <node id="81842">
        <label>pxr/imaging/hd/cylinderSchema.h</label>
        <link refid="cylinder_schema_8h_source"/>
      </node>
      <node id="81435">
        <label>pxr/usdImaging/usdImaging/dataSourcePointInstancer.h</label>
        <link refid="data_source_point_instancer_8h_source"/>
      </node>
      <node id="81388">
        <label>pxr/usdImaging/usdImaging/renderProductAdapter.h</label>
        <link refid="render_product_adapter_8h"/>
      </node>
      <node id="81950">
        <label>pxr/imaging/hd/retainedDataSource.h</label>
        <link refid="retained_data_source_8h_source"/>
        <childnode refid="81935" relation="include">
        </childnode>
      </node>
      <node id="81333">
        <label>pxr/base/tf/makePyConstructor.h</label>
        <link refid="make_py_constructor_8h"/>
      </node>
      <node id="81774">
        <label>pxr/imaging/hdSt/textureObject.h</label>
        <link refid="texture_object_8h_source"/>
        <childnode refid="81775" relation="include">
        </childnode>
        <childnode refid="81776" relation="include">
        </childnode>
        <childnode refid="81777" relation="include">
        </childnode>
        <childnode refid="81778" relation="include">
        </childnode>
      </node>
      <node id="81746">
        <label>pxr/imaging/hdx/colorChannelTask.h</label>
        <link refid="color_channel_task_8h_source"/>
      </node>
      <node id="81375">
        <label>pxr/usdImaging/usdImaging/domeLight_1Adapter.h</label>
        <link refid="dome_light__1_adapter_8h"/>
      </node>
      <node id="81814">
        <label>pxr/imaging/hd/repr.h</label>
        <link refid="repr_8h_source"/>
        <childnode refid="81815" relation="include">
        </childnode>
        <childnode refid="81712" relation="include">
        </childnode>
        <childnode refid="81816" relation="include">
        </childnode>
        <childnode refid="81708" relation="include">
        </childnode>
      </node>
      <node id="81344">
        <label>pxr/usdImaging/usdImaging/resolvedAttributeCache.h</label>
        <link refid="resolved_attribute_cache_8h"/>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="81348" relation="include">
        </childnode>
      </node>
      <node id="81416">
        <label>pxr/usd/usdLux/nonboundableLightBase.h</label>
        <link refid="nonboundable_light_base_8h"/>
        <childnode refid="81417" relation="include">
        </childnode>
        <childnode refid="81418" relation="include">
        </childnode>
        <childnode refid="81419" relation="include">
        </childnode>
        <childnode refid="81420" relation="include">
        </childnode>
      </node>
      <node id="81357">
        <label>pxr/usdImaging/usdImaging/gprimAdapter.h</label>
        <link refid="gprim_adapter_8h"/>
        <childnode refid="81349" relation="include">
        </childnode>
        <childnode refid="81358" relation="include">
        </childnode>
        <childnode refid="81359" relation="include">
        </childnode>
        <childnode refid="81352" relation="include">
        </childnode>
        <childnode refid="81360" relation="include">
        </childnode>
        <childnode refid="81361" relation="include">
        </childnode>
        <childnode refid="81362" relation="include">
        </childnode>
        <childnode refid="81363" relation="include">
        </childnode>
        <childnode refid="81364" relation="include">
        </childnode>
        <childnode refid="81365" relation="include">
        </childnode>
        <childnode refid="81366" relation="include">
        </childnode>
        <childnode refid="81367" relation="include">
        </childnode>
        <childnode refid="81368" relation="include">
        </childnode>
        <childnode refid="81369" relation="include">
        </childnode>
      </node>
      <node id="81541">
        <label>pxr/usd/usdPhysics/distanceJoint.h</label>
        <link refid="distance_joint_8h"/>
      </node>
      <node id="81723">
        <label>pxr/imaging/hdSt/primUtils.h</label>
        <link refid="prim_utils_8h_source"/>
      </node>
      <node id="81669">
        <label>pxr/imaging/hdPrman/gprim.h</label>
        <link refid="imaging_2hd_prman_2gprim_8h_source"/>
        <childnode refid="81670" relation="include">
        </childnode>
        <childnode refid="81671" relation="include">
        </childnode>
        <childnode refid="81672" relation="include">
        </childnode>
        <childnode refid="81673" relation="include">
        </childnode>
        <childnode refid="81674" relation="include">
        </childnode>
        <childnode refid="81675" relation="include">
        </childnode>
        <childnode refid="81676" relation="include">
        </childnode>
      </node>
      <node id="81806">
        <label>pxr/imaging/hd/renderPassState.h</label>
        <link refid="render_pass_state_8h_source"/>
        <childnode refid="81697" relation="include">
        </childnode>
        <childnode refid="81807" relation="include">
        </childnode>
        <childnode refid="81808" relation="include">
        </childnode>
        <childnode refid="81732" relation="include">
        </childnode>
        <childnode refid="81737" relation="include">
        </childnode>
      </node>
      <node id="81572">
        <label>pxr/usd/usd/specializes.h</label>
        <link refid="specializes_8h_source"/>
      </node>
      <node id="81505">
        <label>pxr/usd/usdGeom/nurbsCurves.h</label>
        <link refid="nurbs_curves_8h"/>
      </node>
      <node id="81743">
        <label>pxr/imaging/hdx/task.h</label>
        <link refid="_2task_8h_source"/>
        <childnode refid="81744" relation="include">
        </childnode>
        <childnode refid="81745" relation="include">
        </childnode>
        <childnode refid="81746" relation="include">
        </childnode>
        <childnode refid="81616" relation="include">
        </childnode>
        <childnode refid="81747" relation="include">
        </childnode>
        <childnode refid="81733" relation="include">
        </childnode>
        <childnode refid="81748" relation="include">
        </childnode>
        <childnode refid="81738" relation="include">
        </childnode>
        <childnode refid="81681" relation="include">
        </childnode>
        <childnode refid="81749" relation="include">
        </childnode>
      </node>
      <node id="82019">
        <label>pxr/imaging/hdPrman/sampleFilter.h</label>
        <link refid="sample_filter_8h_source"/>
      </node>
      <node id="82006">
        <label>pxr/imaging/hd/instancer.h</label>
        <link refid="instancer_8h_source"/>
        <childnode refid="81696" relation="include">
        </childnode>
        <childnode refid="81997" relation="include">
        </childnode>
        <childnode refid="81751" relation="include">
        </childnode>
        <childnode refid="81818" relation="include">
        </childnode>
      </node>
      <node id="81514">
        <label>pxr/usd/usdSkel/skeleton.h</label>
        <link refid="skeleton_8h"/>
        <childnode refid="81515" relation="include">
        </childnode>
        <childnode refid="81476" relation="include">
        </childnode>
        <childnode refid="81396" relation="include">
        </childnode>
      </node>
      <node id="81895">
        <label>pxr/imaging/hd/volumeFieldBindingSchema.h</label>
        <link refid="volume_field_binding_schema_8h_source"/>
      </node>
      <node id="81645">
        <label>pxr/usd/sdf/schemaTypeRegistration.h</label>
        <link refid="schema_type_registration_8h_source"/>
      </node>
      <node id="81771">
        <label>pxr/imaging/hio/glslfxConfig.h</label>
        <link refid="glslfx_config_8h"/>
        <childnode refid="81772" relation="include">
        </childnode>
      </node>
      <node id="81360">
        <label>pxr/usdImaging/usdImaging/cylinderAdapter.h</label>
        <link refid="cylinder_adapter_8h"/>
      </node>
      <node id="81525">
        <label>pxr/usd/usdVol/fieldAsset.h</label>
        <link refid="field_asset_8h"/>
        <childnode refid="81526" relation="include">
        </childnode>
        <childnode refid="81527" relation="include">
        </childnode>
      </node>
      <node id="81957">
        <label>pxr/imaging/hdPrman/coordSysPrimSceneIndexPlugin.h</label>
        <link refid="coord_sys_prim_scene_index_plugin_8h_source"/>
      </node>
      <node id="81585">
        <label>pxr/usd/usd/resolveInfo.h</label>
        <link refid="resolve_info_8h"/>
        <childnode refid="81534" relation="include">
        </childnode>
        <childnode refid="81487" relation="include">
        </childnode>
      </node>
      <node id="81396">
        <label>pxr/usdImaging/usdSkelImaging/skeletonAdapter.h</label>
        <link refid="skeleton_adapter_8h_source"/>
      </node>
      <node id="81931">
        <label>pxr/usdImaging/usdImaging/rerootingSceneIndex.h</label>
        <link refid="rerooting_scene_index_8h_source"/>
      </node>
      <node id="81353">
        <label>pxr/usdImaging/usdImaging/drawModeAdapter.h</label>
        <link refid="draw_mode_adapter_8h_source"/>
      </node>
      <node id="81858">
        <label>pxr/imaging/hd/instanceSchema.h</label>
        <link refid="instance_schema_8h_source"/>
      </node>
      <node id="81328">
        <label>pxr/base/tf/diagnosticBase.h</label>
        <link refid="diagnostic_base_8h"/>
        <childnode refid="81329" relation="include">
        </childnode>
        <childnode refid="81632" relation="include">
        </childnode>
        <childnode refid="81633" relation="include">
        </childnode>
      </node>
      <node id="81497">
        <label>pxr/usd/usdGeom/cube.h</label>
        <link refid="cube_8h"/>
        <childnode refid="81345" relation="include">
        </childnode>
      </node>
      <node id="81748">
        <label>pxr/imaging/hdx/presentTask.h</label>
        <link refid="present_task_8h_source"/>
      </node>
      <node id="81632">
        <label>pxr/base/tf/status.h</label>
        <link refid="status_8h_source"/>
        <childnode refid="81330" relation="include">
        </childnode>
      </node>
      <node id="81464">
        <label>pxr/usd/usdPhysics/massAPI.h</label>
        <link refid="mass_a_p_i_8h"/>
      </node>
      <node id="81515">
        <label>pxr/usd/usdSkel/binding.h</label>
        <link refid="usd_2usd_skel_2binding_8h"/>
        <childnode refid="81516" relation="include">
        </childnode>
        <childnode refid="81518" relation="include">
        </childnode>
        <childnode refid="81396" relation="include">
        </childnode>
      </node>
      <node id="81581">
        <label>pxr/usdImaging/usdImaging/materialBindingAPIAdapter.h</label>
        <link refid="material_binding_a_p_i_adapter_8h_source"/>
      </node>
      <node id="82025">
        <label>pxr/imaging/hdSt/hioConversions.h</label>
        <link refid="hio_conversions_8h_source"/>
      </node>
      <node id="81761">
        <label>pxr/imaging/hdSt/material.h</label>
        <link refid="imaging_2hd_st_2material_8h_source"/>
      </node>
      <node id="81762">
        <label>pxr/imaging/hdSt/renderPassShader.h</label>
        <link refid="render_pass_shader_8h_source"/>
      </node>
      <node id="81424">
        <label>pxr/usd/usdRender/pass.h</label>
        <link refid="pass_8h"/>
      </node>
      <node id="81991">
        <label>pxr/imaging/hdSt/field.h</label>
        <link refid="t_2field_8h_source"/>
      </node>
      <node id="81712">
        <label>pxr/imaging/hd/rprim.h</label>
        <link refid="rprim_8h_source"/>
        <childnode refid="81713" relation="include">
        </childnode>
        <childnode refid="81715" relation="include">
        </childnode>
        <childnode refid="81718" relation="include">
        </childnode>
        <childnode refid="81720" relation="include">
        </childnode>
        <childnode refid="81671" relation="include">
        </childnode>
        <childnode refid="81672" relation="include">
        </childnode>
        <childnode refid="81722" relation="include">
        </childnode>
        <childnode refid="81675" relation="include">
        </childnode>
        <childnode refid="81723" relation="include">
        </childnode>
        <childnode refid="81347" relation="include">
        </childnode>
      </node>
      <node id="82020">
        <label>pxr/imaging/hdPrman/lightFilter.h</label>
        <link refid="imaging_2hd_prman_2light_filter_8h_source"/>
      </node>
      <node id="81999">
        <label>pxr/imaging/hdSt/extCompCpuComputation.h</label>
        <link refid="ext_comp_cpu_computation_8h_source"/>
      </node>
      <node id="81792">
        <label>pxr/usd/sdr/shaderNode.h</label>
        <link refid="shader_node_8h"/>
        <childnode refid="81791" relation="include">
        </childnode>
        <childnode refid="81793" relation="include">
        </childnode>
        <childnode refid="81474" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
      </node>
      <node id="81820">
        <label>pxr/imaging/hdSt/drawTargetRenderPassState.h</label>
        <link refid="draw_target_render_pass_state_8h_source"/>
        <childnode refid="81819" relation="include">
        </childnode>
      </node>
      <node id="81668">
        <label>pxr/usd/usdSkel/topology.h</label>
        <link refid="usd_2usd_skel_2topology_8h"/>
        <childnode refid="81514" relation="include">
        </childnode>
      </node>
      <node id="82034">
        <label>pxr/usd/sdf/pyMapEditProxy.h</label>
        <link refid="py_map_edit_proxy_8h"/>
      </node>
      <node id="81710">
        <label>pxr/imaging/hd/extComputationUtils.h</label>
        <link refid="ext_computation_utils_8h_source"/>
      </node>
      <node id="81474">
        <label>pxr/usd/usdShade/nodeDefAPI.h</label>
        <link refid="node_def_a_p_i_8h"/>
        <childnode refid="81475" relation="include">
        </childnode>
        <childnode refid="81422" relation="include">
        </childnode>
      </node>
      <node id="81989">
        <label>pxr/imaging/hd/bprim.h</label>
        <link refid="bprim_8h_source"/>
        <childnode refid="81990" relation="include">
        </childnode>
        <childnode refid="81992" relation="include">
        </childnode>
        <childnode refid="81704" relation="include">
        </childnode>
      </node>
      <node id="81641">
        <label>pxr/base/vt/value.h</label>
        <link refid="vt_2value_8h_source"/>
        <childnode refid="81642" relation="include">
        </childnode>
        <childnode refid="81782" relation="include">
        </childnode>
        <childnode refid="81783" relation="include">
        </childnode>
        <childnode refid="81336" relation="include">
        </childnode>
        <childnode refid="81784" relation="include">
        </childnode>
        <childnode refid="81785" relation="include">
        </childnode>
        <childnode refid="81786" relation="include">
        </childnode>
        <childnode refid="81787" relation="include">
        </childnode>
        <childnode refid="81788" relation="include">
        </childnode>
        <childnode refid="81649" relation="include">
        </childnode>
        <childnode refid="81794" relation="include">
        </childnode>
        <childnode refid="81650" relation="include">
        </childnode>
        <childnode refid="81400" relation="include">
        </childnode>
        <childnode refid="81619" relation="include">
        </childnode>
        <childnode refid="81655" relation="include">
        </childnode>
        <childnode refid="81795" relation="include">
        </childnode>
        <childnode refid="81803" relation="include">
        </childnode>
        <childnode refid="81801" relation="include">
        </childnode>
        <childnode refid="81802" relation="include">
        </childnode>
        <childnode refid="81623" relation="include">
        </childnode>
        <childnode refid="81644" relation="include">
        </childnode>
        <childnode refid="81664" relation="include">
        </childnode>
        <childnode refid="81645" relation="include">
        </childnode>
        <childnode refid="81651" relation="include">
        </childnode>
        <childnode refid="81646" relation="include">
        </childnode>
        <childnode refid="81677" relation="include">
        </childnode>
        <childnode refid="81793" relation="include">
        </childnode>
        <childnode refid="81804" relation="include">
        </childnode>
        <childnode refid="81405" relation="include">
        </childnode>
        <childnode refid="81534" relation="include">
        </childnode>
        <childnode refid="81406" relation="include">
        </childnode>
        <childnode refid="81408" relation="include">
        </childnode>
        <childnode refid="81429" relation="include">
        </childnode>
        <childnode refid="81533" relation="include">
        </childnode>
        <childnode refid="81569" relation="include">
        </childnode>
        <childnode refid="81404" relation="include">
        </childnode>
        <childnode refid="81536" relation="include">
        </childnode>
        <childnode refid="81503" relation="include">
        </childnode>
        <childnode refid="81492" relation="include">
        </childnode>
        <childnode refid="81519" relation="include">
        </childnode>
        <childnode refid="81494" relation="include">
        </childnode>
        <childnode refid="81495" relation="include">
        </childnode>
        <childnode refid="81496" relation="include">
        </childnode>
        <childnode refid="81497" relation="include">
        </childnode>
        <childnode refid="81502" relation="include">
        </childnode>
        <childnode refid="81498" relation="include">
        </childnode>
        <childnode refid="81499" relation="include">
        </childnode>
        <childnode refid="81493" relation="include">
        </childnode>
        <childnode refid="81504" relation="include">
        </childnode>
        <childnode refid="81537" relation="include">
        </childnode>
        <childnode refid="81506" relation="include">
        </childnode>
        <childnode refid="81430" relation="include">
        </childnode>
        <childnode refid="81431" relation="include">
        </childnode>
        <childnode refid="81505" relation="include">
        </childnode>
        <childnode refid="81507" relation="include">
        </childnode>
        <childnode refid="81500" relation="include">
        </childnode>
        <childnode refid="81501" relation="include">
        </childnode>
        <childnode refid="81511" relation="include">
        </childnode>
        <childnode refid="81508" relation="include">
        </childnode>
        <childnode refid="81432" relation="include">
        </childnode>
        <childnode refid="81538" relation="include">
        </childnode>
        <childnode refid="81509" relation="include">
        </childnode>
        <childnode refid="81539" relation="include">
        </childnode>
        <childnode refid="81449" relation="include">
        </childnode>
        <childnode refid="81522" relation="include">
        </childnode>
        <childnode refid="81491" relation="include">
        </childnode>
        <childnode refid="81450" relation="include">
        </childnode>
        <childnode refid="81451" relation="include">
        </childnode>
        <childnode refid="81410" relation="include">
        </childnode>
        <childnode refid="81411" relation="include">
        </childnode>
        <childnode refid="81412" relation="include">
        </childnode>
        <childnode refid="81417" relation="include">
        </childnode>
        <childnode refid="81418" relation="include">
        </childnode>
        <childnode refid="81419" relation="include">
        </childnode>
        <childnode refid="81420" relation="include">
        </childnode>
        <childnode refid="81409" relation="include">
        </childnode>
        <childnode refid="81421" relation="include">
        </childnode>
        <childnode refid="81452" relation="include">
        </childnode>
        <childnode refid="81453" relation="include">
        </childnode>
        <childnode refid="81454" relation="include">
        </childnode>
        <childnode refid="81416" relation="include">
        </childnode>
        <childnode refid="81475" relation="include">
        </childnode>
        <childnode refid="81422" relation="include">
        </childnode>
        <childnode refid="81413" relation="include">
        </childnode>
        <childnode refid="81414" relation="include">
        </childnode>
        <childnode refid="81455" relation="include">
        </childnode>
        <childnode refid="81456" relation="include">
        </childnode>
        <childnode refid="81415" relation="include">
        </childnode>
        <childnode refid="81457" relation="include">
        </childnode>
        <childnode refid="81458" relation="include">
        </childnode>
        <childnode refid="81523" relation="include">
        </childnode>
        <childnode refid="81459" relation="include">
        </childnode>
        <childnode refid="81460" relation="include">
        </childnode>
        <childnode refid="81423" relation="include">
        </childnode>
        <childnode refid="81541" relation="include">
        </childnode>
        <childnode refid="81461" relation="include">
        </childnode>
        <childnode refid="81462" relation="include">
        </childnode>
        <childnode refid="81542" relation="include">
        </childnode>
        <childnode refid="81540" relation="include">
        </childnode>
        <childnode refid="81463" relation="include">
        </childnode>
        <childnode refid="81464" relation="include">
        </childnode>
        <childnode refid="81465" relation="include">
        </childnode>
        <childnode refid="81466" relation="include">
        </childnode>
        <childnode refid="81543" relation="include">
        </childnode>
        <childnode refid="81544" relation="include">
        </childnode>
        <childnode refid="81467" relation="include">
        </childnode>
        <childnode refid="81546" relation="include">
        </childnode>
        <childnode refid="81545" relation="include">
        </childnode>
        <childnode refid="81512" relation="include">
        </childnode>
        <childnode refid="81547" relation="include">
        </childnode>
        <childnode refid="81424" relation="include">
        </childnode>
        <childnode refid="81549" relation="include">
        </childnode>
        <childnode refid="81550" relation="include">
        </childnode>
        <childnode refid="81548" relation="include">
        </childnode>
        <childnode refid="81551" relation="include">
        </childnode>
        <childnode refid="81552" relation="include">
        </childnode>
        <childnode refid="81468" relation="include">
        </childnode>
        <childnode refid="81425" relation="include">
        </childnode>
        <childnode refid="81469" relation="include">
        </childnode>
        <childnode refid="81433" relation="include">
        </childnode>
        <childnode refid="81470" relation="include">
        </childnode>
        <childnode refid="81473" relation="include">
        </childnode>
        <childnode refid="81471" relation="include">
        </childnode>
        <childnode refid="81426" relation="include">
        </childnode>
        <childnode refid="81474" relation="include">
        </childnode>
        <childnode refid="81553" relation="include">
        </childnode>
        <childnode refid="81554" relation="include">
        </childnode>
        <childnode refid="81555" relation="include">
        </childnode>
        <childnode refid="81476" relation="include">
        </childnode>
        <childnode refid="81556" relation="include">
        </childnode>
        <childnode refid="81513" relation="include">
        </childnode>
        <childnode refid="81514" relation="include">
        </childnode>
        <childnode refid="81558" relation="include">
        </childnode>
        <childnode refid="81477" relation="include">
        </childnode>
        <childnode refid="81478" relation="include">
        </childnode>
        <childnode refid="81567" relation="include">
        </childnode>
        <childnode refid="81526" relation="include">
        </childnode>
        <childnode refid="81525" relation="include">
        </childnode>
        <childnode refid="81524" relation="include">
        </childnode>
        <childnode refid="81527" relation="include">
        </childnode>
        <childnode refid="81510" relation="include">
        </childnode>
        <childnode refid="81805" relation="include">
        </childnode>
        <childnode refid="81809" relation="include">
        </childnode>
        <childnode refid="81810" relation="include">
        </childnode>
        <childnode refid="81811" relation="include">
        </childnode>
        <childnode refid="81687" relation="include">
        </childnode>
        <childnode refid="81827" relation="include">
        </childnode>
        <childnode refid="81976" relation="include">
        </childnode>
        <childnode refid="81977" relation="include">
        </childnode>
        <childnode refid="81710" relation="include">
        </childnode>
        <childnode refid="81979" relation="include">
        </childnode>
        <childnode refid="81983" relation="include">
        </childnode>
        <childnode refid="81984" relation="include">
        </childnode>
        <childnode refid="81806" relation="include">
        </childnode>
        <childnode refid="81708" relation="include">
        </childnode>
        <childnode refid="81725" relation="include">
        </childnode>
        <childnode refid="81986" relation="include">
        </childnode>
        <childnode refid="81988" relation="include">
        </childnode>
        <childnode refid="81996" relation="include">
        </childnode>
        <childnode refid="81751" relation="include">
        </childnode>
        <childnode refid="82022" relation="include">
        </childnode>
        <childnode refid="81999" relation="include">
        </childnode>
        <childnode refid="81756" relation="include">
        </childnode>
        <childnode refid="81711" relation="include">
        </childnode>
        <childnode refid="81682" relation="include">
        </childnode>
        <childnode refid="81773" relation="include">
        </childnode>
        <childnode refid="82029" relation="include">
        </childnode>
        <childnode refid="81345" relation="include">
        </childnode>
        <childnode refid="82031" relation="include">
        </childnode>
      </node>
      <node id="82043">
        <label>pxr/imaging/glf/bindingMap.h</label>
        <link refid="binding_map_8h"/>
      </node>
      <node id="81602">
        <label>pxr/usd/usd/editContext.h</label>
        <link refid="edit_context_8h_source"/>
        <childnode refid="81603" relation="include">
        </childnode>
      </node>
      <node id="81395">
        <label>pxr/usdImaging/usdRiPxrImaging/pxrSampleFilterAdapter.h</label>
        <link refid="pxr_sample_filter_adapter_8h"/>
      </node>
      <node id="81793">
        <label>pxr/usd/sdr/shaderProperty.h</label>
        <link refid="shader_property_8h"/>
      </node>
      <node id="81701">
        <label>pxr/imaging/hdSt/renderDelegate.h</label>
        <link refid="t_2render_delegate_8h_source"/>
      </node>
      <node id="81640">
        <label>pxr/base/tf/scopeDescription.h</label>
        <link refid="scope_description_8h_source"/>
      </node>
      <node id="81887">
        <label>pxr/imaging/hd/sceneGlobalsSchema.h</label>
        <link refid="scene_globals_schema_8h_source"/>
      </node>
      <node id="81576">
        <label>pxr/usdImaging/usdImaging/apiSchemaAdapter.h</label>
        <link refid="api_schema_adapter_8h"/>
        <childnode refid="81577" relation="include">
        </childnode>
        <childnode refid="81578" relation="include">
        </childnode>
        <childnode refid="81579" relation="include">
        </childnode>
        <childnode refid="81580" relation="include">
        </childnode>
        <childnode refid="81581" relation="include">
        </childnode>
      </node>
      <node id="81535">
        <label>pxr/usd/usd/schemaBase.h</label>
        <link refid="schema_base_8h_source"/>
        <childnode refid="81405" relation="include">
        </childnode>
        <childnode refid="81536" relation="include">
        </childnode>
      </node>
      <node id="81736">
        <label>pxr/imaging/hdx/oitResolveTask.h</label>
        <link refid="oit_resolve_task_8h_source"/>
      </node>
      <node id="81652">
        <label>pxr/usd/sdf/accessorHelpers.h</label>
        <link refid="accessor_helpers_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_tf_dictionary_less_than" prot="public">TfDictionaryLessThan</innerclass>
    <innerclass refid="struct_tf_stream_float" prot="public">TfStreamFloat</innerclass>
    <innerclass refid="struct_tf_stream_double" prot="public">TfStreamDouble</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringPrintf</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>TfStringPrintf</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Returns a string formed by a printf()-like specification. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf()</ref></computeroutput> is a memory-safe way of forming a string using printf()-like formatting. For example, <programlisting><codeline><highlight class="normal">string<sp/>formatMsg(const<sp/>string&amp;<sp/>caller,<sp/>int<sp/>i,<sp/>double<sp/>val[])</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>return<sp/>TfStringfPrintf(&quot;%s:<sp/>val[%d]<sp/>=<sp/>%g\n&quot;,<sp/>caller.c_str(),<sp/>i,<sp/>val[i]);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>The function is safe only to the extent that the arguments match the formatting string. In particular, be careful to pass strings themselves into <computeroutput><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf()</ref></computeroutput> as in the above example (i.e. <computeroutput>caller.c_str()</computeroutput> as opposed to just passing <computeroutput>caller</computeroutput>).</para>
<para><simplesect kind="note"><para><computeroutput><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf()</ref></computeroutput> is just a wrapper for <computeroutput><ref refid="group__group__arch___strings_1ga0c5e8e089bfd39d71610f329fd3b4090" kindref="member">ArchStringPrintf()</ref></computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfVStringPrintf</definition>
        <argsstring>(const std::string &amp;fmt, va_list ap)</argsstring>
        <name>TfVStringPrintf</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
<para>Returns a string formed by a printf()-like specification. </para>
        </briefdescription>
        <detaileddescription>
<para><computeroutput><ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf()</ref></computeroutput> is equivalent to <computeroutput><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf()</ref></computeroutput> except that it is called with a <computeroutput>va_list</computeroutput> instead of a variable number of arguments. <computeroutput><ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf()</ref></computeroutput> does not call the <computeroutput>va_end</computeroutput> macro. Consequently, the value of <computeroutput>ap</computeroutput> is undefined after the call. A functions that calls <computeroutput><ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf()</ref></computeroutput> should call <computeroutput>va_end(ap)</computeroutput> itself afterwards.</para>
<para><simplesect kind="note"><para><computeroutput><ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf()</ref></computeroutput> is just a wrapper for <computeroutput>ArchVStringPrintf()</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gac0338d0b229616b6061ee60f971e0dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfVStringPrintf</definition>
        <argsstring>(const char *fmt, va_list ap)</argsstring>
        <name>TfVStringPrintf</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>ap</declname>
        </param>
        <briefdescription>
<para>Bloat-avoidance version of <ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga266a173b9f73e164456b5ff7577fdd9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string TfSafeString</definition>
        <argsstring>(const char *ptr)</argsstring>
        <name>TfSafeString</name>
        <param>
          <type>const char *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
<para>Safely create a std::string from a (possibly NULL) char*. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>ptr</computeroutput> is NULL, the empty string is safely returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="103" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga286f433e8bca5054a868dcbb44786382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string TfIntToString</definition>
        <argsstring>(int i)</argsstring>
        <name>TfIntToString</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Returns the given integer as a string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="108" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaeab03b8ef5e730ae50cd19cacf4fbb65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API double</type>
        <definition>TF_API double TfStringToDouble</definition>
        <argsstring>(const std::string &amp;txt)</argsstring>
        <name>TfStringToDouble</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <briefdescription>
<para>Converts text string to double. </para>
        </briefdescription>
        <detaileddescription>
<para>This method converts strings to floating point numbers. It is similar to libc&apos;s atof(), but performs the conversion much more quickly.</para>
<para>It expects somewhat valid input: it will continue parsing the input until it hits an unrecognized character, as described by the regexp below, and at that point will return the results up to that point.</para>
<para>(-?[0-9]+(.[0-9]*)?|-?.[0-9]+)([eE][-+]?[0-9]+)?</para>
<para>It will not check to see if there is any input at all, or whitespace after the digits. Ie: TfStringToDouble(&quot;&quot;) == 0.0 TfStringToDouble(&quot;blah&quot;) == 0.0 TfStringToDouble(&quot;-&quot;) == -0.0 TfStringToDouble(&quot;1.2foo&quot;) == 1.2</para>
<para><simplesect kind="note"><para><computeroutput>TfStringToDouble</computeroutput> is a wrapper around the extern-c TfStringToDouble </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga60957f94df2a8e584431b0d80b042df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API double</type>
        <definition>TF_API double TfStringToDouble</definition>
        <argsstring>(const char *text)</argsstring>
        <name>TfStringToDouble</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga8fa531c70ccef3fb5fbb75e75091a786" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API double</type>
        <definition>TF_API double TfStringToDouble</definition>
        <argsstring>(const char *text, int len)</argsstring>
        <name>TfStringToDouble</name>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gac87e0d845d3c64b8c756945a376ad22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API long</type>
        <definition>TF_API long TfStringToLong</definition>
        <argsstring>(const std::string &amp;txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToLong</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convert a sequence of digits in <computeroutput>txt</computeroutput> to a long int value. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller is responsible for ensuring that <computeroutput>txt</computeroutput> has content matching:</para>
<para><programlisting><codeline><highlight class="normal">-?[0-9]+</highlight></codeline>
</programlisting></para>
<para>If the digit sequence&apos;s value is out of range, set <computeroutput>*outOfRange</computeroutput> to true (if <computeroutput>outOfRange</computeroutput> is not NULL) and return either std::numeric_limits&lt;long&gt;::min() or max(), whichever is closest to the true value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga4197b90755833d5aa6b46bd84ae2b376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API long</type>
        <definition>TF_API long TfStringToLong</definition>
        <argsstring>(const char *txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToLong</name>
        <param>
          <type>const char *</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gad3f8a26ec832a2f46998c868114d7ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API unsigned long</type>
        <definition>TF_API unsigned long TfStringToULong</definition>
        <argsstring>(const std::string &amp;txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToULong</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convert a sequence of digits in <computeroutput>txt</computeroutput> to an unsigned long value. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller is responsible for ensuring that <computeroutput>txt</computeroutput> has content matching:</para>
<para><programlisting><codeline><highlight class="normal">[0-9]+</highlight></codeline>
</programlisting></para>
<para>If the digit sequence&apos;s value is out of range, set <computeroutput>*outOfRange</computeroutput> to true (if <computeroutput>outOfRange</computeroutput> is not NULL) and return std::numeric_limits&lt;unsigned long&gt;=&quot;&quot;&gt;::max(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gafc7e37af76c24cb746fadbb409f7184b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API unsigned long</type>
        <definition>TF_API unsigned long TfStringToULong</definition>
        <argsstring>(const char *txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToULong</name>
        <param>
          <type>const char *</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga03fa88100e2c0093f0c593acaaa4c396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API int64_t</type>
        <definition>TF_API int64_t TfStringToInt64</definition>
        <argsstring>(const std::string &amp;txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToInt64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convert a sequence of digits in <computeroutput>txt</computeroutput> to an int64_t value. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller must ensure that <computeroutput>txt</computeroutput> has content matching:</para>
<para><programlisting><codeline><highlight class="normal">-?[0-9]+</highlight></codeline>
</programlisting></para>
<para>If the digit sequence&apos;s value is out of range, set <computeroutput>*outOfRange</computeroutput> to true (if <computeroutput>outOfRange</computeroutput> is not NULL) and return either std::numeric_limits&lt;int64_t&gt;::min() or max(), whichever is closest to the true value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga5857c662ea9a36c77f42f7625a913463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API int64_t</type>
        <definition>TF_API int64_t TfStringToInt64</definition>
        <argsstring>(const char *txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToInt64</name>
        <param>
          <type>const char *</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gacc528911e7f5d69e43ef990d4b5bb17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API uint64_t</type>
        <definition>TF_API uint64_t TfStringToUInt64</definition>
        <argsstring>(const std::string &amp;txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToUInt64</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convert a sequence of digits in <computeroutput>txt</computeroutput> to a uint64_t value. </para>
        </briefdescription>
        <detaileddescription>
<para>Caller is responsible for ensuring that <computeroutput>txt</computeroutput> has content matching:</para>
<para><programlisting><codeline><highlight class="normal">[0-9]+</highlight></codeline>
</programlisting></para>
<para>If the digit sequence&apos;s value is out of range, set <computeroutput>*outOfRange</computeroutput> to true (if <computeroutput>outOfRange</computeroutput> is not NULL) and return std::numeric_limits&lt;unsigned long&gt;=&quot;&quot;&gt;::max(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="205" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga1f3aee7ef57cf1b9e48c8dbea3bc5468" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API uint64_t</type>
        <definition>TF_API uint64_t TfStringToUInt64</definition>
        <argsstring>(const char *txt, bool *outOfRange=NULL)</argsstring>
        <name>TfStringToUInt64</name>
        <param>
          <type>const char *</type>
          <declname>txt</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>outOfRange</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga197320d753aa921027df5a3a6ab1adb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TfStringStartsWith</definition>
        <argsstring>(const std::string &amp;s, const char *prefix)</argsstring>
        <name>TfStringStartsWith</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>s</computeroutput> starts with <computeroutput>prefix</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="220" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="220" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gac9acd1b6d56d7ba358910f1cb9f040c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TfStringStartsWith</definition>
        <argsstring>(const std::string &amp;s, const std::string &amp;prefix)</argsstring>
        <name>TfStringStartsWith</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="228" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gacb023dfd25a6ab8b3696e33e50d80549" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TfStringEndsWith</definition>
        <argsstring>(const std::string &amp;s, const char *suffix)</argsstring>
        <name>TfStringEndsWith</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>s</computeroutput> ends with <computeroutput>suffix</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="240" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaa2b1cad632066ef0674fb139fc2f1e0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TfStringEndsWith</definition>
        <argsstring>(const std::string &amp;s, const std::string &amp;suffix)</argsstring>
        <name>TfStringEndsWith</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="248" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga093436e3b1b3109e05899be5f7638e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool TfStringContains</definition>
        <argsstring>(const std::string &amp;s, const char *substring)</argsstring>
        <name>TfStringContains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>substring</declname>
        </param>
        <briefdescription>
<para>Returns true if <computeroutput>s</computeroutput> contains <computeroutput>substring</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga697055ba2baa6c4b5921a60dbbfc0bfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TfStringContains</definition>
        <argsstring>(const std::string &amp;s, const std::string &amp;substring)</argsstring>
        <name>TfStringContains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>substring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="260" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gad451dea1974d5a2a597cd44482e82546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool TfStringContains</definition>
        <argsstring>(const std::string &amp;s, const TfToken &amp;substring)</argsstring>
        <name>TfStringContains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="class_tf_token" kindref="compound">TfToken</ref> &amp;</type>
          <declname>substring</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga2268a5910931796c2e0a53261e6ce7da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringToLower</definition>
        <argsstring>(const std::string &amp;source)</argsstring>
        <name>TfStringToLower</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Makes all characters in <computeroutput>source</computeroutput> lowercase, and returns the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="270" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gae3e7f46e6c7381ec8c93e54918061119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringToUpper</definition>
        <argsstring>(const std::string &amp;source)</argsstring>
        <name>TfStringToUpper</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Makes all characters in <computeroutput>source</computeroutput> uppercase, and returns the result. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gad14e4ee556adf58a4d9712fa45fd28c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringCapitalize</definition>
        <argsstring>(const std::string &amp;source)</argsstring>
        <name>TfStringCapitalize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Returns a copy of the <computeroutput>source</computeroutput> string with only its first character capitalized. </para>
        </briefdescription>
        <detaileddescription>
<para>This emulates the behavior of Python&apos;s <computeroutput>str.capitalize()</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="279" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga27db779aeaabe869b15510d0ab2cdf9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringToLowerAscii</definition>
        <argsstring>(const std::string &amp;source)</argsstring>
        <name>TfStringToLowerAscii</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Locale-independent case folding of [A-Z] for ASCII or UTF-8 encoded <computeroutput>source</computeroutput> strings. </para>
        </briefdescription>
        <detaileddescription>
<para>This can be used for case insensitive matching where one of the strings being compared either known to be ASCII only by specification (like a URI scheme or an explicit token) or where the specification explicitly notes that only [A-Z] will be matched case insensitively.</para>
<para><programlisting><codeline><highlight class="normal">TfStringEndsWith(TfStringToLowerAscii(&quot;ü.JPG&quot;),<sp/>&quot;.jpg&quot;)</highlight></codeline>
</programlisting> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="293" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga18c42c9ff7aab2733dd4966ba8d74151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringTrimLeft</definition>
        <argsstring>(const std::string &amp;s, const char *trimChars=&quot; \n\t\r&quot;)</argsstring>
        <name>TfStringTrimLeft</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trimChars</declname>
          <defval>&quot; \n\t\r&quot;</defval>
        </param>
        <briefdescription>
<para>Trims characters (by default, whitespace) from the left. </para>
        </briefdescription>
        <detaileddescription>
<para>Characters from the beginning of <computeroutput>s</computeroutput> are removed until a character not in <computeroutput>trimChars</computeroutput> is found; the result is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gae7c4f6847ddb76db0e4f5dbb77f94d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringTrimRight</definition>
        <argsstring>(const std::string &amp;s, const char *trimChars=&quot; \n\t\r&quot;)</argsstring>
        <name>TfStringTrimRight</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trimChars</declname>
          <defval>&quot; \n\t\r&quot;</defval>
        </param>
        <briefdescription>
<para>Trims characters (by default, whitespace) from the right. </para>
        </briefdescription>
        <detaileddescription>
<para>Characters at the end of <computeroutput>s</computeroutput> are removed until a character not in <computeroutput>trimChars</computeroutput> is found; the result is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gafe1cb80f75a655f23b7923f02a849b06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringTrim</definition>
        <argsstring>(const std::string &amp;s, const char *trimChars=&quot; \n\t\r&quot;)</argsstring>
        <name>TfStringTrim</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>trimChars</declname>
          <defval>&quot; \n\t\r&quot;</defval>
        </param>
        <briefdescription>
<para>Trims characters (by default, whitespace) from the beginning and end of string. </para>
        </briefdescription>
        <detaileddescription>
<para>Characters at the beginning and end of <computeroutput>s</computeroutput> are removed until a character not in <computeroutput>trimChars</computeroutput> is found; the result is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="317" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gad2bfa0c8e61096bd0321aec28caa2515" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringGetCommonPrefix</definition>
        <argsstring>(std::string a, std::string b)</argsstring>
        <name>TfStringGetCommonPrefix</name>
        <param>
          <type>std::string</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Returns the common prefix of the input strings, if any. </para>
        </briefdescription>
        <detaileddescription>
<para>Copies of the input strings are compared. Returns a new string which is the longest prefix common to both input strings. If the strings have no common prefix, an empty string is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gafd1e0eb3f3e4f9ca32e674330f062697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringGetSuffix</definition>
        <argsstring>(const std::string &amp;name, char delimiter=&apos;.&apos;)</argsstring>
        <name>TfStringGetSuffix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
          <defval>&apos;.&apos;</defval>
        </param>
        <briefdescription>
<para>Returns the suffix of a string. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns characters after the final character <computeroutput>delimiter</computeroutput> (default &quot;.&quot;) of a string. Thus suffix of &quot;abc.def&quot; is &quot;def&quot; using &quot;.&quot; as the delimiter. If the delimiter does not occur, the empty string is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="334" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gac9e93734112b176029a356b304c56767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringGetBeforeSuffix</definition>
        <argsstring>(const std::string &amp;name, char delimiter=&apos;.&apos;)</argsstring>
        <name>TfStringGetBeforeSuffix</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
          <defval>&apos;.&apos;</defval>
        </param>
        <briefdescription>
<para>Returns everything up to the suffix of a string. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns characters before the final character <computeroutput>delimiter</computeroutput> (default &quot;.&quot;) of a string. Thus not-suffix of &quot;abc.def&quot; is &quot;abc&quot; using &quot;.&quot; as the delimiter. If the delimiter does not occur, the original string is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="343" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gadcc90872f80f8023a17118edf91ec75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfGetBaseName</definition>
        <argsstring>(const std::string &amp;fileName)</argsstring>
        <name>TfGetBaseName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Returns the base name of a file (final component of the path). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="347" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaf2d7260aded12055629188966c8f7e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfGetPathName</definition>
        <argsstring>(const std::string &amp;fileName)</argsstring>
        <name>TfGetPathName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Returns the path component of a file (complement of <ref refid="group__group__tf___string_1gadcc90872f80f8023a17118edf91ec75c" kindref="member">TfGetBaseName()</ref>). </para>
        </briefdescription>
        <detaileddescription>
<para>The returned string ends in a &apos;/&apos; (or possibly a &apos;\&apos; on Windows), unless none was found in <computeroutput>fileName</computeroutput>, in which case the empty string is returned. In particular, <computeroutput>TfGetPathName(s)+TfGetBaseName(s)</computeroutput> == <computeroutput>s</computeroutput> for any string <computeroutput>s</computeroutput> (as long as <computeroutput>s</computeroutput> doesn&apos;t end with multiple adjacent slashes, which is illegal). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringReplace</definition>
        <argsstring>(const std::string &amp;source, const std::string &amp;from, const std::string &amp;to)</argsstring>
        <name>TfStringReplace</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
<para>Replaces all occurrences of string <computeroutput>from</computeroutput> with <computeroutput>to</computeroutput> in <computeroutput>source</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a new string which is created by copying <computeroutput>source</computeroutput> and replacing every occurrence of <computeroutput>from</computeroutput> with <computeroutput>to</computeroutput>. Correctly handles the case in which <computeroutput>to</computeroutput> contains <computeroutput>from</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="365" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gacd37bcc74ba568292651ece78d667bb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string TfStringJoin</definition>
        <argsstring>(ForwardIterator begin, ForwardIterator end, const char *separator=&quot; &quot;)</argsstring>
        <name>TfStringJoin</name>
        <param>
          <type>ForwardIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>separator</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
<para>Concatenates the strings (<computeroutput>begin</computeroutput>, <computeroutput>end</computeroutput>), with default separator. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the concatenation of the strings in the range <computeroutput>begin</computeroutput> to <computeroutput>end</computeroutput>, with <computeroutput>separator</computeroutput> (by default, a space) added between each successive pair of strings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="374" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="374" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga2693efcb60908bf5b07caa0786ec000a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringJoin</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;strings, const char *separator=&quot; &quot;)</argsstring>
        <name>TfStringJoin</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>strings</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>separator</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
<para>Concatenates <computeroutput>strings</computeroutput>, with default separator. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the concatenation of the strings in <computeroutput>strings</computeroutput>, with <computeroutput>separator</computeroutput> (by default, a space) added between each successive pair of strings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="408" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga9d739e380be70b26f487bb5476cd07a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringJoin</definition>
        <argsstring>(const std::set&lt; std::string &gt; &amp;strings, const char *separator=&quot; &quot;)</argsstring>
        <name>TfStringJoin</name>
        <param>
          <type>const std::set&lt; std::string &gt; &amp;</type>
          <declname>strings</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>separator</declname>
          <defval>&quot; &quot;</defval>
        </param>
        <briefdescription>
<para>Concatenates <computeroutput>strings</computeroutput>, with default separator. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the concatenation of the strings in <computeroutput>strings</computeroutput>, with <computeroutput>separator</computeroutput> (by default, a space) added between each successive pair of strings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaeb4e5db4f6eaf230ae41ff0159316fa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::vector&lt; std::string &gt;</type>
        <definition>TF_API std::vector&lt;std::string&gt; TfStringSplit</definition>
        <argsstring>(std::string const &amp;src, std::string const &amp;separator)</argsstring>
        <name>TfStringSplit</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>separator</declname>
        </param>
        <briefdescription>
<para>Breaks the given string apart, returning a vector of strings. </para>
        </briefdescription>
        <detaileddescription>
<para>The string <computeroutput>source</computeroutput> is broken apart into individual words, where a word is delimited by the string <computeroutput>separator</computeroutput>. This function behaves like pythons string split method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="425" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gad12791e5ba9776711b996a6faa630d1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::vector&lt; std::string &gt;</type>
        <definition>TF_API std::vector&lt;std::string&gt; TfStringTokenize</definition>
        <argsstring>(const std::string &amp;source, const char *delimiters=&quot; \t\n&quot;)</argsstring>
        <name>TfStringTokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delimiters</declname>
          <defval>&quot; \t\n&quot;</defval>
        </param>
        <briefdescription>
<para>Breaks the given string apart, returning a vector of strings. </para>
        </briefdescription>
        <detaileddescription>
<para>The string <computeroutput>source</computeroutput> is broken apart into individual words, where a word is delimited by the characters in <computeroutput>delimiters</computeroutput>. Delimiters default to white space (space, tab, and newline).</para>
<para>No empty strings are returned: delimiters at the start or end are ignored, consecutive delimiters are treated as though they were one, and an empty input will result in an empty return vector. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="438" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaf315ed978a85fc5db45253354538c924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::set&lt; std::string &gt;</type>
        <definition>TF_API std::set&lt;std::string&gt; TfStringTokenizeToSet</definition>
        <argsstring>(const std::string &amp;source, const char *delimiters=&quot; \t\n&quot;)</argsstring>
        <name>TfStringTokenizeToSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delimiters</declname>
          <defval>&quot; \t\n&quot;</defval>
        </param>
        <briefdescription>
<para>Breaks the given string apart, returning a set of strings. </para>
        </briefdescription>
        <detaileddescription>
<para>Same as TfStringTokenize, except this one returns a set. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="445" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga878abd789ce48a84906f17092b060181" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::vector&lt; std::string &gt;</type>
        <definition>TF_API std::vector&lt;std::string&gt; TfQuotedStringTokenize</definition>
        <argsstring>(const std::string &amp;source, const char *delimiters=&quot; \t\n&quot;, std::string *errors=NULL)</argsstring>
        <name>TfQuotedStringTokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>delimiters</declname>
          <defval>&quot; \t\n&quot;</defval>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errors</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Breaks the given quoted string apart, returning a vector of strings. </para>
        </briefdescription>
        <detaileddescription>
<para>The string <computeroutput>source</computeroutput> is broken apart into individual words, where a word is delimited by the characters in <computeroutput>delimiters</computeroutput>. This function is similar to <computeroutput>TfStringTokenize</computeroutput>, except it considers a quoted string as a single word. The function will preserve quotes that are nested within other quotes or are preceded by a backslash character. <computeroutput>errors</computeroutput>, if provided, contains any error messages. Delimiters default to white space (space, tab, and newline). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaee93c5e6983de60eb856fceb6daa64e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::vector&lt; std::string &gt;</type>
        <definition>TF_API std::vector&lt;std::string&gt; TfMatchedStringTokenize</definition>
        <argsstring>(const std::string &amp;source, char openDelimiter, char closeDelimiter, char escapeCharacter=&apos;\0&apos;, std::string *errors=NULL)</argsstring>
        <name>TfMatchedStringTokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char</type>
          <declname>openDelimiter</declname>
        </param>
        <param>
          <type>char</type>
          <declname>closeDelimiter</declname>
        </param>
        <param>
          <type>char</type>
          <declname>escapeCharacter</declname>
          <defval>&apos;\0&apos;</defval>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errors</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Breaks the given string apart by matching delimiters. </para>
        </briefdescription>
        <detaileddescription>
<para>The string <computeroutput>source</computeroutput> is broken apart into individual words, where a word begins with <computeroutput>openDelimiter</computeroutput> and ends with a matching <computeroutput>closeDelimiter</computeroutput>. Any delimiters within the matching delimiters become part of the word, and anything outside matching delimiters gets dropped. For example, <computeroutput>TfMatchedStringTokenize</computeroutput>(&quot;{a} string {to {be} split}&quot;, &apos;{&apos;, &apos;}&apos;) would return a vector containing &quot;a&quot; and &quot;to {be} split&quot;. If <computeroutput>openDelimiter</computeroutput> and <computeroutput>closeDelimiter</computeroutput> cannot be the same. <computeroutput>errors</computeroutput>, if provided, contains any error messages. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="475" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga989b2d5332b2b1b5a869eba7062a4429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; TfMatchedStringTokenize</definition>
        <argsstring>(const std::string &amp;source, char openDelimiter, char closeDelimiter, std::string *errors)</argsstring>
        <name>TfMatchedStringTokenize</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>char</type>
          <declname>openDelimiter</declname>
        </param>
        <param>
          <type>char</type>
          <declname>closeDelimiter</declname>
        </param>
        <param>
          <type>std::string *</type>
          <declname>errors</declname>
        </param>
        <briefdescription>
<para>This overloaded version of <computeroutput>TfMatchedStringTokenize</computeroutput> does not take an <computeroutput>escapeCharacter</computeroutput> parameter but does take. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>errors.</parametername>
</parameternamelist>
<parameterdescription>
<para>It allows <computeroutput>TfMatchedStringTokenize</computeroutput> to be called with or without an <computeroutput>escapeCharacter</computeroutput> and with or without <computeroutput>errors</computeroutput>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="489" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="489" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string TfStringify</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>TfStringify</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Convert an arbitrary type into a string. </para>
        </briefdescription>
        <detaileddescription>
<para>Use the type&apos;s stream output operator to convert it into a string. You are free to use the stream operators in <ref refid="ostream_methods_8h" kindref="compound">ostreamMethods.h</ref>, but are not required to do so. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="572" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="572" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga58598a7ac8a668999f3eb636fb829fa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringify</definition>
        <argsstring>(bool v)</argsstring>
        <name>TfStringify</name>
        <param>
          <type>bool</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="585" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gad579d7a6cc3940fdf0f68f112fba50cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringify</definition>
        <argsstring>(std::string const &amp;)</argsstring>
        <name>TfStringify</name>
        <param>
          <type>std::string const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gae8052dd5f6567ee32be0c031babd977d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringify</definition>
        <argsstring>(float)</argsstring>
        <name>TfStringify</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="589" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaae9cf24d4c04b84f808cc62fe7c8e5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringify</definition>
        <argsstring>(double)</argsstring>
        <name>TfStringify</name>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="591" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga57115176ec4d2251da17677287347dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API bool</type>
        <definition>TF_API bool TfDoubleToString</definition>
        <argsstring>(double d, char *buffer, int len, bool emitTrailingZero)</argsstring>
        <name>TfDoubleToString</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>emitTrailingZero</declname>
        </param>
        <briefdescription>
<para>Writes the string representation of <computeroutput>d</computeroutput> to <computeroutput>buffer</computeroutput> of length <computeroutput>len</computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>emitTrailingZero</computeroutput> is true, the string representation will end with .0 in the case where d is an integer otherwise it will be omitted. The buffer length must be at least 25 in order to ensure that all doubles values can be represented. Returns whether the conversion was successful. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="599" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaa6643f7d1a1e3913862212d5fef53303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::ostream &amp;</type>
        <definition>TF_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, TfStreamFloat t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="struct_tf_stream_float" kindref="compound">TfStreamFloat</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaf5ac1b82b3e090927a465671db89fd25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::ostream &amp;</type>
        <definition>TF_API std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, TfStreamDouble t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="struct_tf_stream_double" kindref="compound">TfStreamDouble</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="622" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga1c7135a04eb120c2b29104d10524e9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T TfUnstringify</definition>
        <argsstring>(const std::string &amp;instring, bool *status=NULL)</argsstring>
        <name>TfUnstringify</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>instring</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>status</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Convert a string to an arbitrary type. </para>
        </briefdescription>
        <detaileddescription>
<para>Use the type&apos;s stream input operator to get it from a string. If <computeroutput>status</computeroutput> is non-NULL and <computeroutput>instring</computeroutput> cannot be converted to a <computeroutput>T</computeroutput>, <computeroutput>*status</computeroutput> is set to <computeroutput>false</computeroutput>; otherwise, <computeroutput>*status</computeroutput> is not modified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="631" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="631" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga1bf0a426bf874f8f887f64abc38b0388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>TF_API bool</type>
        <definition>TF_API bool TfUnstringify</definition>
        <argsstring>(const std::string &amp;instring, bool *status)</argsstring>
        <name>TfUnstringify</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>instring</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Convert a string to an arbitrary type. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Use the type&apos;s stream input operator to get it from a string. If <computeroutput>status</computeroutput> is non-NULL and <computeroutput>instring</computeroutput> cannot be converted to a <computeroutput>T</computeroutput>, <computeroutput>*status</computeroutput> is set to <computeroutput>false</computeroutput>; otherwise, <computeroutput>*status</computeroutput> is not modified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="644" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="631" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga1bf0a426bf874f8f887f64abc38b0388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfUnstringify</definition>
        <argsstring>(const std::string &amp;instring, bool *status)</argsstring>
        <name>TfUnstringify</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>instring</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Convert a string to an arbitrary type. </para>
        </briefdescription>
        <detaileddescription>
<para>This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts.</para>
<para>Use the type&apos;s stream input operator to get it from a string. If <computeroutput>status</computeroutput> is non-NULL and <computeroutput>instring</computeroutput> cannot be converted to a <computeroutput>T</computeroutput>, <computeroutput>*status</computeroutput> is set to <computeroutput>false</computeroutput>; otherwise, <computeroutput>*status</computeroutput> is not modified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="648" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="631" bodyend="639"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga7db15f80d51dbb6182376c689b86cb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringGlobToRegex</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>TfStringGlobToRegex</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Returns a string with glob characters converted to their regular expression equivalents. </para>
        </briefdescription>
        <detaileddescription>
<para>Currently, this transforms strings by replacing all instances of &apos;.&apos; with &apos;.&apos;, &apos;*&apos; with &apos;.*&apos;, and &apos;?&apos; with &apos;.&apos;, in that order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gab6646faf6bcb393bab4d0e7deffa63c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfEscapeString</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>TfEscapeString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Process escape sequences in ANSI C string constants. </para>
        </briefdescription>
        <detaileddescription>
<para>The following escape sequences are accepted:</para>
<para><itemizedlist>
<listitem><para>\\: backslash </para>
</listitem>
<listitem><para>\a: ring the bell </para>
</listitem>
<listitem><para>\b: backspace </para>
</listitem>
<listitem><para>\f: form feed </para>
</listitem>
<listitem><para>\n: new line </para>
</listitem>
<listitem><para>\r: carriage return </para>
</listitem>
<listitem><para>\t: tab </para>
</listitem>
<listitem><para>\v: vertical tab </para>
</listitem>
<listitem><para>\xdd: hex constant </para>
</listitem>
<listitem><para>\ddd: octal constant</para>
</listitem>
</itemizedlist>
So, if the two-character sequence &quot;\\n&quot; appears in the string, it is replaced by an actual newline. Each hex and octal constant translates into one character in the output string. Hex constants can be up to 2 digits, octal constants can be up to 3 digits. Both are terminated by a character that is not a valid constant. Note that it is good practice to encode hex and octal constants with maximum width (2 and 3 digits, respectively) using leading zeroes if necessary. This avoids problems where characters after the hex/octal constant that shouldn&apos;t be part of the constant get interpreted as part of it. For example, the sequence &quot;\x2defaced&quot; will produce the characters &quot;-efaced&quot; when what was probably intended was the character 0x02 (STX) followed by &quot;defaced&quot;. Illegal escape sequences are replaced by the character following the backslash, so the two character sequence &quot;\\c&quot; would become &quot;c&quot;. Processing continues until the input hits a NUL character in the input string - anything appearing after the NUL will be ignored. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga40fe85ada23efac4548638f78085e987" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API void</type>
        <definition>TF_API void TfEscapeStringReplaceChar</definition>
        <argsstring>(const char **in, char **out)</argsstring>
        <name>TfEscapeStringReplaceChar</name>
        <param>
          <type>const char **</type>
          <declname>in</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="690" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaa6e041049a2367beb8cbd7c8efee5c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfStringCatPaths</definition>
        <argsstring>(const std::string &amp;prefix, const std::string &amp;suffix)</argsstring>
        <name>TfStringCatPaths</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>suffix</declname>
        </param>
        <briefdescription>
<para>Concatenate two strings containing &apos;/&apos; and &apos;..&apos; tokens like a file path or scope name. </para>
        </briefdescription>
        <detaileddescription>
<para>Tokenize the input strings using a &apos;/&apos; delimiter. Look for &apos;..&apos; tokens in the suffix and construct the appropriate result.</para>
<para>Examples:</para>
<para><itemizedlist>
<listitem><para>TfStringCatPaths( &quot;foo/bar&quot;, &quot;jive&quot; ) =&gt; &quot;foo/bar/jive&quot; </para>
</listitem>
<listitem><para>TfStringCatPaths( &quot;foo/bar&quot;, &quot;../jive&quot; ) =&gt; &quot;foo/jive&quot; </para>
</listitem>
</itemizedlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="703" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaa129b294af3f68d01477d430b70d40c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool TfIsValidIdentifier</definition>
        <argsstring>(std::string const &amp;identifier)</argsstring>
        <name>TfIsValidIdentifier</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
<para>Test whether <emphasis>identifier</emphasis> is valid. </para>
        </briefdescription>
        <detaileddescription>
<para>An identifier is valid if it follows the C/Python identifier convention; that is, it must be at least one character long, must start with a letter or underscore, and must contain only letters, underscores, and numerals. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="712" column="1" bodyfile="pxr/base/tf/stringUtils.h" bodystart="712" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1ga68e587cc7f9f5a5dd3ae8f03dcffe15c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfMakeValidIdentifier</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>TfMakeValidIdentifier</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Produce a valid identifier (see TfIsValidIdentifier) from <computeroutput>in</computeroutput> by replacing invalid characters with &apos;_&apos;. </para>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>in</computeroutput> is empty, return &quot;_&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="732" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__group__tf___string_1gaf0fabf3c64bda983fe69edea41ac87f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>TF_API std::string</type>
        <definition>TF_API std::string TfGetXmlEscapedString</definition>
        <argsstring>(const std::string &amp;in)</argsstring>
        <name>TfGetXmlEscapedString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Escapes characters in <emphasis>in</emphasis> so that they are valid XML. </para>
        </briefdescription>
        <detaileddescription>
<para>Returns the name with special characters (&amp;, &lt;, &gt;, ", &apos;) replaced with the corresponding escape sequences. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="pxr/base/tf/stringUtils.h" line="739" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Definitions of basic string utilities in tf. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2016<sp/>Pixar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;Apache<sp/>License&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>the<sp/>following<sp/>modification;<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compliance<sp/>with<sp/>the<sp/>Apache<sp/>License<sp/>and<sp/>the<sp/>following<sp/>modification<sp/>to<sp/>it:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Section<sp/>6.<sp/>Trademarks.<sp/>is<sp/>deleted<sp/>and<sp/>replaced<sp/>with:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>6.<sp/>Trademarks.<sp/>This<sp/>License<sp/>does<sp/>not<sp/>grant<sp/>permission<sp/>to<sp/>use<sp/>the<sp/>trade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>names,<sp/>trademarks,<sp/>service<sp/>marks,<sp/>or<sp/>product<sp/>names<sp/>of<sp/>the<sp/>Licensor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>and<sp/>its<sp/>affiliates,<sp/>except<sp/>as<sp/>required<sp/>to<sp/>comply<sp/>with<sp/>Section<sp/>4(c)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>the<sp/>License<sp/>and<sp/>to<sp/>reproduce<sp/>the<sp/>content<sp/>of<sp/>the<sp/>NOTICE<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>Apache<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>Apache<sp/>License<sp/>with<sp/>the<sp/>above<sp/>modification<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.<sp/>See<sp/>the<sp/>Apache<sp/>License<sp/>for<sp/>the<sp/>specific</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>language<sp/>governing<sp/>permissions<sp/>and<sp/>limitations<sp/>under<sp/>the<sp/>Apache<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PXR_BASE_TF_STRING_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PXR_BASE_TF_STRING_UTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pxr_8h" kindref="compound">pxr/pxr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="attributes_8h" kindref="compound">pxr/base/arch/attributes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="hints_8h" kindref="compound">pxr/base/arch/hints.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inttypes_8h" kindref="compound">pxr/base/arch/inttypes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pxr/base/tf/api.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="enum_8h" kindref="compound">pxr/base/tf/enum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">PXR_NAMESPACE_OPEN_SCOPE</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_tf_token" kindref="compound">TfToken</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"></codeline>
<codeline lineno="72"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="73"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="attributes_8h_1aefe15b1de85fc2625127cb0028d2639b" kindref="member">ARCH_PRINTF_FUNCTION</ref>(1,<sp/>2)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>doxygen<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="89"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fmt,<sp/>va_list<sp/>ap);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="94"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga7865a37742a57ae8e151de7eea160920" kindref="member">TfVStringPrintf</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>va_list<sp/>ap)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>doxygen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="attributes_8h_1aefe15b1de85fc2625127cb0028d2639b" kindref="member">ARCH_PRINTF_FUNCTION</ref>(1,<sp/>0)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>doxygen<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="group__group__tf___string_1ga266a173b9f73e164456b5ff7577fdd9d" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="group__group__tf___string_1ga266a173b9f73e164456b5ff7577fdd9d" kindref="member">TfSafeString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ptr)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr<sp/>?<sp/>std::string(ptr)<sp/>:<sp/>std::string();</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="group__group__tf___string_1ga286f433e8bca5054a868dcbb44786382" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="group__group__tf___string_1ga286f433e8bca5054a868dcbb44786382" kindref="member">TfIntToString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gae42be5a0255e4c7ba38d087fd97a97db" kindref="member">TfStringPrintf</ref>(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">TF_API<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gaeab03b8ef5e730ae50cd19cacf4fbb65" kindref="member">TfStringToDouble</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>txt);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">TF_API<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gaeab03b8ef5e730ae50cd19cacf4fbb65" kindref="member">TfStringToDouble</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">TF_API<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gaeab03b8ef5e730ae50cd19cacf4fbb65" kindref="member">TfStringToDouble</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gac87e0d845d3c64b8c756945a376ad22b" kindref="member">TfStringToLong</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gac87e0d845d3c64b8c756945a376ad22b" kindref="member">TfStringToLong</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gad3f8a26ec832a2f46998c868114d7ded" kindref="member">TfStringToULong</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gad3f8a26ec832a2f46998c868114d7ded" kindref="member">TfStringToULong</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="188"><highlight class="normal">int64_t<sp/><ref refid="group__group__tf___string_1ga03fa88100e2c0093f0c593acaaa4c396" kindref="member">TfStringToInt64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="192"><highlight class="normal">int64_t<sp/><ref refid="group__group__tf___string_1ga03fa88100e2c0093f0c593acaaa4c396" kindref="member">TfStringToInt64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="205"><highlight class="normal">uint64_t<sp/><ref refid="group__group__tf___string_1gacc528911e7f5d69e43ef990d4b5bb17a" kindref="member">TfStringToUInt64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="209"><highlight class="normal">uint64_t<sp/><ref refid="group__group__tf___string_1gacc528911e7f5d69e43ef990d4b5bb17a" kindref="member">TfStringToUInt64</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*txt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*outOfRange=NULL);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">Tf_StringStartsWithImpl(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slen,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*prefix,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>prelen)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slen<sp/>&gt;=<sp/>prelen<sp/>&amp;&amp;<sp/>strncmp(s,<sp/>prefix,<sp/>prelen)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="group__group__tf___string_1ga197320d753aa921027df5a3a6ab1adb8" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1ga197320d753aa921027df5a3a6ab1adb8" kindref="member">TfStringStartsWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*prefix)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tf_StringStartsWithImpl(</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.c_str(),<sp/>s.length(),<sp/>prefix,<sp/>strlen(prefix));</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="group__group__tf___string_1gac9acd1b6d56d7ba358910f1cb9f040c4" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1ga197320d753aa921027df5a3a6ab1adb8" kindref="member">TfStringStartsWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>prefix)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1ga197320d753aa921027df5a3a6ab1adb8" kindref="member">TfStringStartsWith</ref>(s,<sp/>prefix.c_str());</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal">Tf_StringEndsWithImpl(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slen,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*suffix,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>suflen)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slen<sp/>&gt;=<sp/>suflen<sp/>&amp;&amp;<sp/>strcmp(s<sp/>+<sp/>(slen<sp/>-<sp/>suflen),<sp/>suffix)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="group__group__tf___string_1gacb023dfd25a6ab8b3696e33e50d80549" refkind="member"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gacb023dfd25a6ab8b3696e33e50d80549" kindref="member">TfStringEndsWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*suffix)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Tf_StringEndsWithImpl(s.c_str(),<sp/>s.length(),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>suffix,<sp/>strlen(suffix));</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="group__group__tf___string_1gaa2b1cad632066ef0674fb139fc2f1e0a" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1gacb023dfd25a6ab8b3696e33e50d80549" kindref="member">TfStringEndsWith</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>suffix)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gacb023dfd25a6ab8b3696e33e50d80549" kindref="member">TfStringEndsWith</ref>(s,<sp/>suffix.c_str());</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="comment">//<sp/>\ingroup<sp/>group_tf_String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1ga093436e3b1b3109e05899be5f7638e9f" kindref="member">TfStringContains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*substring);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="group__group__tf___string_1ga697055ba2baa6c4b5921a60dbbfc0bfb" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1ga093436e3b1b3109e05899be5f7638e9f" kindref="member">TfStringContains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;substring)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1ga093436e3b1b3109e05899be5f7638e9f" kindref="member">TfStringContains</ref>(s,<sp/>substring.c_str());</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1ga093436e3b1b3109e05899be5f7638e9f" kindref="member">TfStringContains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_tf_token" kindref="compound">TfToken</ref>&amp;<sp/>substring);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="270"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga2268a5910931796c2e0a53261e6ce7da" kindref="member">TfStringToLower</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="274"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gae3e7f46e6c7381ec8c93e54918061119" kindref="member">TfStringToUpper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="279"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gad14e4ee556adf58a4d9712fa45fd28c4" kindref="member">TfStringCapitalize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="293"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga27db779aeaabe869b15510d0ab2cdf9b" kindref="member">TfStringToLowerAscii</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="300"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga18c42c9ff7aab2733dd4966ba8d74151" kindref="member">TfStringTrimLeft</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trimChars<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n\t\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="308"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gae7c4f6847ddb76db0e4f5dbb77f94d56" kindref="member">TfStringTrimRight</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trimChars<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n\t\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="317"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gafe1cb80f75a655f23b7923f02a849b06" kindref="member">TfStringTrim</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>trimChars<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\n\t\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="326"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gad2bfa0c8e61096bd0321aec28caa2515" kindref="member">TfStringGetCommonPrefix</ref>(std::string<sp/>a,<sp/>std::string<sp/>b);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="334"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gafd1e0eb3f3e4f9ca32e674330f062697" kindref="member">TfStringGetSuffix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delimiter<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="343"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gac9e93734112b176029a356b304c56767" kindref="member">TfStringGetBeforeSuffix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>delimiter<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="347"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gadcc90872f80f8023a17118edf91ec75c" kindref="member">TfGetBaseName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="357"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gaf2d7260aded12055629188966c8f7e86" kindref="member">TfGetPathName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>fileName);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="365"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gac52faea3628696e9a242bf79cbce4be6" kindref="member">TfStringReplace</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>from,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>to);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>ForwardIterator&gt;</highlight></codeline>
<codeline lineno="374" refid="group__group__tf___string_1gacd37bcc74ba568292651ece78d667bb9" refkind="member"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gacd37bcc74ba568292651ece78d667bb9" kindref="member">TfStringJoin</ref>(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>ForwardIterator<sp/>begin,<sp/>ForwardIterator<sp/>end,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>separator<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(begin<sp/>==<sp/>end)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>std::distance(begin,<sp/>end);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distance<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*begin;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>retVal;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>ForwardIterator<sp/>i<sp/>=<sp/>begin;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>begin;<sp/>i<sp/>!=<sp/>end;<sp/>++i)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>i-&gt;size();</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.reserve(sum<sp/>+<sp/>strlen(separator)<sp/>*<sp/>(distance<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>begin;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>retVal.append(*i);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(++i<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal.append(separator);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal.append(*i);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="408"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gacd37bcc74ba568292651ece78d667bb9" kindref="member">TfStringJoin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;&amp;<sp/>strings,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>separator<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="416"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gacd37bcc74ba568292651ece78d667bb9" kindref="member">TfStringJoin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;std::string&gt;&amp;<sp/>strings,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>separator<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="425"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="group__group__tf___string_1gaeb4e5db4f6eaf230ae41ff0159316fa5" kindref="member">TfStringSplit</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;src,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;separator);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="438"><highlight class="normal">std::vector&lt;std::string&gt;<sp/><ref refid="group__group__tf___string_1gad12791e5ba9776711b996a6faa630d1b" kindref="member">TfStringTokenize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>delimiters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="445"><highlight class="normal">std::set&lt;std::string&gt;<sp/><ref refid="group__group__tf___string_1gaf315ed978a85fc5db45253354538c924" kindref="member">TfStringTokenizeToSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>delimiters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="458"><highlight class="normal">std::vector&lt;std::string&gt;<sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="group__group__tf___string_1ga878abd789ce48a84906f17092b060181" kindref="member">TfQuotedStringTokenize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source,<sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>delimiters<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>*errors<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="474"><highlight class="normal">std::vector&lt;std::string&gt;<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><ref refid="group__group__tf___string_1gaee93c5e6983de60eb856fceb6daa64e4" kindref="member">TfMatchedStringTokenize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source,<sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>openDelimiter,<sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>closeDelimiter,<sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>escapeCharacter<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>*errors<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">std::vector&lt;std::string&gt;<sp/></highlight></codeline>
<codeline lineno="489" refid="group__group__tf___string_1ga989b2d5332b2b1b5a869eba7062a4429" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1gaee93c5e6983de60eb856fceb6daa64e4" kindref="member">TfMatchedStringTokenize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>source,<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>openDelimiter,<sp/></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>closeDelimiter,<sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>*errors)</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1gaee93c5e6983de60eb856fceb6daa64e4" kindref="member">TfMatchedStringTokenize</ref>(source,<sp/>openDelimiter,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closeDelimiter,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/>errors);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="struct_tf_dictionary_less_than" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tf_dictionary_less_than" kindref="compound">TfDictionaryLessThan</ref><sp/>{</highlight></codeline>
<codeline lineno="541" refid="struct_tf_dictionary_less_than_1aaa635e6b9fa9ef664c925f9e76bfb380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_tf_dictionary_less_than_1aaa635e6b9fa9ef664c925f9e76bfb380" kindref="member">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;lhs,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>first<sp/>chars<sp/>first.<sp/><sp/>By<sp/>far,<sp/>it<sp/>is<sp/>most<sp/>common<sp/>that<sp/>these</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>characters<sp/>are<sp/>ASCII<sp/>letters<sp/>that<sp/>differ.<sp/><sp/>It<sp/>is<sp/>very<sp/>rare<sp/>that<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>to<sp/>account<sp/>for<sp/>different<sp/>cases,<sp/>or<sp/>numerical<sp/>comparisons,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UTF-8<sp/>characters<sp/>so<sp/>we<sp/>special-case<sp/>this<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>lhs.c_str()[0],<sp/>r<sp/>=<sp/>rhs.c_str()[0];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bothAscii<sp/>=<sp/>l<sp/>&lt;<sp/>0x80<sp/>&amp;&amp;<sp/>r<sp/>&lt;<sp/>0x80;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>differsIgnoringCase<sp/>=<sp/>(l<sp/>&amp;<sp/>~0x20)<sp/>!=<sp/>(r<sp/>&amp;<sp/>~0x20);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inLetterZone<sp/>=<sp/>(l<sp/>&gt;=<sp/>0x40)<sp/>&amp;&amp;<sp/>(r<sp/>&gt;=<sp/>0x40);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ARCH_LIKELY(bothAscii<sp/>&amp;&amp;<sp/>differsIgnoringCase<sp/>&amp;&amp;<sp/>inLetterZone))<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>bit<sp/>about<sp/>add<sp/>5<sp/>mod<sp/>32<sp/>makes<sp/>it<sp/>so<sp/>that<sp/>&apos;_&apos;<sp/>sorts<sp/>less<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>letters,<sp/>which<sp/>preserves<sp/>existing<sp/>behavior.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((l<sp/>+<sp/>5)<sp/>&amp;<sp/>31)<sp/>&lt;<sp/>((r<sp/>+<sp/>5)<sp/>&amp;<sp/>31);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_LessImpl(lhs,<sp/>rhs);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>TF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_LessImpl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;lhs,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal">};</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="572" refid="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" kindref="member">TfStringify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>v)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_enum&lt;T&gt;::value)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_tf_enum_1a16a13178a4168911d8be66276c3e465b" kindref="member">TfEnum::GetName</ref>(v);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ostringstream<sp/>stream;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>v;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream.str();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">TF_API<sp/>std::string<sp/><ref refid="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" kindref="member">TfStringify</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">TF_API<sp/>std::string<sp/><ref refid="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" kindref="member">TfStringify</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;);</highlight></codeline>
<codeline lineno="589"><highlight class="normal">TF_API<sp/>std::string<sp/><ref refid="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" kindref="member">TfStringify</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="591"><highlight class="normal">TF_API<sp/>std::string<sp/><ref refid="group__group__tf___string_1ga7554a67d6bbf6eae3f12131757f13d36" kindref="member">TfStringify</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">TF_API<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1ga57115176ec4d2251da17677287347dbb" kindref="member">TfDoubleToString</ref>(</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>emitTrailingZero);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="struct_tf_stream_float" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tf_stream_float" kindref="compound">TfStreamFloat</ref><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_tf_stream_float" kindref="compound">TfStreamFloat</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f)<sp/>:<sp/>value(f)<sp/>{}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">};</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal">TF_API<sp/>std::ostream&amp;<sp/><ref refid="group__group__gf___debugging_output_1ga47c5c0767539988532dab982dd69f08d" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>o,<sp/><ref refid="struct_tf_stream_float" kindref="compound">TfStreamFloat</ref><sp/>t);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="struct_tf_stream_double" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tf_stream_double" kindref="compound">TfStreamDouble</ref><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_tf_stream_double" kindref="compound">TfStreamDouble</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d)<sp/>:<sp/>value(d)<sp/>{}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="620"><highlight class="normal">};</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal">TF_API<sp/>std::ostream&amp;<sp/><ref refid="group__group__gf___debugging_output_1ga47c5c0767539988532dab982dd69f08d" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>o,<sp/><ref refid="struct_tf_stream_double" kindref="compound">TfStreamDouble</ref><sp/>t);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal">T</highlight></codeline>
<codeline lineno="631" refid="group__group__tf___string_1ga1bf0a426bf874f8f887f64abc38b0388" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1ga1c7135a04eb120c2b29104d10524e9b7" kindref="member">TfUnstringify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;instring,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>status<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="632"><highlight class="normal">{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>v<sp/>=<sp/>T();</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istringstream<sp/>stream(instring);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>v;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&amp;&amp;<sp/>!stream)</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*status<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">TF_API<sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__group__tf___string_1ga1c7135a04eb120c2b29104d10524e9b7" kindref="member">TfUnstringify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;instring,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>status);</highlight></codeline>
<codeline lineno="646"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="647"><highlight class="normal">TF_API<sp/></highlight></codeline>
<codeline lineno="648"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga1c7135a04eb120c2b29104d10524e9b7" kindref="member">TfUnstringify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;instring,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>status);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal">TF_API<sp/></highlight></codeline>
<codeline lineno="656"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1ga7db15f80d51dbb6182376c689b86cb54" kindref="member">TfStringGlobToRegex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>s);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="comment">//</highlight></codeline>
<codeline lineno="689"><highlight class="comment"></highlight><highlight class="normal">TF_API<sp/>std::string<sp/><ref refid="group__group__tf___string_1gab6646faf6bcb393bab4d0e7deffa63c2" kindref="member">TfEscapeString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;in);</highlight></codeline>
<codeline lineno="690"><highlight class="normal">TF_API<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TfEscapeStringReplaceChar(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>in,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>out);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="703"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gaa6e041049a2367beb8cbd7c8efee5c85" kindref="member">TfStringCatPaths</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;prefix,<sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;suffix<sp/>);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712" refid="group__group__tf___string_1gaa129b294af3f68d01477d430b70d40c8" refkind="member"><highlight class="normal"><ref refid="group__group__tf___string_1gaa129b294af3f68d01477d430b70d40c8" kindref="member">TfIsValidIdentifier</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;identifier)</highlight></codeline>
<codeline lineno="713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>identifier.c_str();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>letter<sp/>=<sp/>[](</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((c-</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>26)<sp/>||<sp/>((c-</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>26);<sp/>};</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>number<sp/>=<sp/>[](</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(c-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">)<sp/>&lt;<sp/>10;<sp/>};</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>under<sp/>=<sp/>[](</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>c)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>*p;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!x<sp/>||<sp/>number(x))<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(letter(x)<sp/>||<sp/>number(x)<sp/>||<sp/>under(x))<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>*p++;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="731"><highlight class="normal">std::string</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><ref refid="group__group__tf___string_1ga68e587cc7f9f5a5dd3ae8f03dcffe15c" kindref="member">TfMakeValidIdentifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;in);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal">TF_API</highlight></codeline>
<codeline lineno="739"><highlight class="normal">std::string<sp/><ref refid="group__group__tf___string_1gaf0fabf3c64bda983fe69edea41ac87f3" kindref="member">TfGetXmlEscapedString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;in);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal">PXR_NAMESPACE_CLOSE_SCOPE</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>PXR_BASE_TF_STRING_UTILS_H<sp/></highlight></codeline>
    </programlisting>
    <location file="pxr/base/tf/stringUtils.h"/>
  </compounddef>
</doxygen>
